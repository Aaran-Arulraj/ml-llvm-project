; ModuleID = 'blender/source/blender/editors/sculpt_paint/sculpt.c'
source_filename = "blender/source/blender/editors/sculpt_paint/sculpt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.GHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type { float, [3 x float], i32, [3 x float], [2 x float], i32, i32, [3 x float]**, [3 x float]**, float**, float**, float, float, [3 x float], [3 x float], i8, i8, float, [2 x float], float, i8, [4 x [4 x float]], %struct.ViewContext*, %struct.Brush*, [3 x float]*, float, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [4 x [4 x float]], [3 x float], i32, [4 x [4 x float]], [4 x [4 x float]], i8, [3 x float], float, %struct.Dial*, [66 x i8], i8, i32, i8, float, i8, [3 x float], [3 x float], %struct.rcti, %struct.rcti }
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.BMEditMesh = type opaque
%struct.Dial = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type { %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, %struct.GPUBuffer*, i32*, %struct.GPUVertPointLink*, i32, %struct.GPUBufferMaterial*, i32, i32, i32, i32, i32, i8 }
%struct.GPUBuffer = type { i32, i8*, i32 }
%struct.GPUVertPointLink = type opaque
%struct.GPUBufferMaterial = type { i32, i32, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.SculptRaycastData = type { %struct.SculptSession*, float*, float*, i8, float, i8 }
%struct.PBVHNode = type opaque
%struct.SculptUndoNode = type { %struct.SculptUndoNode*, %struct.SculptUndoNode*, i32, [66 x i8], i8*, [3 x float]*, [3 x float]*, [3 x i16]*, float*, i32, i32, i32*, i32*, i32, i32, i32, i32*, i32**, %struct.BMLogEntry*, i8, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, [64 x i8] }
%struct.BMLogEntry = type opaque
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.PaintStroke = type opaque
%struct.wmEventHandler = type opaque
%struct.MirrorModifierData = type { %struct.ModifierData, i16, i16, float, %struct.Object* }
%struct.SculptSearchSphereData = type { %struct.Sculpt*, %struct.SculptSession*, float, i8 }
%struct.PBVHVertexIter = type { i32, i32, i32, i32, i32, i32, %struct.CCGElem**, %struct.CCGElem*, %struct.CCGKey*, i32**, i32*, i32*, i32, i32, %struct.MVert*, i32, i32*, float*, %struct.GSetIterator, %struct.GSetIterator, %struct.CustomData*, i32, %struct.MVert*, %struct.BMVert*, float*, i16*, float*, float* }
%struct.GSetIterator = type { %struct.GHashIterator }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.PBVHProxyNode = type { [3 x float]* }
%struct.SculptOrigVertData = type { %struct.BMLog*, %struct.SculptUndoNode*, [3 x float]*, [3 x i16]*, float*, float*, i16*, float }
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.SculptBrushTest = type { float, [3 x float], float, %struct.RegionView3D* }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, %struct.Object*, float*, [64 x i8] }
%struct.CurveModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.DagNode = type opaque
%struct.uiPopupMenu = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.SculptDetailRaycastData = type { float*, float*, i8, float, float }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@__const.sculpt_dyntopo_node_layers_add.layer_id = private unnamed_addr constant [17 x i8] c"_dyntopo_node_id\00", align 16
@CD_MASK_MESH = external dso_local constant i64, align 8
@.str = private unnamed_addr constant [7 x i8] c"Sculpt\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"SCULPT_OT_brush_stroke\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Sculpt a stroke into the geometry\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"ignore_background_click\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Ignore Background Click\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"Clicks on the background do not start the stroke\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.7 = private unnamed_addr constant [13 x i8] c"stroke cache\00", align 1
@__const.sculpt_update_cache_invariants.viewDir = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.8 = private unnamed_addr constant [7 x i8] c"Smooth\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.9 = private unnamed_addr constant [26 x i8] c"sculpt mesh vertices copy\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"Sculpt face norms\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"tmpgrid_co array\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"tmprow_co array\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"tmpgrid_mask array\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"tmprow_mask array\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"tmprow_co\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"tmpgrid_co\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"tmprow_mask\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"tmpgrid_mask\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"Draw Brush\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"Smooth Brush\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"Crease Brush\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Blob Brush\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"Pinch Brush\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"Inflate Brush\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"Grab Brush\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"Nudge Brush\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"Thumb Brush\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"Layer Brush\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"Flatten Brush\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"Clay Brush\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Clay Strips Brush\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"Fill Brush\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"Scrape Brush\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Snake Hook Brush\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"Rotate Brush\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"Mask Brush\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"Simplify Brush\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"Sculpting\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"pen_flip\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"pressure\00", align 1
@__const.calc_local_y.mval_f = private unnamed_addr constant [2 x float] [float 0.000000e+00, float 1.000000e+00], align 4
@do_rotate_brush.flip = internal constant [8 x i32] [i32 1, i32 -1, i32 -1, i32 1, i32 -1, i32 1, i32 1, i32 -1], align 16, !dbg !0
@.str.43 = private unnamed_addr constant [27 x i8] c"flushStrokeDeofrm keyVerts\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"Sculpt Mode\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"SCULPT_OT_sculptmode_toggle\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"Toggle sculpt mode in 3D view\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"sculpt mode data\00", align 1
@.str.48 = private unnamed_addr constant [61 x i8] c"Object has non-uniform scale, sculpting may be unpredictable\00", align 1
@.str.49 = private unnamed_addr constant [58 x i8] c"Object has negative scale, sculpting may be unpredictable\00", align 1
@PAINT_CURSOR_SCULPT = external dso_local constant [3 x i8], align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"Dynamic topology disable\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"Dynamic topology enable\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"sculpt session\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"Set Persistent Base\00", align 1
@.str.54 = private unnamed_addr constant [30 x i8] c"SCULPT_OT_set_persistent_base\00", align 1
@.str.55 = private unnamed_addr constant [53 x i8] c"Reset the copy of the mesh that is being sculpted on\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"Dynamic Topology Toggle\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c"SCULPT_OT_dynamic_topology_toggle\00", align 1
@.str.58 = private unnamed_addr constant [58 x i8] c"Dynamic topology alters the mesh topology while sculpting\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"Warning!\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"Vertex Data Detected!\00", align 1
@.str.61 = private unnamed_addr constant [66 x i8] c"Dyntopo will not preserve vertex colors, UVs, or other customdata\00", align 1
@.str.62 = private unnamed_addr constant [31 x i8] c"Generative Modifiers Detected!\00", align 1
@.str.63 = private unnamed_addr constant [76 x i8] c"Keeping the modifiers will increase polycount when returning to object mode\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"Optimize\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"SCULPT_OT_optimize\00", align 1
@.str.67 = private unnamed_addr constant [50 x i8] c"Recalculate the sculpt BVH to improve performance\00", align 1
@.str.68 = private unnamed_addr constant [11 x i8] c"Symmetrize\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"SCULPT_OT_symmetrize\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"Symmetrize the topology modifications\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"Dynamic topology symmetrize\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"symmetrize input=%avef direction=%i  dist=%f\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"Detail Flood Fill\00", align 1
@.str.74 = private unnamed_addr constant [28 x i8] c"SCULPT_OT_detail_flood_fill\00", align 1
@.str.75 = private unnamed_addr constant [53 x i8] c"Flood fill the mesh with the selected detail setting\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"Dynamic topology flood fill\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"Sample Detail Size\00", align 1
@.str.78 = private unnamed_addr constant [29 x i8] c"SCULPT_OT_sample_detail_size\00", align 1
@.str.79 = private unnamed_addr constant [40 x i8] c"Sample the mesh detail on clicked point\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"Screen Coordinates of sampling\00", align 1
@.str.82 = private unnamed_addr constant [36 x i8] c"Click on the mesh to set the detail\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_sculpt_stroke_get_average(%struct.Object* %ob, float* %stroke) #0 !dbg !5196 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %stroke.addr = alloca float*, align 8
  %fac = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  store float* %stroke, float** %stroke.addr, align 8
  call void @llvm.dbg.declare(metadata float** %stroke.addr, metadata !5201, metadata !DIExpression()), !dbg !5202
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5203
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !5205
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5205
  %last_stroke_valid = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 29, !dbg !5206
  %2 = load i8, i8* %last_stroke_valid, align 8, !dbg !5206
  %conv = zext i8 %2 to i32, !dbg !5203
  %tobool = icmp ne i32 %conv, 0, !dbg !5203
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5207

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5208
  %sculpt1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 2, !dbg !5209
  %4 = load %struct.SculptSession*, %struct.SculptSession** %sculpt1, align 8, !dbg !5209
  %average_stroke_counter = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 32, !dbg !5210
  %5 = load i32, i32* %average_stroke_counter, align 4, !dbg !5210
  %cmp = icmp sgt i32 %5, 0, !dbg !5211
  br i1 %cmp, label %if.then, label %if.else, !dbg !5212

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5213, metadata !DIExpression()), !dbg !5215
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5216
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 2, !dbg !5217
  %7 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !5217
  %average_stroke_counter4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 32, !dbg !5218
  %8 = load i32, i32* %average_stroke_counter4, align 4, !dbg !5218
  %conv5 = sitofp i32 %8 to float, !dbg !5216
  %div = fdiv float 1.000000e+00, %conv5, !dbg !5219
  store float %div, float* %fac, align 4, !dbg !5215
  %9 = load float*, float** %stroke.addr, align 8, !dbg !5220
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5221
  %sculpt6 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 2, !dbg !5222
  %11 = load %struct.SculptSession*, %struct.SculptSession** %sculpt6, align 8, !dbg !5222
  %average_stroke_accum = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 31, !dbg !5223
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %average_stroke_accum, i64 0, i64 0, !dbg !5221
  %12 = load float, float* %fac, align 4, !dbg !5224
  call void @mul_v3_v3fl(float* %9, float* %arraydecay, float %12), !dbg !5225
  br label %if.end, !dbg !5226

if.else:                                          ; preds = %land.lhs.true, %entry
  %13 = load float*, float** %stroke.addr, align 8, !dbg !5227
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5229
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 47, !dbg !5230
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 3, !dbg !5229
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5229
  call void @copy_v3_v3(float* %13, float* %arraydecay7), !dbg !5231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5232
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5233 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5237, metadata !DIExpression()), !dbg !5238
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5239, metadata !DIExpression()), !dbg !5240
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  %0 = load float*, float** %a.addr, align 8, !dbg !5243
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5243
  %1 = load float, float* %arrayidx, align 4, !dbg !5243
  %2 = load float, float* %f.addr, align 4, !dbg !5244
  %mul = fmul float %1, %2, !dbg !5245
  %3 = load float*, float** %r.addr, align 8, !dbg !5246
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5246
  store float %mul, float* %arrayidx1, align 4, !dbg !5247
  %4 = load float*, float** %a.addr, align 8, !dbg !5248
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5248
  %5 = load float, float* %arrayidx2, align 4, !dbg !5248
  %6 = load float, float* %f.addr, align 4, !dbg !5249
  %mul3 = fmul float %5, %6, !dbg !5250
  %7 = load float*, float** %r.addr, align 8, !dbg !5251
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5251
  store float %mul3, float* %arrayidx4, align 4, !dbg !5252
  %8 = load float*, float** %a.addr, align 8, !dbg !5253
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5253
  %9 = load float, float* %arrayidx5, align 4, !dbg !5253
  %10 = load float, float* %f.addr, align 4, !dbg !5254
  %mul6 = fmul float %9, %10, !dbg !5255
  %11 = load float*, float** %r.addr, align 8, !dbg !5256
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !5256
  store float %mul6, float* %arrayidx7, align 4, !dbg !5257
  ret void, !dbg !5258
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5259 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5262, metadata !DIExpression()), !dbg !5263
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  %0 = load float*, float** %a.addr, align 8, !dbg !5266
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5266
  %1 = load float, float* %arrayidx, align 4, !dbg !5266
  %2 = load float*, float** %r.addr, align 8, !dbg !5267
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5267
  store float %1, float* %arrayidx1, align 4, !dbg !5268
  %3 = load float*, float** %a.addr, align 8, !dbg !5269
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5269
  %4 = load float, float* %arrayidx2, align 4, !dbg !5269
  %5 = load float*, float** %r.addr, align 8, !dbg !5270
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5270
  store float %4, float* %arrayidx3, align 4, !dbg !5271
  %6 = load float*, float** %a.addr, align 8, !dbg !5272
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5272
  %7 = load float, float* %arrayidx4, align 4, !dbg !5272
  %8 = load float*, float** %r.addr, align 8, !dbg !5273
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5273
  store float %7, float* %arrayidx5, align 4, !dbg !5274
  ret void, !dbg !5275
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_sculpt_minmax(%struct.bContext* %C, float* %min, float* %max) #0 !dbg !5276 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5287, metadata !DIExpression()), !dbg !5288
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5289
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5290
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5288
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5291
  %tobool = icmp ne %struct.Object* %1, null, !dbg !5291
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5293

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5294
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !5295
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5295
  %tobool1 = icmp ne %struct.SculptSession* %3, null, !dbg !5294
  br i1 %tobool1, label %land.lhs.true2, label %if.else, !dbg !5296

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5297
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !5298
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !5298
  %last_stroke_valid = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 29, !dbg !5299
  %6 = load i8, i8* %last_stroke_valid, align 8, !dbg !5299
  %conv = zext i8 %6 to i32, !dbg !5297
  %tobool4 = icmp ne i32 %conv, 0, !dbg !5297
  br i1 %tobool4, label %if.then, label %if.else, !dbg !5300

if.then:                                          ; preds = %land.lhs.true2
  %7 = load float*, float** %min.addr, align 8, !dbg !5301
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5303
  %sculpt5 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 2, !dbg !5304
  %9 = load %struct.SculptSession*, %struct.SculptSession** %sculpt5, align 8, !dbg !5304
  %last_stroke = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 30, !dbg !5305
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %last_stroke, i64 0, i64 0, !dbg !5303
  call void @copy_v3_v3(float* %7, float* %arraydecay), !dbg !5306
  %10 = load float*, float** %max.addr, align 8, !dbg !5307
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5308
  %sculpt6 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 2, !dbg !5309
  %12 = load %struct.SculptSession*, %struct.SculptSession** %sculpt6, align 8, !dbg !5309
  %last_stroke7 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 30, !dbg !5310
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %last_stroke7, i64 0, i64 0, !dbg !5308
  call void @copy_v3_v3(float* %10, float* %arraydecay8), !dbg !5311
  store i8 1, i8* %retval, align 1, !dbg !5312
  br label %return, !dbg !5312

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !5313
  br label %return, !dbg !5313

return:                                           ; preds = %if.else, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !5315
  ret i8 %13, !dbg !5315
}

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_sculpt_redraw_planes_get([4 x float]* %planes, %struct.ARegion* %ar, %struct.RegionView3D* %rv3d, %struct.Object* %ob) #0 !dbg !5316 {
entry:
  %planes.addr = alloca [4 x float]*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %rv3d.addr = alloca %struct.RegionView3D*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pbvh = alloca %struct.PBVH*, align 8
  %rect = alloca %struct.rcti, align 4
  store [4 x float]* %planes, [4 x float]** %planes.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %planes.addr, metadata !5323, metadata !DIExpression()), !dbg !5324
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5325, metadata !DIExpression()), !dbg !5326
  store %struct.RegionView3D* %rv3d, %struct.RegionView3D** %rv3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d.addr, metadata !5327, metadata !DIExpression()), !dbg !5328
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5329, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.declare(metadata %struct.PBVH** %pbvh, metadata !5331, metadata !DIExpression()), !dbg !5334
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5335
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !5336
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5336
  %pbvh1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 15, !dbg !5337
  %2 = load %struct.PBVH*, %struct.PBVH** %pbvh1, align 8, !dbg !5337
  store %struct.PBVH* %2, %struct.PBVH** %pbvh, align 8, !dbg !5334
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !5338, metadata !DIExpression()), !dbg !5339
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5340
  %sculpt2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 2, !dbg !5341
  %4 = load %struct.SculptSession*, %struct.SculptSession** %sculpt2, align 8, !dbg !5341
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !5342
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5342
  %current_r = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 54, !dbg !5343
  %6 = bitcast %struct.rcti* %rect to i8*, !dbg !5343
  %7 = bitcast %struct.rcti* %current_r to i8*, !dbg !5343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false), !dbg !5343
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5344
  call void @sculpt_extend_redraw_rect_previous(%struct.Object* %8, %struct.rcti* %rect), !dbg !5345
  %9 = load [4 x float]*, [4 x float]** %planes.addr, align 8, !dbg !5346
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5347
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !5348
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5349
  call void @paint_calc_redraw_planes([4 x float]* %9, %struct.ARegion* %10, %struct.RegionView3D* %11, %struct.Object* %12, %struct.rcti* %rect), !dbg !5350
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5351
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 2, !dbg !5352
  %14 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !5352
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 28, !dbg !5353
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !5353
  %previous_r = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 53, !dbg !5354
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5355
  %sculpt5 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 2, !dbg !5356
  %17 = load %struct.SculptSession*, %struct.SculptSession** %sculpt5, align 8, !dbg !5356
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !5357
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !5357
  %current_r7 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 54, !dbg !5358
  %19 = bitcast %struct.rcti* %previous_r to i8*, !dbg !5358
  %20 = bitcast %struct.rcti* %current_r7 to i8*, !dbg !5358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false), !dbg !5358
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !5359
  %tobool = icmp ne %struct.PBVH* %21, null, !dbg !5359
  br i1 %tobool, label %if.then, label %if.end, !dbg !5361

if.then:                                          ; preds = %entry
  %22 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !5362
  call void @BKE_pbvh_update(%struct.PBVH* %22, i32 32, [3 x float]* null), !dbg !5363
  br label %if.end, !dbg !5363

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5364
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_extend_redraw_rect_previous(%struct.Object* %ob, %struct.rcti* %rect) #0 !dbg !5365 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !5373, metadata !DIExpression()), !dbg !5376
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5377
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !5378
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5378
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !5376
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5379
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !5381
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5381
  %tobool = icmp ne %struct.StrokeCache* %3, null, !dbg !5379
  br i1 %tobool, label %if.then, label %if.end6, !dbg !5382

if.then:                                          ; preds = %entry
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5383
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !5386
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !5386
  %previous_r = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 53, !dbg !5387
  %call = call zeroext i8 @BLI_rcti_is_empty(%struct.rcti* %previous_r), !dbg !5388
  %tobool2 = icmp ne i8 %call, 0, !dbg !5388
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !5389

if.then3:                                         ; preds = %if.then
  %6 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5390
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5391
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 28, !dbg !5392
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !5392
  %previous_r5 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 53, !dbg !5393
  call void @BLI_rcti_union(%struct.rcti* %6, %struct.rcti* %previous_r5), !dbg !5394
  br label %if.end, !dbg !5394

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !5395

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !5396
}

declare dso_local void @paint_calc_redraw_planes([4 x float]*, %struct.ARegion*, %struct.RegionView3D*, %struct.Object*, %struct.rcti*) #2

declare dso_local void @BKE_pbvh_update(%struct.PBVH*, i32, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_vertcos_to_key(%struct.Object* %ob, %struct.KeyBlock* %kb, [3 x float]* %vertCos) #0 !dbg !5397 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %kb.addr = alloca %struct.KeyBlock*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ofs = alloca [3 x float]*, align 8
  %a = alloca i32, align 4
  %is_basis = alloca i32, align 4
  %currkey = alloca %struct.KeyBlock*, align 8
  %apply_offset = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5400, metadata !DIExpression()), !dbg !5401
  store %struct.KeyBlock* %kb, %struct.KeyBlock** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5406, metadata !DIExpression()), !dbg !5407
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5408
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5409
  %1 = load i8*, i8** %data, align 8, !dbg !5409
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5410
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5407
  call void @llvm.dbg.declare(metadata [3 x float]** %ofs, metadata !5411, metadata !DIExpression()), !dbg !5412
  store [3 x float]* null, [3 x float]** %ofs, align 8, !dbg !5412
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5413, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.declare(metadata i32* %is_basis, metadata !5415, metadata !DIExpression()), !dbg !5416
  store i32 0, i32* %is_basis, align 4, !dbg !5416
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %currkey, metadata !5417, metadata !DIExpression()), !dbg !5418
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5419
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 4, !dbg !5421
  %4 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !5421
  %type = getelementptr inbounds %struct.Key, %struct.Key* %4, i32 0, i32 9, !dbg !5422
  %5 = load i16, i16* %type, align 8, !dbg !5422
  %conv = sext i16 %5 to i32, !dbg !5419
  %cmp = icmp eq i32 %conv, 1, !dbg !5423
  br i1 %cmp, label %if.then, label %if.end8, !dbg !5424

if.then:                                          ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5425
  %key2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 4, !dbg !5427
  %7 = load %struct.Key*, %struct.Key** %key2, align 8, !dbg !5427
  %block = getelementptr inbounds %struct.Key, %struct.Key* %7, i32 0, i32 6, !dbg !5428
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !5429
  %8 = load i8*, i8** %first, align 8, !dbg !5429
  %9 = bitcast i8* %8 to %struct.KeyBlock*, !dbg !5425
  store %struct.KeyBlock* %9, %struct.KeyBlock** %currkey, align 8, !dbg !5430
  br label %for.cond, !dbg !5431

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5432
  %tobool = icmp ne %struct.KeyBlock* %10, null, !dbg !5434
  br i1 %tobool, label %for.body, label %for.end, !dbg !5434

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5435
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 115, !dbg !5437
  %12 = load i16, i16* %shapenr, align 2, !dbg !5437
  %conv3 = sext i16 %12 to i32, !dbg !5435
  %sub = sub nsw i32 %conv3, 1, !dbg !5438
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5439
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %13, i32 0, i32 6, !dbg !5440
  %14 = load i16, i16* %relative, align 4, !dbg !5440
  %conv4 = sext i16 %14 to i32, !dbg !5439
  %cmp5 = icmp eq i32 %sub, %conv4, !dbg !5441
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !5442

if.then7:                                         ; preds = %for.body
  store i32 1, i32* %is_basis, align 4, !dbg !5443
  br label %for.end, !dbg !5445

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5440

for.inc:                                          ; preds = %if.end
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5446
  %next = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %15, i32 0, i32 0, !dbg !5447
  %16 = load %struct.KeyBlock*, %struct.KeyBlock** %next, align 8, !dbg !5447
  store %struct.KeyBlock* %16, %struct.KeyBlock** %currkey, align 8, !dbg !5448
  br label %for.cond, !dbg !5449, !llvm.loop !5450

for.end:                                          ; preds = %if.then7, %for.cond
  br label %if.end8, !dbg !5451

if.end8:                                          ; preds = %for.end, %entry
  %17 = load i32, i32* %is_basis, align 4, !dbg !5452
  %tobool9 = icmp ne i32 %17, 0, !dbg !5452
  br i1 %tobool9, label %if.then10, label %if.end40, !dbg !5454

if.then10:                                        ; preds = %if.end8
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5455
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5457
  %call = call [3 x float]* @BKE_key_convert_to_vertcos(%struct.Object* %18, %struct.KeyBlock* %19), !dbg !5458
  store [3 x float]* %call, [3 x float]** %ofs, align 8, !dbg !5459
  store i32 0, i32* %a, align 4, !dbg !5460
  br label %for.cond11, !dbg !5462

for.cond11:                                       ; preds = %for.inc21, %if.then10
  %20 = load i32, i32* %a, align 4, !dbg !5463
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5465
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 26, !dbg !5466
  %22 = load i32, i32* %totvert, align 8, !dbg !5466
  %cmp12 = icmp slt i32 %20, %22, !dbg !5467
  br i1 %cmp12, label %for.body14, label %for.end22, !dbg !5468

for.body14:                                       ; preds = %for.cond11
  %23 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !5469
  %24 = load i32, i32* %a, align 4, !dbg !5471
  %idxprom = sext i32 %24 to i64, !dbg !5469
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom, !dbg !5469
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5469
  %25 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !5472
  %26 = load i32, i32* %a, align 4, !dbg !5473
  %idxprom15 = sext i32 %26 to i64, !dbg !5472
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %25, i64 %idxprom15, !dbg !5472
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !5472
  %27 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !5474
  %28 = load i32, i32* %a, align 4, !dbg !5475
  %idxprom18 = sext i32 %28 to i64, !dbg !5474
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom18, !dbg !5474
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !5474
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay17, float* %arraydecay20), !dbg !5476
  br label %for.inc21, !dbg !5477

for.inc21:                                        ; preds = %for.body14
  %29 = load i32, i32* %a, align 4, !dbg !5478
  %inc = add nsw i32 %29, 1, !dbg !5478
  store i32 %inc, i32* %a, align 4, !dbg !5478
  br label %for.cond11, !dbg !5479, !llvm.loop !5480

for.end22:                                        ; preds = %for.cond11
  %30 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5482
  %key23 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 4, !dbg !5483
  %31 = load %struct.Key*, %struct.Key** %key23, align 8, !dbg !5483
  %block24 = getelementptr inbounds %struct.Key, %struct.Key* %31, i32 0, i32 6, !dbg !5484
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block24, i32 0, i32 0, !dbg !5485
  %32 = load i8*, i8** %first25, align 8, !dbg !5485
  %33 = bitcast i8* %32 to %struct.KeyBlock*, !dbg !5482
  store %struct.KeyBlock* %33, %struct.KeyBlock** %currkey, align 8, !dbg !5486
  br label %while.cond, !dbg !5487

while.cond:                                       ; preds = %if.end38, %for.end22
  %34 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5488
  %tobool26 = icmp ne %struct.KeyBlock* %34, null, !dbg !5487
  br i1 %tobool26, label %while.body, label %while.end, !dbg !5487

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %apply_offset, metadata !5489, metadata !DIExpression()), !dbg !5491
  %35 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5492
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5493
  %cmp27 = icmp ne %struct.KeyBlock* %35, %36, !dbg !5494
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !5495

land.rhs:                                         ; preds = %while.body
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5496
  %shapenr29 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 115, !dbg !5497
  %38 = load i16, i16* %shapenr29, align 2, !dbg !5497
  %conv30 = sext i16 %38 to i32, !dbg !5496
  %sub31 = sub nsw i32 %conv30, 1, !dbg !5498
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5499
  %relative32 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 6, !dbg !5500
  %40 = load i16, i16* %relative32, align 4, !dbg !5500
  %conv33 = sext i16 %40 to i32, !dbg !5499
  %cmp34 = icmp eq i32 %sub31, %conv33, !dbg !5501
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.body
  %41 = phi i1 [ false, %while.body ], [ %cmp34, %land.rhs ], !dbg !5502
  %land.ext = zext i1 %41 to i32, !dbg !5495
  store i32 %land.ext, i32* %apply_offset, align 4, !dbg !5491
  %42 = load i32, i32* %apply_offset, align 4, !dbg !5503
  %tobool36 = icmp ne i32 %42, 0, !dbg !5503
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5505

if.then37:                                        ; preds = %land.end
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5506
  %44 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5507
  %45 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !5508
  call void @BKE_key_convert_from_offset(%struct.Object* %43, %struct.KeyBlock* %44, [3 x float]* %45), !dbg !5509
  br label %if.end38, !dbg !5509

if.end38:                                         ; preds = %if.then37, %land.end
  %46 = load %struct.KeyBlock*, %struct.KeyBlock** %currkey, align 8, !dbg !5510
  %next39 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %46, i32 0, i32 0, !dbg !5511
  %47 = load %struct.KeyBlock*, %struct.KeyBlock** %next39, align 8, !dbg !5511
  store %struct.KeyBlock* %47, %struct.KeyBlock** %currkey, align 8, !dbg !5512
  br label %while.cond, !dbg !5487, !llvm.loop !5513

while.end:                                        ; preds = %while.cond
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5515
  %49 = load [3 x float]*, [3 x float]** %ofs, align 8, !dbg !5516
  %50 = bitcast [3 x float]* %49 to i8*, !dbg !5516
  call void %48(i8* %50), !dbg !5515
  br label %if.end40, !dbg !5517

if.end40:                                         ; preds = %while.end, %if.end8
  %51 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5518
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5520
  %key41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 4, !dbg !5521
  %53 = load %struct.Key*, %struct.Key** %key41, align 8, !dbg !5521
  %refkey = getelementptr inbounds %struct.Key, %struct.Key* %53, i32 0, i32 2, !dbg !5522
  %54 = load %struct.KeyBlock*, %struct.KeyBlock** %refkey, align 8, !dbg !5522
  %cmp42 = icmp eq %struct.KeyBlock* %51, %54, !dbg !5523
  br i1 %cmp42, label %if.then44, label %if.end58, !dbg !5524

if.then44:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !5525, metadata !DIExpression()), !dbg !5527
  %55 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5528
  %mvert45 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 15, !dbg !5529
  %56 = load %struct.MVert*, %struct.MVert** %mvert45, align 8, !dbg !5529
  store %struct.MVert* %56, %struct.MVert** %mvert, align 8, !dbg !5527
  store i32 0, i32* %a, align 4, !dbg !5530
  br label %for.cond46, !dbg !5532

for.cond46:                                       ; preds = %for.inc55, %if.then44
  %57 = load i32, i32* %a, align 4, !dbg !5533
  %58 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5535
  %totvert47 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %58, i32 0, i32 26, !dbg !5536
  %59 = load i32, i32* %totvert47, align 8, !dbg !5536
  %cmp48 = icmp slt i32 %57, %59, !dbg !5537
  br i1 %cmp48, label %for.body50, label %for.end57, !dbg !5538

for.body50:                                       ; preds = %for.cond46
  %60 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5539
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %60, i32 0, i32 0, !dbg !5540
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5539
  %61 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !5541
  %62 = load i32, i32* %a, align 4, !dbg !5542
  %idxprom52 = sext i32 %62 to i64, !dbg !5541
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %61, i64 %idxprom52, !dbg !5541
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !5541
  call void @copy_v3_v3(float* %arraydecay51, float* %arraydecay54), !dbg !5543
  br label %for.inc55, !dbg !5543

for.inc55:                                        ; preds = %for.body50
  %63 = load i32, i32* %a, align 4, !dbg !5544
  %inc56 = add nsw i32 %63, 1, !dbg !5544
  store i32 %inc56, i32* %a, align 4, !dbg !5544
  %64 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5545
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %64, i32 1, !dbg !5545
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !5545
  br label %for.cond46, !dbg !5546, !llvm.loop !5547

for.end57:                                        ; preds = %for.cond46
  %65 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5549
  call void @BKE_mesh_calc_normals(%struct.Mesh* %65), !dbg !5550
  br label %if.end58, !dbg !5551

if.end58:                                         ; preds = %for.end57, %if.end40
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5552
  %67 = load %struct.KeyBlock*, %struct.KeyBlock** %kb.addr, align 8, !dbg !5553
  %68 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !5554
  call void @BKE_key_convert_from_vertcos(%struct.Object* %66, %struct.KeyBlock* %67, [3 x float]* %68), !dbg !5555
  ret void, !dbg !5556
}

declare dso_local [3 x float]* @BKE_key_convert_to_vertcos(%struct.Object*, %struct.KeyBlock*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5557 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5562, metadata !DIExpression()), !dbg !5563
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5564, metadata !DIExpression()), !dbg !5565
  %0 = load float*, float** %a.addr, align 8, !dbg !5566
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5566
  %1 = load float, float* %arrayidx, align 4, !dbg !5566
  %2 = load float*, float** %b.addr, align 8, !dbg !5567
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5567
  %3 = load float, float* %arrayidx1, align 4, !dbg !5567
  %sub = fsub float %1, %3, !dbg !5568
  %4 = load float*, float** %r.addr, align 8, !dbg !5569
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5569
  store float %sub, float* %arrayidx2, align 4, !dbg !5570
  %5 = load float*, float** %a.addr, align 8, !dbg !5571
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5571
  %6 = load float, float* %arrayidx3, align 4, !dbg !5571
  %7 = load float*, float** %b.addr, align 8, !dbg !5572
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5572
  %8 = load float, float* %arrayidx4, align 4, !dbg !5572
  %sub5 = fsub float %6, %8, !dbg !5573
  %9 = load float*, float** %r.addr, align 8, !dbg !5574
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5574
  store float %sub5, float* %arrayidx6, align 4, !dbg !5575
  %10 = load float*, float** %a.addr, align 8, !dbg !5576
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5576
  %11 = load float, float* %arrayidx7, align 4, !dbg !5576
  %12 = load float*, float** %b.addr, align 8, !dbg !5577
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5577
  %13 = load float, float* %arrayidx8, align 4, !dbg !5577
  %sub9 = fsub float %11, %13, !dbg !5578
  %14 = load float*, float** %r.addr, align 8, !dbg !5579
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5579
  store float %sub9, float* %arrayidx10, align 4, !dbg !5580
  ret void, !dbg !5581
}

declare dso_local void @BKE_key_convert_from_offset(%struct.Object*, %struct.KeyBlock*, [3 x float]*) #2

declare dso_local void @BKE_mesh_calc_normals(%struct.Mesh*) #2

declare dso_local void @BKE_key_convert_from_vertcos(%struct.Object*, %struct.KeyBlock*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sculpt_mode_poll(%struct.bContext* %C) #0 !dbg !5582 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5589
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !5590
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5588
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5591
  %tobool = icmp ne %struct.Object* %1, null, !dbg !5591
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5592

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5593
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !5594
  %3 = load i32, i32* %mode, align 8, !dbg !5594
  %and = and i32 %3, 2, !dbg !5595
  %tobool1 = icmp ne i32 %and, 0, !dbg !5592
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !5596
  %land.ext = zext i1 %4 to i32, !dbg !5592
  ret i32 %land.ext, !dbg !5597
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sculpt_mode_poll_view3d(%struct.bContext* %C) #0 !dbg !5598 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5601
  %call = call i32 @sculpt_mode_poll(%struct.bContext* %0), !dbg !5602
  %tobool = icmp ne i32 %call, 0, !dbg !5602
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5603

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5604
  %call1 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %1), !dbg !5605
  %tobool2 = icmp ne %struct.RegionView3D* %call1, null, !dbg !5603
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !5606
  %land.ext = zext i1 %2 to i32, !dbg !5603
  ret i32 %land.ext, !dbg !5607
}

declare dso_local %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sculpt_poll_view3d(%struct.bContext* %C) #0 !dbg !5608 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5611
  %call = call i32 @sculpt_poll(%struct.bContext* %0), !dbg !5612
  %tobool = icmp ne i32 %call, 0, !dbg !5612
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5613

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5614
  %call1 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %1), !dbg !5615
  %tobool2 = icmp ne %struct.RegionView3D* %call1, null, !dbg !5613
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !5616
  %land.ext = zext i1 %2 to i32, !dbg !5613
  ret i32 %land.ext, !dbg !5617
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sculpt_poll(%struct.bContext* %C) #0 !dbg !5618 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5619, metadata !DIExpression()), !dbg !5620
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5621
  %call = call i32 @sculpt_mode_poll(%struct.bContext* %0), !dbg !5622
  %tobool = icmp ne i32 %call, 0, !dbg !5622
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5623

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5624
  %call1 = call i32 @paint_poll(%struct.bContext* %1), !dbg !5625
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5623
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !5626
  %land.ext = zext i1 %2 to i32, !dbg !5623
  ret i32 %land.ext, !dbg !5627
}

declare dso_local i32 @paint_poll(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @sculpt_stroke_get_location(%struct.bContext* %C, float* %out, float* %mouse) #0 !dbg !5628 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %out.addr = alloca float*, align 8
  %mouse.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %ray_start = alloca [3 x float], align 4
  %ray_end = alloca [3 x float], align 4
  %ray_normal = alloca [3 x float], align 4
  %dist = alloca float, align 4
  %srd = alloca %struct.SculptRaycastData, align 8
  %original = alloca i8, align 1
  %vc = alloca %struct.ViewContext, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5631, metadata !DIExpression()), !dbg !5632
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5637, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !5639, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !5641, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_end, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_normal, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.SculptRaycastData* %srd, metadata !5653, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata i8* %original, metadata !5664, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !5666, metadata !DIExpression()), !dbg !5667
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5668
  call void @view3d_set_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !5669
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !5670
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5670
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !5671
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5672
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !5673
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5673
  store %struct.SculptSession* %3, %struct.SculptSession** %ss, align 8, !dbg !5674
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5675
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !5676
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !5676
  store %struct.StrokeCache* %5, %struct.StrokeCache** %cache, align 8, !dbg !5677
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5678
  %tobool = icmp ne %struct.StrokeCache* %6, null, !dbg !5679
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5679

cond.true:                                        ; preds = %entry
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5680
  %original2 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 41, !dbg !5681
  %8 = load i8, i8* %original2, align 4, !dbg !5681
  %conv = zext i8 %8 to i32, !dbg !5680
  br label %cond.end, !dbg !5679

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !5679
  %conv3 = trunc i32 %cond to i8, !dbg !5679
  store i8 %conv3, i8* %original, align 1, !dbg !5682
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5683
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5684
  call void @sculpt_stroke_modifiers_check(%struct.bContext* %9, %struct.Object* %10), !dbg !5685
  %11 = load float*, float** %mouse.addr, align 8, !dbg !5686
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !5687
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !5688
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !5689
  %12 = load i8, i8* %original, align 1, !dbg !5690
  %call = call float @sculpt_raycast_init(%struct.ViewContext* %vc, float* %11, float* %arraydecay, float* %arraydecay4, float* %arraydecay5, i8 zeroext %12), !dbg !5691
  store float %call, float* %dist, align 4, !dbg !5692
  %13 = load i8, i8* %original, align 1, !dbg !5693
  %original6 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 5, !dbg !5694
  store i8 %13, i8* %original6, align 8, !dbg !5695
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5696
  %sculpt7 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 2, !dbg !5697
  %15 = load %struct.SculptSession*, %struct.SculptSession** %sculpt7, align 8, !dbg !5697
  %ss8 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 0, !dbg !5698
  store %struct.SculptSession* %15, %struct.SculptSession** %ss8, align 8, !dbg !5699
  %hit = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 3, !dbg !5700
  store i8 0, i8* %hit, align 8, !dbg !5701
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !5702
  %ray_start10 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 1, !dbg !5703
  store float* %arraydecay9, float** %ray_start10, align 8, !dbg !5704
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !5705
  %ray_normal12 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 2, !dbg !5706
  store float* %arraydecay11, float** %ray_normal12, align 8, !dbg !5707
  %16 = load float, float* %dist, align 4, !dbg !5708
  %dist13 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 4, !dbg !5709
  store float %16, float* %dist13, align 4, !dbg !5710
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5711
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 15, !dbg !5712
  %18 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !5712
  %19 = bitcast %struct.SculptRaycastData* %srd to i8*, !dbg !5713
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !5714
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !5715
  %original16 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 5, !dbg !5716
  %20 = load i8, i8* %original16, align 8, !dbg !5716
  call void @BKE_pbvh_raycast(%struct.PBVH* %18, void (%struct.PBVHNode*, i8*, float*)* @sculpt_raycast_cb, i8* %19, float* %arraydecay14, float* %arraydecay15, i8 zeroext %20), !dbg !5717
  %21 = load float*, float** %out.addr, align 8, !dbg !5718
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !5719
  call void @copy_v3_v3(float* %21, float* %arraydecay17), !dbg !5720
  %22 = load float*, float** %out.addr, align 8, !dbg !5721
  %dist18 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 4, !dbg !5722
  %23 = load float, float* %dist18, align 4, !dbg !5722
  call void @mul_v3_fl(float* %22, float %23), !dbg !5723
  %24 = load float*, float** %out.addr, align 8, !dbg !5724
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !5725
  call void @add_v3_v3(float* %24, float* %arraydecay19), !dbg !5726
  %hit20 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %srd, i32 0, i32 3, !dbg !5727
  %25 = load i8, i8* %hit20, align 8, !dbg !5727
  ret i8 %25, !dbg !5728
}

declare dso_local void @view3d_set_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_stroke_modifiers_check(%struct.bContext* %C, %struct.Object* %ob) #0 !dbg !5729 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !5738, metadata !DIExpression()), !dbg !5739
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5740
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !5741
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5741
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !5739
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5742
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 7, !dbg !5744
  %3 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !5744
  %tobool = icmp ne %struct.KeyBlock* %3, null, !dbg !5742
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5745

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5746
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 17, !dbg !5747
  %5 = load i8, i8* %modifiers_active, align 1, !dbg !5747
  %conv = zext i8 %5 to i32, !dbg !5746
  %tobool1 = icmp ne i32 %conv, 0, !dbg !5746
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5748

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !5749, metadata !DIExpression()), !dbg !5751
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5752
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %6), !dbg !5753
  %sculpt2 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call, i32 0, i32 2, !dbg !5754
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sculpt2, align 8, !dbg !5754
  store %struct.Sculpt* %7, %struct.Sculpt** %sd, align 8, !dbg !5751
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !5755, metadata !DIExpression()), !dbg !5756
  %8 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !5757
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %8, i32 0, i32 0, !dbg !5758
  %call3 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !5759
  store %struct.Brush* %call3, %struct.Brush** %brush, align 8, !dbg !5756
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5760
  %call4 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %9), !dbg !5761
  %10 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !5762
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5763
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !5764
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5765
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 28, !dbg !5766
  %14 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5766
  %call5 = call zeroext i8 @sculpt_any_smooth_mode(%struct.Brush* %12, %struct.StrokeCache* %14, i32 0), !dbg !5767
  call void @BKE_sculpt_update_mesh_elements(%struct.Scene* %call4, %struct.Sculpt* %10, %struct.Object* %11, i8 zeroext %call5, i8 zeroext 0), !dbg !5768
  br label %if.end, !dbg !5769

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !5770
}

; Function Attrs: noinline nounwind uwtable
define internal float @sculpt_raycast_init(%struct.ViewContext* %vc, float* %mouse, float* %ray_start, float* %ray_end, float* %ray_normal, i8 zeroext %original) #0 !dbg !5771 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %mouse.addr = alloca float*, align 8
  %ray_start.addr = alloca float*, align 8
  %ray_end.addr = alloca float*, align 8
  %ray_normal.addr = alloca float*, align 8
  %original.addr = alloca i8, align 1
  %obimat = alloca [4 x [4 x float]], align 16
  %dist = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !5774, metadata !DIExpression()), !dbg !5775
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  store float* %ray_start, float** %ray_start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_start.addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  store float* %ray_end, float** %ray_end.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_end.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  store float* %ray_normal, float** %ray_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_normal.addr, metadata !5782, metadata !DIExpression()), !dbg !5783
  store i8 %original, i8* %original.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %original.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obimat, metadata !5786, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.declare(metadata float* %dist, metadata !5788, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5790, metadata !DIExpression()), !dbg !5791
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !5792
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 1, !dbg !5793
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !5793
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !5791
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !5794, metadata !DIExpression()), !dbg !5795
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !5796
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 3, !dbg !5797
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5797
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 30, !dbg !5798
  %4 = load i8*, i8** %regiondata, align 8, !dbg !5798
  %5 = bitcast i8* %4 to %struct.RegionView3D*, !dbg !5796
  store %struct.RegionView3D* %5, %struct.RegionView3D** %rv3d, align 8, !dbg !5795
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !5799
  %ar1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %6, i32 0, i32 3, !dbg !5800
  %7 = load %struct.ARegion*, %struct.ARegion** %ar1, align 8, !dbg !5800
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !5801
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 4, !dbg !5802
  %9 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !5802
  %10 = load float*, float** %mouse.addr, align 8, !dbg !5803
  %11 = load float*, float** %ray_start.addr, align 8, !dbg !5804
  %12 = load float*, float** %ray_end.addr, align 8, !dbg !5805
  %call = call zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion* %7, %struct.View3D* %9, float* %10, float* %11, float* %12, i8 zeroext 1), !dbg !5806
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !5807
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5808
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 47, !dbg !5809
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5808
  %call3 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !5810
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !5811
  %14 = load float*, float** %ray_start.addr, align 8, !dbg !5812
  call void @mul_m4_v3([4 x float]* %arraydecay4, float* %14), !dbg !5813
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !5814
  %15 = load float*, float** %ray_end.addr, align 8, !dbg !5815
  call void @mul_m4_v3([4 x float]* %arraydecay5, float* %15), !dbg !5816
  %16 = load float*, float** %ray_normal.addr, align 8, !dbg !5817
  %17 = load float*, float** %ray_end.addr, align 8, !dbg !5818
  %18 = load float*, float** %ray_start.addr, align 8, !dbg !5819
  call void @sub_v3_v3v3(float* %16, float* %17, float* %18), !dbg !5820
  %19 = load float*, float** %ray_normal.addr, align 8, !dbg !5821
  %call6 = call float @normalize_v3(float* %19), !dbg !5822
  store float %call6, float* %dist, align 4, !dbg !5823
  %20 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !5824
  %is_persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %20, i32 0, i32 24, !dbg !5826
  %21 = load i8, i8* %is_persp, align 8, !dbg !5826
  %tobool = icmp ne i8 %21, 0, !dbg !5824
  br i1 %tobool, label %if.end, label %if.then, !dbg !5827

if.then:                                          ; preds = %entry
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5828
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 2, !dbg !5830
  %23 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !5830
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 15, !dbg !5831
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !5831
  %25 = load i8, i8* %original.addr, align 1, !dbg !5832
  %26 = load float*, float** %ray_start.addr, align 8, !dbg !5833
  %27 = load float*, float** %ray_end.addr, align 8, !dbg !5834
  %28 = load float*, float** %ray_normal.addr, align 8, !dbg !5835
  call void @BKE_pbvh_raycast_project_ray_root(%struct.PBVH* %24, i8 zeroext %25, float* %26, float* %27, float* %28), !dbg !5836
  %29 = load float*, float** %ray_normal.addr, align 8, !dbg !5837
  %30 = load float*, float** %ray_end.addr, align 8, !dbg !5838
  %31 = load float*, float** %ray_start.addr, align 8, !dbg !5839
  call void @sub_v3_v3v3(float* %29, float* %30, float* %31), !dbg !5840
  %32 = load float*, float** %ray_normal.addr, align 8, !dbg !5841
  %call7 = call float @normalize_v3(float* %32), !dbg !5842
  store float %call7, float* %dist, align 4, !dbg !5843
  br label %if.end, !dbg !5844

if.end:                                           ; preds = %if.then, %entry
  %33 = load float, float* %dist, align 4, !dbg !5845
  ret float %33, !dbg !5846
}

declare dso_local void @BKE_pbvh_raycast(%struct.PBVH*, void (%struct.PBVHNode*, i8*, float*)*, i8*, float*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_raycast_cb(%struct.PBVHNode* %node, i8* %data_v, float* %tmin) #0 !dbg !5847 {
entry:
  %node.addr = alloca %struct.PBVHNode*, align 8
  %data_v.addr = alloca i8*, align 8
  %tmin.addr = alloca float*, align 8
  %srd = alloca %struct.SculptRaycastData*, align 8
  %origco = alloca [3 x float]*, align 8
  %use_origco = alloca i8, align 1
  %unode = alloca %struct.SculptUndoNode*, align 8
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store i8* %data_v, i8** %data_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_v.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  store float* %tmin, float** %tmin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmin.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !5856
  %call = call float @BKE_pbvh_node_get_tmin(%struct.PBVHNode* %0), !dbg !5858
  %1 = load float*, float** %tmin.addr, align 8, !dbg !5859
  %2 = load float, float* %1, align 4, !dbg !5860
  %cmp = fcmp olt float %call, %2, !dbg !5861
  br i1 %cmp, label %if.then, label %if.end22, !dbg !5862

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SculptRaycastData** %srd, metadata !5863, metadata !DIExpression()), !dbg !5866
  %3 = load i8*, i8** %data_v.addr, align 8, !dbg !5867
  %4 = bitcast i8* %3 to %struct.SculptRaycastData*, !dbg !5867
  store %struct.SculptRaycastData* %4, %struct.SculptRaycastData** %srd, align 8, !dbg !5866
  call void @llvm.dbg.declare(metadata [3 x float]** %origco, metadata !5868, metadata !DIExpression()), !dbg !5869
  store [3 x float]* null, [3 x float]** %origco, align 8, !dbg !5869
  call void @llvm.dbg.declare(metadata i8* %use_origco, metadata !5870, metadata !DIExpression()), !dbg !5871
  store i8 0, i8* %use_origco, align 1, !dbg !5871
  %5 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5872
  %original = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %5, i32 0, i32 5, !dbg !5874
  %6 = load i8, i8* %original, align 8, !dbg !5874
  %conv = zext i8 %6 to i32, !dbg !5872
  %tobool = icmp ne i32 %conv, 0, !dbg !5872
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !5875

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5876
  %ss = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %7, i32 0, i32 0, !dbg !5877
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !5877
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !5878
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !5878
  %tobool1 = icmp ne %struct.StrokeCache* %9, null, !dbg !5876
  br i1 %tobool1, label %if.then2, label %if.end13, !dbg !5879

if.then2:                                         ; preds = %land.lhs.true
  %10 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5880
  %ss3 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %10, i32 0, i32 0, !dbg !5883
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss3, align 8, !dbg !5883
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 15, !dbg !5884
  %12 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !5884
  %call4 = call i32 @BKE_pbvh_type(%struct.PBVH* %12), !dbg !5885
  %cmp5 = icmp eq i32 %call4, 2, !dbg !5886
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !5887

if.then7:                                         ; preds = %if.then2
  store i8 1, i8* %use_origco, align 1, !dbg !5888
  br label %if.end, !dbg !5890

if.else:                                          ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !5891, metadata !DIExpression()), !dbg !5932
  %13 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !5933
  %call8 = call %struct.SculptUndoNode* @sculpt_undo_get_node(%struct.PBVHNode* %13), !dbg !5934
  store %struct.SculptUndoNode* %call8, %struct.SculptUndoNode** %unode, align 8, !dbg !5932
  %14 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !5935
  %tobool9 = icmp ne %struct.SculptUndoNode* %14, null, !dbg !5936
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !5936

cond.true:                                        ; preds = %if.else
  %15 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !5937
  %co = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %15, i32 0, i32 5, !dbg !5938
  %16 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !5938
  br label %cond.end, !dbg !5936

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !5936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi [3 x float]* [ %16, %cond.true ], [ null, %cond.false ], !dbg !5936
  store [3 x float]* %cond, [3 x float]** %origco, align 8, !dbg !5939
  %17 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !5940
  %tobool10 = icmp ne [3 x float]* %17, null, !dbg !5940
  %18 = zext i1 %tobool10 to i64, !dbg !5940
  %cond11 = select i1 %tobool10, i32 1, i32 0, !dbg !5940
  %conv12 = trunc i32 %cond11 to i8, !dbg !5940
  store i8 %conv12, i8* %use_origco, align 1, !dbg !5941
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then7
  br label %if.end13, !dbg !5942

if.end13:                                         ; preds = %if.end, %land.lhs.true, %if.then
  %19 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5943
  %ss14 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %19, i32 0, i32 0, !dbg !5945
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss14, align 8, !dbg !5945
  %pbvh15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 15, !dbg !5946
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh15, align 8, !dbg !5946
  %22 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !5947
  %23 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !5948
  %24 = load i8, i8* %use_origco, align 1, !dbg !5949
  %conv16 = zext i8 %24 to i32, !dbg !5949
  %25 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5950
  %ray_start = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %25, i32 0, i32 1, !dbg !5951
  %26 = load float*, float** %ray_start, align 8, !dbg !5951
  %27 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5952
  %ray_normal = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %27, i32 0, i32 2, !dbg !5953
  %28 = load float*, float** %ray_normal, align 8, !dbg !5953
  %29 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5954
  %dist = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %29, i32 0, i32 4, !dbg !5955
  %call17 = call zeroext i8 @BKE_pbvh_node_raycast(%struct.PBVH* %21, %struct.PBVHNode* %22, [3 x float]* %23, i32 %conv16, float* %26, float* %28, float* %dist), !dbg !5956
  %tobool18 = icmp ne i8 %call17, 0, !dbg !5956
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !5957

if.then19:                                        ; preds = %if.end13
  %30 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5958
  %hit = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %30, i32 0, i32 3, !dbg !5960
  store i8 1, i8* %hit, align 8, !dbg !5961
  %31 = load %struct.SculptRaycastData*, %struct.SculptRaycastData** %srd, align 8, !dbg !5962
  %dist20 = getelementptr inbounds %struct.SculptRaycastData, %struct.SculptRaycastData* %31, i32 0, i32 4, !dbg !5963
  %32 = load float, float* %dist20, align 4, !dbg !5963
  %33 = load float*, float** %tmin.addr, align 8, !dbg !5964
  store float %32, float* %33, align 4, !dbg !5965
  br label %if.end21, !dbg !5966

if.end21:                                         ; preds = %if.then19, %if.end13
  br label %if.end22, !dbg !5967

if.end22:                                         ; preds = %if.end21, %entry
  ret void, !dbg !5968
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5969 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5972, metadata !DIExpression()), !dbg !5973
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  %0 = load float, float* %f.addr, align 4, !dbg !5976
  %1 = load float*, float** %r.addr, align 8, !dbg !5977
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5977
  %2 = load float, float* %arrayidx, align 4, !dbg !5978
  %mul = fmul float %2, %0, !dbg !5978
  store float %mul, float* %arrayidx, align 4, !dbg !5978
  %3 = load float, float* %f.addr, align 4, !dbg !5979
  %4 = load float*, float** %r.addr, align 8, !dbg !5980
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5980
  %5 = load float, float* %arrayidx1, align 4, !dbg !5981
  %mul2 = fmul float %5, %3, !dbg !5981
  store float %mul2, float* %arrayidx1, align 4, !dbg !5981
  %6 = load float, float* %f.addr, align 4, !dbg !5982
  %7 = load float*, float** %r.addr, align 8, !dbg !5983
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5983
  %8 = load float, float* %arrayidx3, align 4, !dbg !5984
  %mul4 = fmul float %8, %6, !dbg !5984
  store float %mul4, float* %arrayidx3, align 4, !dbg !5984
  ret void, !dbg !5985
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5986 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  %0 = load float*, float** %a.addr, align 8, !dbg !5991
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5991
  %1 = load float, float* %arrayidx, align 4, !dbg !5991
  %2 = load float*, float** %r.addr, align 8, !dbg !5992
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5992
  %3 = load float, float* %arrayidx1, align 4, !dbg !5993
  %add = fadd float %3, %1, !dbg !5993
  store float %add, float* %arrayidx1, align 4, !dbg !5993
  %4 = load float*, float** %a.addr, align 8, !dbg !5994
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5994
  %5 = load float, float* %arrayidx2, align 4, !dbg !5994
  %6 = load float*, float** %r.addr, align 8, !dbg !5995
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5995
  %7 = load float, float* %arrayidx3, align 4, !dbg !5996
  %add4 = fadd float %7, %5, !dbg !5996
  store float %add4, float* %arrayidx3, align 4, !dbg !5996
  %8 = load float*, float** %a.addr, align 8, !dbg !5997
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5997
  %9 = load float, float* %arrayidx5, align 4, !dbg !5997
  %10 = load float*, float** %r.addr, align 8, !dbg !5998
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5998
  %11 = load float, float* %arrayidx6, align 4, !dbg !5999
  %add7 = fadd float %11, %9, !dbg !5999
  store float %add7, float* %arrayidx6, align 4, !dbg !5999
  ret void, !dbg !6000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_update_object_bounding_box(%struct.Object* %ob) #0 !dbg !6001 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bb_min = alloca [3 x float], align 4
  %bb_max = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6006
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 15, !dbg !6008
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !6008
  %tobool = icmp ne %struct.BoundBox* %1, null, !dbg !6006
  br i1 %tobool, label %if.then, label %if.end, !dbg !6009

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_min, metadata !6010, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_max, metadata !6013, metadata !DIExpression()), !dbg !6014
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6015
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !6016
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6016
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 15, !dbg !6017
  %4 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !6017
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !6018
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !6019
  call void @BKE_pbvh_bounding_box(%struct.PBVH* %4, float* %arraydecay, float* %arraydecay1), !dbg !6020
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6021
  %bb2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 15, !dbg !6022
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb2, align 8, !dbg !6022
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !6023
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !6024
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %6, float* %arraydecay3, float* %arraydecay4), !dbg !6025
  br label %if.end, !dbg !6026

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6027
}

declare dso_local void @BKE_pbvh_bounding_box(%struct.PBVH*, float*, float*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_pbvh_clear(%struct.Object* %ob) #0 !dbg !6028 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !6031, metadata !DIExpression()), !dbg !6032
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6033
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !6034
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6034
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !6032
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !6035, metadata !DIExpression()), !dbg !6036
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6037
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 120, !dbg !6038
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !6038
  store %struct.DerivedMesh* %3, %struct.DerivedMesh** %dm, align 8, !dbg !6036
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6039
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 15, !dbg !6041
  %5 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !6041
  %tobool = icmp ne %struct.PBVH* %5, null, !dbg !6039
  br i1 %tobool, label %if.then, label %if.end, !dbg !6042

if.then:                                          ; preds = %entry
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6043
  %pbvh1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 15, !dbg !6044
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh1, align 8, !dbg !6044
  call void @BKE_pbvh_free(%struct.PBVH* %7), !dbg !6045
  br label %if.end, !dbg !6045

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6046
  %pbvh2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 15, !dbg !6047
  store %struct.PBVH* null, %struct.PBVH** %pbvh2, align 8, !dbg !6048
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6049
  %tobool3 = icmp ne %struct.DerivedMesh* %9, null, !dbg !6049
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6051

if.then4:                                         ; preds = %if.end
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6052
  %getPBVH = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 81, !dbg !6053
  %11 = load %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)** %getPBVH, align 8, !dbg !6053
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !6054
  %call = call %struct.PBVH* %11(%struct.Object* null, %struct.DerivedMesh* %12), !dbg !6052
  br label %if.end5, !dbg !6052

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6055
  call void @BKE_object_free_derived_caches(%struct.Object* %13), !dbg !6056
  ret void, !dbg !6057
}

declare dso_local void @BKE_pbvh_free(%struct.PBVH*) #2

declare dso_local void @BKE_object_free_derived_caches(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_dyntopo_node_layers_add(%struct.SculptSession* %ss) #0 !dbg !6058 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %cd_node_layer_index = alloca i32, align 4
  %layer_id = alloca [17 x i8], align 16
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.declare(metadata i32* %cd_node_layer_index, metadata !6063, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.declare(metadata [17 x i8]* %layer_id, metadata !6065, metadata !DIExpression()), !dbg !6069
  %0 = bitcast [17 x i8]* %layer_id to i8*, !dbg !6069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @__const.sculpt_dyntopo_node_layers_add.layer_id, i32 0, i32 0), i64 17, i1 false), !dbg !6069
  %1 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6070
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 10, !dbg !6071
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6071
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 24, !dbg !6072
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6073
  %call = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %vdata, i32 11, i8* %arraydecay), !dbg !6074
  store i32 %call, i32* %cd_node_layer_index, align 4, !dbg !6075
  %3 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6076
  %cmp = icmp eq i32 %3, -1, !dbg !6078
  br i1 %cmp, label %if.then, label %if.end, !dbg !6079

if.then:                                          ; preds = %entry
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6080
  %bm1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 10, !dbg !6082
  %5 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6082
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6083
  %bm2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 10, !dbg !6084
  %7 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !6084
  %vdata3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 24, !dbg !6085
  %arraydecay4 = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6086
  call void @BM_data_layer_add_named(%struct.BMesh* %5, %struct.CustomData* %vdata3, i32 11, i8* %arraydecay4), !dbg !6087
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6088
  %bm5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 10, !dbg !6089
  %9 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !6089
  %vdata6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 24, !dbg !6090
  %arraydecay7 = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6091
  %call8 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %vdata6, i32 11, i8* %arraydecay7), !dbg !6092
  store i32 %call8, i32* %cd_node_layer_index, align 4, !dbg !6093
  br label %if.end, !dbg !6094

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6095
  %bm9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 10, !dbg !6096
  %11 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !6096
  %vdata10 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 24, !dbg !6097
  %12 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6098
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6099
  %bm11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 10, !dbg !6100
  %14 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !6100
  %vdata12 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !6101
  %call13 = call i32 @CustomData_get_layer_index(%struct.CustomData* %vdata12, i32 11), !dbg !6102
  %sub = sub nsw i32 %12, %call13, !dbg !6103
  %call14 = call i32 @CustomData_get_n_offset(%struct.CustomData* %vdata10, i32 11, i32 %sub), !dbg !6104
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6105
  %cd_vert_node_offset = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 11, !dbg !6106
  store i32 %call14, i32* %cd_vert_node_offset, align 8, !dbg !6107
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6108
  %bm15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 10, !dbg !6109
  %17 = load %struct.BMesh*, %struct.BMesh** %bm15, align 8, !dbg !6109
  %vdata16 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 24, !dbg !6110
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata16, i32 0, i32 0, !dbg !6111
  %18 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !6111
  %19 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6112
  %idxprom = sext i32 %19 to i64, !dbg !6108
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %18, i64 %idxprom, !dbg !6108
  %flag = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 2, !dbg !6113
  %20 = load i32, i32* %flag, align 8, !dbg !6114
  %or = or i32 %20, 5, !dbg !6114
  store i32 %or, i32* %flag, align 8, !dbg !6114
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6115
  %bm17 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 10, !dbg !6116
  %22 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !6116
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %22, i32 0, i32 27, !dbg !6117
  %arraydecay18 = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6118
  %call19 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %pdata, i32 11, i8* %arraydecay18), !dbg !6119
  store i32 %call19, i32* %cd_node_layer_index, align 4, !dbg !6120
  %23 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6121
  %cmp20 = icmp eq i32 %23, -1, !dbg !6123
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !6124

if.then21:                                        ; preds = %if.end
  %24 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6125
  %bm22 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %24, i32 0, i32 10, !dbg !6127
  %25 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !6127
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6128
  %bm23 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 10, !dbg !6129
  %27 = load %struct.BMesh*, %struct.BMesh** %bm23, align 8, !dbg !6129
  %pdata24 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %27, i32 0, i32 27, !dbg !6130
  %arraydecay25 = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6131
  call void @BM_data_layer_add_named(%struct.BMesh* %25, %struct.CustomData* %pdata24, i32 11, i8* %arraydecay25), !dbg !6132
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6133
  %bm26 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 10, !dbg !6134
  %29 = load %struct.BMesh*, %struct.BMesh** %bm26, align 8, !dbg !6134
  %pdata27 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %29, i32 0, i32 27, !dbg !6135
  %arraydecay28 = getelementptr inbounds [17 x i8], [17 x i8]* %layer_id, i64 0, i64 0, !dbg !6136
  %call29 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %pdata27, i32 11, i8* %arraydecay28), !dbg !6137
  store i32 %call29, i32* %cd_node_layer_index, align 4, !dbg !6138
  br label %if.end30, !dbg !6139

if.end30:                                         ; preds = %if.then21, %if.end
  %30 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6140
  %bm31 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %30, i32 0, i32 10, !dbg !6141
  %31 = load %struct.BMesh*, %struct.BMesh** %bm31, align 8, !dbg !6141
  %pdata32 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 27, !dbg !6142
  %32 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6143
  %33 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6144
  %bm33 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %33, i32 0, i32 10, !dbg !6145
  %34 = load %struct.BMesh*, %struct.BMesh** %bm33, align 8, !dbg !6145
  %pdata34 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %34, i32 0, i32 27, !dbg !6146
  %call35 = call i32 @CustomData_get_layer_index(%struct.CustomData* %pdata34, i32 11), !dbg !6147
  %sub36 = sub nsw i32 %32, %call35, !dbg !6148
  %call37 = call i32 @CustomData_get_n_offset(%struct.CustomData* %pdata32, i32 11, i32 %sub36), !dbg !6149
  %35 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6150
  %cd_face_node_offset = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %35, i32 0, i32 12, !dbg !6151
  store i32 %call37, i32* %cd_face_node_offset, align 4, !dbg !6152
  %36 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !6153
  %bm38 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %36, i32 0, i32 10, !dbg !6154
  %37 = load %struct.BMesh*, %struct.BMesh** %bm38, align 8, !dbg !6154
  %pdata39 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %37, i32 0, i32 27, !dbg !6155
  %layers40 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %pdata39, i32 0, i32 0, !dbg !6156
  %38 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers40, align 8, !dbg !6156
  %39 = load i32, i32* %cd_node_layer_index, align 4, !dbg !6157
  %idxprom41 = sext i32 %39 to i64, !dbg !6153
  %arrayidx42 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %38, i64 %idxprom41, !dbg !6153
  %flag43 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx42, i32 0, i32 2, !dbg !6158
  %40 = load i32, i32* %flag43, align 8, !dbg !6159
  %or44 = or i32 %40, 5, !dbg !6159
  store i32 %or44, i32* %flag43, align 8, !dbg !6159
  ret void, !dbg !6160
}

declare dso_local i32 @CustomData_get_named_layer_index(%struct.CustomData*, i32, i8*) #2

declare dso_local void @BM_data_layer_add_named(%struct.BMesh*, %struct.CustomData*, i32, i8*) #2

declare dso_local i32 @CustomData_get_n_offset(%struct.CustomData*, i32, i32) #2

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_update_after_dynamic_topology_toggle(%struct.bContext* %C) #0 !dbg !6161 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6166, metadata !DIExpression()), !dbg !6169
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6170
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6171
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6169
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6172, metadata !DIExpression()), !dbg !6173
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6174
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !6175
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !6173
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !6176, metadata !DIExpression()), !dbg !6177
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6178
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !6179
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6179
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 2, !dbg !6180
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !6180
  store %struct.Sculpt* %4, %struct.Sculpt** %sd, align 8, !dbg !6177
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6181
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !6182
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6183
  call void @BKE_sculpt_update_mesh_elements(%struct.Scene* %5, %struct.Sculpt* %6, %struct.Object* %7, i8 zeroext 0, i8 zeroext 0), !dbg !6184
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6185
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6186
  %10 = bitcast %struct.Object* %9 to i8*, !dbg !6186
  call void @WM_event_add_notifier(%struct.bContext* %8, i32 85393408, i8* %10), !dbg !6187
  ret void, !dbg !6188
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local void @BKE_sculpt_update_mesh_elements(%struct.Scene*, %struct.Sculpt*, %struct.Object*, i8 zeroext, i8 zeroext) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_dynamic_topology_enable(%struct.bContext* %C) #0 !dbg !6189 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %me = alloca %struct.Mesh*, align 8
  %allocsize = alloca %struct.BMAllocTemplate, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6192, metadata !DIExpression()), !dbg !6193
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6194
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6195
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6193
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6196, metadata !DIExpression()), !dbg !6197
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6198
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !6199
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !6197
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !6200, metadata !DIExpression()), !dbg !6201
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6202
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !6203
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6203
  store %struct.SculptSession* %3, %struct.SculptSession** %ss, align 8, !dbg !6201
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6204, metadata !DIExpression()), !dbg !6205
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6206
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !6207
  %5 = load i8*, i8** %data, align 8, !dbg !6207
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !6206
  store %struct.Mesh* %6, %struct.Mesh** %me, align 8, !dbg !6205
  call void @llvm.dbg.declare(metadata %struct.BMAllocTemplate* %allocsize, metadata !6208, metadata !DIExpression()), !dbg !6218
  %totvert = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 0, !dbg !6219
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6219
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 26, !dbg !6219
  %8 = load i32, i32* %totvert2, align 8, !dbg !6219
  store i32 %8, i32* %totvert, align 4, !dbg !6219
  %totedge = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 1, !dbg !6219
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6219
  %totedge3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 27, !dbg !6219
  %10 = load i32, i32* %totedge3, align 4, !dbg !6219
  store i32 %10, i32* %totedge, align 4, !dbg !6219
  %totloop = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 2, !dbg !6219
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6219
  %totloop4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 31, !dbg !6219
  %12 = load i32, i32* %totloop4, align 4, !dbg !6219
  store i32 %12, i32* %totloop, align 4, !dbg !6219
  %totface = getelementptr inbounds %struct.BMAllocTemplate, %struct.BMAllocTemplate* %allocsize, i32 0, i32 3, !dbg !6219
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6219
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 30, !dbg !6219
  %14 = load i32, i32* %totpoly, align 8, !dbg !6219
  store i32 %14, i32* %totface, align 4, !dbg !6219
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6220
  call void @sculpt_pbvh_clear(%struct.Object* %15), !dbg !6221
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6222
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 20, !dbg !6223
  %17 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6223
  %sculpt5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %17, i32 0, i32 2, !dbg !6224
  %18 = load %struct.Sculpt*, %struct.Sculpt** %sculpt5, align 8, !dbg !6224
  %flags = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %18, i32 0, i32 1, !dbg !6225
  %19 = load i32, i32* %flags, align 8, !dbg !6225
  %and = and i32 %19, 1024, !dbg !6226
  %cmp = icmp ne i32 %and, 0, !dbg !6227
  %conv = zext i1 %cmp to i32, !dbg !6227
  %conv6 = trunc i32 %conv to i8, !dbg !6228
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6229
  %bm_smooth_shading = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 13, !dbg !6230
  store i8 %conv6, i8* %bm_smooth_shading, align 8, !dbg !6231
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6232
  call void @BKE_mesh_mselect_clear(%struct.Mesh* %21), !dbg !6233
  %call7 = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* %allocsize), !dbg !6234
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6235
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 10, !dbg !6236
  store %struct.BMesh* %call7, %struct.BMesh** %bm, align 8, !dbg !6237
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6238
  %bm8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 10, !dbg !6239
  %24 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !6239
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6240
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6241
  %shapenr = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 115, !dbg !6242
  %27 = load i16, i16* %shapenr, align 2, !dbg !6242
  %conv9 = sext i16 %27 to i32, !dbg !6241
  call void @BM_mesh_bm_from_me(%struct.BMesh* %24, %struct.Mesh* %25, i8 zeroext 1, i8 zeroext 1, i32 %conv9), !dbg !6243
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6244
  %bm10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 10, !dbg !6245
  %29 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !6245
  call void @sculpt_dynamic_topology_triangulate(%struct.BMesh* %29), !dbg !6246
  %30 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6247
  %bm11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %30, i32 0, i32 10, !dbg !6248
  %31 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !6248
  %32 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6249
  %bm12 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %32, i32 0, i32 10, !dbg !6250
  %33 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !6250
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %33, i32 0, i32 24, !dbg !6251
  call void @BM_data_layer_add(%struct.BMesh* %31, %struct.CustomData* %vdata, i32 34), !dbg !6252
  %34 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6253
  call void @sculpt_dyntopo_node_layers_add(%struct.SculptSession* %34), !dbg !6254
  %35 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6255
  %bm13 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %35, i32 0, i32 10, !dbg !6256
  %36 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !6256
  call void @BM_mesh_normals_update(%struct.BMesh* %36), !dbg !6257
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6258
  %flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 38, !dbg !6259
  %38 = load i16, i16* %flag, align 2, !dbg !6260
  %conv14 = sext i16 %38 to i32, !dbg !6260
  %or = or i32 %conv14, 1024, !dbg !6260
  %conv15 = trunc i32 %or to i16, !dbg !6260
  store i16 %conv15, i16* %flag, align 2, !dbg !6260
  %39 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6261
  %bm16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %39, i32 0, i32 10, !dbg !6262
  %40 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !6262
  %call17 = call %struct.BMLog* @BM_log_create(%struct.BMesh* %40), !dbg !6263
  %41 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6264
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %41, i32 0, i32 14, !dbg !6265
  store %struct.BMLog* %call17, %struct.BMLog** %bm_log, align 8, !dbg !6266
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6267
  call void @sculpt_update_after_dynamic_topology_toggle(%struct.bContext* %42), !dbg !6268
  ret void, !dbg !6269
}

declare dso_local void @BKE_mesh_mselect_clear(%struct.Mesh*) #2

declare dso_local %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate*) #2

declare dso_local void @BM_mesh_bm_from_me(%struct.BMesh*, %struct.Mesh*, i8 zeroext, i8 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_dynamic_topology_triangulate(%struct.BMesh* %bm) #0 !dbg !6270 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6273, metadata !DIExpression()), !dbg !6274
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6275
  %totloop = getelementptr inbounds %struct.BMesh, %struct.BMesh* %0, i32 0, i32 2, !dbg !6277
  %1 = load i32, i32* %totloop, align 8, !dbg !6277
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6278
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 3, !dbg !6279
  %3 = load i32, i32* %totface, align 4, !dbg !6279
  %mul = mul nsw i32 %3, 3, !dbg !6280
  %cmp = icmp ne i32 %1, %mul, !dbg !6281
  br i1 %cmp, label %if.then, label %if.end, !dbg !6282

if.then:                                          ; preds = %entry
  %4 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6283
  call void @BM_mesh_triangulate(%struct.BMesh* %4, i32 1, i32 1, i8 zeroext 0, %struct.BMOperator* null, %struct.BMOpSlot* null), !dbg !6285
  br label %if.end, !dbg !6286

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6287
}

declare dso_local void @BM_data_layer_add(%struct.BMesh*, %struct.CustomData*, i32) #2

declare dso_local void @BM_mesh_normals_update(%struct.BMesh*) #2

declare dso_local %struct.BMLog* @BM_log_create(%struct.BMesh*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sculpt_dynamic_topology_disable(%struct.bContext* %C, %struct.SculptUndoNode* %unode) #0 !dbg !6288 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %unode.addr = alloca %struct.SculptUndoNode*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6291, metadata !DIExpression()), !dbg !6292
  store %struct.SculptUndoNode* %unode, %struct.SculptUndoNode** %unode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6295, metadata !DIExpression()), !dbg !6296
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6297
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !6298
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6296
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !6299, metadata !DIExpression()), !dbg !6300
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6301
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !6302
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6302
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6303, metadata !DIExpression()), !dbg !6304
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6305
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !6306
  %4 = load i8*, i8** %data, align 8, !dbg !6306
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !6305
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !6304
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6307
  call void @sculpt_pbvh_clear(%struct.Object* %6), !dbg !6308
  %7 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6309
  %tobool = icmp ne %struct.SculptUndoNode* %7, null, !dbg !6309
  br i1 %tobool, label %if.then, label %if.else, !dbg !6311

if.then:                                          ; preds = %entry
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6312
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 21, !dbg !6314
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6315
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !6316
  %10 = load i32, i32* %totvert, align 8, !dbg !6316
  call void @CustomData_free(%struct.CustomData* %vdata, i32 %10), !dbg !6317
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6318
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 22, !dbg !6319
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6320
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 27, !dbg !6321
  %13 = load i32, i32* %totedge, align 4, !dbg !6321
  call void @CustomData_free(%struct.CustomData* %edata, i32 %13), !dbg !6322
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6323
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 23, !dbg !6324
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6325
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 28, !dbg !6326
  %16 = load i32, i32* %totface, align 8, !dbg !6326
  call void @CustomData_free(%struct.CustomData* %fdata, i32 %16), !dbg !6327
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6328
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 25, !dbg !6329
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6330
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 31, !dbg !6331
  %19 = load i32, i32* %totloop, align 4, !dbg !6331
  call void @CustomData_free(%struct.CustomData* %ldata, i32 %19), !dbg !6332
  %20 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6333
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 24, !dbg !6334
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6335
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 30, !dbg !6336
  %22 = load i32, i32* %totpoly, align 8, !dbg !6336
  call void @CustomData_free(%struct.CustomData* %pdata, i32 %22), !dbg !6337
  %23 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6338
  %bm_enter_totvert = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %23, i32 0, i32 24, !dbg !6339
  %24 = load i32, i32* %bm_enter_totvert, align 8, !dbg !6339
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6340
  %totvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 26, !dbg !6341
  store i32 %24, i32* %totvert1, align 8, !dbg !6342
  %26 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6343
  %bm_enter_totloop = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %26, i32 0, i32 26, !dbg !6344
  %27 = load i32, i32* %bm_enter_totloop, align 8, !dbg !6344
  %28 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6345
  %totloop2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 31, !dbg !6346
  store i32 %27, i32* %totloop2, align 4, !dbg !6347
  %29 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6348
  %bm_enter_totpoly = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %29, i32 0, i32 27, !dbg !6349
  %30 = load i32, i32* %bm_enter_totpoly, align 4, !dbg !6349
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6350
  %totpoly3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 30, !dbg !6351
  store i32 %30, i32* %totpoly3, align 8, !dbg !6352
  %32 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6353
  %bm_enter_totedge = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %32, i32 0, i32 25, !dbg !6354
  %33 = load i32, i32* %bm_enter_totedge, align 4, !dbg !6354
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6355
  %totedge4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 27, !dbg !6356
  store i32 %33, i32* %totedge4, align 4, !dbg !6357
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6358
  %totface5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 28, !dbg !6359
  store i32 0, i32* %totface5, align 8, !dbg !6360
  %36 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6361
  %bm_enter_vdata = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %36, i32 0, i32 20, !dbg !6362
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6363
  %vdata6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 21, !dbg !6364
  %38 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !6365
  %39 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6366
  %bm_enter_totvert7 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %39, i32 0, i32 24, !dbg !6367
  %40 = load i32, i32* %bm_enter_totvert7, align 8, !dbg !6367
  call void @CustomData_copy(%struct.CustomData* %bm_enter_vdata, %struct.CustomData* %vdata6, i64 %38, i32 4, i32 %40), !dbg !6368
  %41 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6369
  %bm_enter_edata = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %41, i32 0, i32 21, !dbg !6370
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6371
  %edata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 22, !dbg !6372
  %43 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !6373
  %44 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6374
  %bm_enter_totedge9 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %44, i32 0, i32 25, !dbg !6375
  %45 = load i32, i32* %bm_enter_totedge9, align 4, !dbg !6375
  call void @CustomData_copy(%struct.CustomData* %bm_enter_edata, %struct.CustomData* %edata8, i64 %43, i32 4, i32 %45), !dbg !6376
  %46 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6377
  %bm_enter_ldata = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %46, i32 0, i32 22, !dbg !6378
  %47 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6379
  %ldata10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %47, i32 0, i32 25, !dbg !6380
  %48 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !6381
  %49 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6382
  %bm_enter_totloop11 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %49, i32 0, i32 26, !dbg !6383
  %50 = load i32, i32* %bm_enter_totloop11, align 8, !dbg !6383
  call void @CustomData_copy(%struct.CustomData* %bm_enter_ldata, %struct.CustomData* %ldata10, i64 %48, i32 4, i32 %50), !dbg !6384
  %51 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6385
  %bm_enter_pdata = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %51, i32 0, i32 23, !dbg !6386
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6387
  %pdata12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 24, !dbg !6388
  %53 = load i64, i64* @CD_MASK_MESH, align 8, !dbg !6389
  %54 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !6390
  %bm_enter_totpoly13 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %54, i32 0, i32 27, !dbg !6391
  %55 = load i32, i32* %bm_enter_totpoly13, align 4, !dbg !6391
  call void @CustomData_copy(%struct.CustomData* %bm_enter_pdata, %struct.CustomData* %pdata12, i64 %53, i32 4, i32 %55), !dbg !6392
  %56 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6393
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %56, i8 zeroext 0), !dbg !6394
  br label %if.end, !dbg !6395

if.else:                                          ; preds = %entry
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6396
  call void @BKE_sculptsession_bm_to_me(%struct.Object* %57, i8 zeroext 1), !dbg !6398
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %58 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6399
  %flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %58, i32 0, i32 38, !dbg !6400
  %59 = load i16, i16* %flag, align 2, !dbg !6401
  %conv = sext i16 %59 to i32, !dbg !6401
  %and = and i32 %conv, -1025, !dbg !6401
  %conv14 = trunc i32 %and to i16, !dbg !6401
  store i16 %conv14, i16* %flag, align 2, !dbg !6401
  %60 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6402
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %60, i32 0, i32 10, !dbg !6404
  %61 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6404
  %tobool15 = icmp ne %struct.BMesh* %61, null, !dbg !6402
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !6405

if.then16:                                        ; preds = %if.end
  %62 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6406
  %bm17 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %62, i32 0, i32 10, !dbg !6408
  %63 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !6408
  call void @BM_mesh_free(%struct.BMesh* %63), !dbg !6409
  %64 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6410
  %bm18 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %64, i32 0, i32 10, !dbg !6411
  store %struct.BMesh* null, %struct.BMesh** %bm18, align 8, !dbg !6412
  br label %if.end19, !dbg !6413

if.end19:                                         ; preds = %if.then16, %if.end
  %65 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6414
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %65, i32 0, i32 14, !dbg !6416
  %66 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !6416
  %tobool20 = icmp ne %struct.BMLog* %66, null, !dbg !6414
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !6417

if.then21:                                        ; preds = %if.end19
  %67 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6418
  %bm_log22 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %67, i32 0, i32 14, !dbg !6420
  %68 = load %struct.BMLog*, %struct.BMLog** %bm_log22, align 8, !dbg !6420
  call void @BM_log_free(%struct.BMLog* %68), !dbg !6421
  %69 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6422
  %bm_log23 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %69, i32 0, i32 14, !dbg !6423
  store %struct.BMLog* null, %struct.BMLog** %bm_log23, align 8, !dbg !6424
  br label %if.end24, !dbg !6425

if.end24:                                         ; preds = %if.then21, %if.end19
  %70 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6426
  call void @sculpt_update_after_dynamic_topology_toggle(%struct.bContext* %70), !dbg !6427
  ret void, !dbg !6428
}

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_copy(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

declare dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh*, i8 zeroext) #2

declare dso_local void @BKE_sculptsession_bm_to_me(%struct.Object*, i8 zeroext) #2

declare dso_local void @BM_mesh_free(%struct.BMesh*) #2

declare dso_local void @BM_log_free(%struct.BMLog*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_operatortypes_sculpt() #0 !dbg !6429 {
entry:
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_brush_stroke), !dbg !6432
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_sculptmode_toggle), !dbg !6433
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_set_persistent_base), !dbg !6434
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_dynamic_topology_toggle), !dbg !6435
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_optimize), !dbg !6436
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_symmetrize), !dbg !6437
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_detail_flood_fill), !dbg !6438
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCULPT_OT_sample_detail_size), !dbg !6439
  ret void, !dbg !6440
}

declare dso_local void @WM_operatortype_append(void (%struct.wmOperatorType*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_brush_stroke(%struct.wmOperatorType* %ot) #0 !dbg !6441 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6534
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6535
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %name, align 8, !dbg !6536
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6537
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6538
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8** %idname, align 8, !dbg !6539
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6540
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6541
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i8** %description, align 8, !dbg !6542
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6543
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6544
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sculpt_brush_stroke_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6545
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6546
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !6547
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @paint_stroke_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6548
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6549
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !6550
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_brush_stroke_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6551
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6552
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !6553
  store i32 (%struct.bContext*)* @sculpt_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6554
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6555
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !6556
  store void (%struct.bContext*, %struct.wmOperator*)* @sculpt_brush_stroke_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6557
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6558
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !6559
  store i16 4, i16* %flag, align 8, !dbg !6560
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6561
  call void @paint_stroke_operator_properties(%struct.wmOperatorType* %9), !dbg !6562
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6563
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !6564
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6564
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !6563
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0)), !dbg !6565
  ret void, !dbg !6566
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_sculptmode_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6567 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6570
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6571
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), i8** %name, align 8, !dbg !6572
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6573
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6574
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i8** %idname, align 8, !dbg !6575
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6576
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6577
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0), i8** %description, align 8, !dbg !6578
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6579
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6580
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_mode_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6581
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6582
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6583
  store i32 (%struct.bContext*)* @ED_operator_object_active_editable_mesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6584
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6585
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6586
  store i16 3, i16* %flag, align 8, !dbg !6587
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_set_persistent_base(%struct.wmOperatorType* %ot) #0 !dbg !6589 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6592
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6593
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i64 0, i64 0), i8** %name, align 8, !dbg !6594
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6595
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6596
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54, i64 0, i64 0), i8** %idname, align 8, !dbg !6597
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6598
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6599
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.55, i64 0, i64 0), i8** %description, align 8, !dbg !6600
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6601
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6602
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_set_persistent_base_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6603
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6604
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6605
  store i32 (%struct.bContext*)* @sculpt_mode_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6606
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6607
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6608
  store i16 3, i16* %flag, align 8, !dbg !6609
  ret void, !dbg !6610
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_dynamic_topology_toggle(%struct.wmOperatorType* %ot) #0 !dbg !6611 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6614
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6615
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8** %name, align 8, !dbg !6616
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6617
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6618
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i8** %idname, align 8, !dbg !6619
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6620
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6621
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.58, i64 0, i64 0), i8** %description, align 8, !dbg !6622
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6623
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6624
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sculpt_dynamic_topology_toggle_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6625
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6626
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6627
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_dynamic_topology_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6628
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6629
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6630
  store i32 (%struct.bContext*)* @sculpt_mode_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6631
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6632
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6633
  store i16 3, i16* %flag, align 8, !dbg !6634
  ret void, !dbg !6635
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_optimize(%struct.wmOperatorType* %ot) #0 !dbg !6636 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6639
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6640
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i8** %name, align 8, !dbg !6641
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6642
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6643
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i8** %idname, align 8, !dbg !6644
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6645
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6646
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.67, i64 0, i64 0), i8** %description, align 8, !dbg !6647
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6648
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6649
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_optimize_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6650
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6651
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6652
  store i32 (%struct.bContext*)* @sculpt_and_dynamic_topology_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6653
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6654
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6655
  store i16 3, i16* %flag, align 8, !dbg !6656
  ret void, !dbg !6657
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_symmetrize(%struct.wmOperatorType* %ot) #0 !dbg !6658 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6659, metadata !DIExpression()), !dbg !6660
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6661
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6662
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i8** %name, align 8, !dbg !6663
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6664
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6665
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i64 0, i64 0), i8** %idname, align 8, !dbg !6666
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6667
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6668
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i64 0, i64 0), i8** %description, align 8, !dbg !6669
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6670
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6671
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_symmetrize_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6672
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6673
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6674
  store i32 (%struct.bContext*)* @sculpt_and_dynamic_topology_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6675
  ret void, !dbg !6676
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_detail_flood_fill(%struct.wmOperatorType* %ot) #0 !dbg !6677 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6680
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6681
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.73, i64 0, i64 0), i8** %name, align 8, !dbg !6682
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6683
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6684
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.74, i64 0, i64 0), i8** %idname, align 8, !dbg !6685
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6686
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6687
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.75, i64 0, i64 0), i8** %description, align 8, !dbg !6688
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6689
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6690
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_detail_flood_fill_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6691
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6692
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6693
  store i32 (%struct.bContext*)* @sculpt_and_dynamic_topology_constant_detail_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6694
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6695
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6696
  store i16 3, i16* %flag, align 8, !dbg !6697
  ret void, !dbg !6698
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCULPT_OT_sample_detail_size(%struct.wmOperatorType* %ot) #0 !dbg !6699 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6700, metadata !DIExpression()), !dbg !6701
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6702
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6703
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i8** %name, align 8, !dbg !6704
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6705
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6706
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i64 0, i64 0), i8** %idname, align 8, !dbg !6707
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6708
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6709
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.79, i64 0, i64 0), i8** %description, align 8, !dbg !6710
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6711
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6712
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sculpt_sample_detail_size_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6713
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6714
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !6715
  store i32 (%struct.bContext*, %struct.wmOperator*)* @sculpt_sample_detail_size_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6716
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6717
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !6718
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @sculpt_sample_detail_size_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6719
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6720
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !6721
  store i32 (%struct.bContext*)* @sculpt_and_dynamic_topology_constant_detail_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6722
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6723
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !6724
  store i16 3, i16* %flag, align 8, !dbg !6725
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6726
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !6727
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6727
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !6726
  %call = call %struct.PropertyRNA* @RNA_def_int_array(i8* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i32 2, i32* null, i32 0, i32 32767, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.81, i64 0, i64 0), i32 0, i32 32767), !dbg !6728
  ret void, !dbg !6729
}

declare dso_local zeroext i8 @BLI_rcti_is_empty(%struct.rcti*) #2

declare dso_local void @BLI_rcti_union(%struct.rcti*, %struct.rcti*) #2

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local %struct.Brush* @BKE_paint_brush(%struct.Paint*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_any_smooth_mode(%struct.Brush* %brush, %struct.StrokeCache* %cache, i32 %stroke_mode) #0 !dbg !6730 {
entry:
  %brush.addr = alloca %struct.Brush*, align 8
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %stroke_mode.addr = alloca i32, align 4
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  store i32 %stroke_mode, i32* %stroke_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stroke_mode.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load i32, i32* %stroke_mode.addr, align 4, !dbg !6741
  %cmp = icmp eq i32 %0, 2, !dbg !6742
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !6743

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !6744
  %tobool = icmp ne %struct.StrokeCache* %1, null, !dbg !6744
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false2, !dbg !6745

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !6746
  %alt_smooth = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %2, i32 0, i32 48, !dbg !6747
  %3 = load i8, i8* %alt_smooth, align 8, !dbg !6747
  %conv = zext i8 %3 to i32, !dbg !6746
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6746
  br i1 %tobool1, label %lor.end, label %lor.lhs.false2, !dbg !6748

lor.lhs.false2:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %4 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !6749
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %4, i32 0, i32 34, !dbg !6750
  %5 = load i8, i8* %sculpt_tool, align 8, !dbg !6750
  %conv3 = zext i8 %5 to i32, !dbg !6749
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !6751
  br i1 %cmp4, label %lor.end, label %lor.lhs.false6, !dbg !6752

lor.lhs.false6:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !6753
  %autosmooth_factor = getelementptr inbounds %struct.Brush, %struct.Brush* %6, i32 0, i32 38, !dbg !6754
  %7 = load float, float* %autosmooth_factor, align 4, !dbg !6754
  %cmp7 = fcmp ogt float %7, 0.000000e+00, !dbg !6755
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !6756

lor.rhs:                                          ; preds = %lor.lhs.false6
  %8 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !6757
  %sculpt_tool9 = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 34, !dbg !6758
  %9 = load i8, i8* %sculpt_tool9, align 8, !dbg !6758
  %conv10 = zext i8 %9 to i32, !dbg !6757
  %cmp11 = icmp eq i32 %conv10, 19, !dbg !6759
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !6760

land.rhs:                                         ; preds = %lor.rhs
  %10 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !6761
  %mask_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 37, !dbg !6762
  %11 = load i8, i8* %mask_tool, align 1, !dbg !6762
  %conv13 = zext i8 %11 to i32, !dbg !6761
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !6763
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %12 = phi i1 [ false, %lor.rhs ], [ %cmp14, %land.rhs ], !dbg !6764
  br label %lor.end, !dbg !6756

lor.end:                                          ; preds = %land.end, %lor.lhs.false6, %lor.lhs.false2, %land.lhs.true, %entry
  %13 = phi i1 [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false2 ], [ true, %land.lhs.true ], [ true, %entry ], [ %12, %land.end ]
  %lor.ext = zext i1 %13 to i32, !dbg !6756
  %conv16 = trunc i32 %lor.ext to i8, !dbg !6765
  ret i8 %conv16, !dbg !6766
}

declare dso_local zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion*, %struct.View3D*, float*, float*, float*, i8 zeroext) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !6767 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  %0 = load float*, float** %n.addr, align 8, !dbg !6772
  %1 = load float*, float** %n.addr, align 8, !dbg !6773
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !6774
  ret float %call, !dbg !6775
}

declare dso_local void @BKE_pbvh_raycast_project_ray_root(%struct.PBVH*, i8 zeroext, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6776 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata float* %d, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load float*, float** %a.addr, align 8, !dbg !6785
  %1 = load float*, float** %a.addr, align 8, !dbg !6786
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6787
  store float %call, float* %d, align 4, !dbg !6784
  %2 = load float, float* %d, align 4, !dbg !6788
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6790
  br i1 %cmp, label %if.then, label %if.else, !dbg !6791

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6792
  %call1 = call float @sqrtf(float %3) #5, !dbg !6794
  store float %call1, float* %d, align 4, !dbg !6795
  %4 = load float*, float** %r.addr, align 8, !dbg !6796
  %5 = load float*, float** %a.addr, align 8, !dbg !6797
  %6 = load float, float* %d, align 4, !dbg !6798
  %div = fdiv float 1.000000e+00, %6, !dbg !6799
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6800
  br label %if.end, !dbg !6801

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6802
  call void @zero_v3(float* %7), !dbg !6804
  store float 0.000000e+00, float* %d, align 4, !dbg !6805
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6806
  ret float %8, !dbg !6807
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !6808 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6813, metadata !DIExpression()), !dbg !6814
  %0 = load float*, float** %a.addr, align 8, !dbg !6815
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6815
  %1 = load float, float* %arrayidx, align 4, !dbg !6815
  %2 = load float*, float** %b.addr, align 8, !dbg !6816
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6816
  %3 = load float, float* %arrayidx1, align 4, !dbg !6816
  %mul = fmul float %1, %3, !dbg !6817
  %4 = load float*, float** %a.addr, align 8, !dbg !6818
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6818
  %5 = load float, float* %arrayidx2, align 4, !dbg !6818
  %6 = load float*, float** %b.addr, align 8, !dbg !6819
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6819
  %7 = load float, float* %arrayidx3, align 4, !dbg !6819
  %mul4 = fmul float %5, %7, !dbg !6820
  %add = fadd float %mul, %mul4, !dbg !6821
  %8 = load float*, float** %a.addr, align 8, !dbg !6822
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6822
  %9 = load float, float* %arrayidx5, align 4, !dbg !6822
  %10 = load float*, float** %b.addr, align 8, !dbg !6823
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6823
  %11 = load float, float* %arrayidx6, align 4, !dbg !6823
  %mul7 = fmul float %9, %11, !dbg !6824
  %add8 = fadd float %add, %mul7, !dbg !6825
  ret float %add8, !dbg !6826
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6827 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6830, metadata !DIExpression()), !dbg !6831
  %0 = load float*, float** %r.addr, align 8, !dbg !6832
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6832
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6833
  %1 = load float*, float** %r.addr, align 8, !dbg !6834
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6834
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6835
  %2 = load float*, float** %r.addr, align 8, !dbg !6836
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6836
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6837
  ret void, !dbg !6838
}

declare dso_local float @BKE_pbvh_node_get_tmin(%struct.PBVHNode*) #2

declare dso_local i32 @BKE_pbvh_type(%struct.PBVH*) #2

declare dso_local %struct.SculptUndoNode* @sculpt_undo_get_node(%struct.PBVHNode*) #2

declare dso_local zeroext i8 @BKE_pbvh_node_raycast(%struct.PBVH*, %struct.PBVHNode*, [3 x float]*, i32, float*, float*, float*) #2

declare dso_local void @BM_mesh_triangulate(%struct.BMesh*, i32, i32, i8 zeroext, %struct.BMOperator*, %struct.BMOpSlot*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_brush_stroke_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6839 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %stroke = alloca %struct.PaintStroke*, align 8
  %ignore_background_click = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6851, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %stroke, metadata !6853, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata i32* %ignore_background_click, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6859, metadata !DIExpression()), !dbg !6860
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6861
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6863
  %call = call zeroext i8 @sculpt_brush_stroke_init(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !6864
  %tobool = icmp ne i8 %call, 0, !dbg !6864
  br i1 %tobool, label %if.end, label %if.then, !dbg !6865

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6866
  br label %return, !dbg !6866

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6867
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6868
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6869
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !6870
  %5 = load i16, i16* %type, align 8, !dbg !6870
  %conv = sext i16 %5 to i32, !dbg !6869
  %call2 = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %2, %struct.wmOperator* %3, i8 (%struct.bContext*, float*, float*)* @sculpt_stroke_get_location, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @sculpt_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @sculpt_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @sculpt_stroke_done, i32 %conv), !dbg !6871
  store %struct.PaintStroke* %call2, %struct.PaintStroke** %stroke, align 8, !dbg !6872
  %6 = load %struct.PaintStroke*, %struct.PaintStroke** %stroke, align 8, !dbg !6873
  %7 = bitcast %struct.PaintStroke* %6 to i8*, !dbg !6873
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6874
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 5, !dbg !6875
  store i8* %7, i8** %customdata, align 8, !dbg !6876
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6877
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !6878
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6878
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)), !dbg !6879
  store i32 %call3, i32* %ignore_background_click, align 4, !dbg !6880
  %11 = load i32, i32* %ignore_background_click, align 4, !dbg !6881
  %tobool4 = icmp ne i32 %11, 0, !dbg !6881
  br i1 %tobool4, label %land.lhs.true, label %if.end10, !dbg !6883

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6884
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6885
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6886
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 4, !dbg !6887
  %15 = load i32, i32* %x, align 4, !dbg !6887
  %conv5 = sitofp i32 %15 to float, !dbg !6886
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6888
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 5, !dbg !6889
  %17 = load i32, i32* %y, align 8, !dbg !6889
  %conv6 = sitofp i32 %17 to float, !dbg !6888
  %call7 = call zeroext i8 @over_mesh(%struct.bContext* %12, %struct.wmOperator* %13, float %conv5, float %conv6), !dbg !6890
  %tobool8 = icmp ne i8 %call7, 0, !dbg !6890
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6891

if.then9:                                         ; preds = %land.lhs.true
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6892
  call void @paint_stroke_data_free(%struct.wmOperator* %18), !dbg !6894
  store i32 8, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6896
  %type11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 4, !dbg !6898
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type11, align 8, !dbg !6898
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 8, !dbg !6899
  %21 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6899
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6900
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6901
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6902
  %call12 = call i32 %21(%struct.bContext* %22, %struct.wmOperator* %23, %struct.wmEvent* %24), !dbg !6896
  store i32 %call12, i32* %retval1, align 4, !dbg !6903
  %cmp = icmp eq i32 %call12, 4, !dbg !6904
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !6905

if.then14:                                        ; preds = %if.end10
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6906
  call void @paint_stroke_data_free(%struct.wmOperator* %25), !dbg !6908
  store i32 4, i32* %retval, align 4, !dbg !6909
  br label %return, !dbg !6909

if.end15:                                         ; preds = %if.end10
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6910
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6911
  %call16 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %26, %struct.wmOperator* %27), !dbg !6912
  %28 = load i32, i32* %retval1, align 4, !dbg !6913
  store i32 1, i32* %retval, align 4, !dbg !6914
  br label %return, !dbg !6914

return:                                           ; preds = %if.end15, %if.then14, %if.then9, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !6915
  ret i32 %29, !dbg !6915
}

declare dso_local i32 @paint_stroke_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_brush_stroke_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6916 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6919, metadata !DIExpression()), !dbg !6920
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6923
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6925
  %call = call zeroext i8 @sculpt_brush_stroke_init(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !6926
  %tobool = icmp ne i8 %call, 0, !dbg !6926
  br i1 %tobool, label %if.end, label %if.then, !dbg !6927

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6929
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6930
  %call1 = call %struct.PaintStroke* @paint_stroke_new(%struct.bContext* %2, %struct.wmOperator* %3, i8 (%struct.bContext*, float*, float*)* @sculpt_stroke_get_location, i8 (%struct.bContext*, %struct.wmOperator*, float*)* @sculpt_stroke_test_start, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)* @sculpt_stroke_update_step, void (%struct.bContext*, %struct.PaintStroke*, i8)* null, void (%struct.bContext*, %struct.PaintStroke*)* @sculpt_stroke_done, i32 0), !dbg !6931
  %4 = bitcast %struct.PaintStroke* %call1 to i8*, !dbg !6931
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6932
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !6933
  store i8* %4, i8** %customdata, align 8, !dbg !6934
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6935
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6936
  %call2 = call i32 @paint_stroke_exec(%struct.bContext* %6, %struct.wmOperator* %7), !dbg !6937
  store i32 4, i32* %retval, align 4, !dbg !6938
  br label %return, !dbg !6938

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6939
  ret i32 %8, !dbg !6939
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_brush_stroke_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6940 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6945, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6947, metadata !DIExpression()), !dbg !6948
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6949
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !6950
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6948
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !6951, metadata !DIExpression()), !dbg !6952
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6953
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !6954
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !6954
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !6952
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !6955, metadata !DIExpression()), !dbg !6956
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6957
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %3), !dbg !6958
  %sculpt2 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call1, i32 0, i32 2, !dbg !6959
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sculpt2, align 8, !dbg !6959
  store %struct.Sculpt* %4, %struct.Sculpt** %sd, align 8, !dbg !6956
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6960
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 28, !dbg !6962
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !6962
  %tobool = icmp ne %struct.StrokeCache* %6, null, !dbg !6960
  br i1 %tobool, label %if.then, label %if.end, !dbg !6963

if.then:                                          ; preds = %entry
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !6964
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6966
  call void @paint_mesh_restore_co(%struct.Sculpt* %7, %struct.Object* %8), !dbg !6967
  br label %if.end, !dbg !6968

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6969
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6970
  call void @paint_stroke_cancel(%struct.bContext* %9, %struct.wmOperator* %10), !dbg !6971
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6972
  %cache3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !6974
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache3, align 8, !dbg !6974
  %tobool4 = icmp ne %struct.StrokeCache* %12, null, !dbg !6972
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !6975

if.then5:                                         ; preds = %if.end
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6976
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 28, !dbg !6978
  %14 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !6978
  call void @sculpt_cache_free(%struct.StrokeCache* %14), !dbg !6979
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !6980
  %cache7 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 28, !dbg !6981
  store %struct.StrokeCache* null, %struct.StrokeCache** %cache7, align 8, !dbg !6982
  br label %if.end8, !dbg !6983

if.end8:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !6984
  call void @sculpt_brush_exit_tex(%struct.Sculpt* %16), !dbg !6985
  ret void, !dbg !6986
}

declare dso_local void @paint_stroke_operator_properties(%struct.wmOperatorType*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_stroke_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6987 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mode = alloca i32, align 4
  %is_smooth = alloca i8, align 1
  %need_mask = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6996
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6997
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6995
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6998, metadata !DIExpression()), !dbg !6999
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7000
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !7001
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !6999
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !7002, metadata !DIExpression()), !dbg !7003
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7004
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %2), !dbg !7005
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call2, i32 0, i32 2, !dbg !7006
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !7006
  store %struct.Sculpt* %3, %struct.Sculpt** %sd, align 8, !dbg !7003
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !7007, metadata !DIExpression()), !dbg !7008
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7009
  %call3 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %4), !dbg !7010
  %sculpt4 = getelementptr inbounds %struct.Object, %struct.Object* %call3, i32 0, i32 2, !dbg !7011
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt4, align 8, !dbg !7011
  store %struct.SculptSession* %5, %struct.SculptSession** %ss, align 8, !dbg !7008
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7012, metadata !DIExpression()), !dbg !7013
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7014
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %6, i32 0, i32 0, !dbg !7015
  %call5 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7016
  store %struct.Brush* %call5, %struct.Brush** %brush, align 8, !dbg !7013
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7017, metadata !DIExpression()), !dbg !7018
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7019
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !7020
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7020
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)), !dbg !7021
  store i32 %call6, i32* %mode, align 4, !dbg !7018
  call void @llvm.dbg.declare(metadata i8* %is_smooth, metadata !7022, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.declare(metadata i8* %need_mask, metadata !7024, metadata !DIExpression()), !dbg !7025
  store i8 0, i8* %need_mask, align 1, !dbg !7025
  %9 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7026
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 34, !dbg !7028
  %10 = load i8, i8* %sculpt_tool, align 8, !dbg !7028
  %conv = zext i8 %10 to i32, !dbg !7026
  %cmp = icmp eq i32 %conv, 19, !dbg !7029
  br i1 %cmp, label %if.then, label %if.end, !dbg !7030

if.then:                                          ; preds = %entry
  store i8 1, i8* %need_mask, align 1, !dbg !7031
  br label %if.end, !dbg !7033

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7034
  call void @view3d_operator_needs_opengl(%struct.bContext* %11), !dbg !7035
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7036
  %13 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7037
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7038
  call void @sculpt_brush_init_tex(%struct.Scene* %12, %struct.Sculpt* %13, %struct.SculptSession* %14), !dbg !7039
  %15 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7040
  %16 = load i32, i32* %mode, align 4, !dbg !7041
  %call8 = call zeroext i8 @sculpt_any_smooth_mode(%struct.Brush* %15, %struct.StrokeCache* null, i32 %16), !dbg !7042
  store i8 %call8, i8* %is_smooth, align 1, !dbg !7043
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7044
  %18 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7045
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7046
  %20 = load i8, i8* %is_smooth, align 1, !dbg !7047
  %21 = load i8, i8* %need_mask, align 1, !dbg !7048
  call void @BKE_sculpt_update_mesh_elements(%struct.Scene* %17, %struct.Sculpt* %18, %struct.Object* %19, i8 zeroext %20, i8 zeroext %21), !dbg !7049
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7050
  %sculpt9 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 2, !dbg !7051
  %23 = load %struct.SculptSession*, %struct.SculptSession** %sculpt9, align 8, !dbg !7051
  %average_stroke_accum = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 31, !dbg !7052
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %average_stroke_accum, i64 0, i64 0, !dbg !7050
  call void @zero_v3(float* %arraydecay), !dbg !7053
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7054
  %sculpt10 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 2, !dbg !7055
  %25 = load %struct.SculptSession*, %struct.SculptSession** %sculpt10, align 8, !dbg !7055
  %average_stroke_counter = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 32, !dbg !7056
  store i32 0, i32* %average_stroke_counter, align 4, !dbg !7057
  ret i8 1, !dbg !7058
}

declare dso_local %struct.PaintStroke* @paint_stroke_new(%struct.bContext*, %struct.wmOperator*, i8 (%struct.bContext*, float*, float*)*, i8 (%struct.bContext*, %struct.wmOperator*, float*)*, void (%struct.bContext*, %struct.PaintStroke*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PaintStroke*, i8)*, void (%struct.bContext*, %struct.PaintStroke*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_stroke_test_start(%struct.bContext* %C, %struct.wmOperator* %op, float* %mouse) #0 !dbg !7059 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mouse.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7062, metadata !DIExpression()), !dbg !7063
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  %0 = load float*, float** %mouse.addr, align 8, !dbg !7068
  %tobool = icmp ne float* %0, null, !dbg !7068
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7070

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7071
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7072
  %3 = load float*, float** %mouse.addr, align 8, !dbg !7073
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !7073
  %4 = load float, float* %arrayidx, align 4, !dbg !7073
  %5 = load float*, float** %mouse.addr, align 8, !dbg !7074
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 1, !dbg !7074
  %6 = load float, float* %arrayidx1, align 4, !dbg !7074
  %call = call zeroext i8 @over_mesh(%struct.bContext* %1, %struct.wmOperator* %2, float %4, float %6), !dbg !7075
  %conv = zext i8 %call to i32, !dbg !7075
  %tobool2 = icmp ne i32 %conv, 0, !dbg !7075
  br i1 %tobool2, label %if.then, label %if.else, !dbg !7076

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7077, metadata !DIExpression()), !dbg !7079
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7080
  %call3 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %7), !dbg !7081
  store %struct.Object* %call3, %struct.Object** %ob, align 8, !dbg !7079
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !7082, metadata !DIExpression()), !dbg !7083
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7084
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 2, !dbg !7085
  %9 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !7085
  store %struct.SculptSession* %9, %struct.SculptSession** %ss, align 8, !dbg !7083
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !7086, metadata !DIExpression()), !dbg !7087
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7088
  %call4 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %10), !dbg !7089
  %sculpt5 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call4, i32 0, i32 2, !dbg !7090
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sculpt5, align 8, !dbg !7090
  store %struct.Sculpt* %11, %struct.Sculpt** %sd, align 8, !dbg !7087
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7091
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7092
  %call6 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %13), !dbg !7093
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %12, %struct.RegionView3D* %call6), !dbg !7094
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7095
  %15 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7096
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7097
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7098
  %18 = load float*, float** %mouse.addr, align 8, !dbg !7099
  call void @sculpt_update_cache_invariants(%struct.bContext* %14, %struct.Sculpt* %15, %struct.SculptSession* %16, %struct.wmOperator* %17, float* %18), !dbg !7100
  %19 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7101
  %call7 = call i8* @sculpt_tool_name(%struct.Sculpt* %19), !dbg !7102
  call void @sculpt_undo_push_begin(i8* %call7), !dbg !7103
  store i8 1, i8* %retval, align 1, !dbg !7104
  br label %return, !dbg !7104

if.else:                                          ; preds = %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !7105
  br label %return, !dbg !7105

return:                                           ; preds = %if.else, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !7106
  ret i8 %20, !dbg !7106
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_stroke_update_step(%struct.bContext* %C, %struct.PaintStroke* %UNUSED_stroke, %struct.PointerRNA* %itemptr) #0 !dbg !7107 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_stroke.addr = alloca %struct.PaintStroke*, align 8
  %itemptr.addr = alloca %struct.PointerRNA*, align 8
  %ups = alloca %struct.UnifiedPaintSettings*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  store %struct.PaintStroke* %UNUSED_stroke, %struct.PaintStroke** %UNUSED_stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %UNUSED_stroke.addr, metadata !7114, metadata !DIExpression()), !dbg !7115
  store %struct.PointerRNA* %itemptr, %struct.PointerRNA** %itemptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %itemptr.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups, metadata !7118, metadata !DIExpression()), !dbg !7121
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7122
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7123
  %unified_paint_settings = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call, i32 0, i32 73, !dbg !7124
  store %struct.UnifiedPaintSettings* %unified_paint_settings, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7121
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !7125, metadata !DIExpression()), !dbg !7126
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7127
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !7128
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call1, i32 0, i32 2, !dbg !7129
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !7129
  store %struct.Sculpt* %2, %struct.Sculpt** %sd, align 8, !dbg !7126
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7130, metadata !DIExpression()), !dbg !7131
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7132
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %3), !dbg !7133
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !7131
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !7134, metadata !DIExpression()), !dbg !7135
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7136
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !7137
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !7137
  store %struct.SculptSession* %5, %struct.SculptSession** %ss, align 8, !dbg !7135
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7138, metadata !DIExpression()), !dbg !7139
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7140
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %6, i32 0, i32 0, !dbg !7141
  %call4 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7142
  store %struct.Brush* %call4, %struct.Brush** %brush, align 8, !dbg !7139
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7143
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7144
  call void @sculpt_stroke_modifiers_check(%struct.bContext* %7, %struct.Object* %8), !dbg !7145
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7146
  %10 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7147
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7148
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %itemptr.addr, align 8, !dbg !7149
  call void @sculpt_update_cache_variants(%struct.bContext* %9, %struct.Sculpt* %10, %struct.Object* %11, %struct.PointerRNA* %12), !dbg !7150
  %13 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7151
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7152
  call void @sculpt_restore_mesh(%struct.Sculpt* %13, %struct.Object* %14), !dbg !7153
  %15 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7154
  %flags = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %15, i32 0, i32 1, !dbg !7156
  %16 = load i32, i32* %flags, align 8, !dbg !7156
  %and = and i32 %16, 8192, !dbg !7157
  %tobool = icmp ne i32 %and, 0, !dbg !7157
  br i1 %tobool, label %if.then, label %if.else, !dbg !7158

if.then:                                          ; preds = %entry
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7159
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 15, !dbg !7161
  %18 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !7161
  %19 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7162
  %constant_detail = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %19, i32 0, i32 6, !dbg !7163
  %20 = load float, float* %constant_detail, align 4, !dbg !7163
  %div = fdiv float %20, 1.000000e+02, !dbg !7164
  call void @BKE_pbvh_bmesh_detail_size_set(%struct.PBVH* %18, float %div), !dbg !7165
  br label %if.end, !dbg !7166

if.else:                                          ; preds = %entry
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7167
  %pbvh5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 15, !dbg !7169
  %22 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !7169
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7170
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 28, !dbg !7171
  %24 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7171
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %24, i32 0, i32 11, !dbg !7172
  %25 = load float, float* %radius, align 8, !dbg !7172
  %26 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7173
  %pixel_radius = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %26, i32 0, i32 21, !dbg !7174
  %27 = load float, float* %pixel_radius, align 8, !dbg !7174
  %div6 = fdiv float %25, %27, !dbg !7175
  %28 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7176
  %detail_size = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %28, i32 0, i32 3, !dbg !7177
  %29 = load float, float* %detail_size, align 8, !dbg !7177
  %mul = fmul float %div6, %29, !dbg !7178
  %div7 = fdiv float %mul, 0x3FD99999A0000000, !dbg !7179
  call void @BKE_pbvh_bmesh_detail_size_set(%struct.PBVH* %22, float %div7), !dbg !7180
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7181
  %31 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7183
  %call8 = call i32 @sculpt_stroke_dynamic_topology(%struct.SculptSession* %30, %struct.Brush* %31), !dbg !7184
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7184
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7185

if.then10:                                        ; preds = %if.end
  %32 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7186
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7188
  %34 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7189
  call void @do_symmetrical_brush_actions(%struct.Sculpt* %32, %struct.Object* %33, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* @sculpt_topology_update, %struct.UnifiedPaintSettings* %34), !dbg !7190
  br label %if.end11, !dbg !7191

if.end11:                                         ; preds = %if.then10, %if.end
  %35 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7192
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7193
  %37 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7194
  call void @do_symmetrical_brush_actions(%struct.Sculpt* %35, %struct.Object* %36, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* @do_brush_action, %struct.UnifiedPaintSettings* %37), !dbg !7195
  %38 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7196
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7197
  call void @sculpt_combine_proxies(%struct.Sculpt* %38, %struct.Object* %39), !dbg !7198
  %40 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7199
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7200
  call void @sculpt_fix_noise_tear(%struct.Sculpt* %40, %struct.Object* %41), !dbg !7201
  %42 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7202
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %42, i32 0, i32 17, !dbg !7204
  %43 = load i8, i8* %modifiers_active, align 1, !dbg !7204
  %tobool12 = icmp ne i8 %43, 0, !dbg !7202
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !7205

if.then13:                                        ; preds = %if.end11
  %44 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7206
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7208
  call void @sculpt_flush_stroke_deform(%struct.Sculpt* %44, %struct.Object* %45), !dbg !7209
  br label %if.end18, !dbg !7210

if.else14:                                        ; preds = %if.end11
  %46 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7211
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %46, i32 0, i32 7, !dbg !7213
  %47 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !7213
  %tobool15 = icmp ne %struct.KeyBlock* %47, null, !dbg !7211
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7214

if.then16:                                        ; preds = %if.else14
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7215
  call void @sculpt_update_keyblock(%struct.Object* %48), !dbg !7217
  br label %if.end17, !dbg !7218

if.end17:                                         ; preds = %if.then16, %if.else14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then13
  %49 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7219
  %cache19 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %49, i32 0, i32 28, !dbg !7220
  %50 = load %struct.StrokeCache*, %struct.StrokeCache** %cache19, align 8, !dbg !7220
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %50, i32 0, i32 20, !dbg !7221
  store i8 0, i8* %first_time, align 4, !dbg !7222
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7223
  call void @sculpt_flush_update(%struct.bContext* %51), !dbg !7224
  ret void, !dbg !7225
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_stroke_done(%struct.bContext* %C, %struct.PaintStroke* %UNUSED_stroke) #0 !dbg !7226 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_stroke.addr = alloca %struct.PaintStroke*, align 8
  %ob = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ups = alloca %struct.UnifiedPaintSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %p = alloca %struct.Paint*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store %struct.PaintStroke* %UNUSED_stroke, %struct.PaintStroke** %UNUSED_stroke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintStroke** %UNUSED_stroke.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7233, metadata !DIExpression()), !dbg !7234
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7235
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !7236
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7234
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7237, metadata !DIExpression()), !dbg !7238
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7239
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !7240
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !7238
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !7241, metadata !DIExpression()), !dbg !7242
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7243
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !7244
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !7244
  store %struct.SculptSession* %3, %struct.SculptSession** %ss, align 8, !dbg !7242
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !7245, metadata !DIExpression()), !dbg !7246
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7247
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %4), !dbg !7248
  %sculpt3 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call2, i32 0, i32 2, !dbg !7249
  %5 = load %struct.Sculpt*, %struct.Sculpt** %sculpt3, align 8, !dbg !7249
  store %struct.Sculpt* %5, %struct.Sculpt** %sd, align 8, !dbg !7246
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7250
  call void @sculpt_omp_done(%struct.SculptSession* %6), !dbg !7251
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7252
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 28, !dbg !7254
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7254
  %tobool = icmp ne %struct.StrokeCache* %8, null, !dbg !7252
  br i1 %tobool, label %if.then, label %if.end43, !dbg !7255

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups, metadata !7256, metadata !DIExpression()), !dbg !7258
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7259
  %call4 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %9), !dbg !7260
  %unified_paint_settings = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call4, i32 0, i32 73, !dbg !7261
  store %struct.UnifiedPaintSettings* %unified_paint_settings, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7258
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7262, metadata !DIExpression()), !dbg !7263
  %10 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7264
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %10, i32 0, i32 0, !dbg !7265
  %call5 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7266
  store %struct.Brush* %call5, %struct.Brush** %brush, align 8, !dbg !7263
  %11 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7267
  %draw_inverted = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %11, i32 0, i32 11, !dbg !7268
  store i8 0, i8* %draw_inverted, align 8, !dbg !7269
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7270
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7271
  call void @sculpt_stroke_modifiers_check(%struct.bContext* %12, %struct.Object* %13), !dbg !7272
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7273
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 28, !dbg !7275
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !7275
  %alt_smooth = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 48, !dbg !7276
  %16 = load i8, i8* %alt_smooth, align 8, !dbg !7276
  %tobool7 = icmp ne i8 %16, 0, !dbg !7273
  br i1 %tobool7, label %if.then8, label %if.end21, !dbg !7277

if.then8:                                         ; preds = %if.then
  %17 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7278
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %17, i32 0, i32 34, !dbg !7281
  %18 = load i8, i8* %sculpt_tool, align 8, !dbg !7281
  %conv = zext i8 %18 to i32, !dbg !7278
  %cmp = icmp eq i32 %conv, 19, !dbg !7282
  br i1 %cmp, label %if.then10, label %if.else, !dbg !7283

if.then10:                                        ; preds = %if.then8
  %19 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7284
  %cache11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 28, !dbg !7286
  %20 = load %struct.StrokeCache*, %struct.StrokeCache** %cache11, align 8, !dbg !7286
  %saved_mask_brush_tool = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %20, i32 0, i32 46, !dbg !7287
  %21 = load i8, i8* %saved_mask_brush_tool, align 2, !dbg !7287
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7288
  %mask_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %22, i32 0, i32 37, !dbg !7289
  store i8 %21, i8* %mask_tool, align 1, !dbg !7290
  br label %if.end20, !dbg !7291

if.else:                                          ; preds = %if.then8
  call void @llvm.dbg.declare(metadata %struct.Paint** %p, metadata !7292, metadata !DIExpression()), !dbg !7295
  %23 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7296
  %paint12 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %23, i32 0, i32 0, !dbg !7297
  store %struct.Paint* %paint12, %struct.Paint** %p, align 8, !dbg !7295
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7298
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7299
  %cache13 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 28, !dbg !7300
  %26 = load %struct.StrokeCache*, %struct.StrokeCache** %cache13, align 8, !dbg !7300
  %brush14 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %26, i32 0, i32 23, !dbg !7301
  %27 = load %struct.Brush*, %struct.Brush** %brush14, align 8, !dbg !7301
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7302
  %cache15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 28, !dbg !7303
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache15, align 8, !dbg !7303
  %saved_smooth_size = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 47, !dbg !7304
  %30 = load i32, i32* %saved_smooth_size, align 4, !dbg !7304
  call void @BKE_brush_size_set(%struct.Scene* %24, %struct.Brush* %27, i32 %30), !dbg !7305
  %31 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7306
  %cache16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %31, i32 0, i32 28, !dbg !7307
  %32 = load %struct.StrokeCache*, %struct.StrokeCache** %cache16, align 8, !dbg !7307
  %saved_active_brush_name = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %32, i32 0, i32 45, !dbg !7308
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %saved_active_brush_name, i64 0, i64 0, !dbg !7306
  %call17 = call %struct.ID* @BKE_libblock_find_name(i16 signext 21058, i8* %arraydecay), !dbg !7309
  %33 = bitcast %struct.ID* %call17 to %struct.Brush*, !dbg !7310
  store %struct.Brush* %33, %struct.Brush** %brush, align 8, !dbg !7311
  %34 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7312
  %tobool18 = icmp ne %struct.Brush* %34, null, !dbg !7312
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !7314

if.then19:                                        ; preds = %if.else
  %35 = load %struct.Paint*, %struct.Paint** %p, align 8, !dbg !7315
  %36 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7317
  call void @BKE_paint_brush_set(%struct.Paint* %35, %struct.Brush* %36), !dbg !7318
  br label %if.end, !dbg !7319

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then10
  br label %if.end21, !dbg !7320

if.end21:                                         ; preds = %if.end20, %if.then
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7321
  %sculpt22 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 2, !dbg !7322
  %38 = load %struct.SculptSession*, %struct.SculptSession** %sculpt22, align 8, !dbg !7322
  %last_stroke_valid = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %38, i32 0, i32 29, !dbg !7323
  store i8 1, i8* %last_stroke_valid, align 8, !dbg !7324
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7325
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7326
  %sculpt23 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 2, !dbg !7327
  %41 = load %struct.SculptSession*, %struct.SculptSession** %sculpt23, align 8, !dbg !7327
  %last_stroke = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %41, i32 0, i32 30, !dbg !7328
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %last_stroke, i64 0, i64 0, !dbg !7326
  call void @ED_sculpt_stroke_get_average(%struct.Object* %39, float* %arraydecay24), !dbg !7329
  %42 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7330
  %cache25 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %42, i32 0, i32 28, !dbg !7331
  %43 = load %struct.StrokeCache*, %struct.StrokeCache** %cache25, align 8, !dbg !7331
  call void @sculpt_cache_free(%struct.StrokeCache* %43), !dbg !7332
  %44 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7333
  %cache26 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %44, i32 0, i32 28, !dbg !7334
  store %struct.StrokeCache* null, %struct.StrokeCache** %cache26, align 8, !dbg !7335
  call void @sculpt_undo_push_end(), !dbg !7336
  %45 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7337
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %45, i32 0, i32 15, !dbg !7338
  %46 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !7338
  call void @BKE_pbvh_update(%struct.PBVH* %46, i32 8, [3 x float]* null), !dbg !7339
  %47 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7340
  %pbvh27 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %47, i32 0, i32 15, !dbg !7342
  %48 = load %struct.PBVH*, %struct.PBVH** %pbvh27, align 8, !dbg !7342
  %call28 = call i32 @BKE_pbvh_type(%struct.PBVH* %48), !dbg !7343
  %cmp29 = icmp eq i32 %call28, 2, !dbg !7344
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !7345

if.then31:                                        ; preds = %if.end21
  %49 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7346
  %pbvh32 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %49, i32 0, i32 15, !dbg !7347
  %50 = load %struct.PBVH*, %struct.PBVH** %pbvh32, align 8, !dbg !7347
  call void @BKE_pbvh_bmesh_after_stroke(%struct.PBVH* %50), !dbg !7348
  br label %if.end33, !dbg !7348

if.end33:                                         ; preds = %if.then31, %if.end21
  %51 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7349
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %51, i32 0, i32 7, !dbg !7351
  %52 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !7351
  %tobool34 = icmp ne %struct.KeyBlock* %52, null, !dbg !7349
  br i1 %tobool34, label %land.lhs.true, label %if.end37, !dbg !7352

land.lhs.true:                                    ; preds = %if.end33
  %53 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7353
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %53, i32 0, i32 17, !dbg !7354
  %54 = load i8, i8* %modifiers_active, align 1, !dbg !7354
  %tobool35 = icmp ne i8 %54, 0, !dbg !7353
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !7355

if.then36:                                        ; preds = %land.lhs.true
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7356
  call void @sculpt_update_keyblock(%struct.Object* %55), !dbg !7357
  br label %if.end37, !dbg !7357

if.end37:                                         ; preds = %if.then36, %land.lhs.true, %if.end33
  %56 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !7358
  %partial_redraw = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %56, i32 0, i32 21, !dbg !7359
  store i8 0, i8* %partial_redraw, align 8, !dbg !7360
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7361
  %data = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 19, !dbg !7363
  %58 = load i8*, i8** %data, align 8, !dbg !7363
  %59 = bitcast i8* %58 to %struct.Mesh*, !dbg !7364
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 0, !dbg !7365
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !7366
  %60 = load i32, i32* %us, align 4, !dbg !7366
  %cmp38 = icmp sgt i32 %60, 1, !dbg !7367
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !7368

if.then40:                                        ; preds = %if.end37
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7369
  %id41 = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 0, !dbg !7370
  call void @DAG_id_tag_update(%struct.ID* %id41, i16 signext 2), !dbg !7371
  br label %if.end42, !dbg !7371

if.end42:                                         ; preds = %if.then40, %if.end37
  %62 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7372
  %63 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7373
  %64 = bitcast %struct.Object* %63 to i8*, !dbg !7373
  call void @WM_event_add_notifier(%struct.bContext* %62, i32 85393408, i8* %64), !dbg !7374
  br label %if.end43, !dbg !7375

if.end43:                                         ; preds = %if.end42, %entry
  %65 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !7376
  call void @sculpt_brush_exit_tex(%struct.Sculpt* %65), !dbg !7377
  ret void, !dbg !7378
}

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @over_mesh(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, float %x, float %y) #0 !dbg !7379 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %mouse = alloca [2 x float], align 4
  %co = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.declare(metadata [2 x float]* %mouse, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !7392, metadata !DIExpression()), !dbg !7393
  %0 = load float, float* %x.addr, align 4, !dbg !7394
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !7395
  store float %0, float* %arrayidx, align 4, !dbg !7396
  %1 = load float, float* %y.addr, align 4, !dbg !7397
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 1, !dbg !7398
  store float %1, float* %arrayidx1, align 4, !dbg !7399
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7400
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7401
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !7402
  %call = call zeroext i8 @sculpt_stroke_get_location(%struct.bContext* %2, float* %arraydecay, float* %arraydecay2), !dbg !7403
  ret i8 %call, !dbg !7404
}

declare dso_local void @paint_stroke_data_free(%struct.wmOperator*) #2

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_brush_init_tex(%struct.Scene* %scene, %struct.Sculpt* %sd, %struct.SculptSession* %ss) #0 !dbg !7405 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mtex = alloca %struct.MTex*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7416, metadata !DIExpression()), !dbg !7417
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7418
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !7419
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7420
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !7417
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !7421, metadata !DIExpression()), !dbg !7424
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7425
  %mtex1 = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 3, !dbg !7426
  store %struct.MTex* %mtex1, %struct.MTex** %mtex, align 8, !dbg !7424
  %2 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7427
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %2, i32 0, i32 5, !dbg !7429
  %3 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7429
  %tobool = icmp ne %struct.Tex* %3, null, !dbg !7427
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7430

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7431
  %tex2 = getelementptr inbounds %struct.MTex, %struct.MTex* %4, i32 0, i32 5, !dbg !7432
  %5 = load %struct.Tex*, %struct.Tex** %tex2, align 8, !dbg !7432
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 52, !dbg !7433
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7433
  %tobool3 = icmp ne %struct.bNodeTree* %6, null, !dbg !7431
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7434

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7435
  %tex4 = getelementptr inbounds %struct.MTex, %struct.MTex* %7, i32 0, i32 5, !dbg !7436
  %8 = load %struct.Tex*, %struct.Tex** %tex4, align 8, !dbg !7436
  %nodetree5 = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 52, !dbg !7437
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree5, align 8, !dbg !7437
  %call6 = call %struct.bNodeTreeExec* @ntreeTexBeginExecTree(%struct.bNodeTree* %9), !dbg !7438
  br label %if.end, !dbg !7438

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7439
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7440
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7441
  call void @sculpt_update_tex(%struct.Scene* %10, %struct.Sculpt* %11, %struct.SculptSession* %12), !dbg !7442
  ret void, !dbg !7443
}

declare dso_local %struct.bNodeTreeExec* @ntreeTexBeginExecTree(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_update_tex(%struct.Scene* %scene, %struct.Sculpt* %sd, %struct.SculptSession* %ss) #0 !dbg !7444 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %radius = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7453
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !7454
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7455
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !7452
  call void @llvm.dbg.declare(metadata i32* %radius, metadata !7456, metadata !DIExpression()), !dbg !7457
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7458
  %2 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7459
  %call1 = call i32 @BKE_brush_size_get(%struct.Scene* %1, %struct.Brush* %2), !dbg !7460
  store i32 %call1, i32* %radius, align 4, !dbg !7457
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7461
  %texcache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 23, !dbg !7463
  %4 = load i32*, i32** %texcache, align 8, !dbg !7463
  %tobool = icmp ne i32* %4, null, !dbg !7461
  br i1 %tobool, label %if.then, label %if.end, !dbg !7464

if.then:                                          ; preds = %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7465
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7467
  %texcache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 23, !dbg !7468
  %7 = load i32*, i32** %texcache2, align 8, !dbg !7468
  %8 = bitcast i32* %7 to i8*, !dbg !7467
  call void %5(i8* %8), !dbg !7465
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7469
  %texcache3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 23, !dbg !7470
  store i32* null, i32** %texcache3, align 8, !dbg !7471
  br label %if.end, !dbg !7472

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7473
  %tex_pool = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 25, !dbg !7475
  %11 = load %struct.ImagePool*, %struct.ImagePool** %tex_pool, align 8, !dbg !7475
  %tobool4 = icmp ne %struct.ImagePool* %11, null, !dbg !7473
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !7476

if.then5:                                         ; preds = %if.end
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7477
  %tex_pool6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 25, !dbg !7479
  %13 = load %struct.ImagePool*, %struct.ImagePool** %tex_pool6, align 8, !dbg !7479
  call void @BKE_image_pool_free(%struct.ImagePool* %13), !dbg !7480
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7481
  %tex_pool7 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 25, !dbg !7482
  store %struct.ImagePool* null, %struct.ImagePool** %tex_pool7, align 8, !dbg !7483
  br label %if.end8, !dbg !7484

if.end8:                                          ; preds = %if.then5, %if.end
  %15 = load i32, i32* %radius, align 4, !dbg !7485
  %mul = mul nsw i32 2, %15, !dbg !7486
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7487
  %texcache_side = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 22, !dbg !7488
  store i32 %mul, i32* %texcache_side, align 4, !dbg !7489
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7490
  %texcache9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 23, !dbg !7492
  %18 = load i32*, i32** %texcache9, align 8, !dbg !7492
  %tobool10 = icmp ne i32* %18, null, !dbg !7490
  br i1 %tobool10, label %lor.lhs.false, label %if.then12, !dbg !7493

lor.lhs.false:                                    ; preds = %if.end8
  %19 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7494
  %texcache_side11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 22, !dbg !7495
  %20 = load i32, i32* %texcache_side11, align 4, !dbg !7495
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7496
  %texcache_actual = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 24, !dbg !7497
  %22 = load i32, i32* %texcache_actual, align 8, !dbg !7497
  %cmp = icmp ugt i32 %20, %22, !dbg !7498
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !7499

if.then12:                                        ; preds = %lor.lhs.false, %if.end8
  %23 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7500
  %24 = load i32, i32* %radius, align 4, !dbg !7502
  %call13 = call i32* @BKE_brush_gen_texture_cache(%struct.Brush* %23, i32 %24, i8 zeroext 0), !dbg !7503
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7504
  %texcache14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 23, !dbg !7505
  store i32* %call13, i32** %texcache14, align 8, !dbg !7506
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7507
  %texcache_side15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 22, !dbg !7508
  %27 = load i32, i32* %texcache_side15, align 4, !dbg !7508
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7509
  %texcache_actual16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 24, !dbg !7510
  store i32 %27, i32* %texcache_actual16, align 8, !dbg !7511
  %call17 = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !7512
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7513
  %tex_pool18 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 25, !dbg !7514
  store %struct.ImagePool* %call17, %struct.ImagePool** %tex_pool18, align 8, !dbg !7515
  br label %if.end19, !dbg !7516

if.end19:                                         ; preds = %if.then12, %lor.lhs.false
  ret void, !dbg !7517
}

declare dso_local i32 @BKE_brush_size_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local void @BKE_image_pool_free(%struct.ImagePool*) #2

declare dso_local i32* @BKE_brush_gen_texture_cache(%struct.Brush*, i32, i8 zeroext) #2

declare dso_local %struct.ImagePool* @BKE_image_pool_new() #2

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_update_cache_invariants(%struct.bContext* %C, %struct.Sculpt* %sd, %struct.SculptSession* %ss, %struct.wmOperator* %op, float* %mouse) #0 !dbg !7518 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mouse.addr = alloca float*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ups = alloca %struct.UnifiedPaintSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %vc = alloca %struct.ViewContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %viewDir = alloca [3 x float], align 4
  %max_scale = alloca float, align 4
  %i = alloca i32, align 4
  %mode = alloca i32, align 4
  %p = alloca %struct.Paint*, align 8
  %br = alloca %struct.Brush*, align 8
  %size54 = alloca i32, align 4
  %gravity_object115 = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7521, metadata !DIExpression()), !dbg !7522
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !7531, metadata !DIExpression()), !dbg !7532
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7533
  %call = call i8* %0(i64 712, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)), !dbg !7533
  %1 = bitcast i8* %call to %struct.StrokeCache*, !dbg !7533
  store %struct.StrokeCache* %1, %struct.StrokeCache** %cache, align 8, !dbg !7532
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !7534, metadata !DIExpression()), !dbg !7535
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7536
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !7537
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !7535
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups, metadata !7538, metadata !DIExpression()), !dbg !7539
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7540
  %call2 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %3), !dbg !7541
  %unified_paint_settings = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call2, i32 0, i32 73, !dbg !7542
  store %struct.UnifiedPaintSettings* %unified_paint_settings, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7539
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7543, metadata !DIExpression()), !dbg !7544
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7545
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %4, i32 0, i32 0, !dbg !7546
  %call3 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !7547
  store %struct.Brush* %call3, %struct.Brush** %brush, align 8, !dbg !7544
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc, metadata !7548, metadata !DIExpression()), !dbg !7549
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7550
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !7551
  %6 = load i8*, i8** %customdata, align 8, !dbg !7551
  %7 = bitcast i8* %6 to %struct.PaintStroke*, !dbg !7550
  %call4 = call %struct.ViewContext* @paint_stroke_view_context(%struct.PaintStroke* %7), !dbg !7552
  store %struct.ViewContext* %call4, %struct.ViewContext** %vc, align 8, !dbg !7549
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7553, metadata !DIExpression()), !dbg !7554
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7555
  %call5 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %8), !dbg !7556
  store %struct.Object* %call5, %struct.Object** %ob, align 8, !dbg !7554
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !7557, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.declare(metadata [3 x float]* %viewDir, metadata !7559, metadata !DIExpression()), !dbg !7560
  %9 = bitcast [3 x float]* %viewDir to i8*, !dbg !7560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([3 x float]* @__const.sculpt_update_cache_invariants.viewDir to i8*), i64 12, i1 false), !dbg !7560
  call void @llvm.dbg.declare(metadata float* %max_scale, metadata !7561, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7563, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7565, metadata !DIExpression()), !dbg !7566
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7567
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7568
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !7569
  store %struct.StrokeCache* %10, %struct.StrokeCache** %cache6, align 8, !dbg !7570
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7571
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 34, !dbg !7573
  %13 = load i8, i8* %sculpt_tool, align 8, !dbg !7573
  %conv = zext i8 %13 to i32, !dbg !7571
  %cmp = icmp eq i32 %conv, 6, !dbg !7574
  br i1 %cmp, label %if.then, label %if.else, !dbg !7575

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %max_scale, align 4, !dbg !7576
  br label %if.end, !dbg !7578

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %max_scale, align 4, !dbg !7579
  store i32 0, i32* %i, align 4, !dbg !7581
  br label %for.cond, !dbg !7583

for.cond:                                         ; preds = %for.inc, %if.else
  %14 = load i32, i32* %i, align 4, !dbg !7584
  %cmp8 = icmp slt i32 %14, 3, !dbg !7586
  br i1 %cmp8, label %for.body, label %for.end, !dbg !7587

for.body:                                         ; preds = %for.cond
  %15 = load float, float* %max_scale, align 4, !dbg !7588
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7590
  %size = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 36, !dbg !7591
  %17 = load i32, i32* %i, align 4, !dbg !7592
  %idxprom = sext i32 %17 to i64, !dbg !7590
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom, !dbg !7590
  %18 = load float, float* %arrayidx, align 4, !dbg !7590
  %19 = call float @llvm.fabs.f32(float %18), !dbg !7593
  %call10 = call float @max_ff(float %15, float %19), !dbg !7594
  store float %call10, float* %max_scale, align 4, !dbg !7595
  br label %for.inc, !dbg !7596

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7597
  %inc = add nsw i32 %20, 1, !dbg !7597
  store i32 %inc, i32* %i, align 4, !dbg !7597
  br label %for.cond, !dbg !7598, !llvm.loop !7599

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %21 = load float, float* %max_scale, align 4, !dbg !7601
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7602
  %size11 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 36, !dbg !7603
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %size11, i64 0, i64 0, !dbg !7602
  %23 = load float, float* %arrayidx12, align 4, !dbg !7602
  %div = fdiv float %21, %23, !dbg !7604
  %24 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7605
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %24, i32 0, i32 1, !dbg !7606
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !7605
  store float %div, float* %arrayidx13, align 4, !dbg !7607
  %25 = load float, float* %max_scale, align 4, !dbg !7608
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7609
  %size14 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 36, !dbg !7610
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %size14, i64 0, i64 1, !dbg !7609
  %27 = load float, float* %arrayidx15, align 4, !dbg !7609
  %div16 = fdiv float %25, %27, !dbg !7611
  %28 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7612
  %scale17 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %28, i32 0, i32 1, !dbg !7613
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %scale17, i64 0, i64 1, !dbg !7612
  store float %div16, float* %arrayidx18, align 4, !dbg !7614
  %29 = load float, float* %max_scale, align 4, !dbg !7615
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7616
  %size19 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 36, !dbg !7617
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %size19, i64 0, i64 2, !dbg !7616
  %31 = load float, float* %arrayidx20, align 4, !dbg !7616
  %div21 = fdiv float %29, %31, !dbg !7618
  %32 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7619
  %scale22 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %32, i32 0, i32 1, !dbg !7620
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %scale22, i64 0, i64 2, !dbg !7619
  store float %div21, float* %arrayidx23, align 4, !dbg !7621
  %33 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7622
  %plane_trim = getelementptr inbounds %struct.Brush, %struct.Brush* %33, i32 0, i32 40, !dbg !7623
  %34 = load float, float* %plane_trim, align 4, !dbg !7623
  %35 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7624
  %plane_trim24 = getelementptr inbounds %struct.Brush, %struct.Brush* %35, i32 0, i32 40, !dbg !7625
  %36 = load float, float* %plane_trim24, align 4, !dbg !7625
  %mul = fmul float %34, %36, !dbg !7626
  %37 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7627
  %plane_trim_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %37, i32 0, i32 49, !dbg !7628
  store float %mul, float* %plane_trim_squared, align 4, !dbg !7629
  %38 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7630
  %flag = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %38, i32 0, i32 2, !dbg !7631
  store i32 0, i32* %flag, align 8, !dbg !7632
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7633
  %40 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7634
  call void @sculpt_init_mirror_clipping(%struct.Object* %39, %struct.SculptSession* %40), !dbg !7635
  %41 = load float*, float** %mouse.addr, align 8, !dbg !7636
  %tobool = icmp ne float* %41, null, !dbg !7636
  br i1 %tobool, label %if.then25, label %if.else26, !dbg !7638

if.then25:                                        ; preds = %if.end
  %42 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7639
  %initial_mouse = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %42, i32 0, i32 4, !dbg !7640
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse, i64 0, i64 0, !dbg !7639
  %43 = load float*, float** %mouse.addr, align 8, !dbg !7641
  call void @copy_v2_v2(float* %arraydecay, float* %43), !dbg !7642
  br label %if.end29, !dbg !7642

if.else26:                                        ; preds = %if.end
  %44 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7643
  %initial_mouse27 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %44, i32 0, i32 4, !dbg !7644
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse27, i64 0, i64 0, !dbg !7643
  call void @zero_v2(float* %arraydecay28), !dbg !7645
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.then25
  %45 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7646
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %45, i32 0, i32 7, !dbg !7647
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7647
  %call30 = call i32 @RNA_enum_get(%struct.PointerRNA* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)), !dbg !7648
  store i32 %call30, i32* %mode, align 4, !dbg !7649
  %47 = load i32, i32* %mode, align 4, !dbg !7650
  %cmp31 = icmp eq i32 %47, 1, !dbg !7651
  %conv32 = zext i1 %cmp31 to i32, !dbg !7651
  %conv33 = trunc i32 %conv32 to i8, !dbg !7650
  %48 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7652
  %invert = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %48, i32 0, i32 16, !dbg !7653
  store i8 %conv33, i8* %invert, align 1, !dbg !7654
  %49 = load i32, i32* %mode, align 4, !dbg !7655
  %cmp34 = icmp eq i32 %49, 2, !dbg !7656
  %conv35 = zext i1 %cmp34 to i32, !dbg !7656
  %conv36 = trunc i32 %conv35 to i8, !dbg !7655
  %50 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7657
  %alt_smooth = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %50, i32 0, i32 48, !dbg !7658
  store i8 %conv36, i8* %alt_smooth, align 8, !dbg !7659
  %51 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7660
  %invert37 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %51, i32 0, i32 16, !dbg !7662
  %52 = load i8, i8* %invert37, align 1, !dbg !7662
  %tobool38 = icmp ne i8 %52, 0, !dbg !7660
  br i1 %tobool38, label %if.then39, label %if.else40, !dbg !7663

if.then39:                                        ; preds = %if.end29
  %53 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7664
  %draw_inverted = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %53, i32 0, i32 11, !dbg !7665
  store i8 1, i8* %draw_inverted, align 8, !dbg !7666
  br label %if.end42, !dbg !7664

if.else40:                                        ; preds = %if.end29
  %54 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7667
  %draw_inverted41 = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %54, i32 0, i32 11, !dbg !7668
  store i8 0, i8* %draw_inverted41, align 8, !dbg !7669
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.then39
  %55 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7670
  %alt_smooth43 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %55, i32 0, i32 48, !dbg !7672
  %56 = load i8, i8* %alt_smooth43, align 8, !dbg !7672
  %tobool44 = icmp ne i8 %56, 0, !dbg !7670
  br i1 %tobool44, label %if.then45, label %if.end65, !dbg !7673

if.then45:                                        ; preds = %if.end42
  %57 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7674
  %sculpt_tool46 = getelementptr inbounds %struct.Brush, %struct.Brush* %57, i32 0, i32 34, !dbg !7677
  %58 = load i8, i8* %sculpt_tool46, align 8, !dbg !7677
  %conv47 = zext i8 %58 to i32, !dbg !7674
  %cmp48 = icmp eq i32 %conv47, 19, !dbg !7678
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !7679

if.then50:                                        ; preds = %if.then45
  %59 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7680
  %mask_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %59, i32 0, i32 37, !dbg !7682
  %60 = load i8, i8* %mask_tool, align 1, !dbg !7682
  %61 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7683
  %saved_mask_brush_tool = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %61, i32 0, i32 46, !dbg !7684
  store i8 %60, i8* %saved_mask_brush_tool, align 2, !dbg !7685
  %62 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7686
  %mask_tool51 = getelementptr inbounds %struct.Brush, %struct.Brush* %62, i32 0, i32 37, !dbg !7687
  store i8 1, i8* %mask_tool51, align 1, !dbg !7688
  br label %if.end64, !dbg !7689

if.else52:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.Paint** %p, metadata !7690, metadata !DIExpression()), !dbg !7692
  %63 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7693
  %paint53 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %63, i32 0, i32 0, !dbg !7694
  store %struct.Paint* %paint53, %struct.Paint** %p, align 8, !dbg !7692
  call void @llvm.dbg.declare(metadata %struct.Brush** %br, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata i32* %size54, metadata !7697, metadata !DIExpression()), !dbg !7698
  %64 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7699
  %65 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7700
  %call55 = call i32 @BKE_brush_size_get(%struct.Scene* %64, %struct.Brush* %65), !dbg !7701
  store i32 %call55, i32* %size54, align 4, !dbg !7698
  %66 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7702
  %saved_active_brush_name = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %66, i32 0, i32 45, !dbg !7703
  %arraydecay56 = getelementptr inbounds [66 x i8], [66 x i8]* %saved_active_brush_name, i64 0, i64 0, !dbg !7702
  %67 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7704
  %id = getelementptr inbounds %struct.Brush, %struct.Brush* %67, i32 0, i32 0, !dbg !7705
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7706
  %arraydecay57 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7704
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay57, i64 2, !dbg !7707
  %call58 = call i8* @BLI_strncpy(i8* %arraydecay56, i8* %add.ptr, i64 66), !dbg !7708
  %call59 = call %struct.ID* @BKE_libblock_find_name(i16 signext 21058, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)), !dbg !7709
  %68 = bitcast %struct.ID* %call59 to %struct.Brush*, !dbg !7710
  store %struct.Brush* %68, %struct.Brush** %br, align 8, !dbg !7711
  %69 = load %struct.Brush*, %struct.Brush** %br, align 8, !dbg !7712
  %tobool60 = icmp ne %struct.Brush* %69, null, !dbg !7712
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !7714

if.then61:                                        ; preds = %if.else52
  %70 = load %struct.Paint*, %struct.Paint** %p, align 8, !dbg !7715
  %71 = load %struct.Brush*, %struct.Brush** %br, align 8, !dbg !7717
  call void @BKE_paint_brush_set(%struct.Paint* %70, %struct.Brush* %71), !dbg !7718
  %72 = load %struct.Brush*, %struct.Brush** %br, align 8, !dbg !7719
  store %struct.Brush* %72, %struct.Brush** %brush, align 8, !dbg !7720
  %73 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7721
  %74 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7722
  %call62 = call i32 @BKE_brush_size_get(%struct.Scene* %73, %struct.Brush* %74), !dbg !7723
  %75 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7724
  %saved_smooth_size = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %75, i32 0, i32 47, !dbg !7725
  store i32 %call62, i32* %saved_smooth_size, align 4, !dbg !7726
  %76 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7727
  %77 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7728
  %78 = load i32, i32* %size54, align 4, !dbg !7729
  call void @BKE_brush_size_set(%struct.Scene* %76, %struct.Brush* %77, i32 %78), !dbg !7730
  %79 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7731
  %curve = getelementptr inbounds %struct.Brush, %struct.Brush* %79, i32 0, i32 2, !dbg !7732
  %80 = load %struct.CurveMapping*, %struct.CurveMapping** %curve, align 8, !dbg !7732
  call void @curvemapping_initialize(%struct.CurveMapping* %80), !dbg !7733
  br label %if.end63, !dbg !7734

if.end63:                                         ; preds = %if.then61, %if.else52
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then50
  br label %if.end65, !dbg !7735

if.end65:                                         ; preds = %if.end64, %if.end42
  %81 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7736
  %mouse66 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %81, i32 0, i32 18, !dbg !7737
  %arraydecay67 = getelementptr inbounds [2 x float], [2 x float]* %mouse66, i64 0, i64 0, !dbg !7736
  %82 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7738
  %initial_mouse68 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %82, i32 0, i32 4, !dbg !7739
  %arraydecay69 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse68, i64 0, i64 0, !dbg !7738
  call void @copy_v2_v2(float* %arraydecay67, float* %arraydecay69), !dbg !7740
  %83 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !7741
  %tex_mouse = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %83, i32 0, i32 17, !dbg !7742
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %tex_mouse, i64 0, i64 0, !dbg !7741
  %84 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7743
  %initial_mouse71 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %84, i32 0, i32 4, !dbg !7744
  %arraydecay72 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse71, i64 0, i64 0, !dbg !7743
  call void @copy_v2_v2(float* %arraydecay70, float* %arraydecay72), !dbg !7745
  %85 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !7746
  %86 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7747
  %vc73 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %86, i32 0, i32 22, !dbg !7748
  store %struct.ViewContext* %85, %struct.ViewContext** %vc73, align 8, !dbg !7749
  %87 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7750
  %88 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7751
  %brush74 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %88, i32 0, i32 23, !dbg !7752
  store %struct.Brush* %87, %struct.Brush** %brush74, align 8, !dbg !7753
  %89 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7754
  %vc75 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %89, i32 0, i32 22, !dbg !7755
  %90 = load %struct.ViewContext*, %struct.ViewContext** %vc75, align 8, !dbg !7755
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %90, i32 0, i32 5, !dbg !7756
  %91 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7756
  %92 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7757
  %93 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7758
  %projection_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %93, i32 0, i32 21, !dbg !7759
  %arraydecay76 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projection_mat, i64 0, i64 0, !dbg !7758
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %91, %struct.Object* %92, [4 x float]* %arraydecay76), !dbg !7760
  %94 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7761
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 50, !dbg !7762
  %arraydecay77 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7761
  %95 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7763
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 47, !dbg !7764
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !7763
  %call79 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay77, [4 x float]* %arraydecay78), !dbg !7765
  %arraydecay80 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7766
  %96 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7767
  %vc81 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %96, i32 0, i32 22, !dbg !7768
  %97 = load %struct.ViewContext*, %struct.ViewContext** %vc81, align 8, !dbg !7768
  %rv3d82 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %97, i32 0, i32 5, !dbg !7769
  %98 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d82, align 8, !dbg !7769
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %98, i32 0, i32 2, !dbg !7770
  %arraydecay83 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !7767
  call void @copy_m3_m4([3 x float]* %arraydecay80, [4 x float]* %arraydecay83), !dbg !7771
  %arraydecay84 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7772
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %viewDir, i64 0, i64 0, !dbg !7773
  call void @mul_m3_v3([3 x float]* %arraydecay84, float* %arraydecay85), !dbg !7774
  %arraydecay86 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7775
  %99 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7776
  %imat87 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 50, !dbg !7777
  %arraydecay88 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat87, i64 0, i64 0, !dbg !7776
  call void @copy_m3_m4([3 x float]* %arraydecay86, [4 x float]* %arraydecay88), !dbg !7778
  %arraydecay89 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7779
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %viewDir, i64 0, i64 0, !dbg !7780
  call void @mul_m3_v3([3 x float]* %arraydecay89, float* %arraydecay90), !dbg !7781
  %100 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7782
  %true_view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %100, i32 0, i32 32, !dbg !7783
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %true_view_normal, i64 0, i64 0, !dbg !7782
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %viewDir, i64 0, i64 0, !dbg !7784
  %call93 = call float @normalize_v3_v3(float* %arraydecay91, float* %arraydecay92), !dbg !7785
  %101 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7786
  %sculpt_tool94 = getelementptr inbounds %struct.Brush, %struct.Brush* %101, i32 0, i32 34, !dbg !7786
  %102 = load i8, i8* %sculpt_tool94, align 8, !dbg !7786
  %conv95 = zext i8 %102 to i32, !dbg !7786
  %cmp96 = icmp eq i32 %conv95, 19, !dbg !7786
  br i1 %cmp96, label %land.end, label %lor.lhs.false, !dbg !7786

lor.lhs.false:                                    ; preds = %if.end65
  %103 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7786
  %sculpt_tool98 = getelementptr inbounds %struct.Brush, %struct.Brush* %103, i32 0, i32 34, !dbg !7786
  %104 = load i8, i8* %sculpt_tool98, align 8, !dbg !7786
  %conv99 = zext i8 %104 to i32, !dbg !7786
  %cmp100 = icmp eq i32 %conv99, 2, !dbg !7786
  br i1 %cmp100, label %land.end, label %lor.lhs.false102, !dbg !7786

lor.lhs.false102:                                 ; preds = %lor.lhs.false
  %105 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7786
  %sculpt_tool103 = getelementptr inbounds %struct.Brush, %struct.Brush* %105, i32 0, i32 34, !dbg !7786
  %106 = load i8, i8* %sculpt_tool103, align 8, !dbg !7786
  %conv104 = zext i8 %106 to i32, !dbg !7786
  %cmp105 = icmp eq i32 %conv104, 15, !dbg !7786
  br i1 %cmp105, label %land.end, label %land.rhs, !dbg !7787

land.rhs:                                         ; preds = %lor.lhs.false102
  %107 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7788
  %gravity_factor = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %107, i32 0, i32 5, !dbg !7789
  %108 = load float, float* %gravity_factor, align 8, !dbg !7789
  %cmp107 = fcmp ogt float %108, 0.000000e+00, !dbg !7790
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false102, %lor.lhs.false, %if.end65
  %109 = phi i1 [ false, %lor.lhs.false102 ], [ false, %lor.lhs.false ], [ false, %if.end65 ], [ %cmp107, %land.rhs ], !dbg !7791
  %land.ext = zext i1 %109 to i32, !dbg !7787
  %conv109 = trunc i32 %land.ext to i8, !dbg !7792
  %110 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7793
  %supports_gravity = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %110, i32 0, i32 50, !dbg !7794
  store i8 %conv109, i8* %supports_gravity, align 8, !dbg !7795
  %111 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7796
  %supports_gravity110 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %111, i32 0, i32 50, !dbg !7798
  %112 = load i8, i8* %supports_gravity110, align 8, !dbg !7798
  %tobool111 = icmp ne i8 %112, 0, !dbg !7796
  br i1 %tobool111, label %if.then112, label %if.end135, !dbg !7799

if.then112:                                       ; preds = %land.end
  %113 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7800
  %gravity_object = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %113, i32 0, i32 7, !dbg !7803
  %114 = load %struct.Object*, %struct.Object** %gravity_object, align 8, !dbg !7803
  %tobool113 = icmp ne %struct.Object* %114, null, !dbg !7800
  br i1 %tobool113, label %if.then114, label %if.else121, !dbg !7804

if.then114:                                       ; preds = %if.then112
  call void @llvm.dbg.declare(metadata %struct.Object** %gravity_object115, metadata !7805, metadata !DIExpression()), !dbg !7807
  %115 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7808
  %gravity_object116 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %115, i32 0, i32 7, !dbg !7809
  %116 = load %struct.Object*, %struct.Object** %gravity_object116, align 8, !dbg !7809
  store %struct.Object* %116, %struct.Object** %gravity_object115, align 8, !dbg !7807
  %117 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7810
  %true_gravity_direction = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %117, i32 0, i32 51, !dbg !7811
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction, i64 0, i64 0, !dbg !7810
  %118 = load %struct.Object*, %struct.Object** %gravity_object115, align 8, !dbg !7812
  %obmat118 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 47, !dbg !7813
  %arrayidx119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat118, i64 0, i64 2, !dbg !7812
  %arraydecay120 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx119, i64 0, i64 0, !dbg !7812
  call void @copy_v3_v3(float* %arraydecay117, float* %arraydecay120), !dbg !7814
  br label %if.end128, !dbg !7815

if.else121:                                       ; preds = %if.then112
  %119 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7816
  %true_gravity_direction122 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %119, i32 0, i32 51, !dbg !7818
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction122, i64 0, i64 1, !dbg !7816
  store float 0.000000e+00, float* %arrayidx123, align 4, !dbg !7819
  %120 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7820
  %true_gravity_direction124 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %120, i32 0, i32 51, !dbg !7821
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction124, i64 0, i64 0, !dbg !7820
  store float 0.000000e+00, float* %arrayidx125, align 4, !dbg !7822
  %121 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7823
  %true_gravity_direction126 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %121, i32 0, i32 51, !dbg !7824
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction126, i64 0, i64 2, !dbg !7823
  store float 1.000000e+00, float* %arrayidx127, align 4, !dbg !7825
  br label %if.end128

if.end128:                                        ; preds = %if.else121, %if.then114
  %arraydecay129 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !7826
  %122 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7827
  %true_gravity_direction130 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %122, i32 0, i32 51, !dbg !7828
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction130, i64 0, i64 0, !dbg !7827
  call void @mul_m3_v3([3 x float]* %arraydecay129, float* %arraydecay131), !dbg !7829
  %123 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7830
  %true_gravity_direction132 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %123, i32 0, i32 51, !dbg !7831
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction132, i64 0, i64 0, !dbg !7830
  %call134 = call float @normalize_v3(float* %arraydecay133), !dbg !7832
  br label %if.end135, !dbg !7833

if.end135:                                        ; preds = %if.end128, %land.end
  %124 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7834
  %sculpt_tool136 = getelementptr inbounds %struct.Brush, %struct.Brush* %124, i32 0, i32 34, !dbg !7836
  %125 = load i8, i8* %sculpt_tool136, align 8, !dbg !7836
  %conv137 = zext i8 %125 to i32, !dbg !7834
  %cmp138 = icmp eq i32 %conv137, 6, !dbg !7837
  br i1 %cmp138, label %if.then140, label %if.end185, !dbg !7838

if.then140:                                       ; preds = %if.end135
  %126 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7839
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %126, i32 0, i32 0, !dbg !7842
  %127 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !7842
  %tobool141 = icmp ne %struct.MultiresModifierData* %127, null, !dbg !7839
  br i1 %tobool141, label %if.end180, label %land.lhs.true, !dbg !7843

land.lhs.true:                                    ; preds = %if.then140
  %128 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7844
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %128, i32 0, i32 10, !dbg !7845
  %129 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7845
  %tobool142 = icmp ne %struct.BMesh* %129, null, !dbg !7844
  br i1 %tobool142, label %if.end180, label %land.lhs.true143, !dbg !7846

land.lhs.true143:                                 ; preds = %land.lhs.true
  %130 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7847
  %layer_co = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %130, i32 0, i32 26, !dbg !7848
  %131 = load [3 x float]*, [3 x float]** %layer_co, align 8, !dbg !7848
  %tobool144 = icmp ne [3 x float]* %131, null, !dbg !7847
  br i1 %tobool144, label %if.end180, label %land.lhs.true145, !dbg !7849

land.lhs.true145:                                 ; preds = %land.lhs.true143
  %132 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7850
  %flag146 = getelementptr inbounds %struct.Brush, %struct.Brush* %132, i32 0, i32 16, !dbg !7851
  %133 = load i32, i32* %flag146, align 8, !dbg !7851
  %and = and i32 %133, 4096, !dbg !7852
  %tobool147 = icmp ne i32 %and, 0, !dbg !7852
  br i1 %tobool147, label %if.then148, label %if.end180, !dbg !7853

if.then148:                                       ; preds = %land.lhs.true145
  %134 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7854
  %layer_co149 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %134, i32 0, i32 26, !dbg !7857
  %135 = load [3 x float]*, [3 x float]** %layer_co149, align 8, !dbg !7857
  %tobool150 = icmp ne [3 x float]* %135, null, !dbg !7854
  br i1 %tobool150, label %if.end156, label %if.then151, !dbg !7858

if.then151:                                       ; preds = %if.then148
  %136 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7859
  %137 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7860
  %totvert = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %137, i32 0, i32 4, !dbg !7861
  %138 = load i32, i32* %totvert, align 8, !dbg !7861
  %conv152 = sext i32 %138 to i64, !dbg !7860
  %mul153 = mul i64 12, %conv152, !dbg !7862
  %call154 = call i8* %136(i64 %mul153, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)), !dbg !7859
  %139 = bitcast i8* %call154 to [3 x float]*, !dbg !7859
  %140 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7863
  %layer_co155 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %140, i32 0, i32 26, !dbg !7864
  store [3 x float]* %139, [3 x float]** %layer_co155, align 8, !dbg !7865
  br label %if.end156, !dbg !7863

if.end156:                                        ; preds = %if.then151, %if.then148
  %141 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7866
  %deform_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %141, i32 0, i32 19, !dbg !7868
  %142 = load [3 x float]*, [3 x float]** %deform_cos, align 8, !dbg !7868
  %tobool157 = icmp ne [3 x float]* %142, null, !dbg !7866
  br i1 %tobool157, label %if.then158, label %if.else163, !dbg !7869

if.then158:                                       ; preds = %if.end156
  %143 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7870
  %layer_co159 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %143, i32 0, i32 26, !dbg !7872
  %144 = load [3 x float]*, [3 x float]** %layer_co159, align 8, !dbg !7872
  %145 = bitcast [3 x float]* %144 to i8*, !dbg !7873
  %146 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7874
  %deform_cos160 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %146, i32 0, i32 19, !dbg !7875
  %147 = load [3 x float]*, [3 x float]** %deform_cos160, align 8, !dbg !7875
  %148 = bitcast [3 x float]* %147 to i8*, !dbg !7873
  %149 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7876
  %totvert161 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %149, i32 0, i32 4, !dbg !7877
  %150 = load i32, i32* %totvert161, align 8, !dbg !7877
  %conv162 = sext i32 %150 to i64, !dbg !7876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %148, i64 %conv162, i1 false), !dbg !7873
  br label %if.end179, !dbg !7878

if.else163:                                       ; preds = %if.end156
  store i32 0, i32* %i, align 4, !dbg !7879
  br label %for.cond164, !dbg !7882

for.cond164:                                      ; preds = %for.inc176, %if.else163
  %151 = load i32, i32* %i, align 4, !dbg !7883
  %152 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7885
  %totvert165 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %152, i32 0, i32 4, !dbg !7886
  %153 = load i32, i32* %totvert165, align 8, !dbg !7886
  %cmp166 = icmp slt i32 %151, %153, !dbg !7887
  br i1 %cmp166, label %for.body168, label %for.end178, !dbg !7888

for.body168:                                      ; preds = %for.cond164
  %154 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7889
  %layer_co169 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %154, i32 0, i32 26, !dbg !7891
  %155 = load [3 x float]*, [3 x float]** %layer_co169, align 8, !dbg !7891
  %156 = load i32, i32* %i, align 4, !dbg !7892
  %idxprom170 = sext i32 %156 to i64, !dbg !7889
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %155, i64 %idxprom170, !dbg !7889
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 0, !dbg !7889
  %157 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7893
  %mvert = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %157, i32 0, i32 1, !dbg !7894
  %158 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7894
  %159 = load i32, i32* %i, align 4, !dbg !7895
  %idxprom173 = sext i32 %159 to i64, !dbg !7893
  %arrayidx174 = getelementptr inbounds %struct.MVert, %struct.MVert* %158, i64 %idxprom173, !dbg !7893
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx174, i32 0, i32 0, !dbg !7896
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7893
  call void @copy_v3_v3(float* %arraydecay172, float* %arraydecay175), !dbg !7897
  br label %for.inc176, !dbg !7898

for.inc176:                                       ; preds = %for.body168
  %160 = load i32, i32* %i, align 4, !dbg !7899
  %inc177 = add nsw i32 %160, 1, !dbg !7899
  store i32 %inc177, i32* %i, align 4, !dbg !7899
  br label %for.cond164, !dbg !7900, !llvm.loop !7901

for.end178:                                       ; preds = %for.cond164
  br label %if.end179

if.end179:                                        ; preds = %for.end178, %if.then158
  br label %if.end180, !dbg !7903

if.end180:                                        ; preds = %if.end179, %land.lhs.true145, %land.lhs.true143, %land.lhs.true, %if.then140
  %161 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7904
  %bm181 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %161, i32 0, i32 10, !dbg !7906
  %162 = load %struct.BMesh*, %struct.BMesh** %bm181, align 8, !dbg !7906
  %tobool182 = icmp ne %struct.BMesh* %162, null, !dbg !7904
  br i1 %tobool182, label %if.then183, label %if.end184, !dbg !7907

if.then183:                                       ; preds = %if.end180
  %163 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7908
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %163, i32 0, i32 15, !dbg !7910
  %164 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !7910
  call void @BKE_pbvh_free_layer_disp(%struct.PBVH* %164), !dbg !7911
  br label %if.end184, !dbg !7912

if.end184:                                        ; preds = %if.then183, %if.end180
  br label %if.end185, !dbg !7913

if.end185:                                        ; preds = %if.end184, %if.end135
  %165 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7914
  %flag186 = getelementptr inbounds %struct.Brush, %struct.Brush* %165, i32 0, i32 16, !dbg !7916
  %166 = load i32, i32* %flag186, align 8, !dbg !7916
  %and187 = and i32 %166, 256, !dbg !7917
  %tobool188 = icmp ne i32 %and187, 0, !dbg !7917
  br i1 %tobool188, label %if.then189, label %if.end212, !dbg !7918

if.then189:                                       ; preds = %if.end185
  %167 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7919
  %face_normals = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %167, i32 0, i32 6, !dbg !7922
  %168 = load [3 x float]*, [3 x float]** %face_normals, align 8, !dbg !7922
  %tobool190 = icmp ne [3 x float]* %168, null, !dbg !7919
  br i1 %tobool190, label %if.then191, label %if.end211, !dbg !7923

if.then191:                                       ; preds = %if.then189
  %169 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7924
  %170 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7926
  %totpoly = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %170, i32 0, i32 5, !dbg !7927
  %171 = load i32, i32* %totpoly, align 4, !dbg !7927
  %conv192 = sext i32 %171 to i64, !dbg !7926
  %mul193 = mul i64 12, %conv192, !dbg !7928
  %call194 = call i8* %169(i64 %mul193, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0)), !dbg !7924
  %172 = bitcast i8* %call194 to [3 x float]*, !dbg !7924
  %173 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7929
  %face_norms = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %173, i32 0, i32 24, !dbg !7930
  store [3 x float]* %172, [3 x float]** %face_norms, align 8, !dbg !7931
  store i32 0, i32* %i, align 4, !dbg !7932
  br label %for.cond195, !dbg !7934

for.cond195:                                      ; preds = %for.inc208, %if.then191
  %174 = load i32, i32* %i, align 4, !dbg !7935
  %175 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7937
  %totpoly196 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %175, i32 0, i32 5, !dbg !7938
  %176 = load i32, i32* %totpoly196, align 4, !dbg !7938
  %cmp197 = icmp slt i32 %174, %176, !dbg !7939
  br i1 %cmp197, label %for.body199, label %for.end210, !dbg !7940

for.body199:                                      ; preds = %for.cond195
  %177 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7941
  %face_norms200 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %177, i32 0, i32 24, !dbg !7943
  %178 = load [3 x float]*, [3 x float]** %face_norms200, align 8, !dbg !7943
  %179 = load i32, i32* %i, align 4, !dbg !7944
  %idxprom201 = sext i32 %179 to i64, !dbg !7941
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %178, i64 %idxprom201, !dbg !7941
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx202, i64 0, i64 0, !dbg !7941
  %180 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7945
  %face_normals204 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %180, i32 0, i32 6, !dbg !7946
  %181 = load [3 x float]*, [3 x float]** %face_normals204, align 8, !dbg !7946
  %182 = load i32, i32* %i, align 4, !dbg !7947
  %idxprom205 = sext i32 %182 to i64, !dbg !7945
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %181, i64 %idxprom205, !dbg !7945
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx206, i64 0, i64 0, !dbg !7945
  call void @copy_v3_v3(float* %arraydecay203, float* %arraydecay207), !dbg !7948
  br label %for.inc208, !dbg !7949

for.inc208:                                       ; preds = %for.body199
  %183 = load i32, i32* %i, align 4, !dbg !7950
  %inc209 = add nsw i32 %183, 1, !dbg !7950
  store i32 %inc209, i32* %i, align 4, !dbg !7950
  br label %for.cond195, !dbg !7951, !llvm.loop !7952

for.end210:                                       ; preds = %for.cond195
  br label %if.end211, !dbg !7954

if.end211:                                        ; preds = %for.end210, %if.then189
  %184 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7955
  %original = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %184, i32 0, i32 41, !dbg !7956
  store i8 1, i8* %original, align 4, !dbg !7957
  br label %if.end212, !dbg !7958

if.end212:                                        ; preds = %if.end211, %if.end185
  %185 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool213 = getelementptr inbounds %struct.Brush, %struct.Brush* %185, i32 0, i32 34, !dbg !7959
  %186 = load i8, i8* %sculpt_tool213, align 8, !dbg !7959
  %conv214 = zext i8 %186 to i32, !dbg !7959
  %cmp215 = icmp eq i32 %conv214, 1, !dbg !7959
  br i1 %cmp215, label %if.then257, label %lor.lhs.false217, !dbg !7959

lor.lhs.false217:                                 ; preds = %if.end212
  %187 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool218 = getelementptr inbounds %struct.Brush, %struct.Brush* %187, i32 0, i32 34, !dbg !7959
  %188 = load i8, i8* %sculpt_tool218, align 8, !dbg !7959
  %conv219 = zext i8 %188 to i32, !dbg !7959
  %cmp220 = icmp eq i32 %conv219, 16, !dbg !7959
  br i1 %cmp220, label %if.then257, label %lor.lhs.false222, !dbg !7959

lor.lhs.false222:                                 ; preds = %lor.lhs.false217
  %189 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool223 = getelementptr inbounds %struct.Brush, %struct.Brush* %189, i32 0, i32 34, !dbg !7959
  %190 = load i8, i8* %sculpt_tool223, align 8, !dbg !7959
  %conv224 = zext i8 %190 to i32, !dbg !7959
  %cmp225 = icmp eq i32 %conv224, 17, !dbg !7959
  br i1 %cmp225, label %if.then257, label %lor.lhs.false227, !dbg !7959

lor.lhs.false227:                                 ; preds = %lor.lhs.false222
  %191 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool228 = getelementptr inbounds %struct.Brush, %struct.Brush* %191, i32 0, i32 34, !dbg !7959
  %192 = load i8, i8* %sculpt_tool228, align 8, !dbg !7959
  %conv229 = zext i8 %192 to i32, !dbg !7959
  %cmp230 = icmp eq i32 %conv229, 6, !dbg !7959
  br i1 %cmp230, label %if.then257, label %lor.lhs.false232, !dbg !7959

lor.lhs.false232:                                 ; preds = %lor.lhs.false227
  %193 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool233 = getelementptr inbounds %struct.Brush, %struct.Brush* %193, i32 0, i32 34, !dbg !7959
  %194 = load i8, i8* %sculpt_tool233, align 8, !dbg !7959
  %conv234 = zext i8 %194 to i32, !dbg !7959
  %cmp235 = icmp eq i32 %conv234, 4, !dbg !7959
  br i1 %cmp235, label %if.then257, label %lor.lhs.false237, !dbg !7959

lor.lhs.false237:                                 ; preds = %lor.lhs.false232
  %195 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool238 = getelementptr inbounds %struct.Brush, %struct.Brush* %195, i32 0, i32 34, !dbg !7959
  %196 = load i8, i8* %sculpt_tool238, align 8, !dbg !7959
  %conv239 = zext i8 %196 to i32, !dbg !7959
  %cmp240 = icmp eq i32 %conv239, 8, !dbg !7959
  br i1 %cmp240, label %if.then257, label %lor.lhs.false242, !dbg !7959

lor.lhs.false242:                                 ; preds = %lor.lhs.false237
  %197 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool243 = getelementptr inbounds %struct.Brush, %struct.Brush* %197, i32 0, i32 34, !dbg !7959
  %198 = load i8, i8* %sculpt_tool243, align 8, !dbg !7959
  %conv244 = zext i8 %198 to i32, !dbg !7959
  %cmp245 = icmp eq i32 %conv244, 18, !dbg !7959
  br i1 %cmp245, label %if.then257, label %lor.lhs.false247, !dbg !7959

lor.lhs.false247:                                 ; preds = %lor.lhs.false242
  %199 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool248 = getelementptr inbounds %struct.Brush, %struct.Brush* %199, i32 0, i32 34, !dbg !7959
  %200 = load i8, i8* %sculpt_tool248, align 8, !dbg !7959
  %conv249 = zext i8 %200 to i32, !dbg !7959
  %cmp250 = icmp eq i32 %conv249, 14, !dbg !7959
  br i1 %cmp250, label %if.then257, label %lor.lhs.false252, !dbg !7959

lor.lhs.false252:                                 ; preds = %lor.lhs.false247
  %201 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7959
  %sculpt_tool253 = getelementptr inbounds %struct.Brush, %struct.Brush* %201, i32 0, i32 34, !dbg !7959
  %202 = load i8, i8* %sculpt_tool253, align 8, !dbg !7959
  %conv254 = zext i8 %202 to i32, !dbg !7959
  %cmp255 = icmp eq i32 %conv254, 7, !dbg !7959
  br i1 %cmp255, label %if.then257, label %if.end264, !dbg !7961

if.then257:                                       ; preds = %lor.lhs.false252, %lor.lhs.false247, %lor.lhs.false242, %lor.lhs.false237, %lor.lhs.false232, %lor.lhs.false227, %lor.lhs.false222, %lor.lhs.false217, %if.end212
  %203 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7962
  %flag258 = getelementptr inbounds %struct.Brush, %struct.Brush* %203, i32 0, i32 16, !dbg !7965
  %204 = load i32, i32* %flag258, align 8, !dbg !7965
  %and259 = and i32 %204, 8192, !dbg !7966
  %tobool260 = icmp ne i32 %and259, 0, !dbg !7966
  br i1 %tobool260, label %if.end263, label %if.then261, !dbg !7967

if.then261:                                       ; preds = %if.then257
  %205 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7968
  %original262 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %205, i32 0, i32 41, !dbg !7970
  store i8 1, i8* %original262, align 4, !dbg !7971
  br label %if.end263, !dbg !7972

if.end263:                                        ; preds = %if.then261, %if.then257
  br label %if.end264, !dbg !7973

if.end264:                                        ; preds = %if.end263, %lor.lhs.false252
  %206 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7974
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %206, i32 0, i32 20, !dbg !7975
  store i8 1, i8* %first_time, align 4, !dbg !7976
  %207 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7977
  %sculpt_tool265 = getelementptr inbounds %struct.Brush, %struct.Brush* %207, i32 0, i32 34, !dbg !7979
  %208 = load i8, i8* %sculpt_tool265, align 8, !dbg !7979
  %conv266 = zext i8 %208 to i32, !dbg !7977
  %cmp267 = icmp eq i32 %conv266, 14, !dbg !7980
  br i1 %cmp267, label %if.then269, label %if.end273, !dbg !7981

if.then269:                                       ; preds = %if.end264
  %209 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7982
  %initial_mouse270 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %209, i32 0, i32 4, !dbg !7983
  %arraydecay271 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse270, i64 0, i64 0, !dbg !7982
  %call272 = call %struct.Dial* @BLI_dial_initialize(float* %arraydecay271, float 5.000000e+00), !dbg !7984
  %210 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !7985
  %dial = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %210, i32 0, i32 44, !dbg !7986
  store %struct.Dial* %call272, %struct.Dial** %dial, align 8, !dbg !7987
  br label %if.end273, !dbg !7985

if.end273:                                        ; preds = %if.then269, %if.end264
  %211 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7988
  %212 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !7989
  call void @sculpt_omp_start(%struct.Sculpt* %211, %struct.SculptSession* %212), !dbg !7990
  ret void, !dbg !7991
}

declare dso_local void @sculpt_undo_push_begin(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @sculpt_tool_name(%struct.Sculpt* %sd) #0 !dbg !7992 {
entry:
  %retval = alloca i8*, align 8
  %sd.addr = alloca %struct.Sculpt*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !7997, metadata !DIExpression()), !dbg !7998
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !7999
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !8000
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !8001
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !7998
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8002
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 34, !dbg !8003
  %2 = load i8, i8* %sculpt_tool, align 8, !dbg !8003
  %conv = zext i8 %2 to i32, !dbg !8004
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 16, label %sw.bb2
    i32 17, label %sw.bb3
    i32 3, label %sw.bb4
    i32 4, label %sw.bb5
    i32 5, label %sw.bb6
    i32 11, label %sw.bb7
    i32 12, label %sw.bb8
    i32 6, label %sw.bb9
    i32 7, label %sw.bb10
    i32 8, label %sw.bb11
    i32 18, label %sw.bb12
    i32 9, label %sw.bb13
    i32 10, label %sw.bb14
    i32 13, label %sw.bb15
    i32 14, label %sw.bb16
    i32 19, label %sw.bb17
    i32 15, label %sw.bb18
  ], !dbg !8005

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8** %retval, align 8, !dbg !8006
  br label %return, !dbg !8006

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !8008
  br label %return, !dbg !8008

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8** %retval, align 8, !dbg !8009
  br label %return, !dbg !8009

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8** %retval, align 8, !dbg !8010
  br label %return, !dbg !8010

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8** %retval, align 8, !dbg !8011
  br label %return, !dbg !8011

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i8** %retval, align 8, !dbg !8012
  br label %return, !dbg !8012

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8** %retval, align 8, !dbg !8013
  br label %return, !dbg !8013

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i8** %retval, align 8, !dbg !8014
  br label %return, !dbg !8014

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i8** %retval, align 8, !dbg !8015
  br label %return, !dbg !8015

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i8** %retval, align 8, !dbg !8016
  br label %return, !dbg !8016

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), i8** %retval, align 8, !dbg !8017
  br label %return, !dbg !8017

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8** %retval, align 8, !dbg !8018
  br label %return, !dbg !8018

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8** %retval, align 8, !dbg !8019
  br label %return, !dbg !8019

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8** %retval, align 8, !dbg !8020
  br label %return, !dbg !8020

sw.bb14:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8** %retval, align 8, !dbg !8021
  br label %return, !dbg !8021

sw.bb15:                                          ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8** %retval, align 8, !dbg !8022
  br label %return, !dbg !8022

sw.bb16:                                          ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8** %retval, align 8, !dbg !8023
  br label %return, !dbg !8023

sw.bb17:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i8** %retval, align 8, !dbg !8024
  br label %return, !dbg !8024

sw.bb18:                                          ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8** %retval, align 8, !dbg !8025
  br label %return, !dbg !8025

sw.epilog:                                        ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8** %retval, align 8, !dbg !8026
  br label %return, !dbg !8026

return:                                           ; preds = %sw.epilog, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %3 = load i8*, i8** %retval, align 8, !dbg !8027
  ret i8* %3, !dbg !8027
}

declare dso_local %struct.ViewContext* @paint_stroke_view_context(%struct.PaintStroke*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !8028 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  %0 = load float, float* %a.addr, align 4, !dbg !8036
  %1 = load float, float* %b.addr, align 4, !dbg !8037
  %cmp = fcmp ogt float %0, %1, !dbg !8038
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8039

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8040
  br label %cond.end, !dbg !8039

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8041
  br label %cond.end, !dbg !8039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8039
  ret float %cond, !dbg !8042
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_init_mirror_clipping(%struct.Object* %ob, %struct.SculptSession* %ss) #0 !dbg !8043 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %i = alloca i32, align 4
  %mmd = alloca %struct.MirrorModifierData*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8053, metadata !DIExpression()), !dbg !8054
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8055
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 26, !dbg !8057
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !8058
  %1 = load i8*, i8** %first, align 8, !dbg !8058
  %2 = bitcast i8* %1 to %struct.ModifierData*, !dbg !8055
  store %struct.ModifierData* %2, %struct.ModifierData** %md, align 8, !dbg !8059
  br label %for.cond, !dbg !8060

for.cond:                                         ; preds = %for.inc28, %entry
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8061
  %tobool = icmp ne %struct.ModifierData* %3, null, !dbg !8063
  br i1 %tobool, label %for.body, label %for.end29, !dbg !8063

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8064
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %4, i32 0, i32 2, !dbg !8067
  %5 = load i32, i32* %type, align 8, !dbg !8067
  %cmp = icmp eq i32 %5, 5, !dbg !8068
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !8069

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8070
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %6, i32 0, i32 3, !dbg !8071
  %7 = load i32, i32* %mode, align 4, !dbg !8071
  %and = and i32 %7, 1, !dbg !8072
  %tobool1 = icmp ne i32 %and, 0, !dbg !8072
  br i1 %tobool1, label %if.then, label %if.end27, !dbg !8073

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MirrorModifierData** %mmd, metadata !8074, metadata !DIExpression()), !dbg !8076
  %8 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8077
  %9 = bitcast %struct.ModifierData* %8 to %struct.MirrorModifierData*, !dbg !8078
  store %struct.MirrorModifierData* %9, %struct.MirrorModifierData** %mmd, align 8, !dbg !8076
  %10 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !8079
  %flag = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %10, i32 0, i32 2, !dbg !8081
  %11 = load i16, i16* %flag, align 2, !dbg !8081
  %conv = sext i16 %11 to i32, !dbg !8079
  %and2 = and i32 %conv, 1, !dbg !8082
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8082
  br i1 %tobool3, label %if.then4, label %if.end26, !dbg !8083

if.then4:                                         ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !8084
  br label %for.cond5, !dbg !8087

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load i32, i32* %i, align 4, !dbg !8088
  %cmp6 = icmp slt i32 %12, 3, !dbg !8090
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !8091

for.body8:                                        ; preds = %for.cond5
  %13 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !8092
  %flag9 = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %13, i32 0, i32 2, !dbg !8095
  %14 = load i16, i16* %flag9, align 2, !dbg !8095
  %conv10 = sext i16 %14 to i32, !dbg !8092
  %15 = load i32, i32* %i, align 4, !dbg !8096
  %shl = shl i32 8, %15, !dbg !8097
  %and11 = and i32 %conv10, %shl, !dbg !8098
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8098
  br i1 %tobool12, label %if.then13, label %if.end25, !dbg !8099

if.then13:                                        ; preds = %for.body8
  %16 = load i32, i32* %i, align 4, !dbg !8100
  %shl14 = shl i32 1, %16, !dbg !8102
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8103
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !8104
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8104
  %flag15 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 2, !dbg !8105
  %19 = load i32, i32* %flag15, align 8, !dbg !8106
  %or = or i32 %19, %shl14, !dbg !8106
  store i32 %or, i32* %flag15, align 8, !dbg !8106
  %20 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !8107
  %tolerance = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %20, i32 0, i32 3, !dbg !8109
  %21 = load float, float* %tolerance, align 4, !dbg !8109
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8110
  %cache16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 28, !dbg !8111
  %23 = load %struct.StrokeCache*, %struct.StrokeCache** %cache16, align 8, !dbg !8111
  %clip_tolerance = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %23, i32 0, i32 3, !dbg !8112
  %24 = load i32, i32* %i, align 4, !dbg !8113
  %idxprom = sext i32 %24 to i64, !dbg !8110
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %clip_tolerance, i64 0, i64 %idxprom, !dbg !8110
  %25 = load float, float* %arrayidx, align 4, !dbg !8110
  %cmp17 = fcmp ogt float %21, %25, !dbg !8114
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !8115

if.then19:                                        ; preds = %if.then13
  %26 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !8116
  %tolerance20 = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %26, i32 0, i32 3, !dbg !8118
  %27 = load float, float* %tolerance20, align 4, !dbg !8118
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8119
  %cache21 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 28, !dbg !8120
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache21, align 8, !dbg !8120
  %clip_tolerance22 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 3, !dbg !8121
  %30 = load i32, i32* %i, align 4, !dbg !8122
  %idxprom23 = sext i32 %30 to i64, !dbg !8119
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %clip_tolerance22, i64 0, i64 %idxprom23, !dbg !8119
  store float %27, float* %arrayidx24, align 4, !dbg !8123
  br label %if.end, !dbg !8124

if.end:                                           ; preds = %if.then19, %if.then13
  br label %if.end25, !dbg !8125

if.end25:                                         ; preds = %if.end, %for.body8
  br label %for.inc, !dbg !8126

for.inc:                                          ; preds = %if.end25
  %31 = load i32, i32* %i, align 4, !dbg !8127
  %inc = add nsw i32 %31, 1, !dbg !8127
  store i32 %inc, i32* %i, align 4, !dbg !8127
  br label %for.cond5, !dbg !8128, !llvm.loop !8129

for.end:                                          ; preds = %for.cond5
  br label %if.end26, !dbg !8131

if.end26:                                         ; preds = %for.end, %if.then
  br label %if.end27, !dbg !8132

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %for.body
  br label %for.inc28, !dbg !8133

for.inc28:                                        ; preds = %if.end27
  %32 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8134
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %32, i32 0, i32 0, !dbg !8135
  %33 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !8135
  store %struct.ModifierData* %33, %struct.ModifierData** %md, align 8, !dbg !8136
  br label %for.cond, !dbg !8137, !llvm.loop !8138

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !8140
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !8141 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  %0 = load float*, float** %a.addr, align 8, !dbg !8146
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8146
  %1 = load float, float* %arrayidx, align 4, !dbg !8146
  %2 = load float*, float** %r.addr, align 8, !dbg !8147
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8147
  store float %1, float* %arrayidx1, align 4, !dbg !8148
  %3 = load float*, float** %a.addr, align 8, !dbg !8149
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8149
  %4 = load float, float* %arrayidx2, align 4, !dbg !8149
  %5 = load float*, float** %r.addr, align 8, !dbg !8150
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8150
  store float %4, float* %arrayidx3, align 4, !dbg !8151
  ret void, !dbg !8152
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !8153 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  %0 = load float*, float** %r.addr, align 8, !dbg !8156
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8156
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8157
  %1 = load float*, float** %r.addr, align 8, !dbg !8158
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !8158
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8159
  ret void, !dbg !8160
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local %struct.ID* @BKE_libblock_find_name(i16 signext, i8*) #2

declare dso_local void @BKE_paint_brush_set(%struct.Paint*, %struct.Brush*) #2

declare dso_local void @BKE_brush_size_set(%struct.Scene*, %struct.Brush*, i32) #2

declare dso_local void @curvemapping_initialize(%struct.CurveMapping*) #2

declare dso_local void @ED_view3d_ob_project_mat_get(%struct.RegionView3D*, %struct.Object*, [4 x float]*) #2

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

declare dso_local void @BKE_pbvh_free_layer_disp(%struct.PBVH*) #2

declare dso_local %struct.Dial* @BLI_dial_initialize(float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_omp_start(%struct.Sculpt* %sd, %struct.SculptSession* %ss) #0 !dbg !8161 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %i = alloca i32, align 4
  %gridsize = alloca i32, align 4
  %array_mem_size = alloca i32, align 4
  %row_size = alloca i64, align 8
  %co_row_size = alloca i64, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !8168, metadata !DIExpression()), !dbg !8169
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8170
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 28, !dbg !8171
  %1 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !8171
  store %struct.StrokeCache* %1, %struct.StrokeCache** %cache, align 8, !dbg !8169
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8172
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8173
  %num_threads = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %3, i32 0, i32 5, !dbg !8174
  store i32 1, i32* %num_threads, align 8, !dbg !8175
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8176
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 0, !dbg !8178
  %5 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !8178
  %tobool = icmp ne %struct.MultiresModifierData* %5, null, !dbg !8176
  br i1 %tobool, label %if.then, label %if.end, !dbg !8179

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8180, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !8183, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.declare(metadata i32* %array_mem_size, metadata !8185, metadata !DIExpression()), !dbg !8186
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8187
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 15, !dbg !8188
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !8188
  call void @BKE_pbvh_node_get_grids(%struct.PBVH* %7, %struct.PBVHNode* null, i32** null, i32* null, i32* null, i32* %gridsize, %struct.CCGElem*** null, %struct.DMGridAdjacency** null), !dbg !8189
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8190
  %num_threads2 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 5, !dbg !8191
  %9 = load i32, i32* %num_threads2, align 8, !dbg !8191
  %conv = sext i32 %9 to i64, !dbg !8190
  %mul = mul i64 %conv, 8, !dbg !8192
  %conv3 = trunc i64 %mul to i32, !dbg !8190
  store i32 %conv3, i32* %array_mem_size, align 4, !dbg !8193
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8194
  %11 = load i32, i32* %array_mem_size, align 4, !dbg !8195
  %conv4 = sext i32 %11 to i64, !dbg !8195
  %call = call i8* %10(i64 %conv4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !8194
  %12 = bitcast i8* %call to [3 x float]**, !dbg !8194
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8196
  %tmpgrid_co = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 7, !dbg !8197
  store [3 x float]** %12, [3 x float]*** %tmpgrid_co, align 8, !dbg !8198
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8199
  %15 = load i32, i32* %array_mem_size, align 4, !dbg !8200
  %conv5 = sext i32 %15 to i64, !dbg !8200
  %call6 = call i8* %14(i64 %conv5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)), !dbg !8199
  %16 = bitcast i8* %call6 to [3 x float]**, !dbg !8199
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8201
  %tmprow_co = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 8, !dbg !8202
  store [3 x float]** %16, [3 x float]*** %tmprow_co, align 8, !dbg !8203
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8204
  %19 = load i32, i32* %array_mem_size, align 4, !dbg !8205
  %conv7 = sext i32 %19 to i64, !dbg !8205
  %call8 = call i8* %18(i64 %conv7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)), !dbg !8204
  %20 = bitcast i8* %call8 to float**, !dbg !8204
  %21 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8206
  %tmpgrid_mask = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %21, i32 0, i32 9, !dbg !8207
  store float** %20, float*** %tmpgrid_mask, align 8, !dbg !8208
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8209
  %23 = load i32, i32* %array_mem_size, align 4, !dbg !8210
  %conv9 = sext i32 %23 to i64, !dbg !8210
  %call10 = call i8* %22(i64 %conv9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)), !dbg !8209
  %24 = bitcast i8* %call10 to float**, !dbg !8209
  %25 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8211
  %tmprow_mask = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %25, i32 0, i32 10, !dbg !8212
  store float** %24, float*** %tmprow_mask, align 8, !dbg !8213
  store i32 0, i32* %i, align 4, !dbg !8214
  br label %for.cond, !dbg !8216

for.cond:                                         ; preds = %for.inc, %if.then
  %26 = load i32, i32* %i, align 4, !dbg !8217
  %27 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8219
  %num_threads11 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %27, i32 0, i32 5, !dbg !8220
  %28 = load i32, i32* %num_threads11, align 8, !dbg !8220
  %cmp = icmp slt i32 %26, %28, !dbg !8221
  br i1 %cmp, label %for.body, label %for.end, !dbg !8222

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %row_size, metadata !8223, metadata !DIExpression()), !dbg !8228
  %29 = load i32, i32* %gridsize, align 4, !dbg !8229
  %conv13 = sext i32 %29 to i64, !dbg !8229
  %mul14 = mul i64 4, %conv13, !dbg !8230
  store i64 %mul14, i64* %row_size, align 8, !dbg !8228
  call void @llvm.dbg.declare(metadata i64* %co_row_size, metadata !8231, metadata !DIExpression()), !dbg !8232
  %30 = load i64, i64* %row_size, align 8, !dbg !8233
  %mul15 = mul i64 3, %30, !dbg !8234
  store i64 %mul15, i64* %co_row_size, align 8, !dbg !8232
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8235
  %32 = load i64, i64* %co_row_size, align 8, !dbg !8236
  %call16 = call i8* %31(i64 %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)), !dbg !8235
  %33 = bitcast i8* %call16 to [3 x float]*, !dbg !8235
  %34 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8237
  %tmprow_co17 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %34, i32 0, i32 8, !dbg !8238
  %35 = load [3 x float]**, [3 x float]*** %tmprow_co17, align 8, !dbg !8238
  %36 = load i32, i32* %i, align 4, !dbg !8239
  %idxprom = sext i32 %36 to i64, !dbg !8237
  %arrayidx = getelementptr inbounds [3 x float]*, [3 x float]** %35, i64 %idxprom, !dbg !8237
  store [3 x float]* %33, [3 x float]** %arrayidx, align 8, !dbg !8240
  %37 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8241
  %38 = load i64, i64* %co_row_size, align 8, !dbg !8242
  %39 = load i32, i32* %gridsize, align 4, !dbg !8243
  %conv18 = sext i32 %39 to i64, !dbg !8243
  %mul19 = mul i64 %38, %conv18, !dbg !8244
  %call20 = call i8* %37(i64 %mul19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0)), !dbg !8241
  %40 = bitcast i8* %call20 to [3 x float]*, !dbg !8241
  %41 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8245
  %tmpgrid_co21 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %41, i32 0, i32 7, !dbg !8246
  %42 = load [3 x float]**, [3 x float]*** %tmpgrid_co21, align 8, !dbg !8246
  %43 = load i32, i32* %i, align 4, !dbg !8247
  %idxprom22 = sext i32 %43 to i64, !dbg !8245
  %arrayidx23 = getelementptr inbounds [3 x float]*, [3 x float]** %42, i64 %idxprom22, !dbg !8245
  store [3 x float]* %40, [3 x float]** %arrayidx23, align 8, !dbg !8248
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8249
  %45 = load i64, i64* %row_size, align 8, !dbg !8250
  %call24 = call i8* %44(i64 %45, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)), !dbg !8249
  %46 = bitcast i8* %call24 to float*, !dbg !8249
  %47 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8251
  %tmprow_mask25 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %47, i32 0, i32 10, !dbg !8252
  %48 = load float**, float*** %tmprow_mask25, align 8, !dbg !8252
  %49 = load i32, i32* %i, align 4, !dbg !8253
  %idxprom26 = sext i32 %49 to i64, !dbg !8251
  %arrayidx27 = getelementptr inbounds float*, float** %48, i64 %idxprom26, !dbg !8251
  store float* %46, float** %arrayidx27, align 8, !dbg !8254
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8255
  %51 = load i64, i64* %row_size, align 8, !dbg !8256
  %52 = load i32, i32* %gridsize, align 4, !dbg !8257
  %conv28 = sext i32 %52 to i64, !dbg !8257
  %mul29 = mul i64 %51, %conv28, !dbg !8258
  %call30 = call i8* %50(i64 %mul29, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)), !dbg !8255
  %53 = bitcast i8* %call30 to float*, !dbg !8255
  %54 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8259
  %tmpgrid_mask31 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %54, i32 0, i32 9, !dbg !8260
  %55 = load float**, float*** %tmpgrid_mask31, align 8, !dbg !8260
  %56 = load i32, i32* %i, align 4, !dbg !8261
  %idxprom32 = sext i32 %56 to i64, !dbg !8259
  %arrayidx33 = getelementptr inbounds float*, float** %55, i64 %idxprom32, !dbg !8259
  store float* %53, float** %arrayidx33, align 8, !dbg !8262
  br label %for.inc, !dbg !8263

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !8264
  %inc = add nsw i32 %57, 1, !dbg !8264
  store i32 %inc, i32* %i, align 4, !dbg !8264
  br label %for.cond, !dbg !8265, !llvm.loop !8266

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !8268

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !8269
}

declare dso_local void @BKE_pbvh_node_get_grids(%struct.PBVH*, %struct.PBVHNode*, i32**, i32*, i32*, i32*, %struct.CCGElem***, %struct.DMGridAdjacency**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_update_cache_variants(%struct.bContext* %C, %struct.Sculpt* %sd, %struct.Object* %ob, %struct.PointerRNA* %ptr) #0 !dbg !8270 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ups = alloca %struct.UnifiedPaintSettings*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8281, metadata !DIExpression()), !dbg !8282
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8283
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !8284
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !8282
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups, metadata !8285, metadata !DIExpression()), !dbg !8286
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8287
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !8288
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !8288
  %unified_paint_settings = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 73, !dbg !8289
  store %struct.UnifiedPaintSettings* %unified_paint_settings, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8286
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !8290, metadata !DIExpression()), !dbg !8291
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8292
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 2, !dbg !8293
  %4 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8293
  store %struct.SculptSession* %4, %struct.SculptSession** %ss, align 8, !dbg !8291
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !8294, metadata !DIExpression()), !dbg !8295
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8296
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 28, !dbg !8297
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !8297
  store %struct.StrokeCache* %6, %struct.StrokeCache** %cache, align 8, !dbg !8295
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !8298, metadata !DIExpression()), !dbg !8299
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8300
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %7, i32 0, i32 0, !dbg !8301
  %call2 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !8302
  store %struct.Brush* %call2, %struct.Brush** %brush, align 8, !dbg !8299
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8303
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 20, !dbg !8305
  %9 = load i8, i8* %first_time, align 4, !dbg !8305
  %conv = zext i8 %9 to i32, !dbg !8303
  %tobool = icmp ne i32 %conv, 0, !dbg !8303
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8306

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8307
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 16, !dbg !8308
  %11 = load i32, i32* %flag, align 8, !dbg !8308
  %and = and i32 %11, 256, !dbg !8309
  %tobool3 = icmp ne i32 %and, 0, !dbg !8309
  br i1 %tobool3, label %if.end, label %lor.lhs.false4, !dbg !8310

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8311
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 34, !dbg !8312
  %13 = load i8, i8* %sculpt_tool, align 8, !dbg !8312
  %conv5 = zext i8 %13 to i32, !dbg !8311
  %cmp = icmp eq i32 %conv5, 13, !dbg !8313
  br i1 %cmp, label %if.end, label %lor.lhs.false7, !dbg !8314

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8315
  %sculpt_tool8 = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 34, !dbg !8316
  %15 = load i8, i8* %sculpt_tool8, align 8, !dbg !8316
  %conv9 = zext i8 %15 to i32, !dbg !8315
  %cmp10 = icmp eq i32 %conv9, 14, !dbg !8317
  br i1 %cmp10, label %if.end, label %if.then, !dbg !8318

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8319
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8321
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 13, !dbg !8322
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !8321
  call void @RNA_float_get_array(%struct.PointerRNA* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), float* %arraydecay), !dbg !8323
  br label %if.end, !dbg !8324

if.end:                                           ; preds = %if.then, %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8325
  %call12 = call i32 @RNA_boolean_get(%struct.PointerRNA* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0)), !dbg !8326
  %conv13 = trunc i32 %call12 to i8, !dbg !8326
  %19 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8327
  %pen_flip = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %19, i32 0, i32 15, !dbg !8328
  store i8 %conv13, i8* %pen_flip, align 8, !dbg !8329
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8330
  %21 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8331
  %mouse = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %21, i32 0, i32 18, !dbg !8332
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !8331
  call void @RNA_float_get_array(%struct.PointerRNA* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), float* %arraydecay14), !dbg !8333
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8334
  %call15 = call zeroext i8 @paint_supports_dynamic_size(%struct.Brush* %22, i32 0), !dbg !8336
  %conv16 = zext i8 %call15 to i32, !dbg !8336
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !8336
  br i1 %tobool17, label %if.then22, label %lor.lhs.false18, !dbg !8337

lor.lhs.false18:                                  ; preds = %if.end
  %23 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8338
  %first_time19 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %23, i32 0, i32 20, !dbg !8339
  %24 = load i8, i8* %first_time19, align 4, !dbg !8339
  %conv20 = zext i8 %24 to i32, !dbg !8338
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !8338
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !8340

if.then22:                                        ; preds = %lor.lhs.false18, %if.end
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8341
  %call23 = call float @RNA_float_get(%struct.PointerRNA* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)), !dbg !8343
  %26 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8344
  %pressure = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %26, i32 0, i32 17, !dbg !8345
  store float %call23, float* %pressure, align 4, !dbg !8346
  br label %if.end24, !dbg !8347

if.end24:                                         ; preds = %if.then22, %lor.lhs.false18
  %27 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8348
  %first_time25 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %27, i32 0, i32 20, !dbg !8350
  %28 = load i8, i8* %first_time25, align 4, !dbg !8350
  %tobool26 = icmp ne i8 %28, 0, !dbg !8348
  br i1 %tobool26, label %if.then27, label %if.end40, !dbg !8351

if.then27:                                        ; preds = %if.end24
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8352
  %30 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8355
  %call28 = call i32 @BKE_brush_use_locked_size(%struct.Scene* %29, %struct.Brush* %30), !dbg !8356
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8356
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !8357

if.then30:                                        ; preds = %if.then27
  %31 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8358
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %31, i32 0, i32 22, !dbg !8360
  %32 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !8360
  %33 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8361
  %true_location31 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %33, i32 0, i32 13, !dbg !8362
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %true_location31, i64 0, i64 0, !dbg !8361
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8363
  %35 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8364
  %call33 = call i32 @BKE_brush_size_get(%struct.Scene* %34, %struct.Brush* %35), !dbg !8365
  %conv34 = sitofp i32 %call33 to float, !dbg !8365
  %call35 = call float @paint_calc_object_space_radius(%struct.ViewContext* %32, float* %arraydecay32, float %conv34), !dbg !8366
  %36 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8367
  %initial_radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %36, i32 0, i32 0, !dbg !8368
  store float %call35, float* %initial_radius, align 8, !dbg !8369
  %37 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8370
  %38 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8371
  %39 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8372
  %initial_radius36 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %39, i32 0, i32 0, !dbg !8373
  %40 = load float, float* %initial_radius36, align 8, !dbg !8373
  call void @BKE_brush_unprojected_radius_set(%struct.Scene* %37, %struct.Brush* %38, float %40), !dbg !8374
  br label %if.end39, !dbg !8375

if.else:                                          ; preds = %if.then27
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8376
  %42 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8378
  %call37 = call float @BKE_brush_unprojected_radius_get(%struct.Scene* %41, %struct.Brush* %42), !dbg !8379
  %43 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8380
  %initial_radius38 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %43, i32 0, i32 0, !dbg !8381
  store float %call37, float* %initial_radius38, align 8, !dbg !8382
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then30
  br label %if.end40, !dbg !8383

if.end40:                                         ; preds = %if.end39, %if.end24
  %44 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8384
  %45 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8386
  %call41 = call i32 @BKE_brush_use_size_pressure(%struct.Scene* %44, %struct.Brush* %45), !dbg !8387
  %tobool42 = icmp ne i32 %call41, 0, !dbg !8387
  br i1 %tobool42, label %land.lhs.true, label %if.else49, !dbg !8388

land.lhs.true:                                    ; preds = %if.end40
  %46 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8389
  %call43 = call zeroext i8 @paint_supports_dynamic_size(%struct.Brush* %46, i32 0), !dbg !8390
  %conv44 = zext i8 %call43 to i32, !dbg !8390
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !8390
  br i1 %tobool45, label %if.then46, label %if.else49, !dbg !8391

if.then46:                                        ; preds = %land.lhs.true
  %47 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8392
  %initial_radius47 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %47, i32 0, i32 0, !dbg !8394
  %48 = load float, float* %initial_radius47, align 8, !dbg !8394
  %49 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8395
  %pressure48 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %49, i32 0, i32 17, !dbg !8396
  %50 = load float, float* %pressure48, align 4, !dbg !8396
  %mul = fmul float %48, %50, !dbg !8397
  %51 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8398
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %51, i32 0, i32 11, !dbg !8399
  store float %mul, float* %radius, align 8, !dbg !8400
  br label %if.end52, !dbg !8401

if.else49:                                        ; preds = %land.lhs.true, %if.end40
  %52 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8402
  %initial_radius50 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %52, i32 0, i32 0, !dbg !8404
  %53 = load float, float* %initial_radius50, align 8, !dbg !8404
  %54 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8405
  %radius51 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %54, i32 0, i32 11, !dbg !8406
  store float %53, float* %radius51, align 8, !dbg !8407
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.then46
  %55 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8408
  %radius53 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %55, i32 0, i32 11, !dbg !8409
  %56 = load float, float* %radius53, align 8, !dbg !8409
  %57 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8410
  %radius54 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %57, i32 0, i32 11, !dbg !8411
  %58 = load float, float* %radius54, align 8, !dbg !8411
  %mul55 = fmul float %56, %58, !dbg !8412
  %59 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8413
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %59, i32 0, i32 12, !dbg !8414
  store float %mul55, float* %radius_squared, align 4, !dbg !8415
  %60 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8416
  %flag56 = getelementptr inbounds %struct.Brush, %struct.Brush* %60, i32 0, i32 16, !dbg !8418
  %61 = load i32, i32* %flag56, align 8, !dbg !8418
  %and57 = and i32 %61, 256, !dbg !8419
  %tobool58 = icmp ne i32 %and57, 0, !dbg !8419
  br i1 %tobool58, label %if.then59, label %if.end79, !dbg !8420

if.then59:                                        ; preds = %if.end52
  %62 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8421
  %flag60 = getelementptr inbounds %struct.Brush, %struct.Brush* %62, i32 0, i32 16, !dbg !8424
  %63 = load i32, i32* %flag60, align 8, !dbg !8424
  %and61 = and i32 %63, 4194304, !dbg !8425
  %tobool62 = icmp ne i32 %and61, 0, !dbg !8425
  br i1 %tobool62, label %if.then63, label %if.end66, !dbg !8426

if.then63:                                        ; preds = %if.then59
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8427
  %65 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8429
  %true_location64 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %65, i32 0, i32 13, !dbg !8430
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %true_location64, i64 0, i64 0, !dbg !8429
  call void @RNA_float_get_array(%struct.PointerRNA* %64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), float* %arraydecay65), !dbg !8431
  br label %if.end66, !dbg !8432

if.end66:                                         ; preds = %if.then63, %if.then59
  %66 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8433
  %vc67 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %66, i32 0, i32 22, !dbg !8434
  %67 = load %struct.ViewContext*, %struct.ViewContext** %vc67, align 8, !dbg !8434
  %68 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8435
  %true_location68 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %68, i32 0, i32 13, !dbg !8436
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %true_location68, i64 0, i64 0, !dbg !8435
  %69 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8437
  %pixel_radius = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %69, i32 0, i32 21, !dbg !8438
  %70 = load float, float* %pixel_radius, align 8, !dbg !8438
  %call70 = call float @paint_calc_object_space_radius(%struct.ViewContext* %67, float* %arraydecay69, float %70), !dbg !8439
  %71 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8440
  %radius71 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %71, i32 0, i32 11, !dbg !8441
  store float %call70, float* %radius71, align 8, !dbg !8442
  %72 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8443
  %radius72 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %72, i32 0, i32 11, !dbg !8444
  %73 = load float, float* %radius72, align 8, !dbg !8444
  %74 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8445
  %radius73 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %74, i32 0, i32 11, !dbg !8446
  %75 = load float, float* %radius73, align 8, !dbg !8446
  %mul74 = fmul float %73, %75, !dbg !8447
  %76 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8448
  %radius_squared75 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %76, i32 0, i32 12, !dbg !8449
  store float %mul74, float* %radius_squared75, align 4, !dbg !8450
  %77 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8451
  %anchored_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %77, i32 0, i32 42, !dbg !8452
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %anchored_location, i64 0, i64 0, !dbg !8451
  %78 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8453
  %true_location77 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %78, i32 0, i32 13, !dbg !8454
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %true_location77, i64 0, i64 0, !dbg !8453
  call void @copy_v3_v3(float* %arraydecay76, float* %arraydecay78), !dbg !8455
  br label %if.end79, !dbg !8456

if.end79:                                         ; preds = %if.end66, %if.end52
  %79 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8457
  %80 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8458
  %81 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8459
  call void @sculpt_update_brush_delta(%struct.UnifiedPaintSettings* %79, %struct.Object* %80, %struct.Brush* %81), !dbg !8460
  %82 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8461
  %sculpt_tool80 = getelementptr inbounds %struct.Brush, %struct.Brush* %82, i32 0, i32 34, !dbg !8463
  %83 = load i8, i8* %sculpt_tool80, align 8, !dbg !8463
  %conv81 = zext i8 %83 to i32, !dbg !8461
  %cmp82 = icmp eq i32 %conv81, 14, !dbg !8464
  br i1 %cmp82, label %if.then84, label %if.end97, !dbg !8465

if.then84:                                        ; preds = %if.end79
  %84 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8466
  %dial = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %84, i32 0, i32 44, !dbg !8468
  %85 = load %struct.Dial*, %struct.Dial** %dial, align 8, !dbg !8468
  %86 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8469
  %mouse85 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %86, i32 0, i32 18, !dbg !8470
  %arraydecay86 = getelementptr inbounds [2 x float], [2 x float]* %mouse85, i64 0, i64 0, !dbg !8469
  %call87 = call float @BLI_dial_angle(%struct.Dial* %85, float* %arraydecay86), !dbg !8471
  %fneg = fneg float %call87, !dbg !8472
  %87 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8473
  %bstrength = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %87, i32 0, i32 19, !dbg !8474
  %88 = load float, float* %bstrength, align 8, !dbg !8474
  %mul88 = fmul float %fneg, %88, !dbg !8475
  %89 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8476
  %vertex_rotation = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %89, i32 0, i32 43, !dbg !8477
  store float %mul88, float* %vertex_rotation, align 4, !dbg !8478
  %90 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8479
  %draw_anchored = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %90, i32 0, i32 9, !dbg !8480
  store i32 1, i32* %draw_anchored, align 8, !dbg !8481
  %91 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8482
  %anchored_initial_mouse = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %91, i32 0, i32 14, !dbg !8483
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %anchored_initial_mouse, i64 0, i64 0, !dbg !8482
  %92 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8484
  %initial_mouse = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %92, i32 0, i32 4, !dbg !8485
  %arraydecay90 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse, i64 0, i64 0, !dbg !8484
  call void @copy_v2_v2(float* %arraydecay89, float* %arraydecay90), !dbg !8486
  %93 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8487
  %anchored_location91 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %93, i32 0, i32 42, !dbg !8488
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %anchored_location91, i64 0, i64 0, !dbg !8487
  %94 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8489
  %true_location93 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %94, i32 0, i32 13, !dbg !8490
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %true_location93, i64 0, i64 0, !dbg !8489
  call void @copy_v3_v3(float* %arraydecay92, float* %arraydecay94), !dbg !8491
  %95 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8492
  %pixel_radius95 = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %95, i32 0, i32 21, !dbg !8493
  %96 = load float, float* %pixel_radius95, align 8, !dbg !8493
  %conv96 = fptosi float %96 to i32, !dbg !8492
  %97 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8494
  %anchored_size = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %97, i32 0, i32 10, !dbg !8495
  store i32 %conv96, i32* %anchored_size, align 4, !dbg !8496
  br label %if.end97, !dbg !8497

if.end97:                                         ; preds = %if.then84, %if.end79
  %98 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !8498
  %brush_rotation = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %98, i32 0, i32 8, !dbg !8499
  %99 = load float, float* %brush_rotation, align 4, !dbg !8499
  %100 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8500
  %special_rotation = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %100, i32 0, i32 25, !dbg !8501
  store float %99, float* %special_rotation, align 8, !dbg !8502
  ret void, !dbg !8503
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_restore_mesh(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !8504 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !8511, metadata !DIExpression()), !dbg !8512
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8513
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !8514
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8514
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !8512
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !8515, metadata !DIExpression()), !dbg !8516
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8517
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !8518
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !8519
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !8516
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8520
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 16, !dbg !8522
  %4 = load i32, i32* %flag, align 8, !dbg !8522
  %and = and i32 %4, 256, !dbg !8523
  %tobool = icmp ne i32 %and, 0, !dbg !8523
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8524

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8525
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %5, i32 0, i32 34, !dbg !8526
  %6 = load i8, i8* %sculpt_tool, align 8, !dbg !8526
  %conv = zext i8 %6 to i32, !dbg !8525
  %cmp = icmp eq i32 %conv, 5, !dbg !8527
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false4, !dbg !8528

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8529
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 28, !dbg !8530
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8530
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 22, !dbg !8531
  %9 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !8531
  %scene = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %9, i32 0, i32 0, !dbg !8532
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8532
  %11 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8533
  %call2 = call i32 @BKE_brush_use_size_pressure(%struct.Scene* %10, %struct.Brush* %11), !dbg !8534
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8534
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !8535

lor.lhs.false4:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8536
  %flag5 = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 16, !dbg !8537
  %13 = load i32, i32* %flag5, align 8, !dbg !8537
  %and6 = and i32 %13, 8388608, !dbg !8538
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8538
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8539

if.then:                                          ; preds = %lor.lhs.false4, %land.lhs.true, %entry
  %14 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8540
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8542
  call void @paint_mesh_restore_co(%struct.Sculpt* %14, %struct.Object* %15), !dbg !8543
  br label %if.end, !dbg !8544

if.end:                                           ; preds = %if.then, %lor.lhs.false4
  ret void, !dbg !8545
}

declare dso_local void @BKE_pbvh_bmesh_detail_size_set(%struct.PBVH*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_stroke_dynamic_topology(%struct.SculptSession* %ss, %struct.Brush* %brush) #0 !dbg !8546 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8555
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 15, !dbg !8556
  %1 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !8556
  %call = call i32 @BKE_pbvh_type(%struct.PBVH* %1), !dbg !8557
  %cmp = icmp eq i32 %call, 2, !dbg !8558
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8559

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8560
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !8561
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8561
  %tobool = icmp ne %struct.StrokeCache* %3, null, !dbg !8560
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true3, !dbg !8562

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !8563
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !8564
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !8564
  %alt_smooth = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 48, !dbg !8565
  %6 = load i8, i8* %alt_smooth, align 8, !dbg !8565
  %tobool2 = icmp ne i8 %6, 0, !dbg !8563
  br i1 %tobool2, label %land.end, label %land.lhs.true3, !dbg !8566

land.lhs.true3:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8567
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %7, i32 0, i32 16, !dbg !8568
  %8 = load i32, i32* %flag, align 8, !dbg !8568
  %and = and i32 %8, 256, !dbg !8569
  %tobool4 = icmp ne i32 %and, 0, !dbg !8569
  br i1 %tobool4, label %land.end, label %land.lhs.true5, !dbg !8570

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %9 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8571
  %flag6 = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 16, !dbg !8572
  %10 = load i32, i32* %flag6, align 8, !dbg !8572
  %and7 = and i32 %10, 8388608, !dbg !8573
  %tobool8 = icmp ne i32 %and7, 0, !dbg !8573
  br i1 %tobool8, label %land.end, label %land.rhs, !dbg !8574

land.rhs:                                         ; preds = %land.lhs.true5
  %11 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 34, !dbg !8575
  %12 = load i8, i8* %sculpt_tool, align 8, !dbg !8575
  %conv = zext i8 %12 to i32, !dbg !8575
  %cmp9 = icmp eq i32 %conv, 5, !dbg !8575
  br i1 %cmp9, label %lor.end, label %lor.lhs.false11, !dbg !8575

lor.lhs.false11:                                  ; preds = %land.rhs
  %13 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool12 = getelementptr inbounds %struct.Brush, %struct.Brush* %13, i32 0, i32 34, !dbg !8575
  %14 = load i8, i8* %sculpt_tool12, align 8, !dbg !8575
  %conv13 = zext i8 %14 to i32, !dbg !8575
  %cmp14 = icmp eq i32 %conv13, 14, !dbg !8575
  br i1 %cmp14, label %lor.end, label %lor.lhs.false16, !dbg !8575

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %15 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool17 = getelementptr inbounds %struct.Brush, %struct.Brush* %15, i32 0, i32 34, !dbg !8575
  %16 = load i8, i8* %sculpt_tool17, align 8, !dbg !8575
  %conv18 = zext i8 %16 to i32, !dbg !8575
  %cmp19 = icmp eq i32 %conv18, 12, !dbg !8575
  br i1 %cmp19, label %lor.end, label %lor.lhs.false21, !dbg !8575

lor.lhs.false21:                                  ; preds = %lor.lhs.false16
  %17 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool22 = getelementptr inbounds %struct.Brush, %struct.Brush* %17, i32 0, i32 34, !dbg !8575
  %18 = load i8, i8* %sculpt_tool22, align 8, !dbg !8575
  %conv23 = zext i8 %18 to i32, !dbg !8575
  %cmp24 = icmp eq i32 %conv23, 6, !dbg !8575
  br i1 %cmp24, label %lor.end, label %lor.lhs.false26, !dbg !8575

lor.lhs.false26:                                  ; preds = %lor.lhs.false21
  %19 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool27 = getelementptr inbounds %struct.Brush, %struct.Brush* %19, i32 0, i32 34, !dbg !8575
  %20 = load i8, i8* %sculpt_tool27, align 8, !dbg !8575
  %conv28 = zext i8 %20 to i32, !dbg !8575
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !8575
  br i1 %cmp29, label %lor.end, label %lor.rhs, !dbg !8575

lor.rhs:                                          ; preds = %lor.lhs.false26
  %21 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8575
  %sculpt_tool31 = getelementptr inbounds %struct.Brush, %struct.Brush* %21, i32 0, i32 34, !dbg !8575
  %22 = load i8, i8* %sculpt_tool31, align 8, !dbg !8575
  %conv32 = zext i8 %22 to i32, !dbg !8575
  %cmp33 = icmp eq i32 %conv32, 19, !dbg !8575
  br label %lor.end, !dbg !8575

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false26, %lor.lhs.false21, %lor.lhs.false16, %lor.lhs.false11, %land.rhs
  %23 = phi i1 [ true, %lor.lhs.false26 ], [ true, %lor.lhs.false21 ], [ true, %lor.lhs.false16 ], [ true, %lor.lhs.false11 ], [ true, %land.rhs ], [ %cmp33, %lor.rhs ]
  %lnot = xor i1 %23, true, !dbg !8576
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true5, %land.lhs.true3, %lor.lhs.false, %entry
  %24 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true3 ], [ false, %lor.lhs.false ], [ false, %entry ], [ %lnot, %lor.end ], !dbg !8577
  %land.ext = zext i1 %24 to i32, !dbg !8574
  ret i32 %land.ext, !dbg !8578
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_symmetrical_brush_actions(%struct.Sculpt* %sd, %struct.Object* %ob, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %action, %struct.UnifiedPaintSettings* %ups) #0 !dbg !8579 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %action.addr = alloca void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, align 8
  %ups.addr = alloca %struct.UnifiedPaintSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %symm = alloca i8, align 1
  %i = alloca i32, align 4
  %feather = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %action, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store %struct.UnifiedPaintSettings* %ups, %struct.UnifiedPaintSettings** %ups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !8594, metadata !DIExpression()), !dbg !8595
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8596
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !8597
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !8598
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !8595
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !8599, metadata !DIExpression()), !dbg !8600
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8601
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !8602
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8602
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !8600
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !8603, metadata !DIExpression()), !dbg !8604
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8605
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !8606
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !8606
  store %struct.StrokeCache* %4, %struct.StrokeCache** %cache, align 8, !dbg !8604
  call void @llvm.dbg.declare(metadata i8* %symm, metadata !8607, metadata !DIExpression()), !dbg !8608
  %5 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8609
  %paint2 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %5, i32 0, i32 0, !dbg !8610
  %symmetry_flags = getelementptr inbounds %struct.Paint, %struct.Paint* %paint2, i32 0, i32 6, !dbg !8611
  %6 = load i32, i32* %symmetry_flags, align 4, !dbg !8611
  %and = and i32 %6, 7, !dbg !8612
  %conv = trunc i32 %and to i8, !dbg !8609
  store i8 %conv, i8* %symm, align 1, !dbg !8608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8613, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.declare(metadata float* %feather, metadata !8615, metadata !DIExpression()), !dbg !8616
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8617
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8618
  %cache3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !8619
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache3, align 8, !dbg !8619
  %call4 = call float @calc_symmetry_feather(%struct.Sculpt* %7, %struct.StrokeCache* %9), !dbg !8620
  store float %call4, float* %feather, align 4, !dbg !8616
  %10 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8621
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8622
  %12 = load float, float* %feather, align 4, !dbg !8623
  %13 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !8624
  %call5 = call float @brush_strength(%struct.Sculpt* %10, %struct.StrokeCache* %11, float %12, %struct.UnifiedPaintSettings* %13), !dbg !8625
  %14 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8626
  %bstrength = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %14, i32 0, i32 19, !dbg !8627
  store float %call5, float* %bstrength, align 8, !dbg !8628
  %15 = load i8, i8* %symm, align 1, !dbg !8629
  %conv6 = zext i8 %15 to i32, !dbg !8629
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8630
  %symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 30, !dbg !8631
  store i32 %conv6, i32* %symmetry, align 4, !dbg !8632
  store i32 0, i32* %i, align 4, !dbg !8633
  br label %for.cond, !dbg !8635

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %i, align 4, !dbg !8636
  %18 = load i8, i8* %symm, align 1, !dbg !8638
  %conv7 = zext i8 %18 to i32, !dbg !8638
  %cmp = icmp sle i32 %17, %conv7, !dbg !8639
  br i1 %cmp, label %for.body, label %for.end, !dbg !8640

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !8641
  %cmp9 = icmp eq i32 %19, 0, !dbg !8644
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !8645

lor.lhs.false:                                    ; preds = %for.body
  %20 = load i8, i8* %symm, align 1, !dbg !8646
  %conv11 = zext i8 %20 to i32, !dbg !8646
  %21 = load i32, i32* %i, align 4, !dbg !8647
  %and12 = and i32 %conv11, %21, !dbg !8648
  %tobool = icmp ne i32 %and12, 0, !dbg !8648
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8649

land.lhs.true:                                    ; preds = %lor.lhs.false
  %22 = load i8, i8* %symm, align 1, !dbg !8650
  %conv13 = zext i8 %22 to i32, !dbg !8650
  %cmp14 = icmp ne i32 %conv13, 5, !dbg !8651
  br i1 %cmp14, label %land.lhs.true19, label %lor.lhs.false16, !dbg !8652

lor.lhs.false16:                                  ; preds = %land.lhs.true
  %23 = load i32, i32* %i, align 4, !dbg !8653
  %cmp17 = icmp ne i32 %23, 3, !dbg !8654
  br i1 %cmp17, label %land.lhs.true19, label %if.end, !dbg !8655

land.lhs.true19:                                  ; preds = %lor.lhs.false16, %land.lhs.true
  %24 = load i8, i8* %symm, align 1, !dbg !8656
  %conv20 = zext i8 %24 to i32, !dbg !8656
  %cmp21 = icmp ne i32 %conv20, 6, !dbg !8657
  br i1 %cmp21, label %if.then, label %lor.lhs.false23, !dbg !8658

lor.lhs.false23:                                  ; preds = %land.lhs.true19
  %25 = load i32, i32* %i, align 4, !dbg !8659
  %cmp24 = icmp ne i32 %25, 3, !dbg !8660
  br i1 %cmp24, label %land.lhs.true26, label %if.end, !dbg !8661

land.lhs.true26:                                  ; preds = %lor.lhs.false23
  %26 = load i32, i32* %i, align 4, !dbg !8662
  %cmp27 = icmp ne i32 %26, 5, !dbg !8663
  br i1 %cmp27, label %if.then, label %if.end, !dbg !8664

if.then:                                          ; preds = %land.lhs.true26, %land.lhs.true19, %for.body
  %27 = load i32, i32* %i, align 4, !dbg !8665
  %28 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8667
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %28, i32 0, i32 31, !dbg !8668
  store i32 %27, i32* %mirror_symmetry_pass, align 8, !dbg !8669
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8670
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 38, !dbg !8671
  store i32 0, i32* %radial_symmetry_pass, align 8, !dbg !8672
  %30 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8673
  %31 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8674
  %32 = load i32, i32* %i, align 4, !dbg !8675
  %conv29 = trunc i32 %32 to i8, !dbg !8675
  %33 = load float, float* %feather, align 4, !dbg !8676
  call void @calc_brushdata_symm(%struct.Sculpt* %30, %struct.StrokeCache* %31, i8 zeroext %conv29, i8 zeroext 0, float 0.000000e+00, float %33), !dbg !8677
  %34 = load void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8, !dbg !8678
  %35 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8679
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8680
  %37 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8681
  call void %34(%struct.Sculpt* %35, %struct.Object* %36, %struct.Brush* %37), !dbg !8678
  %38 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8682
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8683
  %40 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8684
  %41 = load void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8, !dbg !8685
  %42 = load i32, i32* %i, align 4, !dbg !8686
  %conv30 = trunc i32 %42 to i8, !dbg !8686
  %43 = load float, float* %feather, align 4, !dbg !8687
  call void @do_radial_symmetry(%struct.Sculpt* %38, %struct.Object* %39, %struct.Brush* %40, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %41, i8 zeroext %conv30, i32 88, float %43), !dbg !8688
  %44 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8689
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8690
  %46 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8691
  %47 = load void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8, !dbg !8692
  %48 = load i32, i32* %i, align 4, !dbg !8693
  %conv31 = trunc i32 %48 to i8, !dbg !8693
  %49 = load float, float* %feather, align 4, !dbg !8694
  call void @do_radial_symmetry(%struct.Sculpt* %44, %struct.Object* %45, %struct.Brush* %46, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %47, i8 zeroext %conv31, i32 89, float %49), !dbg !8695
  %50 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8696
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8697
  %52 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !8698
  %53 = load void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8, !dbg !8699
  %54 = load i32, i32* %i, align 4, !dbg !8700
  %conv32 = trunc i32 %54 to i8, !dbg !8700
  %55 = load float, float* %feather, align 4, !dbg !8701
  call void @do_radial_symmetry(%struct.Sculpt* %50, %struct.Object* %51, %struct.Brush* %52, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %53, i8 zeroext %conv32, i32 90, float %55), !dbg !8702
  br label %if.end, !dbg !8703

if.end:                                           ; preds = %if.then, %land.lhs.true26, %lor.lhs.false23, %lor.lhs.false16, %lor.lhs.false
  br label %for.inc, !dbg !8704

for.inc:                                          ; preds = %if.end
  %56 = load i32, i32* %i, align 4, !dbg !8705
  %inc = add nsw i32 %56, 1, !dbg !8705
  store i32 %inc, i32* %i, align 4, !dbg !8705
  br label %for.cond, !dbg !8706, !llvm.loop !8707

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8709
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_topology_update(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.Brush* %brush) #0 !dbg !8710 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %data = alloca %struct.SculptSearchSphereData, align 8
  %nodes = alloca %struct.PBVHNode**, align 8
  %radius = alloca float, align 4
  %n = alloca i32, align 4
  %totnode = alloca i32, align 4
  %mode = alloca i32, align 4
  %location = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8719
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !8720
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8720
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !8718
  call void @llvm.dbg.declare(metadata %struct.SculptSearchSphereData* %data, metadata !8721, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !8730, metadata !DIExpression()), !dbg !8731
  store %struct.PBVHNode** null, %struct.PBVHNode*** %nodes, align 8, !dbg !8731
  call void @llvm.dbg.declare(metadata float* %radius, metadata !8732, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !8736, metadata !DIExpression()), !dbg !8737
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8738
  %ss1 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 1, !dbg !8739
  store %struct.SculptSession* %2, %struct.SculptSession** %ss1, align 8, !dbg !8740
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8741
  %sd2 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 0, !dbg !8742
  store %struct.Sculpt* %3, %struct.Sculpt** %sd2, align 8, !dbg !8743
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8744
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !8745
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8745
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 11, !dbg !8746
  %6 = load float, float* %radius3, align 8, !dbg !8746
  %mul = fmul float %6, 1.250000e+00, !dbg !8747
  store float %mul, float* %radius, align 4, !dbg !8748
  %7 = load float, float* %radius, align 4, !dbg !8749
  %8 = load float, float* %radius, align 4, !dbg !8750
  %mul4 = fmul float %7, %8, !dbg !8751
  %radius_squared = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 2, !dbg !8752
  store float %mul4, float* %radius_squared, align 8, !dbg !8753
  %9 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8754
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 34, !dbg !8754
  %10 = load i8, i8* %sculpt_tool, align 8, !dbg !8754
  %conv = zext i8 %10 to i32, !dbg !8754
  %cmp = icmp eq i32 %conv, 5, !dbg !8754
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !8754

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8754
  %sculpt_tool6 = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 34, !dbg !8754
  %12 = load i8, i8* %sculpt_tool6, align 8, !dbg !8754
  %conv7 = zext i8 %12 to i32, !dbg !8754
  %cmp8 = icmp eq i32 %conv7, 14, !dbg !8754
  br i1 %cmp8, label %cond.true, label %lor.lhs.false10, !dbg !8754

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %13 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8754
  %sculpt_tool11 = getelementptr inbounds %struct.Brush, %struct.Brush* %13, i32 0, i32 34, !dbg !8754
  %14 = load i8, i8* %sculpt_tool11, align 8, !dbg !8754
  %conv12 = zext i8 %14 to i32, !dbg !8754
  %cmp13 = icmp eq i32 %conv12, 12, !dbg !8754
  br i1 %cmp13, label %cond.true, label %lor.lhs.false15, !dbg !8754

lor.lhs.false15:                                  ; preds = %lor.lhs.false10
  %15 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8754
  %sculpt_tool16 = getelementptr inbounds %struct.Brush, %struct.Brush* %15, i32 0, i32 34, !dbg !8754
  %16 = load i8, i8* %sculpt_tool16, align 8, !dbg !8754
  %conv17 = zext i8 %16 to i32, !dbg !8754
  %cmp18 = icmp eq i32 %conv17, 6, !dbg !8754
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8754

cond.true:                                        ; preds = %lor.lhs.false15, %lor.lhs.false10, %lor.lhs.false, %entry
  br label %cond.end, !dbg !8754

cond.false:                                       ; preds = %lor.lhs.false15
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8755
  %cache20 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !8756
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache20, align 8, !dbg !8756
  %original = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 41, !dbg !8757
  %19 = load i8, i8* %original, align 4, !dbg !8757
  %conv21 = zext i8 %19 to i32, !dbg !8755
  br label %cond.end, !dbg !8754

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv21, %cond.false ], !dbg !8754
  %conv22 = trunc i32 %cond to i8, !dbg !8754
  %original23 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 3, !dbg !8758
  store i8 %conv22, i8* %original23, align 4, !dbg !8759
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8760
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 15, !dbg !8761
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !8761
  %22 = bitcast %struct.SculptSearchSphereData* %data to i8*, !dbg !8762
  call void @BKE_pbvh_search_gather(%struct.PBVH* %21, i8 (%struct.PBVHNode*, i8*)* @sculpt_search_sphere_cb, i8* %22, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !8763
  %23 = load i32, i32* %totnode, align 4, !dbg !8764
  %tobool = icmp ne i32 %23, 0, !dbg !8764
  br i1 %tobool, label %if.then, label %if.end78, !dbg !8766

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8767, metadata !DIExpression()), !dbg !8770
  store i32 0, i32* %mode, align 4, !dbg !8770
  call void @llvm.dbg.declare(metadata [3 x float]* %location, metadata !8771, metadata !DIExpression()), !dbg !8772
  %24 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8773
  %flags = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %24, i32 0, i32 1, !dbg !8775
  %25 = load i32, i32* %flags, align 8, !dbg !8775
  %and = and i32 %25, 4096, !dbg !8776
  %tobool24 = icmp ne i32 %and, 0, !dbg !8776
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !8777

if.then25:                                        ; preds = %if.then
  %26 = load i32, i32* %mode, align 4, !dbg !8778
  %or = or i32 %26, 1, !dbg !8778
  store i32 %or, i32* %mode, align 4, !dbg !8778
  br label %if.end, !dbg !8779

if.end:                                           ; preds = %if.then25, %if.then
  %27 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8780
  %flags26 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %27, i32 0, i32 1, !dbg !8782
  %28 = load i32, i32* %flags26, align 8, !dbg !8782
  %and27 = and i32 %28, 2048, !dbg !8783
  %tobool28 = icmp ne i32 %and27, 0, !dbg !8783
  br i1 %tobool28, label %if.then34, label %lor.lhs.false29, !dbg !8784

lor.lhs.false29:                                  ; preds = %if.end
  %29 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8785
  %sculpt_tool30 = getelementptr inbounds %struct.Brush, %struct.Brush* %29, i32 0, i32 34, !dbg !8786
  %30 = load i8, i8* %sculpt_tool30, align 8, !dbg !8786
  %conv31 = zext i8 %30 to i32, !dbg !8785
  %cmp32 = icmp eq i32 %conv31, 15, !dbg !8787
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !8788

if.then34:                                        ; preds = %lor.lhs.false29, %if.end
  %31 = load i32, i32* %mode, align 4, !dbg !8789
  %or35 = or i32 %31, 2, !dbg !8789
  store i32 %or35, i32* %mode, align 4, !dbg !8789
  br label %if.end36, !dbg !8791

if.end36:                                         ; preds = %if.then34, %lor.lhs.false29
  store i32 0, i32* %n, align 4, !dbg !8792
  br label %for.cond, !dbg !8794

for.cond:                                         ; preds = %for.inc, %if.end36
  %32 = load i32, i32* %n, align 4, !dbg !8795
  %33 = load i32, i32* %totnode, align 4, !dbg !8797
  %cmp37 = icmp slt i32 %32, %33, !dbg !8798
  br i1 %cmp37, label %for.body, label %for.end, !dbg !8799

for.body:                                         ; preds = %for.cond
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8800
  %35 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8802
  %36 = load i32, i32* %n, align 4, !dbg !8803
  %idxprom = sext i32 %36 to i64, !dbg !8802
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %35, i64 %idxprom, !dbg !8802
  %37 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !8802
  %38 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8804
  %sculpt_tool39 = getelementptr inbounds %struct.Brush, %struct.Brush* %38, i32 0, i32 34, !dbg !8805
  %39 = load i8, i8* %sculpt_tool39, align 8, !dbg !8805
  %conv40 = zext i8 %39 to i32, !dbg !8804
  %cmp41 = icmp eq i32 %conv40, 19, !dbg !8806
  %40 = zext i1 %cmp41 to i64, !dbg !8804
  %cond43 = select i1 %cmp41, i32 2, i32 0, !dbg !8804
  %call = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %34, %struct.PBVHNode* %37, i32 %cond43), !dbg !8807
  %41 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8808
  %42 = load i32, i32* %n, align 4, !dbg !8809
  %idxprom44 = sext i32 %42 to i64, !dbg !8808
  %arrayidx45 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %41, i64 %idxprom44, !dbg !8808
  %43 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx45, align 8, !dbg !8808
  call void @BKE_pbvh_node_mark_update(%struct.PBVHNode* %43), !dbg !8810
  %44 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8811
  %pbvh46 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %44, i32 0, i32 15, !dbg !8813
  %45 = load %struct.PBVH*, %struct.PBVH** %pbvh46, align 8, !dbg !8813
  %call47 = call i32 @BKE_pbvh_type(%struct.PBVH* %45), !dbg !8814
  %cmp48 = icmp eq i32 %call47, 2, !dbg !8815
  br i1 %cmp48, label %if.then50, label %if.end55, !dbg !8816

if.then50:                                        ; preds = %for.body
  %46 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8817
  %47 = load i32, i32* %n, align 4, !dbg !8819
  %idxprom51 = sext i32 %47 to i64, !dbg !8817
  %arrayidx52 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %46, i64 %idxprom51, !dbg !8817
  %48 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx52, align 8, !dbg !8817
  call void @BKE_pbvh_node_mark_topology_update(%struct.PBVHNode* %48), !dbg !8820
  %49 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8821
  %50 = load i32, i32* %n, align 4, !dbg !8822
  %idxprom53 = sext i32 %50 to i64, !dbg !8821
  %arrayidx54 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %49, i64 %idxprom53, !dbg !8821
  %51 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx54, align 8, !dbg !8821
  call void @BKE_pbvh_bmesh_node_save_orig(%struct.PBVHNode* %51), !dbg !8823
  br label %if.end55, !dbg !8824

if.end55:                                         ; preds = %if.then50, %for.body
  br label %for.inc, !dbg !8825

for.inc:                                          ; preds = %if.end55
  %52 = load i32, i32* %n, align 4, !dbg !8826
  %inc = add nsw i32 %52, 1, !dbg !8826
  store i32 %inc, i32* %n, align 4, !dbg !8826
  br label %for.cond, !dbg !8827, !llvm.loop !8828

for.end:                                          ; preds = %for.cond
  %53 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8830
  %pbvh56 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %53, i32 0, i32 15, !dbg !8832
  %54 = load %struct.PBVH*, %struct.PBVH** %pbvh56, align 8, !dbg !8832
  %call57 = call i32 @BKE_pbvh_type(%struct.PBVH* %54), !dbg !8833
  %cmp58 = icmp eq i32 %call57, 2, !dbg !8834
  br i1 %cmp58, label %if.then60, label %if.end67, !dbg !8835

if.then60:                                        ; preds = %for.end
  %55 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8836
  %pbvh61 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %55, i32 0, i32 15, !dbg !8838
  %56 = load %struct.PBVH*, %struct.PBVH** %pbvh61, align 8, !dbg !8838
  %57 = load i32, i32* %mode, align 4, !dbg !8839
  %58 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8840
  %cache62 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %58, i32 0, i32 28, !dbg !8841
  %59 = load %struct.StrokeCache*, %struct.StrokeCache** %cache62, align 8, !dbg !8841
  %location63 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %59, i32 0, i32 14, !dbg !8842
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location63, i64 0, i64 0, !dbg !8840
  %60 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8843
  %cache64 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %60, i32 0, i32 28, !dbg !8844
  %61 = load %struct.StrokeCache*, %struct.StrokeCache** %cache64, align 8, !dbg !8844
  %radius65 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %61, i32 0, i32 11, !dbg !8845
  %62 = load float, float* %radius65, align 8, !dbg !8845
  %call66 = call zeroext i8 @BKE_pbvh_bmesh_update_topology(%struct.PBVH* %56, i32 %57, float* %arraydecay, float %62), !dbg !8846
  br label %if.end67, !dbg !8847

if.end67:                                         ; preds = %if.then60, %for.end
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8848
  %64 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8849
  %65 = bitcast %struct.PBVHNode** %64 to i8*, !dbg !8849
  call void %63(i8* %65), !dbg !8848
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !8850
  %66 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8851
  %cache69 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %66, i32 0, i32 28, !dbg !8852
  %67 = load %struct.StrokeCache*, %struct.StrokeCache** %cache69, align 8, !dbg !8852
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %67, i32 0, i32 13, !dbg !8853
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !8851
  call void @copy_v3_v3(float* %arraydecay68, float* %arraydecay70), !dbg !8854
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8855
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 47, !dbg !8856
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8855
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !8857
  call void @mul_m4_v3([4 x float]* %arraydecay71, float* %arraydecay72), !dbg !8858
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8859
  %sculpt73 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 2, !dbg !8860
  %70 = load %struct.SculptSession*, %struct.SculptSession** %sculpt73, align 8, !dbg !8860
  %average_stroke_accum = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %70, i32 0, i32 31, !dbg !8861
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %average_stroke_accum, i64 0, i64 0, !dbg !8859
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !8862
  call void @add_v3_v3(float* %arraydecay74, float* %arraydecay75), !dbg !8863
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8864
  %sculpt76 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 2, !dbg !8865
  %72 = load %struct.SculptSession*, %struct.SculptSession** %sculpt76, align 8, !dbg !8865
  %average_stroke_counter = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %72, i32 0, i32 32, !dbg !8866
  %73 = load i32, i32* %average_stroke_counter, align 4, !dbg !8867
  %inc77 = add nsw i32 %73, 1, !dbg !8867
  store i32 %inc77, i32* %average_stroke_counter, align 4, !dbg !8867
  br label %if.end78, !dbg !8868

if.end78:                                         ; preds = %if.end67, %cond.end
  ret void, !dbg !8869
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_brush_action(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.Brush* %brush) #0 !dbg !8870 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %data = alloca %struct.SculptSearchSphereData, align 8
  %nodes = alloca %struct.PBVHNode**, align 8
  %n = alloca i32, align 4
  %totnode = alloca i32, align 4
  %location = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !8871, metadata !DIExpression()), !dbg !8872
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8873, metadata !DIExpression()), !dbg !8874
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !8875, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !8877, metadata !DIExpression()), !dbg !8878
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8879
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !8880
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8880
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !8878
  call void @llvm.dbg.declare(metadata %struct.SculptSearchSphereData* %data, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !8883, metadata !DIExpression()), !dbg !8884
  store %struct.PBVHNode** null, %struct.PBVHNode*** %nodes, align 8, !dbg !8884
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8885, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !8887, metadata !DIExpression()), !dbg !8888
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8889
  %ss1 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 1, !dbg !8890
  store %struct.SculptSession* %2, %struct.SculptSession** %ss1, align 8, !dbg !8891
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8892
  %sd2 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 0, !dbg !8893
  store %struct.Sculpt* %3, %struct.Sculpt** %sd2, align 8, !dbg !8894
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8895
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !8896
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !8896
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 12, !dbg !8897
  %6 = load float, float* %radius_squared, align 4, !dbg !8897
  %radius_squared3 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 2, !dbg !8898
  store float %6, float* %radius_squared3, align 8, !dbg !8899
  %7 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8900
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %7, i32 0, i32 34, !dbg !8900
  %8 = load i8, i8* %sculpt_tool, align 8, !dbg !8900
  %conv = zext i8 %8 to i32, !dbg !8900
  %cmp = icmp eq i32 %conv, 5, !dbg !8900
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !8900

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8900
  %sculpt_tool5 = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 34, !dbg !8900
  %10 = load i8, i8* %sculpt_tool5, align 8, !dbg !8900
  %conv6 = zext i8 %10 to i32, !dbg !8900
  %cmp7 = icmp eq i32 %conv6, 14, !dbg !8900
  br i1 %cmp7, label %cond.true, label %lor.lhs.false9, !dbg !8900

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %11 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8900
  %sculpt_tool10 = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 34, !dbg !8900
  %12 = load i8, i8* %sculpt_tool10, align 8, !dbg !8900
  %conv11 = zext i8 %12 to i32, !dbg !8900
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !8900
  br i1 %cmp12, label %cond.true, label %lor.lhs.false14, !dbg !8900

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %13 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8900
  %sculpt_tool15 = getelementptr inbounds %struct.Brush, %struct.Brush* %13, i32 0, i32 34, !dbg !8900
  %14 = load i8, i8* %sculpt_tool15, align 8, !dbg !8900
  %conv16 = zext i8 %14 to i32, !dbg !8900
  %cmp17 = icmp eq i32 %conv16, 6, !dbg !8900
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !8900

cond.true:                                        ; preds = %lor.lhs.false14, %lor.lhs.false9, %lor.lhs.false, %entry
  br label %cond.end, !dbg !8900

cond.false:                                       ; preds = %lor.lhs.false14
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8901
  %cache19 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 28, !dbg !8902
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache19, align 8, !dbg !8902
  %original = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 41, !dbg !8903
  %17 = load i8, i8* %original, align 4, !dbg !8903
  %conv20 = zext i8 %17 to i32, !dbg !8901
  br label %cond.end, !dbg !8900

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv20, %cond.false ], !dbg !8900
  %conv21 = trunc i32 %cond to i8, !dbg !8900
  %original22 = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %data, i32 0, i32 3, !dbg !8904
  store i8 %conv21, i8* %original22, align 4, !dbg !8905
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !8906
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 15, !dbg !8907
  %19 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !8907
  %20 = bitcast %struct.SculptSearchSphereData* %data to i8*, !dbg !8908
  call void @BKE_pbvh_search_gather(%struct.PBVH* %19, i8 (%struct.PBVHNode*, i8*)* @sculpt_search_sphere_cb, i8* %20, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !8909
  %21 = load i32, i32* %totnode, align 4, !dbg !8910
  %tobool = icmp ne i32 %21, 0, !dbg !8910
  br i1 %tobool, label %if.then, label %if.end91, !dbg !8912

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [3 x float]* %location, metadata !8913, metadata !DIExpression()), !dbg !8915
  store i32 0, i32* %n, align 4, !dbg !8916
  br label %for.cond, !dbg !8918

for.cond:                                         ; preds = %for.inc, %if.then
  %22 = load i32, i32* %n, align 4, !dbg !8919
  %23 = load i32, i32* %totnode, align 4, !dbg !8921
  %cmp23 = icmp slt i32 %22, %23, !dbg !8922
  br i1 %cmp23, label %for.body, label %for.end, !dbg !8923

for.body:                                         ; preds = %for.cond
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8924
  %25 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8926
  %26 = load i32, i32* %n, align 4, !dbg !8927
  %idxprom = sext i32 %26 to i64, !dbg !8926
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %25, i64 %idxprom, !dbg !8926
  %27 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !8926
  %28 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8928
  %sculpt_tool25 = getelementptr inbounds %struct.Brush, %struct.Brush* %28, i32 0, i32 34, !dbg !8929
  %29 = load i8, i8* %sculpt_tool25, align 8, !dbg !8929
  %conv26 = zext i8 %29 to i32, !dbg !8928
  %cmp27 = icmp eq i32 %conv26, 19, !dbg !8930
  %30 = zext i1 %cmp27 to i64, !dbg !8928
  %cond29 = select i1 %cmp27, i32 2, i32 0, !dbg !8928
  %call = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %24, %struct.PBVHNode* %27, i32 %cond29), !dbg !8931
  %31 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8932
  %32 = load i32, i32* %n, align 4, !dbg !8933
  %idxprom30 = sext i32 %32 to i64, !dbg !8932
  %arrayidx31 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %31, i64 %idxprom30, !dbg !8932
  %33 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx31, align 8, !dbg !8932
  call void @BKE_pbvh_node_mark_update(%struct.PBVHNode* %33), !dbg !8934
  br label %for.inc, !dbg !8935

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %n, align 4, !dbg !8936
  %inc = add nsw i32 %34, 1, !dbg !8936
  store i32 %inc, i32* %n, align 4, !dbg !8936
  br label %for.cond, !dbg !8937, !llvm.loop !8938

for.end:                                          ; preds = %for.cond
  %35 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8940
  %call32 = call i32 @brush_needs_sculpt_normal(%struct.Brush* %35), !dbg !8942
  %tobool33 = icmp ne i32 %call32, 0, !dbg !8942
  br i1 %tobool33, label %if.then34, label %if.end, !dbg !8943

if.then34:                                        ; preds = %for.end
  %36 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8944
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8945
  %38 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8946
  %39 = load i32, i32* %totnode, align 4, !dbg !8947
  call void @update_sculpt_normal(%struct.Sculpt* %36, %struct.Object* %37, %struct.PBVHNode** %38, i32 %39), !dbg !8948
  br label %if.end, !dbg !8948

if.end:                                           ; preds = %if.then34, %for.end
  %40 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8949
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %40, i32 0, i32 3, !dbg !8951
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 20, !dbg !8952
  %41 = load i8, i8* %brush_map_mode, align 4, !dbg !8952
  %conv35 = zext i8 %41 to i32, !dbg !8949
  %cmp36 = icmp eq i32 %conv35, 3, !dbg !8953
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !8954

if.then38:                                        ; preds = %if.end
  %42 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8955
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8956
  call void @update_brush_local_mat(%struct.Sculpt* %42, %struct.Object* %43), !dbg !8957
  br label %if.end39, !dbg !8957

if.end39:                                         ; preds = %if.then38, %if.end
  %44 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !8958
  %sculpt_tool40 = getelementptr inbounds %struct.Brush, %struct.Brush* %44, i32 0, i32 34, !dbg !8959
  %45 = load i8, i8* %sculpt_tool40, align 8, !dbg !8959
  %conv41 = zext i8 %45 to i32, !dbg !8958
  switch i32 %conv41, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb42
    i32 16, label %sw.bb43
    i32 17, label %sw.bb44
    i32 3, label %sw.bb45
    i32 4, label %sw.bb46
    i32 5, label %sw.bb47
    i32 14, label %sw.bb48
    i32 13, label %sw.bb49
    i32 11, label %sw.bb50
    i32 12, label %sw.bb51
    i32 6, label %sw.bb52
    i32 7, label %sw.bb53
    i32 8, label %sw.bb54
    i32 18, label %sw.bb55
    i32 9, label %sw.bb56
    i32 10, label %sw.bb57
    i32 19, label %sw.bb58
  ], !dbg !8960

sw.bb:                                            ; preds = %if.end39
  %46 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8961
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8963
  %48 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8964
  %49 = load i32, i32* %totnode, align 4, !dbg !8965
  call void @do_draw_brush(%struct.Sculpt* %46, %struct.Object* %47, %struct.PBVHNode** %48, i32 %49), !dbg !8966
  br label %sw.epilog, !dbg !8967

sw.bb42:                                          ; preds = %if.end39
  %50 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8968
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8969
  %52 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8970
  %53 = load i32, i32* %totnode, align 4, !dbg !8971
  call void @do_smooth_brush(%struct.Sculpt* %50, %struct.Object* %51, %struct.PBVHNode** %52, i32 %53), !dbg !8972
  br label %sw.epilog, !dbg !8973

sw.bb43:                                          ; preds = %if.end39
  %54 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8974
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8975
  %56 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8976
  %57 = load i32, i32* %totnode, align 4, !dbg !8977
  call void @do_crease_brush(%struct.Sculpt* %54, %struct.Object* %55, %struct.PBVHNode** %56, i32 %57), !dbg !8978
  br label %sw.epilog, !dbg !8979

sw.bb44:                                          ; preds = %if.end39
  %58 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8980
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8981
  %60 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8982
  %61 = load i32, i32* %totnode, align 4, !dbg !8983
  call void @do_crease_brush(%struct.Sculpt* %58, %struct.Object* %59, %struct.PBVHNode** %60, i32 %61), !dbg !8984
  br label %sw.epilog, !dbg !8985

sw.bb45:                                          ; preds = %if.end39
  %62 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8986
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8987
  %64 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8988
  %65 = load i32, i32* %totnode, align 4, !dbg !8989
  call void @do_pinch_brush(%struct.Sculpt* %62, %struct.Object* %63, %struct.PBVHNode** %64, i32 %65), !dbg !8990
  br label %sw.epilog, !dbg !8991

sw.bb46:                                          ; preds = %if.end39
  %66 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8992
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8993
  %68 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !8994
  %69 = load i32, i32* %totnode, align 4, !dbg !8995
  call void @do_inflate_brush(%struct.Sculpt* %66, %struct.Object* %67, %struct.PBVHNode** %68, i32 %69), !dbg !8996
  br label %sw.epilog, !dbg !8997

sw.bb47:                                          ; preds = %if.end39
  %70 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !8998
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8999
  %72 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9000
  %73 = load i32, i32* %totnode, align 4, !dbg !9001
  call void @do_grab_brush(%struct.Sculpt* %70, %struct.Object* %71, %struct.PBVHNode** %72, i32 %73), !dbg !9002
  br label %sw.epilog, !dbg !9003

sw.bb48:                                          ; preds = %if.end39
  %74 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9004
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9005
  %76 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9006
  %77 = load i32, i32* %totnode, align 4, !dbg !9007
  call void @do_rotate_brush(%struct.Sculpt* %74, %struct.Object* %75, %struct.PBVHNode** %76, i32 %77), !dbg !9008
  br label %sw.epilog, !dbg !9009

sw.bb49:                                          ; preds = %if.end39
  %78 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9010
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9011
  %80 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9012
  %81 = load i32, i32* %totnode, align 4, !dbg !9013
  call void @do_snake_hook_brush(%struct.Sculpt* %78, %struct.Object* %79, %struct.PBVHNode** %80, i32 %81), !dbg !9014
  br label %sw.epilog, !dbg !9015

sw.bb50:                                          ; preds = %if.end39
  %82 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9016
  %83 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9017
  %84 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9018
  %85 = load i32, i32* %totnode, align 4, !dbg !9019
  call void @do_nudge_brush(%struct.Sculpt* %82, %struct.Object* %83, %struct.PBVHNode** %84, i32 %85), !dbg !9020
  br label %sw.epilog, !dbg !9021

sw.bb51:                                          ; preds = %if.end39
  %86 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9022
  %87 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9023
  %88 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9024
  %89 = load i32, i32* %totnode, align 4, !dbg !9025
  call void @do_thumb_brush(%struct.Sculpt* %86, %struct.Object* %87, %struct.PBVHNode** %88, i32 %89), !dbg !9026
  br label %sw.epilog, !dbg !9027

sw.bb52:                                          ; preds = %if.end39
  %90 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9028
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9029
  %92 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9030
  %93 = load i32, i32* %totnode, align 4, !dbg !9031
  call void @do_layer_brush(%struct.Sculpt* %90, %struct.Object* %91, %struct.PBVHNode** %92, i32 %93), !dbg !9032
  br label %sw.epilog, !dbg !9033

sw.bb53:                                          ; preds = %if.end39
  %94 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9034
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9035
  %96 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9036
  %97 = load i32, i32* %totnode, align 4, !dbg !9037
  call void @do_flatten_brush(%struct.Sculpt* %94, %struct.Object* %95, %struct.PBVHNode** %96, i32 %97), !dbg !9038
  br label %sw.epilog, !dbg !9039

sw.bb54:                                          ; preds = %if.end39
  %98 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9040
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9041
  %100 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9042
  %101 = load i32, i32* %totnode, align 4, !dbg !9043
  call void @do_clay_brush(%struct.Sculpt* %98, %struct.Object* %99, %struct.PBVHNode** %100, i32 %101), !dbg !9044
  br label %sw.epilog, !dbg !9045

sw.bb55:                                          ; preds = %if.end39
  %102 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9046
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9047
  %104 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9048
  %105 = load i32, i32* %totnode, align 4, !dbg !9049
  call void @do_clay_strips_brush(%struct.Sculpt* %102, %struct.Object* %103, %struct.PBVHNode** %104, i32 %105), !dbg !9050
  br label %sw.epilog, !dbg !9051

sw.bb56:                                          ; preds = %if.end39
  %106 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9052
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9053
  %108 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9054
  %109 = load i32, i32* %totnode, align 4, !dbg !9055
  call void @do_fill_brush(%struct.Sculpt* %106, %struct.Object* %107, %struct.PBVHNode** %108, i32 %109), !dbg !9056
  br label %sw.epilog, !dbg !9057

sw.bb57:                                          ; preds = %if.end39
  %110 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9058
  %111 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9059
  %112 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9060
  %113 = load i32, i32* %totnode, align 4, !dbg !9061
  call void @do_scrape_brush(%struct.Sculpt* %110, %struct.Object* %111, %struct.PBVHNode** %112, i32 %113), !dbg !9062
  br label %sw.epilog, !dbg !9063

sw.bb58:                                          ; preds = %if.end39
  %114 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9064
  %115 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9065
  %116 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9066
  %117 = load i32, i32* %totnode, align 4, !dbg !9067
  call void @do_mask_brush(%struct.Sculpt* %114, %struct.Object* %115, %struct.PBVHNode** %116, i32 %117), !dbg !9068
  br label %sw.epilog, !dbg !9069

sw.epilog:                                        ; preds = %if.end39, %sw.bb58, %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb42, %sw.bb
  %118 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9070
  %sculpt_tool59 = getelementptr inbounds %struct.Brush, %struct.Brush* %118, i32 0, i32 34, !dbg !9070
  %119 = load i8, i8* %sculpt_tool59, align 8, !dbg !9070
  %conv60 = zext i8 %119 to i32, !dbg !9070
  %cmp61 = icmp eq i32 %conv60, 2, !dbg !9070
  br i1 %cmp61, label %if.end77, label %lor.lhs.false63, !dbg !9070

lor.lhs.false63:                                  ; preds = %sw.epilog
  %120 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9070
  %sculpt_tool64 = getelementptr inbounds %struct.Brush, %struct.Brush* %120, i32 0, i32 34, !dbg !9070
  %121 = load i8, i8* %sculpt_tool64, align 8, !dbg !9070
  %conv65 = zext i8 %121 to i32, !dbg !9070
  %cmp66 = icmp eq i32 %conv65, 19, !dbg !9070
  br i1 %cmp66, label %if.end77, label %land.lhs.true, !dbg !9072

land.lhs.true:                                    ; preds = %lor.lhs.false63
  %122 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9073
  %autosmooth_factor = getelementptr inbounds %struct.Brush, %struct.Brush* %122, i32 0, i32 38, !dbg !9074
  %123 = load float, float* %autosmooth_factor, align 4, !dbg !9074
  %cmp68 = fcmp ogt float %123, 0.000000e+00, !dbg !9075
  br i1 %cmp68, label %if.then70, label %if.end77, !dbg !9076

if.then70:                                        ; preds = %land.lhs.true
  %124 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9077
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %124, i32 0, i32 16, !dbg !9080
  %125 = load i32, i32* %flag, align 8, !dbg !9080
  %and = and i32 %125, 16777216, !dbg !9081
  %tobool71 = icmp ne i32 %and, 0, !dbg !9081
  br i1 %tobool71, label %if.then72, label %if.else, !dbg !9082

if.then72:                                        ; preds = %if.then70
  %126 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9083
  %127 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9085
  %128 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9086
  %129 = load i32, i32* %totnode, align 4, !dbg !9087
  %130 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9088
  %autosmooth_factor73 = getelementptr inbounds %struct.Brush, %struct.Brush* %130, i32 0, i32 38, !dbg !9089
  %131 = load float, float* %autosmooth_factor73, align 4, !dbg !9089
  %132 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9090
  %cache74 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %132, i32 0, i32 28, !dbg !9091
  %133 = load %struct.StrokeCache*, %struct.StrokeCache** %cache74, align 8, !dbg !9091
  %pressure = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %133, i32 0, i32 17, !dbg !9092
  %134 = load float, float* %pressure, align 4, !dbg !9092
  %sub = fsub float 1.000000e+00, %134, !dbg !9093
  %mul = fmul float %131, %sub, !dbg !9094
  call void @smooth(%struct.Sculpt* %126, %struct.Object* %127, %struct.PBVHNode** %128, i32 %129, float %mul, i32 0), !dbg !9095
  br label %if.end76, !dbg !9096

if.else:                                          ; preds = %if.then70
  %135 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9097
  %136 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9099
  %137 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9100
  %138 = load i32, i32* %totnode, align 4, !dbg !9101
  %139 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9102
  %autosmooth_factor75 = getelementptr inbounds %struct.Brush, %struct.Brush* %139, i32 0, i32 38, !dbg !9103
  %140 = load float, float* %autosmooth_factor75, align 4, !dbg !9103
  call void @smooth(%struct.Sculpt* %135, %struct.Object* %136, %struct.PBVHNode** %137, i32 %138, float %140, i32 0), !dbg !9104
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then72
  br label %if.end77, !dbg !9105

if.end77:                                         ; preds = %if.end76, %land.lhs.true, %lor.lhs.false63, %sw.epilog
  %141 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9106
  %cache78 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %141, i32 0, i32 28, !dbg !9108
  %142 = load %struct.StrokeCache*, %struct.StrokeCache** %cache78, align 8, !dbg !9108
  %supports_gravity = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %142, i32 0, i32 50, !dbg !9109
  %143 = load i8, i8* %supports_gravity, align 8, !dbg !9109
  %tobool79 = icmp ne i8 %143, 0, !dbg !9106
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !9110

if.then80:                                        ; preds = %if.end77
  %144 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9111
  %145 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9112
  %146 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9113
  %147 = load i32, i32* %totnode, align 4, !dbg !9114
  %148 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9115
  %gravity_factor = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %148, i32 0, i32 5, !dbg !9116
  %149 = load float, float* %gravity_factor, align 8, !dbg !9116
  call void @do_gravity(%struct.Sculpt* %144, %struct.Object* %145, %struct.PBVHNode** %146, i32 %147, float %149), !dbg !9117
  br label %if.end81, !dbg !9117

if.end81:                                         ; preds = %if.then80, %if.end77
  %150 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9118
  %151 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9119
  %152 = bitcast %struct.PBVHNode** %151 to i8*, !dbg !9119
  call void %150(i8* %152), !dbg !9118
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !9120
  %153 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9121
  %cache82 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %153, i32 0, i32 28, !dbg !9122
  %154 = load %struct.StrokeCache*, %struct.StrokeCache** %cache82, align 8, !dbg !9122
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %154, i32 0, i32 13, !dbg !9123
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !9121
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay83), !dbg !9124
  %155 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9125
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %155, i32 0, i32 47, !dbg !9126
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9125
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !9127
  call void @mul_m4_v3([4 x float]* %arraydecay84, float* %arraydecay85), !dbg !9128
  %156 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9129
  %sculpt86 = getelementptr inbounds %struct.Object, %struct.Object* %156, i32 0, i32 2, !dbg !9130
  %157 = load %struct.SculptSession*, %struct.SculptSession** %sculpt86, align 8, !dbg !9130
  %average_stroke_accum = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %157, i32 0, i32 31, !dbg !9131
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %average_stroke_accum, i64 0, i64 0, !dbg !9129
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !9132
  call void @add_v3_v3(float* %arraydecay87, float* %arraydecay88), !dbg !9133
  %158 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9134
  %sculpt89 = getelementptr inbounds %struct.Object, %struct.Object* %158, i32 0, i32 2, !dbg !9135
  %159 = load %struct.SculptSession*, %struct.SculptSession** %sculpt89, align 8, !dbg !9135
  %average_stroke_counter = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %159, i32 0, i32 32, !dbg !9136
  %160 = load i32, i32* %average_stroke_counter, align 4, !dbg !9137
  %inc90 = add nsw i32 %160, 1, !dbg !9137
  store i32 %inc90, i32* %average_stroke_counter, align 4, !dbg !9137
  br label %if.end91, !dbg !9138

if.end91:                                         ; preds = %if.end81, %cond.end
  ret void, !dbg !9139
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_combine_proxies(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !9140 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %nodes = alloca %struct.PBVHNode**, align 8
  %totnode = alloca i32, align 4
  %n = alloca i32, align 4
  %use_orco = alloca i8, align 1
  %vd = alloca %struct.PBVHVertexIter, align 8
  %proxies = alloca %struct.PBVHProxyNode*, align 8
  %proxy_count = alloca i32, align 4
  %orco = alloca [3 x float]*, align 8
  %val = alloca [3 x float], align 4
  %p = alloca i32, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !9141, metadata !DIExpression()), !dbg !9142
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9145, metadata !DIExpression()), !dbg !9146
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9147
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9148
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9148
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9146
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !9149, metadata !DIExpression()), !dbg !9150
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9151
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !9152
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !9153
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !9150
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9158, metadata !DIExpression()), !dbg !9159
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9160
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 15, !dbg !9161
  %4 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9161
  call void @BKE_pbvh_gather_proxies(%struct.PBVH* %4, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !9162
  %5 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9163
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %5, i32 0, i32 34, !dbg !9163
  %6 = load i8, i8* %sculpt_tool, align 8, !dbg !9163
  %conv = zext i8 %6 to i32, !dbg !9163
  %cmp = icmp eq i32 %conv, 2, !dbg !9163
  br i1 %cmp, label %lor.lhs.false6, label %lor.lhs.false, !dbg !9163

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9163
  %sculpt_tool2 = getelementptr inbounds %struct.Brush, %struct.Brush* %7, i32 0, i32 34, !dbg !9163
  %8 = load i8, i8* %sculpt_tool2, align 8, !dbg !9163
  %conv3 = zext i8 %8 to i32, !dbg !9163
  %cmp4 = icmp eq i32 %conv3, 6, !dbg !9163
  br i1 %cmp4, label %lor.lhs.false6, label %if.then, !dbg !9165

lor.lhs.false6:                                   ; preds = %lor.lhs.false, %entry
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9166
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 28, !dbg !9167
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9167
  %supports_gravity = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %10, i32 0, i32 50, !dbg !9168
  %11 = load i8, i8* %supports_gravity, align 8, !dbg !9168
  %conv7 = zext i8 %11 to i32, !dbg !9166
  %tobool = icmp ne i32 %conv7, 0, !dbg !9166
  br i1 %tobool, label %if.then, label %if.end224, !dbg !9169

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8* %use_orco, metadata !9170, metadata !DIExpression()), !dbg !9172
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9173
  %sculpt_tool8 = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 34, !dbg !9173
  %13 = load i8, i8* %sculpt_tool8, align 8, !dbg !9173
  %conv9 = zext i8 %13 to i32, !dbg !9173
  %cmp10 = icmp eq i32 %conv9, 5, !dbg !9173
  br i1 %cmp10, label %lor.end, label %lor.lhs.false12, !dbg !9173

lor.lhs.false12:                                  ; preds = %if.then
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9173
  %sculpt_tool13 = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 34, !dbg !9173
  %15 = load i8, i8* %sculpt_tool13, align 8, !dbg !9173
  %conv14 = zext i8 %15 to i32, !dbg !9173
  %cmp15 = icmp eq i32 %conv14, 14, !dbg !9173
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !9173

lor.rhs:                                          ; preds = %lor.lhs.false12
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9173
  %sculpt_tool17 = getelementptr inbounds %struct.Brush, %struct.Brush* %16, i32 0, i32 34, !dbg !9173
  %17 = load i8, i8* %sculpt_tool17, align 8, !dbg !9173
  %conv18 = zext i8 %17 to i32, !dbg !9173
  %cmp19 = icmp eq i32 %conv18, 12, !dbg !9173
  br label %lor.end, !dbg !9173

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false12, %if.then
  %18 = phi i1 [ true, %lor.lhs.false12 ], [ true, %if.then ], [ %cmp19, %lor.rhs ]
  %lor.ext = zext i1 %18 to i32, !dbg !9173
  %conv21 = trunc i32 %lor.ext to i8, !dbg !9173
  store i8 %conv21, i8* %use_orco, align 1, !dbg !9172
  store i32 0, i32* %n, align 4, !dbg !9174
  br label %for.cond, !dbg !9176

for.cond:                                         ; preds = %for.inc221, %lor.end
  %19 = load i32, i32* %n, align 4, !dbg !9177
  %20 = load i32, i32* %totnode, align 4, !dbg !9179
  %cmp22 = icmp slt i32 %19, %20, !dbg !9180
  br i1 %cmp22, label %for.body, label %for.end223, !dbg !9181

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !9182, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.declare(metadata %struct.PBVHProxyNode** %proxies, metadata !9220, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.declare(metadata i32* %proxy_count, metadata !9227, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.declare(metadata [3 x float]** %orco, metadata !9229, metadata !DIExpression()), !dbg !9230
  store [3 x float]* null, [3 x float]** %orco, align 8, !dbg !9230
  %21 = load i8, i8* %use_orco, align 1, !dbg !9231
  %conv24 = zext i8 %21 to i32, !dbg !9231
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !9231
  br i1 %tobool25, label %land.lhs.true, label %if.end, !dbg !9233

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9234
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 10, !dbg !9235
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9235
  %tobool26 = icmp ne %struct.BMesh* %23, null, !dbg !9234
  br i1 %tobool26, label %if.end, label %if.then27, !dbg !9236

if.then27:                                        ; preds = %land.lhs.true
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9237
  %25 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9238
  %26 = load i32, i32* %n, align 4, !dbg !9239
  %idxprom = sext i32 %26 to i64, !dbg !9238
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %25, i64 %idxprom, !dbg !9238
  %27 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !9238
  %call28 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %24, %struct.PBVHNode* %27, i32 0), !dbg !9240
  %co = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %call28, i32 0, i32 5, !dbg !9241
  %28 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !9241
  store [3 x float]* %28, [3 x float]** %orco, align 8, !dbg !9242
  br label %if.end, !dbg !9243

if.end:                                           ; preds = %if.then27, %land.lhs.true, %for.body
  %29 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9244
  %30 = load i32, i32* %n, align 4, !dbg !9245
  %idxprom29 = sext i32 %30 to i64, !dbg !9244
  %arrayidx30 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %29, i64 %idxprom29, !dbg !9244
  %31 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx30, align 8, !dbg !9244
  call void @BKE_pbvh_node_get_proxies(%struct.PBVHNode* %31, %struct.PBVHProxyNode** %proxies, i32* %proxy_count), !dbg !9246
  %32 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9247
  %pbvh31 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %32, i32 0, i32 15, !dbg !9247
  %33 = load %struct.PBVH*, %struct.PBVH** %pbvh31, align 8, !dbg !9247
  %34 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9247
  %35 = load i32, i32* %n, align 4, !dbg !9247
  %idxprom32 = sext i32 %35 to i64, !dbg !9247
  %arrayidx33 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %34, i64 %idxprom32, !dbg !9247
  %36 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx33, align 8, !dbg !9247
  call void @pbvh_vertex_iter_init(%struct.PBVH* %33, %struct.PBVHNode* %36, %struct.PBVHVertexIter* %vd, i32 1), !dbg !9247
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9248
  store i32 0, i32* %i, align 4, !dbg !9248
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9248
  store i32 0, i32* %g, align 8, !dbg !9248
  br label %for.cond34, !dbg !9248

for.cond34:                                       ; preds = %for.inc215, %if.end
  %g35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9250
  %37 = load i32, i32* %g35, align 8, !dbg !9250
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !9250
  %38 = load i32, i32* %totgrid, align 8, !dbg !9250
  %cmp36 = icmp slt i32 %37, %38, !dbg !9250
  br i1 %cmp36, label %for.body38, label %for.end218, !dbg !9248

for.body38:                                       ; preds = %for.cond34
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !9252
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !9252
  %tobool39 = icmp ne %struct.CCGElem** %39, null, !dbg !9252
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !9255

if.then40:                                        ; preds = %for.body38
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9256
  %40 = load i32, i32* %gridsize, align 4, !dbg !9256
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9256
  store i32 %40, i32* %width, align 4, !dbg !9256
  %gridsize41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9256
  %41 = load i32, i32* %gridsize41, align 4, !dbg !9256
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9256
  store i32 %41, i32* %height, align 8, !dbg !9256
  %grids42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !9256
  %42 = load %struct.CCGElem**, %struct.CCGElem*** %grids42, align 8, !dbg !9256
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !9256
  %43 = load i32*, i32** %grid_indices, align 8, !dbg !9256
  %g43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9256
  %44 = load i32, i32* %g43, align 8, !dbg !9256
  %idxprom44 = sext i32 %44 to i64, !dbg !9256
  %arrayidx45 = getelementptr inbounds i32, i32* %43, i64 %idxprom44, !dbg !9256
  %45 = load i32, i32* %arrayidx45, align 4, !dbg !9256
  %idxprom46 = sext i32 %45 to i64, !dbg !9256
  %arrayidx47 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %42, i64 %idxprom46, !dbg !9256
  %46 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx47, align 8, !dbg !9256
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9256
  store %struct.CCGElem* %46, %struct.CCGElem** %grid, align 8, !dbg !9256
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !9258
  %47 = load i32**, i32*** %grid_hidden, align 8, !dbg !9258
  %grid_indices48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !9258
  %48 = load i32*, i32** %grid_indices48, align 8, !dbg !9258
  %g49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9258
  %49 = load i32, i32* %g49, align 8, !dbg !9258
  %idxprom50 = sext i32 %49 to i64, !dbg !9258
  %arrayidx51 = getelementptr inbounds i32, i32* %48, i64 %idxprom50, !dbg !9258
  %50 = load i32, i32* %arrayidx51, align 4, !dbg !9258
  %idxprom52 = sext i32 %50 to i64, !dbg !9258
  %arrayidx53 = getelementptr inbounds i32*, i32** %47, i64 %idxprom52, !dbg !9258
  %51 = load i32*, i32** %arrayidx53, align 8, !dbg !9258
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9258
  store i32* %51, i32** %gh, align 8, !dbg !9258
  br label %if.end56, !dbg !9256

if.else:                                          ; preds = %for.body38
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !9260
  %52 = load i32, i32* %totvert, align 8, !dbg !9260
  %width54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9260
  store i32 %52, i32* %width54, align 4, !dbg !9260
  %height55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9260
  store i32 1, i32* %height55, align 8, !dbg !9260
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then40
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9262
  store i32 0, i32* %gy, align 8, !dbg !9262
  br label %for.cond57, !dbg !9262

for.cond57:                                       ; preds = %for.inc211, %if.end56
  %gy58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9264
  %53 = load i32, i32* %gy58, align 8, !dbg !9264
  %height59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9264
  %54 = load i32, i32* %height59, align 8, !dbg !9264
  %cmp60 = icmp slt i32 %53, %54, !dbg !9264
  br i1 %cmp60, label %for.body62, label %for.end214, !dbg !9262

for.body62:                                       ; preds = %for.cond57
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9266
  store i32 0, i32* %gx, align 4, !dbg !9266
  br label %for.cond63, !dbg !9266

for.cond63:                                       ; preds = %for.inc205, %for.body62
  %gx64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9269
  %55 = load i32, i32* %gx64, align 4, !dbg !9269
  %width65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9269
  %56 = load i32, i32* %width65, align 4, !dbg !9269
  %cmp66 = icmp slt i32 %55, %56, !dbg !9269
  br i1 %cmp66, label %for.body68, label %for.end210, !dbg !9266

for.body68:                                       ; preds = %for.cond63
  %grid69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9271
  %57 = load %struct.CCGElem*, %struct.CCGElem** %grid69, align 8, !dbg !9271
  %tobool70 = icmp ne %struct.CCGElem* %57, null, !dbg !9271
  br i1 %tobool70, label %if.then71, label %if.else106, !dbg !9274

if.then71:                                        ; preds = %for.body68
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9275
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !9275
  %grid72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9275
  %59 = load %struct.CCGElem*, %struct.CCGElem** %grid72, align 8, !dbg !9275
  %call73 = call float* @CCG_elem_co(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !9275
  %co74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9275
  store float* %call73, float** %co74, align 8, !dbg !9275
  %key75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9275
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key75, align 8, !dbg !9275
  %grid76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9275
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid76, align 8, !dbg !9275
  %call77 = call float* @CCG_elem_no(%struct.CCGKey* %60, %struct.CCGElem* %61), !dbg !9275
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !9275
  store float* %call77, float** %fno, align 8, !dbg !9275
  %key78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9275
  %62 = load %struct.CCGKey*, %struct.CCGKey** %key78, align 8, !dbg !9275
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %62, i32 0, i32 9, !dbg !9275
  %63 = load i32, i32* %has_mask, align 4, !dbg !9275
  %tobool79 = icmp ne i32 %63, 0, !dbg !9275
  br i1 %tobool79, label %cond.true, label %cond.false, !dbg !9275

cond.true:                                        ; preds = %if.then71
  %key80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9275
  %64 = load %struct.CCGKey*, %struct.CCGKey** %key80, align 8, !dbg !9275
  %grid81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9275
  %65 = load %struct.CCGElem*, %struct.CCGElem** %grid81, align 8, !dbg !9275
  %call82 = call float* @CCG_elem_mask(%struct.CCGKey* %64, %struct.CCGElem* %65), !dbg !9275
  br label %cond.end, !dbg !9275

cond.false:                                       ; preds = %if.then71
  br label %cond.end, !dbg !9275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call82, %cond.true ], [ null, %cond.false ], !dbg !9275
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9275
  store float* %cond, float** %mask, align 8, !dbg !9275
  %key83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9275
  %66 = load %struct.CCGKey*, %struct.CCGKey** %key83, align 8, !dbg !9275
  %grid84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9275
  %67 = load %struct.CCGElem*, %struct.CCGElem** %grid84, align 8, !dbg !9275
  %call85 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %66, %struct.CCGElem* %67), !dbg !9275
  %grid86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9275
  store %struct.CCGElem* %call85, %struct.CCGElem** %grid86, align 8, !dbg !9275
  %gh87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9277
  %68 = load i32*, i32** %gh87, align 8, !dbg !9277
  %tobool88 = icmp ne i32* %68, null, !dbg !9277
  br i1 %tobool88, label %if.then89, label %if.end105, !dbg !9275

if.then89:                                        ; preds = %cond.end
  %gh90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9279
  %69 = load i32*, i32** %gh90, align 8, !dbg !9279
  %gy91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9279
  %70 = load i32, i32* %gy91, align 8, !dbg !9279
  %gridsize92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9279
  %71 = load i32, i32* %gridsize92, align 4, !dbg !9279
  %mul = mul nsw i32 %70, %71, !dbg !9279
  %gx93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9279
  %72 = load i32, i32* %gx93, align 4, !dbg !9279
  %add = add nsw i32 %mul, %72, !dbg !9279
  %shr = ashr i32 %add, 5, !dbg !9279
  %idxprom94 = sext i32 %shr to i64, !dbg !9279
  %arrayidx95 = getelementptr inbounds i32, i32* %69, i64 %idxprom94, !dbg !9279
  %73 = load i32, i32* %arrayidx95, align 4, !dbg !9279
  %gy96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9279
  %74 = load i32, i32* %gy96, align 8, !dbg !9279
  %gridsize97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9279
  %75 = load i32, i32* %gridsize97, align 4, !dbg !9279
  %mul98 = mul nsw i32 %74, %75, !dbg !9279
  %gx99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9279
  %76 = load i32, i32* %gx99, align 4, !dbg !9279
  %add100 = add nsw i32 %mul98, %76, !dbg !9279
  %and = and i32 %add100, 31, !dbg !9279
  %shl = shl i32 1, %and, !dbg !9279
  %and101 = and i32 %73, %shl, !dbg !9279
  %tobool102 = icmp ne i32 %and101, 0, !dbg !9279
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !9282

if.then103:                                       ; preds = %if.then89
  br label %for.inc205, !dbg !9279

if.end104:                                        ; preds = %if.then89
  br label %if.end105, !dbg !9282

if.end105:                                        ; preds = %if.end104, %cond.end
  br label %if.end168, !dbg !9275

if.else106:                                       ; preds = %for.body68
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !9283
  %77 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !9283
  %tobool107 = icmp ne %struct.MVert* %77, null, !dbg !9283
  br i1 %tobool107, label %if.then108, label %if.else138, !dbg !9271

if.then108:                                       ; preds = %if.else106
  %mverts109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !9285
  %78 = load %struct.MVert*, %struct.MVert** %mverts109, align 8, !dbg !9285
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !9285
  %79 = load i32*, i32** %vert_indices, align 8, !dbg !9285
  %gx110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9285
  %80 = load i32, i32* %gx110, align 4, !dbg !9285
  %idxprom111 = sext i32 %80 to i64, !dbg !9285
  %arrayidx112 = getelementptr inbounds i32, i32* %79, i64 %idxprom111, !dbg !9285
  %81 = load i32, i32* %arrayidx112, align 4, !dbg !9285
  %idxprom113 = sext i32 %81 to i64, !dbg !9285
  %arrayidx114 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i64 %idxprom113, !dbg !9285
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9285
  store %struct.MVert* %arrayidx114, %struct.MVert** %mvert, align 8, !dbg !9285
  %mvert115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9287
  %82 = load %struct.MVert*, %struct.MVert** %mvert115, align 8, !dbg !9287
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 2, !dbg !9287
  %83 = load i8, i8* %flag, align 2, !dbg !9287
  %conv116 = zext i8 %83 to i32, !dbg !9287
  %and117 = and i32 %conv116, 16, !dbg !9287
  %tobool118 = icmp ne i32 %and117, 0, !dbg !9287
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !9285

if.then119:                                       ; preds = %if.then108
  br label %for.inc205, !dbg !9287

if.end120:                                        ; preds = %if.then108
  %mvert121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9285
  %84 = load %struct.MVert*, %struct.MVert** %mvert121, align 8, !dbg !9285
  %co122 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i32 0, i32 0, !dbg !9285
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co122, i64 0, i64 0, !dbg !9285
  %co123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9285
  store float* %arraydecay, float** %co123, align 8, !dbg !9285
  %mvert124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9285
  %85 = load %struct.MVert*, %struct.MVert** %mvert124, align 8, !dbg !9285
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %85, i32 0, i32 1, !dbg !9285
  %arraydecay125 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !9285
  %no126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !9285
  store i16* %arraydecay125, i16** %no126, align 8, !dbg !9285
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !9289
  %86 = load float*, float** %vmask, align 8, !dbg !9289
  %tobool127 = icmp ne float* %86, null, !dbg !9289
  br i1 %tobool127, label %if.then128, label %if.end137, !dbg !9285

if.then128:                                       ; preds = %if.end120
  %vmask129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !9289
  %87 = load float*, float** %vmask129, align 8, !dbg !9289
  %vert_indices130 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !9289
  %88 = load i32*, i32** %vert_indices130, align 8, !dbg !9289
  %gx131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9289
  %89 = load i32, i32* %gx131, align 4, !dbg !9289
  %idxprom132 = sext i32 %89 to i64, !dbg !9289
  %arrayidx133 = getelementptr inbounds i32, i32* %88, i64 %idxprom132, !dbg !9289
  %90 = load i32, i32* %arrayidx133, align 4, !dbg !9289
  %idxprom134 = sext i32 %90 to i64, !dbg !9289
  %arrayidx135 = getelementptr inbounds float, float* %87, i64 %idxprom134, !dbg !9289
  %mask136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9289
  store float* %arrayidx135, float** %mask136, align 8, !dbg !9289
  br label %if.end137, !dbg !9289

if.end137:                                        ; preds = %if.then128, %if.end120
  br label %if.end167, !dbg !9285

if.else138:                                       ; preds = %if.else106
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9291
  %call139 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !9291
  %tobool140 = icmp ne i8 %call139, 0, !dbg !9291
  br i1 %tobool140, label %if.else145, label %if.then141, !dbg !9294

if.then141:                                       ; preds = %if.else138
  %bm_unique_verts142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9295
  %call143 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts142), !dbg !9295
  %91 = bitcast i8* %call143 to %struct.BMVert*, !dbg !9295
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9295
  store %struct.BMVert* %91, %struct.BMVert** %bm_vert, align 8, !dbg !9295
  %bm_unique_verts144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9295
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts144), !dbg !9295
  br label %if.end149, !dbg !9295

if.else145:                                       ; preds = %if.else138
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !9297
  %call146 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !9297
  %92 = bitcast i8* %call146 to %struct.BMVert*, !dbg !9297
  %bm_vert147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9297
  store %struct.BMVert* %92, %struct.BMVert** %bm_vert147, align 8, !dbg !9297
  %bm_other_verts148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !9297
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts148), !dbg !9297
  br label %if.end149

if.end149:                                        ; preds = %if.else145, %if.then141
  %bm_vert150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9299
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert150, align 8, !dbg !9299
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !9299
  %call151 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !9299
  %conv152 = zext i8 %call151 to i32, !dbg !9299
  %tobool153 = icmp ne i32 %conv152, 0, !dbg !9299
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !9294

if.then154:                                       ; preds = %if.end149
  br label %for.inc205, !dbg !9299

if.end155:                                        ; preds = %if.end149
  %bm_vert156 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9294
  %94 = load %struct.BMVert*, %struct.BMVert** %bm_vert156, align 8, !dbg !9294
  %co157 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %94, i32 0, i32 2, !dbg !9294
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %co157, i64 0, i64 0, !dbg !9294
  %co159 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9294
  store float* %arraydecay158, float** %co159, align 8, !dbg !9294
  %bm_vert160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9294
  %95 = load %struct.BMVert*, %struct.BMVert** %bm_vert160, align 8, !dbg !9294
  %no161 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %95, i32 0, i32 3, !dbg !9294
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %no161, i64 0, i64 0, !dbg !9294
  %fno163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !9294
  store float* %arraydecay162, float** %fno163, align 8, !dbg !9294
  %bm_vert164 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9294
  %96 = load %struct.BMVert*, %struct.BMVert** %bm_vert164, align 8, !dbg !9294
  %head165 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %96, i32 0, i32 0, !dbg !9294
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head165, i32 0, i32 0, !dbg !9294
  %97 = load i8*, i8** %data, align 8, !dbg !9294
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !9294
  %98 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !9294
  %idx.ext = sext i32 %98 to i64, !dbg !9294
  %add.ptr = getelementptr inbounds i8, i8* %97, i64 %idx.ext, !dbg !9294
  %99 = bitcast i8* %add.ptr to float*, !dbg !9294
  %mask166 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9294
  store float* %99, float** %mask166, align 8, !dbg !9294
  br label %if.end167

if.end167:                                        ; preds = %if.end155, %if.end137
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.end105
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !9301, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9304, metadata !DIExpression()), !dbg !9305
  %100 = load i8, i8* %use_orco, align 1, !dbg !9306
  %tobool169 = icmp ne i8 %100, 0, !dbg !9306
  br i1 %tobool169, label %if.then170, label %if.else184, !dbg !9308

if.then170:                                       ; preds = %if.end168
  %101 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9309
  %bm171 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %101, i32 0, i32 10, !dbg !9312
  %102 = load %struct.BMesh*, %struct.BMesh** %bm171, align 8, !dbg !9312
  %tobool172 = icmp ne %struct.BMesh* %102, null, !dbg !9309
  br i1 %tobool172, label %if.then173, label %if.else177, !dbg !9313

if.then173:                                       ; preds = %if.then170
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !9314
  %103 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9316
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %103, i32 0, i32 14, !dbg !9317
  %104 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !9317
  %bm_vert175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9318
  %105 = load %struct.BMVert*, %struct.BMVert** %bm_vert175, align 8, !dbg !9318
  %call176 = call float* @BM_log_original_vert_co(%struct.BMLog* %104, %struct.BMVert* %105), !dbg !9319
  call void @copy_v3_v3(float* %arraydecay174, float* %call176), !dbg !9320
  br label %if.end183, !dbg !9321

if.else177:                                       ; preds = %if.then170
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !9322
  %106 = load [3 x float]*, [3 x float]** %orco, align 8, !dbg !9323
  %i179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9324
  %107 = load i32, i32* %i179, align 4, !dbg !9324
  %idxprom180 = sext i32 %107 to i64, !dbg !9323
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %106, i64 %idxprom180, !dbg !9323
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx181, i64 0, i64 0, !dbg !9323
  call void @copy_v3_v3(float* %arraydecay178, float* %arraydecay182), !dbg !9325
  br label %if.end183

if.end183:                                        ; preds = %if.else177, %if.then173
  br label %if.end187, !dbg !9326

if.else184:                                       ; preds = %if.end168
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !9327
  %co186 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9328
  %108 = load float*, float** %co186, align 8, !dbg !9328
  call void @copy_v3_v3(float* %arraydecay185, float* %108), !dbg !9329
  br label %if.end187

if.end187:                                        ; preds = %if.else184, %if.end183
  store i32 0, i32* %p, align 4, !dbg !9330
  br label %for.cond188, !dbg !9332

for.cond188:                                      ; preds = %for.inc, %if.end187
  %109 = load i32, i32* %p, align 4, !dbg !9333
  %110 = load i32, i32* %proxy_count, align 4, !dbg !9335
  %cmp189 = icmp slt i32 %109, %110, !dbg !9336
  br i1 %cmp189, label %for.body191, label %for.end, !dbg !9337

for.body191:                                      ; preds = %for.cond188
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !9338
  %111 = load %struct.PBVHProxyNode*, %struct.PBVHProxyNode** %proxies, align 8, !dbg !9339
  %112 = load i32, i32* %p, align 4, !dbg !9340
  %idxprom193 = sext i32 %112 to i64, !dbg !9339
  %arrayidx194 = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %111, i64 %idxprom193, !dbg !9339
  %co195 = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %arrayidx194, i32 0, i32 0, !dbg !9341
  %113 = load [3 x float]*, [3 x float]** %co195, align 8, !dbg !9341
  %i196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9342
  %114 = load i32, i32* %i196, align 4, !dbg !9342
  %idxprom197 = sext i32 %114 to i64, !dbg !9339
  %arrayidx198 = getelementptr inbounds [3 x float], [3 x float]* %113, i64 %idxprom197, !dbg !9339
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx198, i64 0, i64 0, !dbg !9339
  call void @add_v3_v3(float* %arraydecay192, float* %arraydecay199), !dbg !9343
  br label %for.inc, !dbg !9343

for.inc:                                          ; preds = %for.body191
  %115 = load i32, i32* %p, align 4, !dbg !9344
  %inc = add nsw i32 %115, 1, !dbg !9344
  store i32 %inc, i32* %p, align 4, !dbg !9344
  br label %for.cond188, !dbg !9345, !llvm.loop !9346

for.end:                                          ; preds = %for.cond188
  %116 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9348
  %117 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9349
  %co200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9350
  %118 = load float*, float** %co200, align 8, !dbg !9350
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !9351
  call void @sculpt_clip(%struct.Sculpt* %116, %struct.SculptSession* %117, float* %118, float* %arraydecay201), !dbg !9352
  %119 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9353
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %119, i32 0, i32 17, !dbg !9355
  %120 = load i8, i8* %modifiers_active, align 1, !dbg !9355
  %tobool202 = icmp ne i8 %120, 0, !dbg !9353
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !9356

if.then203:                                       ; preds = %for.end
  %121 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9357
  call void @sculpt_flush_pbvhvert_deform(%struct.Object* %121, %struct.PBVHVertexIter* %vd), !dbg !9358
  br label %if.end204, !dbg !9358

if.end204:                                        ; preds = %if.then203, %for.end
  br label %for.inc205, !dbg !9359

for.inc205:                                       ; preds = %if.end204, %if.then154, %if.then119, %if.then103
  %gx206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9269
  %122 = load i32, i32* %gx206, align 4, !dbg !9269
  %inc207 = add nsw i32 %122, 1, !dbg !9269
  store i32 %inc207, i32* %gx206, align 4, !dbg !9269
  %i208 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9269
  %123 = load i32, i32* %i208, align 4, !dbg !9269
  %inc209 = add nsw i32 %123, 1, !dbg !9269
  store i32 %inc209, i32* %i208, align 4, !dbg !9269
  br label %for.cond63, !dbg !9269, !llvm.loop !9360

for.end210:                                       ; preds = %for.cond63
  br label %for.inc211, !dbg !9362

for.inc211:                                       ; preds = %for.end210
  %gy212 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9264
  %124 = load i32, i32* %gy212, align 8, !dbg !9264
  %inc213 = add nsw i32 %124, 1, !dbg !9264
  store i32 %inc213, i32* %gy212, align 8, !dbg !9264
  br label %for.cond57, !dbg !9264, !llvm.loop !9363

for.end214:                                       ; preds = %for.cond57
  br label %for.inc215, !dbg !9365

for.inc215:                                       ; preds = %for.end214
  %g216 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9250
  %125 = load i32, i32* %g216, align 8, !dbg !9250
  %inc217 = add nsw i32 %125, 1, !dbg !9250
  store i32 %inc217, i32* %g216, align 8, !dbg !9250
  br label %for.cond34, !dbg !9250, !llvm.loop !9366

for.end218:                                       ; preds = %for.cond34
  %126 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9368
  %127 = load i32, i32* %n, align 4, !dbg !9369
  %idxprom219 = sext i32 %127 to i64, !dbg !9368
  %arrayidx220 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %126, i64 %idxprom219, !dbg !9368
  %128 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx220, align 8, !dbg !9368
  call void @BKE_pbvh_node_free_proxies(%struct.PBVHNode* %128), !dbg !9370
  br label %for.inc221, !dbg !9371

for.inc221:                                       ; preds = %for.end218
  %129 = load i32, i32* %n, align 4, !dbg !9372
  %inc222 = add nsw i32 %129, 1, !dbg !9372
  store i32 %inc222, i32* %n, align 4, !dbg !9372
  br label %for.cond, !dbg !9373, !llvm.loop !9374

for.end223:                                       ; preds = %for.cond
  br label %if.end224, !dbg !9376

if.end224:                                        ; preds = %for.end223, %lor.lhs.false6
  %130 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9377
  %tobool225 = icmp ne %struct.PBVHNode** %130, null, !dbg !9377
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !9379

if.then226:                                       ; preds = %if.end224
  %131 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9380
  %132 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9381
  %133 = bitcast %struct.PBVHNode** %132 to i8*, !dbg !9381
  call void %131(i8* %133), !dbg !9380
  br label %if.end227, !dbg !9380

if.end227:                                        ; preds = %if.then226, %if.end224
  ret void, !dbg !9382
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_fix_noise_tear(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !9383 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mtex = alloca %struct.MTex*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9388, metadata !DIExpression()), !dbg !9389
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9390
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9391
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9391
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9389
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !9392, metadata !DIExpression()), !dbg !9393
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9394
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !9395
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !9396
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !9393
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !9397, metadata !DIExpression()), !dbg !9398
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9399
  %mtex1 = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 3, !dbg !9400
  store %struct.MTex* %mtex1, %struct.MTex** %mtex, align 8, !dbg !9398
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9401
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 0, !dbg !9403
  %5 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !9403
  %tobool = icmp ne %struct.MultiresModifierData* %5, null, !dbg !9401
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9404

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9405
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %6, i32 0, i32 5, !dbg !9406
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9406
  %tobool2 = icmp ne %struct.Tex* %7, null, !dbg !9405
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !9407

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !9408
  %tex4 = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 5, !dbg !9409
  %9 = load %struct.Tex*, %struct.Tex** %tex4, align 8, !dbg !9409
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 32, !dbg !9410
  %10 = load i16, i16* %type, align 8, !dbg !9410
  %conv = sext i16 %10 to i32, !dbg !9408
  %cmp = icmp eq i32 %conv, 7, !dbg !9411
  br i1 %cmp, label %if.then, label %if.end, !dbg !9412

if.then:                                          ; preds = %land.lhs.true3
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9413
  call void @multires_stitch_grids(%struct.Object* %11), !dbg !9414
  br label %if.end, !dbg !9414

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  ret void, !dbg !9415
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_flush_stroke_deform(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !9416 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %n = alloca i32, align 4
  %totnode = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %nodes = alloca %struct.PBVHNode**, align 8
  %vertCos = alloca [3 x float]*, align 8
  %vd = alloca %struct.PBVHVertexIter, align 8
  %index = alloca i32, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !9417, metadata !DIExpression()), !dbg !9418
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9421, metadata !DIExpression()), !dbg !9422
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9423
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9424
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9424
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9422
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !9425, metadata !DIExpression()), !dbg !9426
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9427
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !9428
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !9429
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !9426
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9430
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 34, !dbg !9430
  %4 = load i8, i8* %sculpt_tool, align 8, !dbg !9430
  %conv = zext i8 %4 to i32, !dbg !9430
  %cmp = icmp eq i32 %conv, 2, !dbg !9430
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9430

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9430
  %sculpt_tool2 = getelementptr inbounds %struct.Brush, %struct.Brush* %5, i32 0, i32 34, !dbg !9430
  %6 = load i8, i8* %sculpt_tool2, align 8, !dbg !9430
  %conv3 = zext i8 %6 to i32, !dbg !9430
  %cmp4 = icmp eq i32 %conv3, 6, !dbg !9430
  br i1 %cmp4, label %if.then, label %if.else184, !dbg !9432

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9433, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !9436, metadata !DIExpression()), !dbg !9437
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !9438, metadata !DIExpression()), !dbg !9439
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9440
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !9441
  %8 = load i8*, i8** %data, align 8, !dbg !9441
  %9 = bitcast i8* %8 to %struct.Mesh*, !dbg !9442
  store %struct.Mesh* %9, %struct.Mesh** %me, align 8, !dbg !9439
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !9445, metadata !DIExpression()), !dbg !9446
  store [3 x float]* null, [3 x float]** %vertCos, align 8, !dbg !9446
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9447
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 7, !dbg !9449
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !9449
  %tobool = icmp ne %struct.KeyBlock* %11, null, !dbg !9447
  br i1 %tobool, label %if.then6, label %if.end, !dbg !9450

if.then6:                                         ; preds = %if.then
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9451
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9453
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 26, !dbg !9454
  %14 = load i32, i32* %totvert, align 8, !dbg !9454
  %conv7 = sext i32 %14 to i64, !dbg !9453
  %mul = mul i64 12, %conv7, !dbg !9455
  %call8 = call i8* %12(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)), !dbg !9451
  %15 = bitcast i8* %call8 to [3 x float]*, !dbg !9451
  store [3 x float]* %15, [3 x float]** %vertCos, align 8, !dbg !9456
  %16 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9457
  %17 = bitcast [3 x float]* %16 to i8*, !dbg !9458
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9459
  %orig_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 18, !dbg !9460
  %19 = load [3 x float]*, [3 x float]** %orig_cos, align 8, !dbg !9460
  %20 = bitcast [3 x float]* %19 to i8*, !dbg !9458
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9461
  %totvert9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 26, !dbg !9462
  %22 = load i32, i32* %totvert9, align 8, !dbg !9462
  %conv10 = sext i32 %22 to i64, !dbg !9461
  %mul11 = mul i64 12, %conv10, !dbg !9463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %20, i64 %mul11, i1 false), !dbg !9458
  br label %if.end, !dbg !9464

if.end:                                           ; preds = %if.then6, %if.then
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9465
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 15, !dbg !9466
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9466
  call void @BKE_pbvh_search_gather(%struct.PBVH* %24, i8 (%struct.PBVHNode*, i8*)* null, i8* null, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !9467
  store i32 0, i32* %n, align 4, !dbg !9468
  br label %for.cond, !dbg !9470

for.cond:                                         ; preds = %for.inc177, %if.end
  %25 = load i32, i32* %n, align 4, !dbg !9471
  %26 = load i32, i32* %totnode, align 4, !dbg !9473
  %cmp12 = icmp slt i32 %25, %26, !dbg !9474
  br i1 %cmp12, label %for.body, label %for.end179, !dbg !9475

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !9476, metadata !DIExpression()), !dbg !9478
  %27 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9479
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %27, i32 0, i32 15, !dbg !9479
  %28 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !9479
  %29 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9479
  %30 = load i32, i32* %n, align 4, !dbg !9479
  %idxprom = sext i32 %30 to i64, !dbg !9479
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %29, i64 %idxprom, !dbg !9479
  %31 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !9479
  call void @pbvh_vertex_iter_init(%struct.PBVH* %28, %struct.PBVHNode* %31, %struct.PBVHVertexIter* %vd, i32 1), !dbg !9479
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9480
  store i32 0, i32* %i, align 4, !dbg !9480
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9480
  store i32 0, i32* %g, align 8, !dbg !9480
  br label %for.cond15, !dbg !9480

for.cond15:                                       ; preds = %for.inc173, %for.body
  %g16 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9482
  %32 = load i32, i32* %g16, align 8, !dbg !9482
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !9482
  %33 = load i32, i32* %totgrid, align 8, !dbg !9482
  %cmp17 = icmp slt i32 %32, %33, !dbg !9482
  br i1 %cmp17, label %for.body19, label %for.end176, !dbg !9480

for.body19:                                       ; preds = %for.cond15
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !9484
  %34 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !9484
  %tobool20 = icmp ne %struct.CCGElem** %34, null, !dbg !9484
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !9487

if.then21:                                        ; preds = %for.body19
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9488
  %35 = load i32, i32* %gridsize, align 4, !dbg !9488
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9488
  store i32 %35, i32* %width, align 4, !dbg !9488
  %gridsize22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9488
  %36 = load i32, i32* %gridsize22, align 4, !dbg !9488
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9488
  store i32 %36, i32* %height, align 8, !dbg !9488
  %grids23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !9488
  %37 = load %struct.CCGElem**, %struct.CCGElem*** %grids23, align 8, !dbg !9488
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !9488
  %38 = load i32*, i32** %grid_indices, align 8, !dbg !9488
  %g24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9488
  %39 = load i32, i32* %g24, align 8, !dbg !9488
  %idxprom25 = sext i32 %39 to i64, !dbg !9488
  %arrayidx26 = getelementptr inbounds i32, i32* %38, i64 %idxprom25, !dbg !9488
  %40 = load i32, i32* %arrayidx26, align 4, !dbg !9488
  %idxprom27 = sext i32 %40 to i64, !dbg !9488
  %arrayidx28 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %37, i64 %idxprom27, !dbg !9488
  %41 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx28, align 8, !dbg !9488
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9488
  store %struct.CCGElem* %41, %struct.CCGElem** %grid, align 8, !dbg !9488
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !9490
  %42 = load i32**, i32*** %grid_hidden, align 8, !dbg !9490
  %grid_indices29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !9490
  %43 = load i32*, i32** %grid_indices29, align 8, !dbg !9490
  %g30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9490
  %44 = load i32, i32* %g30, align 8, !dbg !9490
  %idxprom31 = sext i32 %44 to i64, !dbg !9490
  %arrayidx32 = getelementptr inbounds i32, i32* %43, i64 %idxprom31, !dbg !9490
  %45 = load i32, i32* %arrayidx32, align 4, !dbg !9490
  %idxprom33 = sext i32 %45 to i64, !dbg !9490
  %arrayidx34 = getelementptr inbounds i32*, i32** %42, i64 %idxprom33, !dbg !9490
  %46 = load i32*, i32** %arrayidx34, align 8, !dbg !9490
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9490
  store i32* %46, i32** %gh, align 8, !dbg !9490
  br label %if.end38, !dbg !9488

if.else:                                          ; preds = %for.body19
  %totvert35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !9492
  %47 = load i32, i32* %totvert35, align 8, !dbg !9492
  %width36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9492
  store i32 %47, i32* %width36, align 4, !dbg !9492
  %height37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9492
  store i32 1, i32* %height37, align 8, !dbg !9492
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then21
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9494
  store i32 0, i32* %gy, align 8, !dbg !9494
  br label %for.cond39, !dbg !9494

for.cond39:                                       ; preds = %for.inc169, %if.end38
  %gy40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9496
  %48 = load i32, i32* %gy40, align 8, !dbg !9496
  %height41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !9496
  %49 = load i32, i32* %height41, align 8, !dbg !9496
  %cmp42 = icmp slt i32 %48, %49, !dbg !9496
  br i1 %cmp42, label %for.body44, label %for.end172, !dbg !9494

for.body44:                                       ; preds = %for.cond39
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9498
  store i32 0, i32* %gx, align 4, !dbg !9498
  br label %for.cond45, !dbg !9498

for.cond45:                                       ; preds = %for.inc, %for.body44
  %gx46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9501
  %50 = load i32, i32* %gx46, align 4, !dbg !9501
  %width47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !9501
  %51 = load i32, i32* %width47, align 4, !dbg !9501
  %cmp48 = icmp slt i32 %50, %51, !dbg !9501
  br i1 %cmp48, label %for.body50, label %for.end, !dbg !9498

for.body50:                                       ; preds = %for.cond45
  %grid51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9503
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid51, align 8, !dbg !9503
  %tobool52 = icmp ne %struct.CCGElem* %52, null, !dbg !9503
  br i1 %tobool52, label %if.then53, label %if.else88, !dbg !9506

if.then53:                                        ; preds = %for.body50
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9507
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !9507
  %grid54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9507
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid54, align 8, !dbg !9507
  %call55 = call float* @CCG_elem_co(%struct.CCGKey* %53, %struct.CCGElem* %54), !dbg !9507
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9507
  store float* %call55, float** %co, align 8, !dbg !9507
  %key56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9507
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key56, align 8, !dbg !9507
  %grid57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9507
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid57, align 8, !dbg !9507
  %call58 = call float* @CCG_elem_no(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !9507
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !9507
  store float* %call58, float** %fno, align 8, !dbg !9507
  %key59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9507
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key59, align 8, !dbg !9507
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %57, i32 0, i32 9, !dbg !9507
  %58 = load i32, i32* %has_mask, align 4, !dbg !9507
  %tobool60 = icmp ne i32 %58, 0, !dbg !9507
  br i1 %tobool60, label %cond.true, label %cond.false, !dbg !9507

cond.true:                                        ; preds = %if.then53
  %key61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9507
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key61, align 8, !dbg !9507
  %grid62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9507
  %60 = load %struct.CCGElem*, %struct.CCGElem** %grid62, align 8, !dbg !9507
  %call63 = call float* @CCG_elem_mask(%struct.CCGKey* %59, %struct.CCGElem* %60), !dbg !9507
  br label %cond.end, !dbg !9507

cond.false:                                       ; preds = %if.then53
  br label %cond.end, !dbg !9507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call63, %cond.true ], [ null, %cond.false ], !dbg !9507
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9507
  store float* %cond, float** %mask, align 8, !dbg !9507
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !9507
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !9507
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9507
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid65, align 8, !dbg !9507
  %call66 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !9507
  %grid67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !9507
  store %struct.CCGElem* %call66, %struct.CCGElem** %grid67, align 8, !dbg !9507
  %gh68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9509
  %63 = load i32*, i32** %gh68, align 8, !dbg !9509
  %tobool69 = icmp ne i32* %63, null, !dbg !9509
  br i1 %tobool69, label %if.then70, label %if.end87, !dbg !9507

if.then70:                                        ; preds = %cond.end
  %gh71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !9511
  %64 = load i32*, i32** %gh71, align 8, !dbg !9511
  %gy72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9511
  %65 = load i32, i32* %gy72, align 8, !dbg !9511
  %gridsize73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9511
  %66 = load i32, i32* %gridsize73, align 4, !dbg !9511
  %mul74 = mul nsw i32 %65, %66, !dbg !9511
  %gx75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9511
  %67 = load i32, i32* %gx75, align 4, !dbg !9511
  %add = add nsw i32 %mul74, %67, !dbg !9511
  %shr = ashr i32 %add, 5, !dbg !9511
  %idxprom76 = sext i32 %shr to i64, !dbg !9511
  %arrayidx77 = getelementptr inbounds i32, i32* %64, i64 %idxprom76, !dbg !9511
  %68 = load i32, i32* %arrayidx77, align 4, !dbg !9511
  %gy78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9511
  %69 = load i32, i32* %gy78, align 8, !dbg !9511
  %gridsize79 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !9511
  %70 = load i32, i32* %gridsize79, align 4, !dbg !9511
  %mul80 = mul nsw i32 %69, %70, !dbg !9511
  %gx81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9511
  %71 = load i32, i32* %gx81, align 4, !dbg !9511
  %add82 = add nsw i32 %mul80, %71, !dbg !9511
  %and = and i32 %add82, 31, !dbg !9511
  %shl = shl i32 1, %and, !dbg !9511
  %and83 = and i32 %68, %shl, !dbg !9511
  %tobool84 = icmp ne i32 %and83, 0, !dbg !9511
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !9514

if.then85:                                        ; preds = %if.then70
  br label %for.inc, !dbg !9511

if.end86:                                         ; preds = %if.then70
  br label %if.end87, !dbg !9514

if.end87:                                         ; preds = %if.end86, %cond.end
  br label %if.end151, !dbg !9507

if.else88:                                        ; preds = %for.body50
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !9515
  %72 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !9515
  %tobool89 = icmp ne %struct.MVert* %72, null, !dbg !9515
  br i1 %tobool89, label %if.then90, label %if.else120, !dbg !9503

if.then90:                                        ; preds = %if.else88
  %mverts91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !9517
  %73 = load %struct.MVert*, %struct.MVert** %mverts91, align 8, !dbg !9517
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !9517
  %74 = load i32*, i32** %vert_indices, align 8, !dbg !9517
  %gx92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9517
  %75 = load i32, i32* %gx92, align 4, !dbg !9517
  %idxprom93 = sext i32 %75 to i64, !dbg !9517
  %arrayidx94 = getelementptr inbounds i32, i32* %74, i64 %idxprom93, !dbg !9517
  %76 = load i32, i32* %arrayidx94, align 4, !dbg !9517
  %idxprom95 = sext i32 %76 to i64, !dbg !9517
  %arrayidx96 = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i64 %idxprom95, !dbg !9517
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9517
  store %struct.MVert* %arrayidx96, %struct.MVert** %mvert, align 8, !dbg !9517
  %mvert97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9519
  %77 = load %struct.MVert*, %struct.MVert** %mvert97, align 8, !dbg !9519
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %77, i32 0, i32 2, !dbg !9519
  %78 = load i8, i8* %flag, align 2, !dbg !9519
  %conv98 = zext i8 %78 to i32, !dbg !9519
  %and99 = and i32 %conv98, 16, !dbg !9519
  %tobool100 = icmp ne i32 %and99, 0, !dbg !9519
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !9517

if.then101:                                       ; preds = %if.then90
  br label %for.inc, !dbg !9519

if.end102:                                        ; preds = %if.then90
  %mvert103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9517
  %79 = load %struct.MVert*, %struct.MVert** %mvert103, align 8, !dbg !9517
  %co104 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 0, !dbg !9517
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co104, i64 0, i64 0, !dbg !9517
  %co105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9517
  store float* %arraydecay, float** %co105, align 8, !dbg !9517
  %mvert106 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !9517
  %80 = load %struct.MVert*, %struct.MVert** %mvert106, align 8, !dbg !9517
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i32 0, i32 1, !dbg !9517
  %arraydecay107 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !9517
  %no108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !9517
  store i16* %arraydecay107, i16** %no108, align 8, !dbg !9517
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !9521
  %81 = load float*, float** %vmask, align 8, !dbg !9521
  %tobool109 = icmp ne float* %81, null, !dbg !9521
  br i1 %tobool109, label %if.then110, label %if.end119, !dbg !9517

if.then110:                                       ; preds = %if.end102
  %vmask111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !9521
  %82 = load float*, float** %vmask111, align 8, !dbg !9521
  %vert_indices112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !9521
  %83 = load i32*, i32** %vert_indices112, align 8, !dbg !9521
  %gx113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9521
  %84 = load i32, i32* %gx113, align 4, !dbg !9521
  %idxprom114 = sext i32 %84 to i64, !dbg !9521
  %arrayidx115 = getelementptr inbounds i32, i32* %83, i64 %idxprom114, !dbg !9521
  %85 = load i32, i32* %arrayidx115, align 4, !dbg !9521
  %idxprom116 = sext i32 %85 to i64, !dbg !9521
  %arrayidx117 = getelementptr inbounds float, float* %82, i64 %idxprom116, !dbg !9521
  %mask118 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9521
  store float* %arrayidx117, float** %mask118, align 8, !dbg !9521
  br label %if.end119, !dbg !9521

if.end119:                                        ; preds = %if.then110, %if.end102
  br label %if.end150, !dbg !9517

if.else120:                                       ; preds = %if.else88
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9523
  %call121 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !9523
  %tobool122 = icmp ne i8 %call121, 0, !dbg !9523
  br i1 %tobool122, label %if.else127, label %if.then123, !dbg !9526

if.then123:                                       ; preds = %if.else120
  %bm_unique_verts124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9527
  %call125 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts124), !dbg !9527
  %86 = bitcast i8* %call125 to %struct.BMVert*, !dbg !9527
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9527
  store %struct.BMVert* %86, %struct.BMVert** %bm_vert, align 8, !dbg !9527
  %bm_unique_verts126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !9527
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts126), !dbg !9527
  br label %if.end131, !dbg !9527

if.else127:                                       ; preds = %if.else120
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !9529
  %call128 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !9529
  %87 = bitcast i8* %call128 to %struct.BMVert*, !dbg !9529
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9529
  store %struct.BMVert* %87, %struct.BMVert** %bm_vert129, align 8, !dbg !9529
  %bm_other_verts130 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !9529
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts130), !dbg !9529
  br label %if.end131

if.end131:                                        ; preds = %if.else127, %if.then123
  %bm_vert132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9531
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert132, align 8, !dbg !9531
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 0, !dbg !9531
  %call133 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !9531
  %conv134 = zext i8 %call133 to i32, !dbg !9531
  %tobool135 = icmp ne i32 %conv134, 0, !dbg !9531
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !9526

if.then136:                                       ; preds = %if.end131
  br label %for.inc, !dbg !9531

if.end137:                                        ; preds = %if.end131
  %bm_vert138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9526
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert138, align 8, !dbg !9526
  %co139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 2, !dbg !9526
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %co139, i64 0, i64 0, !dbg !9526
  %co141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !9526
  store float* %arraydecay140, float** %co141, align 8, !dbg !9526
  %bm_vert142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9526
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert142, align 8, !dbg !9526
  %no143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 3, !dbg !9526
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %no143, i64 0, i64 0, !dbg !9526
  %fno145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !9526
  store float* %arraydecay144, float** %fno145, align 8, !dbg !9526
  %bm_vert146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !9526
  %91 = load %struct.BMVert*, %struct.BMVert** %bm_vert146, align 8, !dbg !9526
  %head147 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 0, !dbg !9526
  %data148 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head147, i32 0, i32 0, !dbg !9526
  %92 = load i8*, i8** %data148, align 8, !dbg !9526
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !9526
  %93 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !9526
  %idx.ext = sext i32 %93 to i64, !dbg !9526
  %add.ptr = getelementptr inbounds i8, i8* %92, i64 %idx.ext, !dbg !9526
  %94 = bitcast i8* %add.ptr to float*, !dbg !9526
  %mask149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !9526
  store float* %94, float** %mask149, align 8, !dbg !9526
  br label %if.end150

if.end150:                                        ; preds = %if.end137, %if.end119
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.end87
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9533
  call void @sculpt_flush_pbvhvert_deform(%struct.Object* %95, %struct.PBVHVertexIter* %vd), !dbg !9535
  %96 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9536
  %tobool152 = icmp ne [3 x float]* %96, null, !dbg !9536
  br i1 %tobool152, label %if.then153, label %if.end165, !dbg !9538

if.then153:                                       ; preds = %if.end151
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9539, metadata !DIExpression()), !dbg !9541
  %vert_indices154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !9542
  %97 = load i32*, i32** %vert_indices154, align 8, !dbg !9542
  %i155 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9543
  %98 = load i32, i32* %i155, align 4, !dbg !9543
  %idxprom156 = sext i32 %98 to i64, !dbg !9544
  %arrayidx157 = getelementptr inbounds i32, i32* %97, i64 %idxprom156, !dbg !9544
  %99 = load i32, i32* %arrayidx157, align 4, !dbg !9544
  store i32 %99, i32* %index, align 4, !dbg !9541
  %100 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9545
  %101 = load i32, i32* %index, align 4, !dbg !9546
  %idxprom158 = sext i32 %101 to i64, !dbg !9545
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %100, i64 %idxprom158, !dbg !9545
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !9545
  %102 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9547
  %orig_cos161 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %102, i32 0, i32 18, !dbg !9548
  %103 = load [3 x float]*, [3 x float]** %orig_cos161, align 8, !dbg !9548
  %104 = load i32, i32* %index, align 4, !dbg !9549
  %idxprom162 = sext i32 %104 to i64, !dbg !9547
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %103, i64 %idxprom162, !dbg !9547
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx163, i64 0, i64 0, !dbg !9547
  call void @copy_v3_v3(float* %arraydecay160, float* %arraydecay164), !dbg !9550
  br label %if.end165, !dbg !9551

if.end165:                                        ; preds = %if.then153, %if.end151
  br label %for.inc, !dbg !9552

for.inc:                                          ; preds = %if.end165, %if.then136, %if.then101, %if.then85
  %gx166 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !9501
  %105 = load i32, i32* %gx166, align 4, !dbg !9501
  %inc = add nsw i32 %105, 1, !dbg !9501
  store i32 %inc, i32* %gx166, align 4, !dbg !9501
  %i167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !9501
  %106 = load i32, i32* %i167, align 4, !dbg !9501
  %inc168 = add nsw i32 %106, 1, !dbg !9501
  store i32 %inc168, i32* %i167, align 4, !dbg !9501
  br label %for.cond45, !dbg !9501, !llvm.loop !9553

for.end:                                          ; preds = %for.cond45
  br label %for.inc169, !dbg !9555

for.inc169:                                       ; preds = %for.end
  %gy170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !9496
  %107 = load i32, i32* %gy170, align 8, !dbg !9496
  %inc171 = add nsw i32 %107, 1, !dbg !9496
  store i32 %inc171, i32* %gy170, align 8, !dbg !9496
  br label %for.cond39, !dbg !9496, !llvm.loop !9556

for.end172:                                       ; preds = %for.cond39
  br label %for.inc173, !dbg !9558

for.inc173:                                       ; preds = %for.end172
  %g174 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !9482
  %108 = load i32, i32* %g174, align 8, !dbg !9482
  %inc175 = add nsw i32 %108, 1, !dbg !9482
  store i32 %inc175, i32* %g174, align 8, !dbg !9482
  br label %for.cond15, !dbg !9482, !llvm.loop !9559

for.end176:                                       ; preds = %for.cond15
  br label %for.inc177, !dbg !9561

for.inc177:                                       ; preds = %for.end176
  %109 = load i32, i32* %n, align 4, !dbg !9562
  %inc178 = add nsw i32 %109, 1, !dbg !9562
  store i32 %inc178, i32* %n, align 4, !dbg !9562
  br label %for.cond, !dbg !9563, !llvm.loop !9564

for.end179:                                       ; preds = %for.cond
  %110 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9566
  %tobool180 = icmp ne [3 x float]* %110, null, !dbg !9566
  br i1 %tobool180, label %if.then181, label %if.end183, !dbg !9568

if.then181:                                       ; preds = %for.end179
  %111 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9569
  %112 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9571
  %kb182 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %112, i32 0, i32 7, !dbg !9572
  %113 = load %struct.KeyBlock*, %struct.KeyBlock** %kb182, align 8, !dbg !9572
  %114 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9573
  call void @sculpt_vertcos_to_key(%struct.Object* %111, %struct.KeyBlock* %113, [3 x float]* %114), !dbg !9574
  %115 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9575
  %116 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9576
  %117 = bitcast [3 x float]* %116 to i8*, !dbg !9576
  call void %115(i8* %117), !dbg !9575
  br label %if.end183, !dbg !9577

if.end183:                                        ; preds = %if.then181, %for.end179
  %118 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9578
  %119 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9579
  %120 = bitcast %struct.PBVHNode** %119 to i8*, !dbg !9579
  call void %118(i8* %120), !dbg !9578
  %121 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9580
  call void @BKE_mesh_calc_normals(%struct.Mesh* %121), !dbg !9581
  br label %if.end189, !dbg !9582

if.else184:                                       ; preds = %lor.lhs.false
  %122 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9583
  %kb185 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %122, i32 0, i32 7, !dbg !9585
  %123 = load %struct.KeyBlock*, %struct.KeyBlock** %kb185, align 8, !dbg !9585
  %tobool186 = icmp ne %struct.KeyBlock* %123, null, !dbg !9583
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !9586

if.then187:                                       ; preds = %if.else184
  %124 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9587
  call void @sculpt_update_keyblock(%struct.Object* %124), !dbg !9589
  br label %if.end188, !dbg !9590

if.end188:                                        ; preds = %if.then187, %if.else184
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end183
  ret void, !dbg !9591
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_update_keyblock(%struct.Object* %ob) #0 !dbg !9592 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %vertCos = alloca [3 x float]*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9595, metadata !DIExpression()), !dbg !9596
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9597
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9598
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9598
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9596
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !9599, metadata !DIExpression()), !dbg !9600
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9601
  %orig_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 18, !dbg !9603
  %3 = load [3 x float]*, [3 x float]** %orig_cos, align 8, !dbg !9603
  %tobool = icmp ne [3 x float]* %3, null, !dbg !9601
  br i1 %tobool, label %if.then, label %if.else, !dbg !9604

if.then:                                          ; preds = %entry
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9605
  %orig_cos1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 18, !dbg !9606
  %5 = load [3 x float]*, [3 x float]** %orig_cos1, align 8, !dbg !9606
  store [3 x float]* %5, [3 x float]** %vertCos, align 8, !dbg !9607
  br label %if.end, !dbg !9608

if.else:                                          ; preds = %entry
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9609
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 15, !dbg !9610
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9610
  %call = call [3 x float]* @BKE_pbvh_get_vertCos(%struct.PBVH* %7), !dbg !9611
  store [3 x float]* %call, [3 x float]** %vertCos, align 8, !dbg !9612
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9613
  %tobool2 = icmp ne [3 x float]* %8, null, !dbg !9613
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !9615

if.then3:                                         ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9616
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9618
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 7, !dbg !9619
  %11 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !9619
  %12 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9620
  call void @sculpt_vertcos_to_key(%struct.Object* %9, %struct.KeyBlock* %11, [3 x float]* %12), !dbg !9621
  %13 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9622
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9624
  %orig_cos4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 18, !dbg !9625
  %15 = load [3 x float]*, [3 x float]** %orig_cos4, align 8, !dbg !9625
  %cmp = icmp ne [3 x float]* %13, %15, !dbg !9626
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !9627

if.then5:                                         ; preds = %if.then3
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9628
  %17 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !9629
  %18 = bitcast [3 x float]* %17 to i8*, !dbg !9629
  call void %16(i8* %18), !dbg !9628
  br label %if.end6, !dbg !9628

if.end6:                                          ; preds = %if.then5, %if.then3
  br label %if.end7, !dbg !9630

if.end7:                                          ; preds = %if.end6, %if.end
  ret void, !dbg !9631
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_flush_update(%struct.bContext* %C) #0 !dbg !9632 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %r = alloca %struct.rcti, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9635, metadata !DIExpression()), !dbg !9636
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9637
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !9638
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9636
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9639, metadata !DIExpression()), !dbg !9640
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9641
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !9642
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9642
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !9640
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !9643, metadata !DIExpression()), !dbg !9644
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9645
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !9646
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !9644
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !9647, metadata !DIExpression()), !dbg !9650
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9651
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 0, !dbg !9652
  %5 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !9652
  store %struct.MultiresModifierData* %5, %struct.MultiresModifierData** %mmd, align 8, !dbg !9650
  %6 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9653
  %tobool = icmp ne %struct.MultiresModifierData* %6, null, !dbg !9653
  br i1 %tobool, label %if.then, label %if.end, !dbg !9655

if.then:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9656
  call void @multires_mark_as_modified(%struct.Object* %7, i32 1), !dbg !9657
  br label %if.end, !dbg !9657

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9658
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 120, !dbg !9660
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !9660
  %tobool2 = icmp ne %struct.DerivedMesh* %9, null, !dbg !9658
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !9661

if.then3:                                         ; preds = %if.end
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9662
  %derivedFinal4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 120, !dbg !9663
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal4, align 8, !dbg !9663
  call void @GPU_drawobject_free(%struct.DerivedMesh* %11), !dbg !9664
  br label %if.end5, !dbg !9664

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9665
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 7, !dbg !9667
  %13 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !9667
  %tobool6 = icmp ne %struct.KeyBlock* %13, null, !dbg !9665
  br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !9668

lor.lhs.false:                                    ; preds = %if.end5
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9669
  %modifiers_active = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 17, !dbg !9670
  %15 = load i8, i8* %modifiers_active, align 1, !dbg !9670
  %conv = zext i8 %15 to i32, !dbg !9669
  %tobool7 = icmp ne i32 %conv, 0, !dbg !9669
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !9671

if.then8:                                         ; preds = %lor.lhs.false, %if.end5
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9672
  %id = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 0, !dbg !9674
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9675
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9676
  call void @ED_region_tag_redraw(%struct.ARegion* %17), !dbg !9677
  br label %if.end31, !dbg !9678

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.rcti* %r, metadata !9679, metadata !DIExpression()), !dbg !9681
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9682
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 15, !dbg !9683
  %19 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9683
  call void @BKE_pbvh_update(%struct.PBVH* %19, i32 4, [3 x float]* null), !dbg !9684
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9685
  call void @sculpt_update_object_bounding_box(%struct.Object* %20), !dbg !9686
  %21 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9687
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9689
  %call9 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %22), !dbg !9690
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9691
  %call10 = call zeroext i8 @sculpt_get_redraw_rect(%struct.ARegion* %21, %struct.RegionView3D* %call9, %struct.Object* %23, %struct.rcti* %r), !dbg !9692
  %tobool11 = icmp ne i8 %call10, 0, !dbg !9692
  br i1 %tobool11, label %if.then12, label %if.end30, !dbg !9693

if.then12:                                        ; preds = %if.else
  %24 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9694
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %24, i32 0, i32 28, !dbg !9697
  %25 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9697
  %tobool13 = icmp ne %struct.StrokeCache* %25, null, !dbg !9694
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !9698

if.then14:                                        ; preds = %if.then12
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9699
  %cache15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 28, !dbg !9701
  %27 = load %struct.StrokeCache*, %struct.StrokeCache** %cache15, align 8, !dbg !9701
  %current_r = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %27, i32 0, i32 54, !dbg !9702
  %28 = bitcast %struct.rcti* %current_r to i8*, !dbg !9703
  %29 = bitcast %struct.rcti* %r to i8*, !dbg !9703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 16, i1 false), !dbg !9703
  br label %if.end16, !dbg !9704

if.end16:                                         ; preds = %if.then14, %if.then12
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9705
  call void @sculpt_extend_redraw_rect_previous(%struct.Object* %30, %struct.rcti* %r), !dbg !9706
  %31 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9707
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %31, i32 0, i32 3, !dbg !9708
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !9709
  %32 = load i32, i32* %xmin, align 8, !dbg !9709
  %sub = sub nsw i32 %32, 2, !dbg !9710
  %xmin17 = getelementptr inbounds %struct.rcti, %struct.rcti* %r, i32 0, i32 0, !dbg !9711
  %33 = load i32, i32* %xmin17, align 4, !dbg !9712
  %add = add nsw i32 %33, %sub, !dbg !9712
  store i32 %add, i32* %xmin17, align 4, !dbg !9712
  %34 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9713
  %winrct18 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %34, i32 0, i32 3, !dbg !9714
  %xmin19 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct18, i32 0, i32 0, !dbg !9715
  %35 = load i32, i32* %xmin19, align 8, !dbg !9715
  %add20 = add nsw i32 %35, 2, !dbg !9716
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %r, i32 0, i32 1, !dbg !9717
  %36 = load i32, i32* %xmax, align 4, !dbg !9718
  %add21 = add nsw i32 %36, %add20, !dbg !9718
  store i32 %add21, i32* %xmax, align 4, !dbg !9718
  %37 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9719
  %winrct22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %37, i32 0, i32 3, !dbg !9720
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct22, i32 0, i32 2, !dbg !9721
  %38 = load i32, i32* %ymin, align 8, !dbg !9721
  %sub23 = sub nsw i32 %38, 2, !dbg !9722
  %ymin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %r, i32 0, i32 2, !dbg !9723
  %39 = load i32, i32* %ymin24, align 4, !dbg !9724
  %add25 = add nsw i32 %39, %sub23, !dbg !9724
  store i32 %add25, i32* %ymin24, align 4, !dbg !9724
  %40 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9725
  %winrct26 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %40, i32 0, i32 3, !dbg !9726
  %ymin27 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct26, i32 0, i32 2, !dbg !9727
  %41 = load i32, i32* %ymin27, align 8, !dbg !9727
  %add28 = add nsw i32 %41, 2, !dbg !9728
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %r, i32 0, i32 3, !dbg !9729
  %42 = load i32, i32* %ymax, align 4, !dbg !9730
  %add29 = add nsw i32 %42, %add28, !dbg !9730
  store i32 %add29, i32* %ymax, align 4, !dbg !9730
  %43 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9731
  %partial_redraw = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %43, i32 0, i32 21, !dbg !9732
  store i8 1, i8* %partial_redraw, align 8, !dbg !9733
  %44 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9734
  call void @ED_region_tag_redraw_partial(%struct.ARegion* %44, %struct.rcti* %r), !dbg !9735
  br label %if.end30, !dbg !9736

if.end30:                                         ; preds = %if.end16, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then8
  ret void, !dbg !9737
}

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local zeroext i8 @paint_supports_dynamic_size(%struct.Brush*, i32) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @BKE_brush_use_locked_size(%struct.Scene*, %struct.Brush*) #2

declare dso_local float @paint_calc_object_space_radius(%struct.ViewContext*, float*, float) #2

declare dso_local void @BKE_brush_unprojected_radius_set(%struct.Scene*, %struct.Brush*, float) #2

declare dso_local float @BKE_brush_unprojected_radius_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local i32 @BKE_brush_use_size_pressure(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_update_brush_delta(%struct.UnifiedPaintSettings* %ups, %struct.Object* %ob, %struct.Brush* %brush) #0 !dbg !9738 {
entry:
  %ups.addr = alloca %struct.UnifiedPaintSettings*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %mouse = alloca [2 x float], align 4
  %tool = alloca i32, align 4
  %grab_location = alloca [3 x float], align 4
  %imat = alloca [4 x [4 x float]], align 16
  %delta = alloca [3 x float], align 4
  %loc = alloca [3 x float], align 4
  %orig = alloca [3 x float], align 4
  store %struct.UnifiedPaintSettings* %ups, %struct.UnifiedPaintSettings** %ups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9747, metadata !DIExpression()), !dbg !9748
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9749
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9750
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9750
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9748
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !9751, metadata !DIExpression()), !dbg !9752
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9753
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !9754
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !9754
  store %struct.StrokeCache* %3, %struct.StrokeCache** %cache, align 8, !dbg !9752
  call void @llvm.dbg.declare(metadata [2 x float]* %mouse, metadata !9755, metadata !DIExpression()), !dbg !9757
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !9758
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9759
  %mouse2 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 18, !dbg !9760
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %mouse2, i64 0, i64 0, !dbg !9759
  %5 = load float, float* %arrayidx, align 8, !dbg !9759
  store float %5, float* %arrayinit.begin, align 4, !dbg !9758
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !9758
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9761
  %mouse3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 18, !dbg !9762
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %mouse3, i64 0, i64 1, !dbg !9761
  %7 = load float, float* %arrayidx4, align 4, !dbg !9761
  store float %7, float* %arrayinit.element, align 4, !dbg !9758
  call void @llvm.dbg.declare(metadata i32* %tool, metadata !9763, metadata !DIExpression()), !dbg !9764
  %8 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9765
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 34, !dbg !9766
  %9 = load i8, i8* %sculpt_tool, align 8, !dbg !9766
  %conv = zext i8 %9 to i32, !dbg !9765
  store i32 %conv, i32* %tool, align 4, !dbg !9764
  %10 = load i32, i32* %tool, align 4, !dbg !9767
  %cmp = icmp eq i32 %10, 5, !dbg !9767
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9767

lor.lhs.false:                                    ; preds = %entry
  %11 = load i32, i32* %tool, align 4, !dbg !9767
  %cmp6 = icmp eq i32 %11, 11, !dbg !9767
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !9767

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %12 = load i32, i32* %tool, align 4, !dbg !9767
  %cmp9 = icmp eq i32 %12, 18, !dbg !9767
  br i1 %cmp9, label %if.then, label %lor.lhs.false11, !dbg !9767

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %13 = load i32, i32* %tool, align 4, !dbg !9767
  %cmp12 = icmp eq i32 %13, 13, !dbg !9767
  br i1 %cmp12, label %if.then, label %lor.lhs.false14, !dbg !9767

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %14 = load i32, i32* %tool, align 4, !dbg !9767
  %cmp15 = icmp eq i32 %14, 12, !dbg !9767
  br i1 %cmp15, label %if.then, label %if.end110, !dbg !9769

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %grab_location, metadata !9770, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata [3 x float]* %delta, metadata !9775, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !9777, metadata !DIExpression()), !dbg !9778
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9779
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 20, !dbg !9781
  %16 = load i8, i8* %first_time, align 4, !dbg !9781
  %tobool = icmp ne i8 %16, 0, !dbg !9779
  br i1 %tobool, label %if.then17, label %if.else, !dbg !9782

if.then17:                                        ; preds = %if.then
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9783
  %orig_grab_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 29, !dbg !9785
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %orig_grab_location, i64 0, i64 0, !dbg !9783
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9786
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 13, !dbg !9787
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !9786
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay18), !dbg !9788
  br label %if.end25, !dbg !9789

if.else:                                          ; preds = %if.then
  %19 = load i32, i32* %tool, align 4, !dbg !9790
  %cmp19 = icmp eq i32 %19, 13, !dbg !9792
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !9793

if.then21:                                        ; preds = %if.else
  %20 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9794
  %true_location22 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %20, i32 0, i32 13, !dbg !9795
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %true_location22, i64 0, i64 0, !dbg !9794
  %21 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9796
  %grab_delta = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %21, i32 0, i32 26, !dbg !9797
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !9796
  call void @add_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !9798
  br label %if.end, !dbg !9798

if.end:                                           ; preds = %if.then21, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then17
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !9799
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9800
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 47, !dbg !9801
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9800
  %23 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9802
  %orig_grab_location28 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %23, i32 0, i32 29, !dbg !9803
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %orig_grab_location28, i64 0, i64 0, !dbg !9802
  call void @mul_v3_m4v3(float* %arraydecay26, [4 x float]* %arraydecay27, float* %arraydecay29), !dbg !9804
  %24 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9805
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %24, i32 0, i32 22, !dbg !9806
  %25 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !9806
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %25, i32 0, i32 3, !dbg !9807
  %26 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9807
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !9808
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !9809
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %grab_location, i64 0, i64 0, !dbg !9810
  call void @ED_view3d_win_to_3d(%struct.ARegion* %26, float* %arraydecay30, float* %arraydecay31, float* %arraydecay32), !dbg !9811
  %27 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9812
  %first_time33 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %27, i32 0, i32 20, !dbg !9814
  %28 = load i8, i8* %first_time33, align 4, !dbg !9814
  %tobool34 = icmp ne i8 %28, 0, !dbg !9812
  br i1 %tobool34, label %if.else73, label %if.then35, !dbg !9815

if.then35:                                        ; preds = %if.end25
  %29 = load i32, i32* %tool, align 4, !dbg !9816
  switch i32 %29, label %sw.epilog [
    i32 5, label %sw.bb
    i32 12, label %sw.bb
    i32 18, label %sw.bb47
    i32 11, label %sw.bb47
    i32 13, label %sw.bb47
  ], !dbg !9818

sw.bb:                                            ; preds = %if.then35, %if.then35
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !9819
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %grab_location, i64 0, i64 0, !dbg !9821
  %30 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9822
  %old_grab_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %30, i32 0, i32 28, !dbg !9823
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %old_grab_location, i64 0, i64 0, !dbg !9822
  call void @sub_v3_v3v3(float* %arraydecay36, float* %arraydecay37, float* %arraydecay38), !dbg !9824
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9825
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9826
  %obmat40 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 47, !dbg !9827
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat40, i64 0, i64 0, !dbg !9826
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay39, [4 x float]* %arraydecay41), !dbg !9828
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9829
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !9830
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay42, float* %arraydecay43), !dbg !9831
  %32 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9832
  %grab_delta44 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %32, i32 0, i32 26, !dbg !9833
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta44, i64 0, i64 0, !dbg !9832
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !9834
  call void @add_v3_v3(float* %arraydecay45, float* %arraydecay46), !dbg !9835
  br label %sw.epilog, !dbg !9836

sw.bb47:                                          ; preds = %if.then35, %if.then35, %if.then35
  %33 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !9837
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %33, i32 0, i32 16, !dbg !9839
  %34 = load i32, i32* %flag, align 8, !dbg !9839
  %and = and i32 %34, 256, !dbg !9840
  %tobool48 = icmp ne i32 %and, 0, !dbg !9840
  br i1 %tobool48, label %if.then49, label %if.else59, !dbg !9841

if.then49:                                        ; preds = %sw.bb47
  call void @llvm.dbg.declare(metadata [3 x float]* %orig, metadata !9842, metadata !DIExpression()), !dbg !9844
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %orig, i64 0, i64 0, !dbg !9845
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9846
  %obmat51 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 47, !dbg !9847
  %arraydecay52 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat51, i64 0, i64 0, !dbg !9846
  %36 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9848
  %orig_grab_location53 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %36, i32 0, i32 29, !dbg !9849
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %orig_grab_location53, i64 0, i64 0, !dbg !9848
  call void @mul_v3_m4v3(float* %arraydecay50, [4 x float]* %arraydecay52, float* %arraydecay54), !dbg !9850
  %37 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9851
  %grab_delta55 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %37, i32 0, i32 26, !dbg !9852
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta55, i64 0, i64 0, !dbg !9851
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %grab_location, i64 0, i64 0, !dbg !9853
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %orig, i64 0, i64 0, !dbg !9854
  call void @sub_v3_v3v3(float* %arraydecay56, float* %arraydecay57, float* %arraydecay58), !dbg !9855
  br label %if.end65, !dbg !9856

if.else59:                                        ; preds = %sw.bb47
  %38 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9857
  %grab_delta60 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %38, i32 0, i32 26, !dbg !9859
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta60, i64 0, i64 0, !dbg !9857
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %grab_location, i64 0, i64 0, !dbg !9860
  %39 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9861
  %old_grab_location63 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %39, i32 0, i32 28, !dbg !9862
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %old_grab_location63, i64 0, i64 0, !dbg !9861
  call void @sub_v3_v3v3(float* %arraydecay61, float* %arraydecay62, float* %arraydecay64), !dbg !9863
  br label %if.end65

if.end65:                                         ; preds = %if.else59, %if.then49
  %arraydecay66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9864
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9865
  %obmat67 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 47, !dbg !9866
  %arraydecay68 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat67, i64 0, i64 0, !dbg !9865
  %call69 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay66, [4 x float]* %arraydecay68), !dbg !9867
  %arraydecay70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9868
  %41 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9869
  %grab_delta71 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %41, i32 0, i32 26, !dbg !9870
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta71, i64 0, i64 0, !dbg !9869
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay70, float* %arraydecay72), !dbg !9871
  br label %sw.epilog, !dbg !9872

sw.epilog:                                        ; preds = %if.then35, %if.end65, %sw.bb
  br label %if.end76, !dbg !9873

if.else73:                                        ; preds = %if.end25
  %42 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9874
  %grab_delta74 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %42, i32 0, i32 26, !dbg !9876
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta74, i64 0, i64 0, !dbg !9874
  call void @zero_v3(float* %arraydecay75), !dbg !9877
  br label %if.end76

if.end76:                                         ; preds = %if.else73, %sw.epilog
  %43 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9878
  %old_grab_location77 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %43, i32 0, i32 28, !dbg !9879
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %old_grab_location77, i64 0, i64 0, !dbg !9878
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %grab_location, i64 0, i64 0, !dbg !9880
  call void @copy_v3_v3(float* %arraydecay78, float* %arraydecay79), !dbg !9881
  %44 = load i32, i32* %tool, align 4, !dbg !9882
  %cmp80 = icmp eq i32 %44, 5, !dbg !9884
  br i1 %cmp80, label %if.then82, label %if.else86, !dbg !9885

if.then82:                                        ; preds = %if.end76
  %45 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9886
  %anchored_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %45, i32 0, i32 42, !dbg !9887
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %anchored_location, i64 0, i64 0, !dbg !9886
  %46 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9888
  %true_location84 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %46, i32 0, i32 13, !dbg !9889
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %true_location84, i64 0, i64 0, !dbg !9888
  call void @copy_v3_v3(float* %arraydecay83, float* %arraydecay85), !dbg !9890
  br label %if.end95, !dbg !9890

if.else86:                                        ; preds = %if.end76
  %47 = load i32, i32* %tool, align 4, !dbg !9891
  %cmp87 = icmp eq i32 %47, 12, !dbg !9893
  br i1 %cmp87, label %if.then89, label %if.end94, !dbg !9894

if.then89:                                        ; preds = %if.else86
  %48 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9895
  %anchored_location90 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %48, i32 0, i32 42, !dbg !9896
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %anchored_location90, i64 0, i64 0, !dbg !9895
  %49 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9897
  %orig_grab_location92 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %49, i32 0, i32 29, !dbg !9898
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %orig_grab_location92, i64 0, i64 0, !dbg !9897
  call void @copy_v3_v3(float* %arraydecay91, float* %arraydecay93), !dbg !9899
  br label %if.end94, !dbg !9899

if.end94:                                         ; preds = %if.then89, %if.else86
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then82
  %50 = load i32, i32* %tool, align 4, !dbg !9900
  %cmp96 = icmp eq i32 %50, 5, !dbg !9900
  br i1 %cmp96, label %if.then101, label %lor.lhs.false98, !dbg !9900

lor.lhs.false98:                                  ; preds = %if.end95
  %51 = load i32, i32* %tool, align 4, !dbg !9900
  %cmp99 = icmp eq i32 %51, 12, !dbg !9900
  br i1 %cmp99, label %if.then101, label %if.end109, !dbg !9902

if.then101:                                       ; preds = %lor.lhs.false98, %if.end95
  %52 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9903
  %true_location102 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %52, i32 0, i32 13, !dbg !9905
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %true_location102, i64 0, i64 0, !dbg !9903
  %53 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9906
  %orig_grab_location104 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %53, i32 0, i32 29, !dbg !9907
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %orig_grab_location104, i64 0, i64 0, !dbg !9906
  call void @copy_v3_v3(float* %arraydecay103, float* %arraydecay105), !dbg !9908
  %54 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !9909
  %draw_anchored = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %54, i32 0, i32 9, !dbg !9910
  store i32 1, i32* %draw_anchored, align 8, !dbg !9911
  %55 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !9912
  %anchored_initial_mouse = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %55, i32 0, i32 14, !dbg !9913
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %anchored_initial_mouse, i64 0, i64 0, !dbg !9912
  %56 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !9914
  %initial_mouse = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %56, i32 0, i32 4, !dbg !9915
  %arraydecay107 = getelementptr inbounds [2 x float], [2 x float]* %initial_mouse, i64 0, i64 0, !dbg !9914
  call void @copy_v2_v2(float* %arraydecay106, float* %arraydecay107), !dbg !9916
  %57 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !9917
  %pixel_radius = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %57, i32 0, i32 21, !dbg !9918
  %58 = load float, float* %pixel_radius, align 8, !dbg !9918
  %conv108 = fptosi float %58 to i32, !dbg !9917
  %59 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !9919
  %anchored_size = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %59, i32 0, i32 10, !dbg !9920
  store i32 %conv108, i32* %anchored_size, align 4, !dbg !9921
  br label %if.end109, !dbg !9922

if.end109:                                        ; preds = %if.then101, %lor.lhs.false98
  br label %if.end110, !dbg !9923

if.end110:                                        ; preds = %if.end109, %lor.lhs.false14
  ret void, !dbg !9924
}

declare dso_local float @BLI_dial_angle(%struct.Dial*, float*) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

declare dso_local void @ED_view3d_win_to_3d(%struct.ARegion*, float*, float*, float*) #2

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @paint_mesh_restore_co(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !9925 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %brush = alloca %struct.Brush*, align 8
  %i = alloca i32, align 4
  %nodes = alloca %struct.PBVHNode**, align 8
  %n = alloca i32, align 4
  %totnode = alloca i32, align 4
  %unode = alloca %struct.SculptUndoNode*, align 8
  %type = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %orig_data = alloca %struct.SculptOrigVertData, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !9930, metadata !DIExpression()), !dbg !9931
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9932
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !9933
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !9933
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !9931
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !9934, metadata !DIExpression()), !dbg !9935
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9936
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !9937
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !9937
  store %struct.StrokeCache* %3, %struct.StrokeCache** %cache, align 8, !dbg !9935
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !9938, metadata !DIExpression()), !dbg !9939
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9940
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %4, i32 0, i32 0, !dbg !9941
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !9942
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !9939
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9943, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9947, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !9949, metadata !DIExpression()), !dbg !9950
  %5 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !9951
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9952
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 15, !dbg !9953
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !9953
  call void @BKE_pbvh_search_gather(%struct.PBVH* %7, i8 (%struct.PBVHNode*, i8*)* null, i8* null, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !9954
  store i32 0, i32* %n, align 4, !dbg !9955
  br label %for.cond, !dbg !9957

for.cond:                                         ; preds = %for.inc198, %entry
  %8 = load i32, i32* %n, align 4, !dbg !9958
  %9 = load i32, i32* %totnode, align 4, !dbg !9960
  %cmp = icmp slt i32 %8, %9, !dbg !9961
  br i1 %cmp, label %for.body, label %for.end200, !dbg !9962

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !9963, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9966, metadata !DIExpression()), !dbg !9967
  %10 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !9968
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 34, !dbg !9969
  %11 = load i8, i8* %sculpt_tool, align 8, !dbg !9969
  %conv = zext i8 %11 to i32, !dbg !9968
  %cmp2 = icmp eq i32 %conv, 19, !dbg !9970
  %12 = zext i1 %cmp2 to i64, !dbg !9968
  %cond = select i1 %cmp2, i32 2, i32 0, !dbg !9968
  store i32 %cond, i32* %type, align 4, !dbg !9967
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !9971
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 10, !dbg !9973
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9973
  %tobool = icmp ne %struct.BMesh* %14, null, !dbg !9971
  br i1 %tobool, label %if.then, label %if.else, !dbg !9974

if.then:                                          ; preds = %for.body
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9975
  %16 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9977
  %17 = load i32, i32* %n, align 4, !dbg !9978
  %idxprom = sext i32 %17 to i64, !dbg !9977
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %16, i64 %idxprom, !dbg !9977
  %18 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !9977
  %19 = load i32, i32* %type, align 4, !dbg !9979
  %call4 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %15, %struct.PBVHNode* %18, i32 %19), !dbg !9980
  store %struct.SculptUndoNode* %call4, %struct.SculptUndoNode** %unode, align 8, !dbg !9981
  br label %if.end, !dbg !9982

if.else:                                          ; preds = %for.body
  %20 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !9983
  %21 = load i32, i32* %n, align 4, !dbg !9985
  %idxprom5 = sext i32 %21 to i64, !dbg !9983
  %arrayidx6 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %20, i64 %idxprom5, !dbg !9983
  %22 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx6, align 8, !dbg !9983
  %call7 = call %struct.SculptUndoNode* @sculpt_undo_get_node(%struct.PBVHNode* %22), !dbg !9986
  store %struct.SculptUndoNode* %call7, %struct.SculptUndoNode** %unode, align 8, !dbg !9987
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !9988
  %tobool8 = icmp ne %struct.SculptUndoNode* %23, null, !dbg !9988
  br i1 %tobool8, label %if.then9, label %if.end197, !dbg !9990

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !9991, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData* %orig_data, metadata !9994, metadata !DIExpression()), !dbg !10009
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10010
  %25 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !10011
  call void @sculpt_orig_vert_data_unode_init(%struct.SculptOrigVertData* %orig_data, %struct.Object* %24, %struct.SculptUndoNode* %25), !dbg !10012
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10013
  %pbvh10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 15, !dbg !10013
  %27 = load %struct.PBVH*, %struct.PBVH** %pbvh10, align 8, !dbg !10013
  %28 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !10013
  %29 = load i32, i32* %n, align 4, !dbg !10013
  %idxprom11 = sext i32 %29 to i64, !dbg !10013
  %arrayidx12 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %28, i64 %idxprom11, !dbg !10013
  %30 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx12, align 8, !dbg !10013
  call void @pbvh_vertex_iter_init(%struct.PBVH* %27, %struct.PBVHNode* %30, %struct.PBVHVertexIter* %vd, i32 1), !dbg !10013
  %i13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !10014
  store i32 0, i32* %i13, align 4, !dbg !10014
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !10014
  store i32 0, i32* %g, align 8, !dbg !10014
  br label %for.cond14, !dbg !10014

for.cond14:                                       ; preds = %for.inc191, %if.then9
  %g15 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !10016
  %31 = load i32, i32* %g15, align 8, !dbg !10016
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !10016
  %32 = load i32, i32* %totgrid, align 8, !dbg !10016
  %cmp16 = icmp slt i32 %31, %32, !dbg !10016
  br i1 %cmp16, label %for.body18, label %for.end194, !dbg !10014

for.body18:                                       ; preds = %for.cond14
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !10018
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !10018
  %tobool19 = icmp ne %struct.CCGElem** %33, null, !dbg !10018
  br i1 %tobool19, label %if.then20, label %if.else34, !dbg !10021

if.then20:                                        ; preds = %for.body18
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !10022
  %34 = load i32, i32* %gridsize, align 4, !dbg !10022
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !10022
  store i32 %34, i32* %width, align 4, !dbg !10022
  %gridsize21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !10022
  %35 = load i32, i32* %gridsize21, align 4, !dbg !10022
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !10022
  store i32 %35, i32* %height, align 8, !dbg !10022
  %grids22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !10022
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids22, align 8, !dbg !10022
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !10022
  %37 = load i32*, i32** %grid_indices, align 8, !dbg !10022
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !10022
  %38 = load i32, i32* %g23, align 8, !dbg !10022
  %idxprom24 = sext i32 %38 to i64, !dbg !10022
  %arrayidx25 = getelementptr inbounds i32, i32* %37, i64 %idxprom24, !dbg !10022
  %39 = load i32, i32* %arrayidx25, align 4, !dbg !10022
  %idxprom26 = sext i32 %39 to i64, !dbg !10022
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %36, i64 %idxprom26, !dbg !10022
  %40 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !10022
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10022
  store %struct.CCGElem* %40, %struct.CCGElem** %grid, align 8, !dbg !10022
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !10024
  %41 = load i32**, i32*** %grid_hidden, align 8, !dbg !10024
  %grid_indices28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !10024
  %42 = load i32*, i32** %grid_indices28, align 8, !dbg !10024
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !10024
  %43 = load i32, i32* %g29, align 8, !dbg !10024
  %idxprom30 = sext i32 %43 to i64, !dbg !10024
  %arrayidx31 = getelementptr inbounds i32, i32* %42, i64 %idxprom30, !dbg !10024
  %44 = load i32, i32* %arrayidx31, align 4, !dbg !10024
  %idxprom32 = sext i32 %44 to i64, !dbg !10024
  %arrayidx33 = getelementptr inbounds i32*, i32** %41, i64 %idxprom32, !dbg !10024
  %45 = load i32*, i32** %arrayidx33, align 8, !dbg !10024
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !10024
  store i32* %45, i32** %gh, align 8, !dbg !10024
  br label %if.end37, !dbg !10022

if.else34:                                        ; preds = %for.body18
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !10026
  %46 = load i32, i32* %totvert, align 8, !dbg !10026
  %width35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !10026
  store i32 %46, i32* %width35, align 4, !dbg !10026
  %height36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !10026
  store i32 1, i32* %height36, align 8, !dbg !10026
  br label %if.end37

if.end37:                                         ; preds = %if.else34, %if.then20
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !10028
  store i32 0, i32* %gy, align 8, !dbg !10028
  br label %for.cond38, !dbg !10028

for.cond38:                                       ; preds = %for.inc187, %if.end37
  %gy39 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !10030
  %47 = load i32, i32* %gy39, align 8, !dbg !10030
  %height40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !10030
  %48 = load i32, i32* %height40, align 8, !dbg !10030
  %cmp41 = icmp slt i32 %47, %48, !dbg !10030
  br i1 %cmp41, label %for.body43, label %for.end190, !dbg !10028

for.body43:                                       ; preds = %for.cond38
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10032
  store i32 0, i32* %gx, align 4, !dbg !10032
  br label %for.cond44, !dbg !10032

for.cond44:                                       ; preds = %for.inc, %for.body43
  %gx45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10035
  %49 = load i32, i32* %gx45, align 4, !dbg !10035
  %width46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !10035
  %50 = load i32, i32* %width46, align 4, !dbg !10035
  %cmp47 = icmp slt i32 %49, %50, !dbg !10035
  br i1 %cmp47, label %for.body49, label %for.end, !dbg !10032

for.body49:                                       ; preds = %for.cond44
  %grid50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10037
  %51 = load %struct.CCGElem*, %struct.CCGElem** %grid50, align 8, !dbg !10037
  %tobool51 = icmp ne %struct.CCGElem* %51, null, !dbg !10037
  br i1 %tobool51, label %if.then52, label %if.else87, !dbg !10040

if.then52:                                        ; preds = %for.body49
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !10041
  %52 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !10041
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10041
  %53 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !10041
  %call54 = call float* @CCG_elem_co(%struct.CCGKey* %52, %struct.CCGElem* %53), !dbg !10041
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !10041
  store float* %call54, float** %co, align 8, !dbg !10041
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !10041
  %54 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !10041
  %grid56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10041
  %55 = load %struct.CCGElem*, %struct.CCGElem** %grid56, align 8, !dbg !10041
  %call57 = call float* @CCG_elem_no(%struct.CCGKey* %54, %struct.CCGElem* %55), !dbg !10041
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !10041
  store float* %call57, float** %fno, align 8, !dbg !10041
  %key58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !10041
  %56 = load %struct.CCGKey*, %struct.CCGKey** %key58, align 8, !dbg !10041
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %56, i32 0, i32 9, !dbg !10041
  %57 = load i32, i32* %has_mask, align 4, !dbg !10041
  %tobool59 = icmp ne i32 %57, 0, !dbg !10041
  br i1 %tobool59, label %cond.true, label %cond.false, !dbg !10041

cond.true:                                        ; preds = %if.then52
  %key60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !10041
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key60, align 8, !dbg !10041
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10041
  %59 = load %struct.CCGElem*, %struct.CCGElem** %grid61, align 8, !dbg !10041
  %call62 = call float* @CCG_elem_mask(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !10041
  br label %cond.end, !dbg !10041

cond.false:                                       ; preds = %if.then52
  br label %cond.end, !dbg !10041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond63 = phi float* [ %call62, %cond.true ], [ null, %cond.false ], !dbg !10041
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !10041
  store float* %cond63, float** %mask, align 8, !dbg !10041
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !10041
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !10041
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10041
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid65, align 8, !dbg !10041
  %call66 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %60, %struct.CCGElem* %61), !dbg !10041
  %grid67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !10041
  store %struct.CCGElem* %call66, %struct.CCGElem** %grid67, align 8, !dbg !10041
  %gh68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !10043
  %62 = load i32*, i32** %gh68, align 8, !dbg !10043
  %tobool69 = icmp ne i32* %62, null, !dbg !10043
  br i1 %tobool69, label %if.then70, label %if.end86, !dbg !10041

if.then70:                                        ; preds = %cond.end
  %gh71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !10045
  %63 = load i32*, i32** %gh71, align 8, !dbg !10045
  %gy72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !10045
  %64 = load i32, i32* %gy72, align 8, !dbg !10045
  %gridsize73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !10045
  %65 = load i32, i32* %gridsize73, align 4, !dbg !10045
  %mul = mul nsw i32 %64, %65, !dbg !10045
  %gx74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10045
  %66 = load i32, i32* %gx74, align 4, !dbg !10045
  %add = add nsw i32 %mul, %66, !dbg !10045
  %shr = ashr i32 %add, 5, !dbg !10045
  %idxprom75 = sext i32 %shr to i64, !dbg !10045
  %arrayidx76 = getelementptr inbounds i32, i32* %63, i64 %idxprom75, !dbg !10045
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !10045
  %gy77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !10045
  %68 = load i32, i32* %gy77, align 8, !dbg !10045
  %gridsize78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !10045
  %69 = load i32, i32* %gridsize78, align 4, !dbg !10045
  %mul79 = mul nsw i32 %68, %69, !dbg !10045
  %gx80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10045
  %70 = load i32, i32* %gx80, align 4, !dbg !10045
  %add81 = add nsw i32 %mul79, %70, !dbg !10045
  %and = and i32 %add81, 31, !dbg !10045
  %shl = shl i32 1, %and, !dbg !10045
  %and82 = and i32 %67, %shl, !dbg !10045
  %tobool83 = icmp ne i32 %and82, 0, !dbg !10045
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !10048

if.then84:                                        ; preds = %if.then70
  br label %for.inc, !dbg !10045

if.end85:                                         ; preds = %if.then70
  br label %if.end86, !dbg !10048

if.end86:                                         ; preds = %if.end85, %cond.end
  br label %if.end149, !dbg !10041

if.else87:                                        ; preds = %for.body49
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !10049
  %71 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !10049
  %tobool88 = icmp ne %struct.MVert* %71, null, !dbg !10049
  br i1 %tobool88, label %if.then89, label %if.else119, !dbg !10037

if.then89:                                        ; preds = %if.else87
  %mverts90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !10051
  %72 = load %struct.MVert*, %struct.MVert** %mverts90, align 8, !dbg !10051
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !10051
  %73 = load i32*, i32** %vert_indices, align 8, !dbg !10051
  %gx91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10051
  %74 = load i32, i32* %gx91, align 4, !dbg !10051
  %idxprom92 = sext i32 %74 to i64, !dbg !10051
  %arrayidx93 = getelementptr inbounds i32, i32* %73, i64 %idxprom92, !dbg !10051
  %75 = load i32, i32* %arrayidx93, align 4, !dbg !10051
  %idxprom94 = sext i32 %75 to i64, !dbg !10051
  %arrayidx95 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom94, !dbg !10051
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10051
  store %struct.MVert* %arrayidx95, %struct.MVert** %mvert, align 8, !dbg !10051
  %mvert96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10053
  %76 = load %struct.MVert*, %struct.MVert** %mvert96, align 8, !dbg !10053
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 0, i32 2, !dbg !10053
  %77 = load i8, i8* %flag, align 2, !dbg !10053
  %conv97 = zext i8 %77 to i32, !dbg !10053
  %and98 = and i32 %conv97, 16, !dbg !10053
  %tobool99 = icmp ne i32 %and98, 0, !dbg !10053
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !10051

if.then100:                                       ; preds = %if.then89
  br label %for.inc, !dbg !10053

if.end101:                                        ; preds = %if.then89
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10051
  %78 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !10051
  %co103 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i32 0, i32 0, !dbg !10051
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co103, i64 0, i64 0, !dbg !10051
  %co104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !10051
  store float* %arraydecay, float** %co104, align 8, !dbg !10051
  %mvert105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10051
  %79 = load %struct.MVert*, %struct.MVert** %mvert105, align 8, !dbg !10051
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 1, !dbg !10051
  %arraydecay106 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !10051
  %no107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !10051
  store i16* %arraydecay106, i16** %no107, align 8, !dbg !10051
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !10055
  %80 = load float*, float** %vmask, align 8, !dbg !10055
  %tobool108 = icmp ne float* %80, null, !dbg !10055
  br i1 %tobool108, label %if.then109, label %if.end118, !dbg !10051

if.then109:                                       ; preds = %if.end101
  %vmask110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !10055
  %81 = load float*, float** %vmask110, align 8, !dbg !10055
  %vert_indices111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !10055
  %82 = load i32*, i32** %vert_indices111, align 8, !dbg !10055
  %gx112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10055
  %83 = load i32, i32* %gx112, align 4, !dbg !10055
  %idxprom113 = sext i32 %83 to i64, !dbg !10055
  %arrayidx114 = getelementptr inbounds i32, i32* %82, i64 %idxprom113, !dbg !10055
  %84 = load i32, i32* %arrayidx114, align 4, !dbg !10055
  %idxprom115 = sext i32 %84 to i64, !dbg !10055
  %arrayidx116 = getelementptr inbounds float, float* %81, i64 %idxprom115, !dbg !10055
  %mask117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !10055
  store float* %arrayidx116, float** %mask117, align 8, !dbg !10055
  br label %if.end118, !dbg !10055

if.end118:                                        ; preds = %if.then109, %if.end101
  br label %if.end148, !dbg !10051

if.else119:                                       ; preds = %if.else87
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !10057
  %call120 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !10057
  %tobool121 = icmp ne i8 %call120, 0, !dbg !10057
  br i1 %tobool121, label %if.else126, label %if.then122, !dbg !10060

if.then122:                                       ; preds = %if.else119
  %bm_unique_verts123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !10061
  %call124 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts123), !dbg !10061
  %85 = bitcast i8* %call124 to %struct.BMVert*, !dbg !10061
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10061
  store %struct.BMVert* %85, %struct.BMVert** %bm_vert, align 8, !dbg !10061
  %bm_unique_verts125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !10061
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts125), !dbg !10061
  br label %if.end130, !dbg !10061

if.else126:                                       ; preds = %if.else119
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !10063
  %call127 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !10063
  %86 = bitcast i8* %call127 to %struct.BMVert*, !dbg !10063
  %bm_vert128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10063
  store %struct.BMVert* %86, %struct.BMVert** %bm_vert128, align 8, !dbg !10063
  %bm_other_verts129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !10063
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts129), !dbg !10063
  br label %if.end130

if.end130:                                        ; preds = %if.else126, %if.then122
  %bm_vert131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10065
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert131, align 8, !dbg !10065
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !10065
  %call132 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !10065
  %conv133 = zext i8 %call132 to i32, !dbg !10065
  %tobool134 = icmp ne i32 %conv133, 0, !dbg !10065
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !10060

if.then135:                                       ; preds = %if.end130
  br label %for.inc, !dbg !10065

if.end136:                                        ; preds = %if.end130
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10060
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !10060
  %co138 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 2, !dbg !10060
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %co138, i64 0, i64 0, !dbg !10060
  %co140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !10060
  store float* %arraydecay139, float** %co140, align 8, !dbg !10060
  %bm_vert141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10060
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert141, align 8, !dbg !10060
  %no142 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 3, !dbg !10060
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %no142, i64 0, i64 0, !dbg !10060
  %fno144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !10060
  store float* %arraydecay143, float** %fno144, align 8, !dbg !10060
  %bm_vert145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !10060
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert145, align 8, !dbg !10060
  %head146 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !10060
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head146, i32 0, i32 0, !dbg !10060
  %91 = load i8*, i8** %data, align 8, !dbg !10060
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !10060
  %92 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !10060
  %idx.ext = sext i32 %92 to i64, !dbg !10060
  %add.ptr = getelementptr inbounds i8, i8* %91, i64 %idx.ext, !dbg !10060
  %93 = bitcast i8* %add.ptr to float*, !dbg !10060
  %mask147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !10060
  store float* %93, float** %mask147, align 8, !dbg !10060
  br label %if.end148

if.end148:                                        ; preds = %if.end136, %if.end118
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end86
  call void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %vd), !dbg !10067
  %unode150 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 1, !dbg !10069
  %94 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode150, align 8, !dbg !10069
  %type151 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %94, i32 0, i32 2, !dbg !10071
  %95 = load i32, i32* %type151, align 8, !dbg !10071
  %cmp152 = icmp eq i32 %95, 0, !dbg !10072
  br i1 %cmp152, label %if.then154, label %if.else166, !dbg !10073

if.then154:                                       ; preds = %if.end149
  %co155 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !10074
  %96 = load float*, float** %co155, align 8, !dbg !10074
  %co156 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !10076
  %97 = load float*, float** %co156, align 8, !dbg !10076
  call void @copy_v3_v3(float* %96, float* %97), !dbg !10077
  %no157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !10078
  %98 = load i16*, i16** %no157, align 8, !dbg !10078
  %tobool158 = icmp ne i16* %98, null, !dbg !10080
  br i1 %tobool158, label %if.then159, label %if.else162, !dbg !10081

if.then159:                                       ; preds = %if.then154
  %no160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !10082
  %99 = load i16*, i16** %no160, align 8, !dbg !10082
  %no161 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 6, !dbg !10083
  %100 = load i16*, i16** %no161, align 8, !dbg !10083
  call void @copy_v3_v3_short(i16* %99, i16* %100), !dbg !10084
  br label %if.end165, !dbg !10084

if.else162:                                       ; preds = %if.then154
  %fno163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !10085
  %101 = load float*, float** %fno163, align 8, !dbg !10085
  %no164 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 6, !dbg !10086
  %102 = load i16*, i16** %no164, align 8, !dbg !10086
  call void @normal_short_to_float_v3(float* %101, i16* %102), !dbg !10087
  br label %if.end165

if.end165:                                        ; preds = %if.else162, %if.then159
  br label %if.end175, !dbg !10088

if.else166:                                       ; preds = %if.end149
  %unode167 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 1, !dbg !10089
  %103 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode167, align 8, !dbg !10089
  %type168 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %103, i32 0, i32 2, !dbg !10091
  %104 = load i32, i32* %type168, align 8, !dbg !10091
  %cmp169 = icmp eq i32 %104, 2, !dbg !10092
  br i1 %cmp169, label %if.then171, label %if.end174, !dbg !10093

if.then171:                                       ; preds = %if.else166
  %mask172 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 7, !dbg !10094
  %105 = load float, float* %mask172, align 8, !dbg !10094
  %mask173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !10096
  %106 = load float*, float** %mask173, align 8, !dbg !10096
  store float %105, float* %106, align 4, !dbg !10097
  br label %if.end174, !dbg !10098

if.end174:                                        ; preds = %if.then171, %if.else166
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end165
  %mvert176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10099
  %107 = load %struct.MVert*, %struct.MVert** %mvert176, align 8, !dbg !10099
  %tobool177 = icmp ne %struct.MVert* %107, null, !dbg !10101
  br i1 %tobool177, label %if.then178, label %if.end183, !dbg !10102

if.then178:                                       ; preds = %if.end175
  %mvert179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !10103
  %108 = load %struct.MVert*, %struct.MVert** %mvert179, align 8, !dbg !10103
  %flag180 = getelementptr inbounds %struct.MVert, %struct.MVert* %108, i32 0, i32 2, !dbg !10104
  %109 = load i8, i8* %flag180, align 2, !dbg !10105
  %conv181 = zext i8 %109 to i32, !dbg !10105
  %or = or i32 %conv181, 128, !dbg !10105
  %conv182 = trunc i32 %or to i8, !dbg !10105
  store i8 %conv182, i8* %flag180, align 2, !dbg !10105
  br label %if.end183, !dbg !10106

if.end183:                                        ; preds = %if.then178, %if.end175
  br label %for.inc, !dbg !10107

for.inc:                                          ; preds = %if.end183, %if.then135, %if.then100, %if.then84
  %gx184 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !10035
  %110 = load i32, i32* %gx184, align 4, !dbg !10035
  %inc = add nsw i32 %110, 1, !dbg !10035
  store i32 %inc, i32* %gx184, align 4, !dbg !10035
  %i185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !10035
  %111 = load i32, i32* %i185, align 4, !dbg !10035
  %inc186 = add nsw i32 %111, 1, !dbg !10035
  store i32 %inc186, i32* %i185, align 4, !dbg !10035
  br label %for.cond44, !dbg !10035, !llvm.loop !10108

for.end:                                          ; preds = %for.cond44
  br label %for.inc187, !dbg !10110

for.inc187:                                       ; preds = %for.end
  %gy188 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !10030
  %112 = load i32, i32* %gy188, align 8, !dbg !10030
  %inc189 = add nsw i32 %112, 1, !dbg !10030
  store i32 %inc189, i32* %gy188, align 8, !dbg !10030
  br label %for.cond38, !dbg !10030, !llvm.loop !10111

for.end190:                                       ; preds = %for.cond38
  br label %for.inc191, !dbg !10113

for.inc191:                                       ; preds = %for.end190
  %g192 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !10016
  %113 = load i32, i32* %g192, align 8, !dbg !10016
  %inc193 = add nsw i32 %113, 1, !dbg !10016
  store i32 %inc193, i32* %g192, align 8, !dbg !10016
  br label %for.cond14, !dbg !10016, !llvm.loop !10114

for.end194:                                       ; preds = %for.cond14
  %114 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !10116
  %115 = load i32, i32* %n, align 4, !dbg !10117
  %idxprom195 = sext i32 %115 to i64, !dbg !10116
  %arrayidx196 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %114, i64 %idxprom195, !dbg !10116
  %116 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx196, align 8, !dbg !10116
  call void @BKE_pbvh_node_mark_update(%struct.PBVHNode* %116), !dbg !10118
  br label %if.end197, !dbg !10119

if.end197:                                        ; preds = %for.end194, %if.end
  br label %for.inc198, !dbg !10120

for.inc198:                                       ; preds = %if.end197
  %117 = load i32, i32* %n, align 4, !dbg !10121
  %inc199 = add nsw i32 %117, 1, !dbg !10121
  store i32 %inc199, i32* %n, align 4, !dbg !10121
  br label %for.cond, !dbg !10122, !llvm.loop !10123

for.end200:                                       ; preds = %for.cond
  %118 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10125
  %face_normals = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %118, i32 0, i32 6, !dbg !10127
  %119 = load [3 x float]*, [3 x float]** %face_normals, align 8, !dbg !10127
  %tobool201 = icmp ne [3 x float]* %119, null, !dbg !10125
  br i1 %tobool201, label %if.then202, label %if.end217, !dbg !10128

if.then202:                                       ; preds = %for.end200
  store i32 0, i32* %i, align 4, !dbg !10129
  br label %for.cond203, !dbg !10132

for.cond203:                                      ; preds = %for.inc214, %if.then202
  %120 = load i32, i32* %i, align 4, !dbg !10133
  %121 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10135
  %totpoly = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %121, i32 0, i32 5, !dbg !10136
  %122 = load i32, i32* %totpoly, align 4, !dbg !10136
  %cmp204 = icmp slt i32 %120, %122, !dbg !10137
  br i1 %cmp204, label %for.body206, label %for.end216, !dbg !10138

for.body206:                                      ; preds = %for.cond203
  %123 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10139
  %face_normals207 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %123, i32 0, i32 6, !dbg !10141
  %124 = load [3 x float]*, [3 x float]** %face_normals207, align 8, !dbg !10141
  %125 = load i32, i32* %i, align 4, !dbg !10142
  %idxprom208 = sext i32 %125 to i64, !dbg !10139
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %124, i64 %idxprom208, !dbg !10139
  %arraydecay210 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx209, i64 0, i64 0, !dbg !10139
  %126 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !10143
  %face_norms = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %126, i32 0, i32 24, !dbg !10144
  %127 = load [3 x float]*, [3 x float]** %face_norms, align 8, !dbg !10144
  %128 = load i32, i32* %i, align 4, !dbg !10145
  %idxprom211 = sext i32 %128 to i64, !dbg !10143
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %127, i64 %idxprom211, !dbg !10143
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx212, i64 0, i64 0, !dbg !10143
  call void @copy_v3_v3(float* %arraydecay210, float* %arraydecay213), !dbg !10146
  br label %for.inc214, !dbg !10147

for.inc214:                                       ; preds = %for.body206
  %129 = load i32, i32* %i, align 4, !dbg !10148
  %inc215 = add nsw i32 %129, 1, !dbg !10148
  store i32 %inc215, i32* %i, align 4, !dbg !10148
  br label %for.cond203, !dbg !10149, !llvm.loop !10150

for.end216:                                       ; preds = %for.cond203
  br label %if.end217, !dbg !10152

if.end217:                                        ; preds = %for.end216, %for.end200
  %130 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !10153
  %tobool218 = icmp ne %struct.PBVHNode** %130, null, !dbg !10153
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !10155

if.then219:                                       ; preds = %if.end217
  %131 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10156
  %132 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !10157
  %133 = bitcast %struct.PBVHNode** %132 to i8*, !dbg !10157
  call void %131(i8* %133), !dbg !10156
  br label %if.end220, !dbg !10156

if.end220:                                        ; preds = %if.then219, %if.end217
  ret void, !dbg !10158
}

declare dso_local void @BKE_pbvh_search_gather(%struct.PBVH*, i8 (%struct.PBVHNode*, i8*)*, i8*, %struct.PBVHNode***, i32*) #2

declare dso_local %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object*, %struct.PBVHNode*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_orig_vert_data_unode_init(%struct.SculptOrigVertData* %data, %struct.Object* %ob, %struct.SculptUndoNode* %unode) #0 !dbg !10159 {
entry:
  %data.addr = alloca %struct.SculptOrigVertData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %unode.addr = alloca %struct.SculptUndoNode*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %bm = alloca %struct.BMesh*, align 8
  store %struct.SculptOrigVertData* %data, %struct.SculptOrigVertData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData** %data.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10165, metadata !DIExpression()), !dbg !10166
  store %struct.SculptUndoNode* %unode, %struct.SculptUndoNode** %unode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode.addr, metadata !10167, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !10169, metadata !DIExpression()), !dbg !10170
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10171
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !10172
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !10172
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !10170
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10173, metadata !DIExpression()), !dbg !10174
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10175
  %bm1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 10, !dbg !10176
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !10176
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !10174
  %4 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10177
  %5 = bitcast %struct.SculptOrigVertData* %4 to i8*, !dbg !10178
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false), !dbg !10178
  %6 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode.addr, align 8, !dbg !10179
  %7 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10180
  %unode2 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %7, i32 0, i32 1, !dbg !10181
  store %struct.SculptUndoNode* %6, %struct.SculptUndoNode** %unode2, align 8, !dbg !10182
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10183
  %tobool = icmp ne %struct.BMesh* %8, null, !dbg !10183
  br i1 %tobool, label %if.then, label %if.else, !dbg !10185

if.then:                                          ; preds = %entry
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10186
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 14, !dbg !10188
  %10 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !10188
  %11 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10189
  %bm_log3 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %11, i32 0, i32 0, !dbg !10190
  store %struct.BMLog* %10, %struct.BMLog** %bm_log3, align 8, !dbg !10191
  br label %if.end, !dbg !10192

if.else:                                          ; preds = %entry
  %12 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10193
  %unode4 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %12, i32 0, i32 1, !dbg !10195
  %13 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode4, align 8, !dbg !10195
  %co = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %13, i32 0, i32 5, !dbg !10196
  %14 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !10196
  %15 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10197
  %coords = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %15, i32 0, i32 2, !dbg !10198
  store [3 x float]* %14, [3 x float]** %coords, align 8, !dbg !10199
  %16 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10200
  %unode5 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %16, i32 0, i32 1, !dbg !10201
  %17 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode5, align 8, !dbg !10201
  %no = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %17, i32 0, i32 7, !dbg !10202
  %18 = load [3 x i16]*, [3 x i16]** %no, align 8, !dbg !10202
  %19 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10203
  %normals = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %19, i32 0, i32 3, !dbg !10204
  store [3 x i16]* %18, [3 x i16]** %normals, align 8, !dbg !10205
  %20 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10206
  %unode6 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %20, i32 0, i32 1, !dbg !10207
  %21 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode6, align 8, !dbg !10207
  %mask = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %21, i32 0, i32 8, !dbg !10208
  %22 = load float*, float** %mask, align 8, !dbg !10208
  %23 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !10209
  %vmasks = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %23, i32 0, i32 4, !dbg !10210
  store float* %22, float** %vmasks, align 8, !dbg !10211
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10212
}

declare dso_local void @pbvh_vertex_iter_init(%struct.PBVH*, %struct.PBVHNode*, %struct.PBVHVertexIter*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_co(%struct.CCGKey* %UNUSED_key, %struct.CCGElem* %elem) #0 !dbg !10213 {
entry:
  %UNUSED_key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %UNUSED_key, %struct.CCGKey** %UNUSED_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %UNUSED_key.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10223
  %1 = bitcast %struct.CCGElem* %0 to float*, !dbg !10224
  ret float* %1, !dbg !10225
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !10226 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10227, metadata !DIExpression()), !dbg !10228
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10231
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10232
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10233
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 5, !dbg !10234
  %3 = load i32, i32* %normal_offset, align 4, !dbg !10234
  %idx.ext = sext i32 %3 to i64, !dbg !10235
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10235
  %4 = bitcast i8* %add.ptr to float*, !dbg !10236
  ret float* %4, !dbg !10237
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !10238 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10239, metadata !DIExpression()), !dbg !10240
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10243
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10244
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10245
  %mask_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 6, !dbg !10246
  %3 = load i32, i32* %mask_offset, align 4, !dbg !10246
  %idx.ext = sext i32 %3 to i64, !dbg !10247
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10247
  %4 = bitcast i8* %add.ptr to float*, !dbg !10248
  ret float* %4, !dbg !10249
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !10250 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10253, metadata !DIExpression()), !dbg !10254
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10257
  %1 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10258
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %0, %struct.CCGElem* %1, i32 1), !dbg !10259
  ret %struct.CCGElem* %call, !dbg !10260
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %gsi) #0 !dbg !10261 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !10266, metadata !DIExpression()), !dbg !10267
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !10268
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !10269
  %call = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %1), !dbg !10270
  ret i8 %call, !dbg !10271
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %gsi) #0 !dbg !10272 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !10277
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !10278
  %call = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %1), !dbg !10279
  ret i8* %call, !dbg !10280
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_gsetIterator_step(%struct.GSetIterator* %gsi) #0 !dbg !10281 {
entry:
  %gsi.addr = alloca %struct.GSetIterator*, align 8
  store %struct.GSetIterator* %gsi, %struct.GSetIterator** %gsi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSetIterator** %gsi.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  %0 = load %struct.GSetIterator*, %struct.GSetIterator** %gsi.addr, align 8, !dbg !10286
  %1 = bitcast %struct.GSetIterator* %0 to %struct.GHashIterator*, !dbg !10287
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %1), !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !10290 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !10296, metadata !DIExpression()), !dbg !10297
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !10298, metadata !DIExpression()), !dbg !10299
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !10300
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !10301
  %1 = load i8, i8* %hflag1, align 1, !dbg !10301
  %conv = zext i8 %1 to i32, !dbg !10300
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !10302
  %conv2 = zext i8 %2 to i32, !dbg !10302
  %and = and i32 %conv, %conv2, !dbg !10303
  %conv3 = trunc i32 %and to i8, !dbg !10300
  ret i8 %conv3, !dbg !10304
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %iter) #0 !dbg !10305 {
entry:
  %orig_data.addr = alloca %struct.SculptOrigVertData*, align 8
  %iter.addr = alloca %struct.PBVHVertexIter*, align 8
  store %struct.SculptOrigVertData* %orig_data, %struct.SculptOrigVertData** %orig_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData** %orig_data.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  store %struct.PBVHVertexIter* %iter, %struct.PBVHVertexIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter** %iter.addr, metadata !10311, metadata !DIExpression()), !dbg !10312
  %0 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10313
  %unode = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %0, i32 0, i32 1, !dbg !10315
  %1 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !10315
  %type = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %1, i32 0, i32 2, !dbg !10316
  %2 = load i32, i32* %type, align 8, !dbg !10316
  %cmp = icmp eq i32 %2, 0, !dbg !10317
  br i1 %cmp, label %if.then, label %if.else17, !dbg !10318

if.then:                                          ; preds = %entry
  %3 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10319
  %coords = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %3, i32 0, i32 2, !dbg !10322
  %4 = load [3 x float]*, [3 x float]** %coords, align 8, !dbg !10322
  %tobool = icmp ne [3 x float]* %4, null, !dbg !10319
  br i1 %tobool, label %if.then1, label %if.else, !dbg !10323

if.then1:                                         ; preds = %if.then
  %5 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10324
  %coords2 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %5, i32 0, i32 2, !dbg !10326
  %6 = load [3 x float]*, [3 x float]** %coords2, align 8, !dbg !10326
  %7 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10327
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %7, i32 0, i32 5, !dbg !10328
  %8 = load i32, i32* %i, align 4, !dbg !10328
  %idxprom = sext i32 %8 to i64, !dbg !10324
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %6, i64 %idxprom, !dbg !10324
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10324
  %9 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10329
  %co = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %9, i32 0, i32 5, !dbg !10330
  store float* %arraydecay, float** %co, align 8, !dbg !10331
  br label %if.end, !dbg !10332

if.else:                                          ; preds = %if.then
  %10 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10333
  %bm_log = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %10, i32 0, i32 0, !dbg !10335
  %11 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !10335
  %12 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10336
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %12, i32 0, i32 23, !dbg !10337
  %13 = load %struct.BMVert*, %struct.BMVert** %bm_vert, align 8, !dbg !10337
  %call = call float* @BM_log_original_vert_co(%struct.BMLog* %11, %struct.BMVert* %13), !dbg !10338
  %14 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10339
  %co3 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %14, i32 0, i32 5, !dbg !10340
  store float* %call, float** %co3, align 8, !dbg !10341
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %15 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10342
  %normals = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %15, i32 0, i32 3, !dbg !10344
  %16 = load [3 x i16]*, [3 x i16]** %normals, align 8, !dbg !10344
  %tobool4 = icmp ne [3 x i16]* %16, null, !dbg !10342
  br i1 %tobool4, label %if.then5, label %if.else11, !dbg !10345

if.then5:                                         ; preds = %if.end
  %17 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10346
  %normals6 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %17, i32 0, i32 3, !dbg !10348
  %18 = load [3 x i16]*, [3 x i16]** %normals6, align 8, !dbg !10348
  %19 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10349
  %i7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %19, i32 0, i32 5, !dbg !10350
  %20 = load i32, i32* %i7, align 4, !dbg !10350
  %idxprom8 = sext i32 %20 to i64, !dbg !10346
  %arrayidx9 = getelementptr inbounds [3 x i16], [3 x i16]* %18, i64 %idxprom8, !dbg !10346
  %arraydecay10 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx9, i64 0, i64 0, !dbg !10346
  %21 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10351
  %no = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %21, i32 0, i32 6, !dbg !10352
  store i16* %arraydecay10, i16** %no, align 8, !dbg !10353
  br label %if.end16, !dbg !10354

if.else11:                                        ; preds = %if.end
  %22 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10355
  %bm_log12 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %22, i32 0, i32 0, !dbg !10357
  %23 = load %struct.BMLog*, %struct.BMLog** %bm_log12, align 8, !dbg !10357
  %24 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10358
  %bm_vert13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %24, i32 0, i32 23, !dbg !10359
  %25 = load %struct.BMVert*, %struct.BMVert** %bm_vert13, align 8, !dbg !10359
  %call14 = call i16* @BM_log_original_vert_no(%struct.BMLog* %23, %struct.BMVert* %25), !dbg !10360
  %26 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10361
  %no15 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %26, i32 0, i32 6, !dbg !10362
  store i16* %call14, i16** %no15, align 8, !dbg !10363
  br label %if.end16

if.end16:                                         ; preds = %if.else11, %if.then5
  br label %if.end35, !dbg !10364

if.else17:                                        ; preds = %entry
  %27 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10365
  %unode18 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %27, i32 0, i32 1, !dbg !10367
  %28 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode18, align 8, !dbg !10367
  %type19 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %28, i32 0, i32 2, !dbg !10368
  %29 = load i32, i32* %type19, align 8, !dbg !10368
  %cmp20 = icmp eq i32 %29, 2, !dbg !10369
  br i1 %cmp20, label %if.then21, label %if.end34, !dbg !10370

if.then21:                                        ; preds = %if.else17
  %30 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10371
  %vmasks = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %30, i32 0, i32 4, !dbg !10374
  %31 = load float*, float** %vmasks, align 8, !dbg !10374
  %tobool22 = icmp ne float* %31, null, !dbg !10371
  br i1 %tobool22, label %if.then23, label %if.else28, !dbg !10375

if.then23:                                        ; preds = %if.then21
  %32 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10376
  %vmasks24 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %32, i32 0, i32 4, !dbg !10378
  %33 = load float*, float** %vmasks24, align 8, !dbg !10378
  %34 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10379
  %i25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %34, i32 0, i32 5, !dbg !10380
  %35 = load i32, i32* %i25, align 4, !dbg !10380
  %idxprom26 = sext i32 %35 to i64, !dbg !10376
  %arrayidx27 = getelementptr inbounds float, float* %33, i64 %idxprom26, !dbg !10376
  %36 = load float, float* %arrayidx27, align 4, !dbg !10376
  %37 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10381
  %mask = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %37, i32 0, i32 7, !dbg !10382
  store float %36, float* %mask, align 8, !dbg !10383
  br label %if.end33, !dbg !10384

if.else28:                                        ; preds = %if.then21
  %38 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10385
  %bm_log29 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %38, i32 0, i32 0, !dbg !10387
  %39 = load %struct.BMLog*, %struct.BMLog** %bm_log29, align 8, !dbg !10387
  %40 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %iter.addr, align 8, !dbg !10388
  %bm_vert30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %40, i32 0, i32 23, !dbg !10389
  %41 = load %struct.BMVert*, %struct.BMVert** %bm_vert30, align 8, !dbg !10389
  %call31 = call float @BM_log_original_mask(%struct.BMLog* %39, %struct.BMVert* %41), !dbg !10390
  %42 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %orig_data.addr, align 8, !dbg !10391
  %mask32 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %42, i32 0, i32 7, !dbg !10392
  store float %call31, float* %mask32, align 8, !dbg !10393
  br label %if.end33

if.end33:                                         ; preds = %if.else28, %if.then23
  br label %if.end34, !dbg !10394

if.end34:                                         ; preds = %if.end33, %if.else17
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end16
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_short(i16* %r, i16* %a) #0 !dbg !10396 {
entry:
  %r.addr = alloca i16*, align 8
  %a.addr = alloca i16*, align 8
  store i16* %r, i16** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %r.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !10401, metadata !DIExpression()), !dbg !10402
  %0 = load i16*, i16** %a.addr, align 8, !dbg !10403
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !10403
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10403
  %2 = load i16*, i16** %r.addr, align 8, !dbg !10404
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !10404
  store i16 %1, i16* %arrayidx1, align 2, !dbg !10405
  %3 = load i16*, i16** %a.addr, align 8, !dbg !10406
  %arrayidx2 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !10406
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !10406
  %5 = load i16*, i16** %r.addr, align 8, !dbg !10407
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !10407
  store i16 %4, i16* %arrayidx3, align 2, !dbg !10408
  %6 = load i16*, i16** %a.addr, align 8, !dbg !10409
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !10409
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !10409
  %8 = load i16*, i16** %r.addr, align 8, !dbg !10410
  %arrayidx5 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !10410
  store i16 %7, i16* %arrayidx5, align 2, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !10413 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  %0 = load i16*, i16** %in.addr, align 8, !dbg !10420
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !10420
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10420
  %conv = sext i16 %1 to i32, !dbg !10420
  %conv1 = sitofp i32 %conv to float, !dbg !10420
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !10421
  %2 = load float*, float** %out.addr, align 8, !dbg !10422
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !10422
  store float %mul, float* %arrayidx2, align 4, !dbg !10423
  %3 = load i16*, i16** %in.addr, align 8, !dbg !10424
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !10424
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !10424
  %conv4 = sext i16 %4 to i32, !dbg !10424
  %conv5 = sitofp i32 %conv4 to float, !dbg !10424
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !10425
  %5 = load float*, float** %out.addr, align 8, !dbg !10426
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !10426
  store float %mul6, float* %arrayidx7, align 4, !dbg !10427
  %6 = load i16*, i16** %in.addr, align 8, !dbg !10428
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !10428
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !10428
  %conv9 = sext i16 %7 to i32, !dbg !10428
  %conv10 = sitofp i32 %conv9 to float, !dbg !10428
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !10429
  %8 = load float*, float** %out.addr, align 8, !dbg !10430
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !10430
  store float %mul11, float* %arrayidx12, align 4, !dbg !10431
  ret void, !dbg !10432
}

declare dso_local void @BKE_pbvh_node_mark_update(%struct.PBVHNode*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !10433 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10442
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10443
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10444
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 1, !dbg !10445
  %3 = load i32, i32* %elem_size, align 4, !dbg !10445
  %4 = load i32, i32* %offset.addr, align 4, !dbg !10446
  %mul = mul nsw i32 %3, %4, !dbg !10447
  %idx.ext = sext i32 %mul to i64, !dbg !10448
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10448
  %5 = bitcast i8* %add.ptr to %struct.CCGElem*, !dbg !10449
  ret %struct.CCGElem* %5, !dbg !10450
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !10451 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !10456
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !10457
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !10457
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !10458
  %lnot = xor i1 %tobool, true, !dbg !10458
  %lnot.ext = zext i1 %lnot to i32, !dbg !10458
  %conv = trunc i32 %lnot.ext to i8, !dbg !10458
  ret i8 %conv, !dbg !10459
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !10460 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !10465
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !10466
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !10466
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !10467
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !10467
  %3 = load i8*, i8** %key, align 8, !dbg !10467
  ret i8* %3, !dbg !10468
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local float* @BM_log_original_vert_co(%struct.BMLog*, %struct.BMVert*) #2

declare dso_local i16* @BM_log_original_vert_no(%struct.BMLog*, %struct.BMVert*) #2

declare dso_local float @BM_log_original_mask(%struct.BMLog*, %struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @calc_symmetry_feather(%struct.Sculpt* %sd, %struct.StrokeCache* %cache) #0 !dbg !10469 {
entry:
  %retval = alloca float, align 4
  %sd.addr = alloca %struct.Sculpt*, align 8
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %overlap = alloca float, align 4
  %symm = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !10472, metadata !DIExpression()), !dbg !10473
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10476
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !10478
  %symmetry_flags = getelementptr inbounds %struct.Paint, %struct.Paint* %paint, i32 0, i32 6, !dbg !10479
  %1 = load i32, i32* %symmetry_flags, align 4, !dbg !10479
  %and = and i32 %1, 8, !dbg !10480
  %tobool = icmp ne i32 %and, 0, !dbg !10480
  br i1 %tobool, label %if.then, label %if.else, !dbg !10481

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %overlap, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.declare(metadata i32* %symm, metadata !10485, metadata !DIExpression()), !dbg !10486
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10487
  %symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %2, i32 0, i32 30, !dbg !10488
  %3 = load i32, i32* %symmetry, align 4, !dbg !10488
  store i32 %3, i32* %symm, align 4, !dbg !10486
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10489, metadata !DIExpression()), !dbg !10490
  store float 0.000000e+00, float* %overlap, align 4, !dbg !10491
  store i32 0, i32* %i, align 4, !dbg !10492
  br label %for.cond, !dbg !10494

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !10495
  %5 = load i32, i32* %symm, align 4, !dbg !10497
  %cmp = icmp sle i32 %4, %5, !dbg !10498
  br i1 %cmp, label %for.body, label %for.end, !dbg !10499

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !10500
  %cmp1 = icmp eq i32 %6, 0, !dbg !10503
  br i1 %cmp1, label %if.then13, label %lor.lhs.false, !dbg !10504

lor.lhs.false:                                    ; preds = %for.body
  %7 = load i32, i32* %symm, align 4, !dbg !10505
  %8 = load i32, i32* %i, align 4, !dbg !10506
  %and2 = and i32 %7, %8, !dbg !10507
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10507
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !10508

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load i32, i32* %symm, align 4, !dbg !10509
  %cmp4 = icmp ne i32 %9, 5, !dbg !10510
  br i1 %cmp4, label %land.lhs.true7, label %lor.lhs.false5, !dbg !10511

lor.lhs.false5:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %i, align 4, !dbg !10512
  %cmp6 = icmp ne i32 %10, 3, !dbg !10513
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !10514

land.lhs.true7:                                   ; preds = %lor.lhs.false5, %land.lhs.true
  %11 = load i32, i32* %symm, align 4, !dbg !10515
  %cmp8 = icmp ne i32 %11, 6, !dbg !10516
  br i1 %cmp8, label %if.then13, label %lor.lhs.false9, !dbg !10517

lor.lhs.false9:                                   ; preds = %land.lhs.true7
  %12 = load i32, i32* %i, align 4, !dbg !10518
  %cmp10 = icmp ne i32 %12, 3, !dbg !10519
  br i1 %cmp10, label %land.lhs.true11, label %if.end, !dbg !10520

land.lhs.true11:                                  ; preds = %lor.lhs.false9
  %13 = load i32, i32* %i, align 4, !dbg !10521
  %cmp12 = icmp ne i32 %13, 5, !dbg !10522
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !10523

if.then13:                                        ; preds = %land.lhs.true11, %land.lhs.true7, %for.body
  %14 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10524
  %15 = load i32, i32* %i, align 4, !dbg !10526
  %conv = trunc i32 %15 to i8, !dbg !10526
  %call = call float @calc_overlap(%struct.StrokeCache* %14, i8 zeroext %conv, i8 zeroext 0, float 0.000000e+00), !dbg !10527
  %16 = load float, float* %overlap, align 4, !dbg !10528
  %add = fadd float %16, %call, !dbg !10528
  store float %add, float* %overlap, align 4, !dbg !10528
  %17 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10529
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10530
  %19 = load i32, i32* %i, align 4, !dbg !10531
  %conv14 = trunc i32 %19 to i8, !dbg !10531
  %call15 = call float @calc_radial_symmetry_feather(%struct.Sculpt* %17, %struct.StrokeCache* %18, i8 zeroext %conv14, i8 zeroext 88), !dbg !10532
  %20 = load float, float* %overlap, align 4, !dbg !10533
  %add16 = fadd float %20, %call15, !dbg !10533
  store float %add16, float* %overlap, align 4, !dbg !10533
  %21 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10534
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10535
  %23 = load i32, i32* %i, align 4, !dbg !10536
  %conv17 = trunc i32 %23 to i8, !dbg !10536
  %call18 = call float @calc_radial_symmetry_feather(%struct.Sculpt* %21, %struct.StrokeCache* %22, i8 zeroext %conv17, i8 zeroext 89), !dbg !10537
  %24 = load float, float* %overlap, align 4, !dbg !10538
  %add19 = fadd float %24, %call18, !dbg !10538
  store float %add19, float* %overlap, align 4, !dbg !10538
  %25 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10539
  %26 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10540
  %27 = load i32, i32* %i, align 4, !dbg !10541
  %conv20 = trunc i32 %27 to i8, !dbg !10541
  %call21 = call float @calc_radial_symmetry_feather(%struct.Sculpt* %25, %struct.StrokeCache* %26, i8 zeroext %conv20, i8 zeroext 90), !dbg !10542
  %28 = load float, float* %overlap, align 4, !dbg !10543
  %add22 = fadd float %28, %call21, !dbg !10543
  store float %add22, float* %overlap, align 4, !dbg !10543
  br label %if.end, !dbg !10544

if.end:                                           ; preds = %if.then13, %land.lhs.true11, %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false
  br label %for.inc, !dbg !10545

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %i, align 4, !dbg !10546
  %inc = add nsw i32 %29, 1, !dbg !10546
  store i32 %inc, i32* %i, align 4, !dbg !10546
  br label %for.cond, !dbg !10547, !llvm.loop !10548

for.end:                                          ; preds = %for.cond
  %30 = load float, float* %overlap, align 4, !dbg !10550
  %div = fdiv float 1.000000e+00, %30, !dbg !10551
  store float %div, float* %retval, align 4, !dbg !10552
  br label %return, !dbg !10552

if.else:                                          ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !10553
  br label %return, !dbg !10553

return:                                           ; preds = %if.else, %for.end
  %31 = load float, float* %retval, align 4, !dbg !10555
  ret float %31, !dbg !10555
}

; Function Attrs: noinline nounwind uwtable
define internal float @brush_strength(%struct.Sculpt* %sd, %struct.StrokeCache* %cache, float %feather, %struct.UnifiedPaintSettings* %ups) #0 !dbg !10556 {
entry:
  %retval = alloca float, align 4
  %sd.addr = alloca %struct.Sculpt*, align 8
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %feather.addr = alloca float, align 4
  %ups.addr = alloca %struct.UnifiedPaintSettings*, align 8
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %root_alpha = alloca float, align 4
  %alpha = alloca float, align 4
  %dir = alloca float, align 4
  %pressure = alloca float, align 4
  %pen_flip = alloca float, align 4
  %invert = alloca float, align 4
  %overlap = alloca float, align 4
  %flip = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !10559, metadata !DIExpression()), !dbg !10560
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !10561, metadata !DIExpression()), !dbg !10562
  store float %feather, float* %feather.addr, align 4
  call void @llvm.dbg.declare(metadata float* %feather.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  store %struct.UnifiedPaintSettings* %ups, %struct.UnifiedPaintSettings** %ups.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups.addr, metadata !10565, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !10567, metadata !DIExpression()), !dbg !10568
  %0 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10569
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %0, i32 0, i32 22, !dbg !10570
  %1 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !10570
  %scene1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %1, i32 0, i32 0, !dbg !10571
  %2 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !10571
  store %struct.Scene* %2, %struct.Scene** %scene, align 8, !dbg !10568
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !10572, metadata !DIExpression()), !dbg !10573
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10574
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %3, i32 0, i32 0, !dbg !10575
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !10576
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !10573
  call void @llvm.dbg.declare(metadata float* %root_alpha, metadata !10577, metadata !DIExpression()), !dbg !10578
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10579
  %5 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10580
  %call2 = call float @BKE_brush_alpha_get(%struct.Scene* %4, %struct.Brush* %5), !dbg !10581
  store float %call2, float* %root_alpha, align 4, !dbg !10578
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !10582, metadata !DIExpression()), !dbg !10583
  %6 = load float, float* %root_alpha, align 4, !dbg !10584
  %7 = load float, float* %root_alpha, align 4, !dbg !10585
  %mul = fmul float %6, %7, !dbg !10586
  store float %mul, float* %alpha, align 4, !dbg !10583
  call void @llvm.dbg.declare(metadata float* %dir, metadata !10587, metadata !DIExpression()), !dbg !10588
  %8 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10589
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 16, !dbg !10590
  %9 = load i32, i32* %flag, align 8, !dbg !10590
  %and = and i32 %9, 512, !dbg !10591
  %tobool = icmp ne i32 %and, 0, !dbg !10589
  %10 = zext i1 %tobool to i64, !dbg !10589
  %cond = select i1 %tobool, i32 -1, i32 1, !dbg !10589
  %conv = sitofp i32 %cond to float, !dbg !10589
  store float %conv, float* %dir, align 4, !dbg !10588
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !10592, metadata !DIExpression()), !dbg !10593
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10594
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10595
  %call3 = call i32 @BKE_brush_use_alpha_pressure(%struct.Scene* %11, %struct.Brush* %12), !dbg !10596
  %tobool4 = icmp ne i32 %call3, 0, !dbg !10596
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !10596

cond.true:                                        ; preds = %entry
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10597
  %pressure5 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 17, !dbg !10598
  %14 = load float, float* %pressure5, align 4, !dbg !10598
  br label %cond.end, !dbg !10596

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10596

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi float [ %14, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !10596
  store float %cond6, float* %pressure, align 4, !dbg !10593
  call void @llvm.dbg.declare(metadata float* %pen_flip, metadata !10599, metadata !DIExpression()), !dbg !10600
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10601
  %pen_flip7 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 15, !dbg !10602
  %16 = load i8, i8* %pen_flip7, align 8, !dbg !10602
  %conv8 = zext i8 %16 to i32, !dbg !10601
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !10601
  %17 = zext i1 %tobool9 to i64, !dbg !10601
  %cond10 = select i1 %tobool9, i32 -1, i32 1, !dbg !10601
  %conv11 = sitofp i32 %cond10 to float, !dbg !10601
  store float %conv11, float* %pen_flip, align 4, !dbg !10600
  call void @llvm.dbg.declare(metadata float* %invert, metadata !10603, metadata !DIExpression()), !dbg !10604
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10605
  %invert12 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 16, !dbg !10606
  %19 = load i8, i8* %invert12, align 1, !dbg !10606
  %conv13 = zext i8 %19 to i32, !dbg !10605
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !10605
  %20 = zext i1 %tobool14 to i64, !dbg !10605
  %cond15 = select i1 %tobool14, i32 -1, i32 1, !dbg !10605
  %conv16 = sitofp i32 %cond15 to float, !dbg !10605
  store float %conv16, float* %invert, align 4, !dbg !10604
  call void @llvm.dbg.declare(metadata float* %overlap, metadata !10607, metadata !DIExpression()), !dbg !10608
  %21 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups.addr, align 8, !dbg !10609
  %overlap_factor = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %21, i32 0, i32 13, !dbg !10610
  %22 = load float, float* %overlap_factor, align 8, !dbg !10610
  store float %22, float* %overlap, align 4, !dbg !10608
  call void @llvm.dbg.declare(metadata float* %flip, metadata !10611, metadata !DIExpression()), !dbg !10612
  %23 = load float, float* %dir, align 4, !dbg !10613
  %24 = load float, float* %invert, align 4, !dbg !10614
  %mul17 = fmul float %23, %24, !dbg !10615
  %25 = load float, float* %pen_flip, align 4, !dbg !10616
  %mul18 = fmul float %mul17, %25, !dbg !10617
  store float %mul18, float* %flip, align 4, !dbg !10612
  %26 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10618
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %26, i32 0, i32 34, !dbg !10619
  %27 = load i8, i8* %sculpt_tool, align 8, !dbg !10619
  %conv19 = zext i8 %27 to i32, !dbg !10618
  switch i32 %conv19, label %sw.default [
    i32 8, label %sw.bb
    i32 18, label %sw.bb
    i32 1, label %sw.bb
    i32 6, label %sw.bb
    i32 19, label %sw.bb24
    i32 16, label %sw.bb34
    i32 17, label %sw.bb34
    i32 4, label %sw.bb39
    i32 9, label %sw.bb51
    i32 10, label %sw.bb51
    i32 7, label %sw.bb51
    i32 2, label %sw.bb67
    i32 3, label %sw.bb70
    i32 11, label %sw.bb84
    i32 12, label %sw.bb90
    i32 13, label %sw.bb93
    i32 5, label %sw.bb95
    i32 14, label %sw.bb97
  ], !dbg !10620

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %28 = load float, float* %alpha, align 4, !dbg !10621
  %29 = load float, float* %flip, align 4, !dbg !10623
  %mul20 = fmul float %28, %29, !dbg !10624
  %30 = load float, float* %pressure, align 4, !dbg !10625
  %mul21 = fmul float %mul20, %30, !dbg !10626
  %31 = load float, float* %overlap, align 4, !dbg !10627
  %mul22 = fmul float %mul21, %31, !dbg !10628
  %32 = load float, float* %feather.addr, align 4, !dbg !10629
  %mul23 = fmul float %mul22, %32, !dbg !10630
  store float %mul23, float* %retval, align 4, !dbg !10631
  br label %return, !dbg !10631

sw.bb24:                                          ; preds = %cond.end
  %33 = load float, float* %overlap, align 4, !dbg !10632
  %add = fadd float 1.000000e+00, %33, !dbg !10633
  %div = fdiv float %add, 2.000000e+00, !dbg !10634
  store float %div, float* %overlap, align 4, !dbg !10635
  %34 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !10636
  %mask_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %34, i32 0, i32 37, !dbg !10637
  %35 = load i8, i8* %mask_tool, align 1, !dbg !10637
  %conv25 = zext i8 %35 to i32, !dbg !10638
  switch i32 %conv25, label %sw.epilog [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb31
  ], !dbg !10639

sw.bb26:                                          ; preds = %sw.bb24
  %36 = load float, float* %alpha, align 4, !dbg !10640
  %37 = load float, float* %flip, align 4, !dbg !10642
  %mul27 = fmul float %36, %37, !dbg !10643
  %38 = load float, float* %pressure, align 4, !dbg !10644
  %mul28 = fmul float %mul27, %38, !dbg !10645
  %39 = load float, float* %overlap, align 4, !dbg !10646
  %mul29 = fmul float %mul28, %39, !dbg !10647
  %40 = load float, float* %feather.addr, align 4, !dbg !10648
  %mul30 = fmul float %mul29, %40, !dbg !10649
  store float %mul30, float* %retval, align 4, !dbg !10650
  br label %return, !dbg !10650

sw.bb31:                                          ; preds = %sw.bb24
  %41 = load float, float* %alpha, align 4, !dbg !10651
  %42 = load float, float* %pressure, align 4, !dbg !10652
  %mul32 = fmul float %41, %42, !dbg !10653
  %43 = load float, float* %feather.addr, align 4, !dbg !10654
  %mul33 = fmul float %mul32, %43, !dbg !10655
  store float %mul33, float* %retval, align 4, !dbg !10656
  br label %return, !dbg !10656

sw.epilog:                                        ; preds = %sw.bb24
  br label %sw.bb34, !dbg !10657

sw.bb34:                                          ; preds = %cond.end, %cond.end, %sw.epilog
  %44 = load float, float* %alpha, align 4, !dbg !10658
  %45 = load float, float* %flip, align 4, !dbg !10659
  %mul35 = fmul float %44, %45, !dbg !10660
  %46 = load float, float* %pressure, align 4, !dbg !10661
  %mul36 = fmul float %mul35, %46, !dbg !10662
  %47 = load float, float* %overlap, align 4, !dbg !10663
  %mul37 = fmul float %mul36, %47, !dbg !10664
  %48 = load float, float* %feather.addr, align 4, !dbg !10665
  %mul38 = fmul float %mul37, %48, !dbg !10666
  store float %mul38, float* %retval, align 4, !dbg !10667
  br label %return, !dbg !10667

sw.bb39:                                          ; preds = %cond.end
  %49 = load float, float* %flip, align 4, !dbg !10668
  %cmp = fcmp ogt float %49, 0.000000e+00, !dbg !10670
  br i1 %cmp, label %if.then, label %if.else, !dbg !10671

if.then:                                          ; preds = %sw.bb39
  %50 = load float, float* %alpha, align 4, !dbg !10672
  %mul41 = fmul float 2.500000e-01, %50, !dbg !10674
  %51 = load float, float* %flip, align 4, !dbg !10675
  %mul42 = fmul float %mul41, %51, !dbg !10676
  %52 = load float, float* %pressure, align 4, !dbg !10677
  %mul43 = fmul float %mul42, %52, !dbg !10678
  %53 = load float, float* %overlap, align 4, !dbg !10679
  %mul44 = fmul float %mul43, %53, !dbg !10680
  %54 = load float, float* %feather.addr, align 4, !dbg !10681
  %mul45 = fmul float %mul44, %54, !dbg !10682
  store float %mul45, float* %retval, align 4, !dbg !10683
  br label %return, !dbg !10683

if.else:                                          ; preds = %sw.bb39
  %55 = load float, float* %alpha, align 4, !dbg !10684
  %mul46 = fmul float 1.250000e-01, %55, !dbg !10686
  %56 = load float, float* %flip, align 4, !dbg !10687
  %mul47 = fmul float %mul46, %56, !dbg !10688
  %57 = load float, float* %pressure, align 4, !dbg !10689
  %mul48 = fmul float %mul47, %57, !dbg !10690
  %58 = load float, float* %overlap, align 4, !dbg !10691
  %mul49 = fmul float %mul48, %58, !dbg !10692
  %59 = load float, float* %feather.addr, align 4, !dbg !10693
  %mul50 = fmul float %mul49, %59, !dbg !10694
  store float %mul50, float* %retval, align 4, !dbg !10695
  br label %return, !dbg !10695

sw.bb51:                                          ; preds = %cond.end, %cond.end, %cond.end
  %60 = load float, float* %flip, align 4, !dbg !10696
  %cmp52 = fcmp ogt float %60, 0.000000e+00, !dbg !10698
  br i1 %cmp52, label %if.then54, label %if.else61, !dbg !10699

if.then54:                                        ; preds = %sw.bb51
  %61 = load float, float* %overlap, align 4, !dbg !10700
  %add55 = fadd float 1.000000e+00, %61, !dbg !10702
  %div56 = fdiv float %add55, 2.000000e+00, !dbg !10703
  store float %div56, float* %overlap, align 4, !dbg !10704
  %62 = load float, float* %alpha, align 4, !dbg !10705
  %63 = load float, float* %flip, align 4, !dbg !10706
  %mul57 = fmul float %62, %63, !dbg !10707
  %64 = load float, float* %pressure, align 4, !dbg !10708
  %mul58 = fmul float %mul57, %64, !dbg !10709
  %65 = load float, float* %overlap, align 4, !dbg !10710
  %mul59 = fmul float %mul58, %65, !dbg !10711
  %66 = load float, float* %feather.addr, align 4, !dbg !10712
  %mul60 = fmul float %mul59, %66, !dbg !10713
  store float %mul60, float* %retval, align 4, !dbg !10714
  br label %return, !dbg !10714

if.else61:                                        ; preds = %sw.bb51
  %67 = load float, float* %alpha, align 4, !dbg !10715
  %mul62 = fmul float 5.000000e-01, %67, !dbg !10717
  %68 = load float, float* %flip, align 4, !dbg !10718
  %mul63 = fmul float %mul62, %68, !dbg !10719
  %69 = load float, float* %pressure, align 4, !dbg !10720
  %mul64 = fmul float %mul63, %69, !dbg !10721
  %70 = load float, float* %overlap, align 4, !dbg !10722
  %mul65 = fmul float %mul64, %70, !dbg !10723
  %71 = load float, float* %feather.addr, align 4, !dbg !10724
  %mul66 = fmul float %mul65, %71, !dbg !10725
  store float %mul66, float* %retval, align 4, !dbg !10726
  br label %return, !dbg !10726

sw.bb67:                                          ; preds = %cond.end
  %72 = load float, float* %alpha, align 4, !dbg !10727
  %73 = load float, float* %pressure, align 4, !dbg !10728
  %mul68 = fmul float %72, %73, !dbg !10729
  %74 = load float, float* %feather.addr, align 4, !dbg !10730
  %mul69 = fmul float %mul68, %74, !dbg !10731
  store float %mul69, float* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

sw.bb70:                                          ; preds = %cond.end
  %75 = load float, float* %flip, align 4, !dbg !10733
  %cmp71 = fcmp ogt float %75, 0.000000e+00, !dbg !10735
  br i1 %cmp71, label %if.then73, label %if.else78, !dbg !10736

if.then73:                                        ; preds = %sw.bb70
  %76 = load float, float* %alpha, align 4, !dbg !10737
  %77 = load float, float* %flip, align 4, !dbg !10739
  %mul74 = fmul float %76, %77, !dbg !10740
  %78 = load float, float* %pressure, align 4, !dbg !10741
  %mul75 = fmul float %mul74, %78, !dbg !10742
  %79 = load float, float* %overlap, align 4, !dbg !10743
  %mul76 = fmul float %mul75, %79, !dbg !10744
  %80 = load float, float* %feather.addr, align 4, !dbg !10745
  %mul77 = fmul float %mul76, %80, !dbg !10746
  store float %mul77, float* %retval, align 4, !dbg !10747
  br label %return, !dbg !10747

if.else78:                                        ; preds = %sw.bb70
  %81 = load float, float* %alpha, align 4, !dbg !10748
  %mul79 = fmul float 2.500000e-01, %81, !dbg !10750
  %82 = load float, float* %flip, align 4, !dbg !10751
  %mul80 = fmul float %mul79, %82, !dbg !10752
  %83 = load float, float* %pressure, align 4, !dbg !10753
  %mul81 = fmul float %mul80, %83, !dbg !10754
  %84 = load float, float* %overlap, align 4, !dbg !10755
  %mul82 = fmul float %mul81, %84, !dbg !10756
  %85 = load float, float* %feather.addr, align 4, !dbg !10757
  %mul83 = fmul float %mul82, %85, !dbg !10758
  store float %mul83, float* %retval, align 4, !dbg !10759
  br label %return, !dbg !10759

sw.bb84:                                          ; preds = %cond.end
  %86 = load float, float* %overlap, align 4, !dbg !10760
  %add85 = fadd float 1.000000e+00, %86, !dbg !10761
  %div86 = fdiv float %add85, 2.000000e+00, !dbg !10762
  store float %div86, float* %overlap, align 4, !dbg !10763
  %87 = load float, float* %alpha, align 4, !dbg !10764
  %88 = load float, float* %pressure, align 4, !dbg !10765
  %mul87 = fmul float %87, %88, !dbg !10766
  %89 = load float, float* %overlap, align 4, !dbg !10767
  %mul88 = fmul float %mul87, %89, !dbg !10768
  %90 = load float, float* %feather.addr, align 4, !dbg !10769
  %mul89 = fmul float %mul88, %90, !dbg !10770
  store float %mul89, float* %retval, align 4, !dbg !10771
  br label %return, !dbg !10771

sw.bb90:                                          ; preds = %cond.end
  %91 = load float, float* %alpha, align 4, !dbg !10772
  %92 = load float, float* %pressure, align 4, !dbg !10773
  %mul91 = fmul float %91, %92, !dbg !10774
  %93 = load float, float* %feather.addr, align 4, !dbg !10775
  %mul92 = fmul float %mul91, %93, !dbg !10776
  store float %mul92, float* %retval, align 4, !dbg !10777
  br label %return, !dbg !10777

sw.bb93:                                          ; preds = %cond.end
  %94 = load float, float* %root_alpha, align 4, !dbg !10778
  %95 = load float, float* %feather.addr, align 4, !dbg !10779
  %mul94 = fmul float %94, %95, !dbg !10780
  store float %mul94, float* %retval, align 4, !dbg !10781
  br label %return, !dbg !10781

sw.bb95:                                          ; preds = %cond.end
  %96 = load float, float* %root_alpha, align 4, !dbg !10782
  %97 = load float, float* %feather.addr, align 4, !dbg !10783
  %mul96 = fmul float %96, %97, !dbg !10784
  store float %mul96, float* %retval, align 4, !dbg !10785
  br label %return, !dbg !10785

sw.bb97:                                          ; preds = %cond.end
  %98 = load float, float* %alpha, align 4, !dbg !10786
  %99 = load float, float* %pressure, align 4, !dbg !10787
  %mul98 = fmul float %98, %99, !dbg !10788
  %100 = load float, float* %feather.addr, align 4, !dbg !10789
  %mul99 = fmul float %mul98, %100, !dbg !10790
  store float %mul99, float* %retval, align 4, !dbg !10791
  br label %return, !dbg !10791

sw.default:                                       ; preds = %cond.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !10792
  br label %return, !dbg !10792

return:                                           ; preds = %sw.default, %sw.bb97, %sw.bb95, %sw.bb93, %sw.bb90, %sw.bb84, %if.else78, %if.then73, %sw.bb67, %if.else61, %if.then54, %if.else, %if.then, %sw.bb34, %sw.bb31, %sw.bb26, %sw.bb
  %101 = load float, float* %retval, align 4, !dbg !10793
  ret float %101, !dbg !10793
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_brushdata_symm(%struct.Sculpt* %sd, %struct.StrokeCache* %cache, i8 zeroext %symm, i8 zeroext %axis, float %angle, float %UNUSED_feather) #0 !dbg !10794 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %symm.addr = alloca i8, align 1
  %axis.addr = alloca i8, align 1
  %angle.addr = alloca float, align 4
  %UNUSED_feather.addr = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !10797, metadata !DIExpression()), !dbg !10798
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  store i8 %symm, i8* %symm.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symm.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  store i8 %axis, i8* %axis.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %axis.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  store float %angle, float* %angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store float %UNUSED_feather, float* %UNUSED_feather.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_feather.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10809
  %1 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10810
  %location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %1, i32 0, i32 14, !dbg !10811
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !10810
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10812
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %2, i32 0, i32 13, !dbg !10813
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !10812
  %3 = load i8, i8* %symm.addr, align 1, !dbg !10814
  call void @flip_v3_v3(float* %arraydecay, float* %arraydecay1, i8 zeroext %3), !dbg !10815
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10816
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 27, !dbg !10817
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !10816
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10818
  %grab_delta = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 26, !dbg !10819
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !10818
  %6 = load i8, i8* %symm.addr, align 1, !dbg !10820
  call void @flip_v3_v3(float* %arraydecay2, float* %arraydecay3, i8 zeroext %6), !dbg !10821
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10822
  %view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 33, !dbg !10823
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %view_normal, i64 0, i64 0, !dbg !10822
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10824
  %true_view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 32, !dbg !10825
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %true_view_normal, i64 0, i64 0, !dbg !10824
  %9 = load i8, i8* %symm.addr, align 1, !dbg !10826
  call void @flip_v3_v3(float* %arraydecay4, float* %arraydecay5, i8 zeroext %9), !dbg !10827
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10828
  %symm_rot_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %10, i32 0, i32 39, !dbg !10829
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat, i64 0, i64 0, !dbg !10828
  call void @unit_m4([4 x float]* %arraydecay6), !dbg !10830
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10831
  %symm_rot_mat_inv = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 40, !dbg !10832
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat_inv, i64 0, i64 0, !dbg !10831
  call void @unit_m4([4 x float]* %arraydecay7), !dbg !10833
  %12 = load i8, i8* %axis.addr, align 1, !dbg !10834
  %tobool = icmp ne i8 %12, 0, !dbg !10834
  br i1 %tobool, label %if.then, label %if.end, !dbg !10836

if.then:                                          ; preds = %entry
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10837
  %symm_rot_mat8 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 39, !dbg !10839
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat8, i64 0, i64 0, !dbg !10837
  %14 = load i8, i8* %axis.addr, align 1, !dbg !10840
  %15 = load float, float* %angle.addr, align 4, !dbg !10841
  call void @rotate_m4([4 x float]* %arraydecay9, i8 zeroext %14, float %15), !dbg !10842
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10843
  %symm_rot_mat_inv10 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 40, !dbg !10844
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat_inv10, i64 0, i64 0, !dbg !10843
  %17 = load i8, i8* %axis.addr, align 1, !dbg !10845
  %18 = load float, float* %angle.addr, align 4, !dbg !10846
  %fneg = fneg float %18, !dbg !10847
  call void @rotate_m4([4 x float]* %arraydecay11, i8 zeroext %17, float %fneg), !dbg !10848
  br label %if.end, !dbg !10849

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10850
  %symm_rot_mat12 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %19, i32 0, i32 39, !dbg !10851
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat12, i64 0, i64 0, !dbg !10850
  %20 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10852
  %location14 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %20, i32 0, i32 14, !dbg !10853
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %location14, i64 0, i64 0, !dbg !10852
  call void @mul_m4_v3([4 x float]* %arraydecay13, float* %arraydecay15), !dbg !10854
  %21 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10855
  %symm_rot_mat16 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %21, i32 0, i32 39, !dbg !10856
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat16, i64 0, i64 0, !dbg !10855
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10857
  %grab_delta_symmetry18 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 27, !dbg !10858
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry18, i64 0, i64 0, !dbg !10857
  call void @mul_m4_v3([4 x float]* %arraydecay17, float* %arraydecay19), !dbg !10859
  %23 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10860
  %supports_gravity = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %23, i32 0, i32 50, !dbg !10862
  %24 = load i8, i8* %supports_gravity, align 8, !dbg !10862
  %tobool20 = icmp ne i8 %24, 0, !dbg !10860
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !10863

if.then21:                                        ; preds = %if.end
  %25 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10864
  %gravity_direction = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %25, i32 0, i32 52, !dbg !10866
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %gravity_direction, i64 0, i64 0, !dbg !10864
  %26 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10867
  %true_gravity_direction = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %26, i32 0, i32 51, !dbg !10868
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %true_gravity_direction, i64 0, i64 0, !dbg !10867
  %27 = load i8, i8* %symm.addr, align 1, !dbg !10869
  call void @flip_v3_v3(float* %arraydecay22, float* %arraydecay23, i8 zeroext %27), !dbg !10870
  %28 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10871
  %symm_rot_mat24 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %28, i32 0, i32 39, !dbg !10872
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat24, i64 0, i64 0, !dbg !10871
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10873
  %gravity_direction26 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 52, !dbg !10874
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %gravity_direction26, i64 0, i64 0, !dbg !10873
  call void @mul_m4_v3([4 x float]* %arraydecay25, float* %arraydecay27), !dbg !10875
  br label %if.end28, !dbg !10876

if.end28:                                         ; preds = %if.then21, %if.end
  ret void, !dbg !10877
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_radial_symmetry(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.Brush* %brush, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %action, i8 zeroext %symm, i32 %axis, float %feather) #0 !dbg !10878 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %action.addr = alloca void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, align 8
  %symm.addr = alloca i8, align 1
  %axis.addr = alloca i32, align 4
  %feather.addr = alloca float, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %i = alloca i32, align 4
  %angle = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !10881, metadata !DIExpression()), !dbg !10882
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10883, metadata !DIExpression()), !dbg !10884
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  store void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)* %action, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  store i8 %symm, i8* %symm.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symm.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store float %feather, float* %feather.addr, align 4
  call void @llvm.dbg.declare(metadata float* %feather.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !10895, metadata !DIExpression()), !dbg !10896
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10897
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !10898
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !10898
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !10896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10899, metadata !DIExpression()), !dbg !10900
  store i32 1, i32* %i, align 4, !dbg !10901
  br label %for.cond, !dbg !10903

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10904
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10906
  %radial_symm = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %3, i32 0, i32 2, !dbg !10907
  %4 = load i32, i32* %axis.addr, align 4, !dbg !10908
  %sub = sub nsw i32 %4, 88, !dbg !10909
  %idxprom = sext i32 %sub to i64, !dbg !10906
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %radial_symm, i64 0, i64 %idxprom, !dbg !10906
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10906
  %cmp = icmp slt i32 %2, %5, !dbg !10910
  br i1 %cmp, label %for.body, label %for.end, !dbg !10911

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %angle, metadata !10912, metadata !DIExpression()), !dbg !10914
  %6 = load i32, i32* %i, align 4, !dbg !10915
  %conv = sitofp i32 %6 to double, !dbg !10915
  %mul = fmul double 0x401921FB54442D18, %conv, !dbg !10916
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10917
  %radial_symm1 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %7, i32 0, i32 2, !dbg !10918
  %8 = load i32, i32* %axis.addr, align 4, !dbg !10919
  %sub2 = sub nsw i32 %8, 88, !dbg !10920
  %idxprom3 = sext i32 %sub2 to i64, !dbg !10917
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %radial_symm1, i64 0, i64 %idxprom3, !dbg !10917
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !10917
  %conv5 = sitofp i32 %9 to double, !dbg !10917
  %div = fdiv double %mul, %conv5, !dbg !10921
  %conv6 = fptrunc double %div to float, !dbg !10922
  store float %conv6, float* %angle, align 4, !dbg !10914
  %10 = load i32, i32* %i, align 4, !dbg !10923
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10924
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !10925
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !10925
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %12, i32 0, i32 38, !dbg !10926
  store i32 %10, i32* %radial_symmetry_pass, align 8, !dbg !10927
  %13 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10928
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !10929
  %cache7 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 28, !dbg !10930
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache7, align 8, !dbg !10930
  %16 = load i8, i8* %symm.addr, align 1, !dbg !10931
  %17 = load i32, i32* %axis.addr, align 4, !dbg !10932
  %conv8 = trunc i32 %17 to i8, !dbg !10932
  %18 = load float, float* %angle, align 4, !dbg !10933
  %19 = load float, float* %feather.addr, align 4, !dbg !10934
  call void @calc_brushdata_symm(%struct.Sculpt* %13, %struct.StrokeCache* %15, i8 zeroext %16, i8 zeroext %conv8, float %18, float %19), !dbg !10935
  %20 = load void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)*, void (%struct.Sculpt*, %struct.Object*, %struct.Brush*)** %action.addr, align 8, !dbg !10936
  %21 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !10937
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10938
  %23 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !10939
  call void %20(%struct.Sculpt* %21, %struct.Object* %22, %struct.Brush* %23), !dbg !10936
  br label %for.inc, !dbg !10940

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !10941
  %inc = add nsw i32 %24, 1, !dbg !10941
  store i32 %inc, i32* %i, align 4, !dbg !10941
  br label %for.cond, !dbg !10942, !llvm.loop !10943

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind uwtable
define internal float @calc_overlap(%struct.StrokeCache* %cache, i8 zeroext %symm, i8 zeroext %axis, float %angle) #0 !dbg !10946 {
entry:
  %retval = alloca float, align 4
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %symm.addr = alloca i8, align 1
  %axis.addr = alloca i8, align 1
  %angle.addr = alloca float, align 4
  %mirror = alloca [3 x float], align 4
  %distsq = alloca float, align 4
  %mat = alloca [4 x [4 x float]], align 16
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !10949, metadata !DIExpression()), !dbg !10950
  store i8 %symm, i8* %symm.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symm.addr, metadata !10951, metadata !DIExpression()), !dbg !10952
  store i8 %axis, i8* %axis.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %axis.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  store float %angle, float* %angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle.addr, metadata !10955, metadata !DIExpression()), !dbg !10956
  call void @llvm.dbg.declare(metadata [3 x float]* %mirror, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata float* %distsq, metadata !10959, metadata !DIExpression()), !dbg !10960
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %mirror, i64 0, i64 0, !dbg !10961
  %0 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10962
  %true_location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %0, i32 0, i32 13, !dbg !10963
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %true_location, i64 0, i64 0, !dbg !10962
  %1 = load i8, i8* %symm.addr, align 1, !dbg !10964
  call void @flip_v3_v3(float* %arraydecay, float* %arraydecay1, i8 zeroext %1), !dbg !10965
  %2 = load i8, i8* %axis.addr, align 1, !dbg !10966
  %conv = zext i8 %2 to i32, !dbg !10966
  %cmp = icmp ne i32 %conv, 0, !dbg !10968
  br i1 %cmp, label %if.then, label %if.end, !dbg !10969

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !10970, metadata !DIExpression()), !dbg !10972
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10973
  call void @unit_m4([4 x float]* %arraydecay3), !dbg !10974
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10975
  %3 = load i8, i8* %axis.addr, align 1, !dbg !10976
  %4 = load float, float* %angle.addr, align 4, !dbg !10977
  call void @rotate_m4([4 x float]* %arraydecay4, i8 zeroext %3, float %4), !dbg !10978
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10979
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %mirror, i64 0, i64 0, !dbg !10980
  call void @mul_m4_v3([4 x float]* %arraydecay5, float* %arraydecay6), !dbg !10981
  br label %if.end, !dbg !10982

if.end:                                           ; preds = %if.then, %entry
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %mirror, i64 0, i64 0, !dbg !10983
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10984
  %true_location8 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 13, !dbg !10985
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %true_location8, i64 0, i64 0, !dbg !10984
  %call = call float @len_squared_v3v3(float* %arraydecay7, float* %arraydecay9), !dbg !10986
  store float %call, float* %distsq, align 4, !dbg !10987
  %6 = load float, float* %distsq, align 4, !dbg !10988
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10990
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 12, !dbg !10991
  %8 = load float, float* %radius_squared, align 4, !dbg !10991
  %mul = fmul float 4.000000e+00, %8, !dbg !10992
  %cmp10 = fcmp ole float %6, %mul, !dbg !10993
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !10994

if.then12:                                        ; preds = %if.end
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !10995
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 11, !dbg !10996
  %10 = load float, float* %radius, align 8, !dbg !10996
  %mul13 = fmul float 2.000000e+00, %10, !dbg !10997
  %11 = load float, float* %distsq, align 4, !dbg !10998
  %call14 = call float @sqrtf(float %11) #5, !dbg !10999
  %sub = fsub float %mul13, %call14, !dbg !11000
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !11001
  %radius15 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %12, i32 0, i32 11, !dbg !11002
  %13 = load float, float* %radius15, align 8, !dbg !11002
  %mul16 = fmul float 2.000000e+00, %13, !dbg !11003
  %div = fdiv float %sub, %mul16, !dbg !11004
  store float %div, float* %retval, align 4, !dbg !11005
  br label %return, !dbg !11005

if.else:                                          ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !11006
  br label %return, !dbg !11006

return:                                           ; preds = %if.else, %if.then12
  %14 = load float, float* %retval, align 4, !dbg !11007
  ret float %14, !dbg !11007
}

; Function Attrs: noinline nounwind uwtable
define internal float @calc_radial_symmetry_feather(%struct.Sculpt* %sd, %struct.StrokeCache* %cache, i8 zeroext %symm, i8 zeroext %axis) #0 !dbg !11008 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %symm.addr = alloca i8, align 1
  %axis.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %overlap = alloca float, align 4
  %angle = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11011, metadata !DIExpression()), !dbg !11012
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  store i8 %symm, i8* %symm.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symm.addr, metadata !11015, metadata !DIExpression()), !dbg !11016
  store i8 %axis, i8* %axis.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %axis.addr, metadata !11017, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11019, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.declare(metadata float* %overlap, metadata !11021, metadata !DIExpression()), !dbg !11022
  store float 0.000000e+00, float* %overlap, align 4, !dbg !11023
  store i32 1, i32* %i, align 4, !dbg !11024
  br label %for.cond, !dbg !11026

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11027
  %1 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11029
  %radial_symm = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %1, i32 0, i32 2, !dbg !11030
  %2 = load i8, i8* %axis.addr, align 1, !dbg !11031
  %conv = zext i8 %2 to i32, !dbg !11031
  %sub = sub nsw i32 %conv, 88, !dbg !11032
  %idxprom = sext i32 %sub to i64, !dbg !11029
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %radial_symm, i64 0, i64 %idxprom, !dbg !11029
  %3 = load i32, i32* %arrayidx, align 4, !dbg !11029
  %cmp = icmp slt i32 %0, %3, !dbg !11033
  br i1 %cmp, label %for.body, label %for.end, !dbg !11034

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %angle, metadata !11035, metadata !DIExpression()), !dbg !11037
  %4 = load i32, i32* %i, align 4, !dbg !11038
  %conv2 = sitofp i32 %4 to double, !dbg !11038
  %mul = fmul double 0x401921FB54442D18, %conv2, !dbg !11039
  %5 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11040
  %radial_symm3 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %5, i32 0, i32 2, !dbg !11041
  %6 = load i8, i8* %axis.addr, align 1, !dbg !11042
  %conv4 = zext i8 %6 to i32, !dbg !11042
  %sub5 = sub nsw i32 %conv4, 88, !dbg !11043
  %idxprom6 = sext i32 %sub5 to i64, !dbg !11040
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %radial_symm3, i64 0, i64 %idxprom6, !dbg !11040
  %7 = load i32, i32* %arrayidx7, align 4, !dbg !11040
  %conv8 = sitofp i32 %7 to double, !dbg !11040
  %div = fdiv double %mul, %conv8, !dbg !11044
  %conv9 = fptrunc double %div to float, !dbg !11045
  store float %conv9, float* %angle, align 4, !dbg !11037
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !11046
  %9 = load i8, i8* %symm.addr, align 1, !dbg !11047
  %10 = load i8, i8* %axis.addr, align 1, !dbg !11048
  %11 = load float, float* %angle, align 4, !dbg !11049
  %call = call float @calc_overlap(%struct.StrokeCache* %8, i8 zeroext %9, i8 zeroext %10, float %11), !dbg !11050
  %12 = load float, float* %overlap, align 4, !dbg !11051
  %add = fadd float %12, %call, !dbg !11051
  store float %add, float* %overlap, align 4, !dbg !11051
  br label %for.inc, !dbg !11052

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !11053
  %inc = add nsw i32 %13, 1, !dbg !11053
  store i32 %inc, i32* %i, align 4, !dbg !11053
  br label %for.cond, !dbg !11054, !llvm.loop !11055

for.end:                                          ; preds = %for.cond
  %14 = load float, float* %overlap, align 4, !dbg !11057
  ret float %14, !dbg !11058
}

declare dso_local void @flip_v3_v3(float*, float*, i8 zeroext) #2

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local void @rotate_m4([4 x float]*, i8 zeroext, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !11059 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !11064, metadata !DIExpression()), !dbg !11065
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !11066
  %0 = load float*, float** %b.addr, align 8, !dbg !11067
  %1 = load float*, float** %a.addr, align 8, !dbg !11068
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !11069
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !11070
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !11071
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !11072
  ret float %call, !dbg !11073
}

declare dso_local float @BKE_brush_alpha_get(%struct.Scene*, %struct.Brush*) #2

declare dso_local i32 @BKE_brush_use_alpha_pressure(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_search_sphere_cb(%struct.PBVHNode* %node, i8* %data_v) #0 !dbg !11074 {
entry:
  %node.addr = alloca %struct.PBVHNode*, align 8
  %data_v.addr = alloca i8*, align 8
  %data = alloca %struct.SculptSearchSphereData*, align 8
  %center = alloca float*, align 8
  %nearest = alloca [3 x float], align 4
  %t = alloca [3 x float], align 4
  %bb_min = alloca [3 x float], align 4
  %bb_max = alloca [3 x float], align 4
  %i = alloca i32, align 4
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  store i8* %data_v, i8** %data_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_v.addr, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.declare(metadata %struct.SculptSearchSphereData** %data, metadata !11081, metadata !DIExpression()), !dbg !11083
  %0 = load i8*, i8** %data_v.addr, align 8, !dbg !11084
  %1 = bitcast i8* %0 to %struct.SculptSearchSphereData*, !dbg !11084
  store %struct.SculptSearchSphereData* %1, %struct.SculptSearchSphereData** %data, align 8, !dbg !11083
  call void @llvm.dbg.declare(metadata float** %center, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = load %struct.SculptSearchSphereData*, %struct.SculptSearchSphereData** %data, align 8, !dbg !11087
  %ss = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %2, i32 0, i32 1, !dbg !11088
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11088
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !11089
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11089
  %location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 14, !dbg !11090
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !11087
  store float* %arraydecay, float** %center, align 8, !dbg !11086
  call void @llvm.dbg.declare(metadata [3 x float]* %nearest, metadata !11091, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.declare(metadata [3 x float]* %t, metadata !11093, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_min, metadata !11095, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_max, metadata !11097, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11099, metadata !DIExpression()), !dbg !11100
  %5 = load %struct.SculptSearchSphereData*, %struct.SculptSearchSphereData** %data, align 8, !dbg !11101
  %original = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %5, i32 0, i32 3, !dbg !11103
  %6 = load i8, i8* %original, align 4, !dbg !11103
  %tobool = icmp ne i8 %6, 0, !dbg !11101
  br i1 %tobool, label %if.then, label %if.else, !dbg !11104

if.then:                                          ; preds = %entry
  %7 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !11105
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !11106
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !11107
  call void @BKE_pbvh_node_get_original_BB(%struct.PBVHNode* %7, float* %arraydecay1, float* %arraydecay2), !dbg !11108
  br label %if.end, !dbg !11108

if.else:                                          ; preds = %entry
  %8 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !11109
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !11110
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !11111
  call void @BKE_pbvh_node_get_BB(%struct.PBVHNode* %8, float* %arraydecay3, float* %arraydecay4), !dbg !11112
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !11113
  br label %for.cond, !dbg !11115

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !11116
  %cmp = icmp slt i32 %9, 3, !dbg !11118
  br i1 %cmp, label %for.body, label %for.end, !dbg !11119

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !11120
  %idxprom = sext i32 %10 to i64, !dbg !11123
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 %idxprom, !dbg !11123
  %11 = load float, float* %arrayidx, align 4, !dbg !11123
  %12 = load float*, float** %center, align 8, !dbg !11124
  %13 = load i32, i32* %i, align 4, !dbg !11125
  %idxprom5 = sext i32 %13 to i64, !dbg !11124
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 %idxprom5, !dbg !11124
  %14 = load float, float* %arrayidx6, align 4, !dbg !11124
  %cmp7 = fcmp ogt float %11, %14, !dbg !11126
  br i1 %cmp7, label %if.then8, label %if.else13, !dbg !11127

if.then8:                                         ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !11128
  %idxprom9 = sext i32 %15 to i64, !dbg !11129
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 %idxprom9, !dbg !11129
  %16 = load float, float* %arrayidx10, align 4, !dbg !11129
  %17 = load i32, i32* %i, align 4, !dbg !11130
  %idxprom11 = sext i32 %17 to i64, !dbg !11131
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %nearest, i64 0, i64 %idxprom11, !dbg !11131
  store float %16, float* %arrayidx12, align 4, !dbg !11132
  br label %if.end30, !dbg !11131

if.else13:                                        ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !11133
  %idxprom14 = sext i32 %18 to i64, !dbg !11135
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 %idxprom14, !dbg !11135
  %19 = load float, float* %arrayidx15, align 4, !dbg !11135
  %20 = load float*, float** %center, align 8, !dbg !11136
  %21 = load i32, i32* %i, align 4, !dbg !11137
  %idxprom16 = sext i32 %21 to i64, !dbg !11136
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 %idxprom16, !dbg !11136
  %22 = load float, float* %arrayidx17, align 4, !dbg !11136
  %cmp18 = fcmp olt float %19, %22, !dbg !11138
  br i1 %cmp18, label %if.then19, label %if.else24, !dbg !11139

if.then19:                                        ; preds = %if.else13
  %23 = load i32, i32* %i, align 4, !dbg !11140
  %idxprom20 = sext i32 %23 to i64, !dbg !11141
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 %idxprom20, !dbg !11141
  %24 = load float, float* %arrayidx21, align 4, !dbg !11141
  %25 = load i32, i32* %i, align 4, !dbg !11142
  %idxprom22 = sext i32 %25 to i64, !dbg !11143
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %nearest, i64 0, i64 %idxprom22, !dbg !11143
  store float %24, float* %arrayidx23, align 4, !dbg !11144
  br label %if.end29, !dbg !11143

if.else24:                                        ; preds = %if.else13
  %26 = load float*, float** %center, align 8, !dbg !11145
  %27 = load i32, i32* %i, align 4, !dbg !11146
  %idxprom25 = sext i32 %27 to i64, !dbg !11145
  %arrayidx26 = getelementptr inbounds float, float* %26, i64 %idxprom25, !dbg !11145
  %28 = load float, float* %arrayidx26, align 4, !dbg !11145
  %29 = load i32, i32* %i, align 4, !dbg !11147
  %idxprom27 = sext i32 %29 to i64, !dbg !11148
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %nearest, i64 0, i64 %idxprom27, !dbg !11148
  store float %28, float* %arrayidx28, align 4, !dbg !11149
  br label %if.end29

if.end29:                                         ; preds = %if.else24, %if.then19
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then8
  br label %for.inc, !dbg !11150

for.inc:                                          ; preds = %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !11151
  %inc = add nsw i32 %30, 1, !dbg !11151
  store i32 %inc, i32* %i, align 4, !dbg !11151
  br label %for.cond, !dbg !11152, !llvm.loop !11153

for.end:                                          ; preds = %for.cond
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !11155
  %31 = load float*, float** %center, align 8, !dbg !11156
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %nearest, i64 0, i64 0, !dbg !11157
  call void @sub_v3_v3v3(float* %arraydecay31, float* %31, float* %arraydecay32), !dbg !11158
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %t, i64 0, i64 0, !dbg !11159
  %call = call float @len_squared_v3(float* %arraydecay33), !dbg !11160
  %32 = load %struct.SculptSearchSphereData*, %struct.SculptSearchSphereData** %data, align 8, !dbg !11161
  %radius_squared = getelementptr inbounds %struct.SculptSearchSphereData, %struct.SculptSearchSphereData* %32, i32 0, i32 2, !dbg !11162
  %33 = load float, float* %radius_squared, align 8, !dbg !11162
  %cmp34 = fcmp olt float %call, %33, !dbg !11163
  %conv = zext i1 %cmp34 to i32, !dbg !11163
  %conv35 = trunc i32 %conv to i8, !dbg !11160
  ret i8 %conv35, !dbg !11164
}

declare dso_local void @BKE_pbvh_node_mark_topology_update(%struct.PBVHNode*) #2

declare dso_local void @BKE_pbvh_bmesh_node_save_orig(%struct.PBVHNode*) #2

declare dso_local zeroext i8 @BKE_pbvh_bmesh_update_topology(%struct.PBVH*, i32, float*, float) #2

declare dso_local void @BKE_pbvh_node_get_original_BB(%struct.PBVHNode*, float*, float*) #2

declare dso_local void @BKE_pbvh_node_get_BB(%struct.PBVHNode*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3(float* %v) #0 !dbg !11165 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  %0 = load float*, float** %v.addr, align 8, !dbg !11170
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11170
  %1 = load float, float* %arrayidx, align 4, !dbg !11170
  %2 = load float*, float** %v.addr, align 8, !dbg !11171
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11171
  %3 = load float, float* %arrayidx1, align 4, !dbg !11171
  %mul = fmul float %1, %3, !dbg !11172
  %4 = load float*, float** %v.addr, align 8, !dbg !11173
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11173
  %5 = load float, float* %arrayidx2, align 4, !dbg !11173
  %6 = load float*, float** %v.addr, align 8, !dbg !11174
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11174
  %7 = load float, float* %arrayidx3, align 4, !dbg !11174
  %mul4 = fmul float %5, %7, !dbg !11175
  %add = fadd float %mul, %mul4, !dbg !11176
  %8 = load float*, float** %v.addr, align 8, !dbg !11177
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11177
  %9 = load float, float* %arrayidx5, align 4, !dbg !11177
  %10 = load float*, float** %v.addr, align 8, !dbg !11178
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11178
  %11 = load float, float* %arrayidx6, align 4, !dbg !11178
  %mul7 = fmul float %9, %11, !dbg !11179
  %add8 = fadd float %add, %mul7, !dbg !11180
  ret float %add8, !dbg !11181
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @brush_needs_sculpt_normal(%struct.Brush* %brush) #0 !dbg !11182 {
entry:
  %brush.addr = alloca %struct.Brush*, align 8
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !11185, metadata !DIExpression()), !dbg !11186
  %0 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11187
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %0, i32 0, i32 34, !dbg !11187
  %1 = load i8, i8* %sculpt_tool, align 8, !dbg !11187
  %conv = zext i8 %1 to i32, !dbg !11187
  %cmp = icmp eq i32 %conv, 5, !dbg !11187
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !11187

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11187
  %sculpt_tool2 = getelementptr inbounds %struct.Brush, %struct.Brush* %2, i32 0, i32 34, !dbg !11187
  %3 = load i8, i8* %sculpt_tool2, align 8, !dbg !11187
  %conv3 = zext i8 %3 to i32, !dbg !11187
  %cmp4 = icmp eq i32 %conv3, 13, !dbg !11187
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false8, !dbg !11188

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %4 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11189
  %normal_weight = getelementptr inbounds %struct.Brush, %struct.Brush* %4, i32 0, i32 11, !dbg !11190
  %5 = load float, float* %normal_weight, align 8, !dbg !11190
  %cmp6 = fcmp ogt float %5, 0.000000e+00, !dbg !11191
  br i1 %cmp6, label %lor.end, label %lor.lhs.false8, !dbg !11192

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %6 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool9 = getelementptr inbounds %struct.Brush, %struct.Brush* %6, i32 0, i32 34, !dbg !11193
  %7 = load i8, i8* %sculpt_tool9, align 8, !dbg !11193
  %conv10 = zext i8 %7 to i32, !dbg !11193
  %cmp11 = icmp eq i32 %conv10, 17, !dbg !11193
  br i1 %cmp11, label %lor.end, label %lor.lhs.false13, !dbg !11193

lor.lhs.false13:                                  ; preds = %lor.lhs.false8
  %8 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool14 = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 34, !dbg !11193
  %9 = load i8, i8* %sculpt_tool14, align 8, !dbg !11193
  %conv15 = zext i8 %9 to i32, !dbg !11193
  %cmp16 = icmp eq i32 %conv15, 16, !dbg !11193
  br i1 %cmp16, label %lor.end, label %lor.lhs.false18, !dbg !11193

lor.lhs.false18:                                  ; preds = %lor.lhs.false13
  %10 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool19 = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 34, !dbg !11193
  %11 = load i8, i8* %sculpt_tool19, align 8, !dbg !11193
  %conv20 = zext i8 %11 to i32, !dbg !11193
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !11193
  br i1 %cmp21, label %lor.end, label %lor.lhs.false23, !dbg !11193

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %12 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool24 = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 34, !dbg !11193
  %13 = load i8, i8* %sculpt_tool24, align 8, !dbg !11193
  %conv25 = zext i8 %13 to i32, !dbg !11193
  %cmp26 = icmp eq i32 %conv25, 6, !dbg !11193
  br i1 %cmp26, label %lor.end, label %lor.lhs.false28, !dbg !11193

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %14 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool29 = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 34, !dbg !11193
  %15 = load i8, i8* %sculpt_tool29, align 8, !dbg !11193
  %conv30 = zext i8 %15 to i32, !dbg !11193
  %cmp31 = icmp eq i32 %conv30, 11, !dbg !11193
  br i1 %cmp31, label %lor.end, label %lor.lhs.false33, !dbg !11193

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %16 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool34 = getelementptr inbounds %struct.Brush, %struct.Brush* %16, i32 0, i32 34, !dbg !11193
  %17 = load i8, i8* %sculpt_tool34, align 8, !dbg !11193
  %conv35 = zext i8 %17 to i32, !dbg !11193
  %cmp36 = icmp eq i32 %conv35, 14, !dbg !11193
  br i1 %cmp36, label %lor.end, label %lor.lhs.false38, !dbg !11193

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %18 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11193
  %sculpt_tool39 = getelementptr inbounds %struct.Brush, %struct.Brush* %18, i32 0, i32 34, !dbg !11193
  %19 = load i8, i8* %sculpt_tool39, align 8, !dbg !11193
  %conv40 = zext i8 %19 to i32, !dbg !11193
  %cmp41 = icmp eq i32 %conv40, 12, !dbg !11193
  br i1 %cmp41, label %lor.end, label %lor.rhs, !dbg !11194

lor.rhs:                                          ; preds = %lor.lhs.false38
  %20 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !11195
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %20, i32 0, i32 3, !dbg !11196
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 20, !dbg !11197
  %21 = load i8, i8* %brush_map_mode, align 4, !dbg !11197
  %conv43 = zext i8 %21 to i32, !dbg !11195
  %cmp44 = icmp eq i32 %conv43, 3, !dbg !11198
  br label %lor.end, !dbg !11194

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false38, %lor.lhs.false33, %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false18, %lor.lhs.false13, %lor.lhs.false8, %land.lhs.true
  %22 = phi i1 [ true, %lor.lhs.false38 ], [ true, %lor.lhs.false33 ], [ true, %lor.lhs.false28 ], [ true, %lor.lhs.false23 ], [ true, %lor.lhs.false18 ], [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false8 ], [ true, %land.lhs.true ], [ %cmp44, %lor.rhs ]
  %lor.ext = zext i1 %22 to i32, !dbg !11194
  ret i32 %lor.ext, !dbg !11199
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_sculpt_normal(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11200 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %brush = alloca %struct.Brush*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11201, metadata !DIExpression()), !dbg !11202
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11203, metadata !DIExpression()), !dbg !11204
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11209, metadata !DIExpression()), !dbg !11210
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11211
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !11212
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11213
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11210
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !11214, metadata !DIExpression()), !dbg !11215
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11216
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !11217
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11217
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !11218
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !11218
  store %struct.StrokeCache* %3, %struct.StrokeCache** %cache, align 8, !dbg !11215
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11219
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 31, !dbg !11221
  %5 = load i32, i32* %mirror_symmetry_pass, align 8, !dbg !11221
  %cmp = icmp eq i32 %5, 0, !dbg !11222
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11223

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11224
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 38, !dbg !11225
  %7 = load i32, i32* %radial_symmetry_pass, align 8, !dbg !11225
  %cmp2 = icmp eq i32 %7, 0, !dbg !11226
  br i1 %cmp2, label %land.lhs.true3, label %if.else, !dbg !11227

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11228
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 20, !dbg !11229
  %9 = load i8, i8* %first_time, align 4, !dbg !11229
  %conv = zext i8 %9 to i32, !dbg !11228
  %tobool = icmp ne i32 %conv, 0, !dbg !11228
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11230

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %10 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11231
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 16, !dbg !11232
  %11 = load i32, i32* %flag, align 8, !dbg !11232
  %and = and i32 %11, 32768, !dbg !11233
  %tobool4 = icmp ne i32 %and, 0, !dbg !11233
  br i1 %tobool4, label %if.else, label %if.then, !dbg !11234

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  %12 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11235
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11237
  %14 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11238
  %15 = load i32, i32* %totnode.addr, align 4, !dbg !11239
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11240
  %sculpt_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 34, !dbg !11241
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal, i64 0, i64 0, !dbg !11240
  call void @calc_sculpt_normal(%struct.Sculpt* %12, %struct.Object* %13, %struct.PBVHNode** %14, i32 %15, float* %arraydecay), !dbg !11242
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11243
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 35, !dbg !11244
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !11243
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11245
  %sculpt_normal6 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 34, !dbg !11246
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal6, i64 0, i64 0, !dbg !11245
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay7), !dbg !11247
  br label %if.end, !dbg !11248

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %19 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11249
  %sculpt_normal_symm8 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %19, i32 0, i32 35, !dbg !11251
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm8, i64 0, i64 0, !dbg !11249
  %20 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11252
  %sculpt_normal10 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %20, i32 0, i32 34, !dbg !11253
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal10, i64 0, i64 0, !dbg !11252
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !11254
  %21 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11255
  %sculpt_normal_symm12 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %21, i32 0, i32 35, !dbg !11256
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm12, i64 0, i64 0, !dbg !11255
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11257
  %mirror_symmetry_pass14 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 31, !dbg !11258
  %23 = load i32, i32* %mirror_symmetry_pass14, align 8, !dbg !11258
  %conv15 = trunc i32 %23 to i8, !dbg !11257
  call void @flip_v3(float* %arraydecay13, i8 zeroext %conv15), !dbg !11259
  %24 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11260
  %symm_rot_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %24, i32 0, i32 39, !dbg !11261
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat, i64 0, i64 0, !dbg !11260
  %25 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11262
  %sculpt_normal_symm17 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %25, i32 0, i32 35, !dbg !11263
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm17, i64 0, i64 0, !dbg !11262
  call void @mul_m4_v3([4 x float]* %arraydecay16, float* %arraydecay18), !dbg !11264
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11265
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_brush_local_mat(%struct.Sculpt* %sd, %struct.Object* %ob) #0 !dbg !11266 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11267, metadata !DIExpression()), !dbg !11268
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !11271, metadata !DIExpression()), !dbg !11272
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11273
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11274
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11274
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 28, !dbg !11275
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !11275
  store %struct.StrokeCache* %2, %struct.StrokeCache** %cache, align 8, !dbg !11272
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11276
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %3, i32 0, i32 31, !dbg !11278
  %4 = load i32, i32* %mirror_symmetry_pass, align 8, !dbg !11278
  %cmp = icmp eq i32 %4, 0, !dbg !11279
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11280

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11281
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 38, !dbg !11282
  %6 = load i32, i32* %radial_symmetry_pass, align 8, !dbg !11282
  %cmp2 = icmp eq i32 %6, 0, !dbg !11283
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11284

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11285
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %7, i32 0, i32 0, !dbg !11287
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11288
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11289
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11290
  %brush_local_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 36, !dbg !11291
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %brush_local_mat, i64 0, i64 0, !dbg !11290
  call void @calc_brush_local_mat(%struct.Brush* %call, %struct.Object* %8, [4 x float]* %arraydecay), !dbg !11292
  br label %if.end, !dbg !11293

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11294
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_draw_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11295 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %offset = alloca [3 x float], align 4
  %bstrength = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11296, metadata !DIExpression()), !dbg !11297
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11298, metadata !DIExpression()), !dbg !11299
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11300, metadata !DIExpression()), !dbg !11301
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !11304, metadata !DIExpression()), !dbg !11305
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11306
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11307
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11307
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !11305
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11308, metadata !DIExpression()), !dbg !11309
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11310
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !11311
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11312
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11309
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !11313, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !11315, metadata !DIExpression()), !dbg !11316
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11317
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !11318
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11318
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !11319
  %5 = load float, float* %bstrength1, align 8, !dbg !11319
  store float %5, float* %bstrength, align 4, !dbg !11316
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11320, metadata !DIExpression()), !dbg !11321
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11322
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11323
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !11324
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !11324
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 35, !dbg !11325
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !11323
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11326
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !11327
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !11327
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 11, !dbg !11328
  %10 = load float, float* %radius, align 8, !dbg !11328
  call void @mul_v3_v3fl(float* %arraydecay, float* %arraydecay3, float %10), !dbg !11329
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11330
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11331
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !11332
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !11332
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %12, i32 0, i32 1, !dbg !11333
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !11331
  call void @mul_v3_v3(float* %arraydecay5, float* %arraydecay7), !dbg !11334
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11335
  %13 = load float, float* %bstrength, align 4, !dbg !11336
  call void @mul_v3_fl(float* %arraydecay8, float %13), !dbg !11337
  store i32 0, i32* %n, align 4, !dbg !11338
  br label %for.cond, !dbg !11340

for.cond:                                         ; preds = %for.inc182, %entry
  %14 = load i32, i32* %n, align 4, !dbg !11341
  %15 = load i32, i32* %totnode.addr, align 4, !dbg !11343
  %cmp = icmp slt i32 %14, %15, !dbg !11344
  br i1 %cmp, label %for.body, label %for.end184, !dbg !11345

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !11346, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !11349, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !11358, metadata !DIExpression()), !dbg !11359
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11360
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 15, !dbg !11361
  %17 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !11361
  %18 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11362
  %19 = load i32, i32* %n, align 4, !dbg !11363
  %idxprom = sext i32 %19 to i64, !dbg !11362
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %18, i64 %idxprom, !dbg !11362
  %20 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !11362
  %call9 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %17, %struct.PBVHNode* %20), !dbg !11364
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call9, i32 0, i32 0, !dbg !11365
  %21 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !11365
  store [3 x float]* %21, [3 x float]** %proxy, align 8, !dbg !11366
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11367
  call void @sculpt_brush_test_init(%struct.SculptSession* %22, %struct.SculptBrushTest* %test), !dbg !11368
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11369
  %pbvh10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 15, !dbg !11369
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh10, align 8, !dbg !11369
  %25 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11369
  %26 = load i32, i32* %n, align 4, !dbg !11369
  %idxprom11 = sext i32 %26 to i64, !dbg !11369
  %arrayidx12 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %25, i64 %idxprom11, !dbg !11369
  %27 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx12, align 8, !dbg !11369
  call void @pbvh_vertex_iter_init(%struct.PBVH* %24, %struct.PBVHNode* %27, %struct.PBVHVertexIter* %vd, i32 1), !dbg !11369
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11370
  store i32 0, i32* %i, align 4, !dbg !11370
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11370
  store i32 0, i32* %g, align 8, !dbg !11370
  br label %for.cond13, !dbg !11370

for.cond13:                                       ; preds = %for.inc178, %for.body
  %g14 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11372
  %28 = load i32, i32* %g14, align 8, !dbg !11372
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !11372
  %29 = load i32, i32* %totgrid, align 8, !dbg !11372
  %cmp15 = icmp slt i32 %28, %29, !dbg !11372
  br i1 %cmp15, label %for.body16, label %for.end181, !dbg !11370

for.body16:                                       ; preds = %for.cond13
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11374
  %30 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !11374
  %tobool = icmp ne %struct.CCGElem** %30, null, !dbg !11374
  br i1 %tobool, label %if.then, label %if.else, !dbg !11377

if.then:                                          ; preds = %for.body16
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11378
  %31 = load i32, i32* %gridsize, align 4, !dbg !11378
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11378
  store i32 %31, i32* %width, align 4, !dbg !11378
  %gridsize17 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11378
  %32 = load i32, i32* %gridsize17, align 4, !dbg !11378
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11378
  store i32 %32, i32* %height, align 8, !dbg !11378
  %grids18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11378
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grids18, align 8, !dbg !11378
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11378
  %34 = load i32*, i32** %grid_indices, align 8, !dbg !11378
  %g19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11378
  %35 = load i32, i32* %g19, align 8, !dbg !11378
  %idxprom20 = sext i32 %35 to i64, !dbg !11378
  %arrayidx21 = getelementptr inbounds i32, i32* %34, i64 %idxprom20, !dbg !11378
  %36 = load i32, i32* %arrayidx21, align 4, !dbg !11378
  %idxprom22 = sext i32 %36 to i64, !dbg !11378
  %arrayidx23 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %33, i64 %idxprom22, !dbg !11378
  %37 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx23, align 8, !dbg !11378
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11378
  store %struct.CCGElem* %37, %struct.CCGElem** %grid, align 8, !dbg !11378
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !11380
  %38 = load i32**, i32*** %grid_hidden, align 8, !dbg !11380
  %grid_indices24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11380
  %39 = load i32*, i32** %grid_indices24, align 8, !dbg !11380
  %g25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11380
  %40 = load i32, i32* %g25, align 8, !dbg !11380
  %idxprom26 = sext i32 %40 to i64, !dbg !11380
  %arrayidx27 = getelementptr inbounds i32, i32* %39, i64 %idxprom26, !dbg !11380
  %41 = load i32, i32* %arrayidx27, align 4, !dbg !11380
  %idxprom28 = sext i32 %41 to i64, !dbg !11380
  %arrayidx29 = getelementptr inbounds i32*, i32** %38, i64 %idxprom28, !dbg !11380
  %42 = load i32*, i32** %arrayidx29, align 8, !dbg !11380
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11380
  store i32* %42, i32** %gh, align 8, !dbg !11380
  br label %if.end, !dbg !11378

if.else:                                          ; preds = %for.body16
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !11382
  %43 = load i32, i32* %totvert, align 8, !dbg !11382
  %width30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11382
  store i32 %43, i32* %width30, align 4, !dbg !11382
  %height31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11382
  store i32 1, i32* %height31, align 8, !dbg !11382
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11384
  store i32 0, i32* %gy, align 8, !dbg !11384
  br label %for.cond32, !dbg !11384

for.cond32:                                       ; preds = %for.inc174, %if.end
  %gy33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11386
  %44 = load i32, i32* %gy33, align 8, !dbg !11386
  %height34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11386
  %45 = load i32, i32* %height34, align 8, !dbg !11386
  %cmp35 = icmp slt i32 %44, %45, !dbg !11386
  br i1 %cmp35, label %for.body36, label %for.end177, !dbg !11384

for.body36:                                       ; preds = %for.cond32
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11388
  store i32 0, i32* %gx, align 4, !dbg !11388
  br label %for.cond37, !dbg !11388

for.cond37:                                       ; preds = %for.inc, %for.body36
  %gx38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11391
  %46 = load i32, i32* %gx38, align 4, !dbg !11391
  %width39 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11391
  %47 = load i32, i32* %width39, align 4, !dbg !11391
  %cmp40 = icmp slt i32 %46, %47, !dbg !11391
  br i1 %cmp40, label %for.body41, label %for.end, !dbg !11388

for.body41:                                       ; preds = %for.cond37
  %grid42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11393
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid42, align 8, !dbg !11393
  %tobool43 = icmp ne %struct.CCGElem* %48, null, !dbg !11393
  br i1 %tobool43, label %if.then44, label %if.else79, !dbg !11396

if.then44:                                        ; preds = %for.body41
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11397
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !11397
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11397
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !11397
  %call46 = call float* @CCG_elem_co(%struct.CCGKey* %49, %struct.CCGElem* %50), !dbg !11397
  %co47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11397
  store float* %call46, float** %co47, align 8, !dbg !11397
  %key48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11397
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key48, align 8, !dbg !11397
  %grid49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11397
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid49, align 8, !dbg !11397
  %call50 = call float* @CCG_elem_no(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !11397
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11397
  store float* %call50, float** %fno, align 8, !dbg !11397
  %key51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11397
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key51, align 8, !dbg !11397
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %53, i32 0, i32 9, !dbg !11397
  %54 = load i32, i32* %has_mask, align 4, !dbg !11397
  %tobool52 = icmp ne i32 %54, 0, !dbg !11397
  br i1 %tobool52, label %cond.true, label %cond.false, !dbg !11397

cond.true:                                        ; preds = %if.then44
  %key53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11397
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key53, align 8, !dbg !11397
  %grid54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11397
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid54, align 8, !dbg !11397
  %call55 = call float* @CCG_elem_mask(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !11397
  br label %cond.end, !dbg !11397

cond.false:                                       ; preds = %if.then44
  br label %cond.end, !dbg !11397

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call55, %cond.true ], [ null, %cond.false ], !dbg !11397
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11397
  store float* %cond, float** %mask, align 8, !dbg !11397
  %key56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11397
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key56, align 8, !dbg !11397
  %grid57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11397
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid57, align 8, !dbg !11397
  %call58 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !11397
  %grid59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11397
  store %struct.CCGElem* %call58, %struct.CCGElem** %grid59, align 8, !dbg !11397
  %gh60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11399
  %59 = load i32*, i32** %gh60, align 8, !dbg !11399
  %tobool61 = icmp ne i32* %59, null, !dbg !11399
  br i1 %tobool61, label %if.then62, label %if.end78, !dbg !11397

if.then62:                                        ; preds = %cond.end
  %gh63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11401
  %60 = load i32*, i32** %gh63, align 8, !dbg !11401
  %gy64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11401
  %61 = load i32, i32* %gy64, align 8, !dbg !11401
  %gridsize65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11401
  %62 = load i32, i32* %gridsize65, align 4, !dbg !11401
  %mul = mul nsw i32 %61, %62, !dbg !11401
  %gx66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11401
  %63 = load i32, i32* %gx66, align 4, !dbg !11401
  %add = add nsw i32 %mul, %63, !dbg !11401
  %shr = ashr i32 %add, 5, !dbg !11401
  %idxprom67 = sext i32 %shr to i64, !dbg !11401
  %arrayidx68 = getelementptr inbounds i32, i32* %60, i64 %idxprom67, !dbg !11401
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !11401
  %gy69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11401
  %65 = load i32, i32* %gy69, align 8, !dbg !11401
  %gridsize70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11401
  %66 = load i32, i32* %gridsize70, align 4, !dbg !11401
  %mul71 = mul nsw i32 %65, %66, !dbg !11401
  %gx72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11401
  %67 = load i32, i32* %gx72, align 4, !dbg !11401
  %add73 = add nsw i32 %mul71, %67, !dbg !11401
  %and = and i32 %add73, 31, !dbg !11401
  %shl = shl i32 1, %and, !dbg !11401
  %and74 = and i32 %64, %shl, !dbg !11401
  %tobool75 = icmp ne i32 %and74, 0, !dbg !11401
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11404

if.then76:                                        ; preds = %if.then62
  br label %for.inc, !dbg !11401

if.end77:                                         ; preds = %if.then62
  br label %if.end78, !dbg !11404

if.end78:                                         ; preds = %if.end77, %cond.end
  br label %if.end141, !dbg !11397

if.else79:                                        ; preds = %for.body41
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11405
  %68 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !11405
  %tobool80 = icmp ne %struct.MVert* %68, null, !dbg !11405
  br i1 %tobool80, label %if.then81, label %if.else111, !dbg !11393

if.then81:                                        ; preds = %if.else79
  %mverts82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11407
  %69 = load %struct.MVert*, %struct.MVert** %mverts82, align 8, !dbg !11407
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11407
  %70 = load i32*, i32** %vert_indices, align 8, !dbg !11407
  %gx83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11407
  %71 = load i32, i32* %gx83, align 4, !dbg !11407
  %idxprom84 = sext i32 %71 to i64, !dbg !11407
  %arrayidx85 = getelementptr inbounds i32, i32* %70, i64 %idxprom84, !dbg !11407
  %72 = load i32, i32* %arrayidx85, align 4, !dbg !11407
  %idxprom86 = sext i32 %72 to i64, !dbg !11407
  %arrayidx87 = getelementptr inbounds %struct.MVert, %struct.MVert* %69, i64 %idxprom86, !dbg !11407
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11407
  store %struct.MVert* %arrayidx87, %struct.MVert** %mvert, align 8, !dbg !11407
  %mvert88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11409
  %73 = load %struct.MVert*, %struct.MVert** %mvert88, align 8, !dbg !11409
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i32 0, i32 2, !dbg !11409
  %74 = load i8, i8* %flag, align 2, !dbg !11409
  %conv = zext i8 %74 to i32, !dbg !11409
  %and89 = and i32 %conv, 16, !dbg !11409
  %tobool90 = icmp ne i32 %and89, 0, !dbg !11409
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !11407

if.then91:                                        ; preds = %if.then81
  br label %for.inc, !dbg !11409

if.end92:                                         ; preds = %if.then81
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11407
  %75 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !11407
  %co94 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i32 0, i32 0, !dbg !11407
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %co94, i64 0, i64 0, !dbg !11407
  %co96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11407
  store float* %arraydecay95, float** %co96, align 8, !dbg !11407
  %mvert97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11407
  %76 = load %struct.MVert*, %struct.MVert** %mvert97, align 8, !dbg !11407
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 0, i32 1, !dbg !11407
  %arraydecay98 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !11407
  %no99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11407
  store i16* %arraydecay98, i16** %no99, align 8, !dbg !11407
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11411
  %77 = load float*, float** %vmask, align 8, !dbg !11411
  %tobool100 = icmp ne float* %77, null, !dbg !11411
  br i1 %tobool100, label %if.then101, label %if.end110, !dbg !11407

if.then101:                                       ; preds = %if.end92
  %vmask102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11411
  %78 = load float*, float** %vmask102, align 8, !dbg !11411
  %vert_indices103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11411
  %79 = load i32*, i32** %vert_indices103, align 8, !dbg !11411
  %gx104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11411
  %80 = load i32, i32* %gx104, align 4, !dbg !11411
  %idxprom105 = sext i32 %80 to i64, !dbg !11411
  %arrayidx106 = getelementptr inbounds i32, i32* %79, i64 %idxprom105, !dbg !11411
  %81 = load i32, i32* %arrayidx106, align 4, !dbg !11411
  %idxprom107 = sext i32 %81 to i64, !dbg !11411
  %arrayidx108 = getelementptr inbounds float, float* %78, i64 %idxprom107, !dbg !11411
  %mask109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11411
  store float* %arrayidx108, float** %mask109, align 8, !dbg !11411
  br label %if.end110, !dbg !11411

if.end110:                                        ; preds = %if.then101, %if.end92
  br label %if.end140, !dbg !11407

if.else111:                                       ; preds = %if.else79
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11413
  %call112 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !11413
  %tobool113 = icmp ne i8 %call112, 0, !dbg !11413
  br i1 %tobool113, label %if.else118, label %if.then114, !dbg !11416

if.then114:                                       ; preds = %if.else111
  %bm_unique_verts115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11417
  %call116 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts115), !dbg !11417
  %82 = bitcast i8* %call116 to %struct.BMVert*, !dbg !11417
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11417
  store %struct.BMVert* %82, %struct.BMVert** %bm_vert, align 8, !dbg !11417
  %bm_unique_verts117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11417
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts117), !dbg !11417
  br label %if.end122, !dbg !11417

if.else118:                                       ; preds = %if.else111
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11419
  %call119 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !11419
  %83 = bitcast i8* %call119 to %struct.BMVert*, !dbg !11419
  %bm_vert120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11419
  store %struct.BMVert* %83, %struct.BMVert** %bm_vert120, align 8, !dbg !11419
  %bm_other_verts121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11419
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts121), !dbg !11419
  br label %if.end122

if.end122:                                        ; preds = %if.else118, %if.then114
  %bm_vert123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11421
  %84 = load %struct.BMVert*, %struct.BMVert** %bm_vert123, align 8, !dbg !11421
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 0, !dbg !11421
  %call124 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11421
  %conv125 = zext i8 %call124 to i32, !dbg !11421
  %tobool126 = icmp ne i32 %conv125, 0, !dbg !11421
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !11416

if.then127:                                       ; preds = %if.end122
  br label %for.inc, !dbg !11421

if.end128:                                        ; preds = %if.end122
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11416
  %85 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !11416
  %co130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %85, i32 0, i32 2, !dbg !11416
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %co130, i64 0, i64 0, !dbg !11416
  %co132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11416
  store float* %arraydecay131, float** %co132, align 8, !dbg !11416
  %bm_vert133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11416
  %86 = load %struct.BMVert*, %struct.BMVert** %bm_vert133, align 8, !dbg !11416
  %no134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %86, i32 0, i32 3, !dbg !11416
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %no134, i64 0, i64 0, !dbg !11416
  %fno136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11416
  store float* %arraydecay135, float** %fno136, align 8, !dbg !11416
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11416
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !11416
  %head138 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !11416
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head138, i32 0, i32 0, !dbg !11416
  %88 = load i8*, i8** %data, align 8, !dbg !11416
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !11416
  %89 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !11416
  %idx.ext = sext i32 %89 to i64, !dbg !11416
  %add.ptr = getelementptr inbounds i8, i8* %88, i64 %idx.ext, !dbg !11416
  %90 = bitcast i8* %add.ptr to float*, !dbg !11416
  %mask139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11416
  store float* %90, float** %mask139, align 8, !dbg !11416
  br label %if.end140

if.end140:                                        ; preds = %if.end128, %if.end110
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.end78
  %co142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11423
  %91 = load float*, float** %co142, align 8, !dbg !11423
  %call143 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %91), !dbg !11426
  %tobool144 = icmp ne i8 %call143, 0, !dbg !11426
  br i1 %tobool144, label %if.then145, label %if.end170, !dbg !11427

if.then145:                                       ; preds = %if.end141
  call void @llvm.dbg.declare(metadata float* %fade, metadata !11428, metadata !DIExpression()), !dbg !11430
  %92 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11431
  %93 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11432
  %co146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11433
  %94 = load float*, float** %co146, align 8, !dbg !11433
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !11434
  %95 = load float, float* %dist, align 8, !dbg !11434
  %no147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11435
  %96 = load i16*, i16** %no147, align 8, !dbg !11435
  %fno148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11436
  %97 = load float*, float** %fno148, align 8, !dbg !11436
  %mask149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11437
  %98 = load float*, float** %mask149, align 8, !dbg !11437
  %tobool150 = icmp ne float* %98, null, !dbg !11438
  br i1 %tobool150, label %cond.true151, label %cond.false153, !dbg !11438

cond.true151:                                     ; preds = %if.then145
  %mask152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11439
  %99 = load float*, float** %mask152, align 8, !dbg !11439
  %100 = load float, float* %99, align 4, !dbg !11440
  br label %cond.end154, !dbg !11438

cond.false153:                                    ; preds = %if.then145
  br label %cond.end154, !dbg !11438

cond.end154:                                      ; preds = %cond.false153, %cond.true151
  %cond155 = phi float [ %100, %cond.true151 ], [ 0.000000e+00, %cond.false153 ], !dbg !11438
  %call156 = call float @tex_strength(%struct.SculptSession* %92, %struct.Brush* %93, float* %94, float %95, i16* %96, float* %97, float %cond155), !dbg !11441
  store float %call156, float* %fade, align 4, !dbg !11430
  %101 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !11442
  %i157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11443
  %102 = load i32, i32* %i157, align 4, !dbg !11443
  %idxprom158 = sext i32 %102 to i64, !dbg !11442
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %101, i64 %idxprom158, !dbg !11442
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !11442
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11444
  %103 = load float, float* %fade, align 4, !dbg !11445
  call void @mul_v3_v3fl(float* %arraydecay160, float* %arraydecay161, float %103), !dbg !11446
  %mvert162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11447
  %104 = load %struct.MVert*, %struct.MVert** %mvert162, align 8, !dbg !11447
  %tobool163 = icmp ne %struct.MVert* %104, null, !dbg !11449
  br i1 %tobool163, label %if.then164, label %if.end169, !dbg !11450

if.then164:                                       ; preds = %cond.end154
  %mvert165 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11451
  %105 = load %struct.MVert*, %struct.MVert** %mvert165, align 8, !dbg !11451
  %flag166 = getelementptr inbounds %struct.MVert, %struct.MVert* %105, i32 0, i32 2, !dbg !11452
  %106 = load i8, i8* %flag166, align 2, !dbg !11453
  %conv167 = zext i8 %106 to i32, !dbg !11453
  %or = or i32 %conv167, 128, !dbg !11453
  %conv168 = trunc i32 %or to i8, !dbg !11453
  store i8 %conv168, i8* %flag166, align 2, !dbg !11453
  br label %if.end169, !dbg !11454

if.end169:                                        ; preds = %if.then164, %cond.end154
  br label %if.end170, !dbg !11455

if.end170:                                        ; preds = %if.end169, %if.end141
  br label %for.inc, !dbg !11456

for.inc:                                          ; preds = %if.end170, %if.then127, %if.then91, %if.then76
  %gx171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11391
  %107 = load i32, i32* %gx171, align 4, !dbg !11391
  %inc = add nsw i32 %107, 1, !dbg !11391
  store i32 %inc, i32* %gx171, align 4, !dbg !11391
  %i172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11391
  %108 = load i32, i32* %i172, align 4, !dbg !11391
  %inc173 = add nsw i32 %108, 1, !dbg !11391
  store i32 %inc173, i32* %i172, align 4, !dbg !11391
  br label %for.cond37, !dbg !11391, !llvm.loop !11457

for.end:                                          ; preds = %for.cond37
  br label %for.inc174, !dbg !11459

for.inc174:                                       ; preds = %for.end
  %gy175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11386
  %109 = load i32, i32* %gy175, align 8, !dbg !11386
  %inc176 = add nsw i32 %109, 1, !dbg !11386
  store i32 %inc176, i32* %gy175, align 8, !dbg !11386
  br label %for.cond32, !dbg !11386, !llvm.loop !11460

for.end177:                                       ; preds = %for.cond32
  br label %for.inc178, !dbg !11462

for.inc178:                                       ; preds = %for.end177
  %g179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11372
  %110 = load i32, i32* %g179, align 8, !dbg !11372
  %inc180 = add nsw i32 %110, 1, !dbg !11372
  store i32 %inc180, i32* %g179, align 8, !dbg !11372
  br label %for.cond13, !dbg !11372, !llvm.loop !11463

for.end181:                                       ; preds = %for.cond13
  br label %for.inc182, !dbg !11465

for.inc182:                                       ; preds = %for.end181
  %111 = load i32, i32* %n, align 4, !dbg !11466
  %inc183 = add nsw i32 %111, 1, !dbg !11466
  store i32 %inc183, i32* %n, align 4, !dbg !11466
  br label %for.cond, !dbg !11467, !llvm.loop !11468

for.end184:                                       ; preds = %for.cond
  ret void, !dbg !11470
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_smooth_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11471 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11472, metadata !DIExpression()), !dbg !11473
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !11480, metadata !DIExpression()), !dbg !11481
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11482
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11483
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11483
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !11481
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11484
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11485
  %4 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11486
  %5 = load i32, i32* %totnode.addr, align 4, !dbg !11487
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11488
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !11489
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11489
  %bstrength = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 19, !dbg !11490
  %8 = load float, float* %bstrength, align 8, !dbg !11490
  call void @smooth(%struct.Sculpt* %2, %struct.Object* %3, %struct.PBVHNode** %4, i32 %5, float %8, i32 0), !dbg !11491
  ret void, !dbg !11492
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_crease_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11493 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %offset = alloca [3 x float], align 4
  %bstrength = alloca float, align 4
  %flippedbstrength = alloca float, align 4
  %crease_correction = alloca float, align 4
  %brush_alpha = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  %val1 = alloca [3 x float], align 4
  %val2 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11494, metadata !DIExpression()), !dbg !11495
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11500, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !11502, metadata !DIExpression()), !dbg !11503
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11504
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11505
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11505
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !11503
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11506, metadata !DIExpression()), !dbg !11507
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11508
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 28, !dbg !11509
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11509
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %3, i32 0, i32 22, !dbg !11510
  %4 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !11510
  %scene1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %4, i32 0, i32 0, !dbg !11511
  %5 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !11511
  store %struct.Scene* %5, %struct.Scene** %scene, align 8, !dbg !11507
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11512, metadata !DIExpression()), !dbg !11513
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11514
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %6, i32 0, i32 0, !dbg !11515
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11516
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11513
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !11517, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !11519, metadata !DIExpression()), !dbg !11520
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11521
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 28, !dbg !11522
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !11522
  %bstrength3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 19, !dbg !11523
  %9 = load float, float* %bstrength3, align 8, !dbg !11523
  store float %9, float* %bstrength, align 4, !dbg !11520
  call void @llvm.dbg.declare(metadata float* %flippedbstrength, metadata !11524, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.declare(metadata float* %crease_correction, metadata !11526, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.declare(metadata float* %brush_alpha, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11530, metadata !DIExpression()), !dbg !11531
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11532
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11533
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 28, !dbg !11534
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !11534
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 35, !dbg !11535
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !11533
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11536
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 28, !dbg !11537
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !11537
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 11, !dbg !11538
  %14 = load float, float* %radius, align 8, !dbg !11538
  call void @mul_v3_v3fl(float* %arraydecay, float* %arraydecay5, float %14), !dbg !11539
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11540
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11541
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 28, !dbg !11542
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !11542
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 1, !dbg !11543
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !11541
  call void @mul_v3_v3(float* %arraydecay7, float* %arraydecay9), !dbg !11544
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11545
  %17 = load float, float* %bstrength, align 4, !dbg !11546
  call void @mul_v3_fl(float* %arraydecay10, float %17), !dbg !11547
  %18 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11548
  %crease_pinch_factor = getelementptr inbounds %struct.Brush, %struct.Brush* %18, i32 0, i32 39, !dbg !11549
  %19 = load float, float* %crease_pinch_factor, align 8, !dbg !11549
  %20 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11550
  %crease_pinch_factor11 = getelementptr inbounds %struct.Brush, %struct.Brush* %20, i32 0, i32 39, !dbg !11551
  %21 = load float, float* %crease_pinch_factor11, align 8, !dbg !11551
  %mul = fmul float %19, %21, !dbg !11552
  store float %mul, float* %crease_correction, align 4, !dbg !11553
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11554
  %23 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11555
  %call12 = call float @BKE_brush_alpha_get(%struct.Scene* %22, %struct.Brush* %23), !dbg !11556
  store float %call12, float* %brush_alpha, align 4, !dbg !11557
  %24 = load float, float* %brush_alpha, align 4, !dbg !11558
  %cmp = fcmp ogt float %24, 0.000000e+00, !dbg !11560
  br i1 %cmp, label %if.then, label %if.end, !dbg !11561

if.then:                                          ; preds = %entry
  %25 = load float, float* %brush_alpha, align 4, !dbg !11562
  %26 = load float, float* %brush_alpha, align 4, !dbg !11563
  %mul13 = fmul float %25, %26, !dbg !11564
  %27 = load float, float* %crease_correction, align 4, !dbg !11565
  %div = fdiv float %27, %mul13, !dbg !11565
  store float %div, float* %crease_correction, align 4, !dbg !11565
  br label %if.end, !dbg !11566

if.end:                                           ; preds = %if.then, %entry
  %28 = load float, float* %bstrength, align 4, !dbg !11567
  %cmp14 = fcmp olt float %28, 0.000000e+00, !dbg !11568
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !11569

cond.true:                                        ; preds = %if.end
  %29 = load float, float* %crease_correction, align 4, !dbg !11570
  %fneg = fneg float %29, !dbg !11571
  %30 = load float, float* %bstrength, align 4, !dbg !11572
  %mul15 = fmul float %fneg, %30, !dbg !11573
  br label %cond.end, !dbg !11569

cond.false:                                       ; preds = %if.end
  %31 = load float, float* %crease_correction, align 4, !dbg !11574
  %32 = load float, float* %bstrength, align 4, !dbg !11575
  %mul16 = fmul float %31, %32, !dbg !11576
  br label %cond.end, !dbg !11569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul15, %cond.true ], [ %mul16, %cond.false ], !dbg !11569
  store float %cond, float* %flippedbstrength, align 4, !dbg !11577
  %33 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11578
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %33, i32 0, i32 34, !dbg !11580
  %34 = load i8, i8* %sculpt_tool, align 8, !dbg !11580
  %conv = zext i8 %34 to i32, !dbg !11578
  %cmp17 = icmp eq i32 %conv, 17, !dbg !11581
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !11582

if.then19:                                        ; preds = %cond.end
  %35 = load float, float* %flippedbstrength, align 4, !dbg !11583
  %mul20 = fmul float %35, -1.000000e+00, !dbg !11583
  store float %mul20, float* %flippedbstrength, align 4, !dbg !11583
  br label %if.end21, !dbg !11584

if.end21:                                         ; preds = %if.then19, %cond.end
  store i32 0, i32* %n, align 4, !dbg !11585
  br label %for.cond, !dbg !11587

for.cond:                                         ; preds = %for.inc216, %if.end21
  %36 = load i32, i32* %n, align 4, !dbg !11588
  %37 = load i32, i32* %totnode.addr, align 4, !dbg !11590
  %cmp22 = icmp slt i32 %36, %37, !dbg !11591
  br i1 %cmp22, label %for.body, label %for.end218, !dbg !11592

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !11593, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !11596, metadata !DIExpression()), !dbg !11597
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !11598, metadata !DIExpression()), !dbg !11599
  %38 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11600
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %38, i32 0, i32 15, !dbg !11601
  %39 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !11601
  %40 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11602
  %41 = load i32, i32* %n, align 4, !dbg !11603
  %idxprom = sext i32 %41 to i64, !dbg !11602
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %40, i64 %idxprom, !dbg !11602
  %42 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !11602
  %call24 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %39, %struct.PBVHNode* %42), !dbg !11604
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call24, i32 0, i32 0, !dbg !11605
  %43 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !11605
  store [3 x float]* %43, [3 x float]** %proxy, align 8, !dbg !11606
  %44 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11607
  call void @sculpt_brush_test_init(%struct.SculptSession* %44, %struct.SculptBrushTest* %test), !dbg !11608
  %45 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11609
  %pbvh25 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %45, i32 0, i32 15, !dbg !11609
  %46 = load %struct.PBVH*, %struct.PBVH** %pbvh25, align 8, !dbg !11609
  %47 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11609
  %48 = load i32, i32* %n, align 4, !dbg !11609
  %idxprom26 = sext i32 %48 to i64, !dbg !11609
  %arrayidx27 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %47, i64 %idxprom26, !dbg !11609
  %49 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx27, align 8, !dbg !11609
  call void @pbvh_vertex_iter_init(%struct.PBVH* %46, %struct.PBVHNode* %49, %struct.PBVHVertexIter* %vd, i32 1), !dbg !11609
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11610
  store i32 0, i32* %i, align 4, !dbg !11610
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11610
  store i32 0, i32* %g, align 8, !dbg !11610
  br label %for.cond28, !dbg !11610

for.cond28:                                       ; preds = %for.inc212, %for.body
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11612
  %50 = load i32, i32* %g29, align 8, !dbg !11612
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !11612
  %51 = load i32, i32* %totgrid, align 8, !dbg !11612
  %cmp30 = icmp slt i32 %50, %51, !dbg !11612
  br i1 %cmp30, label %for.body32, label %for.end215, !dbg !11610

for.body32:                                       ; preds = %for.cond28
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11614
  %52 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !11614
  %tobool = icmp ne %struct.CCGElem** %52, null, !dbg !11614
  br i1 %tobool, label %if.then33, label %if.else, !dbg !11617

if.then33:                                        ; preds = %for.body32
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11618
  %53 = load i32, i32* %gridsize, align 4, !dbg !11618
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11618
  store i32 %53, i32* %width, align 4, !dbg !11618
  %gridsize34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11618
  %54 = load i32, i32* %gridsize34, align 4, !dbg !11618
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11618
  store i32 %54, i32* %height, align 8, !dbg !11618
  %grids35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11618
  %55 = load %struct.CCGElem**, %struct.CCGElem*** %grids35, align 8, !dbg !11618
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11618
  %56 = load i32*, i32** %grid_indices, align 8, !dbg !11618
  %g36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11618
  %57 = load i32, i32* %g36, align 8, !dbg !11618
  %idxprom37 = sext i32 %57 to i64, !dbg !11618
  %arrayidx38 = getelementptr inbounds i32, i32* %56, i64 %idxprom37, !dbg !11618
  %58 = load i32, i32* %arrayidx38, align 4, !dbg !11618
  %idxprom39 = sext i32 %58 to i64, !dbg !11618
  %arrayidx40 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %55, i64 %idxprom39, !dbg !11618
  %59 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx40, align 8, !dbg !11618
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11618
  store %struct.CCGElem* %59, %struct.CCGElem** %grid, align 8, !dbg !11618
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !11620
  %60 = load i32**, i32*** %grid_hidden, align 8, !dbg !11620
  %grid_indices41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11620
  %61 = load i32*, i32** %grid_indices41, align 8, !dbg !11620
  %g42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11620
  %62 = load i32, i32* %g42, align 8, !dbg !11620
  %idxprom43 = sext i32 %62 to i64, !dbg !11620
  %arrayidx44 = getelementptr inbounds i32, i32* %61, i64 %idxprom43, !dbg !11620
  %63 = load i32, i32* %arrayidx44, align 4, !dbg !11620
  %idxprom45 = sext i32 %63 to i64, !dbg !11620
  %arrayidx46 = getelementptr inbounds i32*, i32** %60, i64 %idxprom45, !dbg !11620
  %64 = load i32*, i32** %arrayidx46, align 8, !dbg !11620
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11620
  store i32* %64, i32** %gh, align 8, !dbg !11620
  br label %if.end49, !dbg !11618

if.else:                                          ; preds = %for.body32
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !11622
  %65 = load i32, i32* %totvert, align 8, !dbg !11622
  %width47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11622
  store i32 %65, i32* %width47, align 4, !dbg !11622
  %height48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11622
  store i32 1, i32* %height48, align 8, !dbg !11622
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then33
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11624
  store i32 0, i32* %gy, align 8, !dbg !11624
  br label %for.cond50, !dbg !11624

for.cond50:                                       ; preds = %for.inc208, %if.end49
  %gy51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11626
  %66 = load i32, i32* %gy51, align 8, !dbg !11626
  %height52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11626
  %67 = load i32, i32* %height52, align 8, !dbg !11626
  %cmp53 = icmp slt i32 %66, %67, !dbg !11626
  br i1 %cmp53, label %for.body55, label %for.end211, !dbg !11624

for.body55:                                       ; preds = %for.cond50
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11628
  store i32 0, i32* %gx, align 4, !dbg !11628
  br label %for.cond56, !dbg !11628

for.cond56:                                       ; preds = %for.inc, %for.body55
  %gx57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11631
  %68 = load i32, i32* %gx57, align 4, !dbg !11631
  %width58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11631
  %69 = load i32, i32* %width58, align 4, !dbg !11631
  %cmp59 = icmp slt i32 %68, %69, !dbg !11631
  br i1 %cmp59, label %for.body61, label %for.end, !dbg !11628

for.body61:                                       ; preds = %for.cond56
  %grid62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11633
  %70 = load %struct.CCGElem*, %struct.CCGElem** %grid62, align 8, !dbg !11633
  %tobool63 = icmp ne %struct.CCGElem* %70, null, !dbg !11633
  br i1 %tobool63, label %if.then64, label %if.else104, !dbg !11636

if.then64:                                        ; preds = %for.body61
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11637
  %71 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !11637
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11637
  %72 = load %struct.CCGElem*, %struct.CCGElem** %grid65, align 8, !dbg !11637
  %call66 = call float* @CCG_elem_co(%struct.CCGKey* %71, %struct.CCGElem* %72), !dbg !11637
  %co67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11637
  store float* %call66, float** %co67, align 8, !dbg !11637
  %key68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11637
  %73 = load %struct.CCGKey*, %struct.CCGKey** %key68, align 8, !dbg !11637
  %grid69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11637
  %74 = load %struct.CCGElem*, %struct.CCGElem** %grid69, align 8, !dbg !11637
  %call70 = call float* @CCG_elem_no(%struct.CCGKey* %73, %struct.CCGElem* %74), !dbg !11637
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11637
  store float* %call70, float** %fno, align 8, !dbg !11637
  %key71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11637
  %75 = load %struct.CCGKey*, %struct.CCGKey** %key71, align 8, !dbg !11637
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %75, i32 0, i32 9, !dbg !11637
  %76 = load i32, i32* %has_mask, align 4, !dbg !11637
  %tobool72 = icmp ne i32 %76, 0, !dbg !11637
  br i1 %tobool72, label %cond.true73, label %cond.false77, !dbg !11637

cond.true73:                                      ; preds = %if.then64
  %key74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11637
  %77 = load %struct.CCGKey*, %struct.CCGKey** %key74, align 8, !dbg !11637
  %grid75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11637
  %78 = load %struct.CCGElem*, %struct.CCGElem** %grid75, align 8, !dbg !11637
  %call76 = call float* @CCG_elem_mask(%struct.CCGKey* %77, %struct.CCGElem* %78), !dbg !11637
  br label %cond.end78, !dbg !11637

cond.false77:                                     ; preds = %if.then64
  br label %cond.end78, !dbg !11637

cond.end78:                                       ; preds = %cond.false77, %cond.true73
  %cond79 = phi float* [ %call76, %cond.true73 ], [ null, %cond.false77 ], !dbg !11637
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11637
  store float* %cond79, float** %mask, align 8, !dbg !11637
  %key80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11637
  %79 = load %struct.CCGKey*, %struct.CCGKey** %key80, align 8, !dbg !11637
  %grid81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11637
  %80 = load %struct.CCGElem*, %struct.CCGElem** %grid81, align 8, !dbg !11637
  %call82 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %79, %struct.CCGElem* %80), !dbg !11637
  %grid83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11637
  store %struct.CCGElem* %call82, %struct.CCGElem** %grid83, align 8, !dbg !11637
  %gh84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11639
  %81 = load i32*, i32** %gh84, align 8, !dbg !11639
  %tobool85 = icmp ne i32* %81, null, !dbg !11639
  br i1 %tobool85, label %if.then86, label %if.end103, !dbg !11637

if.then86:                                        ; preds = %cond.end78
  %gh87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11641
  %82 = load i32*, i32** %gh87, align 8, !dbg !11641
  %gy88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11641
  %83 = load i32, i32* %gy88, align 8, !dbg !11641
  %gridsize89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11641
  %84 = load i32, i32* %gridsize89, align 4, !dbg !11641
  %mul90 = mul nsw i32 %83, %84, !dbg !11641
  %gx91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11641
  %85 = load i32, i32* %gx91, align 4, !dbg !11641
  %add = add nsw i32 %mul90, %85, !dbg !11641
  %shr = ashr i32 %add, 5, !dbg !11641
  %idxprom92 = sext i32 %shr to i64, !dbg !11641
  %arrayidx93 = getelementptr inbounds i32, i32* %82, i64 %idxprom92, !dbg !11641
  %86 = load i32, i32* %arrayidx93, align 4, !dbg !11641
  %gy94 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11641
  %87 = load i32, i32* %gy94, align 8, !dbg !11641
  %gridsize95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11641
  %88 = load i32, i32* %gridsize95, align 4, !dbg !11641
  %mul96 = mul nsw i32 %87, %88, !dbg !11641
  %gx97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11641
  %89 = load i32, i32* %gx97, align 4, !dbg !11641
  %add98 = add nsw i32 %mul96, %89, !dbg !11641
  %and = and i32 %add98, 31, !dbg !11641
  %shl = shl i32 1, %and, !dbg !11641
  %and99 = and i32 %86, %shl, !dbg !11641
  %tobool100 = icmp ne i32 %and99, 0, !dbg !11641
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !11644

if.then101:                                       ; preds = %if.then86
  br label %for.inc, !dbg !11641

if.end102:                                        ; preds = %if.then86
  br label %if.end103, !dbg !11644

if.end103:                                        ; preds = %if.end102, %cond.end78
  br label %if.end167, !dbg !11637

if.else104:                                       ; preds = %for.body61
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11645
  %90 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !11645
  %tobool105 = icmp ne %struct.MVert* %90, null, !dbg !11645
  br i1 %tobool105, label %if.then106, label %if.else137, !dbg !11633

if.then106:                                       ; preds = %if.else104
  %mverts107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11647
  %91 = load %struct.MVert*, %struct.MVert** %mverts107, align 8, !dbg !11647
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11647
  %92 = load i32*, i32** %vert_indices, align 8, !dbg !11647
  %gx108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11647
  %93 = load i32, i32* %gx108, align 4, !dbg !11647
  %idxprom109 = sext i32 %93 to i64, !dbg !11647
  %arrayidx110 = getelementptr inbounds i32, i32* %92, i64 %idxprom109, !dbg !11647
  %94 = load i32, i32* %arrayidx110, align 4, !dbg !11647
  %idxprom111 = sext i32 %94 to i64, !dbg !11647
  %arrayidx112 = getelementptr inbounds %struct.MVert, %struct.MVert* %91, i64 %idxprom111, !dbg !11647
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11647
  store %struct.MVert* %arrayidx112, %struct.MVert** %mvert, align 8, !dbg !11647
  %mvert113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11649
  %95 = load %struct.MVert*, %struct.MVert** %mvert113, align 8, !dbg !11649
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %95, i32 0, i32 2, !dbg !11649
  %96 = load i8, i8* %flag, align 2, !dbg !11649
  %conv114 = zext i8 %96 to i32, !dbg !11649
  %and115 = and i32 %conv114, 16, !dbg !11649
  %tobool116 = icmp ne i32 %and115, 0, !dbg !11649
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !11647

if.then117:                                       ; preds = %if.then106
  br label %for.inc, !dbg !11649

if.end118:                                        ; preds = %if.then106
  %mvert119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11647
  %97 = load %struct.MVert*, %struct.MVert** %mvert119, align 8, !dbg !11647
  %co120 = getelementptr inbounds %struct.MVert, %struct.MVert* %97, i32 0, i32 0, !dbg !11647
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %co120, i64 0, i64 0, !dbg !11647
  %co122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11647
  store float* %arraydecay121, float** %co122, align 8, !dbg !11647
  %mvert123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11647
  %98 = load %struct.MVert*, %struct.MVert** %mvert123, align 8, !dbg !11647
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %98, i32 0, i32 1, !dbg !11647
  %arraydecay124 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !11647
  %no125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11647
  store i16* %arraydecay124, i16** %no125, align 8, !dbg !11647
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11651
  %99 = load float*, float** %vmask, align 8, !dbg !11651
  %tobool126 = icmp ne float* %99, null, !dbg !11651
  br i1 %tobool126, label %if.then127, label %if.end136, !dbg !11647

if.then127:                                       ; preds = %if.end118
  %vmask128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11651
  %100 = load float*, float** %vmask128, align 8, !dbg !11651
  %vert_indices129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11651
  %101 = load i32*, i32** %vert_indices129, align 8, !dbg !11651
  %gx130 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11651
  %102 = load i32, i32* %gx130, align 4, !dbg !11651
  %idxprom131 = sext i32 %102 to i64, !dbg !11651
  %arrayidx132 = getelementptr inbounds i32, i32* %101, i64 %idxprom131, !dbg !11651
  %103 = load i32, i32* %arrayidx132, align 4, !dbg !11651
  %idxprom133 = sext i32 %103 to i64, !dbg !11651
  %arrayidx134 = getelementptr inbounds float, float* %100, i64 %idxprom133, !dbg !11651
  %mask135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11651
  store float* %arrayidx134, float** %mask135, align 8, !dbg !11651
  br label %if.end136, !dbg !11651

if.end136:                                        ; preds = %if.then127, %if.end118
  br label %if.end166, !dbg !11647

if.else137:                                       ; preds = %if.else104
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11653
  %call138 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !11653
  %tobool139 = icmp ne i8 %call138, 0, !dbg !11653
  br i1 %tobool139, label %if.else144, label %if.then140, !dbg !11656

if.then140:                                       ; preds = %if.else137
  %bm_unique_verts141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11657
  %call142 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts141), !dbg !11657
  %104 = bitcast i8* %call142 to %struct.BMVert*, !dbg !11657
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11657
  store %struct.BMVert* %104, %struct.BMVert** %bm_vert, align 8, !dbg !11657
  %bm_unique_verts143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11657
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts143), !dbg !11657
  br label %if.end148, !dbg !11657

if.else144:                                       ; preds = %if.else137
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11659
  %call145 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !11659
  %105 = bitcast i8* %call145 to %struct.BMVert*, !dbg !11659
  %bm_vert146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11659
  store %struct.BMVert* %105, %struct.BMVert** %bm_vert146, align 8, !dbg !11659
  %bm_other_verts147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11659
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts147), !dbg !11659
  br label %if.end148

if.end148:                                        ; preds = %if.else144, %if.then140
  %bm_vert149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11661
  %106 = load %struct.BMVert*, %struct.BMVert** %bm_vert149, align 8, !dbg !11661
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %106, i32 0, i32 0, !dbg !11661
  %call150 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11661
  %conv151 = zext i8 %call150 to i32, !dbg !11661
  %tobool152 = icmp ne i32 %conv151, 0, !dbg !11661
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !11656

if.then153:                                       ; preds = %if.end148
  br label %for.inc, !dbg !11661

if.end154:                                        ; preds = %if.end148
  %bm_vert155 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11656
  %107 = load %struct.BMVert*, %struct.BMVert** %bm_vert155, align 8, !dbg !11656
  %co156 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %107, i32 0, i32 2, !dbg !11656
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %co156, i64 0, i64 0, !dbg !11656
  %co158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11656
  store float* %arraydecay157, float** %co158, align 8, !dbg !11656
  %bm_vert159 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11656
  %108 = load %struct.BMVert*, %struct.BMVert** %bm_vert159, align 8, !dbg !11656
  %no160 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %108, i32 0, i32 3, !dbg !11656
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %no160, i64 0, i64 0, !dbg !11656
  %fno162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11656
  store float* %arraydecay161, float** %fno162, align 8, !dbg !11656
  %bm_vert163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11656
  %109 = load %struct.BMVert*, %struct.BMVert** %bm_vert163, align 8, !dbg !11656
  %head164 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %109, i32 0, i32 0, !dbg !11656
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head164, i32 0, i32 0, !dbg !11656
  %110 = load i8*, i8** %data, align 8, !dbg !11656
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !11656
  %111 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !11656
  %idx.ext = sext i32 %111 to i64, !dbg !11656
  %add.ptr = getelementptr inbounds i8, i8* %110, i64 %idx.ext, !dbg !11656
  %112 = bitcast i8* %add.ptr to float*, !dbg !11656
  %mask165 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11656
  store float* %112, float** %mask165, align 8, !dbg !11656
  br label %if.end166

if.end166:                                        ; preds = %if.end154, %if.end136
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end103
  %co168 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11663
  %113 = load float*, float** %co168, align 8, !dbg !11663
  %call169 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %113), !dbg !11666
  %tobool170 = icmp ne i8 %call169, 0, !dbg !11666
  br i1 %tobool170, label %if.then171, label %if.end204, !dbg !11667

if.then171:                                       ; preds = %if.end167
  call void @llvm.dbg.declare(metadata float* %fade, metadata !11668, metadata !DIExpression()), !dbg !11670
  %114 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11671
  %115 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11672
  %co172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11673
  %116 = load float*, float** %co172, align 8, !dbg !11673
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !11674
  %117 = load float, float* %dist, align 8, !dbg !11674
  %no173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11675
  %118 = load i16*, i16** %no173, align 8, !dbg !11675
  %fno174 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11676
  %119 = load float*, float** %fno174, align 8, !dbg !11676
  %mask175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11677
  %120 = load float*, float** %mask175, align 8, !dbg !11677
  %tobool176 = icmp ne float* %120, null, !dbg !11678
  br i1 %tobool176, label %cond.true177, label %cond.false179, !dbg !11678

cond.true177:                                     ; preds = %if.then171
  %mask178 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11679
  %121 = load float*, float** %mask178, align 8, !dbg !11679
  %122 = load float, float* %121, align 4, !dbg !11680
  br label %cond.end180, !dbg !11678

cond.false179:                                    ; preds = %if.then171
  br label %cond.end180, !dbg !11678

cond.end180:                                      ; preds = %cond.false179, %cond.true177
  %cond181 = phi float [ %122, %cond.true177 ], [ 0.000000e+00, %cond.false179 ], !dbg !11678
  %call182 = call float @tex_strength(%struct.SculptSession* %114, %struct.Brush* %115, float* %116, float %117, i16* %118, float* %119, float %cond181), !dbg !11681
  store float %call182, float* %fade, align 4, !dbg !11670
  call void @llvm.dbg.declare(metadata [3 x float]* %val1, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata [3 x float]* %val2, metadata !11684, metadata !DIExpression()), !dbg !11685
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %val1, i64 0, i64 0, !dbg !11686
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 1, !dbg !11687
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !11688
  %co185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11689
  %123 = load float*, float** %co185, align 8, !dbg !11689
  call void @sub_v3_v3v3(float* %arraydecay183, float* %arraydecay184, float* %123), !dbg !11690
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %val1, i64 0, i64 0, !dbg !11691
  %124 = load float, float* %fade, align 4, !dbg !11692
  %125 = load float, float* %flippedbstrength, align 4, !dbg !11693
  %mul187 = fmul float %124, %125, !dbg !11694
  call void @mul_v3_fl(float* %arraydecay186, float %mul187), !dbg !11695
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %val2, i64 0, i64 0, !dbg !11696
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !11697
  %126 = load float, float* %fade, align 4, !dbg !11698
  call void @mul_v3_v3fl(float* %arraydecay188, float* %arraydecay189, float %126), !dbg !11699
  %127 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !11700
  %i190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11701
  %128 = load i32, i32* %i190, align 4, !dbg !11701
  %idxprom191 = sext i32 %128 to i64, !dbg !11700
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %127, i64 %idxprom191, !dbg !11700
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx192, i64 0, i64 0, !dbg !11700
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %val1, i64 0, i64 0, !dbg !11702
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %val2, i64 0, i64 0, !dbg !11703
  call void @add_v3_v3v3(float* %arraydecay193, float* %arraydecay194, float* %arraydecay195), !dbg !11704
  %mvert196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11705
  %129 = load %struct.MVert*, %struct.MVert** %mvert196, align 8, !dbg !11705
  %tobool197 = icmp ne %struct.MVert* %129, null, !dbg !11707
  br i1 %tobool197, label %if.then198, label %if.end203, !dbg !11708

if.then198:                                       ; preds = %cond.end180
  %mvert199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11709
  %130 = load %struct.MVert*, %struct.MVert** %mvert199, align 8, !dbg !11709
  %flag200 = getelementptr inbounds %struct.MVert, %struct.MVert* %130, i32 0, i32 2, !dbg !11710
  %131 = load i8, i8* %flag200, align 2, !dbg !11711
  %conv201 = zext i8 %131 to i32, !dbg !11711
  %or = or i32 %conv201, 128, !dbg !11711
  %conv202 = trunc i32 %or to i8, !dbg !11711
  store i8 %conv202, i8* %flag200, align 2, !dbg !11711
  br label %if.end203, !dbg !11712

if.end203:                                        ; preds = %if.then198, %cond.end180
  br label %if.end204, !dbg !11713

if.end204:                                        ; preds = %if.end203, %if.end167
  br label %for.inc, !dbg !11714

for.inc:                                          ; preds = %if.end204, %if.then153, %if.then117, %if.then101
  %gx205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11631
  %132 = load i32, i32* %gx205, align 4, !dbg !11631
  %inc = add nsw i32 %132, 1, !dbg !11631
  store i32 %inc, i32* %gx205, align 4, !dbg !11631
  %i206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11631
  %133 = load i32, i32* %i206, align 4, !dbg !11631
  %inc207 = add nsw i32 %133, 1, !dbg !11631
  store i32 %inc207, i32* %i206, align 4, !dbg !11631
  br label %for.cond56, !dbg !11631, !llvm.loop !11715

for.end:                                          ; preds = %for.cond56
  br label %for.inc208, !dbg !11717

for.inc208:                                       ; preds = %for.end
  %gy209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11626
  %134 = load i32, i32* %gy209, align 8, !dbg !11626
  %inc210 = add nsw i32 %134, 1, !dbg !11626
  store i32 %inc210, i32* %gy209, align 8, !dbg !11626
  br label %for.cond50, !dbg !11626, !llvm.loop !11718

for.end211:                                       ; preds = %for.cond50
  br label %for.inc212, !dbg !11720

for.inc212:                                       ; preds = %for.end211
  %g213 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11612
  %135 = load i32, i32* %g213, align 8, !dbg !11612
  %inc214 = add nsw i32 %135, 1, !dbg !11612
  store i32 %inc214, i32* %g213, align 8, !dbg !11612
  br label %for.cond28, !dbg !11612, !llvm.loop !11721

for.end215:                                       ; preds = %for.cond28
  br label %for.inc216, !dbg !11723

for.inc216:                                       ; preds = %for.end215
  %136 = load i32, i32* %n, align 4, !dbg !11724
  %inc217 = add nsw i32 %136, 1, !dbg !11724
  store i32 %inc217, i32* %n, align 4, !dbg !11724
  br label %for.cond, !dbg !11725, !llvm.loop !11726

for.end218:                                       ; preds = %for.cond
  ret void, !dbg !11728
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_pinch_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11729 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  %val = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11732, metadata !DIExpression()), !dbg !11733
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !11738, metadata !DIExpression()), !dbg !11739
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11740
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11741
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11741
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !11739
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11742, metadata !DIExpression()), !dbg !11743
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11744
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !11745
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11746
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11743
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !11747, metadata !DIExpression()), !dbg !11748
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11749
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !11750
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11750
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !11751
  %5 = load float, float* %bstrength1, align 8, !dbg !11751
  store float %5, float* %bstrength, align 4, !dbg !11748
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11752, metadata !DIExpression()), !dbg !11753
  store i32 0, i32* %n, align 4, !dbg !11754
  br label %for.cond, !dbg !11756

for.cond:                                         ; preds = %for.inc178, %entry
  %6 = load i32, i32* %n, align 4, !dbg !11757
  %7 = load i32, i32* %totnode.addr, align 4, !dbg !11759
  %cmp = icmp slt i32 %6, %7, !dbg !11760
  br i1 %cmp, label %for.body, label %for.end180, !dbg !11761

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !11762, metadata !DIExpression()), !dbg !11764
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !11765, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !11767, metadata !DIExpression()), !dbg !11768
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11769
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 15, !dbg !11770
  %9 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !11770
  %10 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11771
  %11 = load i32, i32* %n, align 4, !dbg !11772
  %idxprom = sext i32 %11 to i64, !dbg !11771
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %10, i64 %idxprom, !dbg !11771
  %12 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !11771
  %call2 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %9, %struct.PBVHNode* %12), !dbg !11773
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call2, i32 0, i32 0, !dbg !11774
  %13 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !11774
  store [3 x float]* %13, [3 x float]** %proxy, align 8, !dbg !11775
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11776
  call void @sculpt_brush_test_init(%struct.SculptSession* %14, %struct.SculptBrushTest* %test), !dbg !11777
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11778
  %pbvh3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 15, !dbg !11778
  %16 = load %struct.PBVH*, %struct.PBVH** %pbvh3, align 8, !dbg !11778
  %17 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11778
  %18 = load i32, i32* %n, align 4, !dbg !11778
  %idxprom4 = sext i32 %18 to i64, !dbg !11778
  %arrayidx5 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %17, i64 %idxprom4, !dbg !11778
  %19 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx5, align 8, !dbg !11778
  call void @pbvh_vertex_iter_init(%struct.PBVH* %16, %struct.PBVHNode* %19, %struct.PBVHVertexIter* %vd, i32 1), !dbg !11778
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11779
  store i32 0, i32* %i, align 4, !dbg !11779
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11779
  store i32 0, i32* %g, align 8, !dbg !11779
  br label %for.cond6, !dbg !11779

for.cond6:                                        ; preds = %for.inc174, %for.body
  %g7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11781
  %20 = load i32, i32* %g7, align 8, !dbg !11781
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !11781
  %21 = load i32, i32* %totgrid, align 8, !dbg !11781
  %cmp8 = icmp slt i32 %20, %21, !dbg !11781
  br i1 %cmp8, label %for.body9, label %for.end177, !dbg !11779

for.body9:                                        ; preds = %for.cond6
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11783
  %22 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !11783
  %tobool = icmp ne %struct.CCGElem** %22, null, !dbg !11783
  br i1 %tobool, label %if.then, label %if.else, !dbg !11786

if.then:                                          ; preds = %for.body9
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11787
  %23 = load i32, i32* %gridsize, align 4, !dbg !11787
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11787
  store i32 %23, i32* %width, align 4, !dbg !11787
  %gridsize10 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11787
  %24 = load i32, i32* %gridsize10, align 4, !dbg !11787
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11787
  store i32 %24, i32* %height, align 8, !dbg !11787
  %grids11 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11787
  %25 = load %struct.CCGElem**, %struct.CCGElem*** %grids11, align 8, !dbg !11787
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11787
  %26 = load i32*, i32** %grid_indices, align 8, !dbg !11787
  %g12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11787
  %27 = load i32, i32* %g12, align 8, !dbg !11787
  %idxprom13 = sext i32 %27 to i64, !dbg !11787
  %arrayidx14 = getelementptr inbounds i32, i32* %26, i64 %idxprom13, !dbg !11787
  %28 = load i32, i32* %arrayidx14, align 4, !dbg !11787
  %idxprom15 = sext i32 %28 to i64, !dbg !11787
  %arrayidx16 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %25, i64 %idxprom15, !dbg !11787
  %29 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx16, align 8, !dbg !11787
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11787
  store %struct.CCGElem* %29, %struct.CCGElem** %grid, align 8, !dbg !11787
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !11789
  %30 = load i32**, i32*** %grid_hidden, align 8, !dbg !11789
  %grid_indices17 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11789
  %31 = load i32*, i32** %grid_indices17, align 8, !dbg !11789
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11789
  %32 = load i32, i32* %g18, align 8, !dbg !11789
  %idxprom19 = sext i32 %32 to i64, !dbg !11789
  %arrayidx20 = getelementptr inbounds i32, i32* %31, i64 %idxprom19, !dbg !11789
  %33 = load i32, i32* %arrayidx20, align 4, !dbg !11789
  %idxprom21 = sext i32 %33 to i64, !dbg !11789
  %arrayidx22 = getelementptr inbounds i32*, i32** %30, i64 %idxprom21, !dbg !11789
  %34 = load i32*, i32** %arrayidx22, align 8, !dbg !11789
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11789
  store i32* %34, i32** %gh, align 8, !dbg !11789
  br label %if.end, !dbg !11787

if.else:                                          ; preds = %for.body9
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !11791
  %35 = load i32, i32* %totvert, align 8, !dbg !11791
  %width23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11791
  store i32 %35, i32* %width23, align 4, !dbg !11791
  %height24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11791
  store i32 1, i32* %height24, align 8, !dbg !11791
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11793
  store i32 0, i32* %gy, align 8, !dbg !11793
  br label %for.cond25, !dbg !11793

for.cond25:                                       ; preds = %for.inc170, %if.end
  %gy26 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11795
  %36 = load i32, i32* %gy26, align 8, !dbg !11795
  %height27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11795
  %37 = load i32, i32* %height27, align 8, !dbg !11795
  %cmp28 = icmp slt i32 %36, %37, !dbg !11795
  br i1 %cmp28, label %for.body29, label %for.end173, !dbg !11793

for.body29:                                       ; preds = %for.cond25
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11797
  store i32 0, i32* %gx, align 4, !dbg !11797
  br label %for.cond30, !dbg !11797

for.cond30:                                       ; preds = %for.inc, %for.body29
  %gx31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11800
  %38 = load i32, i32* %gx31, align 4, !dbg !11800
  %width32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11800
  %39 = load i32, i32* %width32, align 4, !dbg !11800
  %cmp33 = icmp slt i32 %38, %39, !dbg !11800
  br i1 %cmp33, label %for.body34, label %for.end, !dbg !11797

for.body34:                                       ; preds = %for.cond30
  %grid35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11802
  %40 = load %struct.CCGElem*, %struct.CCGElem** %grid35, align 8, !dbg !11802
  %tobool36 = icmp ne %struct.CCGElem* %40, null, !dbg !11802
  br i1 %tobool36, label %if.then37, label %if.else72, !dbg !11805

if.then37:                                        ; preds = %for.body34
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11806
  %41 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !11806
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11806
  %42 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !11806
  %call39 = call float* @CCG_elem_co(%struct.CCGKey* %41, %struct.CCGElem* %42), !dbg !11806
  %co40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11806
  store float* %call39, float** %co40, align 8, !dbg !11806
  %key41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11806
  %43 = load %struct.CCGKey*, %struct.CCGKey** %key41, align 8, !dbg !11806
  %grid42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11806
  %44 = load %struct.CCGElem*, %struct.CCGElem** %grid42, align 8, !dbg !11806
  %call43 = call float* @CCG_elem_no(%struct.CCGKey* %43, %struct.CCGElem* %44), !dbg !11806
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11806
  store float* %call43, float** %fno, align 8, !dbg !11806
  %key44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11806
  %45 = load %struct.CCGKey*, %struct.CCGKey** %key44, align 8, !dbg !11806
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %45, i32 0, i32 9, !dbg !11806
  %46 = load i32, i32* %has_mask, align 4, !dbg !11806
  %tobool45 = icmp ne i32 %46, 0, !dbg !11806
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !11806

cond.true:                                        ; preds = %if.then37
  %key46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11806
  %47 = load %struct.CCGKey*, %struct.CCGKey** %key46, align 8, !dbg !11806
  %grid47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11806
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid47, align 8, !dbg !11806
  %call48 = call float* @CCG_elem_mask(%struct.CCGKey* %47, %struct.CCGElem* %48), !dbg !11806
  br label %cond.end, !dbg !11806

cond.false:                                       ; preds = %if.then37
  br label %cond.end, !dbg !11806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call48, %cond.true ], [ null, %cond.false ], !dbg !11806
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11806
  store float* %cond, float** %mask, align 8, !dbg !11806
  %key49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11806
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key49, align 8, !dbg !11806
  %grid50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11806
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid50, align 8, !dbg !11806
  %call51 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %49, %struct.CCGElem* %50), !dbg !11806
  %grid52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11806
  store %struct.CCGElem* %call51, %struct.CCGElem** %grid52, align 8, !dbg !11806
  %gh53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11808
  %51 = load i32*, i32** %gh53, align 8, !dbg !11808
  %tobool54 = icmp ne i32* %51, null, !dbg !11808
  br i1 %tobool54, label %if.then55, label %if.end71, !dbg !11806

if.then55:                                        ; preds = %cond.end
  %gh56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11810
  %52 = load i32*, i32** %gh56, align 8, !dbg !11810
  %gy57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11810
  %53 = load i32, i32* %gy57, align 8, !dbg !11810
  %gridsize58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11810
  %54 = load i32, i32* %gridsize58, align 4, !dbg !11810
  %mul = mul nsw i32 %53, %54, !dbg !11810
  %gx59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11810
  %55 = load i32, i32* %gx59, align 4, !dbg !11810
  %add = add nsw i32 %mul, %55, !dbg !11810
  %shr = ashr i32 %add, 5, !dbg !11810
  %idxprom60 = sext i32 %shr to i64, !dbg !11810
  %arrayidx61 = getelementptr inbounds i32, i32* %52, i64 %idxprom60, !dbg !11810
  %56 = load i32, i32* %arrayidx61, align 4, !dbg !11810
  %gy62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11810
  %57 = load i32, i32* %gy62, align 8, !dbg !11810
  %gridsize63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11810
  %58 = load i32, i32* %gridsize63, align 4, !dbg !11810
  %mul64 = mul nsw i32 %57, %58, !dbg !11810
  %gx65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11810
  %59 = load i32, i32* %gx65, align 4, !dbg !11810
  %add66 = add nsw i32 %mul64, %59, !dbg !11810
  %and = and i32 %add66, 31, !dbg !11810
  %shl = shl i32 1, %and, !dbg !11810
  %and67 = and i32 %56, %shl, !dbg !11810
  %tobool68 = icmp ne i32 %and67, 0, !dbg !11810
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !11813

if.then69:                                        ; preds = %if.then55
  br label %for.inc, !dbg !11810

if.end70:                                         ; preds = %if.then55
  br label %if.end71, !dbg !11813

if.end71:                                         ; preds = %if.end70, %cond.end
  br label %if.end133, !dbg !11806

if.else72:                                        ; preds = %for.body34
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11814
  %60 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !11814
  %tobool73 = icmp ne %struct.MVert* %60, null, !dbg !11814
  br i1 %tobool73, label %if.then74, label %if.else103, !dbg !11802

if.then74:                                        ; preds = %if.else72
  %mverts75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11816
  %61 = load %struct.MVert*, %struct.MVert** %mverts75, align 8, !dbg !11816
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11816
  %62 = load i32*, i32** %vert_indices, align 8, !dbg !11816
  %gx76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11816
  %63 = load i32, i32* %gx76, align 4, !dbg !11816
  %idxprom77 = sext i32 %63 to i64, !dbg !11816
  %arrayidx78 = getelementptr inbounds i32, i32* %62, i64 %idxprom77, !dbg !11816
  %64 = load i32, i32* %arrayidx78, align 4, !dbg !11816
  %idxprom79 = sext i32 %64 to i64, !dbg !11816
  %arrayidx80 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i64 %idxprom79, !dbg !11816
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11816
  store %struct.MVert* %arrayidx80, %struct.MVert** %mvert, align 8, !dbg !11816
  %mvert81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11818
  %65 = load %struct.MVert*, %struct.MVert** %mvert81, align 8, !dbg !11818
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %65, i32 0, i32 2, !dbg !11818
  %66 = load i8, i8* %flag, align 2, !dbg !11818
  %conv = zext i8 %66 to i32, !dbg !11818
  %and82 = and i32 %conv, 16, !dbg !11818
  %tobool83 = icmp ne i32 %and82, 0, !dbg !11818
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !11816

if.then84:                                        ; preds = %if.then74
  br label %for.inc, !dbg !11818

if.end85:                                         ; preds = %if.then74
  %mvert86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11816
  %67 = load %struct.MVert*, %struct.MVert** %mvert86, align 8, !dbg !11816
  %co87 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i32 0, i32 0, !dbg !11816
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co87, i64 0, i64 0, !dbg !11816
  %co88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11816
  store float* %arraydecay, float** %co88, align 8, !dbg !11816
  %mvert89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11816
  %68 = load %struct.MVert*, %struct.MVert** %mvert89, align 8, !dbg !11816
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %68, i32 0, i32 1, !dbg !11816
  %arraydecay90 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !11816
  %no91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11816
  store i16* %arraydecay90, i16** %no91, align 8, !dbg !11816
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11820
  %69 = load float*, float** %vmask, align 8, !dbg !11820
  %tobool92 = icmp ne float* %69, null, !dbg !11820
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !11816

if.then93:                                        ; preds = %if.end85
  %vmask94 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11820
  %70 = load float*, float** %vmask94, align 8, !dbg !11820
  %vert_indices95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11820
  %71 = load i32*, i32** %vert_indices95, align 8, !dbg !11820
  %gx96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11820
  %72 = load i32, i32* %gx96, align 4, !dbg !11820
  %idxprom97 = sext i32 %72 to i64, !dbg !11820
  %arrayidx98 = getelementptr inbounds i32, i32* %71, i64 %idxprom97, !dbg !11820
  %73 = load i32, i32* %arrayidx98, align 4, !dbg !11820
  %idxprom99 = sext i32 %73 to i64, !dbg !11820
  %arrayidx100 = getelementptr inbounds float, float* %70, i64 %idxprom99, !dbg !11820
  %mask101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11820
  store float* %arrayidx100, float** %mask101, align 8, !dbg !11820
  br label %if.end102, !dbg !11820

if.end102:                                        ; preds = %if.then93, %if.end85
  br label %if.end132, !dbg !11816

if.else103:                                       ; preds = %if.else72
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11822
  %call104 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !11822
  %tobool105 = icmp ne i8 %call104, 0, !dbg !11822
  br i1 %tobool105, label %if.else110, label %if.then106, !dbg !11825

if.then106:                                       ; preds = %if.else103
  %bm_unique_verts107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11826
  %call108 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts107), !dbg !11826
  %74 = bitcast i8* %call108 to %struct.BMVert*, !dbg !11826
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11826
  store %struct.BMVert* %74, %struct.BMVert** %bm_vert, align 8, !dbg !11826
  %bm_unique_verts109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11826
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts109), !dbg !11826
  br label %if.end114, !dbg !11826

if.else110:                                       ; preds = %if.else103
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11828
  %call111 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !11828
  %75 = bitcast i8* %call111 to %struct.BMVert*, !dbg !11828
  %bm_vert112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11828
  store %struct.BMVert* %75, %struct.BMVert** %bm_vert112, align 8, !dbg !11828
  %bm_other_verts113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11828
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts113), !dbg !11828
  br label %if.end114

if.end114:                                        ; preds = %if.else110, %if.then106
  %bm_vert115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11830
  %76 = load %struct.BMVert*, %struct.BMVert** %bm_vert115, align 8, !dbg !11830
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %76, i32 0, i32 0, !dbg !11830
  %call116 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11830
  %conv117 = zext i8 %call116 to i32, !dbg !11830
  %tobool118 = icmp ne i32 %conv117, 0, !dbg !11830
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !11825

if.then119:                                       ; preds = %if.end114
  br label %for.inc, !dbg !11830

if.end120:                                        ; preds = %if.end114
  %bm_vert121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11825
  %77 = load %struct.BMVert*, %struct.BMVert** %bm_vert121, align 8, !dbg !11825
  %co122 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %77, i32 0, i32 2, !dbg !11825
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %co122, i64 0, i64 0, !dbg !11825
  %co124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11825
  store float* %arraydecay123, float** %co124, align 8, !dbg !11825
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11825
  %78 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !11825
  %no126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %78, i32 0, i32 3, !dbg !11825
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %no126, i64 0, i64 0, !dbg !11825
  %fno128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11825
  store float* %arraydecay127, float** %fno128, align 8, !dbg !11825
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11825
  %79 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !11825
  %head130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %79, i32 0, i32 0, !dbg !11825
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head130, i32 0, i32 0, !dbg !11825
  %80 = load i8*, i8** %data, align 8, !dbg !11825
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !11825
  %81 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !11825
  %idx.ext = sext i32 %81 to i64, !dbg !11825
  %add.ptr = getelementptr inbounds i8, i8* %80, i64 %idx.ext, !dbg !11825
  %82 = bitcast i8* %add.ptr to float*, !dbg !11825
  %mask131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11825
  store float* %82, float** %mask131, align 8, !dbg !11825
  br label %if.end132

if.end132:                                        ; preds = %if.end120, %if.end102
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end71
  %co134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11832
  %83 = load float*, float** %co134, align 8, !dbg !11832
  %call135 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %83), !dbg !11835
  %tobool136 = icmp ne i8 %call135, 0, !dbg !11835
  br i1 %tobool136, label %if.then137, label %if.end166, !dbg !11836

if.then137:                                       ; preds = %if.end133
  call void @llvm.dbg.declare(metadata float* %fade, metadata !11837, metadata !DIExpression()), !dbg !11839
  %84 = load float, float* %bstrength, align 4, !dbg !11840
  %85 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11841
  %86 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !11842
  %co138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11843
  %87 = load float*, float** %co138, align 8, !dbg !11843
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !11844
  %88 = load float, float* %dist, align 8, !dbg !11844
  %no139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11845
  %89 = load i16*, i16** %no139, align 8, !dbg !11845
  %fno140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11846
  %90 = load float*, float** %fno140, align 8, !dbg !11846
  %mask141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11847
  %91 = load float*, float** %mask141, align 8, !dbg !11847
  %tobool142 = icmp ne float* %91, null, !dbg !11848
  br i1 %tobool142, label %cond.true143, label %cond.false145, !dbg !11848

cond.true143:                                     ; preds = %if.then137
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11849
  %92 = load float*, float** %mask144, align 8, !dbg !11849
  %93 = load float, float* %92, align 4, !dbg !11850
  br label %cond.end146, !dbg !11848

cond.false145:                                    ; preds = %if.then137
  br label %cond.end146, !dbg !11848

cond.end146:                                      ; preds = %cond.false145, %cond.true143
  %cond147 = phi float [ %93, %cond.true143 ], [ 0.000000e+00, %cond.false145 ], !dbg !11848
  %call148 = call float @tex_strength(%struct.SculptSession* %85, %struct.Brush* %86, float* %87, float %88, i16* %89, float* %90, float %cond147), !dbg !11851
  %mul149 = fmul float %84, %call148, !dbg !11852
  store float %mul149, float* %fade, align 4, !dbg !11839
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !11853, metadata !DIExpression()), !dbg !11854
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !11855
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 1, !dbg !11856
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !11857
  %co152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11858
  %94 = load float*, float** %co152, align 8, !dbg !11858
  call void @sub_v3_v3v3(float* %arraydecay150, float* %arraydecay151, float* %94), !dbg !11859
  %95 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !11860
  %i153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11861
  %96 = load i32, i32* %i153, align 4, !dbg !11861
  %idxprom154 = sext i32 %96 to i64, !dbg !11860
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %95, i64 %idxprom154, !dbg !11860
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx155, i64 0, i64 0, !dbg !11860
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !11862
  %97 = load float, float* %fade, align 4, !dbg !11863
  call void @mul_v3_v3fl(float* %arraydecay156, float* %arraydecay157, float %97), !dbg !11864
  %mvert158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11865
  %98 = load %struct.MVert*, %struct.MVert** %mvert158, align 8, !dbg !11865
  %tobool159 = icmp ne %struct.MVert* %98, null, !dbg !11867
  br i1 %tobool159, label %if.then160, label %if.end165, !dbg !11868

if.then160:                                       ; preds = %cond.end146
  %mvert161 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11869
  %99 = load %struct.MVert*, %struct.MVert** %mvert161, align 8, !dbg !11869
  %flag162 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i32 0, i32 2, !dbg !11870
  %100 = load i8, i8* %flag162, align 2, !dbg !11871
  %conv163 = zext i8 %100 to i32, !dbg !11871
  %or = or i32 %conv163, 128, !dbg !11871
  %conv164 = trunc i32 %or to i8, !dbg !11871
  store i8 %conv164, i8* %flag162, align 2, !dbg !11871
  br label %if.end165, !dbg !11872

if.end165:                                        ; preds = %if.then160, %cond.end146
  br label %if.end166, !dbg !11873

if.end166:                                        ; preds = %if.end165, %if.end133
  br label %for.inc, !dbg !11874

for.inc:                                          ; preds = %if.end166, %if.then119, %if.then84, %if.then69
  %gx167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11800
  %101 = load i32, i32* %gx167, align 4, !dbg !11800
  %inc = add nsw i32 %101, 1, !dbg !11800
  store i32 %inc, i32* %gx167, align 4, !dbg !11800
  %i168 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11800
  %102 = load i32, i32* %i168, align 4, !dbg !11800
  %inc169 = add nsw i32 %102, 1, !dbg !11800
  store i32 %inc169, i32* %i168, align 4, !dbg !11800
  br label %for.cond30, !dbg !11800, !llvm.loop !11875

for.end:                                          ; preds = %for.cond30
  br label %for.inc170, !dbg !11877

for.inc170:                                       ; preds = %for.end
  %gy171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11795
  %103 = load i32, i32* %gy171, align 8, !dbg !11795
  %inc172 = add nsw i32 %103, 1, !dbg !11795
  store i32 %inc172, i32* %gy171, align 8, !dbg !11795
  br label %for.cond25, !dbg !11795, !llvm.loop !11878

for.end173:                                       ; preds = %for.cond25
  br label %for.inc174, !dbg !11880

for.inc174:                                       ; preds = %for.end173
  %g175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11781
  %104 = load i32, i32* %g175, align 8, !dbg !11781
  %inc176 = add nsw i32 %104, 1, !dbg !11781
  store i32 %inc176, i32* %g175, align 8, !dbg !11781
  br label %for.cond6, !dbg !11781, !llvm.loop !11881

for.end177:                                       ; preds = %for.cond6
  br label %for.inc178, !dbg !11883

for.inc178:                                       ; preds = %for.end177
  %105 = load i32, i32* %n, align 4, !dbg !11884
  %inc179 = add nsw i32 %105, 1, !dbg !11884
  store i32 %inc179, i32* %n, align 4, !dbg !11884
  br label %for.cond, !dbg !11885, !llvm.loop !11886

for.end180:                                       ; preds = %for.cond
  ret void, !dbg !11888
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_inflate_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !11889 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  %val = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !11890, metadata !DIExpression()), !dbg !11891
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11892, metadata !DIExpression()), !dbg !11893
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !11894, metadata !DIExpression()), !dbg !11895
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !11896, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !11898, metadata !DIExpression()), !dbg !11899
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11900
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !11901
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !11901
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !11899
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !11902, metadata !DIExpression()), !dbg !11903
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !11904
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !11905
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !11906
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !11903
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !11907, metadata !DIExpression()), !dbg !11908
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11909
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !11910
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !11910
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !11911
  %5 = load float, float* %bstrength1, align 8, !dbg !11911
  store float %5, float* %bstrength, align 4, !dbg !11908
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11912, metadata !DIExpression()), !dbg !11913
  store i32 0, i32* %n, align 4, !dbg !11914
  br label %for.cond, !dbg !11916

for.cond:                                         ; preds = %for.inc189, %entry
  %6 = load i32, i32* %n, align 4, !dbg !11917
  %7 = load i32, i32* %totnode.addr, align 4, !dbg !11919
  %cmp = icmp slt i32 %6, %7, !dbg !11920
  br i1 %cmp, label %for.body, label %for.end191, !dbg !11921

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !11925, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !11927, metadata !DIExpression()), !dbg !11928
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11929
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 15, !dbg !11930
  %9 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !11930
  %10 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11931
  %11 = load i32, i32* %n, align 4, !dbg !11932
  %idxprom = sext i32 %11 to i64, !dbg !11931
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %10, i64 %idxprom, !dbg !11931
  %12 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !11931
  %call2 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %9, %struct.PBVHNode* %12), !dbg !11933
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call2, i32 0, i32 0, !dbg !11934
  %13 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !11934
  store [3 x float]* %13, [3 x float]** %proxy, align 8, !dbg !11935
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11936
  call void @sculpt_brush_test_init(%struct.SculptSession* %14, %struct.SculptBrushTest* %test), !dbg !11937
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !11938
  %pbvh3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 15, !dbg !11938
  %16 = load %struct.PBVH*, %struct.PBVH** %pbvh3, align 8, !dbg !11938
  %17 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !11938
  %18 = load i32, i32* %n, align 4, !dbg !11938
  %idxprom4 = sext i32 %18 to i64, !dbg !11938
  %arrayidx5 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %17, i64 %idxprom4, !dbg !11938
  %19 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx5, align 8, !dbg !11938
  call void @pbvh_vertex_iter_init(%struct.PBVH* %16, %struct.PBVHNode* %19, %struct.PBVHVertexIter* %vd, i32 1), !dbg !11938
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11939
  store i32 0, i32* %i, align 4, !dbg !11939
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11939
  store i32 0, i32* %g, align 8, !dbg !11939
  br label %for.cond6, !dbg !11939

for.cond6:                                        ; preds = %for.inc185, %for.body
  %g7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11941
  %20 = load i32, i32* %g7, align 8, !dbg !11941
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !11941
  %21 = load i32, i32* %totgrid, align 8, !dbg !11941
  %cmp8 = icmp slt i32 %20, %21, !dbg !11941
  br i1 %cmp8, label %for.body9, label %for.end188, !dbg !11939

for.body9:                                        ; preds = %for.cond6
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11943
  %22 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !11943
  %tobool = icmp ne %struct.CCGElem** %22, null, !dbg !11943
  br i1 %tobool, label %if.then, label %if.else, !dbg !11946

if.then:                                          ; preds = %for.body9
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11947
  %23 = load i32, i32* %gridsize, align 4, !dbg !11947
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11947
  store i32 %23, i32* %width, align 4, !dbg !11947
  %gridsize10 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11947
  %24 = load i32, i32* %gridsize10, align 4, !dbg !11947
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11947
  store i32 %24, i32* %height, align 8, !dbg !11947
  %grids11 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !11947
  %25 = load %struct.CCGElem**, %struct.CCGElem*** %grids11, align 8, !dbg !11947
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11947
  %26 = load i32*, i32** %grid_indices, align 8, !dbg !11947
  %g12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11947
  %27 = load i32, i32* %g12, align 8, !dbg !11947
  %idxprom13 = sext i32 %27 to i64, !dbg !11947
  %arrayidx14 = getelementptr inbounds i32, i32* %26, i64 %idxprom13, !dbg !11947
  %28 = load i32, i32* %arrayidx14, align 4, !dbg !11947
  %idxprom15 = sext i32 %28 to i64, !dbg !11947
  %arrayidx16 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %25, i64 %idxprom15, !dbg !11947
  %29 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx16, align 8, !dbg !11947
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11947
  store %struct.CCGElem* %29, %struct.CCGElem** %grid, align 8, !dbg !11947
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !11949
  %30 = load i32**, i32*** %grid_hidden, align 8, !dbg !11949
  %grid_indices17 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !11949
  %31 = load i32*, i32** %grid_indices17, align 8, !dbg !11949
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11949
  %32 = load i32, i32* %g18, align 8, !dbg !11949
  %idxprom19 = sext i32 %32 to i64, !dbg !11949
  %arrayidx20 = getelementptr inbounds i32, i32* %31, i64 %idxprom19, !dbg !11949
  %33 = load i32, i32* %arrayidx20, align 4, !dbg !11949
  %idxprom21 = sext i32 %33 to i64, !dbg !11949
  %arrayidx22 = getelementptr inbounds i32*, i32** %30, i64 %idxprom21, !dbg !11949
  %34 = load i32*, i32** %arrayidx22, align 8, !dbg !11949
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11949
  store i32* %34, i32** %gh, align 8, !dbg !11949
  br label %if.end, !dbg !11947

if.else:                                          ; preds = %for.body9
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !11951
  %35 = load i32, i32* %totvert, align 8, !dbg !11951
  %width23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11951
  store i32 %35, i32* %width23, align 4, !dbg !11951
  %height24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11951
  store i32 1, i32* %height24, align 8, !dbg !11951
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11953
  store i32 0, i32* %gy, align 8, !dbg !11953
  br label %for.cond25, !dbg !11953

for.cond25:                                       ; preds = %for.inc181, %if.end
  %gy26 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11955
  %36 = load i32, i32* %gy26, align 8, !dbg !11955
  %height27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !11955
  %37 = load i32, i32* %height27, align 8, !dbg !11955
  %cmp28 = icmp slt i32 %36, %37, !dbg !11955
  br i1 %cmp28, label %for.body29, label %for.end184, !dbg !11953

for.body29:                                       ; preds = %for.cond25
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11957
  store i32 0, i32* %gx, align 4, !dbg !11957
  br label %for.cond30, !dbg !11957

for.cond30:                                       ; preds = %for.inc, %for.body29
  %gx31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11960
  %38 = load i32, i32* %gx31, align 4, !dbg !11960
  %width32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !11960
  %39 = load i32, i32* %width32, align 4, !dbg !11960
  %cmp33 = icmp slt i32 %38, %39, !dbg !11960
  br i1 %cmp33, label %for.body34, label %for.end, !dbg !11957

for.body34:                                       ; preds = %for.cond30
  %grid35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11962
  %40 = load %struct.CCGElem*, %struct.CCGElem** %grid35, align 8, !dbg !11962
  %tobool36 = icmp ne %struct.CCGElem* %40, null, !dbg !11962
  br i1 %tobool36, label %if.then37, label %if.else72, !dbg !11965

if.then37:                                        ; preds = %for.body34
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11966
  %41 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !11966
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11966
  %42 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !11966
  %call39 = call float* @CCG_elem_co(%struct.CCGKey* %41, %struct.CCGElem* %42), !dbg !11966
  %co40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11966
  store float* %call39, float** %co40, align 8, !dbg !11966
  %key41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11966
  %43 = load %struct.CCGKey*, %struct.CCGKey** %key41, align 8, !dbg !11966
  %grid42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11966
  %44 = load %struct.CCGElem*, %struct.CCGElem** %grid42, align 8, !dbg !11966
  %call43 = call float* @CCG_elem_no(%struct.CCGKey* %43, %struct.CCGElem* %44), !dbg !11966
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11966
  store float* %call43, float** %fno, align 8, !dbg !11966
  %key44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11966
  %45 = load %struct.CCGKey*, %struct.CCGKey** %key44, align 8, !dbg !11966
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %45, i32 0, i32 9, !dbg !11966
  %46 = load i32, i32* %has_mask, align 4, !dbg !11966
  %tobool45 = icmp ne i32 %46, 0, !dbg !11966
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !11966

cond.true:                                        ; preds = %if.then37
  %key46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11966
  %47 = load %struct.CCGKey*, %struct.CCGKey** %key46, align 8, !dbg !11966
  %grid47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11966
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid47, align 8, !dbg !11966
  %call48 = call float* @CCG_elem_mask(%struct.CCGKey* %47, %struct.CCGElem* %48), !dbg !11966
  br label %cond.end, !dbg !11966

cond.false:                                       ; preds = %if.then37
  br label %cond.end, !dbg !11966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call48, %cond.true ], [ null, %cond.false ], !dbg !11966
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11966
  store float* %cond, float** %mask, align 8, !dbg !11966
  %key49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !11966
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key49, align 8, !dbg !11966
  %grid50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11966
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid50, align 8, !dbg !11966
  %call51 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %49, %struct.CCGElem* %50), !dbg !11966
  %grid52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !11966
  store %struct.CCGElem* %call51, %struct.CCGElem** %grid52, align 8, !dbg !11966
  %gh53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11968
  %51 = load i32*, i32** %gh53, align 8, !dbg !11968
  %tobool54 = icmp ne i32* %51, null, !dbg !11968
  br i1 %tobool54, label %if.then55, label %if.end71, !dbg !11966

if.then55:                                        ; preds = %cond.end
  %gh56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !11970
  %52 = load i32*, i32** %gh56, align 8, !dbg !11970
  %gy57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11970
  %53 = load i32, i32* %gy57, align 8, !dbg !11970
  %gridsize58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11970
  %54 = load i32, i32* %gridsize58, align 4, !dbg !11970
  %mul = mul nsw i32 %53, %54, !dbg !11970
  %gx59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11970
  %55 = load i32, i32* %gx59, align 4, !dbg !11970
  %add = add nsw i32 %mul, %55, !dbg !11970
  %shr = ashr i32 %add, 5, !dbg !11970
  %idxprom60 = sext i32 %shr to i64, !dbg !11970
  %arrayidx61 = getelementptr inbounds i32, i32* %52, i64 %idxprom60, !dbg !11970
  %56 = load i32, i32* %arrayidx61, align 4, !dbg !11970
  %gy62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11970
  %57 = load i32, i32* %gy62, align 8, !dbg !11970
  %gridsize63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !11970
  %58 = load i32, i32* %gridsize63, align 4, !dbg !11970
  %mul64 = mul nsw i32 %57, %58, !dbg !11970
  %gx65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11970
  %59 = load i32, i32* %gx65, align 4, !dbg !11970
  %add66 = add nsw i32 %mul64, %59, !dbg !11970
  %and = and i32 %add66, 31, !dbg !11970
  %shl = shl i32 1, %and, !dbg !11970
  %and67 = and i32 %56, %shl, !dbg !11970
  %tobool68 = icmp ne i32 %and67, 0, !dbg !11970
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !11973

if.then69:                                        ; preds = %if.then55
  br label %for.inc, !dbg !11970

if.end70:                                         ; preds = %if.then55
  br label %if.end71, !dbg !11973

if.end71:                                         ; preds = %if.end70, %cond.end
  br label %if.end133, !dbg !11966

if.else72:                                        ; preds = %for.body34
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11974
  %60 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !11974
  %tobool73 = icmp ne %struct.MVert* %60, null, !dbg !11974
  br i1 %tobool73, label %if.then74, label %if.else103, !dbg !11962

if.then74:                                        ; preds = %if.else72
  %mverts75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !11976
  %61 = load %struct.MVert*, %struct.MVert** %mverts75, align 8, !dbg !11976
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11976
  %62 = load i32*, i32** %vert_indices, align 8, !dbg !11976
  %gx76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11976
  %63 = load i32, i32* %gx76, align 4, !dbg !11976
  %idxprom77 = sext i32 %63 to i64, !dbg !11976
  %arrayidx78 = getelementptr inbounds i32, i32* %62, i64 %idxprom77, !dbg !11976
  %64 = load i32, i32* %arrayidx78, align 4, !dbg !11976
  %idxprom79 = sext i32 %64 to i64, !dbg !11976
  %arrayidx80 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i64 %idxprom79, !dbg !11976
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11976
  store %struct.MVert* %arrayidx80, %struct.MVert** %mvert, align 8, !dbg !11976
  %mvert81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11978
  %65 = load %struct.MVert*, %struct.MVert** %mvert81, align 8, !dbg !11978
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %65, i32 0, i32 2, !dbg !11978
  %66 = load i8, i8* %flag, align 2, !dbg !11978
  %conv = zext i8 %66 to i32, !dbg !11978
  %and82 = and i32 %conv, 16, !dbg !11978
  %tobool83 = icmp ne i32 %and82, 0, !dbg !11978
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !11976

if.then84:                                        ; preds = %if.then74
  br label %for.inc, !dbg !11978

if.end85:                                         ; preds = %if.then74
  %mvert86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11976
  %67 = load %struct.MVert*, %struct.MVert** %mvert86, align 8, !dbg !11976
  %co87 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i32 0, i32 0, !dbg !11976
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co87, i64 0, i64 0, !dbg !11976
  %co88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11976
  store float* %arraydecay, float** %co88, align 8, !dbg !11976
  %mvert89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !11976
  %68 = load %struct.MVert*, %struct.MVert** %mvert89, align 8, !dbg !11976
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %68, i32 0, i32 1, !dbg !11976
  %arraydecay90 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !11976
  %no91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !11976
  store i16* %arraydecay90, i16** %no91, align 8, !dbg !11976
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11980
  %69 = load float*, float** %vmask, align 8, !dbg !11980
  %tobool92 = icmp ne float* %69, null, !dbg !11980
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !11976

if.then93:                                        ; preds = %if.end85
  %vmask94 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !11980
  %70 = load float*, float** %vmask94, align 8, !dbg !11980
  %vert_indices95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !11980
  %71 = load i32*, i32** %vert_indices95, align 8, !dbg !11980
  %gx96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11980
  %72 = load i32, i32* %gx96, align 4, !dbg !11980
  %idxprom97 = sext i32 %72 to i64, !dbg !11980
  %arrayidx98 = getelementptr inbounds i32, i32* %71, i64 %idxprom97, !dbg !11980
  %73 = load i32, i32* %arrayidx98, align 4, !dbg !11980
  %idxprom99 = sext i32 %73 to i64, !dbg !11980
  %arrayidx100 = getelementptr inbounds float, float* %70, i64 %idxprom99, !dbg !11980
  %mask101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11980
  store float* %arrayidx100, float** %mask101, align 8, !dbg !11980
  br label %if.end102, !dbg !11980

if.end102:                                        ; preds = %if.then93, %if.end85
  br label %if.end132, !dbg !11976

if.else103:                                       ; preds = %if.else72
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11982
  %call104 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !11982
  %tobool105 = icmp ne i8 %call104, 0, !dbg !11982
  br i1 %tobool105, label %if.else110, label %if.then106, !dbg !11985

if.then106:                                       ; preds = %if.else103
  %bm_unique_verts107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11986
  %call108 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts107), !dbg !11986
  %74 = bitcast i8* %call108 to %struct.BMVert*, !dbg !11986
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11986
  store %struct.BMVert* %74, %struct.BMVert** %bm_vert, align 8, !dbg !11986
  %bm_unique_verts109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !11986
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts109), !dbg !11986
  br label %if.end114, !dbg !11986

if.else110:                                       ; preds = %if.else103
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11988
  %call111 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !11988
  %75 = bitcast i8* %call111 to %struct.BMVert*, !dbg !11988
  %bm_vert112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11988
  store %struct.BMVert* %75, %struct.BMVert** %bm_vert112, align 8, !dbg !11988
  %bm_other_verts113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !11988
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts113), !dbg !11988
  br label %if.end114

if.end114:                                        ; preds = %if.else110, %if.then106
  %bm_vert115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11990
  %76 = load %struct.BMVert*, %struct.BMVert** %bm_vert115, align 8, !dbg !11990
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %76, i32 0, i32 0, !dbg !11990
  %call116 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11990
  %conv117 = zext i8 %call116 to i32, !dbg !11990
  %tobool118 = icmp ne i32 %conv117, 0, !dbg !11990
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !11985

if.then119:                                       ; preds = %if.end114
  br label %for.inc, !dbg !11990

if.end120:                                        ; preds = %if.end114
  %bm_vert121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11985
  %77 = load %struct.BMVert*, %struct.BMVert** %bm_vert121, align 8, !dbg !11985
  %co122 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %77, i32 0, i32 2, !dbg !11985
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %co122, i64 0, i64 0, !dbg !11985
  %co124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11985
  store float* %arraydecay123, float** %co124, align 8, !dbg !11985
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11985
  %78 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !11985
  %no126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %78, i32 0, i32 3, !dbg !11985
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %no126, i64 0, i64 0, !dbg !11985
  %fno128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !11985
  store float* %arraydecay127, float** %fno128, align 8, !dbg !11985
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !11985
  %79 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !11985
  %head130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %79, i32 0, i32 0, !dbg !11985
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head130, i32 0, i32 0, !dbg !11985
  %80 = load i8*, i8** %data, align 8, !dbg !11985
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !11985
  %81 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !11985
  %idx.ext = sext i32 %81 to i64, !dbg !11985
  %add.ptr = getelementptr inbounds i8, i8* %80, i64 %idx.ext, !dbg !11985
  %82 = bitcast i8* %add.ptr to float*, !dbg !11985
  %mask131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !11985
  store float* %82, float** %mask131, align 8, !dbg !11985
  br label %if.end132

if.end132:                                        ; preds = %if.end120, %if.end102
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end71
  %co134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !11992
  %83 = load float*, float** %co134, align 8, !dbg !11992
  %call135 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %83), !dbg !11995
  %tobool136 = icmp ne i8 %call135, 0, !dbg !11995
  br i1 %tobool136, label %if.then137, label %if.end177, !dbg !11996

if.then137:                                       ; preds = %if.end133
  call void @llvm.dbg.declare(metadata float* %fade, metadata !11997, metadata !DIExpression()), !dbg !11999
  %84 = load float, float* %bstrength, align 4, !dbg !12000
  %85 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12001
  %86 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12002
  %co138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12003
  %87 = load float*, float** %co138, align 8, !dbg !12003
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12004
  %88 = load float, float* %dist, align 8, !dbg !12004
  %no139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12005
  %89 = load i16*, i16** %no139, align 8, !dbg !12005
  %fno140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12006
  %90 = load float*, float** %fno140, align 8, !dbg !12006
  %mask141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12007
  %91 = load float*, float** %mask141, align 8, !dbg !12007
  %tobool142 = icmp ne float* %91, null, !dbg !12008
  br i1 %tobool142, label %cond.true143, label %cond.false145, !dbg !12008

cond.true143:                                     ; preds = %if.then137
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12009
  %92 = load float*, float** %mask144, align 8, !dbg !12009
  %93 = load float, float* %92, align 4, !dbg !12010
  br label %cond.end146, !dbg !12008

cond.false145:                                    ; preds = %if.then137
  br label %cond.end146, !dbg !12008

cond.end146:                                      ; preds = %cond.false145, %cond.true143
  %cond147 = phi float [ %93, %cond.true143 ], [ 0.000000e+00, %cond.false145 ], !dbg !12008
  %call148 = call float @tex_strength(%struct.SculptSession* %85, %struct.Brush* %86, float* %87, float %88, i16* %89, float* %90, float %cond147), !dbg !12011
  %mul149 = fmul float %84, %call148, !dbg !12012
  store float %mul149, float* %fade, align 4, !dbg !11999
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !12013, metadata !DIExpression()), !dbg !12014
  %fno150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12015
  %94 = load float*, float** %fno150, align 8, !dbg !12015
  %tobool151 = icmp ne float* %94, null, !dbg !12017
  br i1 %tobool151, label %if.then152, label %if.else155, !dbg !12018

if.then152:                                       ; preds = %cond.end146
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !12019
  %fno154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12020
  %95 = load float*, float** %fno154, align 8, !dbg !12020
  call void @copy_v3_v3(float* %arraydecay153, float* %95), !dbg !12021
  br label %if.end158, !dbg !12021

if.else155:                                       ; preds = %cond.end146
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !12022
  %no157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12023
  %96 = load i16*, i16** %no157, align 8, !dbg !12023
  call void @normal_short_to_float_v3(float* %arraydecay156, i16* %96), !dbg !12024
  br label %if.end158

if.end158:                                        ; preds = %if.else155, %if.then152
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !12025
  %97 = load float, float* %fade, align 4, !dbg !12026
  %98 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12027
  %cache160 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %98, i32 0, i32 28, !dbg !12028
  %99 = load %struct.StrokeCache*, %struct.StrokeCache** %cache160, align 8, !dbg !12028
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %99, i32 0, i32 11, !dbg !12029
  %100 = load float, float* %radius, align 8, !dbg !12029
  %mul161 = fmul float %97, %100, !dbg !12030
  call void @mul_v3_fl(float* %arraydecay159, float %mul161), !dbg !12031
  %101 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12032
  %i162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12033
  %102 = load i32, i32* %i162, align 4, !dbg !12033
  %idxprom163 = sext i32 %102 to i64, !dbg !12032
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %101, i64 %idxprom163, !dbg !12032
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx164, i64 0, i64 0, !dbg !12032
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !12034
  %103 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12035
  %cache167 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %103, i32 0, i32 28, !dbg !12036
  %104 = load %struct.StrokeCache*, %struct.StrokeCache** %cache167, align 8, !dbg !12036
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %104, i32 0, i32 1, !dbg !12037
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !12035
  call void @mul_v3_v3v3(float* %arraydecay165, float* %arraydecay166, float* %arraydecay168), !dbg !12038
  %mvert169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12039
  %105 = load %struct.MVert*, %struct.MVert** %mvert169, align 8, !dbg !12039
  %tobool170 = icmp ne %struct.MVert* %105, null, !dbg !12041
  br i1 %tobool170, label %if.then171, label %if.end176, !dbg !12042

if.then171:                                       ; preds = %if.end158
  %mvert172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12043
  %106 = load %struct.MVert*, %struct.MVert** %mvert172, align 8, !dbg !12043
  %flag173 = getelementptr inbounds %struct.MVert, %struct.MVert* %106, i32 0, i32 2, !dbg !12044
  %107 = load i8, i8* %flag173, align 2, !dbg !12045
  %conv174 = zext i8 %107 to i32, !dbg !12045
  %or = or i32 %conv174, 128, !dbg !12045
  %conv175 = trunc i32 %or to i8, !dbg !12045
  store i8 %conv175, i8* %flag173, align 2, !dbg !12045
  br label %if.end176, !dbg !12046

if.end176:                                        ; preds = %if.then171, %if.end158
  br label %if.end177, !dbg !12047

if.end177:                                        ; preds = %if.end176, %if.end133
  br label %for.inc, !dbg !12048

for.inc:                                          ; preds = %if.end177, %if.then119, %if.then84, %if.then69
  %gx178 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !11960
  %108 = load i32, i32* %gx178, align 4, !dbg !11960
  %inc = add nsw i32 %108, 1, !dbg !11960
  store i32 %inc, i32* %gx178, align 4, !dbg !11960
  %i179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !11960
  %109 = load i32, i32* %i179, align 4, !dbg !11960
  %inc180 = add nsw i32 %109, 1, !dbg !11960
  store i32 %inc180, i32* %i179, align 4, !dbg !11960
  br label %for.cond30, !dbg !11960, !llvm.loop !12049

for.end:                                          ; preds = %for.cond30
  br label %for.inc181, !dbg !12051

for.inc181:                                       ; preds = %for.end
  %gy182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !11955
  %110 = load i32, i32* %gy182, align 8, !dbg !11955
  %inc183 = add nsw i32 %110, 1, !dbg !11955
  store i32 %inc183, i32* %gy182, align 8, !dbg !11955
  br label %for.cond25, !dbg !11955, !llvm.loop !12052

for.end184:                                       ; preds = %for.cond25
  br label %for.inc185, !dbg !12054

for.inc185:                                       ; preds = %for.end184
  %g186 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !11941
  %111 = load i32, i32* %g186, align 8, !dbg !11941
  %inc187 = add nsw i32 %111, 1, !dbg !11941
  store i32 %inc187, i32* %g186, align 8, !dbg !11941
  br label %for.cond6, !dbg !11941, !llvm.loop !12055

for.end188:                                       ; preds = %for.cond6
  br label %for.inc189, !dbg !12057

for.inc189:                                       ; preds = %for.end188
  %112 = load i32, i32* %n, align 4, !dbg !12058
  %inc190 = add nsw i32 %112, 1, !dbg !12058
  store i32 %inc190, i32* %n, align 4, !dbg !12058
  br label %for.cond, !dbg !12059, !llvm.loop !12060

for.end191:                                       ; preds = %for.cond
  ret void, !dbg !12062
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_grab_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !12063 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %grab_delta = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %len = alloca float, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %orig_data = alloca %struct.SculptOrigVertData, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !12064, metadata !DIExpression()), !dbg !12065
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12066, metadata !DIExpression()), !dbg !12067
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !12068, metadata !DIExpression()), !dbg !12069
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !12070, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !12072, metadata !DIExpression()), !dbg !12073
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12074
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !12075
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !12075
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !12073
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12076, metadata !DIExpression()), !dbg !12077
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !12078
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !12079
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12080
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12077
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !12081, metadata !DIExpression()), !dbg !12082
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12083
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !12084
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !12084
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !12085
  %5 = load float, float* %bstrength1, align 8, !dbg !12085
  store float %5, float* %bstrength, align 4, !dbg !12082
  call void @llvm.dbg.declare(metadata [3 x float]* %grab_delta, metadata !12086, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12088, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.declare(metadata float* %len, metadata !12090, metadata !DIExpression()), !dbg !12091
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12092
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12093
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !12094
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !12094
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 27, !dbg !12095
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !12093
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !12096
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12097
  %call5 = call float @len_v3(float* %arraydecay4), !dbg !12098
  store float %call5, float* %len, align 4, !dbg !12099
  %8 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12100
  %normal_weight = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 11, !dbg !12102
  %9 = load float, float* %normal_weight, align 8, !dbg !12102
  %cmp = fcmp ogt float %9, 0.000000e+00, !dbg !12103
  br i1 %cmp, label %if.then, label %if.end, !dbg !12104

if.then:                                          ; preds = %entry
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12105
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 28, !dbg !12107
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !12107
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 35, !dbg !12108
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !12105
  %12 = load float, float* %len, align 4, !dbg !12109
  %13 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12110
  %normal_weight8 = getelementptr inbounds %struct.Brush, %struct.Brush* %13, i32 0, i32 11, !dbg !12111
  %14 = load float, float* %normal_weight8, align 8, !dbg !12111
  %mul = fmul float %12, %14, !dbg !12112
  call void @mul_v3_fl(float* %arraydecay7, float %mul), !dbg !12113
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12114
  %15 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12115
  %normal_weight10 = getelementptr inbounds %struct.Brush, %struct.Brush* %15, i32 0, i32 11, !dbg !12116
  %16 = load float, float* %normal_weight10, align 8, !dbg !12116
  %sub = fsub float 1.000000e+00, %16, !dbg !12117
  call void @mul_v3_fl(float* %arraydecay9, float %sub), !dbg !12118
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12119
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12120
  %cache12 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !12121
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache12, align 8, !dbg !12121
  %sculpt_normal_symm13 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 35, !dbg !12122
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm13, i64 0, i64 0, !dbg !12120
  call void @add_v3_v3(float* %arraydecay11, float* %arraydecay14), !dbg !12123
  br label %if.end, !dbg !12124

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %n, align 4, !dbg !12125
  br label %for.cond, !dbg !12127

for.cond:                                         ; preds = %for.inc194, %if.end
  %19 = load i32, i32* %n, align 4, !dbg !12128
  %20 = load i32, i32* %totnode.addr, align 4, !dbg !12130
  %cmp15 = icmp slt i32 %19, %20, !dbg !12131
  br i1 %cmp15, label %for.body, label %for.end196, !dbg !12132

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !12133, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData* %orig_data, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !12140, metadata !DIExpression()), !dbg !12141
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12142
  %22 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12143
  %23 = load i32, i32* %n, align 4, !dbg !12144
  %idxprom = sext i32 %23 to i64, !dbg !12143
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %22, i64 %idxprom, !dbg !12143
  %24 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !12143
  call void @sculpt_orig_vert_data_init(%struct.SculptOrigVertData* %orig_data, %struct.Object* %21, %struct.PBVHNode* %24), !dbg !12145
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12146
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 15, !dbg !12147
  %26 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !12147
  %27 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12148
  %28 = load i32, i32* %n, align 4, !dbg !12149
  %idxprom16 = sext i32 %28 to i64, !dbg !12148
  %arrayidx17 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %27, i64 %idxprom16, !dbg !12148
  %29 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx17, align 8, !dbg !12148
  %call18 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %26, %struct.PBVHNode* %29), !dbg !12150
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call18, i32 0, i32 0, !dbg !12151
  %30 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !12151
  store [3 x float]* %30, [3 x float]** %proxy, align 8, !dbg !12152
  %31 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12153
  call void @sculpt_brush_test_init(%struct.SculptSession* %31, %struct.SculptBrushTest* %test), !dbg !12154
  %32 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12155
  %pbvh19 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %32, i32 0, i32 15, !dbg !12155
  %33 = load %struct.PBVH*, %struct.PBVH** %pbvh19, align 8, !dbg !12155
  %34 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12155
  %35 = load i32, i32* %n, align 4, !dbg !12155
  %idxprom20 = sext i32 %35 to i64, !dbg !12155
  %arrayidx21 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %34, i64 %idxprom20, !dbg !12155
  %36 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx21, align 8, !dbg !12155
  call void @pbvh_vertex_iter_init(%struct.PBVH* %33, %struct.PBVHNode* %36, %struct.PBVHVertexIter* %vd, i32 1), !dbg !12155
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12156
  store i32 0, i32* %i, align 4, !dbg !12156
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12156
  store i32 0, i32* %g, align 8, !dbg !12156
  br label %for.cond22, !dbg !12156

for.cond22:                                       ; preds = %for.inc190, %for.body
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12158
  %37 = load i32, i32* %g23, align 8, !dbg !12158
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !12158
  %38 = load i32, i32* %totgrid, align 8, !dbg !12158
  %cmp24 = icmp slt i32 %37, %38, !dbg !12158
  br i1 %cmp24, label %for.body25, label %for.end193, !dbg !12156

for.body25:                                       ; preds = %for.cond22
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12160
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !12160
  %tobool = icmp ne %struct.CCGElem** %39, null, !dbg !12160
  br i1 %tobool, label %if.then26, label %if.else, !dbg !12163

if.then26:                                        ; preds = %for.body25
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12164
  %40 = load i32, i32* %gridsize, align 4, !dbg !12164
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12164
  store i32 %40, i32* %width, align 4, !dbg !12164
  %gridsize27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12164
  %41 = load i32, i32* %gridsize27, align 4, !dbg !12164
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12164
  store i32 %41, i32* %height, align 8, !dbg !12164
  %grids28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12164
  %42 = load %struct.CCGElem**, %struct.CCGElem*** %grids28, align 8, !dbg !12164
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12164
  %43 = load i32*, i32** %grid_indices, align 8, !dbg !12164
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12164
  %44 = load i32, i32* %g29, align 8, !dbg !12164
  %idxprom30 = sext i32 %44 to i64, !dbg !12164
  %arrayidx31 = getelementptr inbounds i32, i32* %43, i64 %idxprom30, !dbg !12164
  %45 = load i32, i32* %arrayidx31, align 4, !dbg !12164
  %idxprom32 = sext i32 %45 to i64, !dbg !12164
  %arrayidx33 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %42, i64 %idxprom32, !dbg !12164
  %46 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx33, align 8, !dbg !12164
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12164
  store %struct.CCGElem* %46, %struct.CCGElem** %grid, align 8, !dbg !12164
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !12166
  %47 = load i32**, i32*** %grid_hidden, align 8, !dbg !12166
  %grid_indices34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12166
  %48 = load i32*, i32** %grid_indices34, align 8, !dbg !12166
  %g35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12166
  %49 = load i32, i32* %g35, align 8, !dbg !12166
  %idxprom36 = sext i32 %49 to i64, !dbg !12166
  %arrayidx37 = getelementptr inbounds i32, i32* %48, i64 %idxprom36, !dbg !12166
  %50 = load i32, i32* %arrayidx37, align 4, !dbg !12166
  %idxprom38 = sext i32 %50 to i64, !dbg !12166
  %arrayidx39 = getelementptr inbounds i32*, i32** %47, i64 %idxprom38, !dbg !12166
  %51 = load i32*, i32** %arrayidx39, align 8, !dbg !12166
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12166
  store i32* %51, i32** %gh, align 8, !dbg !12166
  br label %if.end42, !dbg !12164

if.else:                                          ; preds = %for.body25
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !12168
  %52 = load i32, i32* %totvert, align 8, !dbg !12168
  %width40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12168
  store i32 %52, i32* %width40, align 4, !dbg !12168
  %height41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12168
  store i32 1, i32* %height41, align 8, !dbg !12168
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then26
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12170
  store i32 0, i32* %gy, align 8, !dbg !12170
  br label %for.cond43, !dbg !12170

for.cond43:                                       ; preds = %for.inc186, %if.end42
  %gy44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12172
  %53 = load i32, i32* %gy44, align 8, !dbg !12172
  %height45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12172
  %54 = load i32, i32* %height45, align 8, !dbg !12172
  %cmp46 = icmp slt i32 %53, %54, !dbg !12172
  br i1 %cmp46, label %for.body47, label %for.end189, !dbg !12170

for.body47:                                       ; preds = %for.cond43
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12174
  store i32 0, i32* %gx, align 4, !dbg !12174
  br label %for.cond48, !dbg !12174

for.cond48:                                       ; preds = %for.inc, %for.body47
  %gx49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12177
  %55 = load i32, i32* %gx49, align 4, !dbg !12177
  %width50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12177
  %56 = load i32, i32* %width50, align 4, !dbg !12177
  %cmp51 = icmp slt i32 %55, %56, !dbg !12177
  br i1 %cmp51, label %for.body52, label %for.end, !dbg !12174

for.body52:                                       ; preds = %for.cond48
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12179
  %57 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !12179
  %tobool54 = icmp ne %struct.CCGElem* %57, null, !dbg !12179
  br i1 %tobool54, label %if.then55, label %if.else91, !dbg !12182

if.then55:                                        ; preds = %for.body52
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12183
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !12183
  %grid56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12183
  %59 = load %struct.CCGElem*, %struct.CCGElem** %grid56, align 8, !dbg !12183
  %call57 = call float* @CCG_elem_co(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !12183
  %co58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12183
  store float* %call57, float** %co58, align 8, !dbg !12183
  %key59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12183
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key59, align 8, !dbg !12183
  %grid60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12183
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid60, align 8, !dbg !12183
  %call61 = call float* @CCG_elem_no(%struct.CCGKey* %60, %struct.CCGElem* %61), !dbg !12183
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12183
  store float* %call61, float** %fno, align 8, !dbg !12183
  %key62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12183
  %62 = load %struct.CCGKey*, %struct.CCGKey** %key62, align 8, !dbg !12183
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %62, i32 0, i32 9, !dbg !12183
  %63 = load i32, i32* %has_mask, align 4, !dbg !12183
  %tobool63 = icmp ne i32 %63, 0, !dbg !12183
  br i1 %tobool63, label %cond.true, label %cond.false, !dbg !12183

cond.true:                                        ; preds = %if.then55
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12183
  %64 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !12183
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12183
  %65 = load %struct.CCGElem*, %struct.CCGElem** %grid65, align 8, !dbg !12183
  %call66 = call float* @CCG_elem_mask(%struct.CCGKey* %64, %struct.CCGElem* %65), !dbg !12183
  br label %cond.end, !dbg !12183

cond.false:                                       ; preds = %if.then55
  br label %cond.end, !dbg !12183

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call66, %cond.true ], [ null, %cond.false ], !dbg !12183
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12183
  store float* %cond, float** %mask, align 8, !dbg !12183
  %key67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12183
  %66 = load %struct.CCGKey*, %struct.CCGKey** %key67, align 8, !dbg !12183
  %grid68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12183
  %67 = load %struct.CCGElem*, %struct.CCGElem** %grid68, align 8, !dbg !12183
  %call69 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %66, %struct.CCGElem* %67), !dbg !12183
  %grid70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12183
  store %struct.CCGElem* %call69, %struct.CCGElem** %grid70, align 8, !dbg !12183
  %gh71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12185
  %68 = load i32*, i32** %gh71, align 8, !dbg !12185
  %tobool72 = icmp ne i32* %68, null, !dbg !12185
  br i1 %tobool72, label %if.then73, label %if.end90, !dbg !12183

if.then73:                                        ; preds = %cond.end
  %gh74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12187
  %69 = load i32*, i32** %gh74, align 8, !dbg !12187
  %gy75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12187
  %70 = load i32, i32* %gy75, align 8, !dbg !12187
  %gridsize76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12187
  %71 = load i32, i32* %gridsize76, align 4, !dbg !12187
  %mul77 = mul nsw i32 %70, %71, !dbg !12187
  %gx78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12187
  %72 = load i32, i32* %gx78, align 4, !dbg !12187
  %add = add nsw i32 %mul77, %72, !dbg !12187
  %shr = ashr i32 %add, 5, !dbg !12187
  %idxprom79 = sext i32 %shr to i64, !dbg !12187
  %arrayidx80 = getelementptr inbounds i32, i32* %69, i64 %idxprom79, !dbg !12187
  %73 = load i32, i32* %arrayidx80, align 4, !dbg !12187
  %gy81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12187
  %74 = load i32, i32* %gy81, align 8, !dbg !12187
  %gridsize82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12187
  %75 = load i32, i32* %gridsize82, align 4, !dbg !12187
  %mul83 = mul nsw i32 %74, %75, !dbg !12187
  %gx84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12187
  %76 = load i32, i32* %gx84, align 4, !dbg !12187
  %add85 = add nsw i32 %mul83, %76, !dbg !12187
  %and = and i32 %add85, 31, !dbg !12187
  %shl = shl i32 1, %and, !dbg !12187
  %and86 = and i32 %73, %shl, !dbg !12187
  %tobool87 = icmp ne i32 %and86, 0, !dbg !12187
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !12190

if.then88:                                        ; preds = %if.then73
  br label %for.inc, !dbg !12187

if.end89:                                         ; preds = %if.then73
  br label %if.end90, !dbg !12190

if.end90:                                         ; preds = %if.end89, %cond.end
  br label %if.end153, !dbg !12183

if.else91:                                        ; preds = %for.body52
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12191
  %77 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !12191
  %tobool92 = icmp ne %struct.MVert* %77, null, !dbg !12191
  br i1 %tobool92, label %if.then93, label %if.else123, !dbg !12179

if.then93:                                        ; preds = %if.else91
  %mverts94 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12193
  %78 = load %struct.MVert*, %struct.MVert** %mverts94, align 8, !dbg !12193
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12193
  %79 = load i32*, i32** %vert_indices, align 8, !dbg !12193
  %gx95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12193
  %80 = load i32, i32* %gx95, align 4, !dbg !12193
  %idxprom96 = sext i32 %80 to i64, !dbg !12193
  %arrayidx97 = getelementptr inbounds i32, i32* %79, i64 %idxprom96, !dbg !12193
  %81 = load i32, i32* %arrayidx97, align 4, !dbg !12193
  %idxprom98 = sext i32 %81 to i64, !dbg !12193
  %arrayidx99 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i64 %idxprom98, !dbg !12193
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12193
  store %struct.MVert* %arrayidx99, %struct.MVert** %mvert, align 8, !dbg !12193
  %mvert100 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12195
  %82 = load %struct.MVert*, %struct.MVert** %mvert100, align 8, !dbg !12195
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 2, !dbg !12195
  %83 = load i8, i8* %flag, align 2, !dbg !12195
  %conv = zext i8 %83 to i32, !dbg !12195
  %and101 = and i32 %conv, 16, !dbg !12195
  %tobool102 = icmp ne i32 %and101, 0, !dbg !12195
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !12193

if.then103:                                       ; preds = %if.then93
  br label %for.inc, !dbg !12195

if.end104:                                        ; preds = %if.then93
  %mvert105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12193
  %84 = load %struct.MVert*, %struct.MVert** %mvert105, align 8, !dbg !12193
  %co106 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i32 0, i32 0, !dbg !12193
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co106, i64 0, i64 0, !dbg !12193
  %co108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12193
  store float* %arraydecay107, float** %co108, align 8, !dbg !12193
  %mvert109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12193
  %85 = load %struct.MVert*, %struct.MVert** %mvert109, align 8, !dbg !12193
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %85, i32 0, i32 1, !dbg !12193
  %arraydecay110 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !12193
  %no111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12193
  store i16* %arraydecay110, i16** %no111, align 8, !dbg !12193
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12197
  %86 = load float*, float** %vmask, align 8, !dbg !12197
  %tobool112 = icmp ne float* %86, null, !dbg !12197
  br i1 %tobool112, label %if.then113, label %if.end122, !dbg !12193

if.then113:                                       ; preds = %if.end104
  %vmask114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12197
  %87 = load float*, float** %vmask114, align 8, !dbg !12197
  %vert_indices115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12197
  %88 = load i32*, i32** %vert_indices115, align 8, !dbg !12197
  %gx116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12197
  %89 = load i32, i32* %gx116, align 4, !dbg !12197
  %idxprom117 = sext i32 %89 to i64, !dbg !12197
  %arrayidx118 = getelementptr inbounds i32, i32* %88, i64 %idxprom117, !dbg !12197
  %90 = load i32, i32* %arrayidx118, align 4, !dbg !12197
  %idxprom119 = sext i32 %90 to i64, !dbg !12197
  %arrayidx120 = getelementptr inbounds float, float* %87, i64 %idxprom119, !dbg !12197
  %mask121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12197
  store float* %arrayidx120, float** %mask121, align 8, !dbg !12197
  br label %if.end122, !dbg !12197

if.end122:                                        ; preds = %if.then113, %if.end104
  br label %if.end152, !dbg !12193

if.else123:                                       ; preds = %if.else91
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12199
  %call124 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !12199
  %tobool125 = icmp ne i8 %call124, 0, !dbg !12199
  br i1 %tobool125, label %if.else130, label %if.then126, !dbg !12202

if.then126:                                       ; preds = %if.else123
  %bm_unique_verts127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12203
  %call128 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts127), !dbg !12203
  %91 = bitcast i8* %call128 to %struct.BMVert*, !dbg !12203
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12203
  store %struct.BMVert* %91, %struct.BMVert** %bm_vert, align 8, !dbg !12203
  %bm_unique_verts129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12203
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts129), !dbg !12203
  br label %if.end134, !dbg !12203

if.else130:                                       ; preds = %if.else123
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12205
  %call131 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !12205
  %92 = bitcast i8* %call131 to %struct.BMVert*, !dbg !12205
  %bm_vert132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12205
  store %struct.BMVert* %92, %struct.BMVert** %bm_vert132, align 8, !dbg !12205
  %bm_other_verts133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12205
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts133), !dbg !12205
  br label %if.end134

if.end134:                                        ; preds = %if.else130, %if.then126
  %bm_vert135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12207
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert135, align 8, !dbg !12207
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !12207
  %call136 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !12207
  %conv137 = zext i8 %call136 to i32, !dbg !12207
  %tobool138 = icmp ne i32 %conv137, 0, !dbg !12207
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !12202

if.then139:                                       ; preds = %if.end134
  br label %for.inc, !dbg !12207

if.end140:                                        ; preds = %if.end134
  %bm_vert141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12202
  %94 = load %struct.BMVert*, %struct.BMVert** %bm_vert141, align 8, !dbg !12202
  %co142 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %94, i32 0, i32 2, !dbg !12202
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %co142, i64 0, i64 0, !dbg !12202
  %co144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12202
  store float* %arraydecay143, float** %co144, align 8, !dbg !12202
  %bm_vert145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12202
  %95 = load %struct.BMVert*, %struct.BMVert** %bm_vert145, align 8, !dbg !12202
  %no146 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %95, i32 0, i32 3, !dbg !12202
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %no146, i64 0, i64 0, !dbg !12202
  %fno148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12202
  store float* %arraydecay147, float** %fno148, align 8, !dbg !12202
  %bm_vert149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12202
  %96 = load %struct.BMVert*, %struct.BMVert** %bm_vert149, align 8, !dbg !12202
  %head150 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %96, i32 0, i32 0, !dbg !12202
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head150, i32 0, i32 0, !dbg !12202
  %97 = load i8*, i8** %data, align 8, !dbg !12202
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !12202
  %98 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !12202
  %idx.ext = sext i32 %98 to i64, !dbg !12202
  %add.ptr = getelementptr inbounds i8, i8* %97, i64 %idx.ext, !dbg !12202
  %99 = bitcast i8* %add.ptr to float*, !dbg !12202
  %mask151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12202
  store float* %99, float** %mask151, align 8, !dbg !12202
  br label %if.end152

if.end152:                                        ; preds = %if.end140, %if.end122
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end90
  call void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %vd), !dbg !12209
  %co154 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12211
  %100 = load float*, float** %co154, align 8, !dbg !12211
  %call155 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %100), !dbg !12213
  %tobool156 = icmp ne i8 %call155, 0, !dbg !12213
  br i1 %tobool156, label %if.then157, label %if.end182, !dbg !12214

if.then157:                                       ; preds = %if.end153
  call void @llvm.dbg.declare(metadata float* %fade, metadata !12215, metadata !DIExpression()), !dbg !12217
  %101 = load float, float* %bstrength, align 4, !dbg !12218
  %102 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12219
  %103 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12220
  %co158 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12221
  %104 = load float*, float** %co158, align 8, !dbg !12221
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12222
  %105 = load float, float* %dist, align 8, !dbg !12222
  %no159 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 6, !dbg !12223
  %106 = load i16*, i16** %no159, align 8, !dbg !12223
  %mask160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12224
  %107 = load float*, float** %mask160, align 8, !dbg !12224
  %tobool161 = icmp ne float* %107, null, !dbg !12225
  br i1 %tobool161, label %cond.true162, label %cond.false164, !dbg !12225

cond.true162:                                     ; preds = %if.then157
  %mask163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12226
  %108 = load float*, float** %mask163, align 8, !dbg !12226
  %109 = load float, float* %108, align 4, !dbg !12227
  br label %cond.end165, !dbg !12225

cond.false164:                                    ; preds = %if.then157
  br label %cond.end165, !dbg !12225

cond.end165:                                      ; preds = %cond.false164, %cond.true162
  %cond166 = phi float [ %109, %cond.true162 ], [ 0.000000e+00, %cond.false164 ], !dbg !12225
  %call167 = call float @tex_strength(%struct.SculptSession* %102, %struct.Brush* %103, float* %104, float %105, i16* %106, float* null, float %cond166), !dbg !12228
  %mul168 = fmul float %101, %call167, !dbg !12229
  store float %mul168, float* %fade, align 4, !dbg !12217
  %110 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12230
  %i169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12231
  %111 = load i32, i32* %i169, align 4, !dbg !12231
  %idxprom170 = sext i32 %111 to i64, !dbg !12230
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %110, i64 %idxprom170, !dbg !12230
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 0, !dbg !12230
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12232
  %112 = load float, float* %fade, align 4, !dbg !12233
  call void @mul_v3_v3fl(float* %arraydecay172, float* %arraydecay173, float %112), !dbg !12234
  %mvert174 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12235
  %113 = load %struct.MVert*, %struct.MVert** %mvert174, align 8, !dbg !12235
  %tobool175 = icmp ne %struct.MVert* %113, null, !dbg !12237
  br i1 %tobool175, label %if.then176, label %if.end181, !dbg !12238

if.then176:                                       ; preds = %cond.end165
  %mvert177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12239
  %114 = load %struct.MVert*, %struct.MVert** %mvert177, align 8, !dbg !12239
  %flag178 = getelementptr inbounds %struct.MVert, %struct.MVert* %114, i32 0, i32 2, !dbg !12240
  %115 = load i8, i8* %flag178, align 2, !dbg !12241
  %conv179 = zext i8 %115 to i32, !dbg !12241
  %or = or i32 %conv179, 128, !dbg !12241
  %conv180 = trunc i32 %or to i8, !dbg !12241
  store i8 %conv180, i8* %flag178, align 2, !dbg !12241
  br label %if.end181, !dbg !12242

if.end181:                                        ; preds = %if.then176, %cond.end165
  br label %if.end182, !dbg !12243

if.end182:                                        ; preds = %if.end181, %if.end153
  br label %for.inc, !dbg !12244

for.inc:                                          ; preds = %if.end182, %if.then139, %if.then103, %if.then88
  %gx183 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12177
  %116 = load i32, i32* %gx183, align 4, !dbg !12177
  %inc = add nsw i32 %116, 1, !dbg !12177
  store i32 %inc, i32* %gx183, align 4, !dbg !12177
  %i184 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12177
  %117 = load i32, i32* %i184, align 4, !dbg !12177
  %inc185 = add nsw i32 %117, 1, !dbg !12177
  store i32 %inc185, i32* %i184, align 4, !dbg !12177
  br label %for.cond48, !dbg !12177, !llvm.loop !12245

for.end:                                          ; preds = %for.cond48
  br label %for.inc186, !dbg !12247

for.inc186:                                       ; preds = %for.end
  %gy187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12172
  %118 = load i32, i32* %gy187, align 8, !dbg !12172
  %inc188 = add nsw i32 %118, 1, !dbg !12172
  store i32 %inc188, i32* %gy187, align 8, !dbg !12172
  br label %for.cond43, !dbg !12172, !llvm.loop !12248

for.end189:                                       ; preds = %for.cond43
  br label %for.inc190, !dbg !12250

for.inc190:                                       ; preds = %for.end189
  %g191 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12158
  %119 = load i32, i32* %g191, align 8, !dbg !12158
  %inc192 = add nsw i32 %119, 1, !dbg !12158
  store i32 %inc192, i32* %g191, align 8, !dbg !12158
  br label %for.cond22, !dbg !12158, !llvm.loop !12251

for.end193:                                       ; preds = %for.cond22
  br label %for.inc194, !dbg !12253

for.inc194:                                       ; preds = %for.end193
  %120 = load i32, i32* %n, align 4, !dbg !12254
  %inc195 = add nsw i32 %120, 1, !dbg !12254
  store i32 %inc195, i32* %n, align 4, !dbg !12254
  br label %for.cond, !dbg !12255, !llvm.loop !12256

for.end196:                                       ; preds = %for.cond
  ret void, !dbg !12258
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_rotate_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !2 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %n = alloca i32, align 4
  %angle = alloca float, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %orig_data = alloca %struct.SculptOrigVertData, align 8
  %proxy = alloca [3 x float]*, align 8
  %vec = alloca [3 x float], align 4
  %rot = alloca [3 x [3 x float]], align 16
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12261, metadata !DIExpression()), !dbg !12262
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !12265, metadata !DIExpression()), !dbg !12266
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !12267, metadata !DIExpression()), !dbg !12268
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12269
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !12270
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !12270
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !12268
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12271, metadata !DIExpression()), !dbg !12272
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !12273
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !12274
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12275
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12272
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !12276, metadata !DIExpression()), !dbg !12277
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12278
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !12279
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !12279
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !12280
  %5 = load float, float* %bstrength1, align 8, !dbg !12280
  store float %5, float* %bstrength, align 4, !dbg !12277
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12281, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.declare(metadata float* %angle, metadata !12283, metadata !DIExpression()), !dbg !12284
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12285
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !12286
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !12286
  %vertex_rotation = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 43, !dbg !12287
  %8 = load float, float* %vertex_rotation, align 4, !dbg !12287
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12288
  %cache3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 28, !dbg !12289
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache3, align 8, !dbg !12289
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %10, i32 0, i32 31, !dbg !12290
  %11 = load i32, i32* %mirror_symmetry_pass, align 8, !dbg !12290
  %idxprom = sext i32 %11 to i64, !dbg !12291
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @do_rotate_brush.flip, i64 0, i64 %idxprom, !dbg !12291
  %12 = load i32, i32* %arrayidx, align 4, !dbg !12291
  %conv = sitofp i32 %12 to float, !dbg !12291
  %mul = fmul float %8, %conv, !dbg !12292
  store float %mul, float* %angle, align 4, !dbg !12284
  store i32 0, i32* %n, align 4, !dbg !12293
  br label %for.cond, !dbg !12295

for.cond:                                         ; preds = %for.inc207, %entry
  %13 = load i32, i32* %n, align 4, !dbg !12296
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !12298
  %cmp = icmp slt i32 %13, %14, !dbg !12299
  br i1 %cmp, label %for.body, label %for.end209, !dbg !12300

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !12301, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !12304, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData* %orig_data, metadata !12306, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !12308, metadata !DIExpression()), !dbg !12309
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12310
  %16 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12311
  %17 = load i32, i32* %n, align 4, !dbg !12312
  %idxprom5 = sext i32 %17 to i64, !dbg !12311
  %arrayidx6 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %16, i64 %idxprom5, !dbg !12311
  %18 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx6, align 8, !dbg !12311
  call void @sculpt_orig_vert_data_init(%struct.SculptOrigVertData* %orig_data, %struct.Object* %15, %struct.PBVHNode* %18), !dbg !12313
  %19 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12314
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 15, !dbg !12315
  %20 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !12315
  %21 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12316
  %22 = load i32, i32* %n, align 4, !dbg !12317
  %idxprom7 = sext i32 %22 to i64, !dbg !12316
  %arrayidx8 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %21, i64 %idxprom7, !dbg !12316
  %23 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx8, align 8, !dbg !12316
  %call9 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %20, %struct.PBVHNode* %23), !dbg !12318
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call9, i32 0, i32 0, !dbg !12319
  %24 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !12319
  store [3 x float]* %24, [3 x float]** %proxy, align 8, !dbg !12320
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12321
  call void @sculpt_brush_test_init(%struct.SculptSession* %25, %struct.SculptBrushTest* %test), !dbg !12322
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12323
  %pbvh10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 15, !dbg !12323
  %27 = load %struct.PBVH*, %struct.PBVH** %pbvh10, align 8, !dbg !12323
  %28 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12323
  %29 = load i32, i32* %n, align 4, !dbg !12323
  %idxprom11 = sext i32 %29 to i64, !dbg !12323
  %arrayidx12 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %28, i64 %idxprom11, !dbg !12323
  %30 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx12, align 8, !dbg !12323
  call void @pbvh_vertex_iter_init(%struct.PBVH* %27, %struct.PBVHNode* %30, %struct.PBVHVertexIter* %vd, i32 1), !dbg !12323
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12324
  store i32 0, i32* %i, align 4, !dbg !12324
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12324
  store i32 0, i32* %g, align 8, !dbg !12324
  br label %for.cond13, !dbg !12324

for.cond13:                                       ; preds = %for.inc203, %for.body
  %g14 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12326
  %31 = load i32, i32* %g14, align 8, !dbg !12326
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !12326
  %32 = load i32, i32* %totgrid, align 8, !dbg !12326
  %cmp15 = icmp slt i32 %31, %32, !dbg !12326
  br i1 %cmp15, label %for.body17, label %for.end206, !dbg !12324

for.body17:                                       ; preds = %for.cond13
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12328
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !12328
  %tobool = icmp ne %struct.CCGElem** %33, null, !dbg !12328
  br i1 %tobool, label %if.then, label %if.else, !dbg !12331

if.then:                                          ; preds = %for.body17
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12332
  %34 = load i32, i32* %gridsize, align 4, !dbg !12332
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12332
  store i32 %34, i32* %width, align 4, !dbg !12332
  %gridsize18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12332
  %35 = load i32, i32* %gridsize18, align 4, !dbg !12332
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12332
  store i32 %35, i32* %height, align 8, !dbg !12332
  %grids19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12332
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids19, align 8, !dbg !12332
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12332
  %37 = load i32*, i32** %grid_indices, align 8, !dbg !12332
  %g20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12332
  %38 = load i32, i32* %g20, align 8, !dbg !12332
  %idxprom21 = sext i32 %38 to i64, !dbg !12332
  %arrayidx22 = getelementptr inbounds i32, i32* %37, i64 %idxprom21, !dbg !12332
  %39 = load i32, i32* %arrayidx22, align 4, !dbg !12332
  %idxprom23 = sext i32 %39 to i64, !dbg !12332
  %arrayidx24 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %36, i64 %idxprom23, !dbg !12332
  %40 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx24, align 8, !dbg !12332
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12332
  store %struct.CCGElem* %40, %struct.CCGElem** %grid, align 8, !dbg !12332
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !12334
  %41 = load i32**, i32*** %grid_hidden, align 8, !dbg !12334
  %grid_indices25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12334
  %42 = load i32*, i32** %grid_indices25, align 8, !dbg !12334
  %g26 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12334
  %43 = load i32, i32* %g26, align 8, !dbg !12334
  %idxprom27 = sext i32 %43 to i64, !dbg !12334
  %arrayidx28 = getelementptr inbounds i32, i32* %42, i64 %idxprom27, !dbg !12334
  %44 = load i32, i32* %arrayidx28, align 4, !dbg !12334
  %idxprom29 = sext i32 %44 to i64, !dbg !12334
  %arrayidx30 = getelementptr inbounds i32*, i32** %41, i64 %idxprom29, !dbg !12334
  %45 = load i32*, i32** %arrayidx30, align 8, !dbg !12334
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12334
  store i32* %45, i32** %gh, align 8, !dbg !12334
  br label %if.end, !dbg !12332

if.else:                                          ; preds = %for.body17
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !12336
  %46 = load i32, i32* %totvert, align 8, !dbg !12336
  %width31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12336
  store i32 %46, i32* %width31, align 4, !dbg !12336
  %height32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12336
  store i32 1, i32* %height32, align 8, !dbg !12336
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12338
  store i32 0, i32* %gy, align 8, !dbg !12338
  br label %for.cond33, !dbg !12338

for.cond33:                                       ; preds = %for.inc199, %if.end
  %gy34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12340
  %47 = load i32, i32* %gy34, align 8, !dbg !12340
  %height35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12340
  %48 = load i32, i32* %height35, align 8, !dbg !12340
  %cmp36 = icmp slt i32 %47, %48, !dbg !12340
  br i1 %cmp36, label %for.body38, label %for.end202, !dbg !12338

for.body38:                                       ; preds = %for.cond33
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12342
  store i32 0, i32* %gx, align 4, !dbg !12342
  br label %for.cond39, !dbg !12342

for.cond39:                                       ; preds = %for.inc, %for.body38
  %gx40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12345
  %49 = load i32, i32* %gx40, align 4, !dbg !12345
  %width41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12345
  %50 = load i32, i32* %width41, align 4, !dbg !12345
  %cmp42 = icmp slt i32 %49, %50, !dbg !12345
  br i1 %cmp42, label %for.body44, label %for.end, !dbg !12342

for.body44:                                       ; preds = %for.cond39
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12347
  %51 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !12347
  %tobool46 = icmp ne %struct.CCGElem* %51, null, !dbg !12347
  br i1 %tobool46, label %if.then47, label %if.else83, !dbg !12350

if.then47:                                        ; preds = %for.body44
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12351
  %52 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !12351
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12351
  %53 = load %struct.CCGElem*, %struct.CCGElem** %grid48, align 8, !dbg !12351
  %call49 = call float* @CCG_elem_co(%struct.CCGKey* %52, %struct.CCGElem* %53), !dbg !12351
  %co50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12351
  store float* %call49, float** %co50, align 8, !dbg !12351
  %key51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12351
  %54 = load %struct.CCGKey*, %struct.CCGKey** %key51, align 8, !dbg !12351
  %grid52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12351
  %55 = load %struct.CCGElem*, %struct.CCGElem** %grid52, align 8, !dbg !12351
  %call53 = call float* @CCG_elem_no(%struct.CCGKey* %54, %struct.CCGElem* %55), !dbg !12351
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12351
  store float* %call53, float** %fno, align 8, !dbg !12351
  %key54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12351
  %56 = load %struct.CCGKey*, %struct.CCGKey** %key54, align 8, !dbg !12351
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %56, i32 0, i32 9, !dbg !12351
  %57 = load i32, i32* %has_mask, align 4, !dbg !12351
  %tobool55 = icmp ne i32 %57, 0, !dbg !12351
  br i1 %tobool55, label %cond.true, label %cond.false, !dbg !12351

cond.true:                                        ; preds = %if.then47
  %key56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12351
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key56, align 8, !dbg !12351
  %grid57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12351
  %59 = load %struct.CCGElem*, %struct.CCGElem** %grid57, align 8, !dbg !12351
  %call58 = call float* @CCG_elem_mask(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !12351
  br label %cond.end, !dbg !12351

cond.false:                                       ; preds = %if.then47
  br label %cond.end, !dbg !12351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call58, %cond.true ], [ null, %cond.false ], !dbg !12351
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12351
  store float* %cond, float** %mask, align 8, !dbg !12351
  %key59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12351
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key59, align 8, !dbg !12351
  %grid60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12351
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid60, align 8, !dbg !12351
  %call61 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %60, %struct.CCGElem* %61), !dbg !12351
  %grid62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12351
  store %struct.CCGElem* %call61, %struct.CCGElem** %grid62, align 8, !dbg !12351
  %gh63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12353
  %62 = load i32*, i32** %gh63, align 8, !dbg !12353
  %tobool64 = icmp ne i32* %62, null, !dbg !12353
  br i1 %tobool64, label %if.then65, label %if.end82, !dbg !12351

if.then65:                                        ; preds = %cond.end
  %gh66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12355
  %63 = load i32*, i32** %gh66, align 8, !dbg !12355
  %gy67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12355
  %64 = load i32, i32* %gy67, align 8, !dbg !12355
  %gridsize68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12355
  %65 = load i32, i32* %gridsize68, align 4, !dbg !12355
  %mul69 = mul nsw i32 %64, %65, !dbg !12355
  %gx70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12355
  %66 = load i32, i32* %gx70, align 4, !dbg !12355
  %add = add nsw i32 %mul69, %66, !dbg !12355
  %shr = ashr i32 %add, 5, !dbg !12355
  %idxprom71 = sext i32 %shr to i64, !dbg !12355
  %arrayidx72 = getelementptr inbounds i32, i32* %63, i64 %idxprom71, !dbg !12355
  %67 = load i32, i32* %arrayidx72, align 4, !dbg !12355
  %gy73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12355
  %68 = load i32, i32* %gy73, align 8, !dbg !12355
  %gridsize74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12355
  %69 = load i32, i32* %gridsize74, align 4, !dbg !12355
  %mul75 = mul nsw i32 %68, %69, !dbg !12355
  %gx76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12355
  %70 = load i32, i32* %gx76, align 4, !dbg !12355
  %add77 = add nsw i32 %mul75, %70, !dbg !12355
  %and = and i32 %add77, 31, !dbg !12355
  %shl = shl i32 1, %and, !dbg !12355
  %and78 = and i32 %67, %shl, !dbg !12355
  %tobool79 = icmp ne i32 %and78, 0, !dbg !12355
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !12358

if.then80:                                        ; preds = %if.then65
  br label %for.inc, !dbg !12355

if.end81:                                         ; preds = %if.then65
  br label %if.end82, !dbg !12358

if.end82:                                         ; preds = %if.end81, %cond.end
  br label %if.end145, !dbg !12351

if.else83:                                        ; preds = %for.body44
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12359
  %71 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !12359
  %tobool84 = icmp ne %struct.MVert* %71, null, !dbg !12359
  br i1 %tobool84, label %if.then85, label %if.else115, !dbg !12347

if.then85:                                        ; preds = %if.else83
  %mverts86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12361
  %72 = load %struct.MVert*, %struct.MVert** %mverts86, align 8, !dbg !12361
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12361
  %73 = load i32*, i32** %vert_indices, align 8, !dbg !12361
  %gx87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12361
  %74 = load i32, i32* %gx87, align 4, !dbg !12361
  %idxprom88 = sext i32 %74 to i64, !dbg !12361
  %arrayidx89 = getelementptr inbounds i32, i32* %73, i64 %idxprom88, !dbg !12361
  %75 = load i32, i32* %arrayidx89, align 4, !dbg !12361
  %idxprom90 = sext i32 %75 to i64, !dbg !12361
  %arrayidx91 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom90, !dbg !12361
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12361
  store %struct.MVert* %arrayidx91, %struct.MVert** %mvert, align 8, !dbg !12361
  %mvert92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12363
  %76 = load %struct.MVert*, %struct.MVert** %mvert92, align 8, !dbg !12363
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 0, i32 2, !dbg !12363
  %77 = load i8, i8* %flag, align 2, !dbg !12363
  %conv93 = zext i8 %77 to i32, !dbg !12363
  %and94 = and i32 %conv93, 16, !dbg !12363
  %tobool95 = icmp ne i32 %and94, 0, !dbg !12363
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !12361

if.then96:                                        ; preds = %if.then85
  br label %for.inc, !dbg !12363

if.end97:                                         ; preds = %if.then85
  %mvert98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12361
  %78 = load %struct.MVert*, %struct.MVert** %mvert98, align 8, !dbg !12361
  %co99 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i32 0, i32 0, !dbg !12361
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co99, i64 0, i64 0, !dbg !12361
  %co100 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12361
  store float* %arraydecay, float** %co100, align 8, !dbg !12361
  %mvert101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12361
  %79 = load %struct.MVert*, %struct.MVert** %mvert101, align 8, !dbg !12361
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 1, !dbg !12361
  %arraydecay102 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !12361
  %no103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12361
  store i16* %arraydecay102, i16** %no103, align 8, !dbg !12361
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12365
  %80 = load float*, float** %vmask, align 8, !dbg !12365
  %tobool104 = icmp ne float* %80, null, !dbg !12365
  br i1 %tobool104, label %if.then105, label %if.end114, !dbg !12361

if.then105:                                       ; preds = %if.end97
  %vmask106 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12365
  %81 = load float*, float** %vmask106, align 8, !dbg !12365
  %vert_indices107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12365
  %82 = load i32*, i32** %vert_indices107, align 8, !dbg !12365
  %gx108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12365
  %83 = load i32, i32* %gx108, align 4, !dbg !12365
  %idxprom109 = sext i32 %83 to i64, !dbg !12365
  %arrayidx110 = getelementptr inbounds i32, i32* %82, i64 %idxprom109, !dbg !12365
  %84 = load i32, i32* %arrayidx110, align 4, !dbg !12365
  %idxprom111 = sext i32 %84 to i64, !dbg !12365
  %arrayidx112 = getelementptr inbounds float, float* %81, i64 %idxprom111, !dbg !12365
  %mask113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12365
  store float* %arrayidx112, float** %mask113, align 8, !dbg !12365
  br label %if.end114, !dbg !12365

if.end114:                                        ; preds = %if.then105, %if.end97
  br label %if.end144, !dbg !12361

if.else115:                                       ; preds = %if.else83
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12367
  %call116 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !12367
  %tobool117 = icmp ne i8 %call116, 0, !dbg !12367
  br i1 %tobool117, label %if.else122, label %if.then118, !dbg !12370

if.then118:                                       ; preds = %if.else115
  %bm_unique_verts119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12371
  %call120 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts119), !dbg !12371
  %85 = bitcast i8* %call120 to %struct.BMVert*, !dbg !12371
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12371
  store %struct.BMVert* %85, %struct.BMVert** %bm_vert, align 8, !dbg !12371
  %bm_unique_verts121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12371
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts121), !dbg !12371
  br label %if.end126, !dbg !12371

if.else122:                                       ; preds = %if.else115
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12373
  %call123 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !12373
  %86 = bitcast i8* %call123 to %struct.BMVert*, !dbg !12373
  %bm_vert124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12373
  store %struct.BMVert* %86, %struct.BMVert** %bm_vert124, align 8, !dbg !12373
  %bm_other_verts125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12373
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts125), !dbg !12373
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then118
  %bm_vert127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12375
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert127, align 8, !dbg !12375
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !12375
  %call128 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !12375
  %conv129 = zext i8 %call128 to i32, !dbg !12375
  %tobool130 = icmp ne i32 %conv129, 0, !dbg !12375
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !12370

if.then131:                                       ; preds = %if.end126
  br label %for.inc, !dbg !12375

if.end132:                                        ; preds = %if.end126
  %bm_vert133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12370
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert133, align 8, !dbg !12370
  %co134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 2, !dbg !12370
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %co134, i64 0, i64 0, !dbg !12370
  %co136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12370
  store float* %arraydecay135, float** %co136, align 8, !dbg !12370
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12370
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !12370
  %no138 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 3, !dbg !12370
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %no138, i64 0, i64 0, !dbg !12370
  %fno140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12370
  store float* %arraydecay139, float** %fno140, align 8, !dbg !12370
  %bm_vert141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12370
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert141, align 8, !dbg !12370
  %head142 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !12370
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head142, i32 0, i32 0, !dbg !12370
  %91 = load i8*, i8** %data, align 8, !dbg !12370
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !12370
  %92 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !12370
  %idx.ext = sext i32 %92 to i64, !dbg !12370
  %add.ptr = getelementptr inbounds i8, i8* %91, i64 %idx.ext, !dbg !12370
  %93 = bitcast i8* %add.ptr to float*, !dbg !12370
  %mask143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12370
  store float* %93, float** %mask143, align 8, !dbg !12370
  br label %if.end144

if.end144:                                        ; preds = %if.end132, %if.end114
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end82
  call void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %vd), !dbg !12377
  %co146 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12379
  %94 = load float*, float** %co146, align 8, !dbg !12379
  %call147 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %94), !dbg !12381
  %tobool148 = icmp ne i8 %call147, 0, !dbg !12381
  br i1 %tobool148, label %if.then149, label %if.end195, !dbg !12382

if.then149:                                       ; preds = %if.end145
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12383, metadata !DIExpression()), !dbg !12385
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rot, metadata !12386, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.declare(metadata float* %fade, metadata !12388, metadata !DIExpression()), !dbg !12389
  %95 = load float, float* %bstrength, align 4, !dbg !12390
  %96 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12391
  %97 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12392
  %co150 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12393
  %98 = load float*, float** %co150, align 8, !dbg !12393
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12394
  %99 = load float, float* %dist, align 8, !dbg !12394
  %no151 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 6, !dbg !12395
  %100 = load i16*, i16** %no151, align 8, !dbg !12395
  %mask152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12396
  %101 = load float*, float** %mask152, align 8, !dbg !12396
  %tobool153 = icmp ne float* %101, null, !dbg !12397
  br i1 %tobool153, label %cond.true154, label %cond.false156, !dbg !12397

cond.true154:                                     ; preds = %if.then149
  %mask155 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12398
  %102 = load float*, float** %mask155, align 8, !dbg !12398
  %103 = load float, float* %102, align 4, !dbg !12399
  br label %cond.end157, !dbg !12397

cond.false156:                                    ; preds = %if.then149
  br label %cond.end157, !dbg !12397

cond.end157:                                      ; preds = %cond.false156, %cond.true154
  %cond158 = phi float [ %103, %cond.true154 ], [ 0.000000e+00, %cond.false156 ], !dbg !12397
  %call159 = call float @tex_strength(%struct.SculptSession* %96, %struct.Brush* %97, float* %98, float %99, i16* %100, float* null, float %cond158), !dbg !12400
  %mul160 = fmul float %95, %call159, !dbg !12401
  store float %mul160, float* %fade, align 4, !dbg !12389
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12402
  %co162 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12403
  %104 = load float*, float** %co162, align 8, !dbg !12403
  %105 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12404
  %cache163 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %105, i32 0, i32 28, !dbg !12405
  %106 = load %struct.StrokeCache*, %struct.StrokeCache** %cache163, align 8, !dbg !12405
  %location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %106, i32 0, i32 14, !dbg !12406
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !12404
  call void @sub_v3_v3v3(float* %arraydecay161, float* %104, float* %arraydecay164), !dbg !12407
  %arraydecay165 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !12408
  %107 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12409
  %cache166 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %107, i32 0, i32 28, !dbg !12410
  %108 = load %struct.StrokeCache*, %struct.StrokeCache** %cache166, align 8, !dbg !12410
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %108, i32 0, i32 35, !dbg !12411
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !12409
  %109 = load float, float* %angle, align 4, !dbg !12412
  %110 = load float, float* %fade, align 4, !dbg !12413
  %mul168 = fmul float %109, %110, !dbg !12414
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay165, float* %arraydecay167, float %mul168), !dbg !12415
  %111 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12416
  %i169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12417
  %112 = load i32, i32* %i169, align 4, !dbg !12417
  %idxprom170 = sext i32 %112 to i64, !dbg !12416
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %111, i64 %idxprom170, !dbg !12416
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 0, !dbg !12416
  %arraydecay173 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !12418
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12419
  call void @mul_v3_m3v3(float* %arraydecay172, [3 x float]* %arraydecay173, float* %arraydecay174), !dbg !12420
  %113 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12421
  %i175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12422
  %114 = load i32, i32* %i175, align 4, !dbg !12422
  %idxprom176 = sext i32 %114 to i64, !dbg !12421
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %113, i64 %idxprom176, !dbg !12421
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx177, i64 0, i64 0, !dbg !12421
  %115 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12423
  %cache179 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %115, i32 0, i32 28, !dbg !12424
  %116 = load %struct.StrokeCache*, %struct.StrokeCache** %cache179, align 8, !dbg !12424
  %location180 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %116, i32 0, i32 14, !dbg !12425
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %location180, i64 0, i64 0, !dbg !12423
  call void @add_v3_v3(float* %arraydecay178, float* %arraydecay181), !dbg !12426
  %117 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12427
  %i182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12428
  %118 = load i32, i32* %i182, align 4, !dbg !12428
  %idxprom183 = sext i32 %118 to i64, !dbg !12427
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %117, i64 %idxprom183, !dbg !12427
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !12427
  %co186 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12429
  %119 = load float*, float** %co186, align 8, !dbg !12429
  call void @sub_v3_v3(float* %arraydecay185, float* %119), !dbg !12430
  %mvert187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12431
  %120 = load %struct.MVert*, %struct.MVert** %mvert187, align 8, !dbg !12431
  %tobool188 = icmp ne %struct.MVert* %120, null, !dbg !12433
  br i1 %tobool188, label %if.then189, label %if.end194, !dbg !12434

if.then189:                                       ; preds = %cond.end157
  %mvert190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12435
  %121 = load %struct.MVert*, %struct.MVert** %mvert190, align 8, !dbg !12435
  %flag191 = getelementptr inbounds %struct.MVert, %struct.MVert* %121, i32 0, i32 2, !dbg !12436
  %122 = load i8, i8* %flag191, align 2, !dbg !12437
  %conv192 = zext i8 %122 to i32, !dbg !12437
  %or = or i32 %conv192, 128, !dbg !12437
  %conv193 = trunc i32 %or to i8, !dbg !12437
  store i8 %conv193, i8* %flag191, align 2, !dbg !12437
  br label %if.end194, !dbg !12438

if.end194:                                        ; preds = %if.then189, %cond.end157
  br label %if.end195, !dbg !12439

if.end195:                                        ; preds = %if.end194, %if.end145
  br label %for.inc, !dbg !12440

for.inc:                                          ; preds = %if.end195, %if.then131, %if.then96, %if.then80
  %gx196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12345
  %123 = load i32, i32* %gx196, align 4, !dbg !12345
  %inc = add nsw i32 %123, 1, !dbg !12345
  store i32 %inc, i32* %gx196, align 4, !dbg !12345
  %i197 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12345
  %124 = load i32, i32* %i197, align 4, !dbg !12345
  %inc198 = add nsw i32 %124, 1, !dbg !12345
  store i32 %inc198, i32* %i197, align 4, !dbg !12345
  br label %for.cond39, !dbg !12345, !llvm.loop !12441

for.end:                                          ; preds = %for.cond39
  br label %for.inc199, !dbg !12443

for.inc199:                                       ; preds = %for.end
  %gy200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12340
  %125 = load i32, i32* %gy200, align 8, !dbg !12340
  %inc201 = add nsw i32 %125, 1, !dbg !12340
  store i32 %inc201, i32* %gy200, align 8, !dbg !12340
  br label %for.cond33, !dbg !12340, !llvm.loop !12444

for.end202:                                       ; preds = %for.cond33
  br label %for.inc203, !dbg !12446

for.inc203:                                       ; preds = %for.end202
  %g204 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12326
  %126 = load i32, i32* %g204, align 8, !dbg !12326
  %inc205 = add nsw i32 %126, 1, !dbg !12326
  store i32 %inc205, i32* %g204, align 8, !dbg !12326
  br label %for.cond13, !dbg !12326, !llvm.loop !12447

for.end206:                                       ; preds = %for.cond13
  br label %for.inc207, !dbg !12449

for.inc207:                                       ; preds = %for.end206
  %127 = load i32, i32* %n, align 4, !dbg !12450
  %inc208 = add nsw i32 %127, 1, !dbg !12450
  store i32 %inc208, i32* %n, align 4, !dbg !12450
  br label %for.cond, !dbg !12451, !llvm.loop !12452

for.end209:                                       ; preds = %for.cond
  ret void, !dbg !12454
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_snake_hook_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !12455 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %grab_delta = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %len = alloca float, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !12456, metadata !DIExpression()), !dbg !12457
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12458, metadata !DIExpression()), !dbg !12459
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !12460, metadata !DIExpression()), !dbg !12461
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !12462, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !12464, metadata !DIExpression()), !dbg !12465
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12466
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !12467
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !12467
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !12465
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12468, metadata !DIExpression()), !dbg !12469
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !12470
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !12471
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12472
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12469
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !12473, metadata !DIExpression()), !dbg !12474
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12475
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !12476
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !12476
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !12477
  %5 = load float, float* %bstrength1, align 8, !dbg !12477
  store float %5, float* %bstrength, align 4, !dbg !12474
  call void @llvm.dbg.declare(metadata [3 x float]* %grab_delta, metadata !12478, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12480, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.declare(metadata float* %len, metadata !12482, metadata !DIExpression()), !dbg !12483
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12484
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12485
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !12486
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !12486
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 27, !dbg !12487
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !12485
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !12488
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12489
  %call5 = call float @len_v3(float* %arraydecay4), !dbg !12490
  store float %call5, float* %len, align 4, !dbg !12491
  %8 = load float, float* %bstrength, align 4, !dbg !12492
  %cmp = fcmp olt float %8, 0.000000e+00, !dbg !12494
  br i1 %cmp, label %if.then, label %if.end, !dbg !12495

if.then:                                          ; preds = %entry
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12496
  call void @negate_v3(float* %arraydecay6), !dbg !12497
  br label %if.end, !dbg !12497

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12498
  %normal_weight = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 11, !dbg !12500
  %10 = load float, float* %normal_weight, align 8, !dbg !12500
  %cmp7 = fcmp ogt float %10, 0.000000e+00, !dbg !12501
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !12502

if.then8:                                         ; preds = %if.end
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12503
  %cache9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !12505
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache9, align 8, !dbg !12505
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %12, i32 0, i32 35, !dbg !12506
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !12503
  %13 = load float, float* %len, align 4, !dbg !12507
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12508
  %normal_weight11 = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 11, !dbg !12509
  %15 = load float, float* %normal_weight11, align 8, !dbg !12509
  %mul = fmul float %13, %15, !dbg !12510
  call void @mul_v3_fl(float* %arraydecay10, float %mul), !dbg !12511
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12512
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12513
  %normal_weight13 = getelementptr inbounds %struct.Brush, %struct.Brush* %16, i32 0, i32 11, !dbg !12514
  %17 = load float, float* %normal_weight13, align 8, !dbg !12514
  %sub = fsub float 1.000000e+00, %17, !dbg !12515
  call void @mul_v3_fl(float* %arraydecay12, float %sub), !dbg !12516
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12517
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12518
  %cache15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 28, !dbg !12519
  %19 = load %struct.StrokeCache*, %struct.StrokeCache** %cache15, align 8, !dbg !12519
  %sculpt_normal_symm16 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %19, i32 0, i32 35, !dbg !12520
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm16, i64 0, i64 0, !dbg !12518
  call void @add_v3_v3(float* %arraydecay14, float* %arraydecay17), !dbg !12521
  br label %if.end18, !dbg !12522

if.end18:                                         ; preds = %if.then8, %if.end
  store i32 0, i32* %n, align 4, !dbg !12523
  br label %for.cond, !dbg !12525

for.cond:                                         ; preds = %for.inc197, %if.end18
  %20 = load i32, i32* %n, align 4, !dbg !12526
  %21 = load i32, i32* %totnode.addr, align 4, !dbg !12528
  %cmp19 = icmp slt i32 %20, %21, !dbg !12529
  br i1 %cmp19, label %for.body, label %for.end199, !dbg !12530

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !12536, metadata !DIExpression()), !dbg !12537
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12538
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 15, !dbg !12539
  %23 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !12539
  %24 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12540
  %25 = load i32, i32* %n, align 4, !dbg !12541
  %idxprom = sext i32 %25 to i64, !dbg !12540
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %24, i64 %idxprom, !dbg !12540
  %26 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !12540
  %call20 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %23, %struct.PBVHNode* %26), !dbg !12542
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call20, i32 0, i32 0, !dbg !12543
  %27 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !12543
  store [3 x float]* %27, [3 x float]** %proxy, align 8, !dbg !12544
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12545
  call void @sculpt_brush_test_init(%struct.SculptSession* %28, %struct.SculptBrushTest* %test), !dbg !12546
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12547
  %pbvh21 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 15, !dbg !12547
  %30 = load %struct.PBVH*, %struct.PBVH** %pbvh21, align 8, !dbg !12547
  %31 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12547
  %32 = load i32, i32* %n, align 4, !dbg !12547
  %idxprom22 = sext i32 %32 to i64, !dbg !12547
  %arrayidx23 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %31, i64 %idxprom22, !dbg !12547
  %33 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx23, align 8, !dbg !12547
  call void @pbvh_vertex_iter_init(%struct.PBVH* %30, %struct.PBVHNode* %33, %struct.PBVHVertexIter* %vd, i32 1), !dbg !12547
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12548
  store i32 0, i32* %i, align 4, !dbg !12548
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12548
  store i32 0, i32* %g, align 8, !dbg !12548
  br label %for.cond24, !dbg !12548

for.cond24:                                       ; preds = %for.inc193, %for.body
  %g25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12550
  %34 = load i32, i32* %g25, align 8, !dbg !12550
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !12550
  %35 = load i32, i32* %totgrid, align 8, !dbg !12550
  %cmp26 = icmp slt i32 %34, %35, !dbg !12550
  br i1 %cmp26, label %for.body27, label %for.end196, !dbg !12548

for.body27:                                       ; preds = %for.cond24
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12552
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !12552
  %tobool = icmp ne %struct.CCGElem** %36, null, !dbg !12552
  br i1 %tobool, label %if.then28, label %if.else, !dbg !12555

if.then28:                                        ; preds = %for.body27
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12556
  %37 = load i32, i32* %gridsize, align 4, !dbg !12556
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12556
  store i32 %37, i32* %width, align 4, !dbg !12556
  %gridsize29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12556
  %38 = load i32, i32* %gridsize29, align 4, !dbg !12556
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12556
  store i32 %38, i32* %height, align 8, !dbg !12556
  %grids30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12556
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids30, align 8, !dbg !12556
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12556
  %40 = load i32*, i32** %grid_indices, align 8, !dbg !12556
  %g31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12556
  %41 = load i32, i32* %g31, align 8, !dbg !12556
  %idxprom32 = sext i32 %41 to i64, !dbg !12556
  %arrayidx33 = getelementptr inbounds i32, i32* %40, i64 %idxprom32, !dbg !12556
  %42 = load i32, i32* %arrayidx33, align 4, !dbg !12556
  %idxprom34 = sext i32 %42 to i64, !dbg !12556
  %arrayidx35 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %39, i64 %idxprom34, !dbg !12556
  %43 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx35, align 8, !dbg !12556
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12556
  store %struct.CCGElem* %43, %struct.CCGElem** %grid, align 8, !dbg !12556
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !12558
  %44 = load i32**, i32*** %grid_hidden, align 8, !dbg !12558
  %grid_indices36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12558
  %45 = load i32*, i32** %grid_indices36, align 8, !dbg !12558
  %g37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12558
  %46 = load i32, i32* %g37, align 8, !dbg !12558
  %idxprom38 = sext i32 %46 to i64, !dbg !12558
  %arrayidx39 = getelementptr inbounds i32, i32* %45, i64 %idxprom38, !dbg !12558
  %47 = load i32, i32* %arrayidx39, align 4, !dbg !12558
  %idxprom40 = sext i32 %47 to i64, !dbg !12558
  %arrayidx41 = getelementptr inbounds i32*, i32** %44, i64 %idxprom40, !dbg !12558
  %48 = load i32*, i32** %arrayidx41, align 8, !dbg !12558
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12558
  store i32* %48, i32** %gh, align 8, !dbg !12558
  br label %if.end44, !dbg !12556

if.else:                                          ; preds = %for.body27
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !12560
  %49 = load i32, i32* %totvert, align 8, !dbg !12560
  %width42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12560
  store i32 %49, i32* %width42, align 4, !dbg !12560
  %height43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12560
  store i32 1, i32* %height43, align 8, !dbg !12560
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then28
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12562
  store i32 0, i32* %gy, align 8, !dbg !12562
  br label %for.cond45, !dbg !12562

for.cond45:                                       ; preds = %for.inc189, %if.end44
  %gy46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12564
  %50 = load i32, i32* %gy46, align 8, !dbg !12564
  %height47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12564
  %51 = load i32, i32* %height47, align 8, !dbg !12564
  %cmp48 = icmp slt i32 %50, %51, !dbg !12564
  br i1 %cmp48, label %for.body49, label %for.end192, !dbg !12562

for.body49:                                       ; preds = %for.cond45
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12566
  store i32 0, i32* %gx, align 4, !dbg !12566
  br label %for.cond50, !dbg !12566

for.cond50:                                       ; preds = %for.inc, %for.body49
  %gx51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12569
  %52 = load i32, i32* %gx51, align 4, !dbg !12569
  %width52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12569
  %53 = load i32, i32* %width52, align 4, !dbg !12569
  %cmp53 = icmp slt i32 %52, %53, !dbg !12569
  br i1 %cmp53, label %for.body54, label %for.end, !dbg !12566

for.body54:                                       ; preds = %for.cond50
  %grid55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12571
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid55, align 8, !dbg !12571
  %tobool56 = icmp ne %struct.CCGElem* %54, null, !dbg !12571
  br i1 %tobool56, label %if.then57, label %if.else93, !dbg !12574

if.then57:                                        ; preds = %for.body54
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12575
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !12575
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12575
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !12575
  %call59 = call float* @CCG_elem_co(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !12575
  %co60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12575
  store float* %call59, float** %co60, align 8, !dbg !12575
  %key61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12575
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key61, align 8, !dbg !12575
  %grid62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12575
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid62, align 8, !dbg !12575
  %call63 = call float* @CCG_elem_no(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !12575
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12575
  store float* %call63, float** %fno, align 8, !dbg !12575
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12575
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !12575
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %59, i32 0, i32 9, !dbg !12575
  %60 = load i32, i32* %has_mask, align 4, !dbg !12575
  %tobool65 = icmp ne i32 %60, 0, !dbg !12575
  br i1 %tobool65, label %cond.true, label %cond.false, !dbg !12575

cond.true:                                        ; preds = %if.then57
  %key66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12575
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key66, align 8, !dbg !12575
  %grid67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12575
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid67, align 8, !dbg !12575
  %call68 = call float* @CCG_elem_mask(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !12575
  br label %cond.end, !dbg !12575

cond.false:                                       ; preds = %if.then57
  br label %cond.end, !dbg !12575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call68, %cond.true ], [ null, %cond.false ], !dbg !12575
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12575
  store float* %cond, float** %mask, align 8, !dbg !12575
  %key69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12575
  %63 = load %struct.CCGKey*, %struct.CCGKey** %key69, align 8, !dbg !12575
  %grid70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12575
  %64 = load %struct.CCGElem*, %struct.CCGElem** %grid70, align 8, !dbg !12575
  %call71 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %63, %struct.CCGElem* %64), !dbg !12575
  %grid72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12575
  store %struct.CCGElem* %call71, %struct.CCGElem** %grid72, align 8, !dbg !12575
  %gh73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12577
  %65 = load i32*, i32** %gh73, align 8, !dbg !12577
  %tobool74 = icmp ne i32* %65, null, !dbg !12577
  br i1 %tobool74, label %if.then75, label %if.end92, !dbg !12575

if.then75:                                        ; preds = %cond.end
  %gh76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12579
  %66 = load i32*, i32** %gh76, align 8, !dbg !12579
  %gy77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12579
  %67 = load i32, i32* %gy77, align 8, !dbg !12579
  %gridsize78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12579
  %68 = load i32, i32* %gridsize78, align 4, !dbg !12579
  %mul79 = mul nsw i32 %67, %68, !dbg !12579
  %gx80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12579
  %69 = load i32, i32* %gx80, align 4, !dbg !12579
  %add = add nsw i32 %mul79, %69, !dbg !12579
  %shr = ashr i32 %add, 5, !dbg !12579
  %idxprom81 = sext i32 %shr to i64, !dbg !12579
  %arrayidx82 = getelementptr inbounds i32, i32* %66, i64 %idxprom81, !dbg !12579
  %70 = load i32, i32* %arrayidx82, align 4, !dbg !12579
  %gy83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12579
  %71 = load i32, i32* %gy83, align 8, !dbg !12579
  %gridsize84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12579
  %72 = load i32, i32* %gridsize84, align 4, !dbg !12579
  %mul85 = mul nsw i32 %71, %72, !dbg !12579
  %gx86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12579
  %73 = load i32, i32* %gx86, align 4, !dbg !12579
  %add87 = add nsw i32 %mul85, %73, !dbg !12579
  %and = and i32 %add87, 31, !dbg !12579
  %shl = shl i32 1, %and, !dbg !12579
  %and88 = and i32 %70, %shl, !dbg !12579
  %tobool89 = icmp ne i32 %and88, 0, !dbg !12579
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !12582

if.then90:                                        ; preds = %if.then75
  br label %for.inc, !dbg !12579

if.end91:                                         ; preds = %if.then75
  br label %if.end92, !dbg !12582

if.end92:                                         ; preds = %if.end91, %cond.end
  br label %if.end155, !dbg !12575

if.else93:                                        ; preds = %for.body54
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12583
  %74 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !12583
  %tobool94 = icmp ne %struct.MVert* %74, null, !dbg !12583
  br i1 %tobool94, label %if.then95, label %if.else125, !dbg !12571

if.then95:                                        ; preds = %if.else93
  %mverts96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12585
  %75 = load %struct.MVert*, %struct.MVert** %mverts96, align 8, !dbg !12585
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12585
  %76 = load i32*, i32** %vert_indices, align 8, !dbg !12585
  %gx97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12585
  %77 = load i32, i32* %gx97, align 4, !dbg !12585
  %idxprom98 = sext i32 %77 to i64, !dbg !12585
  %arrayidx99 = getelementptr inbounds i32, i32* %76, i64 %idxprom98, !dbg !12585
  %78 = load i32, i32* %arrayidx99, align 4, !dbg !12585
  %idxprom100 = sext i32 %78 to i64, !dbg !12585
  %arrayidx101 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom100, !dbg !12585
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12585
  store %struct.MVert* %arrayidx101, %struct.MVert** %mvert, align 8, !dbg !12585
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12587
  %79 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !12587
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 2, !dbg !12587
  %80 = load i8, i8* %flag, align 2, !dbg !12587
  %conv = zext i8 %80 to i32, !dbg !12587
  %and103 = and i32 %conv, 16, !dbg !12587
  %tobool104 = icmp ne i32 %and103, 0, !dbg !12587
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !12585

if.then105:                                       ; preds = %if.then95
  br label %for.inc, !dbg !12587

if.end106:                                        ; preds = %if.then95
  %mvert107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12585
  %81 = load %struct.MVert*, %struct.MVert** %mvert107, align 8, !dbg !12585
  %co108 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 0, !dbg !12585
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %co108, i64 0, i64 0, !dbg !12585
  %co110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12585
  store float* %arraydecay109, float** %co110, align 8, !dbg !12585
  %mvert111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12585
  %82 = load %struct.MVert*, %struct.MVert** %mvert111, align 8, !dbg !12585
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 1, !dbg !12585
  %arraydecay112 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !12585
  %no113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12585
  store i16* %arraydecay112, i16** %no113, align 8, !dbg !12585
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12589
  %83 = load float*, float** %vmask, align 8, !dbg !12589
  %tobool114 = icmp ne float* %83, null, !dbg !12589
  br i1 %tobool114, label %if.then115, label %if.end124, !dbg !12585

if.then115:                                       ; preds = %if.end106
  %vmask116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12589
  %84 = load float*, float** %vmask116, align 8, !dbg !12589
  %vert_indices117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12589
  %85 = load i32*, i32** %vert_indices117, align 8, !dbg !12589
  %gx118 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12589
  %86 = load i32, i32* %gx118, align 4, !dbg !12589
  %idxprom119 = sext i32 %86 to i64, !dbg !12589
  %arrayidx120 = getelementptr inbounds i32, i32* %85, i64 %idxprom119, !dbg !12589
  %87 = load i32, i32* %arrayidx120, align 4, !dbg !12589
  %idxprom121 = sext i32 %87 to i64, !dbg !12589
  %arrayidx122 = getelementptr inbounds float, float* %84, i64 %idxprom121, !dbg !12589
  %mask123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12589
  store float* %arrayidx122, float** %mask123, align 8, !dbg !12589
  br label %if.end124, !dbg !12589

if.end124:                                        ; preds = %if.then115, %if.end106
  br label %if.end154, !dbg !12585

if.else125:                                       ; preds = %if.else93
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12591
  %call126 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !12591
  %tobool127 = icmp ne i8 %call126, 0, !dbg !12591
  br i1 %tobool127, label %if.else132, label %if.then128, !dbg !12594

if.then128:                                       ; preds = %if.else125
  %bm_unique_verts129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12595
  %call130 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts129), !dbg !12595
  %88 = bitcast i8* %call130 to %struct.BMVert*, !dbg !12595
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12595
  store %struct.BMVert* %88, %struct.BMVert** %bm_vert, align 8, !dbg !12595
  %bm_unique_verts131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12595
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts131), !dbg !12595
  br label %if.end136, !dbg !12595

if.else132:                                       ; preds = %if.else125
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12597
  %call133 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !12597
  %89 = bitcast i8* %call133 to %struct.BMVert*, !dbg !12597
  %bm_vert134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12597
  store %struct.BMVert* %89, %struct.BMVert** %bm_vert134, align 8, !dbg !12597
  %bm_other_verts135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12597
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts135), !dbg !12597
  br label %if.end136

if.end136:                                        ; preds = %if.else132, %if.then128
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12599
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !12599
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !12599
  %call138 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !12599
  %conv139 = zext i8 %call138 to i32, !dbg !12599
  %tobool140 = icmp ne i32 %conv139, 0, !dbg !12599
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !12594

if.then141:                                       ; preds = %if.end136
  br label %for.inc, !dbg !12599

if.end142:                                        ; preds = %if.end136
  %bm_vert143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12594
  %91 = load %struct.BMVert*, %struct.BMVert** %bm_vert143, align 8, !dbg !12594
  %co144 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 2, !dbg !12594
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %co144, i64 0, i64 0, !dbg !12594
  %co146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12594
  store float* %arraydecay145, float** %co146, align 8, !dbg !12594
  %bm_vert147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12594
  %92 = load %struct.BMVert*, %struct.BMVert** %bm_vert147, align 8, !dbg !12594
  %no148 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %92, i32 0, i32 3, !dbg !12594
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %no148, i64 0, i64 0, !dbg !12594
  %fno150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12594
  store float* %arraydecay149, float** %fno150, align 8, !dbg !12594
  %bm_vert151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12594
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert151, align 8, !dbg !12594
  %head152 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !12594
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head152, i32 0, i32 0, !dbg !12594
  %94 = load i8*, i8** %data, align 8, !dbg !12594
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !12594
  %95 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !12594
  %idx.ext = sext i32 %95 to i64, !dbg !12594
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext, !dbg !12594
  %96 = bitcast i8* %add.ptr to float*, !dbg !12594
  %mask153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12594
  store float* %96, float** %mask153, align 8, !dbg !12594
  br label %if.end154

if.end154:                                        ; preds = %if.end142, %if.end124
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end92
  %co156 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12601
  %97 = load float*, float** %co156, align 8, !dbg !12601
  %call157 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %97), !dbg !12604
  %tobool158 = icmp ne i8 %call157, 0, !dbg !12604
  br i1 %tobool158, label %if.then159, label %if.end185, !dbg !12605

if.then159:                                       ; preds = %if.end155
  call void @llvm.dbg.declare(metadata float* %fade, metadata !12606, metadata !DIExpression()), !dbg !12608
  %98 = load float, float* %bstrength, align 4, !dbg !12609
  %99 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12610
  %100 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12611
  %co160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12612
  %101 = load float*, float** %co160, align 8, !dbg !12612
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12613
  %102 = load float, float* %dist, align 8, !dbg !12613
  %no161 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12614
  %103 = load i16*, i16** %no161, align 8, !dbg !12614
  %fno162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12615
  %104 = load float*, float** %fno162, align 8, !dbg !12615
  %mask163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12616
  %105 = load float*, float** %mask163, align 8, !dbg !12616
  %tobool164 = icmp ne float* %105, null, !dbg !12617
  br i1 %tobool164, label %cond.true165, label %cond.false167, !dbg !12617

cond.true165:                                     ; preds = %if.then159
  %mask166 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12618
  %106 = load float*, float** %mask166, align 8, !dbg !12618
  %107 = load float, float* %106, align 4, !dbg !12619
  br label %cond.end168, !dbg !12617

cond.false167:                                    ; preds = %if.then159
  br label %cond.end168, !dbg !12617

cond.end168:                                      ; preds = %cond.false167, %cond.true165
  %cond169 = phi float [ %107, %cond.true165 ], [ 0.000000e+00, %cond.false167 ], !dbg !12617
  %call170 = call float @tex_strength(%struct.SculptSession* %99, %struct.Brush* %100, float* %101, float %102, i16* %103, float* %104, float %cond169), !dbg !12620
  %mul171 = fmul float %98, %call170, !dbg !12621
  store float %mul171, float* %fade, align 4, !dbg !12608
  %108 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12622
  %i172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12623
  %109 = load i32, i32* %i172, align 4, !dbg !12623
  %idxprom173 = sext i32 %109 to i64, !dbg !12622
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %108, i64 %idxprom173, !dbg !12622
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx174, i64 0, i64 0, !dbg !12622
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12624
  %110 = load float, float* %fade, align 4, !dbg !12625
  call void @mul_v3_v3fl(float* %arraydecay175, float* %arraydecay176, float %110), !dbg !12626
  %mvert177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12627
  %111 = load %struct.MVert*, %struct.MVert** %mvert177, align 8, !dbg !12627
  %tobool178 = icmp ne %struct.MVert* %111, null, !dbg !12629
  br i1 %tobool178, label %if.then179, label %if.end184, !dbg !12630

if.then179:                                       ; preds = %cond.end168
  %mvert180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12631
  %112 = load %struct.MVert*, %struct.MVert** %mvert180, align 8, !dbg !12631
  %flag181 = getelementptr inbounds %struct.MVert, %struct.MVert* %112, i32 0, i32 2, !dbg !12632
  %113 = load i8, i8* %flag181, align 2, !dbg !12633
  %conv182 = zext i8 %113 to i32, !dbg !12633
  %or = or i32 %conv182, 128, !dbg !12633
  %conv183 = trunc i32 %or to i8, !dbg !12633
  store i8 %conv183, i8* %flag181, align 2, !dbg !12633
  br label %if.end184, !dbg !12634

if.end184:                                        ; preds = %if.then179, %cond.end168
  br label %if.end185, !dbg !12635

if.end185:                                        ; preds = %if.end184, %if.end155
  br label %for.inc, !dbg !12636

for.inc:                                          ; preds = %if.end185, %if.then141, %if.then105, %if.then90
  %gx186 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12569
  %114 = load i32, i32* %gx186, align 4, !dbg !12569
  %inc = add nsw i32 %114, 1, !dbg !12569
  store i32 %inc, i32* %gx186, align 4, !dbg !12569
  %i187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12569
  %115 = load i32, i32* %i187, align 4, !dbg !12569
  %inc188 = add nsw i32 %115, 1, !dbg !12569
  store i32 %inc188, i32* %i187, align 4, !dbg !12569
  br label %for.cond50, !dbg !12569, !llvm.loop !12637

for.end:                                          ; preds = %for.cond50
  br label %for.inc189, !dbg !12639

for.inc189:                                       ; preds = %for.end
  %gy190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12564
  %116 = load i32, i32* %gy190, align 8, !dbg !12564
  %inc191 = add nsw i32 %116, 1, !dbg !12564
  store i32 %inc191, i32* %gy190, align 8, !dbg !12564
  br label %for.cond45, !dbg !12564, !llvm.loop !12640

for.end192:                                       ; preds = %for.cond45
  br label %for.inc193, !dbg !12642

for.inc193:                                       ; preds = %for.end192
  %g194 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12550
  %117 = load i32, i32* %g194, align 8, !dbg !12550
  %inc195 = add nsw i32 %117, 1, !dbg !12550
  store i32 %inc195, i32* %g194, align 8, !dbg !12550
  br label %for.cond24, !dbg !12550, !llvm.loop !12643

for.end196:                                       ; preds = %for.cond24
  br label %for.inc197, !dbg !12645

for.inc197:                                       ; preds = %for.end196
  %118 = load i32, i32* %n, align 4, !dbg !12646
  %inc198 = add nsw i32 %118, 1, !dbg !12646
  store i32 %inc198, i32* %n, align 4, !dbg !12646
  br label %for.cond, !dbg !12647, !llvm.loop !12648

for.end199:                                       ; preds = %for.cond
  ret void, !dbg !12650
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_nudge_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !12651 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %grab_delta = alloca [3 x float], align 4
  %tmp = alloca [3 x float], align 4
  %cono = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !12652, metadata !DIExpression()), !dbg !12653
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12654, metadata !DIExpression()), !dbg !12655
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !12656, metadata !DIExpression()), !dbg !12657
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !12658, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !12660, metadata !DIExpression()), !dbg !12661
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12662
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !12663
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !12663
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !12661
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12664, metadata !DIExpression()), !dbg !12665
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !12666
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !12667
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12668
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12665
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !12669, metadata !DIExpression()), !dbg !12670
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12671
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !12672
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !12672
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !12673
  %5 = load float, float* %bstrength1, align 8, !dbg !12673
  store float %5, float* %bstrength, align 4, !dbg !12670
  call void @llvm.dbg.declare(metadata [3 x float]* %grab_delta, metadata !12674, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !12676, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.declare(metadata [3 x float]* %cono, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12680, metadata !DIExpression()), !dbg !12681
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12682
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12683
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !12684
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !12684
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 27, !dbg !12685
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !12683
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !12686
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !12687
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12688
  %cache5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !12689
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache5, align 8, !dbg !12689
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 35, !dbg !12690
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !12688
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12691
  call void @cross_v3_v3v3(float* %arraydecay4, float* %arraydecay6, float* %arraydecay7), !dbg !12692
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cono, i64 0, i64 0, !dbg !12693
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !12694
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12695
  %cache10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 28, !dbg !12696
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache10, align 8, !dbg !12696
  %sculpt_normal_symm11 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 35, !dbg !12697
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm11, i64 0, i64 0, !dbg !12695
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay12), !dbg !12698
  store i32 0, i32* %n, align 4, !dbg !12699
  br label %for.cond, !dbg !12701

for.cond:                                         ; preds = %for.inc187, %entry
  %12 = load i32, i32* %n, align 4, !dbg !12702
  %13 = load i32, i32* %totnode.addr, align 4, !dbg !12704
  %cmp = icmp slt i32 %12, %13, !dbg !12705
  br i1 %cmp, label %for.body, label %for.end189, !dbg !12706

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !12707, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !12712, metadata !DIExpression()), !dbg !12713
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12714
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 15, !dbg !12715
  %15 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !12715
  %16 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12716
  %17 = load i32, i32* %n, align 4, !dbg !12717
  %idxprom = sext i32 %17 to i64, !dbg !12716
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %16, i64 %idxprom, !dbg !12716
  %18 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !12716
  %call13 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %15, %struct.PBVHNode* %18), !dbg !12718
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call13, i32 0, i32 0, !dbg !12719
  %19 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !12719
  store [3 x float]* %19, [3 x float]** %proxy, align 8, !dbg !12720
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12721
  call void @sculpt_brush_test_init(%struct.SculptSession* %20, %struct.SculptBrushTest* %test), !dbg !12722
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12723
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 15, !dbg !12723
  %22 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !12723
  %23 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12723
  %24 = load i32, i32* %n, align 4, !dbg !12723
  %idxprom15 = sext i32 %24 to i64, !dbg !12723
  %arrayidx16 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %23, i64 %idxprom15, !dbg !12723
  %25 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx16, align 8, !dbg !12723
  call void @pbvh_vertex_iter_init(%struct.PBVH* %22, %struct.PBVHNode* %25, %struct.PBVHVertexIter* %vd, i32 1), !dbg !12723
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12724
  store i32 0, i32* %i, align 4, !dbg !12724
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12724
  store i32 0, i32* %g, align 8, !dbg !12724
  br label %for.cond17, !dbg !12724

for.cond17:                                       ; preds = %for.inc183, %for.body
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12726
  %26 = load i32, i32* %g18, align 8, !dbg !12726
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !12726
  %27 = load i32, i32* %totgrid, align 8, !dbg !12726
  %cmp19 = icmp slt i32 %26, %27, !dbg !12726
  br i1 %cmp19, label %for.body20, label %for.end186, !dbg !12724

for.body20:                                       ; preds = %for.cond17
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12728
  %28 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !12728
  %tobool = icmp ne %struct.CCGElem** %28, null, !dbg !12728
  br i1 %tobool, label %if.then, label %if.else, !dbg !12731

if.then:                                          ; preds = %for.body20
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12732
  %29 = load i32, i32* %gridsize, align 4, !dbg !12732
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12732
  store i32 %29, i32* %width, align 4, !dbg !12732
  %gridsize21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12732
  %30 = load i32, i32* %gridsize21, align 4, !dbg !12732
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12732
  store i32 %30, i32* %height, align 8, !dbg !12732
  %grids22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12732
  %31 = load %struct.CCGElem**, %struct.CCGElem*** %grids22, align 8, !dbg !12732
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12732
  %32 = load i32*, i32** %grid_indices, align 8, !dbg !12732
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12732
  %33 = load i32, i32* %g23, align 8, !dbg !12732
  %idxprom24 = sext i32 %33 to i64, !dbg !12732
  %arrayidx25 = getelementptr inbounds i32, i32* %32, i64 %idxprom24, !dbg !12732
  %34 = load i32, i32* %arrayidx25, align 4, !dbg !12732
  %idxprom26 = sext i32 %34 to i64, !dbg !12732
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %31, i64 %idxprom26, !dbg !12732
  %35 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !12732
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12732
  store %struct.CCGElem* %35, %struct.CCGElem** %grid, align 8, !dbg !12732
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !12734
  %36 = load i32**, i32*** %grid_hidden, align 8, !dbg !12734
  %grid_indices28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12734
  %37 = load i32*, i32** %grid_indices28, align 8, !dbg !12734
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12734
  %38 = load i32, i32* %g29, align 8, !dbg !12734
  %idxprom30 = sext i32 %38 to i64, !dbg !12734
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom30, !dbg !12734
  %39 = load i32, i32* %arrayidx31, align 4, !dbg !12734
  %idxprom32 = sext i32 %39 to i64, !dbg !12734
  %arrayidx33 = getelementptr inbounds i32*, i32** %36, i64 %idxprom32, !dbg !12734
  %40 = load i32*, i32** %arrayidx33, align 8, !dbg !12734
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12734
  store i32* %40, i32** %gh, align 8, !dbg !12734
  br label %if.end, !dbg !12732

if.else:                                          ; preds = %for.body20
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !12736
  %41 = load i32, i32* %totvert, align 8, !dbg !12736
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12736
  store i32 %41, i32* %width34, align 4, !dbg !12736
  %height35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12736
  store i32 1, i32* %height35, align 8, !dbg !12736
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12738
  store i32 0, i32* %gy, align 8, !dbg !12738
  br label %for.cond36, !dbg !12738

for.cond36:                                       ; preds = %for.inc179, %if.end
  %gy37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12740
  %42 = load i32, i32* %gy37, align 8, !dbg !12740
  %height38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12740
  %43 = load i32, i32* %height38, align 8, !dbg !12740
  %cmp39 = icmp slt i32 %42, %43, !dbg !12740
  br i1 %cmp39, label %for.body40, label %for.end182, !dbg !12738

for.body40:                                       ; preds = %for.cond36
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12742
  store i32 0, i32* %gx, align 4, !dbg !12742
  br label %for.cond41, !dbg !12742

for.cond41:                                       ; preds = %for.inc, %for.body40
  %gx42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12745
  %44 = load i32, i32* %gx42, align 4, !dbg !12745
  %width43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12745
  %45 = load i32, i32* %width43, align 4, !dbg !12745
  %cmp44 = icmp slt i32 %44, %45, !dbg !12745
  br i1 %cmp44, label %for.body45, label %for.end, !dbg !12742

for.body45:                                       ; preds = %for.cond41
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12747
  %46 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !12747
  %tobool47 = icmp ne %struct.CCGElem* %46, null, !dbg !12747
  br i1 %tobool47, label %if.then48, label %if.else83, !dbg !12750

if.then48:                                        ; preds = %for.body45
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12751
  %47 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !12751
  %grid49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12751
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid49, align 8, !dbg !12751
  %call50 = call float* @CCG_elem_co(%struct.CCGKey* %47, %struct.CCGElem* %48), !dbg !12751
  %co51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12751
  store float* %call50, float** %co51, align 8, !dbg !12751
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12751
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !12751
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12751
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !12751
  %call54 = call float* @CCG_elem_no(%struct.CCGKey* %49, %struct.CCGElem* %50), !dbg !12751
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12751
  store float* %call54, float** %fno, align 8, !dbg !12751
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12751
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !12751
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %51, i32 0, i32 9, !dbg !12751
  %52 = load i32, i32* %has_mask, align 4, !dbg !12751
  %tobool56 = icmp ne i32 %52, 0, !dbg !12751
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !12751

cond.true:                                        ; preds = %if.then48
  %key57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12751
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key57, align 8, !dbg !12751
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12751
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !12751
  %call59 = call float* @CCG_elem_mask(%struct.CCGKey* %53, %struct.CCGElem* %54), !dbg !12751
  br label %cond.end, !dbg !12751

cond.false:                                       ; preds = %if.then48
  br label %cond.end, !dbg !12751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call59, %cond.true ], [ null, %cond.false ], !dbg !12751
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12751
  store float* %cond, float** %mask, align 8, !dbg !12751
  %key60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12751
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key60, align 8, !dbg !12751
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12751
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid61, align 8, !dbg !12751
  %call62 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !12751
  %grid63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12751
  store %struct.CCGElem* %call62, %struct.CCGElem** %grid63, align 8, !dbg !12751
  %gh64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12753
  %57 = load i32*, i32** %gh64, align 8, !dbg !12753
  %tobool65 = icmp ne i32* %57, null, !dbg !12753
  br i1 %tobool65, label %if.then66, label %if.end82, !dbg !12751

if.then66:                                        ; preds = %cond.end
  %gh67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12755
  %58 = load i32*, i32** %gh67, align 8, !dbg !12755
  %gy68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12755
  %59 = load i32, i32* %gy68, align 8, !dbg !12755
  %gridsize69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12755
  %60 = load i32, i32* %gridsize69, align 4, !dbg !12755
  %mul = mul nsw i32 %59, %60, !dbg !12755
  %gx70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12755
  %61 = load i32, i32* %gx70, align 4, !dbg !12755
  %add = add nsw i32 %mul, %61, !dbg !12755
  %shr = ashr i32 %add, 5, !dbg !12755
  %idxprom71 = sext i32 %shr to i64, !dbg !12755
  %arrayidx72 = getelementptr inbounds i32, i32* %58, i64 %idxprom71, !dbg !12755
  %62 = load i32, i32* %arrayidx72, align 4, !dbg !12755
  %gy73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12755
  %63 = load i32, i32* %gy73, align 8, !dbg !12755
  %gridsize74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12755
  %64 = load i32, i32* %gridsize74, align 4, !dbg !12755
  %mul75 = mul nsw i32 %63, %64, !dbg !12755
  %gx76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12755
  %65 = load i32, i32* %gx76, align 4, !dbg !12755
  %add77 = add nsw i32 %mul75, %65, !dbg !12755
  %and = and i32 %add77, 31, !dbg !12755
  %shl = shl i32 1, %and, !dbg !12755
  %and78 = and i32 %62, %shl, !dbg !12755
  %tobool79 = icmp ne i32 %and78, 0, !dbg !12755
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !12758

if.then80:                                        ; preds = %if.then66
  br label %for.inc, !dbg !12755

if.end81:                                         ; preds = %if.then66
  br label %if.end82, !dbg !12758

if.end82:                                         ; preds = %if.end81, %cond.end
  br label %if.end145, !dbg !12751

if.else83:                                        ; preds = %for.body45
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12759
  %66 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !12759
  %tobool84 = icmp ne %struct.MVert* %66, null, !dbg !12759
  br i1 %tobool84, label %if.then85, label %if.else115, !dbg !12747

if.then85:                                        ; preds = %if.else83
  %mverts86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12761
  %67 = load %struct.MVert*, %struct.MVert** %mverts86, align 8, !dbg !12761
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12761
  %68 = load i32*, i32** %vert_indices, align 8, !dbg !12761
  %gx87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12761
  %69 = load i32, i32* %gx87, align 4, !dbg !12761
  %idxprom88 = sext i32 %69 to i64, !dbg !12761
  %arrayidx89 = getelementptr inbounds i32, i32* %68, i64 %idxprom88, !dbg !12761
  %70 = load i32, i32* %arrayidx89, align 4, !dbg !12761
  %idxprom90 = sext i32 %70 to i64, !dbg !12761
  %arrayidx91 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i64 %idxprom90, !dbg !12761
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12761
  store %struct.MVert* %arrayidx91, %struct.MVert** %mvert, align 8, !dbg !12761
  %mvert92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12763
  %71 = load %struct.MVert*, %struct.MVert** %mvert92, align 8, !dbg !12763
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i32 0, i32 2, !dbg !12763
  %72 = load i8, i8* %flag, align 2, !dbg !12763
  %conv = zext i8 %72 to i32, !dbg !12763
  %and93 = and i32 %conv, 16, !dbg !12763
  %tobool94 = icmp ne i32 %and93, 0, !dbg !12763
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !12761

if.then95:                                        ; preds = %if.then85
  br label %for.inc, !dbg !12763

if.end96:                                         ; preds = %if.then85
  %mvert97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12761
  %73 = load %struct.MVert*, %struct.MVert** %mvert97, align 8, !dbg !12761
  %co98 = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i32 0, i32 0, !dbg !12761
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 0, !dbg !12761
  %co100 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12761
  store float* %arraydecay99, float** %co100, align 8, !dbg !12761
  %mvert101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12761
  %74 = load %struct.MVert*, %struct.MVert** %mvert101, align 8, !dbg !12761
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %74, i32 0, i32 1, !dbg !12761
  %arraydecay102 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !12761
  %no103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12761
  store i16* %arraydecay102, i16** %no103, align 8, !dbg !12761
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12765
  %75 = load float*, float** %vmask, align 8, !dbg !12765
  %tobool104 = icmp ne float* %75, null, !dbg !12765
  br i1 %tobool104, label %if.then105, label %if.end114, !dbg !12761

if.then105:                                       ; preds = %if.end96
  %vmask106 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12765
  %76 = load float*, float** %vmask106, align 8, !dbg !12765
  %vert_indices107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12765
  %77 = load i32*, i32** %vert_indices107, align 8, !dbg !12765
  %gx108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12765
  %78 = load i32, i32* %gx108, align 4, !dbg !12765
  %idxprom109 = sext i32 %78 to i64, !dbg !12765
  %arrayidx110 = getelementptr inbounds i32, i32* %77, i64 %idxprom109, !dbg !12765
  %79 = load i32, i32* %arrayidx110, align 4, !dbg !12765
  %idxprom111 = sext i32 %79 to i64, !dbg !12765
  %arrayidx112 = getelementptr inbounds float, float* %76, i64 %idxprom111, !dbg !12765
  %mask113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12765
  store float* %arrayidx112, float** %mask113, align 8, !dbg !12765
  br label %if.end114, !dbg !12765

if.end114:                                        ; preds = %if.then105, %if.end96
  br label %if.end144, !dbg !12761

if.else115:                                       ; preds = %if.else83
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12767
  %call116 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !12767
  %tobool117 = icmp ne i8 %call116, 0, !dbg !12767
  br i1 %tobool117, label %if.else122, label %if.then118, !dbg !12770

if.then118:                                       ; preds = %if.else115
  %bm_unique_verts119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12771
  %call120 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts119), !dbg !12771
  %80 = bitcast i8* %call120 to %struct.BMVert*, !dbg !12771
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12771
  store %struct.BMVert* %80, %struct.BMVert** %bm_vert, align 8, !dbg !12771
  %bm_unique_verts121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12771
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts121), !dbg !12771
  br label %if.end126, !dbg !12771

if.else122:                                       ; preds = %if.else115
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12773
  %call123 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !12773
  %81 = bitcast i8* %call123 to %struct.BMVert*, !dbg !12773
  %bm_vert124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12773
  store %struct.BMVert* %81, %struct.BMVert** %bm_vert124, align 8, !dbg !12773
  %bm_other_verts125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12773
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts125), !dbg !12773
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then118
  %bm_vert127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12775
  %82 = load %struct.BMVert*, %struct.BMVert** %bm_vert127, align 8, !dbg !12775
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 0, !dbg !12775
  %call128 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !12775
  %conv129 = zext i8 %call128 to i32, !dbg !12775
  %tobool130 = icmp ne i32 %conv129, 0, !dbg !12775
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !12770

if.then131:                                       ; preds = %if.end126
  br label %for.inc, !dbg !12775

if.end132:                                        ; preds = %if.end126
  %bm_vert133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12770
  %83 = load %struct.BMVert*, %struct.BMVert** %bm_vert133, align 8, !dbg !12770
  %co134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %83, i32 0, i32 2, !dbg !12770
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %co134, i64 0, i64 0, !dbg !12770
  %co136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12770
  store float* %arraydecay135, float** %co136, align 8, !dbg !12770
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12770
  %84 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !12770
  %no138 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 3, !dbg !12770
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %no138, i64 0, i64 0, !dbg !12770
  %fno140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12770
  store float* %arraydecay139, float** %fno140, align 8, !dbg !12770
  %bm_vert141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12770
  %85 = load %struct.BMVert*, %struct.BMVert** %bm_vert141, align 8, !dbg !12770
  %head142 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %85, i32 0, i32 0, !dbg !12770
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head142, i32 0, i32 0, !dbg !12770
  %86 = load i8*, i8** %data, align 8, !dbg !12770
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !12770
  %87 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !12770
  %idx.ext = sext i32 %87 to i64, !dbg !12770
  %add.ptr = getelementptr inbounds i8, i8* %86, i64 %idx.ext, !dbg !12770
  %88 = bitcast i8* %add.ptr to float*, !dbg !12770
  %mask143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12770
  store float* %88, float** %mask143, align 8, !dbg !12770
  br label %if.end144

if.end144:                                        ; preds = %if.end132, %if.end114
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end82
  %co146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12777
  %89 = load float*, float** %co146, align 8, !dbg !12777
  %call147 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %89), !dbg !12780
  %tobool148 = icmp ne i8 %call147, 0, !dbg !12780
  br i1 %tobool148, label %if.then149, label %if.end175, !dbg !12781

if.then149:                                       ; preds = %if.end145
  call void @llvm.dbg.declare(metadata float* %fade, metadata !12782, metadata !DIExpression()), !dbg !12784
  %90 = load float, float* %bstrength, align 4, !dbg !12785
  %91 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12786
  %92 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12787
  %co150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12788
  %93 = load float*, float** %co150, align 8, !dbg !12788
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12789
  %94 = load float, float* %dist, align 8, !dbg !12789
  %no151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12790
  %95 = load i16*, i16** %no151, align 8, !dbg !12790
  %fno152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12791
  %96 = load float*, float** %fno152, align 8, !dbg !12791
  %mask153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12792
  %97 = load float*, float** %mask153, align 8, !dbg !12792
  %tobool154 = icmp ne float* %97, null, !dbg !12793
  br i1 %tobool154, label %cond.true155, label %cond.false157, !dbg !12793

cond.true155:                                     ; preds = %if.then149
  %mask156 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12794
  %98 = load float*, float** %mask156, align 8, !dbg !12794
  %99 = load float, float* %98, align 4, !dbg !12795
  br label %cond.end158, !dbg !12793

cond.false157:                                    ; preds = %if.then149
  br label %cond.end158, !dbg !12793

cond.end158:                                      ; preds = %cond.false157, %cond.true155
  %cond159 = phi float [ %99, %cond.true155 ], [ 0.000000e+00, %cond.false157 ], !dbg !12793
  %call160 = call float @tex_strength(%struct.SculptSession* %91, %struct.Brush* %92, float* %93, float %94, i16* %95, float* %96, float %cond159), !dbg !12796
  %mul161 = fmul float %90, %call160, !dbg !12797
  store float %mul161, float* %fade, align 4, !dbg !12784
  %100 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12798
  %i162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12799
  %101 = load i32, i32* %i162, align 4, !dbg !12799
  %idxprom163 = sext i32 %101 to i64, !dbg !12798
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %100, i64 %idxprom163, !dbg !12798
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx164, i64 0, i64 0, !dbg !12798
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %cono, i64 0, i64 0, !dbg !12800
  %102 = load float, float* %fade, align 4, !dbg !12801
  call void @mul_v3_v3fl(float* %arraydecay165, float* %arraydecay166, float %102), !dbg !12802
  %mvert167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12803
  %103 = load %struct.MVert*, %struct.MVert** %mvert167, align 8, !dbg !12803
  %tobool168 = icmp ne %struct.MVert* %103, null, !dbg !12805
  br i1 %tobool168, label %if.then169, label %if.end174, !dbg !12806

if.then169:                                       ; preds = %cond.end158
  %mvert170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12807
  %104 = load %struct.MVert*, %struct.MVert** %mvert170, align 8, !dbg !12807
  %flag171 = getelementptr inbounds %struct.MVert, %struct.MVert* %104, i32 0, i32 2, !dbg !12808
  %105 = load i8, i8* %flag171, align 2, !dbg !12809
  %conv172 = zext i8 %105 to i32, !dbg !12809
  %or = or i32 %conv172, 128, !dbg !12809
  %conv173 = trunc i32 %or to i8, !dbg !12809
  store i8 %conv173, i8* %flag171, align 2, !dbg !12809
  br label %if.end174, !dbg !12810

if.end174:                                        ; preds = %if.then169, %cond.end158
  br label %if.end175, !dbg !12811

if.end175:                                        ; preds = %if.end174, %if.end145
  br label %for.inc, !dbg !12812

for.inc:                                          ; preds = %if.end175, %if.then131, %if.then95, %if.then80
  %gx176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12745
  %106 = load i32, i32* %gx176, align 4, !dbg !12745
  %inc = add nsw i32 %106, 1, !dbg !12745
  store i32 %inc, i32* %gx176, align 4, !dbg !12745
  %i177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12745
  %107 = load i32, i32* %i177, align 4, !dbg !12745
  %inc178 = add nsw i32 %107, 1, !dbg !12745
  store i32 %inc178, i32* %i177, align 4, !dbg !12745
  br label %for.cond41, !dbg !12745, !llvm.loop !12813

for.end:                                          ; preds = %for.cond41
  br label %for.inc179, !dbg !12815

for.inc179:                                       ; preds = %for.end
  %gy180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12740
  %108 = load i32, i32* %gy180, align 8, !dbg !12740
  %inc181 = add nsw i32 %108, 1, !dbg !12740
  store i32 %inc181, i32* %gy180, align 8, !dbg !12740
  br label %for.cond36, !dbg !12740, !llvm.loop !12816

for.end182:                                       ; preds = %for.cond36
  br label %for.inc183, !dbg !12818

for.inc183:                                       ; preds = %for.end182
  %g184 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12726
  %109 = load i32, i32* %g184, align 8, !dbg !12726
  %inc185 = add nsw i32 %109, 1, !dbg !12726
  store i32 %inc185, i32* %g184, align 8, !dbg !12726
  br label %for.cond17, !dbg !12726, !llvm.loop !12819

for.end186:                                       ; preds = %for.cond17
  br label %for.inc187, !dbg !12821

for.inc187:                                       ; preds = %for.end186
  %110 = load i32, i32* %n, align 4, !dbg !12822
  %inc188 = add nsw i32 %110, 1, !dbg !12822
  store i32 %inc188, i32* %n, align 4, !dbg !12822
  br label %for.cond, !dbg !12823, !llvm.loop !12824

for.end189:                                       ; preds = %for.cond
  ret void, !dbg !12826
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_thumb_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !12827 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %grab_delta = alloca [3 x float], align 4
  %tmp = alloca [3 x float], align 4
  %cono = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %orig_data = alloca %struct.SculptOrigVertData, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !12828, metadata !DIExpression()), !dbg !12829
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !12834, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !12836, metadata !DIExpression()), !dbg !12837
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12838
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !12839
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !12839
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !12837
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !12840, metadata !DIExpression()), !dbg !12841
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !12842
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !12843
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !12844
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !12841
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !12845, metadata !DIExpression()), !dbg !12846
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12847
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !12848
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !12848
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !12849
  %5 = load float, float* %bstrength1, align 8, !dbg !12849
  store float %5, float* %bstrength, align 4, !dbg !12846
  call void @llvm.dbg.declare(metadata [3 x float]* %grab_delta, metadata !12850, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !12852, metadata !DIExpression()), !dbg !12853
  call void @llvm.dbg.declare(metadata [3 x float]* %cono, metadata !12854, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12856, metadata !DIExpression()), !dbg !12857
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12858
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12859
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !12860
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !12860
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 27, !dbg !12861
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !12859
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !12862
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !12863
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12864
  %cache5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !12865
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache5, align 8, !dbg !12865
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 35, !dbg !12866
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !12864
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta, i64 0, i64 0, !dbg !12867
  call void @cross_v3_v3v3(float* %arraydecay4, float* %arraydecay6, float* %arraydecay7), !dbg !12868
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cono, i64 0, i64 0, !dbg !12869
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !12870
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12871
  %cache10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 28, !dbg !12872
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache10, align 8, !dbg !12872
  %sculpt_normal_symm11 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 35, !dbg !12873
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm11, i64 0, i64 0, !dbg !12871
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay12), !dbg !12874
  store i32 0, i32* %n, align 4, !dbg !12875
  br label %for.cond, !dbg !12877

for.cond:                                         ; preds = %for.inc188, %entry
  %12 = load i32, i32* %n, align 4, !dbg !12878
  %13 = load i32, i32* %totnode.addr, align 4, !dbg !12880
  %cmp = icmp slt i32 %12, %13, !dbg !12881
  br i1 %cmp, label %for.body, label %for.end190, !dbg !12882

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !12883, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData* %orig_data, metadata !12888, metadata !DIExpression()), !dbg !12889
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !12890, metadata !DIExpression()), !dbg !12891
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12892
  %15 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12893
  %16 = load i32, i32* %n, align 4, !dbg !12894
  %idxprom = sext i32 %16 to i64, !dbg !12893
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %15, i64 %idxprom, !dbg !12893
  %17 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !12893
  call void @sculpt_orig_vert_data_init(%struct.SculptOrigVertData* %orig_data, %struct.Object* %14, %struct.PBVHNode* %17), !dbg !12895
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12896
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 15, !dbg !12897
  %19 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !12897
  %20 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12898
  %21 = load i32, i32* %n, align 4, !dbg !12899
  %idxprom13 = sext i32 %21 to i64, !dbg !12898
  %arrayidx14 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %20, i64 %idxprom13, !dbg !12898
  %22 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx14, align 8, !dbg !12898
  %call15 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %19, %struct.PBVHNode* %22), !dbg !12900
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call15, i32 0, i32 0, !dbg !12901
  %23 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !12901
  store [3 x float]* %23, [3 x float]** %proxy, align 8, !dbg !12902
  %24 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12903
  call void @sculpt_brush_test_init(%struct.SculptSession* %24, %struct.SculptBrushTest* %test), !dbg !12904
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12905
  %pbvh16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 15, !dbg !12905
  %26 = load %struct.PBVH*, %struct.PBVH** %pbvh16, align 8, !dbg !12905
  %27 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !12905
  %28 = load i32, i32* %n, align 4, !dbg !12905
  %idxprom17 = sext i32 %28 to i64, !dbg !12905
  %arrayidx18 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %27, i64 %idxprom17, !dbg !12905
  %29 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx18, align 8, !dbg !12905
  call void @pbvh_vertex_iter_init(%struct.PBVH* %26, %struct.PBVHNode* %29, %struct.PBVHVertexIter* %vd, i32 1), !dbg !12905
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12906
  store i32 0, i32* %i, align 4, !dbg !12906
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12906
  store i32 0, i32* %g, align 8, !dbg !12906
  br label %for.cond19, !dbg !12906

for.cond19:                                       ; preds = %for.inc184, %for.body
  %g20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12908
  %30 = load i32, i32* %g20, align 8, !dbg !12908
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !12908
  %31 = load i32, i32* %totgrid, align 8, !dbg !12908
  %cmp21 = icmp slt i32 %30, %31, !dbg !12908
  br i1 %cmp21, label %for.body22, label %for.end187, !dbg !12906

for.body22:                                       ; preds = %for.cond19
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12910
  %32 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !12910
  %tobool = icmp ne %struct.CCGElem** %32, null, !dbg !12910
  br i1 %tobool, label %if.then, label %if.else, !dbg !12913

if.then:                                          ; preds = %for.body22
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12914
  %33 = load i32, i32* %gridsize, align 4, !dbg !12914
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12914
  store i32 %33, i32* %width, align 4, !dbg !12914
  %gridsize23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12914
  %34 = load i32, i32* %gridsize23, align 4, !dbg !12914
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12914
  store i32 %34, i32* %height, align 8, !dbg !12914
  %grids24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !12914
  %35 = load %struct.CCGElem**, %struct.CCGElem*** %grids24, align 8, !dbg !12914
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12914
  %36 = load i32*, i32** %grid_indices, align 8, !dbg !12914
  %g25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12914
  %37 = load i32, i32* %g25, align 8, !dbg !12914
  %idxprom26 = sext i32 %37 to i64, !dbg !12914
  %arrayidx27 = getelementptr inbounds i32, i32* %36, i64 %idxprom26, !dbg !12914
  %38 = load i32, i32* %arrayidx27, align 4, !dbg !12914
  %idxprom28 = sext i32 %38 to i64, !dbg !12914
  %arrayidx29 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %35, i64 %idxprom28, !dbg !12914
  %39 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx29, align 8, !dbg !12914
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12914
  store %struct.CCGElem* %39, %struct.CCGElem** %grid, align 8, !dbg !12914
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !12916
  %40 = load i32**, i32*** %grid_hidden, align 8, !dbg !12916
  %grid_indices30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !12916
  %41 = load i32*, i32** %grid_indices30, align 8, !dbg !12916
  %g31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12916
  %42 = load i32, i32* %g31, align 8, !dbg !12916
  %idxprom32 = sext i32 %42 to i64, !dbg !12916
  %arrayidx33 = getelementptr inbounds i32, i32* %41, i64 %idxprom32, !dbg !12916
  %43 = load i32, i32* %arrayidx33, align 4, !dbg !12916
  %idxprom34 = sext i32 %43 to i64, !dbg !12916
  %arrayidx35 = getelementptr inbounds i32*, i32** %40, i64 %idxprom34, !dbg !12916
  %44 = load i32*, i32** %arrayidx35, align 8, !dbg !12916
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12916
  store i32* %44, i32** %gh, align 8, !dbg !12916
  br label %if.end, !dbg !12914

if.else:                                          ; preds = %for.body22
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !12918
  %45 = load i32, i32* %totvert, align 8, !dbg !12918
  %width36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12918
  store i32 %45, i32* %width36, align 4, !dbg !12918
  %height37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12918
  store i32 1, i32* %height37, align 8, !dbg !12918
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12920
  store i32 0, i32* %gy, align 8, !dbg !12920
  br label %for.cond38, !dbg !12920

for.cond38:                                       ; preds = %for.inc180, %if.end
  %gy39 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12922
  %46 = load i32, i32* %gy39, align 8, !dbg !12922
  %height40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !12922
  %47 = load i32, i32* %height40, align 8, !dbg !12922
  %cmp41 = icmp slt i32 %46, %47, !dbg !12922
  br i1 %cmp41, label %for.body42, label %for.end183, !dbg !12920

for.body42:                                       ; preds = %for.cond38
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12924
  store i32 0, i32* %gx, align 4, !dbg !12924
  br label %for.cond43, !dbg !12924

for.cond43:                                       ; preds = %for.inc, %for.body42
  %gx44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12927
  %48 = load i32, i32* %gx44, align 4, !dbg !12927
  %width45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !12927
  %49 = load i32, i32* %width45, align 4, !dbg !12927
  %cmp46 = icmp slt i32 %48, %49, !dbg !12927
  br i1 %cmp46, label %for.body47, label %for.end, !dbg !12924

for.body47:                                       ; preds = %for.cond43
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12929
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid48, align 8, !dbg !12929
  %tobool49 = icmp ne %struct.CCGElem* %50, null, !dbg !12929
  br i1 %tobool49, label %if.then50, label %if.else85, !dbg !12932

if.then50:                                        ; preds = %for.body47
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12933
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !12933
  %grid51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12933
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid51, align 8, !dbg !12933
  %call52 = call float* @CCG_elem_co(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !12933
  %co53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12933
  store float* %call52, float** %co53, align 8, !dbg !12933
  %key54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12933
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key54, align 8, !dbg !12933
  %grid55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12933
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid55, align 8, !dbg !12933
  %call56 = call float* @CCG_elem_no(%struct.CCGKey* %53, %struct.CCGElem* %54), !dbg !12933
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12933
  store float* %call56, float** %fno, align 8, !dbg !12933
  %key57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12933
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key57, align 8, !dbg !12933
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %55, i32 0, i32 9, !dbg !12933
  %56 = load i32, i32* %has_mask, align 4, !dbg !12933
  %tobool58 = icmp ne i32 %56, 0, !dbg !12933
  br i1 %tobool58, label %cond.true, label %cond.false, !dbg !12933

cond.true:                                        ; preds = %if.then50
  %key59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12933
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key59, align 8, !dbg !12933
  %grid60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12933
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid60, align 8, !dbg !12933
  %call61 = call float* @CCG_elem_mask(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !12933
  br label %cond.end, !dbg !12933

cond.false:                                       ; preds = %if.then50
  br label %cond.end, !dbg !12933

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call61, %cond.true ], [ null, %cond.false ], !dbg !12933
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12933
  store float* %cond, float** %mask, align 8, !dbg !12933
  %key62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !12933
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key62, align 8, !dbg !12933
  %grid63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12933
  %60 = load %struct.CCGElem*, %struct.CCGElem** %grid63, align 8, !dbg !12933
  %call64 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %59, %struct.CCGElem* %60), !dbg !12933
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !12933
  store %struct.CCGElem* %call64, %struct.CCGElem** %grid65, align 8, !dbg !12933
  %gh66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12935
  %61 = load i32*, i32** %gh66, align 8, !dbg !12935
  %tobool67 = icmp ne i32* %61, null, !dbg !12935
  br i1 %tobool67, label %if.then68, label %if.end84, !dbg !12933

if.then68:                                        ; preds = %cond.end
  %gh69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !12937
  %62 = load i32*, i32** %gh69, align 8, !dbg !12937
  %gy70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12937
  %63 = load i32, i32* %gy70, align 8, !dbg !12937
  %gridsize71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12937
  %64 = load i32, i32* %gridsize71, align 4, !dbg !12937
  %mul = mul nsw i32 %63, %64, !dbg !12937
  %gx72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12937
  %65 = load i32, i32* %gx72, align 4, !dbg !12937
  %add = add nsw i32 %mul, %65, !dbg !12937
  %shr = ashr i32 %add, 5, !dbg !12937
  %idxprom73 = sext i32 %shr to i64, !dbg !12937
  %arrayidx74 = getelementptr inbounds i32, i32* %62, i64 %idxprom73, !dbg !12937
  %66 = load i32, i32* %arrayidx74, align 4, !dbg !12937
  %gy75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12937
  %67 = load i32, i32* %gy75, align 8, !dbg !12937
  %gridsize76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !12937
  %68 = load i32, i32* %gridsize76, align 4, !dbg !12937
  %mul77 = mul nsw i32 %67, %68, !dbg !12937
  %gx78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12937
  %69 = load i32, i32* %gx78, align 4, !dbg !12937
  %add79 = add nsw i32 %mul77, %69, !dbg !12937
  %and = and i32 %add79, 31, !dbg !12937
  %shl = shl i32 1, %and, !dbg !12937
  %and80 = and i32 %66, %shl, !dbg !12937
  %tobool81 = icmp ne i32 %and80, 0, !dbg !12937
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !12940

if.then82:                                        ; preds = %if.then68
  br label %for.inc, !dbg !12937

if.end83:                                         ; preds = %if.then68
  br label %if.end84, !dbg !12940

if.end84:                                         ; preds = %if.end83, %cond.end
  br label %if.end147, !dbg !12933

if.else85:                                        ; preds = %for.body47
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12941
  %70 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !12941
  %tobool86 = icmp ne %struct.MVert* %70, null, !dbg !12941
  br i1 %tobool86, label %if.then87, label %if.else117, !dbg !12929

if.then87:                                        ; preds = %if.else85
  %mverts88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !12943
  %71 = load %struct.MVert*, %struct.MVert** %mverts88, align 8, !dbg !12943
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12943
  %72 = load i32*, i32** %vert_indices, align 8, !dbg !12943
  %gx89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12943
  %73 = load i32, i32* %gx89, align 4, !dbg !12943
  %idxprom90 = sext i32 %73 to i64, !dbg !12943
  %arrayidx91 = getelementptr inbounds i32, i32* %72, i64 %idxprom90, !dbg !12943
  %74 = load i32, i32* %arrayidx91, align 4, !dbg !12943
  %idxprom92 = sext i32 %74 to i64, !dbg !12943
  %arrayidx93 = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i64 %idxprom92, !dbg !12943
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12943
  store %struct.MVert* %arrayidx93, %struct.MVert** %mvert, align 8, !dbg !12943
  %mvert94 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12945
  %75 = load %struct.MVert*, %struct.MVert** %mvert94, align 8, !dbg !12945
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i32 0, i32 2, !dbg !12945
  %76 = load i8, i8* %flag, align 2, !dbg !12945
  %conv = zext i8 %76 to i32, !dbg !12945
  %and95 = and i32 %conv, 16, !dbg !12945
  %tobool96 = icmp ne i32 %and95, 0, !dbg !12945
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !12943

if.then97:                                        ; preds = %if.then87
  br label %for.inc, !dbg !12945

if.end98:                                         ; preds = %if.then87
  %mvert99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12943
  %77 = load %struct.MVert*, %struct.MVert** %mvert99, align 8, !dbg !12943
  %co100 = getelementptr inbounds %struct.MVert, %struct.MVert* %77, i32 0, i32 0, !dbg !12943
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %co100, i64 0, i64 0, !dbg !12943
  %co102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12943
  store float* %arraydecay101, float** %co102, align 8, !dbg !12943
  %mvert103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12943
  %78 = load %struct.MVert*, %struct.MVert** %mvert103, align 8, !dbg !12943
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i32 0, i32 1, !dbg !12943
  %arraydecay104 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !12943
  %no105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !12943
  store i16* %arraydecay104, i16** %no105, align 8, !dbg !12943
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12947
  %79 = load float*, float** %vmask, align 8, !dbg !12947
  %tobool106 = icmp ne float* %79, null, !dbg !12947
  br i1 %tobool106, label %if.then107, label %if.end116, !dbg !12943

if.then107:                                       ; preds = %if.end98
  %vmask108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !12947
  %80 = load float*, float** %vmask108, align 8, !dbg !12947
  %vert_indices109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !12947
  %81 = load i32*, i32** %vert_indices109, align 8, !dbg !12947
  %gx110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12947
  %82 = load i32, i32* %gx110, align 4, !dbg !12947
  %idxprom111 = sext i32 %82 to i64, !dbg !12947
  %arrayidx112 = getelementptr inbounds i32, i32* %81, i64 %idxprom111, !dbg !12947
  %83 = load i32, i32* %arrayidx112, align 4, !dbg !12947
  %idxprom113 = sext i32 %83 to i64, !dbg !12947
  %arrayidx114 = getelementptr inbounds float, float* %80, i64 %idxprom113, !dbg !12947
  %mask115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12947
  store float* %arrayidx114, float** %mask115, align 8, !dbg !12947
  br label %if.end116, !dbg !12947

if.end116:                                        ; preds = %if.then107, %if.end98
  br label %if.end146, !dbg !12943

if.else117:                                       ; preds = %if.else85
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12949
  %call118 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !12949
  %tobool119 = icmp ne i8 %call118, 0, !dbg !12949
  br i1 %tobool119, label %if.else124, label %if.then120, !dbg !12952

if.then120:                                       ; preds = %if.else117
  %bm_unique_verts121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12953
  %call122 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts121), !dbg !12953
  %84 = bitcast i8* %call122 to %struct.BMVert*, !dbg !12953
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12953
  store %struct.BMVert* %84, %struct.BMVert** %bm_vert, align 8, !dbg !12953
  %bm_unique_verts123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !12953
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts123), !dbg !12953
  br label %if.end128, !dbg !12953

if.else124:                                       ; preds = %if.else117
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12955
  %call125 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !12955
  %85 = bitcast i8* %call125 to %struct.BMVert*, !dbg !12955
  %bm_vert126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12955
  store %struct.BMVert* %85, %struct.BMVert** %bm_vert126, align 8, !dbg !12955
  %bm_other_verts127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !12955
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts127), !dbg !12955
  br label %if.end128

if.end128:                                        ; preds = %if.else124, %if.then120
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12957
  %86 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !12957
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %86, i32 0, i32 0, !dbg !12957
  %call130 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !12957
  %conv131 = zext i8 %call130 to i32, !dbg !12957
  %tobool132 = icmp ne i32 %conv131, 0, !dbg !12957
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !12952

if.then133:                                       ; preds = %if.end128
  br label %for.inc, !dbg !12957

if.end134:                                        ; preds = %if.end128
  %bm_vert135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12952
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert135, align 8, !dbg !12952
  %co136 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 2, !dbg !12952
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %co136, i64 0, i64 0, !dbg !12952
  %co138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !12952
  store float* %arraydecay137, float** %co138, align 8, !dbg !12952
  %bm_vert139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12952
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert139, align 8, !dbg !12952
  %no140 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 3, !dbg !12952
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %no140, i64 0, i64 0, !dbg !12952
  %fno142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !12952
  store float* %arraydecay141, float** %fno142, align 8, !dbg !12952
  %bm_vert143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !12952
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert143, align 8, !dbg !12952
  %head144 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 0, !dbg !12952
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head144, i32 0, i32 0, !dbg !12952
  %90 = load i8*, i8** %data, align 8, !dbg !12952
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !12952
  %91 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !12952
  %idx.ext = sext i32 %91 to i64, !dbg !12952
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %idx.ext, !dbg !12952
  %92 = bitcast i8* %add.ptr to float*, !dbg !12952
  %mask145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12952
  store float* %92, float** %mask145, align 8, !dbg !12952
  br label %if.end146

if.end146:                                        ; preds = %if.end134, %if.end116
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end84
  call void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %vd), !dbg !12959
  %co148 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12961
  %93 = load float*, float** %co148, align 8, !dbg !12961
  %call149 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %93), !dbg !12963
  %tobool150 = icmp ne i8 %call149, 0, !dbg !12963
  br i1 %tobool150, label %if.then151, label %if.end176, !dbg !12964

if.then151:                                       ; preds = %if.end147
  call void @llvm.dbg.declare(metadata float* %fade, metadata !12965, metadata !DIExpression()), !dbg !12967
  %94 = load float, float* %bstrength, align 4, !dbg !12968
  %95 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !12969
  %96 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !12970
  %co152 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !12971
  %97 = load float*, float** %co152, align 8, !dbg !12971
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !12972
  %98 = load float, float* %dist, align 8, !dbg !12972
  %no153 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 6, !dbg !12973
  %99 = load i16*, i16** %no153, align 8, !dbg !12973
  %mask154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12974
  %100 = load float*, float** %mask154, align 8, !dbg !12974
  %tobool155 = icmp ne float* %100, null, !dbg !12975
  br i1 %tobool155, label %cond.true156, label %cond.false158, !dbg !12975

cond.true156:                                     ; preds = %if.then151
  %mask157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !12976
  %101 = load float*, float** %mask157, align 8, !dbg !12976
  %102 = load float, float* %101, align 4, !dbg !12977
  br label %cond.end159, !dbg !12975

cond.false158:                                    ; preds = %if.then151
  br label %cond.end159, !dbg !12975

cond.end159:                                      ; preds = %cond.false158, %cond.true156
  %cond160 = phi float [ %102, %cond.true156 ], [ 0.000000e+00, %cond.false158 ], !dbg !12975
  %call161 = call float @tex_strength(%struct.SculptSession* %95, %struct.Brush* %96, float* %97, float %98, i16* %99, float* null, float %cond160), !dbg !12978
  %mul162 = fmul float %94, %call161, !dbg !12979
  store float %mul162, float* %fade, align 4, !dbg !12967
  %103 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !12980
  %i163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12981
  %104 = load i32, i32* %i163, align 4, !dbg !12981
  %idxprom164 = sext i32 %104 to i64, !dbg !12980
  %arrayidx165 = getelementptr inbounds [3 x float], [3 x float]* %103, i64 %idxprom164, !dbg !12980
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx165, i64 0, i64 0, !dbg !12980
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %cono, i64 0, i64 0, !dbg !12982
  %105 = load float, float* %fade, align 4, !dbg !12983
  call void @mul_v3_v3fl(float* %arraydecay166, float* %arraydecay167, float %105), !dbg !12984
  %mvert168 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12985
  %106 = load %struct.MVert*, %struct.MVert** %mvert168, align 8, !dbg !12985
  %tobool169 = icmp ne %struct.MVert* %106, null, !dbg !12987
  br i1 %tobool169, label %if.then170, label %if.end175, !dbg !12988

if.then170:                                       ; preds = %cond.end159
  %mvert171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !12989
  %107 = load %struct.MVert*, %struct.MVert** %mvert171, align 8, !dbg !12989
  %flag172 = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i32 0, i32 2, !dbg !12990
  %108 = load i8, i8* %flag172, align 2, !dbg !12991
  %conv173 = zext i8 %108 to i32, !dbg !12991
  %or = or i32 %conv173, 128, !dbg !12991
  %conv174 = trunc i32 %or to i8, !dbg !12991
  store i8 %conv174, i8* %flag172, align 2, !dbg !12991
  br label %if.end175, !dbg !12992

if.end175:                                        ; preds = %if.then170, %cond.end159
  br label %if.end176, !dbg !12993

if.end176:                                        ; preds = %if.end175, %if.end147
  br label %for.inc, !dbg !12994

for.inc:                                          ; preds = %if.end176, %if.then133, %if.then97, %if.then82
  %gx177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !12927
  %109 = load i32, i32* %gx177, align 4, !dbg !12927
  %inc = add nsw i32 %109, 1, !dbg !12927
  store i32 %inc, i32* %gx177, align 4, !dbg !12927
  %i178 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !12927
  %110 = load i32, i32* %i178, align 4, !dbg !12927
  %inc179 = add nsw i32 %110, 1, !dbg !12927
  store i32 %inc179, i32* %i178, align 4, !dbg !12927
  br label %for.cond43, !dbg !12927, !llvm.loop !12995

for.end:                                          ; preds = %for.cond43
  br label %for.inc180, !dbg !12997

for.inc180:                                       ; preds = %for.end
  %gy181 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !12922
  %111 = load i32, i32* %gy181, align 8, !dbg !12922
  %inc182 = add nsw i32 %111, 1, !dbg !12922
  store i32 %inc182, i32* %gy181, align 8, !dbg !12922
  br label %for.cond38, !dbg !12922, !llvm.loop !12998

for.end183:                                       ; preds = %for.cond38
  br label %for.inc184, !dbg !13000

for.inc184:                                       ; preds = %for.end183
  %g185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !12908
  %112 = load i32, i32* %g185, align 8, !dbg !12908
  %inc186 = add nsw i32 %112, 1, !dbg !12908
  store i32 %inc186, i32* %g185, align 8, !dbg !12908
  br label %for.cond19, !dbg !12908, !llvm.loop !13001

for.end187:                                       ; preds = %for.cond19
  br label %for.inc188, !dbg !13003

for.inc188:                                       ; preds = %for.end187
  %113 = load i32, i32* %n, align 4, !dbg !13004
  %inc189 = add nsw i32 %113, 1, !dbg !13004
  store i32 %inc189, i32* %n, align 4, !dbg !13004
  br label %for.cond, !dbg !13005, !llvm.loop !13006

for.end190:                                       ; preds = %for.cond
  ret void, !dbg !13008
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_layer_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !13009 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %offset = alloca [3 x float], align 4
  %lim = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %orig_data = alloca %struct.SculptOrigVertData, align 8
  %layer_disp = alloca float*, align 8
  %fade = alloca float, align 4
  %disp = alloca float*, align 8
  %val = alloca [3 x float], align 4
  %index = alloca i32, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !13010, metadata !DIExpression()), !dbg !13011
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13012, metadata !DIExpression()), !dbg !13013
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !13016, metadata !DIExpression()), !dbg !13017
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !13018, metadata !DIExpression()), !dbg !13019
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13020
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !13021
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !13021
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !13019
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !13022, metadata !DIExpression()), !dbg !13023
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13024
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !13025
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !13026
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !13023
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !13027, metadata !DIExpression()), !dbg !13028
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13029
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !13030
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !13030
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !13031
  %5 = load float, float* %bstrength1, align 8, !dbg !13031
  store float %5, float* %bstrength, align 4, !dbg !13028
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !13032, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.declare(metadata float* %lim, metadata !13034, metadata !DIExpression()), !dbg !13035
  %6 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13036
  %height = getelementptr inbounds %struct.Brush, %struct.Brush* %6, i32 0, i32 41, !dbg !13037
  %7 = load float, float* %height, align 8, !dbg !13037
  store float %7, float* %lim, align 4, !dbg !13035
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13038, metadata !DIExpression()), !dbg !13039
  %8 = load float, float* %bstrength, align 4, !dbg !13040
  %cmp = fcmp olt float %8, 0.000000e+00, !dbg !13042
  br i1 %cmp, label %if.then, label %if.end, !dbg !13043

if.then:                                          ; preds = %entry
  %9 = load float, float* %lim, align 4, !dbg !13044
  %fneg = fneg float %9, !dbg !13045
  store float %fneg, float* %lim, align 4, !dbg !13046
  br label %if.end, !dbg !13047

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !13048
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13049
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 28, !dbg !13050
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !13050
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 1, !dbg !13051
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !13049
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13052
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 28, !dbg !13053
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !13053
  %sculpt_normal_symm = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 35, !dbg !13054
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal_symm, i64 0, i64 0, !dbg !13052
  call void @mul_v3_v3v3(float* %arraydecay, float* %arraydecay3, float* %arraydecay5), !dbg !13055
  store i32 0, i32* %n, align 4, !dbg !13056
  br label %for.cond, !dbg !13058

for.cond:                                         ; preds = %for.inc222, %if.end
  %14 = load i32, i32* %n, align 4, !dbg !13059
  %15 = load i32, i32* %totnode.addr, align 4, !dbg !13061
  %cmp6 = icmp slt i32 %14, %15, !dbg !13062
  br i1 %cmp6, label %for.body, label %for.end224, !dbg !13063

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !13064, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !13067, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData* %orig_data, metadata !13069, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.declare(metadata float** %layer_disp, metadata !13071, metadata !DIExpression()), !dbg !13072
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13073
  %17 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13074
  %18 = load i32, i32* %n, align 4, !dbg !13075
  %idxprom = sext i32 %18 to i64, !dbg !13074
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %17, i64 %idxprom, !dbg !13074
  %19 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !13074
  call void @sculpt_orig_vert_data_init(%struct.SculptOrigVertData* %orig_data, %struct.Object* %16, %struct.PBVHNode* %19), !dbg !13076
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13077
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 15, !dbg !13079
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !13079
  %22 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13080
  %23 = load i32, i32* %n, align 4, !dbg !13081
  %idxprom7 = sext i32 %23 to i64, !dbg !13080
  %arrayidx8 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %22, i64 %idxprom7, !dbg !13080
  %24 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx8, align 8, !dbg !13080
  %call9 = call float* @BKE_pbvh_node_layer_disp_get(%struct.PBVH* %21, %struct.PBVHNode* %24), !dbg !13082
  store float* %call9, float** %layer_disp, align 8, !dbg !13083
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13084
  call void @sculpt_brush_test_init(%struct.SculptSession* %25, %struct.SculptBrushTest* %test), !dbg !13085
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13086
  %pbvh10 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 15, !dbg !13086
  %27 = load %struct.PBVH*, %struct.PBVH** %pbvh10, align 8, !dbg !13086
  %28 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13086
  %29 = load i32, i32* %n, align 4, !dbg !13086
  %idxprom11 = sext i32 %29 to i64, !dbg !13086
  %arrayidx12 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %28, i64 %idxprom11, !dbg !13086
  %30 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx12, align 8, !dbg !13086
  call void @pbvh_vertex_iter_init(%struct.PBVH* %27, %struct.PBVHNode* %30, %struct.PBVHVertexIter* %vd, i32 1), !dbg !13086
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13087
  store i32 0, i32* %i, align 4, !dbg !13087
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13087
  store i32 0, i32* %g, align 8, !dbg !13087
  br label %for.cond13, !dbg !13087

for.cond13:                                       ; preds = %for.inc218, %for.body
  %g14 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13089
  %31 = load i32, i32* %g14, align 8, !dbg !13089
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !13089
  %32 = load i32, i32* %totgrid, align 8, !dbg !13089
  %cmp15 = icmp slt i32 %31, %32, !dbg !13089
  br i1 %cmp15, label %for.body16, label %for.end221, !dbg !13087

for.body16:                                       ; preds = %for.cond13
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13091
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !13091
  %tobool = icmp ne %struct.CCGElem** %33, null, !dbg !13091
  br i1 %tobool, label %if.then17, label %if.else, !dbg !13094

if.then17:                                        ; preds = %for.body16
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13095
  %34 = load i32, i32* %gridsize, align 4, !dbg !13095
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13095
  store i32 %34, i32* %width, align 4, !dbg !13095
  %gridsize18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13095
  %35 = load i32, i32* %gridsize18, align 4, !dbg !13095
  %height19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13095
  store i32 %35, i32* %height19, align 8, !dbg !13095
  %grids20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13095
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids20, align 8, !dbg !13095
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13095
  %37 = load i32*, i32** %grid_indices, align 8, !dbg !13095
  %g21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13095
  %38 = load i32, i32* %g21, align 8, !dbg !13095
  %idxprom22 = sext i32 %38 to i64, !dbg !13095
  %arrayidx23 = getelementptr inbounds i32, i32* %37, i64 %idxprom22, !dbg !13095
  %39 = load i32, i32* %arrayidx23, align 4, !dbg !13095
  %idxprom24 = sext i32 %39 to i64, !dbg !13095
  %arrayidx25 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %36, i64 %idxprom24, !dbg !13095
  %40 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx25, align 8, !dbg !13095
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13095
  store %struct.CCGElem* %40, %struct.CCGElem** %grid, align 8, !dbg !13095
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !13097
  %41 = load i32**, i32*** %grid_hidden, align 8, !dbg !13097
  %grid_indices26 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13097
  %42 = load i32*, i32** %grid_indices26, align 8, !dbg !13097
  %g27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13097
  %43 = load i32, i32* %g27, align 8, !dbg !13097
  %idxprom28 = sext i32 %43 to i64, !dbg !13097
  %arrayidx29 = getelementptr inbounds i32, i32* %42, i64 %idxprom28, !dbg !13097
  %44 = load i32, i32* %arrayidx29, align 4, !dbg !13097
  %idxprom30 = sext i32 %44 to i64, !dbg !13097
  %arrayidx31 = getelementptr inbounds i32*, i32** %41, i64 %idxprom30, !dbg !13097
  %45 = load i32*, i32** %arrayidx31, align 8, !dbg !13097
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13097
  store i32* %45, i32** %gh, align 8, !dbg !13097
  br label %if.end34, !dbg !13095

if.else:                                          ; preds = %for.body16
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !13099
  %46 = load i32, i32* %totvert, align 8, !dbg !13099
  %width32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13099
  store i32 %46, i32* %width32, align 4, !dbg !13099
  %height33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13099
  store i32 1, i32* %height33, align 8, !dbg !13099
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then17
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13101
  store i32 0, i32* %gy, align 8, !dbg !13101
  br label %for.cond35, !dbg !13101

for.cond35:                                       ; preds = %for.inc214, %if.end34
  %gy36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13103
  %47 = load i32, i32* %gy36, align 8, !dbg !13103
  %height37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13103
  %48 = load i32, i32* %height37, align 8, !dbg !13103
  %cmp38 = icmp slt i32 %47, %48, !dbg !13103
  br i1 %cmp38, label %for.body39, label %for.end217, !dbg !13101

for.body39:                                       ; preds = %for.cond35
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13105
  store i32 0, i32* %gx, align 4, !dbg !13105
  br label %for.cond40, !dbg !13105

for.cond40:                                       ; preds = %for.inc, %for.body39
  %gx41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13108
  %49 = load i32, i32* %gx41, align 4, !dbg !13108
  %width42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13108
  %50 = load i32, i32* %width42, align 4, !dbg !13108
  %cmp43 = icmp slt i32 %49, %50, !dbg !13108
  br i1 %cmp43, label %for.body44, label %for.end, !dbg !13105

for.body44:                                       ; preds = %for.cond40
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13110
  %51 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !13110
  %tobool46 = icmp ne %struct.CCGElem* %51, null, !dbg !13110
  br i1 %tobool46, label %if.then47, label %if.else81, !dbg !13113

if.then47:                                        ; preds = %for.body44
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13114
  %52 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !13114
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13114
  %53 = load %struct.CCGElem*, %struct.CCGElem** %grid48, align 8, !dbg !13114
  %call49 = call float* @CCG_elem_co(%struct.CCGKey* %52, %struct.CCGElem* %53), !dbg !13114
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13114
  store float* %call49, float** %co, align 8, !dbg !13114
  %key50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13114
  %54 = load %struct.CCGKey*, %struct.CCGKey** %key50, align 8, !dbg !13114
  %grid51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13114
  %55 = load %struct.CCGElem*, %struct.CCGElem** %grid51, align 8, !dbg !13114
  %call52 = call float* @CCG_elem_no(%struct.CCGKey* %54, %struct.CCGElem* %55), !dbg !13114
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13114
  store float* %call52, float** %fno, align 8, !dbg !13114
  %key53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13114
  %56 = load %struct.CCGKey*, %struct.CCGKey** %key53, align 8, !dbg !13114
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %56, i32 0, i32 9, !dbg !13114
  %57 = load i32, i32* %has_mask, align 4, !dbg !13114
  %tobool54 = icmp ne i32 %57, 0, !dbg !13114
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !13114

cond.true:                                        ; preds = %if.then47
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13114
  %58 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !13114
  %grid56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13114
  %59 = load %struct.CCGElem*, %struct.CCGElem** %grid56, align 8, !dbg !13114
  %call57 = call float* @CCG_elem_mask(%struct.CCGKey* %58, %struct.CCGElem* %59), !dbg !13114
  br label %cond.end, !dbg !13114

cond.false:                                       ; preds = %if.then47
  br label %cond.end, !dbg !13114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call57, %cond.true ], [ null, %cond.false ], !dbg !13114
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13114
  store float* %cond, float** %mask, align 8, !dbg !13114
  %key58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13114
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key58, align 8, !dbg !13114
  %grid59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13114
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid59, align 8, !dbg !13114
  %call60 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %60, %struct.CCGElem* %61), !dbg !13114
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13114
  store %struct.CCGElem* %call60, %struct.CCGElem** %grid61, align 8, !dbg !13114
  %gh62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13116
  %62 = load i32*, i32** %gh62, align 8, !dbg !13116
  %tobool63 = icmp ne i32* %62, null, !dbg !13116
  br i1 %tobool63, label %if.then64, label %if.end80, !dbg !13114

if.then64:                                        ; preds = %cond.end
  %gh65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13118
  %63 = load i32*, i32** %gh65, align 8, !dbg !13118
  %gy66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13118
  %64 = load i32, i32* %gy66, align 8, !dbg !13118
  %gridsize67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13118
  %65 = load i32, i32* %gridsize67, align 4, !dbg !13118
  %mul = mul nsw i32 %64, %65, !dbg !13118
  %gx68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13118
  %66 = load i32, i32* %gx68, align 4, !dbg !13118
  %add = add nsw i32 %mul, %66, !dbg !13118
  %shr = ashr i32 %add, 5, !dbg !13118
  %idxprom69 = sext i32 %shr to i64, !dbg !13118
  %arrayidx70 = getelementptr inbounds i32, i32* %63, i64 %idxprom69, !dbg !13118
  %67 = load i32, i32* %arrayidx70, align 4, !dbg !13118
  %gy71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13118
  %68 = load i32, i32* %gy71, align 8, !dbg !13118
  %gridsize72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13118
  %69 = load i32, i32* %gridsize72, align 4, !dbg !13118
  %mul73 = mul nsw i32 %68, %69, !dbg !13118
  %gx74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13118
  %70 = load i32, i32* %gx74, align 4, !dbg !13118
  %add75 = add nsw i32 %mul73, %70, !dbg !13118
  %and = and i32 %add75, 31, !dbg !13118
  %shl = shl i32 1, %and, !dbg !13118
  %and76 = and i32 %67, %shl, !dbg !13118
  %tobool77 = icmp ne i32 %and76, 0, !dbg !13118
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13121

if.then78:                                        ; preds = %if.then64
  br label %for.inc, !dbg !13118

if.end79:                                         ; preds = %if.then64
  br label %if.end80, !dbg !13121

if.end80:                                         ; preds = %if.end79, %cond.end
  br label %if.end143, !dbg !13114

if.else81:                                        ; preds = %for.body44
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13122
  %71 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !13122
  %tobool82 = icmp ne %struct.MVert* %71, null, !dbg !13122
  br i1 %tobool82, label %if.then83, label %if.else113, !dbg !13110

if.then83:                                        ; preds = %if.else81
  %mverts84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13124
  %72 = load %struct.MVert*, %struct.MVert** %mverts84, align 8, !dbg !13124
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13124
  %73 = load i32*, i32** %vert_indices, align 8, !dbg !13124
  %gx85 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13124
  %74 = load i32, i32* %gx85, align 4, !dbg !13124
  %idxprom86 = sext i32 %74 to i64, !dbg !13124
  %arrayidx87 = getelementptr inbounds i32, i32* %73, i64 %idxprom86, !dbg !13124
  %75 = load i32, i32* %arrayidx87, align 4, !dbg !13124
  %idxprom88 = sext i32 %75 to i64, !dbg !13124
  %arrayidx89 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom88, !dbg !13124
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13124
  store %struct.MVert* %arrayidx89, %struct.MVert** %mvert, align 8, !dbg !13124
  %mvert90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13126
  %76 = load %struct.MVert*, %struct.MVert** %mvert90, align 8, !dbg !13126
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 0, i32 2, !dbg !13126
  %77 = load i8, i8* %flag, align 2, !dbg !13126
  %conv = zext i8 %77 to i32, !dbg !13126
  %and91 = and i32 %conv, 16, !dbg !13126
  %tobool92 = icmp ne i32 %and91, 0, !dbg !13126
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !13124

if.then93:                                        ; preds = %if.then83
  br label %for.inc, !dbg !13126

if.end94:                                         ; preds = %if.then83
  %mvert95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13124
  %78 = load %struct.MVert*, %struct.MVert** %mvert95, align 8, !dbg !13124
  %co96 = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i32 0, i32 0, !dbg !13124
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %co96, i64 0, i64 0, !dbg !13124
  %co98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13124
  store float* %arraydecay97, float** %co98, align 8, !dbg !13124
  %mvert99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13124
  %79 = load %struct.MVert*, %struct.MVert** %mvert99, align 8, !dbg !13124
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 1, !dbg !13124
  %arraydecay100 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !13124
  %no101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13124
  store i16* %arraydecay100, i16** %no101, align 8, !dbg !13124
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13128
  %80 = load float*, float** %vmask, align 8, !dbg !13128
  %tobool102 = icmp ne float* %80, null, !dbg !13128
  br i1 %tobool102, label %if.then103, label %if.end112, !dbg !13124

if.then103:                                       ; preds = %if.end94
  %vmask104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13128
  %81 = load float*, float** %vmask104, align 8, !dbg !13128
  %vert_indices105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13128
  %82 = load i32*, i32** %vert_indices105, align 8, !dbg !13128
  %gx106 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13128
  %83 = load i32, i32* %gx106, align 4, !dbg !13128
  %idxprom107 = sext i32 %83 to i64, !dbg !13128
  %arrayidx108 = getelementptr inbounds i32, i32* %82, i64 %idxprom107, !dbg !13128
  %84 = load i32, i32* %arrayidx108, align 4, !dbg !13128
  %idxprom109 = sext i32 %84 to i64, !dbg !13128
  %arrayidx110 = getelementptr inbounds float, float* %81, i64 %idxprom109, !dbg !13128
  %mask111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13128
  store float* %arrayidx110, float** %mask111, align 8, !dbg !13128
  br label %if.end112, !dbg !13128

if.end112:                                        ; preds = %if.then103, %if.end94
  br label %if.end142, !dbg !13124

if.else113:                                       ; preds = %if.else81
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13130
  %call114 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !13130
  %tobool115 = icmp ne i8 %call114, 0, !dbg !13130
  br i1 %tobool115, label %if.else120, label %if.then116, !dbg !13133

if.then116:                                       ; preds = %if.else113
  %bm_unique_verts117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13134
  %call118 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts117), !dbg !13134
  %85 = bitcast i8* %call118 to %struct.BMVert*, !dbg !13134
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13134
  store %struct.BMVert* %85, %struct.BMVert** %bm_vert, align 8, !dbg !13134
  %bm_unique_verts119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13134
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts119), !dbg !13134
  br label %if.end124, !dbg !13134

if.else120:                                       ; preds = %if.else113
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13136
  %call121 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !13136
  %86 = bitcast i8* %call121 to %struct.BMVert*, !dbg !13136
  %bm_vert122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13136
  store %struct.BMVert* %86, %struct.BMVert** %bm_vert122, align 8, !dbg !13136
  %bm_other_verts123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13136
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts123), !dbg !13136
  br label %if.end124

if.end124:                                        ; preds = %if.else120, %if.then116
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13138
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !13138
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !13138
  %call126 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !13138
  %conv127 = zext i8 %call126 to i32, !dbg !13138
  %tobool128 = icmp ne i32 %conv127, 0, !dbg !13138
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !13133

if.then129:                                       ; preds = %if.end124
  br label %for.inc, !dbg !13138

if.end130:                                        ; preds = %if.end124
  %bm_vert131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13133
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert131, align 8, !dbg !13133
  %co132 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 2, !dbg !13133
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co132, i64 0, i64 0, !dbg !13133
  %co134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13133
  store float* %arraydecay133, float** %co134, align 8, !dbg !13133
  %bm_vert135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13133
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert135, align 8, !dbg !13133
  %no136 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 3, !dbg !13133
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %no136, i64 0, i64 0, !dbg !13133
  %fno138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13133
  store float* %arraydecay137, float** %fno138, align 8, !dbg !13133
  %bm_vert139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13133
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert139, align 8, !dbg !13133
  %head140 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !13133
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head140, i32 0, i32 0, !dbg !13133
  %91 = load i8*, i8** %data, align 8, !dbg !13133
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !13133
  %92 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !13133
  %idx.ext = sext i32 %92 to i64, !dbg !13133
  %add.ptr = getelementptr inbounds i8, i8* %91, i64 %idx.ext, !dbg !13133
  %93 = bitcast i8* %add.ptr to float*, !dbg !13133
  %mask141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13133
  store float* %93, float** %mask141, align 8, !dbg !13133
  br label %if.end142

if.end142:                                        ; preds = %if.end130, %if.end112
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.end80
  call void @sculpt_orig_vert_data_update(%struct.SculptOrigVertData* %orig_data, %struct.PBVHVertexIter* %vd), !dbg !13140
  %co144 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !13142
  %94 = load float*, float** %co144, align 8, !dbg !13142
  %call145 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %94), !dbg !13144
  %tobool146 = icmp ne i8 %call145, 0, !dbg !13144
  br i1 %tobool146, label %if.then147, label %if.end210, !dbg !13145

if.then147:                                       ; preds = %if.end143
  call void @llvm.dbg.declare(metadata float* %fade, metadata !13146, metadata !DIExpression()), !dbg !13148
  %95 = load float, float* %bstrength, align 4, !dbg !13149
  %96 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13150
  %97 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13151
  %co148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13152
  %98 = load float*, float** %co148, align 8, !dbg !13152
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !13153
  %99 = load float, float* %dist, align 8, !dbg !13153
  %no149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13154
  %100 = load i16*, i16** %no149, align 8, !dbg !13154
  %fno150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13155
  %101 = load float*, float** %fno150, align 8, !dbg !13155
  %mask151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13156
  %102 = load float*, float** %mask151, align 8, !dbg !13156
  %tobool152 = icmp ne float* %102, null, !dbg !13157
  br i1 %tobool152, label %cond.true153, label %cond.false155, !dbg !13157

cond.true153:                                     ; preds = %if.then147
  %mask154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13158
  %103 = load float*, float** %mask154, align 8, !dbg !13158
  %104 = load float, float* %103, align 4, !dbg !13159
  br label %cond.end156, !dbg !13157

cond.false155:                                    ; preds = %if.then147
  br label %cond.end156, !dbg !13157

cond.end156:                                      ; preds = %cond.false155, %cond.true153
  %cond157 = phi float [ %104, %cond.true153 ], [ 0.000000e+00, %cond.false155 ], !dbg !13157
  %call158 = call float @tex_strength(%struct.SculptSession* %96, %struct.Brush* %97, float* %98, float %99, i16* %100, float* %101, float %cond157), !dbg !13160
  %mul159 = fmul float %95, %call158, !dbg !13161
  store float %mul159, float* %fade, align 4, !dbg !13148
  call void @llvm.dbg.declare(metadata float** %disp, metadata !13162, metadata !DIExpression()), !dbg !13163
  %105 = load float*, float** %layer_disp, align 8, !dbg !13164
  %i160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13165
  %106 = load i32, i32* %i160, align 4, !dbg !13165
  %idxprom161 = sext i32 %106 to i64, !dbg !13164
  %arrayidx162 = getelementptr inbounds float, float* %105, i64 %idxprom161, !dbg !13164
  store float* %arrayidx162, float** %disp, align 8, !dbg !13163
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !13166, metadata !DIExpression()), !dbg !13167
  %107 = load float, float* %fade, align 4, !dbg !13168
  %108 = load float*, float** %disp, align 8, !dbg !13169
  %109 = load float, float* %108, align 4, !dbg !13170
  %add163 = fadd float %109, %107, !dbg !13170
  store float %add163, float* %108, align 4, !dbg !13170
  %110 = load float, float* %lim, align 4, !dbg !13171
  %cmp164 = fcmp olt float %110, 0.000000e+00, !dbg !13173
  br i1 %cmp164, label %land.lhs.true, label %lor.lhs.false, !dbg !13174

land.lhs.true:                                    ; preds = %cond.end156
  %111 = load float*, float** %disp, align 8, !dbg !13175
  %112 = load float, float* %111, align 4, !dbg !13176
  %113 = load float, float* %lim, align 4, !dbg !13177
  %cmp166 = fcmp olt float %112, %113, !dbg !13178
  br i1 %cmp166, label %if.then173, label %lor.lhs.false, !dbg !13179

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.end156
  %114 = load float, float* %lim, align 4, !dbg !13180
  %cmp168 = fcmp oge float %114, 0.000000e+00, !dbg !13181
  br i1 %cmp168, label %land.lhs.true170, label %if.end174, !dbg !13182

land.lhs.true170:                                 ; preds = %lor.lhs.false
  %115 = load float*, float** %disp, align 8, !dbg !13183
  %116 = load float, float* %115, align 4, !dbg !13184
  %117 = load float, float* %lim, align 4, !dbg !13185
  %cmp171 = fcmp ogt float %116, %117, !dbg !13186
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !13187

if.then173:                                       ; preds = %land.lhs.true170, %land.lhs.true
  %118 = load float, float* %lim, align 4, !dbg !13188
  %119 = load float*, float** %disp, align 8, !dbg !13189
  store float %118, float* %119, align 4, !dbg !13190
  br label %if.end174, !dbg !13191

if.end174:                                        ; preds = %if.then173, %land.lhs.true170, %lor.lhs.false
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13192
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !13193
  %120 = load float*, float** %disp, align 8, !dbg !13194
  %121 = load float, float* %120, align 4, !dbg !13195
  call void @mul_v3_v3fl(float* %arraydecay175, float* %arraydecay176, float %121), !dbg !13196
  %122 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13197
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %122, i32 0, i32 0, !dbg !13199
  %123 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !13199
  %tobool177 = icmp ne %struct.MultiresModifierData* %123, null, !dbg !13197
  br i1 %tobool177, label %if.else196, label %land.lhs.true178, !dbg !13200

land.lhs.true178:                                 ; preds = %if.end174
  %124 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13201
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %124, i32 0, i32 10, !dbg !13202
  %125 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13202
  %tobool179 = icmp ne %struct.BMesh* %125, null, !dbg !13201
  br i1 %tobool179, label %if.else196, label %land.lhs.true180, !dbg !13203

land.lhs.true180:                                 ; preds = %land.lhs.true178
  %126 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13204
  %layer_co = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %126, i32 0, i32 26, !dbg !13205
  %127 = load [3 x float]*, [3 x float]** %layer_co, align 8, !dbg !13205
  %tobool181 = icmp ne [3 x float]* %127, null, !dbg !13204
  br i1 %tobool181, label %land.lhs.true182, label %if.else196, !dbg !13206

land.lhs.true182:                                 ; preds = %land.lhs.true180
  %128 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13207
  %flag183 = getelementptr inbounds %struct.Brush, %struct.Brush* %128, i32 0, i32 16, !dbg !13208
  %129 = load i32, i32* %flag183, align 8, !dbg !13208
  %and184 = and i32 %129, 4096, !dbg !13209
  %tobool185 = icmp ne i32 %and184, 0, !dbg !13209
  br i1 %tobool185, label %if.then186, label %if.else196, !dbg !13210

if.then186:                                       ; preds = %land.lhs.true182
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13211, metadata !DIExpression()), !dbg !13213
  %vert_indices187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13214
  %130 = load i32*, i32** %vert_indices187, align 8, !dbg !13214
  %i188 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13215
  %131 = load i32, i32* %i188, align 4, !dbg !13215
  %idxprom189 = sext i32 %131 to i64, !dbg !13216
  %arrayidx190 = getelementptr inbounds i32, i32* %130, i64 %idxprom189, !dbg !13216
  %132 = load i32, i32* %arrayidx190, align 4, !dbg !13216
  store i32 %132, i32* %index, align 4, !dbg !13213
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13217
  %133 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13218
  %layer_co192 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %133, i32 0, i32 26, !dbg !13219
  %134 = load [3 x float]*, [3 x float]** %layer_co192, align 8, !dbg !13219
  %135 = load i32, i32* %index, align 4, !dbg !13220
  %idxprom193 = sext i32 %135 to i64, !dbg !13218
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %134, i64 %idxprom193, !dbg !13218
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx194, i64 0, i64 0, !dbg !13218
  call void @add_v3_v3(float* %arraydecay191, float* %arraydecay195), !dbg !13221
  br label %if.end199, !dbg !13222

if.else196:                                       ; preds = %land.lhs.true182, %land.lhs.true180, %land.lhs.true178, %if.end174
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13223
  %co198 = getelementptr inbounds %struct.SculptOrigVertData, %struct.SculptOrigVertData* %orig_data, i32 0, i32 5, !dbg !13225
  %136 = load float*, float** %co198, align 8, !dbg !13225
  call void @add_v3_v3(float* %arraydecay197, float* %136), !dbg !13226
  br label %if.end199

if.end199:                                        ; preds = %if.else196, %if.then186
  %137 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13227
  %138 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13228
  %co200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13229
  %139 = load float*, float** %co200, align 8, !dbg !13229
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13230
  call void @sculpt_clip(%struct.Sculpt* %137, %struct.SculptSession* %138, float* %139, float* %arraydecay201), !dbg !13231
  %mvert202 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13232
  %140 = load %struct.MVert*, %struct.MVert** %mvert202, align 8, !dbg !13232
  %tobool203 = icmp ne %struct.MVert* %140, null, !dbg !13234
  br i1 %tobool203, label %if.then204, label %if.end209, !dbg !13235

if.then204:                                       ; preds = %if.end199
  %mvert205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13236
  %141 = load %struct.MVert*, %struct.MVert** %mvert205, align 8, !dbg !13236
  %flag206 = getelementptr inbounds %struct.MVert, %struct.MVert* %141, i32 0, i32 2, !dbg !13237
  %142 = load i8, i8* %flag206, align 2, !dbg !13238
  %conv207 = zext i8 %142 to i32, !dbg !13238
  %or = or i32 %conv207, 128, !dbg !13238
  %conv208 = trunc i32 %or to i8, !dbg !13238
  store i8 %conv208, i8* %flag206, align 2, !dbg !13238
  br label %if.end209, !dbg !13239

if.end209:                                        ; preds = %if.then204, %if.end199
  br label %if.end210, !dbg !13240

if.end210:                                        ; preds = %if.end209, %if.end143
  br label %for.inc, !dbg !13241

for.inc:                                          ; preds = %if.end210, %if.then129, %if.then93, %if.then78
  %gx211 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13108
  %143 = load i32, i32* %gx211, align 4, !dbg !13108
  %inc = add nsw i32 %143, 1, !dbg !13108
  store i32 %inc, i32* %gx211, align 4, !dbg !13108
  %i212 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13108
  %144 = load i32, i32* %i212, align 4, !dbg !13108
  %inc213 = add nsw i32 %144, 1, !dbg !13108
  store i32 %inc213, i32* %i212, align 4, !dbg !13108
  br label %for.cond40, !dbg !13108, !llvm.loop !13242

for.end:                                          ; preds = %for.cond40
  br label %for.inc214, !dbg !13244

for.inc214:                                       ; preds = %for.end
  %gy215 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13103
  %145 = load i32, i32* %gy215, align 8, !dbg !13103
  %inc216 = add nsw i32 %145, 1, !dbg !13103
  store i32 %inc216, i32* %gy215, align 8, !dbg !13103
  br label %for.cond35, !dbg !13103, !llvm.loop !13245

for.end217:                                       ; preds = %for.cond35
  br label %for.inc218, !dbg !13247

for.inc218:                                       ; preds = %for.end217
  %g219 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13089
  %146 = load i32, i32* %g219, align 8, !dbg !13089
  %inc220 = add nsw i32 %146, 1, !dbg !13089
  store i32 %inc220, i32* %g219, align 8, !dbg !13089
  br label %for.cond13, !dbg !13089, !llvm.loop !13248

for.end221:                                       ; preds = %for.cond13
  br label %for.inc222, !dbg !13250

for.inc222:                                       ; preds = %for.end221
  %147 = load i32, i32* %n, align 4, !dbg !13251
  %inc223 = add nsw i32 %147, 1, !dbg !13251
  store i32 %inc223, i32* %n, align 4, !dbg !13251
  br label %for.cond, !dbg !13252, !llvm.loop !13253

for.end224:                                       ; preds = %for.cond
  ret void, !dbg !13255
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_flatten_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !13256 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %radius = alloca float, align 4
  %an = alloca [3 x float], align 4
  %fc = alloca [3 x float], align 4
  %offset = alloca float, align 4
  %displace = alloca float, align 4
  %n = alloca i32, align 4
  %temp = alloca [3 x float], align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %intr = alloca [3 x float], align 4
  %val = alloca [3 x float], align 4
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !13257, metadata !DIExpression()), !dbg !13258
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13259, metadata !DIExpression()), !dbg !13260
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !13261, metadata !DIExpression()), !dbg !13262
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !13263, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !13265, metadata !DIExpression()), !dbg !13266
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13267
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !13268
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !13268
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !13266
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !13269, metadata !DIExpression()), !dbg !13270
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13271
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !13272
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !13273
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !13270
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !13274, metadata !DIExpression()), !dbg !13275
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13276
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !13277
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !13277
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !13278
  %5 = load float, float* %bstrength1, align 8, !dbg !13278
  store float %5, float* %bstrength, align 4, !dbg !13275
  call void @llvm.dbg.declare(metadata float* %radius, metadata !13279, metadata !DIExpression()), !dbg !13280
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13281
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !13282
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !13282
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 11, !dbg !13283
  %8 = load float, float* %radius3, align 8, !dbg !13283
  store float %8, float* %radius, align 4, !dbg !13280
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !13284, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.declare(metadata [3 x float]* %fc, metadata !13286, metadata !DIExpression()), !dbg !13287
  call void @llvm.dbg.declare(metadata float* %offset, metadata !13288, metadata !DIExpression()), !dbg !13289
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13290
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13291
  %call4 = call float @get_offset(%struct.Sculpt* %9, %struct.SculptSession* %10), !dbg !13292
  store float %call4, float* %offset, align 4, !dbg !13289
  call void @llvm.dbg.declare(metadata float* %displace, metadata !13293, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13295, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !13297, metadata !DIExpression()), !dbg !13298
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13299
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13300
  %13 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13301
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !13302
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13303
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13304
  call void @calc_sculpt_plane(%struct.Sculpt* %11, %struct.Object* %12, %struct.PBVHNode** %13, i32 %14, float* %arraydecay, float* %arraydecay5), !dbg !13305
  %15 = load float, float* %radius, align 4, !dbg !13306
  %16 = load float, float* %offset, align 4, !dbg !13307
  %mul = fmul float %15, %16, !dbg !13308
  store float %mul, float* %displace, align 4, !dbg !13309
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13310
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13311
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13312
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !13313
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !13313
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 1, !dbg !13314
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !13312
  call void @mul_v3_v3v3(float* %arraydecay6, float* %arraydecay7, float* %arraydecay9), !dbg !13315
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13316
  %19 = load float, float* %displace, align 4, !dbg !13317
  call void @mul_v3_fl(float* %arraydecay10, float %19), !dbg !13318
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13319
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13320
  call void @add_v3_v3(float* %arraydecay11, float* %arraydecay12), !dbg !13321
  store i32 0, i32* %n, align 4, !dbg !13322
  br label %for.cond, !dbg !13324

for.cond:                                         ; preds = %for.inc202, %entry
  %20 = load i32, i32* %n, align 4, !dbg !13325
  %21 = load i32, i32* %totnode.addr, align 4, !dbg !13327
  %cmp = icmp slt i32 %20, %21, !dbg !13328
  br i1 %cmp, label %for.body, label %for.end204, !dbg !13329

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !13330, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !13333, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !13335, metadata !DIExpression()), !dbg !13336
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13337
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 15, !dbg !13338
  %23 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !13338
  %24 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13339
  %25 = load i32, i32* %n, align 4, !dbg !13340
  %idxprom = sext i32 %25 to i64, !dbg !13339
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %24, i64 %idxprom, !dbg !13339
  %26 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !13339
  %call13 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %23, %struct.PBVHNode* %26), !dbg !13341
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call13, i32 0, i32 0, !dbg !13342
  %27 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !13342
  store [3 x float]* %27, [3 x float]** %proxy, align 8, !dbg !13343
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13344
  call void @sculpt_brush_test_init(%struct.SculptSession* %28, %struct.SculptBrushTest* %test), !dbg !13345
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13346
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 15, !dbg !13346
  %30 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !13346
  %31 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13346
  %32 = load i32, i32* %n, align 4, !dbg !13346
  %idxprom15 = sext i32 %32 to i64, !dbg !13346
  %arrayidx16 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %31, i64 %idxprom15, !dbg !13346
  %33 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx16, align 8, !dbg !13346
  call void @pbvh_vertex_iter_init(%struct.PBVH* %30, %struct.PBVHNode* %33, %struct.PBVHVertexIter* %vd, i32 1), !dbg !13346
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13347
  store i32 0, i32* %i, align 4, !dbg !13347
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13347
  store i32 0, i32* %g, align 8, !dbg !13347
  br label %for.cond17, !dbg !13347

for.cond17:                                       ; preds = %for.inc198, %for.body
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13349
  %34 = load i32, i32* %g18, align 8, !dbg !13349
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !13349
  %35 = load i32, i32* %totgrid, align 8, !dbg !13349
  %cmp19 = icmp slt i32 %34, %35, !dbg !13349
  br i1 %cmp19, label %for.body20, label %for.end201, !dbg !13347

for.body20:                                       ; preds = %for.cond17
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13351
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !13351
  %tobool = icmp ne %struct.CCGElem** %36, null, !dbg !13351
  br i1 %tobool, label %if.then, label %if.else, !dbg !13354

if.then:                                          ; preds = %for.body20
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13355
  %37 = load i32, i32* %gridsize, align 4, !dbg !13355
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13355
  store i32 %37, i32* %width, align 4, !dbg !13355
  %gridsize21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13355
  %38 = load i32, i32* %gridsize21, align 4, !dbg !13355
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13355
  store i32 %38, i32* %height, align 8, !dbg !13355
  %grids22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13355
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids22, align 8, !dbg !13355
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13355
  %40 = load i32*, i32** %grid_indices, align 8, !dbg !13355
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13355
  %41 = load i32, i32* %g23, align 8, !dbg !13355
  %idxprom24 = sext i32 %41 to i64, !dbg !13355
  %arrayidx25 = getelementptr inbounds i32, i32* %40, i64 %idxprom24, !dbg !13355
  %42 = load i32, i32* %arrayidx25, align 4, !dbg !13355
  %idxprom26 = sext i32 %42 to i64, !dbg !13355
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %39, i64 %idxprom26, !dbg !13355
  %43 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !13355
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13355
  store %struct.CCGElem* %43, %struct.CCGElem** %grid, align 8, !dbg !13355
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !13357
  %44 = load i32**, i32*** %grid_hidden, align 8, !dbg !13357
  %grid_indices28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13357
  %45 = load i32*, i32** %grid_indices28, align 8, !dbg !13357
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13357
  %46 = load i32, i32* %g29, align 8, !dbg !13357
  %idxprom30 = sext i32 %46 to i64, !dbg !13357
  %arrayidx31 = getelementptr inbounds i32, i32* %45, i64 %idxprom30, !dbg !13357
  %47 = load i32, i32* %arrayidx31, align 4, !dbg !13357
  %idxprom32 = sext i32 %47 to i64, !dbg !13357
  %arrayidx33 = getelementptr inbounds i32*, i32** %44, i64 %idxprom32, !dbg !13357
  %48 = load i32*, i32** %arrayidx33, align 8, !dbg !13357
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13357
  store i32* %48, i32** %gh, align 8, !dbg !13357
  br label %if.end, !dbg !13355

if.else:                                          ; preds = %for.body20
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !13359
  %49 = load i32, i32* %totvert, align 8, !dbg !13359
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13359
  store i32 %49, i32* %width34, align 4, !dbg !13359
  %height35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13359
  store i32 1, i32* %height35, align 8, !dbg !13359
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13361
  store i32 0, i32* %gy, align 8, !dbg !13361
  br label %for.cond36, !dbg !13361

for.cond36:                                       ; preds = %for.inc194, %if.end
  %gy37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13363
  %50 = load i32, i32* %gy37, align 8, !dbg !13363
  %height38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13363
  %51 = load i32, i32* %height38, align 8, !dbg !13363
  %cmp39 = icmp slt i32 %50, %51, !dbg !13363
  br i1 %cmp39, label %for.body40, label %for.end197, !dbg !13361

for.body40:                                       ; preds = %for.cond36
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13365
  store i32 0, i32* %gx, align 4, !dbg !13365
  br label %for.cond41, !dbg !13365

for.cond41:                                       ; preds = %for.inc, %for.body40
  %gx42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13368
  %52 = load i32, i32* %gx42, align 4, !dbg !13368
  %width43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13368
  %53 = load i32, i32* %width43, align 4, !dbg !13368
  %cmp44 = icmp slt i32 %52, %53, !dbg !13368
  br i1 %cmp44, label %for.body45, label %for.end, !dbg !13365

for.body45:                                       ; preds = %for.cond41
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13370
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !13370
  %tobool47 = icmp ne %struct.CCGElem* %54, null, !dbg !13370
  br i1 %tobool47, label %if.then48, label %if.else84, !dbg !13373

if.then48:                                        ; preds = %for.body45
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13374
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !13374
  %grid49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13374
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid49, align 8, !dbg !13374
  %call50 = call float* @CCG_elem_co(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !13374
  %co51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13374
  store float* %call50, float** %co51, align 8, !dbg !13374
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13374
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !13374
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13374
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !13374
  %call54 = call float* @CCG_elem_no(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !13374
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13374
  store float* %call54, float** %fno, align 8, !dbg !13374
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13374
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !13374
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %59, i32 0, i32 9, !dbg !13374
  %60 = load i32, i32* %has_mask, align 4, !dbg !13374
  %tobool56 = icmp ne i32 %60, 0, !dbg !13374
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !13374

cond.true:                                        ; preds = %if.then48
  %key57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13374
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key57, align 8, !dbg !13374
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13374
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !13374
  %call59 = call float* @CCG_elem_mask(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !13374
  br label %cond.end, !dbg !13374

cond.false:                                       ; preds = %if.then48
  br label %cond.end, !dbg !13374

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call59, %cond.true ], [ null, %cond.false ], !dbg !13374
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13374
  store float* %cond, float** %mask, align 8, !dbg !13374
  %key60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13374
  %63 = load %struct.CCGKey*, %struct.CCGKey** %key60, align 8, !dbg !13374
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13374
  %64 = load %struct.CCGElem*, %struct.CCGElem** %grid61, align 8, !dbg !13374
  %call62 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %63, %struct.CCGElem* %64), !dbg !13374
  %grid63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13374
  store %struct.CCGElem* %call62, %struct.CCGElem** %grid63, align 8, !dbg !13374
  %gh64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13376
  %65 = load i32*, i32** %gh64, align 8, !dbg !13376
  %tobool65 = icmp ne i32* %65, null, !dbg !13376
  br i1 %tobool65, label %if.then66, label %if.end83, !dbg !13374

if.then66:                                        ; preds = %cond.end
  %gh67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13378
  %66 = load i32*, i32** %gh67, align 8, !dbg !13378
  %gy68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13378
  %67 = load i32, i32* %gy68, align 8, !dbg !13378
  %gridsize69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13378
  %68 = load i32, i32* %gridsize69, align 4, !dbg !13378
  %mul70 = mul nsw i32 %67, %68, !dbg !13378
  %gx71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13378
  %69 = load i32, i32* %gx71, align 4, !dbg !13378
  %add = add nsw i32 %mul70, %69, !dbg !13378
  %shr = ashr i32 %add, 5, !dbg !13378
  %idxprom72 = sext i32 %shr to i64, !dbg !13378
  %arrayidx73 = getelementptr inbounds i32, i32* %66, i64 %idxprom72, !dbg !13378
  %70 = load i32, i32* %arrayidx73, align 4, !dbg !13378
  %gy74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13378
  %71 = load i32, i32* %gy74, align 8, !dbg !13378
  %gridsize75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13378
  %72 = load i32, i32* %gridsize75, align 4, !dbg !13378
  %mul76 = mul nsw i32 %71, %72, !dbg !13378
  %gx77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13378
  %73 = load i32, i32* %gx77, align 4, !dbg !13378
  %add78 = add nsw i32 %mul76, %73, !dbg !13378
  %and = and i32 %add78, 31, !dbg !13378
  %shl = shl i32 1, %and, !dbg !13378
  %and79 = and i32 %70, %shl, !dbg !13378
  %tobool80 = icmp ne i32 %and79, 0, !dbg !13378
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !13381

if.then81:                                        ; preds = %if.then66
  br label %for.inc, !dbg !13378

if.end82:                                         ; preds = %if.then66
  br label %if.end83, !dbg !13381

if.end83:                                         ; preds = %if.end82, %cond.end
  br label %if.end146, !dbg !13374

if.else84:                                        ; preds = %for.body45
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13382
  %74 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !13382
  %tobool85 = icmp ne %struct.MVert* %74, null, !dbg !13382
  br i1 %tobool85, label %if.then86, label %if.else116, !dbg !13370

if.then86:                                        ; preds = %if.else84
  %mverts87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13384
  %75 = load %struct.MVert*, %struct.MVert** %mverts87, align 8, !dbg !13384
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13384
  %76 = load i32*, i32** %vert_indices, align 8, !dbg !13384
  %gx88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13384
  %77 = load i32, i32* %gx88, align 4, !dbg !13384
  %idxprom89 = sext i32 %77 to i64, !dbg !13384
  %arrayidx90 = getelementptr inbounds i32, i32* %76, i64 %idxprom89, !dbg !13384
  %78 = load i32, i32* %arrayidx90, align 4, !dbg !13384
  %idxprom91 = sext i32 %78 to i64, !dbg !13384
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom91, !dbg !13384
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13384
  store %struct.MVert* %arrayidx92, %struct.MVert** %mvert, align 8, !dbg !13384
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13386
  %79 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !13386
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 2, !dbg !13386
  %80 = load i8, i8* %flag, align 2, !dbg !13386
  %conv = zext i8 %80 to i32, !dbg !13386
  %and94 = and i32 %conv, 16, !dbg !13386
  %tobool95 = icmp ne i32 %and94, 0, !dbg !13386
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !13384

if.then96:                                        ; preds = %if.then86
  br label %for.inc, !dbg !13386

if.end97:                                         ; preds = %if.then86
  %mvert98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13384
  %81 = load %struct.MVert*, %struct.MVert** %mvert98, align 8, !dbg !13384
  %co99 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 0, !dbg !13384
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %co99, i64 0, i64 0, !dbg !13384
  %co101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13384
  store float* %arraydecay100, float** %co101, align 8, !dbg !13384
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13384
  %82 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !13384
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 1, !dbg !13384
  %arraydecay103 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !13384
  %no104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13384
  store i16* %arraydecay103, i16** %no104, align 8, !dbg !13384
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13388
  %83 = load float*, float** %vmask, align 8, !dbg !13388
  %tobool105 = icmp ne float* %83, null, !dbg !13388
  br i1 %tobool105, label %if.then106, label %if.end115, !dbg !13384

if.then106:                                       ; preds = %if.end97
  %vmask107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13388
  %84 = load float*, float** %vmask107, align 8, !dbg !13388
  %vert_indices108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13388
  %85 = load i32*, i32** %vert_indices108, align 8, !dbg !13388
  %gx109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13388
  %86 = load i32, i32* %gx109, align 4, !dbg !13388
  %idxprom110 = sext i32 %86 to i64, !dbg !13388
  %arrayidx111 = getelementptr inbounds i32, i32* %85, i64 %idxprom110, !dbg !13388
  %87 = load i32, i32* %arrayidx111, align 4, !dbg !13388
  %idxprom112 = sext i32 %87 to i64, !dbg !13388
  %arrayidx113 = getelementptr inbounds float, float* %84, i64 %idxprom112, !dbg !13388
  %mask114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13388
  store float* %arrayidx113, float** %mask114, align 8, !dbg !13388
  br label %if.end115, !dbg !13388

if.end115:                                        ; preds = %if.then106, %if.end97
  br label %if.end145, !dbg !13384

if.else116:                                       ; preds = %if.else84
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13390
  %call117 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !13390
  %tobool118 = icmp ne i8 %call117, 0, !dbg !13390
  br i1 %tobool118, label %if.else123, label %if.then119, !dbg !13393

if.then119:                                       ; preds = %if.else116
  %bm_unique_verts120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13394
  %call121 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts120), !dbg !13394
  %88 = bitcast i8* %call121 to %struct.BMVert*, !dbg !13394
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13394
  store %struct.BMVert* %88, %struct.BMVert** %bm_vert, align 8, !dbg !13394
  %bm_unique_verts122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13394
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts122), !dbg !13394
  br label %if.end127, !dbg !13394

if.else123:                                       ; preds = %if.else116
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13396
  %call124 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !13396
  %89 = bitcast i8* %call124 to %struct.BMVert*, !dbg !13396
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13396
  store %struct.BMVert* %89, %struct.BMVert** %bm_vert125, align 8, !dbg !13396
  %bm_other_verts126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13396
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts126), !dbg !13396
  br label %if.end127

if.end127:                                        ; preds = %if.else123, %if.then119
  %bm_vert128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13398
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert128, align 8, !dbg !13398
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !13398
  %call129 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !13398
  %conv130 = zext i8 %call129 to i32, !dbg !13398
  %tobool131 = icmp ne i32 %conv130, 0, !dbg !13398
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !13393

if.then132:                                       ; preds = %if.end127
  br label %for.inc, !dbg !13398

if.end133:                                        ; preds = %if.end127
  %bm_vert134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13393
  %91 = load %struct.BMVert*, %struct.BMVert** %bm_vert134, align 8, !dbg !13393
  %co135 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 2, !dbg !13393
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !13393
  %co137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13393
  store float* %arraydecay136, float** %co137, align 8, !dbg !13393
  %bm_vert138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13393
  %92 = load %struct.BMVert*, %struct.BMVert** %bm_vert138, align 8, !dbg !13393
  %no139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %92, i32 0, i32 3, !dbg !13393
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %no139, i64 0, i64 0, !dbg !13393
  %fno141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13393
  store float* %arraydecay140, float** %fno141, align 8, !dbg !13393
  %bm_vert142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13393
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert142, align 8, !dbg !13393
  %head143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !13393
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head143, i32 0, i32 0, !dbg !13393
  %94 = load i8*, i8** %data, align 8, !dbg !13393
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !13393
  %95 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !13393
  %idx.ext = sext i32 %95 to i64, !dbg !13393
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext, !dbg !13393
  %96 = bitcast i8* %add.ptr to float*, !dbg !13393
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13393
  store float* %96, float** %mask144, align 8, !dbg !13393
  br label %if.end145

if.end145:                                        ; preds = %if.end133, %if.end115
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end83
  %co147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13400
  %97 = load float*, float** %co147, align 8, !dbg !13400
  %call148 = call zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %97), !dbg !13403
  %tobool149 = icmp ne i8 %call148, 0, !dbg !13403
  br i1 %tobool149, label %if.then150, label %if.end190, !dbg !13404

if.then150:                                       ; preds = %if.end146
  call void @llvm.dbg.declare(metadata [3 x float]* %intr, metadata !13405, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !13408, metadata !DIExpression()), !dbg !13409
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13410
  %co152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13411
  %98 = load float*, float** %co152, align 8, !dbg !13411
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13412
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13413
  call void @point_plane_project(float* %arraydecay151, float* %98, float* %arraydecay153, float* %arraydecay154), !dbg !13414
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13415
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13416
  %co157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13417
  %99 = load float*, float** %co157, align 8, !dbg !13417
  call void @sub_v3_v3v3(float* %arraydecay155, float* %arraydecay156, float* %99), !dbg !13418
  %100 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13419
  %cache158 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %100, i32 0, i32 28, !dbg !13421
  %101 = load %struct.StrokeCache*, %struct.StrokeCache** %cache158, align 8, !dbg !13421
  %102 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13422
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13423
  %call160 = call i32 @plane_trim(%struct.StrokeCache* %101, %struct.Brush* %102, float* %arraydecay159), !dbg !13424
  %tobool161 = icmp ne i32 %call160, 0, !dbg !13424
  br i1 %tobool161, label %if.then162, label %if.end189, !dbg !13425

if.then162:                                       ; preds = %if.then150
  call void @llvm.dbg.declare(metadata float* %fade, metadata !13426, metadata !DIExpression()), !dbg !13428
  %103 = load float, float* %bstrength, align 4, !dbg !13429
  %104 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13430
  %105 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13431
  %co163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13432
  %106 = load float*, float** %co163, align 8, !dbg !13432
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !13433
  %107 = load float, float* %dist, align 8, !dbg !13433
  %call164 = call float @sqrtf(float %107) #5, !dbg !13434
  %no165 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13435
  %108 = load i16*, i16** %no165, align 8, !dbg !13435
  %fno166 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13436
  %109 = load float*, float** %fno166, align 8, !dbg !13436
  %mask167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13437
  %110 = load float*, float** %mask167, align 8, !dbg !13437
  %tobool168 = icmp ne float* %110, null, !dbg !13438
  br i1 %tobool168, label %cond.true169, label %cond.false171, !dbg !13438

cond.true169:                                     ; preds = %if.then162
  %mask170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13439
  %111 = load float*, float** %mask170, align 8, !dbg !13439
  %112 = load float, float* %111, align 4, !dbg !13440
  br label %cond.end172, !dbg !13438

cond.false171:                                    ; preds = %if.then162
  br label %cond.end172, !dbg !13438

cond.end172:                                      ; preds = %cond.false171, %cond.true169
  %cond173 = phi float [ %112, %cond.true169 ], [ 0.000000e+00, %cond.false171 ], !dbg !13438
  %call174 = call float @tex_strength(%struct.SculptSession* %104, %struct.Brush* %105, float* %106, float %call164, i16* %108, float* %109, float %cond173), !dbg !13441
  %mul175 = fmul float %103, %call174, !dbg !13442
  store float %mul175, float* %fade, align 4, !dbg !13428
  %113 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !13443
  %i176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13444
  %114 = load i32, i32* %i176, align 4, !dbg !13444
  %idxprom177 = sext i32 %114 to i64, !dbg !13443
  %arrayidx178 = getelementptr inbounds [3 x float], [3 x float]* %113, i64 %idxprom177, !dbg !13443
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 0, !dbg !13443
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13445
  %115 = load float, float* %fade, align 4, !dbg !13446
  call void @mul_v3_v3fl(float* %arraydecay179, float* %arraydecay180, float %115), !dbg !13447
  %mvert181 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13448
  %116 = load %struct.MVert*, %struct.MVert** %mvert181, align 8, !dbg !13448
  %tobool182 = icmp ne %struct.MVert* %116, null, !dbg !13450
  br i1 %tobool182, label %if.then183, label %if.end188, !dbg !13451

if.then183:                                       ; preds = %cond.end172
  %mvert184 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13452
  %117 = load %struct.MVert*, %struct.MVert** %mvert184, align 8, !dbg !13452
  %flag185 = getelementptr inbounds %struct.MVert, %struct.MVert* %117, i32 0, i32 2, !dbg !13453
  %118 = load i8, i8* %flag185, align 2, !dbg !13454
  %conv186 = zext i8 %118 to i32, !dbg !13454
  %or = or i32 %conv186, 128, !dbg !13454
  %conv187 = trunc i32 %or to i8, !dbg !13454
  store i8 %conv187, i8* %flag185, align 2, !dbg !13454
  br label %if.end188, !dbg !13455

if.end188:                                        ; preds = %if.then183, %cond.end172
  br label %if.end189, !dbg !13456

if.end189:                                        ; preds = %if.end188, %if.then150
  br label %if.end190, !dbg !13457

if.end190:                                        ; preds = %if.end189, %if.end146
  br label %for.inc, !dbg !13458

for.inc:                                          ; preds = %if.end190, %if.then132, %if.then96, %if.then81
  %gx191 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13368
  %119 = load i32, i32* %gx191, align 4, !dbg !13368
  %inc = add nsw i32 %119, 1, !dbg !13368
  store i32 %inc, i32* %gx191, align 4, !dbg !13368
  %i192 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13368
  %120 = load i32, i32* %i192, align 4, !dbg !13368
  %inc193 = add nsw i32 %120, 1, !dbg !13368
  store i32 %inc193, i32* %i192, align 4, !dbg !13368
  br label %for.cond41, !dbg !13368, !llvm.loop !13459

for.end:                                          ; preds = %for.cond41
  br label %for.inc194, !dbg !13461

for.inc194:                                       ; preds = %for.end
  %gy195 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13363
  %121 = load i32, i32* %gy195, align 8, !dbg !13363
  %inc196 = add nsw i32 %121, 1, !dbg !13363
  store i32 %inc196, i32* %gy195, align 8, !dbg !13363
  br label %for.cond36, !dbg !13363, !llvm.loop !13462

for.end197:                                       ; preds = %for.cond36
  br label %for.inc198, !dbg !13464

for.inc198:                                       ; preds = %for.end197
  %g199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13349
  %122 = load i32, i32* %g199, align 8, !dbg !13349
  %inc200 = add nsw i32 %122, 1, !dbg !13349
  store i32 %inc200, i32* %g199, align 8, !dbg !13349
  br label %for.cond17, !dbg !13349, !llvm.loop !13465

for.end201:                                       ; preds = %for.cond17
  br label %for.inc202, !dbg !13467

for.inc202:                                       ; preds = %for.end201
  %123 = load i32, i32* %n, align 4, !dbg !13468
  %inc203 = add nsw i32 %123, 1, !dbg !13468
  store i32 %inc203, i32* %n, align 4, !dbg !13468
  br label %for.cond, !dbg !13469, !llvm.loop !13470

for.end204:                                       ; preds = %for.cond
  ret void, !dbg !13472
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_clay_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !13473 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %radius = alloca float, align 4
  %offset = alloca float, align 4
  %displace = alloca float, align 4
  %an = alloca [3 x float], align 4
  %fc = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %temp = alloca [3 x float], align 4
  %flip = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %intr = alloca [3 x float], align 4
  %val = alloca [3 x float], align 4
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !13474, metadata !DIExpression()), !dbg !13475
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13476, metadata !DIExpression()), !dbg !13477
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !13478, metadata !DIExpression()), !dbg !13479
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !13482, metadata !DIExpression()), !dbg !13483
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13484
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !13485
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !13485
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !13483
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !13486, metadata !DIExpression()), !dbg !13487
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13488
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !13489
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !13490
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !13487
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !13491, metadata !DIExpression()), !dbg !13492
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13493
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !13494
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !13494
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !13495
  %5 = load float, float* %bstrength1, align 8, !dbg !13495
  store float %5, float* %bstrength, align 4, !dbg !13492
  call void @llvm.dbg.declare(metadata float* %radius, metadata !13496, metadata !DIExpression()), !dbg !13497
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13498
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !13499
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !13499
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 11, !dbg !13500
  %8 = load float, float* %radius3, align 8, !dbg !13500
  store float %8, float* %radius, align 4, !dbg !13497
  call void @llvm.dbg.declare(metadata float* %offset, metadata !13501, metadata !DIExpression()), !dbg !13502
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13503
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13504
  %call4 = call float @get_offset(%struct.Sculpt* %9, %struct.SculptSession* %10), !dbg !13505
  store float %call4, float* %offset, align 4, !dbg !13502
  call void @llvm.dbg.declare(metadata float* %displace, metadata !13506, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !13508, metadata !DIExpression()), !dbg !13509
  call void @llvm.dbg.declare(metadata [3 x float]* %fc, metadata !13510, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13512, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !13514, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.declare(metadata i32* %flip, metadata !13516, metadata !DIExpression()), !dbg !13517
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13518
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13519
  %13 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13520
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !13521
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13522
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13523
  call void @calc_sculpt_plane(%struct.Sculpt* %11, %struct.Object* %12, %struct.PBVHNode** %13, i32 %14, float* %arraydecay, float* %arraydecay5), !dbg !13524
  %15 = load float, float* %bstrength, align 4, !dbg !13525
  %cmp = fcmp olt float %15, 0.000000e+00, !dbg !13526
  %conv = zext i1 %cmp to i32, !dbg !13526
  store i32 %conv, i32* %flip, align 4, !dbg !13527
  %16 = load i32, i32* %flip, align 4, !dbg !13528
  %tobool = icmp ne i32 %16, 0, !dbg !13528
  br i1 %tobool, label %if.then, label %if.end, !dbg !13530

if.then:                                          ; preds = %entry
  %17 = load float, float* %bstrength, align 4, !dbg !13531
  %fneg = fneg float %17, !dbg !13533
  store float %fneg, float* %bstrength, align 4, !dbg !13534
  %18 = load float, float* %radius, align 4, !dbg !13535
  %fneg6 = fneg float %18, !dbg !13536
  store float %fneg6, float* %radius, align 4, !dbg !13537
  br label %if.end, !dbg !13538

if.end:                                           ; preds = %if.then, %entry
  %19 = load float, float* %radius, align 4, !dbg !13539
  %20 = load float, float* %offset, align 4, !dbg !13540
  %add = fadd float 2.500000e-01, %20, !dbg !13541
  %mul = fmul float %19, %add, !dbg !13542
  store float %mul, float* %displace, align 4, !dbg !13543
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13544
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13545
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13546
  %cache9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 28, !dbg !13547
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache9, align 8, !dbg !13547
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 1, !dbg !13548
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !13546
  call void @mul_v3_v3v3(float* %arraydecay7, float* %arraydecay8, float* %arraydecay10), !dbg !13549
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13550
  %23 = load float, float* %displace, align 4, !dbg !13551
  call void @mul_v3_fl(float* %arraydecay11, float %23), !dbg !13552
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13553
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13554
  call void @add_v3_v3(float* %arraydecay12, float* %arraydecay13), !dbg !13555
  store i32 0, i32* %n, align 4, !dbg !13556
  br label %for.cond, !dbg !13558

for.cond:                                         ; preds = %for.inc220, %if.end
  %24 = load i32, i32* %n, align 4, !dbg !13559
  %25 = load i32, i32* %totnode.addr, align 4, !dbg !13561
  %cmp14 = icmp slt i32 %24, %25, !dbg !13562
  br i1 %cmp14, label %for.body, label %for.end222, !dbg !13563

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !13564, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !13567, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !13569, metadata !DIExpression()), !dbg !13570
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13571
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 15, !dbg !13572
  %27 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !13572
  %28 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13573
  %29 = load i32, i32* %n, align 4, !dbg !13574
  %idxprom = sext i32 %29 to i64, !dbg !13573
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %28, i64 %idxprom, !dbg !13573
  %30 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !13573
  %call16 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %27, %struct.PBVHNode* %30), !dbg !13575
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call16, i32 0, i32 0, !dbg !13576
  %31 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !13576
  store [3 x float]* %31, [3 x float]** %proxy, align 8, !dbg !13577
  %32 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13578
  call void @sculpt_brush_test_init(%struct.SculptSession* %32, %struct.SculptBrushTest* %test), !dbg !13579
  %33 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13580
  %pbvh17 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %33, i32 0, i32 15, !dbg !13580
  %34 = load %struct.PBVH*, %struct.PBVH** %pbvh17, align 8, !dbg !13580
  %35 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13580
  %36 = load i32, i32* %n, align 4, !dbg !13580
  %idxprom18 = sext i32 %36 to i64, !dbg !13580
  %arrayidx19 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %35, i64 %idxprom18, !dbg !13580
  %37 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx19, align 8, !dbg !13580
  call void @pbvh_vertex_iter_init(%struct.PBVH* %34, %struct.PBVHNode* %37, %struct.PBVHVertexIter* %vd, i32 1), !dbg !13580
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13581
  store i32 0, i32* %i, align 4, !dbg !13581
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13581
  store i32 0, i32* %g, align 8, !dbg !13581
  br label %for.cond20, !dbg !13581

for.cond20:                                       ; preds = %for.inc216, %for.body
  %g21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13583
  %38 = load i32, i32* %g21, align 8, !dbg !13583
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !13583
  %39 = load i32, i32* %totgrid, align 8, !dbg !13583
  %cmp22 = icmp slt i32 %38, %39, !dbg !13583
  br i1 %cmp22, label %for.body24, label %for.end219, !dbg !13581

for.body24:                                       ; preds = %for.cond20
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13585
  %40 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !13585
  %tobool25 = icmp ne %struct.CCGElem** %40, null, !dbg !13585
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !13588

if.then26:                                        ; preds = %for.body24
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13589
  %41 = load i32, i32* %gridsize, align 4, !dbg !13589
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13589
  store i32 %41, i32* %width, align 4, !dbg !13589
  %gridsize27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13589
  %42 = load i32, i32* %gridsize27, align 4, !dbg !13589
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13589
  store i32 %42, i32* %height, align 8, !dbg !13589
  %grids28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13589
  %43 = load %struct.CCGElem**, %struct.CCGElem*** %grids28, align 8, !dbg !13589
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13589
  %44 = load i32*, i32** %grid_indices, align 8, !dbg !13589
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13589
  %45 = load i32, i32* %g29, align 8, !dbg !13589
  %idxprom30 = sext i32 %45 to i64, !dbg !13589
  %arrayidx31 = getelementptr inbounds i32, i32* %44, i64 %idxprom30, !dbg !13589
  %46 = load i32, i32* %arrayidx31, align 4, !dbg !13589
  %idxprom32 = sext i32 %46 to i64, !dbg !13589
  %arrayidx33 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %43, i64 %idxprom32, !dbg !13589
  %47 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx33, align 8, !dbg !13589
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13589
  store %struct.CCGElem* %47, %struct.CCGElem** %grid, align 8, !dbg !13589
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !13591
  %48 = load i32**, i32*** %grid_hidden, align 8, !dbg !13591
  %grid_indices34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13591
  %49 = load i32*, i32** %grid_indices34, align 8, !dbg !13591
  %g35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13591
  %50 = load i32, i32* %g35, align 8, !dbg !13591
  %idxprom36 = sext i32 %50 to i64, !dbg !13591
  %arrayidx37 = getelementptr inbounds i32, i32* %49, i64 %idxprom36, !dbg !13591
  %51 = load i32, i32* %arrayidx37, align 4, !dbg !13591
  %idxprom38 = sext i32 %51 to i64, !dbg !13591
  %arrayidx39 = getelementptr inbounds i32*, i32** %48, i64 %idxprom38, !dbg !13591
  %52 = load i32*, i32** %arrayidx39, align 8, !dbg !13591
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13591
  store i32* %52, i32** %gh, align 8, !dbg !13591
  br label %if.end42, !dbg !13589

if.else:                                          ; preds = %for.body24
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !13593
  %53 = load i32, i32* %totvert, align 8, !dbg !13593
  %width40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13593
  store i32 %53, i32* %width40, align 4, !dbg !13593
  %height41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13593
  store i32 1, i32* %height41, align 8, !dbg !13593
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then26
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13595
  store i32 0, i32* %gy, align 8, !dbg !13595
  br label %for.cond43, !dbg !13595

for.cond43:                                       ; preds = %for.inc212, %if.end42
  %gy44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13597
  %54 = load i32, i32* %gy44, align 8, !dbg !13597
  %height45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13597
  %55 = load i32, i32* %height45, align 8, !dbg !13597
  %cmp46 = icmp slt i32 %54, %55, !dbg !13597
  br i1 %cmp46, label %for.body48, label %for.end215, !dbg !13595

for.body48:                                       ; preds = %for.cond43
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13599
  store i32 0, i32* %gx, align 4, !dbg !13599
  br label %for.cond49, !dbg !13599

for.cond49:                                       ; preds = %for.inc, %for.body48
  %gx50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13602
  %56 = load i32, i32* %gx50, align 4, !dbg !13602
  %width51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13602
  %57 = load i32, i32* %width51, align 4, !dbg !13602
  %cmp52 = icmp slt i32 %56, %57, !dbg !13602
  br i1 %cmp52, label %for.body54, label %for.end, !dbg !13599

for.body54:                                       ; preds = %for.cond49
  %grid55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13604
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid55, align 8, !dbg !13604
  %tobool56 = icmp ne %struct.CCGElem* %58, null, !dbg !13604
  br i1 %tobool56, label %if.then57, label %if.else94, !dbg !13607

if.then57:                                        ; preds = %for.body54
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13608
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !13608
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13608
  %60 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !13608
  %call59 = call float* @CCG_elem_co(%struct.CCGKey* %59, %struct.CCGElem* %60), !dbg !13608
  %co60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13608
  store float* %call59, float** %co60, align 8, !dbg !13608
  %key61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13608
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key61, align 8, !dbg !13608
  %grid62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13608
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid62, align 8, !dbg !13608
  %call63 = call float* @CCG_elem_no(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !13608
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13608
  store float* %call63, float** %fno, align 8, !dbg !13608
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13608
  %63 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !13608
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %63, i32 0, i32 9, !dbg !13608
  %64 = load i32, i32* %has_mask, align 4, !dbg !13608
  %tobool65 = icmp ne i32 %64, 0, !dbg !13608
  br i1 %tobool65, label %cond.true, label %cond.false, !dbg !13608

cond.true:                                        ; preds = %if.then57
  %key66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13608
  %65 = load %struct.CCGKey*, %struct.CCGKey** %key66, align 8, !dbg !13608
  %grid67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13608
  %66 = load %struct.CCGElem*, %struct.CCGElem** %grid67, align 8, !dbg !13608
  %call68 = call float* @CCG_elem_mask(%struct.CCGKey* %65, %struct.CCGElem* %66), !dbg !13608
  br label %cond.end, !dbg !13608

cond.false:                                       ; preds = %if.then57
  br label %cond.end, !dbg !13608

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call68, %cond.true ], [ null, %cond.false ], !dbg !13608
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13608
  store float* %cond, float** %mask, align 8, !dbg !13608
  %key69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13608
  %67 = load %struct.CCGKey*, %struct.CCGKey** %key69, align 8, !dbg !13608
  %grid70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13608
  %68 = load %struct.CCGElem*, %struct.CCGElem** %grid70, align 8, !dbg !13608
  %call71 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %67, %struct.CCGElem* %68), !dbg !13608
  %grid72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13608
  store %struct.CCGElem* %call71, %struct.CCGElem** %grid72, align 8, !dbg !13608
  %gh73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13610
  %69 = load i32*, i32** %gh73, align 8, !dbg !13610
  %tobool74 = icmp ne i32* %69, null, !dbg !13610
  br i1 %tobool74, label %if.then75, label %if.end93, !dbg !13608

if.then75:                                        ; preds = %cond.end
  %gh76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13612
  %70 = load i32*, i32** %gh76, align 8, !dbg !13612
  %gy77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13612
  %71 = load i32, i32* %gy77, align 8, !dbg !13612
  %gridsize78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13612
  %72 = load i32, i32* %gridsize78, align 4, !dbg !13612
  %mul79 = mul nsw i32 %71, %72, !dbg !13612
  %gx80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13612
  %73 = load i32, i32* %gx80, align 4, !dbg !13612
  %add81 = add nsw i32 %mul79, %73, !dbg !13612
  %shr = ashr i32 %add81, 5, !dbg !13612
  %idxprom82 = sext i32 %shr to i64, !dbg !13612
  %arrayidx83 = getelementptr inbounds i32, i32* %70, i64 %idxprom82, !dbg !13612
  %74 = load i32, i32* %arrayidx83, align 4, !dbg !13612
  %gy84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13612
  %75 = load i32, i32* %gy84, align 8, !dbg !13612
  %gridsize85 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13612
  %76 = load i32, i32* %gridsize85, align 4, !dbg !13612
  %mul86 = mul nsw i32 %75, %76, !dbg !13612
  %gx87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13612
  %77 = load i32, i32* %gx87, align 4, !dbg !13612
  %add88 = add nsw i32 %mul86, %77, !dbg !13612
  %and = and i32 %add88, 31, !dbg !13612
  %shl = shl i32 1, %and, !dbg !13612
  %and89 = and i32 %74, %shl, !dbg !13612
  %tobool90 = icmp ne i32 %and89, 0, !dbg !13612
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !13615

if.then91:                                        ; preds = %if.then75
  br label %for.inc, !dbg !13612

if.end92:                                         ; preds = %if.then75
  br label %if.end93, !dbg !13615

if.end93:                                         ; preds = %if.end92, %cond.end
  br label %if.end157, !dbg !13608

if.else94:                                        ; preds = %for.body54
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13616
  %78 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !13616
  %tobool95 = icmp ne %struct.MVert* %78, null, !dbg !13616
  br i1 %tobool95, label %if.then96, label %if.else127, !dbg !13604

if.then96:                                        ; preds = %if.else94
  %mverts97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13618
  %79 = load %struct.MVert*, %struct.MVert** %mverts97, align 8, !dbg !13618
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13618
  %80 = load i32*, i32** %vert_indices, align 8, !dbg !13618
  %gx98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13618
  %81 = load i32, i32* %gx98, align 4, !dbg !13618
  %idxprom99 = sext i32 %81 to i64, !dbg !13618
  %arrayidx100 = getelementptr inbounds i32, i32* %80, i64 %idxprom99, !dbg !13618
  %82 = load i32, i32* %arrayidx100, align 4, !dbg !13618
  %idxprom101 = sext i32 %82 to i64, !dbg !13618
  %arrayidx102 = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i64 %idxprom101, !dbg !13618
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13618
  store %struct.MVert* %arrayidx102, %struct.MVert** %mvert, align 8, !dbg !13618
  %mvert103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13620
  %83 = load %struct.MVert*, %struct.MVert** %mvert103, align 8, !dbg !13620
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %83, i32 0, i32 2, !dbg !13620
  %84 = load i8, i8* %flag, align 2, !dbg !13620
  %conv104 = zext i8 %84 to i32, !dbg !13620
  %and105 = and i32 %conv104, 16, !dbg !13620
  %tobool106 = icmp ne i32 %and105, 0, !dbg !13620
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !13618

if.then107:                                       ; preds = %if.then96
  br label %for.inc, !dbg !13620

if.end108:                                        ; preds = %if.then96
  %mvert109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13618
  %85 = load %struct.MVert*, %struct.MVert** %mvert109, align 8, !dbg !13618
  %co110 = getelementptr inbounds %struct.MVert, %struct.MVert* %85, i32 0, i32 0, !dbg !13618
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %co110, i64 0, i64 0, !dbg !13618
  %co112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13618
  store float* %arraydecay111, float** %co112, align 8, !dbg !13618
  %mvert113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13618
  %86 = load %struct.MVert*, %struct.MVert** %mvert113, align 8, !dbg !13618
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %86, i32 0, i32 1, !dbg !13618
  %arraydecay114 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !13618
  %no115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13618
  store i16* %arraydecay114, i16** %no115, align 8, !dbg !13618
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13622
  %87 = load float*, float** %vmask, align 8, !dbg !13622
  %tobool116 = icmp ne float* %87, null, !dbg !13622
  br i1 %tobool116, label %if.then117, label %if.end126, !dbg !13618

if.then117:                                       ; preds = %if.end108
  %vmask118 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13622
  %88 = load float*, float** %vmask118, align 8, !dbg !13622
  %vert_indices119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13622
  %89 = load i32*, i32** %vert_indices119, align 8, !dbg !13622
  %gx120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13622
  %90 = load i32, i32* %gx120, align 4, !dbg !13622
  %idxprom121 = sext i32 %90 to i64, !dbg !13622
  %arrayidx122 = getelementptr inbounds i32, i32* %89, i64 %idxprom121, !dbg !13622
  %91 = load i32, i32* %arrayidx122, align 4, !dbg !13622
  %idxprom123 = sext i32 %91 to i64, !dbg !13622
  %arrayidx124 = getelementptr inbounds float, float* %88, i64 %idxprom123, !dbg !13622
  %mask125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13622
  store float* %arrayidx124, float** %mask125, align 8, !dbg !13622
  br label %if.end126, !dbg !13622

if.end126:                                        ; preds = %if.then117, %if.end108
  br label %if.end156, !dbg !13618

if.else127:                                       ; preds = %if.else94
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13624
  %call128 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !13624
  %tobool129 = icmp ne i8 %call128, 0, !dbg !13624
  br i1 %tobool129, label %if.else134, label %if.then130, !dbg !13627

if.then130:                                       ; preds = %if.else127
  %bm_unique_verts131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13628
  %call132 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts131), !dbg !13628
  %92 = bitcast i8* %call132 to %struct.BMVert*, !dbg !13628
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13628
  store %struct.BMVert* %92, %struct.BMVert** %bm_vert, align 8, !dbg !13628
  %bm_unique_verts133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13628
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts133), !dbg !13628
  br label %if.end138, !dbg !13628

if.else134:                                       ; preds = %if.else127
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13630
  %call135 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !13630
  %93 = bitcast i8* %call135 to %struct.BMVert*, !dbg !13630
  %bm_vert136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13630
  store %struct.BMVert* %93, %struct.BMVert** %bm_vert136, align 8, !dbg !13630
  %bm_other_verts137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13630
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts137), !dbg !13630
  br label %if.end138

if.end138:                                        ; preds = %if.else134, %if.then130
  %bm_vert139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13632
  %94 = load %struct.BMVert*, %struct.BMVert** %bm_vert139, align 8, !dbg !13632
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %94, i32 0, i32 0, !dbg !13632
  %call140 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !13632
  %conv141 = zext i8 %call140 to i32, !dbg !13632
  %tobool142 = icmp ne i32 %conv141, 0, !dbg !13632
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !13627

if.then143:                                       ; preds = %if.end138
  br label %for.inc, !dbg !13632

if.end144:                                        ; preds = %if.end138
  %bm_vert145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13627
  %95 = load %struct.BMVert*, %struct.BMVert** %bm_vert145, align 8, !dbg !13627
  %co146 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %95, i32 0, i32 2, !dbg !13627
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %co146, i64 0, i64 0, !dbg !13627
  %co148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13627
  store float* %arraydecay147, float** %co148, align 8, !dbg !13627
  %bm_vert149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13627
  %96 = load %struct.BMVert*, %struct.BMVert** %bm_vert149, align 8, !dbg !13627
  %no150 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %96, i32 0, i32 3, !dbg !13627
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %no150, i64 0, i64 0, !dbg !13627
  %fno152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13627
  store float* %arraydecay151, float** %fno152, align 8, !dbg !13627
  %bm_vert153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13627
  %97 = load %struct.BMVert*, %struct.BMVert** %bm_vert153, align 8, !dbg !13627
  %head154 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %97, i32 0, i32 0, !dbg !13627
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head154, i32 0, i32 0, !dbg !13627
  %98 = load i8*, i8** %data, align 8, !dbg !13627
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !13627
  %99 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !13627
  %idx.ext = sext i32 %99 to i64, !dbg !13627
  %add.ptr = getelementptr inbounds i8, i8* %98, i64 %idx.ext, !dbg !13627
  %100 = bitcast i8* %add.ptr to float*, !dbg !13627
  %mask155 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13627
  store float* %100, float** %mask155, align 8, !dbg !13627
  br label %if.end156

if.end156:                                        ; preds = %if.end144, %if.end126
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end93
  %co158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13634
  %101 = load float*, float** %co158, align 8, !dbg !13634
  %call159 = call zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %101), !dbg !13637
  %tobool160 = icmp ne i8 %call159, 0, !dbg !13637
  br i1 %tobool160, label %if.then161, label %if.end208, !dbg !13638

if.then161:                                       ; preds = %if.end157
  %co162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13639
  %102 = load float*, float** %co162, align 8, !dbg !13639
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13642
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13643
  %103 = load i32, i32* %flip, align 4, !dbg !13644
  %call165 = call i32 @plane_point_side_flip(float* %102, float* %arraydecay163, float* %arraydecay164, i32 %103), !dbg !13645
  %tobool166 = icmp ne i32 %call165, 0, !dbg !13645
  br i1 %tobool166, label %if.then167, label %if.end207, !dbg !13646

if.then167:                                       ; preds = %if.then161
  call void @llvm.dbg.declare(metadata [3 x float]* %intr, metadata !13647, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !13650, metadata !DIExpression()), !dbg !13651
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13652
  %co169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13653
  %104 = load float*, float** %co169, align 8, !dbg !13653
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13654
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13655
  call void @point_plane_project(float* %arraydecay168, float* %104, float* %arraydecay170, float* %arraydecay171), !dbg !13656
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13657
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13658
  %co174 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13659
  %105 = load float*, float** %co174, align 8, !dbg !13659
  call void @sub_v3_v3v3(float* %arraydecay172, float* %arraydecay173, float* %105), !dbg !13660
  %106 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13661
  %cache175 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %106, i32 0, i32 28, !dbg !13663
  %107 = load %struct.StrokeCache*, %struct.StrokeCache** %cache175, align 8, !dbg !13663
  %108 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13664
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13665
  %call177 = call i32 @plane_trim(%struct.StrokeCache* %107, %struct.Brush* %108, float* %arraydecay176), !dbg !13666
  %tobool178 = icmp ne i32 %call177, 0, !dbg !13666
  br i1 %tobool178, label %if.then179, label %if.end206, !dbg !13667

if.then179:                                       ; preds = %if.then167
  call void @llvm.dbg.declare(metadata float* %fade, metadata !13668, metadata !DIExpression()), !dbg !13670
  %109 = load float, float* %bstrength, align 4, !dbg !13671
  %110 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13672
  %111 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13673
  %co180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13674
  %112 = load float*, float** %co180, align 8, !dbg !13674
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !13675
  %113 = load float, float* %dist, align 8, !dbg !13675
  %call181 = call float @sqrtf(float %113) #5, !dbg !13676
  %no182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13677
  %114 = load i16*, i16** %no182, align 8, !dbg !13677
  %fno183 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13678
  %115 = load float*, float** %fno183, align 8, !dbg !13678
  %mask184 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13679
  %116 = load float*, float** %mask184, align 8, !dbg !13679
  %tobool185 = icmp ne float* %116, null, !dbg !13680
  br i1 %tobool185, label %cond.true186, label %cond.false188, !dbg !13680

cond.true186:                                     ; preds = %if.then179
  %mask187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13681
  %117 = load float*, float** %mask187, align 8, !dbg !13681
  %118 = load float, float* %117, align 4, !dbg !13682
  br label %cond.end189, !dbg !13680

cond.false188:                                    ; preds = %if.then179
  br label %cond.end189, !dbg !13680

cond.end189:                                      ; preds = %cond.false188, %cond.true186
  %cond190 = phi float [ %118, %cond.true186 ], [ 0.000000e+00, %cond.false188 ], !dbg !13680
  %call191 = call float @tex_strength(%struct.SculptSession* %110, %struct.Brush* %111, float* %112, float %call181, i16* %114, float* %115, float %cond190), !dbg !13683
  %mul192 = fmul float %109, %call191, !dbg !13684
  store float %mul192, float* %fade, align 4, !dbg !13670
  %119 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !13685
  %i193 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13686
  %120 = load i32, i32* %i193, align 4, !dbg !13686
  %idxprom194 = sext i32 %120 to i64, !dbg !13685
  %arrayidx195 = getelementptr inbounds [3 x float], [3 x float]* %119, i64 %idxprom194, !dbg !13685
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx195, i64 0, i64 0, !dbg !13685
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13687
  %121 = load float, float* %fade, align 4, !dbg !13688
  call void @mul_v3_v3fl(float* %arraydecay196, float* %arraydecay197, float %121), !dbg !13689
  %mvert198 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13690
  %122 = load %struct.MVert*, %struct.MVert** %mvert198, align 8, !dbg !13690
  %tobool199 = icmp ne %struct.MVert* %122, null, !dbg !13692
  br i1 %tobool199, label %if.then200, label %if.end205, !dbg !13693

if.then200:                                       ; preds = %cond.end189
  %mvert201 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13694
  %123 = load %struct.MVert*, %struct.MVert** %mvert201, align 8, !dbg !13694
  %flag202 = getelementptr inbounds %struct.MVert, %struct.MVert* %123, i32 0, i32 2, !dbg !13695
  %124 = load i8, i8* %flag202, align 2, !dbg !13696
  %conv203 = zext i8 %124 to i32, !dbg !13696
  %or = or i32 %conv203, 128, !dbg !13696
  %conv204 = trunc i32 %or to i8, !dbg !13696
  store i8 %conv204, i8* %flag202, align 2, !dbg !13696
  br label %if.end205, !dbg !13697

if.end205:                                        ; preds = %if.then200, %cond.end189
  br label %if.end206, !dbg !13698

if.end206:                                        ; preds = %if.end205, %if.then167
  br label %if.end207, !dbg !13699

if.end207:                                        ; preds = %if.end206, %if.then161
  br label %if.end208, !dbg !13700

if.end208:                                        ; preds = %if.end207, %if.end157
  br label %for.inc, !dbg !13701

for.inc:                                          ; preds = %if.end208, %if.then143, %if.then107, %if.then91
  %gx209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13602
  %125 = load i32, i32* %gx209, align 4, !dbg !13602
  %inc = add nsw i32 %125, 1, !dbg !13602
  store i32 %inc, i32* %gx209, align 4, !dbg !13602
  %i210 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13602
  %126 = load i32, i32* %i210, align 4, !dbg !13602
  %inc211 = add nsw i32 %126, 1, !dbg !13602
  store i32 %inc211, i32* %i210, align 4, !dbg !13602
  br label %for.cond49, !dbg !13602, !llvm.loop !13702

for.end:                                          ; preds = %for.cond49
  br label %for.inc212, !dbg !13704

for.inc212:                                       ; preds = %for.end
  %gy213 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13597
  %127 = load i32, i32* %gy213, align 8, !dbg !13597
  %inc214 = add nsw i32 %127, 1, !dbg !13597
  store i32 %inc214, i32* %gy213, align 8, !dbg !13597
  br label %for.cond43, !dbg !13597, !llvm.loop !13705

for.end215:                                       ; preds = %for.cond43
  br label %for.inc216, !dbg !13707

for.inc216:                                       ; preds = %for.end215
  %g217 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13583
  %128 = load i32, i32* %g217, align 8, !dbg !13583
  %inc218 = add nsw i32 %128, 1, !dbg !13583
  store i32 %inc218, i32* %g217, align 8, !dbg !13583
  br label %for.cond20, !dbg !13583, !llvm.loop !13708

for.end219:                                       ; preds = %for.cond20
  br label %for.inc220, !dbg !13710

for.inc220:                                       ; preds = %for.end219
  %129 = load i32, i32* %n, align 4, !dbg !13711
  %inc221 = add nsw i32 %129, 1, !dbg !13711
  store i32 %inc221, i32* %n, align 4, !dbg !13711
  br label %for.cond, !dbg !13712, !llvm.loop !13713

for.end222:                                       ; preds = %for.cond
  ret void, !dbg !13715
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_clay_strips_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !13716 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %radius = alloca float, align 4
  %offset = alloca float, align 4
  %displace = alloca float, align 4
  %sn = alloca [3 x float], align 4
  %an = alloca [3 x float], align 4
  %fc = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %temp = alloca [3 x float], align 4
  %mat = alloca [4 x [4 x float]], align 16
  %scale = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %flip = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %intr = alloca [3 x float], align 4
  %val = alloca [3 x float], align 4
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !13717, metadata !DIExpression()), !dbg !13718
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13719, metadata !DIExpression()), !dbg !13720
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !13725, metadata !DIExpression()), !dbg !13726
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13727
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !13728
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !13728
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !13726
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !13729, metadata !DIExpression()), !dbg !13730
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13731
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !13732
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !13733
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !13730
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !13734, metadata !DIExpression()), !dbg !13735
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13736
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !13737
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !13737
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !13738
  %5 = load float, float* %bstrength1, align 8, !dbg !13738
  store float %5, float* %bstrength, align 4, !dbg !13735
  call void @llvm.dbg.declare(metadata float* %radius, metadata !13739, metadata !DIExpression()), !dbg !13740
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13741
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !13742
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !13742
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 11, !dbg !13743
  %8 = load float, float* %radius3, align 8, !dbg !13743
  store float %8, float* %radius, align 4, !dbg !13740
  call void @llvm.dbg.declare(metadata float* %offset, metadata !13744, metadata !DIExpression()), !dbg !13745
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13746
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13747
  %call4 = call float @get_offset(%struct.Sculpt* %9, %struct.SculptSession* %10), !dbg !13748
  store float %call4, float* %offset, align 4, !dbg !13745
  call void @llvm.dbg.declare(metadata float* %displace, metadata !13749, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.declare(metadata [3 x float]* %sn, metadata !13751, metadata !DIExpression()), !dbg !13752
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !13753, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.declare(metadata [3 x float]* %fc, metadata !13755, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13757, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !13759, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !13761, metadata !DIExpression()), !dbg !13762
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %scale, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !13765, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.declare(metadata i32* %flip, metadata !13767, metadata !DIExpression()), !dbg !13768
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13769
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13770
  %13 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13771
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !13772
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %sn, i64 0, i64 0, !dbg !13773
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13774
  call void @calc_sculpt_plane(%struct.Sculpt* %11, %struct.Object* %12, %struct.PBVHNode** %13, i32 %14, float* %arraydecay, float* %arraydecay5), !dbg !13775
  %15 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13776
  %sculpt_plane = getelementptr inbounds %struct.Brush, %struct.Brush* %15, i32 0, i32 28, !dbg !13778
  %16 = load i32, i32* %sculpt_plane, align 8, !dbg !13778
  %cmp = icmp ne i32 %16, 0, !dbg !13779
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13780

lor.lhs.false:                                    ; preds = %entry
  %17 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13781
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %17, i32 0, i32 16, !dbg !13782
  %18 = load i32, i32* %flag, align 8, !dbg !13782
  %and = and i32 %18, 32768, !dbg !13783
  %tobool = icmp ne i32 %and, 0, !dbg !13783
  br i1 %tobool, label %if.then, label %if.else, !dbg !13784

if.then:                                          ; preds = %lor.lhs.false, %entry
  %19 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !13785
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13786
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13787
  %21 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13788
  %22 = load i32, i32* %totnode.addr, align 4, !dbg !13789
  call void @calc_area_normal(%struct.Sculpt* %19, %struct.Object* %20, float* %arraydecay6, %struct.PBVHNode** %21, i32 %22), !dbg !13790
  br label %if.end, !dbg !13790

if.else:                                          ; preds = %lor.lhs.false
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13791
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %sn, i64 0, i64 0, !dbg !13792
  call void @copy_v3_v3(float* %arraydecay7, float* %arraydecay8), !dbg !13793
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13794
  %cache9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 28, !dbg !13796
  %24 = load %struct.StrokeCache*, %struct.StrokeCache** %cache9, align 8, !dbg !13796
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %24, i32 0, i32 20, !dbg !13797
  %25 = load i8, i8* %first_time, align 4, !dbg !13797
  %tobool10 = icmp ne i8 %25, 0, !dbg !13794
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13798

if.then11:                                        ; preds = %if.end
  br label %for.end275, !dbg !13799

if.end12:                                         ; preds = %if.end
  %26 = load float, float* %bstrength, align 4, !dbg !13800
  %cmp13 = fcmp olt float %26, 0.000000e+00, !dbg !13801
  %conv = zext i1 %cmp13 to i32, !dbg !13801
  store i32 %conv, i32* %flip, align 4, !dbg !13802
  %27 = load i32, i32* %flip, align 4, !dbg !13803
  %tobool14 = icmp ne i32 %27, 0, !dbg !13803
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !13805

if.then15:                                        ; preds = %if.end12
  %28 = load float, float* %bstrength, align 4, !dbg !13806
  %fneg = fneg float %28, !dbg !13808
  store float %fneg, float* %bstrength, align 4, !dbg !13809
  %29 = load float, float* %radius, align 4, !dbg !13810
  %fneg16 = fneg float %29, !dbg !13811
  store float %fneg16, float* %radius, align 4, !dbg !13812
  br label %if.end17, !dbg !13813

if.end17:                                         ; preds = %if.then15, %if.end12
  %30 = load float, float* %radius, align 4, !dbg !13814
  %31 = load float, float* %offset, align 4, !dbg !13815
  %add = fadd float 2.500000e-01, %31, !dbg !13816
  %mul = fmul float %30, %add, !dbg !13817
  store float %mul, float* %displace, align 4, !dbg !13818
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13819
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %sn, i64 0, i64 0, !dbg !13820
  %32 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13821
  %cache20 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %32, i32 0, i32 28, !dbg !13822
  %33 = load %struct.StrokeCache*, %struct.StrokeCache** %cache20, align 8, !dbg !13822
  %scale21 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %33, i32 0, i32 1, !dbg !13823
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %scale21, i64 0, i64 0, !dbg !13821
  call void @mul_v3_v3v3(float* %arraydecay18, float* %arraydecay19, float* %arraydecay22), !dbg !13824
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13825
  %34 = load float, float* %displace, align 4, !dbg !13826
  call void @mul_v3_fl(float* %arraydecay23, float %34), !dbg !13827
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13828
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !13829
  call void @add_v3_v3(float* %arraydecay24, float* %arraydecay25), !dbg !13830
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13831
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !13831
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13832
  %35 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13833
  %cache28 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %35, i32 0, i32 28, !dbg !13834
  %36 = load %struct.StrokeCache*, %struct.StrokeCache** %cache28, align 8, !dbg !13834
  %grab_delta_symmetry = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %36, i32 0, i32 27, !dbg !13835
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %grab_delta_symmetry, i64 0, i64 0, !dbg !13833
  call void @cross_v3_v3v3(float* %arraydecay26, float* %arraydecay27, float* %arraydecay29), !dbg !13836
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13837
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 3, !dbg !13837
  store float 0.000000e+00, float* %arrayidx31, align 4, !dbg !13838
  %arrayidx32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 1, !dbg !13839
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx32, i64 0, i64 0, !dbg !13839
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13840
  %arrayidx35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13841
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 0, !dbg !13841
  call void @cross_v3_v3v3(float* %arraydecay33, float* %arraydecay34, float* %arraydecay36), !dbg !13842
  %arrayidx37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 1, !dbg !13843
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx37, i64 0, i64 3, !dbg !13843
  store float 0.000000e+00, float* %arrayidx38, align 4, !dbg !13844
  %arrayidx39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !13845
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx39, i64 0, i64 0, !dbg !13845
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !13846
  call void @copy_v3_v3(float* %arraydecay40, float* %arraydecay41), !dbg !13847
  %arrayidx42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !13848
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 3, !dbg !13848
  store float 0.000000e+00, float* %arrayidx43, align 4, !dbg !13849
  %arrayidx44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !13850
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx44, i64 0, i64 0, !dbg !13850
  %37 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13851
  %cache46 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %37, i32 0, i32 28, !dbg !13852
  %38 = load %struct.StrokeCache*, %struct.StrokeCache** %cache46, align 8, !dbg !13852
  %location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %38, i32 0, i32 14, !dbg !13853
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !13851
  call void @copy_v3_v3(float* %arraydecay45, float* %arraydecay47), !dbg !13854
  %arrayidx48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !13855
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx48, i64 0, i64 3, !dbg !13855
  store float 1.000000e+00, float* %arrayidx49, align 4, !dbg !13856
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13857
  call void @normalize_m4([4 x float]* %arraydecay50), !dbg !13858
  %arraydecay51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scale, i64 0, i64 0, !dbg !13859
  %39 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13860
  %cache52 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %39, i32 0, i32 28, !dbg !13861
  %40 = load %struct.StrokeCache*, %struct.StrokeCache** %cache52, align 8, !dbg !13861
  %radius53 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %40, i32 0, i32 11, !dbg !13862
  %41 = load float, float* %radius53, align 8, !dbg !13862
  call void @scale_m4_fl([4 x float]* %arraydecay51, float %41), !dbg !13863
  %arraydecay54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !13864
  %arraydecay55 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13865
  %arraydecay56 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scale, i64 0, i64 0, !dbg !13866
  call void @mul_m4_m4m4([4 x float]* %arraydecay54, [4 x float]* %arraydecay55, [4 x float]* %arraydecay56), !dbg !13867
  %arraydecay57 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13868
  %arraydecay58 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !13869
  %call59 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay57, [4 x float]* %arraydecay58), !dbg !13870
  store i32 0, i32* %n, align 4, !dbg !13871
  br label %for.cond, !dbg !13873

for.cond:                                         ; preds = %for.inc273, %if.end17
  %42 = load i32, i32* %n, align 4, !dbg !13874
  %43 = load i32, i32* %totnode.addr, align 4, !dbg !13876
  %cmp60 = icmp slt i32 %42, %43, !dbg !13877
  br i1 %cmp60, label %for.body, label %for.end275, !dbg !13878

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !13879, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !13882, metadata !DIExpression()), !dbg !13883
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !13884, metadata !DIExpression()), !dbg !13885
  %44 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13886
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %44, i32 0, i32 15, !dbg !13887
  %45 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !13887
  %46 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13888
  %47 = load i32, i32* %n, align 4, !dbg !13889
  %idxprom = sext i32 %47 to i64, !dbg !13888
  %arrayidx62 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %46, i64 %idxprom, !dbg !13888
  %48 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx62, align 8, !dbg !13888
  %call63 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %45, %struct.PBVHNode* %48), !dbg !13890
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call63, i32 0, i32 0, !dbg !13891
  %49 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !13891
  store [3 x float]* %49, [3 x float]** %proxy, align 8, !dbg !13892
  %50 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13893
  call void @sculpt_brush_test_init(%struct.SculptSession* %50, %struct.SculptBrushTest* %test), !dbg !13894
  %51 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13895
  %pbvh64 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %51, i32 0, i32 15, !dbg !13895
  %52 = load %struct.PBVH*, %struct.PBVH** %pbvh64, align 8, !dbg !13895
  %53 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !13895
  %54 = load i32, i32* %n, align 4, !dbg !13895
  %idxprom65 = sext i32 %54 to i64, !dbg !13895
  %arrayidx66 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %53, i64 %idxprom65, !dbg !13895
  %55 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx66, align 8, !dbg !13895
  call void @pbvh_vertex_iter_init(%struct.PBVH* %52, %struct.PBVHNode* %55, %struct.PBVHVertexIter* %vd, i32 1), !dbg !13895
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13896
  store i32 0, i32* %i, align 4, !dbg !13896
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13896
  store i32 0, i32* %g, align 8, !dbg !13896
  br label %for.cond67, !dbg !13896

for.cond67:                                       ; preds = %for.inc269, %for.body
  %g68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13898
  %56 = load i32, i32* %g68, align 8, !dbg !13898
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !13898
  %57 = load i32, i32* %totgrid, align 8, !dbg !13898
  %cmp69 = icmp slt i32 %56, %57, !dbg !13898
  br i1 %cmp69, label %for.body71, label %for.end272, !dbg !13896

for.body71:                                       ; preds = %for.cond67
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13900
  %58 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !13900
  %tobool72 = icmp ne %struct.CCGElem** %58, null, !dbg !13900
  br i1 %tobool72, label %if.then73, label %if.else87, !dbg !13903

if.then73:                                        ; preds = %for.body71
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13904
  %59 = load i32, i32* %gridsize, align 4, !dbg !13904
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13904
  store i32 %59, i32* %width, align 4, !dbg !13904
  %gridsize74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13904
  %60 = load i32, i32* %gridsize74, align 4, !dbg !13904
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13904
  store i32 %60, i32* %height, align 8, !dbg !13904
  %grids75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !13904
  %61 = load %struct.CCGElem**, %struct.CCGElem*** %grids75, align 8, !dbg !13904
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13904
  %62 = load i32*, i32** %grid_indices, align 8, !dbg !13904
  %g76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13904
  %63 = load i32, i32* %g76, align 8, !dbg !13904
  %idxprom77 = sext i32 %63 to i64, !dbg !13904
  %arrayidx78 = getelementptr inbounds i32, i32* %62, i64 %idxprom77, !dbg !13904
  %64 = load i32, i32* %arrayidx78, align 4, !dbg !13904
  %idxprom79 = sext i32 %64 to i64, !dbg !13904
  %arrayidx80 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %61, i64 %idxprom79, !dbg !13904
  %65 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx80, align 8, !dbg !13904
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13904
  store %struct.CCGElem* %65, %struct.CCGElem** %grid, align 8, !dbg !13904
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !13906
  %66 = load i32**, i32*** %grid_hidden, align 8, !dbg !13906
  %grid_indices81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !13906
  %67 = load i32*, i32** %grid_indices81, align 8, !dbg !13906
  %g82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13906
  %68 = load i32, i32* %g82, align 8, !dbg !13906
  %idxprom83 = sext i32 %68 to i64, !dbg !13906
  %arrayidx84 = getelementptr inbounds i32, i32* %67, i64 %idxprom83, !dbg !13906
  %69 = load i32, i32* %arrayidx84, align 4, !dbg !13906
  %idxprom85 = sext i32 %69 to i64, !dbg !13906
  %arrayidx86 = getelementptr inbounds i32*, i32** %66, i64 %idxprom85, !dbg !13906
  %70 = load i32*, i32** %arrayidx86, align 8, !dbg !13906
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13906
  store i32* %70, i32** %gh, align 8, !dbg !13906
  br label %if.end90, !dbg !13904

if.else87:                                        ; preds = %for.body71
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !13908
  %71 = load i32, i32* %totvert, align 8, !dbg !13908
  %width88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13908
  store i32 %71, i32* %width88, align 4, !dbg !13908
  %height89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13908
  store i32 1, i32* %height89, align 8, !dbg !13908
  br label %if.end90

if.end90:                                         ; preds = %if.else87, %if.then73
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13910
  store i32 0, i32* %gy, align 8, !dbg !13910
  br label %for.cond91, !dbg !13910

for.cond91:                                       ; preds = %for.inc265, %if.end90
  %gy92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13912
  %72 = load i32, i32* %gy92, align 8, !dbg !13912
  %height93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !13912
  %73 = load i32, i32* %height93, align 8, !dbg !13912
  %cmp94 = icmp slt i32 %72, %73, !dbg !13912
  br i1 %cmp94, label %for.body96, label %for.end268, !dbg !13910

for.body96:                                       ; preds = %for.cond91
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13914
  store i32 0, i32* %gx, align 4, !dbg !13914
  br label %for.cond97, !dbg !13914

for.cond97:                                       ; preds = %for.inc, %for.body96
  %gx98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13917
  %74 = load i32, i32* %gx98, align 4, !dbg !13917
  %width99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !13917
  %75 = load i32, i32* %width99, align 4, !dbg !13917
  %cmp100 = icmp slt i32 %74, %75, !dbg !13917
  br i1 %cmp100, label %for.body102, label %for.end, !dbg !13914

for.body102:                                      ; preds = %for.cond97
  %grid103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13919
  %76 = load %struct.CCGElem*, %struct.CCGElem** %grid103, align 8, !dbg !13919
  %tobool104 = icmp ne %struct.CCGElem* %76, null, !dbg !13919
  br i1 %tobool104, label %if.then105, label %if.else143, !dbg !13922

if.then105:                                       ; preds = %for.body102
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13923
  %77 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !13923
  %grid106 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13923
  %78 = load %struct.CCGElem*, %struct.CCGElem** %grid106, align 8, !dbg !13923
  %call107 = call float* @CCG_elem_co(%struct.CCGKey* %77, %struct.CCGElem* %78), !dbg !13923
  %co108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13923
  store float* %call107, float** %co108, align 8, !dbg !13923
  %key109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13923
  %79 = load %struct.CCGKey*, %struct.CCGKey** %key109, align 8, !dbg !13923
  %grid110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13923
  %80 = load %struct.CCGElem*, %struct.CCGElem** %grid110, align 8, !dbg !13923
  %call111 = call float* @CCG_elem_no(%struct.CCGKey* %79, %struct.CCGElem* %80), !dbg !13923
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13923
  store float* %call111, float** %fno, align 8, !dbg !13923
  %key112 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13923
  %81 = load %struct.CCGKey*, %struct.CCGKey** %key112, align 8, !dbg !13923
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %81, i32 0, i32 9, !dbg !13923
  %82 = load i32, i32* %has_mask, align 4, !dbg !13923
  %tobool113 = icmp ne i32 %82, 0, !dbg !13923
  br i1 %tobool113, label %cond.true, label %cond.false, !dbg !13923

cond.true:                                        ; preds = %if.then105
  %key114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13923
  %83 = load %struct.CCGKey*, %struct.CCGKey** %key114, align 8, !dbg !13923
  %grid115 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13923
  %84 = load %struct.CCGElem*, %struct.CCGElem** %grid115, align 8, !dbg !13923
  %call116 = call float* @CCG_elem_mask(%struct.CCGKey* %83, %struct.CCGElem* %84), !dbg !13923
  br label %cond.end, !dbg !13923

cond.false:                                       ; preds = %if.then105
  br label %cond.end, !dbg !13923

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call116, %cond.true ], [ null, %cond.false ], !dbg !13923
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13923
  store float* %cond, float** %mask, align 8, !dbg !13923
  %key117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !13923
  %85 = load %struct.CCGKey*, %struct.CCGKey** %key117, align 8, !dbg !13923
  %grid118 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13923
  %86 = load %struct.CCGElem*, %struct.CCGElem** %grid118, align 8, !dbg !13923
  %call119 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %85, %struct.CCGElem* %86), !dbg !13923
  %grid120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !13923
  store %struct.CCGElem* %call119, %struct.CCGElem** %grid120, align 8, !dbg !13923
  %gh121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13925
  %87 = load i32*, i32** %gh121, align 8, !dbg !13925
  %tobool122 = icmp ne i32* %87, null, !dbg !13925
  br i1 %tobool122, label %if.then123, label %if.end142, !dbg !13923

if.then123:                                       ; preds = %cond.end
  %gh124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !13927
  %88 = load i32*, i32** %gh124, align 8, !dbg !13927
  %gy125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13927
  %89 = load i32, i32* %gy125, align 8, !dbg !13927
  %gridsize126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13927
  %90 = load i32, i32* %gridsize126, align 4, !dbg !13927
  %mul127 = mul nsw i32 %89, %90, !dbg !13927
  %gx128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13927
  %91 = load i32, i32* %gx128, align 4, !dbg !13927
  %add129 = add nsw i32 %mul127, %91, !dbg !13927
  %shr = ashr i32 %add129, 5, !dbg !13927
  %idxprom130 = sext i32 %shr to i64, !dbg !13927
  %arrayidx131 = getelementptr inbounds i32, i32* %88, i64 %idxprom130, !dbg !13927
  %92 = load i32, i32* %arrayidx131, align 4, !dbg !13927
  %gy132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13927
  %93 = load i32, i32* %gy132, align 8, !dbg !13927
  %gridsize133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !13927
  %94 = load i32, i32* %gridsize133, align 4, !dbg !13927
  %mul134 = mul nsw i32 %93, %94, !dbg !13927
  %gx135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13927
  %95 = load i32, i32* %gx135, align 4, !dbg !13927
  %add136 = add nsw i32 %mul134, %95, !dbg !13927
  %and137 = and i32 %add136, 31, !dbg !13927
  %shl = shl i32 1, %and137, !dbg !13927
  %and138 = and i32 %92, %shl, !dbg !13927
  %tobool139 = icmp ne i32 %and138, 0, !dbg !13927
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !13930

if.then140:                                       ; preds = %if.then123
  br label %for.inc, !dbg !13927

if.end141:                                        ; preds = %if.then123
  br label %if.end142, !dbg !13930

if.end142:                                        ; preds = %if.end141, %cond.end
  br label %if.end207, !dbg !13923

if.else143:                                       ; preds = %for.body102
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13931
  %96 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !13931
  %tobool144 = icmp ne %struct.MVert* %96, null, !dbg !13931
  br i1 %tobool144, label %if.then145, label %if.else177, !dbg !13919

if.then145:                                       ; preds = %if.else143
  %mverts146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !13933
  %97 = load %struct.MVert*, %struct.MVert** %mverts146, align 8, !dbg !13933
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13933
  %98 = load i32*, i32** %vert_indices, align 8, !dbg !13933
  %gx147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13933
  %99 = load i32, i32* %gx147, align 4, !dbg !13933
  %idxprom148 = sext i32 %99 to i64, !dbg !13933
  %arrayidx149 = getelementptr inbounds i32, i32* %98, i64 %idxprom148, !dbg !13933
  %100 = load i32, i32* %arrayidx149, align 4, !dbg !13933
  %idxprom150 = sext i32 %100 to i64, !dbg !13933
  %arrayidx151 = getelementptr inbounds %struct.MVert, %struct.MVert* %97, i64 %idxprom150, !dbg !13933
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13933
  store %struct.MVert* %arrayidx151, %struct.MVert** %mvert, align 8, !dbg !13933
  %mvert152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13935
  %101 = load %struct.MVert*, %struct.MVert** %mvert152, align 8, !dbg !13935
  %flag153 = getelementptr inbounds %struct.MVert, %struct.MVert* %101, i32 0, i32 2, !dbg !13935
  %102 = load i8, i8* %flag153, align 2, !dbg !13935
  %conv154 = zext i8 %102 to i32, !dbg !13935
  %and155 = and i32 %conv154, 16, !dbg !13935
  %tobool156 = icmp ne i32 %and155, 0, !dbg !13935
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !13933

if.then157:                                       ; preds = %if.then145
  br label %for.inc, !dbg !13935

if.end158:                                        ; preds = %if.then145
  %mvert159 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13933
  %103 = load %struct.MVert*, %struct.MVert** %mvert159, align 8, !dbg !13933
  %co160 = getelementptr inbounds %struct.MVert, %struct.MVert* %103, i32 0, i32 0, !dbg !13933
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %co160, i64 0, i64 0, !dbg !13933
  %co162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13933
  store float* %arraydecay161, float** %co162, align 8, !dbg !13933
  %mvert163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !13933
  %104 = load %struct.MVert*, %struct.MVert** %mvert163, align 8, !dbg !13933
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %104, i32 0, i32 1, !dbg !13933
  %arraydecay164 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !13933
  %no165 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13933
  store i16* %arraydecay164, i16** %no165, align 8, !dbg !13933
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13937
  %105 = load float*, float** %vmask, align 8, !dbg !13937
  %tobool166 = icmp ne float* %105, null, !dbg !13937
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !13933

if.then167:                                       ; preds = %if.end158
  %vmask168 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !13937
  %106 = load float*, float** %vmask168, align 8, !dbg !13937
  %vert_indices169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !13937
  %107 = load i32*, i32** %vert_indices169, align 8, !dbg !13937
  %gx170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13937
  %108 = load i32, i32* %gx170, align 4, !dbg !13937
  %idxprom171 = sext i32 %108 to i64, !dbg !13937
  %arrayidx172 = getelementptr inbounds i32, i32* %107, i64 %idxprom171, !dbg !13937
  %109 = load i32, i32* %arrayidx172, align 4, !dbg !13937
  %idxprom173 = sext i32 %109 to i64, !dbg !13937
  %arrayidx174 = getelementptr inbounds float, float* %106, i64 %idxprom173, !dbg !13937
  %mask175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13937
  store float* %arrayidx174, float** %mask175, align 8, !dbg !13937
  br label %if.end176, !dbg !13937

if.end176:                                        ; preds = %if.then167, %if.end158
  br label %if.end206, !dbg !13933

if.else177:                                       ; preds = %if.else143
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13939
  %call178 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !13939
  %tobool179 = icmp ne i8 %call178, 0, !dbg !13939
  br i1 %tobool179, label %if.else184, label %if.then180, !dbg !13942

if.then180:                                       ; preds = %if.else177
  %bm_unique_verts181 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13943
  %call182 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts181), !dbg !13943
  %110 = bitcast i8* %call182 to %struct.BMVert*, !dbg !13943
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13943
  store %struct.BMVert* %110, %struct.BMVert** %bm_vert, align 8, !dbg !13943
  %bm_unique_verts183 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !13943
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts183), !dbg !13943
  br label %if.end188, !dbg !13943

if.else184:                                       ; preds = %if.else177
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13945
  %call185 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !13945
  %111 = bitcast i8* %call185 to %struct.BMVert*, !dbg !13945
  %bm_vert186 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13945
  store %struct.BMVert* %111, %struct.BMVert** %bm_vert186, align 8, !dbg !13945
  %bm_other_verts187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !13945
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts187), !dbg !13945
  br label %if.end188

if.end188:                                        ; preds = %if.else184, %if.then180
  %bm_vert189 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13947
  %112 = load %struct.BMVert*, %struct.BMVert** %bm_vert189, align 8, !dbg !13947
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %112, i32 0, i32 0, !dbg !13947
  %call190 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !13947
  %conv191 = zext i8 %call190 to i32, !dbg !13947
  %tobool192 = icmp ne i32 %conv191, 0, !dbg !13947
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !13942

if.then193:                                       ; preds = %if.end188
  br label %for.inc, !dbg !13947

if.end194:                                        ; preds = %if.end188
  %bm_vert195 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13942
  %113 = load %struct.BMVert*, %struct.BMVert** %bm_vert195, align 8, !dbg !13942
  %co196 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %113, i32 0, i32 2, !dbg !13942
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %co196, i64 0, i64 0, !dbg !13942
  %co198 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13942
  store float* %arraydecay197, float** %co198, align 8, !dbg !13942
  %bm_vert199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13942
  %114 = load %struct.BMVert*, %struct.BMVert** %bm_vert199, align 8, !dbg !13942
  %no200 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %114, i32 0, i32 3, !dbg !13942
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %no200, i64 0, i64 0, !dbg !13942
  %fno202 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13942
  store float* %arraydecay201, float** %fno202, align 8, !dbg !13942
  %bm_vert203 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !13942
  %115 = load %struct.BMVert*, %struct.BMVert** %bm_vert203, align 8, !dbg !13942
  %head204 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %115, i32 0, i32 0, !dbg !13942
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head204, i32 0, i32 0, !dbg !13942
  %116 = load i8*, i8** %data, align 8, !dbg !13942
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !13942
  %117 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !13942
  %idx.ext = sext i32 %117 to i64, !dbg !13942
  %add.ptr = getelementptr inbounds i8, i8* %116, i64 %idx.ext, !dbg !13942
  %118 = bitcast i8* %add.ptr to float*, !dbg !13942
  %mask205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13942
  store float* %118, float** %mask205, align 8, !dbg !13942
  br label %if.end206

if.end206:                                        ; preds = %if.end194, %if.end176
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end142
  %co208 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13949
  %119 = load float*, float** %co208, align 8, !dbg !13949
  %arraydecay209 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13952
  %call210 = call zeroext i8 @sculpt_brush_test_cube(%struct.SculptBrushTest* %test, float* %119, [4 x float]* %arraydecay209), !dbg !13953
  %tobool211 = icmp ne i8 %call210, 0, !dbg !13953
  br i1 %tobool211, label %if.then212, label %if.end261, !dbg !13954

if.then212:                                       ; preds = %if.end207
  %co213 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13955
  %120 = load float*, float** %co213, align 8, !dbg !13955
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %sn, i64 0, i64 0, !dbg !13958
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13959
  %121 = load i32, i32* %flip, align 4, !dbg !13960
  %call216 = call i32 @plane_point_side_flip(float* %120, float* %arraydecay214, float* %arraydecay215, i32 %121), !dbg !13961
  %tobool217 = icmp ne i32 %call216, 0, !dbg !13961
  br i1 %tobool217, label %if.then218, label %if.end260, !dbg !13962

if.then218:                                       ; preds = %if.then212
  call void @llvm.dbg.declare(metadata [3 x float]* %intr, metadata !13963, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !13966, metadata !DIExpression()), !dbg !13967
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13968
  %co220 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13969
  %122 = load float*, float** %co220, align 8, !dbg !13969
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %sn, i64 0, i64 0, !dbg !13970
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !13971
  call void @point_plane_project(float* %arraydecay219, float* %122, float* %arraydecay221, float* %arraydecay222), !dbg !13972
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13973
  %arraydecay224 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !13974
  %co225 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13975
  %123 = load float*, float** %co225, align 8, !dbg !13975
  call void @sub_v3_v3v3(float* %arraydecay223, float* %arraydecay224, float* %123), !dbg !13976
  %124 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13977
  %cache226 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %124, i32 0, i32 28, !dbg !13979
  %125 = load %struct.StrokeCache*, %struct.StrokeCache** %cache226, align 8, !dbg !13979
  %126 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13980
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !13981
  %call228 = call i32 @plane_trim(%struct.StrokeCache* %125, %struct.Brush* %126, float* %arraydecay227), !dbg !13982
  %tobool229 = icmp ne i32 %call228, 0, !dbg !13982
  br i1 %tobool229, label %if.then230, label %if.end259, !dbg !13983

if.then230:                                       ; preds = %if.then218
  call void @llvm.dbg.declare(metadata float* %fade, metadata !13984, metadata !DIExpression()), !dbg !13986
  %127 = load float, float* %bstrength, align 4, !dbg !13987
  %128 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13988
  %129 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !13989
  %co231 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !13990
  %130 = load float*, float** %co231, align 8, !dbg !13990
  %131 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13991
  %cache232 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %131, i32 0, i32 28, !dbg !13992
  %132 = load %struct.StrokeCache*, %struct.StrokeCache** %cache232, align 8, !dbg !13992
  %radius233 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %132, i32 0, i32 11, !dbg !13993
  %133 = load float, float* %radius233, align 8, !dbg !13993
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !13994
  %134 = load float, float* %dist, align 8, !dbg !13994
  %mul234 = fmul float %133, %134, !dbg !13995
  %no235 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !13996
  %135 = load i16*, i16** %no235, align 8, !dbg !13996
  %fno236 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !13997
  %136 = load float*, float** %fno236, align 8, !dbg !13997
  %mask237 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !13998
  %137 = load float*, float** %mask237, align 8, !dbg !13998
  %tobool238 = icmp ne float* %137, null, !dbg !13999
  br i1 %tobool238, label %cond.true239, label %cond.false241, !dbg !13999

cond.true239:                                     ; preds = %if.then230
  %mask240 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14000
  %138 = load float*, float** %mask240, align 8, !dbg !14000
  %139 = load float, float* %138, align 4, !dbg !14001
  br label %cond.end242, !dbg !13999

cond.false241:                                    ; preds = %if.then230
  br label %cond.end242, !dbg !13999

cond.end242:                                      ; preds = %cond.false241, %cond.true239
  %cond243 = phi float [ %139, %cond.true239 ], [ 0.000000e+00, %cond.false241 ], !dbg !13999
  %call244 = call float @tex_strength(%struct.SculptSession* %128, %struct.Brush* %129, float* %130, float %mul234, i16* %135, float* %136, float %cond243), !dbg !14002
  %mul245 = fmul float %127, %call244, !dbg !14003
  store float %mul245, float* %fade, align 4, !dbg !13986
  %140 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !14004
  %i246 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14005
  %141 = load i32, i32* %i246, align 4, !dbg !14005
  %idxprom247 = sext i32 %141 to i64, !dbg !14004
  %arrayidx248 = getelementptr inbounds [3 x float], [3 x float]* %140, i64 %idxprom247, !dbg !14004
  %arraydecay249 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx248, i64 0, i64 0, !dbg !14004
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14006
  %142 = load float, float* %fade, align 4, !dbg !14007
  call void @mul_v3_v3fl(float* %arraydecay249, float* %arraydecay250, float %142), !dbg !14008
  %mvert251 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14009
  %143 = load %struct.MVert*, %struct.MVert** %mvert251, align 8, !dbg !14009
  %tobool252 = icmp ne %struct.MVert* %143, null, !dbg !14011
  br i1 %tobool252, label %if.then253, label %if.end258, !dbg !14012

if.then253:                                       ; preds = %cond.end242
  %mvert254 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14013
  %144 = load %struct.MVert*, %struct.MVert** %mvert254, align 8, !dbg !14013
  %flag255 = getelementptr inbounds %struct.MVert, %struct.MVert* %144, i32 0, i32 2, !dbg !14014
  %145 = load i8, i8* %flag255, align 2, !dbg !14015
  %conv256 = zext i8 %145 to i32, !dbg !14015
  %or = or i32 %conv256, 128, !dbg !14015
  %conv257 = trunc i32 %or to i8, !dbg !14015
  store i8 %conv257, i8* %flag255, align 2, !dbg !14015
  br label %if.end258, !dbg !14016

if.end258:                                        ; preds = %if.then253, %cond.end242
  br label %if.end259, !dbg !14017

if.end259:                                        ; preds = %if.end258, %if.then218
  br label %if.end260, !dbg !14018

if.end260:                                        ; preds = %if.end259, %if.then212
  br label %if.end261, !dbg !14019

if.end261:                                        ; preds = %if.end260, %if.end207
  br label %for.inc, !dbg !14020

for.inc:                                          ; preds = %if.end261, %if.then193, %if.then157, %if.then140
  %gx262 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !13917
  %146 = load i32, i32* %gx262, align 4, !dbg !13917
  %inc = add nsw i32 %146, 1, !dbg !13917
  store i32 %inc, i32* %gx262, align 4, !dbg !13917
  %i263 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !13917
  %147 = load i32, i32* %i263, align 4, !dbg !13917
  %inc264 = add nsw i32 %147, 1, !dbg !13917
  store i32 %inc264, i32* %i263, align 4, !dbg !13917
  br label %for.cond97, !dbg !13917, !llvm.loop !14021

for.end:                                          ; preds = %for.cond97
  br label %for.inc265, !dbg !14023

for.inc265:                                       ; preds = %for.end
  %gy266 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !13912
  %148 = load i32, i32* %gy266, align 8, !dbg !13912
  %inc267 = add nsw i32 %148, 1, !dbg !13912
  store i32 %inc267, i32* %gy266, align 8, !dbg !13912
  br label %for.cond91, !dbg !13912, !llvm.loop !14024

for.end268:                                       ; preds = %for.cond91
  br label %for.inc269, !dbg !14026

for.inc269:                                       ; preds = %for.end268
  %g270 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !13898
  %149 = load i32, i32* %g270, align 8, !dbg !13898
  %inc271 = add nsw i32 %149, 1, !dbg !13898
  store i32 %inc271, i32* %g270, align 8, !dbg !13898
  br label %for.cond67, !dbg !13898, !llvm.loop !14027

for.end272:                                       ; preds = %for.cond67
  br label %for.inc273, !dbg !14029

for.inc273:                                       ; preds = %for.end272
  %150 = load i32, i32* %n, align 4, !dbg !14030
  %inc274 = add nsw i32 %150, 1, !dbg !14030
  store i32 %inc274, i32* %n, align 4, !dbg !14030
  br label %for.cond, !dbg !14031, !llvm.loop !14032

for.end275:                                       ; preds = %if.then11, %for.cond
  ret void, !dbg !14034
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_fill_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !14035 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %radius = alloca float, align 4
  %an = alloca [3 x float], align 4
  %fc = alloca [3 x float], align 4
  %offset = alloca float, align 4
  %displace = alloca float, align 4
  %n = alloca i32, align 4
  %temp = alloca [3 x float], align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %intr = alloca [3 x float], align 4
  %val = alloca [3 x float], align 4
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14036, metadata !DIExpression()), !dbg !14037
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14038, metadata !DIExpression()), !dbg !14039
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14040, metadata !DIExpression()), !dbg !14041
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14042, metadata !DIExpression()), !dbg !14043
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14044, metadata !DIExpression()), !dbg !14045
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14046
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !14047
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14047
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !14045
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14048, metadata !DIExpression()), !dbg !14049
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14050
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !14051
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14052
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14049
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !14053, metadata !DIExpression()), !dbg !14054
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14055
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !14056
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14056
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !14057
  %5 = load float, float* %bstrength1, align 8, !dbg !14057
  store float %5, float* %bstrength, align 4, !dbg !14054
  call void @llvm.dbg.declare(metadata float* %radius, metadata !14058, metadata !DIExpression()), !dbg !14059
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14060
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !14061
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !14061
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 11, !dbg !14062
  %8 = load float, float* %radius3, align 8, !dbg !14062
  store float %8, float* %radius, align 4, !dbg !14059
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !14063, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.declare(metadata [3 x float]* %fc, metadata !14065, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.declare(metadata float* %offset, metadata !14067, metadata !DIExpression()), !dbg !14068
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14069
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14070
  %call4 = call float @get_offset(%struct.Sculpt* %9, %struct.SculptSession* %10), !dbg !14071
  store float %call4, float* %offset, align 4, !dbg !14068
  call void @llvm.dbg.declare(metadata float* %displace, metadata !14072, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14074, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !14076, metadata !DIExpression()), !dbg !14077
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14078
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14079
  %13 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14080
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !14081
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14082
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14083
  call void @calc_sculpt_plane(%struct.Sculpt* %11, %struct.Object* %12, %struct.PBVHNode** %13, i32 %14, float* %arraydecay, float* %arraydecay5), !dbg !14084
  %15 = load float, float* %radius, align 4, !dbg !14085
  %16 = load float, float* %offset, align 4, !dbg !14086
  %mul = fmul float %15, %16, !dbg !14087
  store float %mul, float* %displace, align 4, !dbg !14088
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14089
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14090
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14091
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !14092
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !14092
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 1, !dbg !14093
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !14091
  call void @mul_v3_v3v3(float* %arraydecay6, float* %arraydecay7, float* %arraydecay9), !dbg !14094
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14095
  %19 = load float, float* %displace, align 4, !dbg !14096
  call void @mul_v3_fl(float* %arraydecay10, float %19), !dbg !14097
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14098
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14099
  call void @add_v3_v3(float* %arraydecay11, float* %arraydecay12), !dbg !14100
  store i32 0, i32* %n, align 4, !dbg !14101
  br label %for.cond, !dbg !14103

for.cond:                                         ; preds = %for.inc209, %entry
  %20 = load i32, i32* %n, align 4, !dbg !14104
  %21 = load i32, i32* %totnode.addr, align 4, !dbg !14106
  %cmp = icmp slt i32 %20, %21, !dbg !14107
  br i1 %cmp, label %for.body, label %for.end211, !dbg !14108

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !14109, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !14112, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !14114, metadata !DIExpression()), !dbg !14115
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14116
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 15, !dbg !14117
  %23 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14117
  %24 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14118
  %25 = load i32, i32* %n, align 4, !dbg !14119
  %idxprom = sext i32 %25 to i64, !dbg !14118
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %24, i64 %idxprom, !dbg !14118
  %26 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !14118
  %call13 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %23, %struct.PBVHNode* %26), !dbg !14120
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call13, i32 0, i32 0, !dbg !14121
  %27 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !14121
  store [3 x float]* %27, [3 x float]** %proxy, align 8, !dbg !14122
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14123
  call void @sculpt_brush_test_init(%struct.SculptSession* %28, %struct.SculptBrushTest* %test), !dbg !14124
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14125
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 15, !dbg !14125
  %30 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !14125
  %31 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14125
  %32 = load i32, i32* %n, align 4, !dbg !14125
  %idxprom15 = sext i32 %32 to i64, !dbg !14125
  %arrayidx16 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %31, i64 %idxprom15, !dbg !14125
  %33 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx16, align 8, !dbg !14125
  call void @pbvh_vertex_iter_init(%struct.PBVH* %30, %struct.PBVHNode* %33, %struct.PBVHVertexIter* %vd, i32 1), !dbg !14125
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14126
  store i32 0, i32* %i, align 4, !dbg !14126
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14126
  store i32 0, i32* %g, align 8, !dbg !14126
  br label %for.cond17, !dbg !14126

for.cond17:                                       ; preds = %for.inc205, %for.body
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14128
  %34 = load i32, i32* %g18, align 8, !dbg !14128
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !14128
  %35 = load i32, i32* %totgrid, align 8, !dbg !14128
  %cmp19 = icmp slt i32 %34, %35, !dbg !14128
  br i1 %cmp19, label %for.body20, label %for.end208, !dbg !14126

for.body20:                                       ; preds = %for.cond17
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14130
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !14130
  %tobool = icmp ne %struct.CCGElem** %36, null, !dbg !14130
  br i1 %tobool, label %if.then, label %if.else, !dbg !14133

if.then:                                          ; preds = %for.body20
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14134
  %37 = load i32, i32* %gridsize, align 4, !dbg !14134
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14134
  store i32 %37, i32* %width, align 4, !dbg !14134
  %gridsize21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14134
  %38 = load i32, i32* %gridsize21, align 4, !dbg !14134
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14134
  store i32 %38, i32* %height, align 8, !dbg !14134
  %grids22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14134
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids22, align 8, !dbg !14134
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14134
  %40 = load i32*, i32** %grid_indices, align 8, !dbg !14134
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14134
  %41 = load i32, i32* %g23, align 8, !dbg !14134
  %idxprom24 = sext i32 %41 to i64, !dbg !14134
  %arrayidx25 = getelementptr inbounds i32, i32* %40, i64 %idxprom24, !dbg !14134
  %42 = load i32, i32* %arrayidx25, align 4, !dbg !14134
  %idxprom26 = sext i32 %42 to i64, !dbg !14134
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %39, i64 %idxprom26, !dbg !14134
  %43 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !14134
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14134
  store %struct.CCGElem* %43, %struct.CCGElem** %grid, align 8, !dbg !14134
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !14136
  %44 = load i32**, i32*** %grid_hidden, align 8, !dbg !14136
  %grid_indices28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14136
  %45 = load i32*, i32** %grid_indices28, align 8, !dbg !14136
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14136
  %46 = load i32, i32* %g29, align 8, !dbg !14136
  %idxprom30 = sext i32 %46 to i64, !dbg !14136
  %arrayidx31 = getelementptr inbounds i32, i32* %45, i64 %idxprom30, !dbg !14136
  %47 = load i32, i32* %arrayidx31, align 4, !dbg !14136
  %idxprom32 = sext i32 %47 to i64, !dbg !14136
  %arrayidx33 = getelementptr inbounds i32*, i32** %44, i64 %idxprom32, !dbg !14136
  %48 = load i32*, i32** %arrayidx33, align 8, !dbg !14136
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14136
  store i32* %48, i32** %gh, align 8, !dbg !14136
  br label %if.end, !dbg !14134

if.else:                                          ; preds = %for.body20
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !14138
  %49 = load i32, i32* %totvert, align 8, !dbg !14138
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14138
  store i32 %49, i32* %width34, align 4, !dbg !14138
  %height35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14138
  store i32 1, i32* %height35, align 8, !dbg !14138
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14140
  store i32 0, i32* %gy, align 8, !dbg !14140
  br label %for.cond36, !dbg !14140

for.cond36:                                       ; preds = %for.inc201, %if.end
  %gy37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14142
  %50 = load i32, i32* %gy37, align 8, !dbg !14142
  %height38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14142
  %51 = load i32, i32* %height38, align 8, !dbg !14142
  %cmp39 = icmp slt i32 %50, %51, !dbg !14142
  br i1 %cmp39, label %for.body40, label %for.end204, !dbg !14140

for.body40:                                       ; preds = %for.cond36
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14144
  store i32 0, i32* %gx, align 4, !dbg !14144
  br label %for.cond41, !dbg !14144

for.cond41:                                       ; preds = %for.inc, %for.body40
  %gx42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14147
  %52 = load i32, i32* %gx42, align 4, !dbg !14147
  %width43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14147
  %53 = load i32, i32* %width43, align 4, !dbg !14147
  %cmp44 = icmp slt i32 %52, %53, !dbg !14147
  br i1 %cmp44, label %for.body45, label %for.end, !dbg !14144

for.body45:                                       ; preds = %for.cond41
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14149
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !14149
  %tobool47 = icmp ne %struct.CCGElem* %54, null, !dbg !14149
  br i1 %tobool47, label %if.then48, label %if.else84, !dbg !14152

if.then48:                                        ; preds = %for.body45
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14153
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !14153
  %grid49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14153
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid49, align 8, !dbg !14153
  %call50 = call float* @CCG_elem_co(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !14153
  %co51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14153
  store float* %call50, float** %co51, align 8, !dbg !14153
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14153
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !14153
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14153
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !14153
  %call54 = call float* @CCG_elem_no(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !14153
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14153
  store float* %call54, float** %fno, align 8, !dbg !14153
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14153
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !14153
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %59, i32 0, i32 9, !dbg !14153
  %60 = load i32, i32* %has_mask, align 4, !dbg !14153
  %tobool56 = icmp ne i32 %60, 0, !dbg !14153
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !14153

cond.true:                                        ; preds = %if.then48
  %key57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14153
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key57, align 8, !dbg !14153
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14153
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !14153
  %call59 = call float* @CCG_elem_mask(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !14153
  br label %cond.end, !dbg !14153

cond.false:                                       ; preds = %if.then48
  br label %cond.end, !dbg !14153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call59, %cond.true ], [ null, %cond.false ], !dbg !14153
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14153
  store float* %cond, float** %mask, align 8, !dbg !14153
  %key60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14153
  %63 = load %struct.CCGKey*, %struct.CCGKey** %key60, align 8, !dbg !14153
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14153
  %64 = load %struct.CCGElem*, %struct.CCGElem** %grid61, align 8, !dbg !14153
  %call62 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %63, %struct.CCGElem* %64), !dbg !14153
  %grid63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14153
  store %struct.CCGElem* %call62, %struct.CCGElem** %grid63, align 8, !dbg !14153
  %gh64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14155
  %65 = load i32*, i32** %gh64, align 8, !dbg !14155
  %tobool65 = icmp ne i32* %65, null, !dbg !14155
  br i1 %tobool65, label %if.then66, label %if.end83, !dbg !14153

if.then66:                                        ; preds = %cond.end
  %gh67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14157
  %66 = load i32*, i32** %gh67, align 8, !dbg !14157
  %gy68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14157
  %67 = load i32, i32* %gy68, align 8, !dbg !14157
  %gridsize69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14157
  %68 = load i32, i32* %gridsize69, align 4, !dbg !14157
  %mul70 = mul nsw i32 %67, %68, !dbg !14157
  %gx71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14157
  %69 = load i32, i32* %gx71, align 4, !dbg !14157
  %add = add nsw i32 %mul70, %69, !dbg !14157
  %shr = ashr i32 %add, 5, !dbg !14157
  %idxprom72 = sext i32 %shr to i64, !dbg !14157
  %arrayidx73 = getelementptr inbounds i32, i32* %66, i64 %idxprom72, !dbg !14157
  %70 = load i32, i32* %arrayidx73, align 4, !dbg !14157
  %gy74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14157
  %71 = load i32, i32* %gy74, align 8, !dbg !14157
  %gridsize75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14157
  %72 = load i32, i32* %gridsize75, align 4, !dbg !14157
  %mul76 = mul nsw i32 %71, %72, !dbg !14157
  %gx77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14157
  %73 = load i32, i32* %gx77, align 4, !dbg !14157
  %add78 = add nsw i32 %mul76, %73, !dbg !14157
  %and = and i32 %add78, 31, !dbg !14157
  %shl = shl i32 1, %and, !dbg !14157
  %and79 = and i32 %70, %shl, !dbg !14157
  %tobool80 = icmp ne i32 %and79, 0, !dbg !14157
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !14160

if.then81:                                        ; preds = %if.then66
  br label %for.inc, !dbg !14157

if.end82:                                         ; preds = %if.then66
  br label %if.end83, !dbg !14160

if.end83:                                         ; preds = %if.end82, %cond.end
  br label %if.end146, !dbg !14153

if.else84:                                        ; preds = %for.body45
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14161
  %74 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !14161
  %tobool85 = icmp ne %struct.MVert* %74, null, !dbg !14161
  br i1 %tobool85, label %if.then86, label %if.else116, !dbg !14149

if.then86:                                        ; preds = %if.else84
  %mverts87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14163
  %75 = load %struct.MVert*, %struct.MVert** %mverts87, align 8, !dbg !14163
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14163
  %76 = load i32*, i32** %vert_indices, align 8, !dbg !14163
  %gx88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14163
  %77 = load i32, i32* %gx88, align 4, !dbg !14163
  %idxprom89 = sext i32 %77 to i64, !dbg !14163
  %arrayidx90 = getelementptr inbounds i32, i32* %76, i64 %idxprom89, !dbg !14163
  %78 = load i32, i32* %arrayidx90, align 4, !dbg !14163
  %idxprom91 = sext i32 %78 to i64, !dbg !14163
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom91, !dbg !14163
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14163
  store %struct.MVert* %arrayidx92, %struct.MVert** %mvert, align 8, !dbg !14163
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14165
  %79 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !14165
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 2, !dbg !14165
  %80 = load i8, i8* %flag, align 2, !dbg !14165
  %conv = zext i8 %80 to i32, !dbg !14165
  %and94 = and i32 %conv, 16, !dbg !14165
  %tobool95 = icmp ne i32 %and94, 0, !dbg !14165
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !14163

if.then96:                                        ; preds = %if.then86
  br label %for.inc, !dbg !14165

if.end97:                                         ; preds = %if.then86
  %mvert98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14163
  %81 = load %struct.MVert*, %struct.MVert** %mvert98, align 8, !dbg !14163
  %co99 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 0, !dbg !14163
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %co99, i64 0, i64 0, !dbg !14163
  %co101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14163
  store float* %arraydecay100, float** %co101, align 8, !dbg !14163
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14163
  %82 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !14163
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 1, !dbg !14163
  %arraydecay103 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !14163
  %no104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14163
  store i16* %arraydecay103, i16** %no104, align 8, !dbg !14163
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14167
  %83 = load float*, float** %vmask, align 8, !dbg !14167
  %tobool105 = icmp ne float* %83, null, !dbg !14167
  br i1 %tobool105, label %if.then106, label %if.end115, !dbg !14163

if.then106:                                       ; preds = %if.end97
  %vmask107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14167
  %84 = load float*, float** %vmask107, align 8, !dbg !14167
  %vert_indices108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14167
  %85 = load i32*, i32** %vert_indices108, align 8, !dbg !14167
  %gx109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14167
  %86 = load i32, i32* %gx109, align 4, !dbg !14167
  %idxprom110 = sext i32 %86 to i64, !dbg !14167
  %arrayidx111 = getelementptr inbounds i32, i32* %85, i64 %idxprom110, !dbg !14167
  %87 = load i32, i32* %arrayidx111, align 4, !dbg !14167
  %idxprom112 = sext i32 %87 to i64, !dbg !14167
  %arrayidx113 = getelementptr inbounds float, float* %84, i64 %idxprom112, !dbg !14167
  %mask114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14167
  store float* %arrayidx113, float** %mask114, align 8, !dbg !14167
  br label %if.end115, !dbg !14167

if.end115:                                        ; preds = %if.then106, %if.end97
  br label %if.end145, !dbg !14163

if.else116:                                       ; preds = %if.else84
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14169
  %call117 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !14169
  %tobool118 = icmp ne i8 %call117, 0, !dbg !14169
  br i1 %tobool118, label %if.else123, label %if.then119, !dbg !14172

if.then119:                                       ; preds = %if.else116
  %bm_unique_verts120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14173
  %call121 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts120), !dbg !14173
  %88 = bitcast i8* %call121 to %struct.BMVert*, !dbg !14173
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14173
  store %struct.BMVert* %88, %struct.BMVert** %bm_vert, align 8, !dbg !14173
  %bm_unique_verts122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14173
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts122), !dbg !14173
  br label %if.end127, !dbg !14173

if.else123:                                       ; preds = %if.else116
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14175
  %call124 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !14175
  %89 = bitcast i8* %call124 to %struct.BMVert*, !dbg !14175
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14175
  store %struct.BMVert* %89, %struct.BMVert** %bm_vert125, align 8, !dbg !14175
  %bm_other_verts126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14175
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts126), !dbg !14175
  br label %if.end127

if.end127:                                        ; preds = %if.else123, %if.then119
  %bm_vert128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14177
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert128, align 8, !dbg !14177
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !14177
  %call129 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !14177
  %conv130 = zext i8 %call129 to i32, !dbg !14177
  %tobool131 = icmp ne i32 %conv130, 0, !dbg !14177
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !14172

if.then132:                                       ; preds = %if.end127
  br label %for.inc, !dbg !14177

if.end133:                                        ; preds = %if.end127
  %bm_vert134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14172
  %91 = load %struct.BMVert*, %struct.BMVert** %bm_vert134, align 8, !dbg !14172
  %co135 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 2, !dbg !14172
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !14172
  %co137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14172
  store float* %arraydecay136, float** %co137, align 8, !dbg !14172
  %bm_vert138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14172
  %92 = load %struct.BMVert*, %struct.BMVert** %bm_vert138, align 8, !dbg !14172
  %no139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %92, i32 0, i32 3, !dbg !14172
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %no139, i64 0, i64 0, !dbg !14172
  %fno141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14172
  store float* %arraydecay140, float** %fno141, align 8, !dbg !14172
  %bm_vert142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14172
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert142, align 8, !dbg !14172
  %head143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !14172
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head143, i32 0, i32 0, !dbg !14172
  %94 = load i8*, i8** %data, align 8, !dbg !14172
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !14172
  %95 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !14172
  %idx.ext = sext i32 %95 to i64, !dbg !14172
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext, !dbg !14172
  %96 = bitcast i8* %add.ptr to float*, !dbg !14172
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14172
  store float* %96, float** %mask144, align 8, !dbg !14172
  br label %if.end145

if.end145:                                        ; preds = %if.end133, %if.end115
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end83
  %co147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14179
  %97 = load float*, float** %co147, align 8, !dbg !14179
  %call148 = call zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %97), !dbg !14182
  %tobool149 = icmp ne i8 %call148, 0, !dbg !14182
  br i1 %tobool149, label %if.then150, label %if.end197, !dbg !14183

if.then150:                                       ; preds = %if.end146
  %co151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14184
  %98 = load float*, float** %co151, align 8, !dbg !14184
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14187
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14188
  %call154 = call i32 @plane_point_side(float* %98, float* %arraydecay152, float* %arraydecay153), !dbg !14189
  %tobool155 = icmp ne i32 %call154, 0, !dbg !14189
  br i1 %tobool155, label %if.then156, label %if.end196, !dbg !14190

if.then156:                                       ; preds = %if.then150
  call void @llvm.dbg.declare(metadata [3 x float]* %intr, metadata !14191, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !14194, metadata !DIExpression()), !dbg !14195
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !14196
  %co158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14197
  %99 = load float*, float** %co158, align 8, !dbg !14197
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14198
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14199
  call void @point_plane_project(float* %arraydecay157, float* %99, float* %arraydecay159, float* %arraydecay160), !dbg !14200
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14201
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !14202
  %co163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14203
  %100 = load float*, float** %co163, align 8, !dbg !14203
  call void @sub_v3_v3v3(float* %arraydecay161, float* %arraydecay162, float* %100), !dbg !14204
  %101 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14205
  %cache164 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %101, i32 0, i32 28, !dbg !14207
  %102 = load %struct.StrokeCache*, %struct.StrokeCache** %cache164, align 8, !dbg !14207
  %103 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14208
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14209
  %call166 = call i32 @plane_trim(%struct.StrokeCache* %102, %struct.Brush* %103, float* %arraydecay165), !dbg !14210
  %tobool167 = icmp ne i32 %call166, 0, !dbg !14210
  br i1 %tobool167, label %if.then168, label %if.end195, !dbg !14211

if.then168:                                       ; preds = %if.then156
  call void @llvm.dbg.declare(metadata float* %fade, metadata !14212, metadata !DIExpression()), !dbg !14214
  %104 = load float, float* %bstrength, align 4, !dbg !14215
  %105 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14216
  %106 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14217
  %co169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14218
  %107 = load float*, float** %co169, align 8, !dbg !14218
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !14219
  %108 = load float, float* %dist, align 8, !dbg !14219
  %call170 = call float @sqrtf(float %108) #5, !dbg !14220
  %no171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14221
  %109 = load i16*, i16** %no171, align 8, !dbg !14221
  %fno172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14222
  %110 = load float*, float** %fno172, align 8, !dbg !14222
  %mask173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14223
  %111 = load float*, float** %mask173, align 8, !dbg !14223
  %tobool174 = icmp ne float* %111, null, !dbg !14224
  br i1 %tobool174, label %cond.true175, label %cond.false177, !dbg !14224

cond.true175:                                     ; preds = %if.then168
  %mask176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14225
  %112 = load float*, float** %mask176, align 8, !dbg !14225
  %113 = load float, float* %112, align 4, !dbg !14226
  br label %cond.end178, !dbg !14224

cond.false177:                                    ; preds = %if.then168
  br label %cond.end178, !dbg !14224

cond.end178:                                      ; preds = %cond.false177, %cond.true175
  %cond179 = phi float [ %113, %cond.true175 ], [ 0.000000e+00, %cond.false177 ], !dbg !14224
  %call180 = call float @tex_strength(%struct.SculptSession* %105, %struct.Brush* %106, float* %107, float %call170, i16* %109, float* %110, float %cond179), !dbg !14227
  %mul181 = fmul float %104, %call180, !dbg !14228
  store float %mul181, float* %fade, align 4, !dbg !14214
  %114 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !14229
  %i182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14230
  %115 = load i32, i32* %i182, align 4, !dbg !14230
  %idxprom183 = sext i32 %115 to i64, !dbg !14229
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %114, i64 %idxprom183, !dbg !14229
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !14229
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14231
  %116 = load float, float* %fade, align 4, !dbg !14232
  call void @mul_v3_v3fl(float* %arraydecay185, float* %arraydecay186, float %116), !dbg !14233
  %mvert187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14234
  %117 = load %struct.MVert*, %struct.MVert** %mvert187, align 8, !dbg !14234
  %tobool188 = icmp ne %struct.MVert* %117, null, !dbg !14236
  br i1 %tobool188, label %if.then189, label %if.end194, !dbg !14237

if.then189:                                       ; preds = %cond.end178
  %mvert190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14238
  %118 = load %struct.MVert*, %struct.MVert** %mvert190, align 8, !dbg !14238
  %flag191 = getelementptr inbounds %struct.MVert, %struct.MVert* %118, i32 0, i32 2, !dbg !14239
  %119 = load i8, i8* %flag191, align 2, !dbg !14240
  %conv192 = zext i8 %119 to i32, !dbg !14240
  %or = or i32 %conv192, 128, !dbg !14240
  %conv193 = trunc i32 %or to i8, !dbg !14240
  store i8 %conv193, i8* %flag191, align 2, !dbg !14240
  br label %if.end194, !dbg !14241

if.end194:                                        ; preds = %if.then189, %cond.end178
  br label %if.end195, !dbg !14242

if.end195:                                        ; preds = %if.end194, %if.then156
  br label %if.end196, !dbg !14243

if.end196:                                        ; preds = %if.end195, %if.then150
  br label %if.end197, !dbg !14244

if.end197:                                        ; preds = %if.end196, %if.end146
  br label %for.inc, !dbg !14245

for.inc:                                          ; preds = %if.end197, %if.then132, %if.then96, %if.then81
  %gx198 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14147
  %120 = load i32, i32* %gx198, align 4, !dbg !14147
  %inc = add nsw i32 %120, 1, !dbg !14147
  store i32 %inc, i32* %gx198, align 4, !dbg !14147
  %i199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14147
  %121 = load i32, i32* %i199, align 4, !dbg !14147
  %inc200 = add nsw i32 %121, 1, !dbg !14147
  store i32 %inc200, i32* %i199, align 4, !dbg !14147
  br label %for.cond41, !dbg !14147, !llvm.loop !14246

for.end:                                          ; preds = %for.cond41
  br label %for.inc201, !dbg !14248

for.inc201:                                       ; preds = %for.end
  %gy202 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14142
  %122 = load i32, i32* %gy202, align 8, !dbg !14142
  %inc203 = add nsw i32 %122, 1, !dbg !14142
  store i32 %inc203, i32* %gy202, align 8, !dbg !14142
  br label %for.cond36, !dbg !14142, !llvm.loop !14249

for.end204:                                       ; preds = %for.cond36
  br label %for.inc205, !dbg !14251

for.inc205:                                       ; preds = %for.end204
  %g206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14128
  %123 = load i32, i32* %g206, align 8, !dbg !14128
  %inc207 = add nsw i32 %123, 1, !dbg !14128
  store i32 %inc207, i32* %g206, align 8, !dbg !14128
  br label %for.cond17, !dbg !14128, !llvm.loop !14252

for.end208:                                       ; preds = %for.cond17
  br label %for.inc209, !dbg !14254

for.inc209:                                       ; preds = %for.end208
  %124 = load i32, i32* %n, align 4, !dbg !14255
  %inc210 = add nsw i32 %124, 1, !dbg !14255
  store i32 %inc210, i32* %n, align 4, !dbg !14255
  br label %for.cond, !dbg !14256, !llvm.loop !14257

for.end211:                                       ; preds = %for.cond
  ret void, !dbg !14259
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_scrape_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !14260 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %radius = alloca float, align 4
  %an = alloca [3 x float], align 4
  %fc = alloca [3 x float], align 4
  %offset = alloca float, align 4
  %displace = alloca float, align 4
  %n = alloca i32, align 4
  %temp = alloca [3 x float], align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %intr = alloca [3 x float], align 4
  %val = alloca [3 x float], align 4
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14261, metadata !DIExpression()), !dbg !14262
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14263, metadata !DIExpression()), !dbg !14264
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14265, metadata !DIExpression()), !dbg !14266
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14267, metadata !DIExpression()), !dbg !14268
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14269, metadata !DIExpression()), !dbg !14270
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14271
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !14272
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14272
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !14270
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14273, metadata !DIExpression()), !dbg !14274
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14275
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !14276
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14277
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14274
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !14278, metadata !DIExpression()), !dbg !14279
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14280
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !14281
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14281
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !14282
  %5 = load float, float* %bstrength1, align 8, !dbg !14282
  store float %5, float* %bstrength, align 4, !dbg !14279
  call void @llvm.dbg.declare(metadata float* %radius, metadata !14283, metadata !DIExpression()), !dbg !14284
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14285
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !14286
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !14286
  %radius3 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 11, !dbg !14287
  %8 = load float, float* %radius3, align 8, !dbg !14287
  store float %8, float* %radius, align 4, !dbg !14284
  call void @llvm.dbg.declare(metadata [3 x float]* %an, metadata !14288, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.declare(metadata [3 x float]* %fc, metadata !14290, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.declare(metadata float* %offset, metadata !14292, metadata !DIExpression()), !dbg !14293
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14294
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14295
  %call4 = call float @get_offset(%struct.Sculpt* %9, %struct.SculptSession* %10), !dbg !14296
  store float %call4, float* %offset, align 4, !dbg !14293
  call void @llvm.dbg.declare(metadata float* %displace, metadata !14297, metadata !DIExpression()), !dbg !14298
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14299, metadata !DIExpression()), !dbg !14300
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !14301, metadata !DIExpression()), !dbg !14302
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14303
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14304
  %13 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14305
  %14 = load i32, i32* %totnode.addr, align 4, !dbg !14306
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14307
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14308
  call void @calc_sculpt_plane(%struct.Sculpt* %11, %struct.Object* %12, %struct.PBVHNode** %13, i32 %14, float* %arraydecay, float* %arraydecay5), !dbg !14309
  %15 = load float, float* %radius, align 4, !dbg !14310
  %fneg = fneg float %15, !dbg !14311
  %16 = load float, float* %offset, align 4, !dbg !14312
  %mul = fmul float %fneg, %16, !dbg !14313
  store float %mul, float* %displace, align 4, !dbg !14314
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14315
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14316
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14317
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !14318
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !14318
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 1, !dbg !14319
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !14317
  call void @mul_v3_v3v3(float* %arraydecay6, float* %arraydecay7, float* %arraydecay9), !dbg !14320
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14321
  %19 = load float, float* %displace, align 4, !dbg !14322
  call void @mul_v3_fl(float* %arraydecay10, float %19), !dbg !14323
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14324
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14325
  call void @add_v3_v3(float* %arraydecay11, float* %arraydecay12), !dbg !14326
  store i32 0, i32* %n, align 4, !dbg !14327
  br label %for.cond, !dbg !14329

for.cond:                                         ; preds = %for.inc209, %entry
  %20 = load i32, i32* %n, align 4, !dbg !14330
  %21 = load i32, i32* %totnode.addr, align 4, !dbg !14332
  %cmp = icmp slt i32 %20, %21, !dbg !14333
  br i1 %cmp, label %for.body, label %for.end211, !dbg !14334

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !14335, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !14338, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !14340, metadata !DIExpression()), !dbg !14341
  %22 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14342
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %22, i32 0, i32 15, !dbg !14343
  %23 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14343
  %24 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14344
  %25 = load i32, i32* %n, align 4, !dbg !14345
  %idxprom = sext i32 %25 to i64, !dbg !14344
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %24, i64 %idxprom, !dbg !14344
  %26 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !14344
  %call13 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %23, %struct.PBVHNode* %26), !dbg !14346
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call13, i32 0, i32 0, !dbg !14347
  %27 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !14347
  store [3 x float]* %27, [3 x float]** %proxy, align 8, !dbg !14348
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14349
  call void @sculpt_brush_test_init(%struct.SculptSession* %28, %struct.SculptBrushTest* %test), !dbg !14350
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14351
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 15, !dbg !14351
  %30 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !14351
  %31 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14351
  %32 = load i32, i32* %n, align 4, !dbg !14351
  %idxprom15 = sext i32 %32 to i64, !dbg !14351
  %arrayidx16 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %31, i64 %idxprom15, !dbg !14351
  %33 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx16, align 8, !dbg !14351
  call void @pbvh_vertex_iter_init(%struct.PBVH* %30, %struct.PBVHNode* %33, %struct.PBVHVertexIter* %vd, i32 1), !dbg !14351
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14352
  store i32 0, i32* %i, align 4, !dbg !14352
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14352
  store i32 0, i32* %g, align 8, !dbg !14352
  br label %for.cond17, !dbg !14352

for.cond17:                                       ; preds = %for.inc205, %for.body
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14354
  %34 = load i32, i32* %g18, align 8, !dbg !14354
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !14354
  %35 = load i32, i32* %totgrid, align 8, !dbg !14354
  %cmp19 = icmp slt i32 %34, %35, !dbg !14354
  br i1 %cmp19, label %for.body20, label %for.end208, !dbg !14352

for.body20:                                       ; preds = %for.cond17
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14356
  %36 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !14356
  %tobool = icmp ne %struct.CCGElem** %36, null, !dbg !14356
  br i1 %tobool, label %if.then, label %if.else, !dbg !14359

if.then:                                          ; preds = %for.body20
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14360
  %37 = load i32, i32* %gridsize, align 4, !dbg !14360
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14360
  store i32 %37, i32* %width, align 4, !dbg !14360
  %gridsize21 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14360
  %38 = load i32, i32* %gridsize21, align 4, !dbg !14360
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14360
  store i32 %38, i32* %height, align 8, !dbg !14360
  %grids22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14360
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %grids22, align 8, !dbg !14360
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14360
  %40 = load i32*, i32** %grid_indices, align 8, !dbg !14360
  %g23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14360
  %41 = load i32, i32* %g23, align 8, !dbg !14360
  %idxprom24 = sext i32 %41 to i64, !dbg !14360
  %arrayidx25 = getelementptr inbounds i32, i32* %40, i64 %idxprom24, !dbg !14360
  %42 = load i32, i32* %arrayidx25, align 4, !dbg !14360
  %idxprom26 = sext i32 %42 to i64, !dbg !14360
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %39, i64 %idxprom26, !dbg !14360
  %43 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !14360
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14360
  store %struct.CCGElem* %43, %struct.CCGElem** %grid, align 8, !dbg !14360
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !14362
  %44 = load i32**, i32*** %grid_hidden, align 8, !dbg !14362
  %grid_indices28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14362
  %45 = load i32*, i32** %grid_indices28, align 8, !dbg !14362
  %g29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14362
  %46 = load i32, i32* %g29, align 8, !dbg !14362
  %idxprom30 = sext i32 %46 to i64, !dbg !14362
  %arrayidx31 = getelementptr inbounds i32, i32* %45, i64 %idxprom30, !dbg !14362
  %47 = load i32, i32* %arrayidx31, align 4, !dbg !14362
  %idxprom32 = sext i32 %47 to i64, !dbg !14362
  %arrayidx33 = getelementptr inbounds i32*, i32** %44, i64 %idxprom32, !dbg !14362
  %48 = load i32*, i32** %arrayidx33, align 8, !dbg !14362
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14362
  store i32* %48, i32** %gh, align 8, !dbg !14362
  br label %if.end, !dbg !14360

if.else:                                          ; preds = %for.body20
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !14364
  %49 = load i32, i32* %totvert, align 8, !dbg !14364
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14364
  store i32 %49, i32* %width34, align 4, !dbg !14364
  %height35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14364
  store i32 1, i32* %height35, align 8, !dbg !14364
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14366
  store i32 0, i32* %gy, align 8, !dbg !14366
  br label %for.cond36, !dbg !14366

for.cond36:                                       ; preds = %for.inc201, %if.end
  %gy37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14368
  %50 = load i32, i32* %gy37, align 8, !dbg !14368
  %height38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14368
  %51 = load i32, i32* %height38, align 8, !dbg !14368
  %cmp39 = icmp slt i32 %50, %51, !dbg !14368
  br i1 %cmp39, label %for.body40, label %for.end204, !dbg !14366

for.body40:                                       ; preds = %for.cond36
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14370
  store i32 0, i32* %gx, align 4, !dbg !14370
  br label %for.cond41, !dbg !14370

for.cond41:                                       ; preds = %for.inc, %for.body40
  %gx42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14373
  %52 = load i32, i32* %gx42, align 4, !dbg !14373
  %width43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14373
  %53 = load i32, i32* %width43, align 4, !dbg !14373
  %cmp44 = icmp slt i32 %52, %53, !dbg !14373
  br i1 %cmp44, label %for.body45, label %for.end, !dbg !14370

for.body45:                                       ; preds = %for.cond41
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14375
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !14375
  %tobool47 = icmp ne %struct.CCGElem* %54, null, !dbg !14375
  br i1 %tobool47, label %if.then48, label %if.else84, !dbg !14378

if.then48:                                        ; preds = %for.body45
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14379
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !14379
  %grid49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14379
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid49, align 8, !dbg !14379
  %call50 = call float* @CCG_elem_co(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !14379
  %co51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14379
  store float* %call50, float** %co51, align 8, !dbg !14379
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14379
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !14379
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14379
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !14379
  %call54 = call float* @CCG_elem_no(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !14379
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14379
  store float* %call54, float** %fno, align 8, !dbg !14379
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14379
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !14379
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %59, i32 0, i32 9, !dbg !14379
  %60 = load i32, i32* %has_mask, align 4, !dbg !14379
  %tobool56 = icmp ne i32 %60, 0, !dbg !14379
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !14379

cond.true:                                        ; preds = %if.then48
  %key57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14379
  %61 = load %struct.CCGKey*, %struct.CCGKey** %key57, align 8, !dbg !14379
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14379
  %62 = load %struct.CCGElem*, %struct.CCGElem** %grid58, align 8, !dbg !14379
  %call59 = call float* @CCG_elem_mask(%struct.CCGKey* %61, %struct.CCGElem* %62), !dbg !14379
  br label %cond.end, !dbg !14379

cond.false:                                       ; preds = %if.then48
  br label %cond.end, !dbg !14379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call59, %cond.true ], [ null, %cond.false ], !dbg !14379
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14379
  store float* %cond, float** %mask, align 8, !dbg !14379
  %key60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14379
  %63 = load %struct.CCGKey*, %struct.CCGKey** %key60, align 8, !dbg !14379
  %grid61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14379
  %64 = load %struct.CCGElem*, %struct.CCGElem** %grid61, align 8, !dbg !14379
  %call62 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %63, %struct.CCGElem* %64), !dbg !14379
  %grid63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14379
  store %struct.CCGElem* %call62, %struct.CCGElem** %grid63, align 8, !dbg !14379
  %gh64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14381
  %65 = load i32*, i32** %gh64, align 8, !dbg !14381
  %tobool65 = icmp ne i32* %65, null, !dbg !14381
  br i1 %tobool65, label %if.then66, label %if.end83, !dbg !14379

if.then66:                                        ; preds = %cond.end
  %gh67 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14383
  %66 = load i32*, i32** %gh67, align 8, !dbg !14383
  %gy68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14383
  %67 = load i32, i32* %gy68, align 8, !dbg !14383
  %gridsize69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14383
  %68 = load i32, i32* %gridsize69, align 4, !dbg !14383
  %mul70 = mul nsw i32 %67, %68, !dbg !14383
  %gx71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14383
  %69 = load i32, i32* %gx71, align 4, !dbg !14383
  %add = add nsw i32 %mul70, %69, !dbg !14383
  %shr = ashr i32 %add, 5, !dbg !14383
  %idxprom72 = sext i32 %shr to i64, !dbg !14383
  %arrayidx73 = getelementptr inbounds i32, i32* %66, i64 %idxprom72, !dbg !14383
  %70 = load i32, i32* %arrayidx73, align 4, !dbg !14383
  %gy74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14383
  %71 = load i32, i32* %gy74, align 8, !dbg !14383
  %gridsize75 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14383
  %72 = load i32, i32* %gridsize75, align 4, !dbg !14383
  %mul76 = mul nsw i32 %71, %72, !dbg !14383
  %gx77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14383
  %73 = load i32, i32* %gx77, align 4, !dbg !14383
  %add78 = add nsw i32 %mul76, %73, !dbg !14383
  %and = and i32 %add78, 31, !dbg !14383
  %shl = shl i32 1, %and, !dbg !14383
  %and79 = and i32 %70, %shl, !dbg !14383
  %tobool80 = icmp ne i32 %and79, 0, !dbg !14383
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !14386

if.then81:                                        ; preds = %if.then66
  br label %for.inc, !dbg !14383

if.end82:                                         ; preds = %if.then66
  br label %if.end83, !dbg !14386

if.end83:                                         ; preds = %if.end82, %cond.end
  br label %if.end146, !dbg !14379

if.else84:                                        ; preds = %for.body45
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14387
  %74 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !14387
  %tobool85 = icmp ne %struct.MVert* %74, null, !dbg !14387
  br i1 %tobool85, label %if.then86, label %if.else116, !dbg !14375

if.then86:                                        ; preds = %if.else84
  %mverts87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14389
  %75 = load %struct.MVert*, %struct.MVert** %mverts87, align 8, !dbg !14389
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14389
  %76 = load i32*, i32** %vert_indices, align 8, !dbg !14389
  %gx88 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14389
  %77 = load i32, i32* %gx88, align 4, !dbg !14389
  %idxprom89 = sext i32 %77 to i64, !dbg !14389
  %arrayidx90 = getelementptr inbounds i32, i32* %76, i64 %idxprom89, !dbg !14389
  %78 = load i32, i32* %arrayidx90, align 4, !dbg !14389
  %idxprom91 = sext i32 %78 to i64, !dbg !14389
  %arrayidx92 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i64 %idxprom91, !dbg !14389
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14389
  store %struct.MVert* %arrayidx92, %struct.MVert** %mvert, align 8, !dbg !14389
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14391
  %79 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !14391
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %79, i32 0, i32 2, !dbg !14391
  %80 = load i8, i8* %flag, align 2, !dbg !14391
  %conv = zext i8 %80 to i32, !dbg !14391
  %and94 = and i32 %conv, 16, !dbg !14391
  %tobool95 = icmp ne i32 %and94, 0, !dbg !14391
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !14389

if.then96:                                        ; preds = %if.then86
  br label %for.inc, !dbg !14391

if.end97:                                         ; preds = %if.then86
  %mvert98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14389
  %81 = load %struct.MVert*, %struct.MVert** %mvert98, align 8, !dbg !14389
  %co99 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 0, !dbg !14389
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %co99, i64 0, i64 0, !dbg !14389
  %co101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14389
  store float* %arraydecay100, float** %co101, align 8, !dbg !14389
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14389
  %82 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !14389
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 1, !dbg !14389
  %arraydecay103 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !14389
  %no104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14389
  store i16* %arraydecay103, i16** %no104, align 8, !dbg !14389
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14393
  %83 = load float*, float** %vmask, align 8, !dbg !14393
  %tobool105 = icmp ne float* %83, null, !dbg !14393
  br i1 %tobool105, label %if.then106, label %if.end115, !dbg !14389

if.then106:                                       ; preds = %if.end97
  %vmask107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14393
  %84 = load float*, float** %vmask107, align 8, !dbg !14393
  %vert_indices108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14393
  %85 = load i32*, i32** %vert_indices108, align 8, !dbg !14393
  %gx109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14393
  %86 = load i32, i32* %gx109, align 4, !dbg !14393
  %idxprom110 = sext i32 %86 to i64, !dbg !14393
  %arrayidx111 = getelementptr inbounds i32, i32* %85, i64 %idxprom110, !dbg !14393
  %87 = load i32, i32* %arrayidx111, align 4, !dbg !14393
  %idxprom112 = sext i32 %87 to i64, !dbg !14393
  %arrayidx113 = getelementptr inbounds float, float* %84, i64 %idxprom112, !dbg !14393
  %mask114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14393
  store float* %arrayidx113, float** %mask114, align 8, !dbg !14393
  br label %if.end115, !dbg !14393

if.end115:                                        ; preds = %if.then106, %if.end97
  br label %if.end145, !dbg !14389

if.else116:                                       ; preds = %if.else84
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14395
  %call117 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !14395
  %tobool118 = icmp ne i8 %call117, 0, !dbg !14395
  br i1 %tobool118, label %if.else123, label %if.then119, !dbg !14398

if.then119:                                       ; preds = %if.else116
  %bm_unique_verts120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14399
  %call121 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts120), !dbg !14399
  %88 = bitcast i8* %call121 to %struct.BMVert*, !dbg !14399
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14399
  store %struct.BMVert* %88, %struct.BMVert** %bm_vert, align 8, !dbg !14399
  %bm_unique_verts122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14399
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts122), !dbg !14399
  br label %if.end127, !dbg !14399

if.else123:                                       ; preds = %if.else116
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14401
  %call124 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !14401
  %89 = bitcast i8* %call124 to %struct.BMVert*, !dbg !14401
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14401
  store %struct.BMVert* %89, %struct.BMVert** %bm_vert125, align 8, !dbg !14401
  %bm_other_verts126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14401
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts126), !dbg !14401
  br label %if.end127

if.end127:                                        ; preds = %if.else123, %if.then119
  %bm_vert128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14403
  %90 = load %struct.BMVert*, %struct.BMVert** %bm_vert128, align 8, !dbg !14403
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %90, i32 0, i32 0, !dbg !14403
  %call129 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !14403
  %conv130 = zext i8 %call129 to i32, !dbg !14403
  %tobool131 = icmp ne i32 %conv130, 0, !dbg !14403
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !14398

if.then132:                                       ; preds = %if.end127
  br label %for.inc, !dbg !14403

if.end133:                                        ; preds = %if.end127
  %bm_vert134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14398
  %91 = load %struct.BMVert*, %struct.BMVert** %bm_vert134, align 8, !dbg !14398
  %co135 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 2, !dbg !14398
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !14398
  %co137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14398
  store float* %arraydecay136, float** %co137, align 8, !dbg !14398
  %bm_vert138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14398
  %92 = load %struct.BMVert*, %struct.BMVert** %bm_vert138, align 8, !dbg !14398
  %no139 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %92, i32 0, i32 3, !dbg !14398
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %no139, i64 0, i64 0, !dbg !14398
  %fno141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14398
  store float* %arraydecay140, float** %fno141, align 8, !dbg !14398
  %bm_vert142 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14398
  %93 = load %struct.BMVert*, %struct.BMVert** %bm_vert142, align 8, !dbg !14398
  %head143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %93, i32 0, i32 0, !dbg !14398
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head143, i32 0, i32 0, !dbg !14398
  %94 = load i8*, i8** %data, align 8, !dbg !14398
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !14398
  %95 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !14398
  %idx.ext = sext i32 %95 to i64, !dbg !14398
  %add.ptr = getelementptr inbounds i8, i8* %94, i64 %idx.ext, !dbg !14398
  %96 = bitcast i8* %add.ptr to float*, !dbg !14398
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14398
  store float* %96, float** %mask144, align 8, !dbg !14398
  br label %if.end145

if.end145:                                        ; preds = %if.end133, %if.end115
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end83
  %co147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14405
  %97 = load float*, float** %co147, align 8, !dbg !14405
  %call148 = call zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %97), !dbg !14408
  %tobool149 = icmp ne i8 %call148, 0, !dbg !14408
  br i1 %tobool149, label %if.then150, label %if.end197, !dbg !14409

if.then150:                                       ; preds = %if.end146
  %co151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14410
  %98 = load float*, float** %co151, align 8, !dbg !14410
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14413
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14414
  %call154 = call i32 @plane_point_side(float* %98, float* %arraydecay152, float* %arraydecay153), !dbg !14415
  %tobool155 = icmp ne i32 %call154, 0, !dbg !14415
  br i1 %tobool155, label %if.end196, label %if.then156, !dbg !14416

if.then156:                                       ; preds = %if.then150
  call void @llvm.dbg.declare(metadata [3 x float]* %intr, metadata !14417, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !14420, metadata !DIExpression()), !dbg !14421
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !14422
  %co158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14423
  %99 = load float*, float** %co158, align 8, !dbg !14423
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %an, i64 0, i64 0, !dbg !14424
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %fc, i64 0, i64 0, !dbg !14425
  call void @point_plane_project(float* %arraydecay157, float* %99, float* %arraydecay159, float* %arraydecay160), !dbg !14426
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14427
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %intr, i64 0, i64 0, !dbg !14428
  %co163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14429
  %100 = load float*, float** %co163, align 8, !dbg !14429
  call void @sub_v3_v3v3(float* %arraydecay161, float* %arraydecay162, float* %100), !dbg !14430
  %101 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14431
  %cache164 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %101, i32 0, i32 28, !dbg !14433
  %102 = load %struct.StrokeCache*, %struct.StrokeCache** %cache164, align 8, !dbg !14433
  %103 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14434
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14435
  %call166 = call i32 @plane_trim(%struct.StrokeCache* %102, %struct.Brush* %103, float* %arraydecay165), !dbg !14436
  %tobool167 = icmp ne i32 %call166, 0, !dbg !14436
  br i1 %tobool167, label %if.then168, label %if.end195, !dbg !14437

if.then168:                                       ; preds = %if.then156
  call void @llvm.dbg.declare(metadata float* %fade, metadata !14438, metadata !DIExpression()), !dbg !14440
  %104 = load float, float* %bstrength, align 4, !dbg !14441
  %105 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14442
  %106 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14443
  %co169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14444
  %107 = load float*, float** %co169, align 8, !dbg !14444
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !14445
  %108 = load float, float* %dist, align 8, !dbg !14445
  %call170 = call float @sqrtf(float %108) #5, !dbg !14446
  %no171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14447
  %109 = load i16*, i16** %no171, align 8, !dbg !14447
  %fno172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14448
  %110 = load float*, float** %fno172, align 8, !dbg !14448
  %mask173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14449
  %111 = load float*, float** %mask173, align 8, !dbg !14449
  %tobool174 = icmp ne float* %111, null, !dbg !14450
  br i1 %tobool174, label %cond.true175, label %cond.false177, !dbg !14450

cond.true175:                                     ; preds = %if.then168
  %mask176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14451
  %112 = load float*, float** %mask176, align 8, !dbg !14451
  %113 = load float, float* %112, align 4, !dbg !14452
  br label %cond.end178, !dbg !14450

cond.false177:                                    ; preds = %if.then168
  br label %cond.end178, !dbg !14450

cond.end178:                                      ; preds = %cond.false177, %cond.true175
  %cond179 = phi float [ %113, %cond.true175 ], [ 0.000000e+00, %cond.false177 ], !dbg !14450
  %call180 = call float @tex_strength(%struct.SculptSession* %105, %struct.Brush* %106, float* %107, float %call170, i16* %109, float* %110, float %cond179), !dbg !14453
  %mul181 = fmul float %104, %call180, !dbg !14454
  store float %mul181, float* %fade, align 4, !dbg !14440
  %114 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !14455
  %i182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14456
  %115 = load i32, i32* %i182, align 4, !dbg !14456
  %idxprom183 = sext i32 %115 to i64, !dbg !14455
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %114, i64 %idxprom183, !dbg !14455
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !14455
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !14457
  %116 = load float, float* %fade, align 4, !dbg !14458
  call void @mul_v3_v3fl(float* %arraydecay185, float* %arraydecay186, float %116), !dbg !14459
  %mvert187 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14460
  %117 = load %struct.MVert*, %struct.MVert** %mvert187, align 8, !dbg !14460
  %tobool188 = icmp ne %struct.MVert* %117, null, !dbg !14462
  br i1 %tobool188, label %if.then189, label %if.end194, !dbg !14463

if.then189:                                       ; preds = %cond.end178
  %mvert190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14464
  %118 = load %struct.MVert*, %struct.MVert** %mvert190, align 8, !dbg !14464
  %flag191 = getelementptr inbounds %struct.MVert, %struct.MVert* %118, i32 0, i32 2, !dbg !14465
  %119 = load i8, i8* %flag191, align 2, !dbg !14466
  %conv192 = zext i8 %119 to i32, !dbg !14466
  %or = or i32 %conv192, 128, !dbg !14466
  %conv193 = trunc i32 %or to i8, !dbg !14466
  store i8 %conv193, i8* %flag191, align 2, !dbg !14466
  br label %if.end194, !dbg !14467

if.end194:                                        ; preds = %if.then189, %cond.end178
  br label %if.end195, !dbg !14468

if.end195:                                        ; preds = %if.end194, %if.then156
  br label %if.end196, !dbg !14469

if.end196:                                        ; preds = %if.end195, %if.then150
  br label %if.end197, !dbg !14470

if.end197:                                        ; preds = %if.end196, %if.end146
  br label %for.inc, !dbg !14471

for.inc:                                          ; preds = %if.end197, %if.then132, %if.then96, %if.then81
  %gx198 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14373
  %120 = load i32, i32* %gx198, align 4, !dbg !14373
  %inc = add nsw i32 %120, 1, !dbg !14373
  store i32 %inc, i32* %gx198, align 4, !dbg !14373
  %i199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14373
  %121 = load i32, i32* %i199, align 4, !dbg !14373
  %inc200 = add nsw i32 %121, 1, !dbg !14373
  store i32 %inc200, i32* %i199, align 4, !dbg !14373
  br label %for.cond41, !dbg !14373, !llvm.loop !14472

for.end:                                          ; preds = %for.cond41
  br label %for.inc201, !dbg !14474

for.inc201:                                       ; preds = %for.end
  %gy202 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14368
  %122 = load i32, i32* %gy202, align 8, !dbg !14368
  %inc203 = add nsw i32 %122, 1, !dbg !14368
  store i32 %inc203, i32* %gy202, align 8, !dbg !14368
  br label %for.cond36, !dbg !14368, !llvm.loop !14475

for.end204:                                       ; preds = %for.cond36
  br label %for.inc205, !dbg !14477

for.inc205:                                       ; preds = %for.end204
  %g206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14354
  %123 = load i32, i32* %g206, align 8, !dbg !14354
  %inc207 = add nsw i32 %123, 1, !dbg !14354
  store i32 %inc207, i32* %g206, align 8, !dbg !14354
  br label %for.cond17, !dbg !14354, !llvm.loop !14478

for.end208:                                       ; preds = %for.cond17
  br label %for.inc209, !dbg !14480

for.inc209:                                       ; preds = %for.end208
  %124 = load i32, i32* %n, align 4, !dbg !14481
  %inc210 = add nsw i32 %124, 1, !dbg !14481
  store i32 %inc210, i32* %n, align 4, !dbg !14481
  br label %for.cond, !dbg !14482, !llvm.loop !14483

for.end211:                                       ; preds = %for.cond
  ret void, !dbg !14485
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mask_brush(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !14486 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14487, metadata !DIExpression()), !dbg !14488
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14489, metadata !DIExpression()), !dbg !14490
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14491, metadata !DIExpression()), !dbg !14492
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14493, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14495, metadata !DIExpression()), !dbg !14496
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14497
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !14498
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14498
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !14496
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14499, metadata !DIExpression()), !dbg !14500
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14501
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !14502
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14503
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14500
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14504
  %mask_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 37, !dbg !14505
  %4 = load i8, i8* %mask_tool, align 1, !dbg !14505
  %conv = zext i8 %4 to i32, !dbg !14506
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !14507

sw.bb:                                            ; preds = %entry
  %5 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14508
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14510
  %7 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14511
  %8 = load i32, i32* %totnode.addr, align 4, !dbg !14512
  call void @do_mask_brush_draw(%struct.Sculpt* %5, %struct.Object* %6, %struct.PBVHNode** %7, i32 %8), !dbg !14513
  br label %sw.epilog, !dbg !14514

sw.bb1:                                           ; preds = %entry
  %9 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14515
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14516
  %11 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14517
  %12 = load i32, i32* %totnode.addr, align 4, !dbg !14518
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14519
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 28, !dbg !14520
  %14 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14520
  %bstrength = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %14, i32 0, i32 19, !dbg !14521
  %15 = load float, float* %bstrength, align 8, !dbg !14521
  call void @smooth(%struct.Sculpt* %9, %struct.Object* %10, %struct.PBVHNode** %11, i32 %12, float %15, i32 1), !dbg !14522
  br label %sw.epilog, !dbg !14523

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret void, !dbg !14524
}

; Function Attrs: noinline nounwind uwtable
define internal void @smooth(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float %bstrength, i32 %smooth_mask) #0 !dbg !14525 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %bstrength.addr = alloca float, align 4
  %smooth_mask.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %max_iterations = alloca i32, align 4
  %fract = alloca float, align 4
  %type = alloca i32, align 4
  %iteration = alloca i32, align 4
  %n = alloca i32, align 4
  %count = alloca i32, align 4
  %last = alloca float, align 4
  %strength = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14528, metadata !DIExpression()), !dbg !14529
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14530, metadata !DIExpression()), !dbg !14531
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14532, metadata !DIExpression()), !dbg !14533
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  store float %bstrength, float* %bstrength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bstrength.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  store i32 %smooth_mask, i32* %smooth_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_mask.addr, metadata !14538, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14540, metadata !DIExpression()), !dbg !14541
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14542
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !14543
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14543
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !14541
  call void @llvm.dbg.declare(metadata i32* %max_iterations, metadata !14544, metadata !DIExpression()), !dbg !14545
  store i32 4, i32* %max_iterations, align 4, !dbg !14545
  call void @llvm.dbg.declare(metadata float* %fract, metadata !14546, metadata !DIExpression()), !dbg !14547
  store float 2.500000e-01, float* %fract, align 4, !dbg !14547
  call void @llvm.dbg.declare(metadata i32* %type, metadata !14548, metadata !DIExpression()), !dbg !14550
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14551
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %2, i32 0, i32 15, !dbg !14552
  %3 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14552
  %call = call i32 @BKE_pbvh_type(%struct.PBVH* %3), !dbg !14553
  store i32 %call, i32* %type, align 4, !dbg !14550
  call void @llvm.dbg.declare(metadata i32* %iteration, metadata !14554, metadata !DIExpression()), !dbg !14555
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14556, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14558, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.declare(metadata float* %last, metadata !14560, metadata !DIExpression()), !dbg !14561
  %4 = load float, float* %bstrength.addr, align 4, !dbg !14562
  %cmp = fcmp olt float %4, 0.000000e+00, !dbg !14562
  br i1 %cmp, label %if.then, label %if.else, !dbg !14565

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %bstrength.addr, align 4, !dbg !14562
  br label %if.end3, !dbg !14562

if.else:                                          ; preds = %entry
  %5 = load float, float* %bstrength.addr, align 4, !dbg !14566
  %cmp1 = fcmp ogt float %5, 1.000000e+00, !dbg !14566
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14562

if.then2:                                         ; preds = %if.else
  store float 1.000000e+00, float* %bstrength.addr, align 4, !dbg !14566
  br label %if.end, !dbg !14566

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %6 = load float, float* %bstrength.addr, align 4, !dbg !14568
  %mul = fmul float %6, 4.000000e+00, !dbg !14569
  %conv = fptosi float %mul to i32, !dbg !14570
  store i32 %conv, i32* %count, align 4, !dbg !14571
  %7 = load float, float* %bstrength.addr, align 4, !dbg !14572
  %8 = load i32, i32* %count, align 4, !dbg !14573
  %conv4 = sitofp i32 %8 to float, !dbg !14573
  %mul5 = fmul float %conv4, 2.500000e-01, !dbg !14574
  %sub = fsub float %7, %mul5, !dbg !14575
  %mul6 = fmul float 4.000000e+00, %sub, !dbg !14576
  store float %mul6, float* %last, align 4, !dbg !14577
  %9 = load i32, i32* %type, align 4, !dbg !14578
  %cmp7 = icmp eq i32 %9, 0, !dbg !14580
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !14581

land.lhs.true:                                    ; preds = %if.end3
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14582
  %pmap = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 9, !dbg !14583
  %11 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !14583
  %tobool = icmp ne %struct.MeshElemMap* %11, null, !dbg !14582
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !14584

if.then9:                                         ; preds = %land.lhs.true
  br label %for.end30, !dbg !14585

if.end10:                                         ; preds = %land.lhs.true, %if.end3
  store i32 0, i32* %iteration, align 4, !dbg !14587
  br label %for.cond, !dbg !14589

for.cond:                                         ; preds = %for.inc28, %if.end10
  %12 = load i32, i32* %iteration, align 4, !dbg !14590
  %13 = load i32, i32* %count, align 4, !dbg !14592
  %cmp11 = icmp sle i32 %12, %13, !dbg !14593
  br i1 %cmp11, label %for.body, label %for.end30, !dbg !14594

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %strength, metadata !14595, metadata !DIExpression()), !dbg !14597
  %14 = load i32, i32* %iteration, align 4, !dbg !14598
  %15 = load i32, i32* %count, align 4, !dbg !14599
  %cmp13 = icmp ne i32 %14, %15, !dbg !14600
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !14601

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !14601

cond.false:                                       ; preds = %for.body
  %16 = load float, float* %last, align 4, !dbg !14602
  br label %cond.end, !dbg !14601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+00, %cond.true ], [ %16, %cond.false ], !dbg !14601
  store float %cond, float* %strength, align 4, !dbg !14597
  store i32 0, i32* %n, align 4, !dbg !14603
  br label %for.cond15, !dbg !14605

for.cond15:                                       ; preds = %for.inc, %cond.end
  %17 = load i32, i32* %n, align 4, !dbg !14606
  %18 = load i32, i32* %totnode.addr, align 4, !dbg !14608
  %cmp16 = icmp slt i32 %17, %18, !dbg !14609
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !14610

for.body18:                                       ; preds = %for.cond15
  %19 = load i32, i32* %type, align 4, !dbg !14611
  switch i32 %19, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb19
    i32 2, label %sw.bb22
  ], !dbg !14613

sw.bb:                                            ; preds = %for.body18
  %20 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14614
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14616
  %22 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14617
  %23 = load i32, i32* %n, align 4, !dbg !14618
  %idxprom = sext i32 %23 to i64, !dbg !14617
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %22, i64 %idxprom, !dbg !14617
  %24 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !14617
  %25 = load float, float* %strength, align 4, !dbg !14619
  %26 = load i32, i32* %smooth_mask.addr, align 4, !dbg !14620
  call void @do_multires_smooth_brush(%struct.Sculpt* %20, %struct.SculptSession* %21, %struct.PBVHNode* %24, float %25, i32 %26), !dbg !14621
  br label %sw.epilog, !dbg !14622

sw.bb19:                                          ; preds = %for.body18
  %27 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14623
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14624
  %29 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14625
  %30 = load i32, i32* %n, align 4, !dbg !14626
  %idxprom20 = sext i32 %30 to i64, !dbg !14625
  %arrayidx21 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %29, i64 %idxprom20, !dbg !14625
  %31 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx21, align 8, !dbg !14625
  %32 = load float, float* %strength, align 4, !dbg !14627
  %33 = load i32, i32* %smooth_mask.addr, align 4, !dbg !14628
  call void @do_mesh_smooth_brush(%struct.Sculpt* %27, %struct.SculptSession* %28, %struct.PBVHNode* %31, float %32, i32 %33), !dbg !14629
  br label %sw.epilog, !dbg !14630

sw.bb22:                                          ; preds = %for.body18
  %34 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14631
  %35 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14632
  %36 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14633
  %37 = load i32, i32* %n, align 4, !dbg !14634
  %idxprom23 = sext i32 %37 to i64, !dbg !14633
  %arrayidx24 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %36, i64 %idxprom23, !dbg !14633
  %38 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx24, align 8, !dbg !14633
  %39 = load float, float* %strength, align 4, !dbg !14635
  %40 = load i32, i32* %smooth_mask.addr, align 4, !dbg !14636
  call void @do_bmesh_smooth_brush(%struct.Sculpt* %34, %struct.SculptSession* %35, %struct.PBVHNode* %38, float %39, i32 %40), !dbg !14637
  br label %sw.epilog, !dbg !14638

sw.epilog:                                        ; preds = %for.body18, %sw.bb22, %sw.bb19, %sw.bb
  br label %for.inc, !dbg !14639

for.inc:                                          ; preds = %sw.epilog
  %41 = load i32, i32* %n, align 4, !dbg !14640
  %inc = add nsw i32 %41, 1, !dbg !14640
  store i32 %inc, i32* %n, align 4, !dbg !14640
  br label %for.cond15, !dbg !14641, !llvm.loop !14642

for.end:                                          ; preds = %for.cond15
  %42 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14644
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %42, i32 0, i32 0, !dbg !14646
  %43 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !14646
  %tobool25 = icmp ne %struct.MultiresModifierData* %43, null, !dbg !14644
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !14647

if.then26:                                        ; preds = %for.end
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14648
  call void @multires_stitch_grids(%struct.Object* %44), !dbg !14649
  br label %if.end27, !dbg !14649

if.end27:                                         ; preds = %if.then26, %for.end
  br label %for.inc28, !dbg !14650

for.inc28:                                        ; preds = %if.end27
  %45 = load i32, i32* %iteration, align 4, !dbg !14651
  %inc29 = add nsw i32 %45, 1, !dbg !14651
  store i32 %inc29, i32* %iteration, align 4, !dbg !14651
  br label %for.cond, !dbg !14652, !llvm.loop !14653

for.end30:                                        ; preds = %if.then9, %for.cond
  ret void, !dbg !14655
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_gravity(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float %bstrength) #0 !dbg !14656 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %bstrength.addr = alloca float, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %offset = alloca [3 x float], align 4
  %n = alloca i32, align 4
  %gravity_vector = alloca [3 x float], align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %proxy = alloca [3 x float]*, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14659, metadata !DIExpression()), !dbg !14660
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14665, metadata !DIExpression()), !dbg !14666
  store float %bstrength, float* %bstrength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bstrength.addr, metadata !14667, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14669, metadata !DIExpression()), !dbg !14670
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14671
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !14672
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14672
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !14670
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14673, metadata !DIExpression()), !dbg !14674
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14675
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !14676
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14677
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14674
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !14678, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14680, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.declare(metadata [3 x float]* %gravity_vector, metadata !14682, metadata !DIExpression()), !dbg !14683
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %gravity_vector, i64 0, i64 0, !dbg !14684
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14685
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !14686
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14686
  %gravity_direction = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 52, !dbg !14687
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %gravity_direction, i64 0, i64 0, !dbg !14685
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14688
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 28, !dbg !14689
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !14689
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 12, !dbg !14690
  %7 = load float, float* %radius_squared, align 4, !dbg !14690
  %fneg = fneg float %7, !dbg !14691
  call void @mul_v3_v3fl(float* %arraydecay, float* %arraydecay1, float %fneg), !dbg !14692
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !14693
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %gravity_vector, i64 0, i64 0, !dbg !14694
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14695
  %cache5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 28, !dbg !14696
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache5, align 8, !dbg !14696
  %scale = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 1, !dbg !14697
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !14695
  call void @mul_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay6), !dbg !14698
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !14699
  %10 = load float, float* %bstrength.addr, align 4, !dbg !14700
  call void @mul_v3_fl(float* %arraydecay7, float %10), !dbg !14701
  store i32 0, i32* %n, align 4, !dbg !14702
  br label %for.cond, !dbg !14704

for.cond:                                         ; preds = %for.inc182, %entry
  %11 = load i32, i32* %n, align 4, !dbg !14705
  %12 = load i32, i32* %totnode.addr, align 4, !dbg !14707
  %cmp = icmp slt i32 %11, %12, !dbg !14708
  br i1 %cmp, label %for.body, label %for.end184, !dbg !14709

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !14710, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata [3 x float]** %proxy, metadata !14715, metadata !DIExpression()), !dbg !14716
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14717
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 15, !dbg !14718
  %14 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14718
  %15 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14719
  %16 = load i32, i32* %n, align 4, !dbg !14720
  %idxprom = sext i32 %16 to i64, !dbg !14719
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %15, i64 %idxprom, !dbg !14719
  %17 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !14719
  %call8 = call %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH* %14, %struct.PBVHNode* %17), !dbg !14721
  %co = getelementptr inbounds %struct.PBVHProxyNode, %struct.PBVHProxyNode* %call8, i32 0, i32 0, !dbg !14722
  %18 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !14722
  store [3 x float]* %18, [3 x float]** %proxy, align 8, !dbg !14723
  %19 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14724
  call void @sculpt_brush_test_init(%struct.SculptSession* %19, %struct.SculptBrushTest* %test), !dbg !14725
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14726
  %pbvh9 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 15, !dbg !14726
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh9, align 8, !dbg !14726
  %22 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14726
  %23 = load i32, i32* %n, align 4, !dbg !14726
  %idxprom10 = sext i32 %23 to i64, !dbg !14726
  %arrayidx11 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %22, i64 %idxprom10, !dbg !14726
  %24 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx11, align 8, !dbg !14726
  call void @pbvh_vertex_iter_init(%struct.PBVH* %21, %struct.PBVHNode* %24, %struct.PBVHVertexIter* %vd, i32 1), !dbg !14726
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14727
  store i32 0, i32* %i, align 4, !dbg !14727
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14727
  store i32 0, i32* %g, align 8, !dbg !14727
  br label %for.cond12, !dbg !14727

for.cond12:                                       ; preds = %for.inc178, %for.body
  %g13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14729
  %25 = load i32, i32* %g13, align 8, !dbg !14729
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !14729
  %26 = load i32, i32* %totgrid, align 8, !dbg !14729
  %cmp14 = icmp slt i32 %25, %26, !dbg !14729
  br i1 %cmp14, label %for.body15, label %for.end181, !dbg !14727

for.body15:                                       ; preds = %for.cond12
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14731
  %27 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !14731
  %tobool = icmp ne %struct.CCGElem** %27, null, !dbg !14731
  br i1 %tobool, label %if.then, label %if.else, !dbg !14734

if.then:                                          ; preds = %for.body15
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14735
  %28 = load i32, i32* %gridsize, align 4, !dbg !14735
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14735
  store i32 %28, i32* %width, align 4, !dbg !14735
  %gridsize16 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14735
  %29 = load i32, i32* %gridsize16, align 4, !dbg !14735
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14735
  store i32 %29, i32* %height, align 8, !dbg !14735
  %grids17 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14735
  %30 = load %struct.CCGElem**, %struct.CCGElem*** %grids17, align 8, !dbg !14735
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14735
  %31 = load i32*, i32** %grid_indices, align 8, !dbg !14735
  %g18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14735
  %32 = load i32, i32* %g18, align 8, !dbg !14735
  %idxprom19 = sext i32 %32 to i64, !dbg !14735
  %arrayidx20 = getelementptr inbounds i32, i32* %31, i64 %idxprom19, !dbg !14735
  %33 = load i32, i32* %arrayidx20, align 4, !dbg !14735
  %idxprom21 = sext i32 %33 to i64, !dbg !14735
  %arrayidx22 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %30, i64 %idxprom21, !dbg !14735
  %34 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx22, align 8, !dbg !14735
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14735
  store %struct.CCGElem* %34, %struct.CCGElem** %grid, align 8, !dbg !14735
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !14737
  %35 = load i32**, i32*** %grid_hidden, align 8, !dbg !14737
  %grid_indices23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14737
  %36 = load i32*, i32** %grid_indices23, align 8, !dbg !14737
  %g24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14737
  %37 = load i32, i32* %g24, align 8, !dbg !14737
  %idxprom25 = sext i32 %37 to i64, !dbg !14737
  %arrayidx26 = getelementptr inbounds i32, i32* %36, i64 %idxprom25, !dbg !14737
  %38 = load i32, i32* %arrayidx26, align 4, !dbg !14737
  %idxprom27 = sext i32 %38 to i64, !dbg !14737
  %arrayidx28 = getelementptr inbounds i32*, i32** %35, i64 %idxprom27, !dbg !14737
  %39 = load i32*, i32** %arrayidx28, align 8, !dbg !14737
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14737
  store i32* %39, i32** %gh, align 8, !dbg !14737
  br label %if.end, !dbg !14735

if.else:                                          ; preds = %for.body15
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !14739
  %40 = load i32, i32* %totvert, align 8, !dbg !14739
  %width29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14739
  store i32 %40, i32* %width29, align 4, !dbg !14739
  %height30 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14739
  store i32 1, i32* %height30, align 8, !dbg !14739
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14741
  store i32 0, i32* %gy, align 8, !dbg !14741
  br label %for.cond31, !dbg !14741

for.cond31:                                       ; preds = %for.inc174, %if.end
  %gy32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14743
  %41 = load i32, i32* %gy32, align 8, !dbg !14743
  %height33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14743
  %42 = load i32, i32* %height33, align 8, !dbg !14743
  %cmp34 = icmp slt i32 %41, %42, !dbg !14743
  br i1 %cmp34, label %for.body35, label %for.end177, !dbg !14741

for.body35:                                       ; preds = %for.cond31
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14745
  store i32 0, i32* %gx, align 4, !dbg !14745
  br label %for.cond36, !dbg !14745

for.cond36:                                       ; preds = %for.inc, %for.body35
  %gx37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14748
  %43 = load i32, i32* %gx37, align 4, !dbg !14748
  %width38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14748
  %44 = load i32, i32* %width38, align 4, !dbg !14748
  %cmp39 = icmp slt i32 %43, %44, !dbg !14748
  br i1 %cmp39, label %for.body40, label %for.end, !dbg !14745

for.body40:                                       ; preds = %for.cond36
  %grid41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14750
  %45 = load %struct.CCGElem*, %struct.CCGElem** %grid41, align 8, !dbg !14750
  %tobool42 = icmp ne %struct.CCGElem* %45, null, !dbg !14750
  br i1 %tobool42, label %if.then43, label %if.else78, !dbg !14753

if.then43:                                        ; preds = %for.body40
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14754
  %46 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !14754
  %grid44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14754
  %47 = load %struct.CCGElem*, %struct.CCGElem** %grid44, align 8, !dbg !14754
  %call45 = call float* @CCG_elem_co(%struct.CCGKey* %46, %struct.CCGElem* %47), !dbg !14754
  %co46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14754
  store float* %call45, float** %co46, align 8, !dbg !14754
  %key47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14754
  %48 = load %struct.CCGKey*, %struct.CCGKey** %key47, align 8, !dbg !14754
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14754
  %49 = load %struct.CCGElem*, %struct.CCGElem** %grid48, align 8, !dbg !14754
  %call49 = call float* @CCG_elem_no(%struct.CCGKey* %48, %struct.CCGElem* %49), !dbg !14754
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14754
  store float* %call49, float** %fno, align 8, !dbg !14754
  %key50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14754
  %50 = load %struct.CCGKey*, %struct.CCGKey** %key50, align 8, !dbg !14754
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %50, i32 0, i32 9, !dbg !14754
  %51 = load i32, i32* %has_mask, align 4, !dbg !14754
  %tobool51 = icmp ne i32 %51, 0, !dbg !14754
  br i1 %tobool51, label %cond.true, label %cond.false, !dbg !14754

cond.true:                                        ; preds = %if.then43
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14754
  %52 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !14754
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14754
  %53 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !14754
  %call54 = call float* @CCG_elem_mask(%struct.CCGKey* %52, %struct.CCGElem* %53), !dbg !14754
  br label %cond.end, !dbg !14754

cond.false:                                       ; preds = %if.then43
  br label %cond.end, !dbg !14754

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call54, %cond.true ], [ null, %cond.false ], !dbg !14754
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14754
  store float* %cond, float** %mask, align 8, !dbg !14754
  %key55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !14754
  %54 = load %struct.CCGKey*, %struct.CCGKey** %key55, align 8, !dbg !14754
  %grid56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14754
  %55 = load %struct.CCGElem*, %struct.CCGElem** %grid56, align 8, !dbg !14754
  %call57 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %54, %struct.CCGElem* %55), !dbg !14754
  %grid58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14754
  store %struct.CCGElem* %call57, %struct.CCGElem** %grid58, align 8, !dbg !14754
  %gh59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14756
  %56 = load i32*, i32** %gh59, align 8, !dbg !14756
  %tobool60 = icmp ne i32* %56, null, !dbg !14756
  br i1 %tobool60, label %if.then61, label %if.end77, !dbg !14754

if.then61:                                        ; preds = %cond.end
  %gh62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14758
  %57 = load i32*, i32** %gh62, align 8, !dbg !14758
  %gy63 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14758
  %58 = load i32, i32* %gy63, align 8, !dbg !14758
  %gridsize64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14758
  %59 = load i32, i32* %gridsize64, align 4, !dbg !14758
  %mul = mul nsw i32 %58, %59, !dbg !14758
  %gx65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14758
  %60 = load i32, i32* %gx65, align 4, !dbg !14758
  %add = add nsw i32 %mul, %60, !dbg !14758
  %shr = ashr i32 %add, 5, !dbg !14758
  %idxprom66 = sext i32 %shr to i64, !dbg !14758
  %arrayidx67 = getelementptr inbounds i32, i32* %57, i64 %idxprom66, !dbg !14758
  %61 = load i32, i32* %arrayidx67, align 4, !dbg !14758
  %gy68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14758
  %62 = load i32, i32* %gy68, align 8, !dbg !14758
  %gridsize69 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14758
  %63 = load i32, i32* %gridsize69, align 4, !dbg !14758
  %mul70 = mul nsw i32 %62, %63, !dbg !14758
  %gx71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14758
  %64 = load i32, i32* %gx71, align 4, !dbg !14758
  %add72 = add nsw i32 %mul70, %64, !dbg !14758
  %and = and i32 %add72, 31, !dbg !14758
  %shl = shl i32 1, %and, !dbg !14758
  %and73 = and i32 %61, %shl, !dbg !14758
  %tobool74 = icmp ne i32 %and73, 0, !dbg !14758
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !14761

if.then75:                                        ; preds = %if.then61
  br label %for.inc, !dbg !14758

if.end76:                                         ; preds = %if.then61
  br label %if.end77, !dbg !14761

if.end77:                                         ; preds = %if.end76, %cond.end
  br label %if.end140, !dbg !14754

if.else78:                                        ; preds = %for.body40
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14762
  %65 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !14762
  %tobool79 = icmp ne %struct.MVert* %65, null, !dbg !14762
  br i1 %tobool79, label %if.then80, label %if.else110, !dbg !14750

if.then80:                                        ; preds = %if.else78
  %mverts81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !14764
  %66 = load %struct.MVert*, %struct.MVert** %mverts81, align 8, !dbg !14764
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14764
  %67 = load i32*, i32** %vert_indices, align 8, !dbg !14764
  %gx82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14764
  %68 = load i32, i32* %gx82, align 4, !dbg !14764
  %idxprom83 = sext i32 %68 to i64, !dbg !14764
  %arrayidx84 = getelementptr inbounds i32, i32* %67, i64 %idxprom83, !dbg !14764
  %69 = load i32, i32* %arrayidx84, align 4, !dbg !14764
  %idxprom85 = sext i32 %69 to i64, !dbg !14764
  %arrayidx86 = getelementptr inbounds %struct.MVert, %struct.MVert* %66, i64 %idxprom85, !dbg !14764
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14764
  store %struct.MVert* %arrayidx86, %struct.MVert** %mvert, align 8, !dbg !14764
  %mvert87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14766
  %70 = load %struct.MVert*, %struct.MVert** %mvert87, align 8, !dbg !14766
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %70, i32 0, i32 2, !dbg !14766
  %71 = load i8, i8* %flag, align 2, !dbg !14766
  %conv = zext i8 %71 to i32, !dbg !14766
  %and88 = and i32 %conv, 16, !dbg !14766
  %tobool89 = icmp ne i32 %and88, 0, !dbg !14766
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !14764

if.then90:                                        ; preds = %if.then80
  br label %for.inc, !dbg !14766

if.end91:                                         ; preds = %if.then80
  %mvert92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14764
  %72 = load %struct.MVert*, %struct.MVert** %mvert92, align 8, !dbg !14764
  %co93 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i32 0, i32 0, !dbg !14764
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !14764
  %co95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14764
  store float* %arraydecay94, float** %co95, align 8, !dbg !14764
  %mvert96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14764
  %73 = load %struct.MVert*, %struct.MVert** %mvert96, align 8, !dbg !14764
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i32 0, i32 1, !dbg !14764
  %arraydecay97 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !14764
  %no98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14764
  store i16* %arraydecay97, i16** %no98, align 8, !dbg !14764
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14768
  %74 = load float*, float** %vmask, align 8, !dbg !14768
  %tobool99 = icmp ne float* %74, null, !dbg !14768
  br i1 %tobool99, label %if.then100, label %if.end109, !dbg !14764

if.then100:                                       ; preds = %if.end91
  %vmask101 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !14768
  %75 = load float*, float** %vmask101, align 8, !dbg !14768
  %vert_indices102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !14768
  %76 = load i32*, i32** %vert_indices102, align 8, !dbg !14768
  %gx103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14768
  %77 = load i32, i32* %gx103, align 4, !dbg !14768
  %idxprom104 = sext i32 %77 to i64, !dbg !14768
  %arrayidx105 = getelementptr inbounds i32, i32* %76, i64 %idxprom104, !dbg !14768
  %78 = load i32, i32* %arrayidx105, align 4, !dbg !14768
  %idxprom106 = sext i32 %78 to i64, !dbg !14768
  %arrayidx107 = getelementptr inbounds float, float* %75, i64 %idxprom106, !dbg !14768
  %mask108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14768
  store float* %arrayidx107, float** %mask108, align 8, !dbg !14768
  br label %if.end109, !dbg !14768

if.end109:                                        ; preds = %if.then100, %if.end91
  br label %if.end139, !dbg !14764

if.else110:                                       ; preds = %if.else78
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14770
  %call111 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !14770
  %tobool112 = icmp ne i8 %call111, 0, !dbg !14770
  br i1 %tobool112, label %if.else117, label %if.then113, !dbg !14773

if.then113:                                       ; preds = %if.else110
  %bm_unique_verts114 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14774
  %call115 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts114), !dbg !14774
  %79 = bitcast i8* %call115 to %struct.BMVert*, !dbg !14774
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14774
  store %struct.BMVert* %79, %struct.BMVert** %bm_vert, align 8, !dbg !14774
  %bm_unique_verts116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !14774
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts116), !dbg !14774
  br label %if.end121, !dbg !14774

if.else117:                                       ; preds = %if.else110
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14776
  %call118 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !14776
  %80 = bitcast i8* %call118 to %struct.BMVert*, !dbg !14776
  %bm_vert119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14776
  store %struct.BMVert* %80, %struct.BMVert** %bm_vert119, align 8, !dbg !14776
  %bm_other_verts120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !14776
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts120), !dbg !14776
  br label %if.end121

if.end121:                                        ; preds = %if.else117, %if.then113
  %bm_vert122 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14778
  %81 = load %struct.BMVert*, %struct.BMVert** %bm_vert122, align 8, !dbg !14778
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %81, i32 0, i32 0, !dbg !14778
  %call123 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !14778
  %conv124 = zext i8 %call123 to i32, !dbg !14778
  %tobool125 = icmp ne i32 %conv124, 0, !dbg !14778
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !14773

if.then126:                                       ; preds = %if.end121
  br label %for.inc, !dbg !14778

if.end127:                                        ; preds = %if.end121
  %bm_vert128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14773
  %82 = load %struct.BMVert*, %struct.BMVert** %bm_vert128, align 8, !dbg !14773
  %co129 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 2, !dbg !14773
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %co129, i64 0, i64 0, !dbg !14773
  %co131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14773
  store float* %arraydecay130, float** %co131, align 8, !dbg !14773
  %bm_vert132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14773
  %83 = load %struct.BMVert*, %struct.BMVert** %bm_vert132, align 8, !dbg !14773
  %no133 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %83, i32 0, i32 3, !dbg !14773
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %no133, i64 0, i64 0, !dbg !14773
  %fno135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14773
  store float* %arraydecay134, float** %fno135, align 8, !dbg !14773
  %bm_vert136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !14773
  %84 = load %struct.BMVert*, %struct.BMVert** %bm_vert136, align 8, !dbg !14773
  %head137 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 0, !dbg !14773
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head137, i32 0, i32 0, !dbg !14773
  %85 = load i8*, i8** %data, align 8, !dbg !14773
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !14773
  %86 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !14773
  %idx.ext = sext i32 %86 to i64, !dbg !14773
  %add.ptr = getelementptr inbounds i8, i8* %85, i64 %idx.ext, !dbg !14773
  %87 = bitcast i8* %add.ptr to float*, !dbg !14773
  %mask138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14773
  store float* %87, float** %mask138, align 8, !dbg !14773
  br label %if.end139

if.end139:                                        ; preds = %if.end127, %if.end109
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.end77
  %co141 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14780
  %88 = load float*, float** %co141, align 8, !dbg !14780
  %call142 = call zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %88), !dbg !14783
  %tobool143 = icmp ne i8 %call142, 0, !dbg !14783
  br i1 %tobool143, label %if.then144, label %if.end170, !dbg !14784

if.then144:                                       ; preds = %if.end140
  call void @llvm.dbg.declare(metadata float* %fade, metadata !14785, metadata !DIExpression()), !dbg !14787
  %89 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14788
  %90 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14789
  %co145 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !14790
  %91 = load float*, float** %co145, align 8, !dbg !14790
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !14791
  %92 = load float, float* %dist, align 8, !dbg !14791
  %call146 = call float @sqrtf(float %92) #5, !dbg !14792
  %no147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !14793
  %93 = load i16*, i16** %no147, align 8, !dbg !14793
  %fno148 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !14794
  %94 = load float*, float** %fno148, align 8, !dbg !14794
  %mask149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14795
  %95 = load float*, float** %mask149, align 8, !dbg !14795
  %tobool150 = icmp ne float* %95, null, !dbg !14796
  br i1 %tobool150, label %cond.true151, label %cond.false153, !dbg !14796

cond.true151:                                     ; preds = %if.then144
  %mask152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !14797
  %96 = load float*, float** %mask152, align 8, !dbg !14797
  %97 = load float, float* %96, align 4, !dbg !14798
  br label %cond.end154, !dbg !14796

cond.false153:                                    ; preds = %if.then144
  br label %cond.end154, !dbg !14796

cond.end154:                                      ; preds = %cond.false153, %cond.true151
  %cond155 = phi float [ %97, %cond.true151 ], [ 0.000000e+00, %cond.false153 ], !dbg !14796
  %call156 = call float @tex_strength(%struct.SculptSession* %89, %struct.Brush* %90, float* %91, float %call146, i16* %93, float* %94, float %cond155), !dbg !14799
  store float %call156, float* %fade, align 4, !dbg !14787
  %98 = load [3 x float]*, [3 x float]** %proxy, align 8, !dbg !14800
  %i157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14801
  %99 = load i32, i32* %i157, align 4, !dbg !14801
  %idxprom158 = sext i32 %99 to i64, !dbg !14800
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %98, i64 %idxprom158, !dbg !14800
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !14800
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !14802
  %100 = load float, float* %fade, align 4, !dbg !14803
  call void @mul_v3_v3fl(float* %arraydecay160, float* %arraydecay161, float %100), !dbg !14804
  %mvert162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14805
  %101 = load %struct.MVert*, %struct.MVert** %mvert162, align 8, !dbg !14805
  %tobool163 = icmp ne %struct.MVert* %101, null, !dbg !14807
  br i1 %tobool163, label %if.then164, label %if.end169, !dbg !14808

if.then164:                                       ; preds = %cond.end154
  %mvert165 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !14809
  %102 = load %struct.MVert*, %struct.MVert** %mvert165, align 8, !dbg !14809
  %flag166 = getelementptr inbounds %struct.MVert, %struct.MVert* %102, i32 0, i32 2, !dbg !14810
  %103 = load i8, i8* %flag166, align 2, !dbg !14811
  %conv167 = zext i8 %103 to i32, !dbg !14811
  %or = or i32 %conv167, 128, !dbg !14811
  %conv168 = trunc i32 %or to i8, !dbg !14811
  store i8 %conv168, i8* %flag166, align 2, !dbg !14811
  br label %if.end169, !dbg !14812

if.end169:                                        ; preds = %if.then164, %cond.end154
  br label %if.end170, !dbg !14813

if.end170:                                        ; preds = %if.end169, %if.end140
  br label %for.inc, !dbg !14814

for.inc:                                          ; preds = %if.end170, %if.then126, %if.then90, %if.then75
  %gx171 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !14748
  %104 = load i32, i32* %gx171, align 4, !dbg !14748
  %inc = add nsw i32 %104, 1, !dbg !14748
  store i32 %inc, i32* %gx171, align 4, !dbg !14748
  %i172 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14748
  %105 = load i32, i32* %i172, align 4, !dbg !14748
  %inc173 = add nsw i32 %105, 1, !dbg !14748
  store i32 %inc173, i32* %i172, align 4, !dbg !14748
  br label %for.cond36, !dbg !14748, !llvm.loop !14815

for.end:                                          ; preds = %for.cond36
  br label %for.inc174, !dbg !14817

for.inc174:                                       ; preds = %for.end
  %gy175 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14743
  %106 = load i32, i32* %gy175, align 8, !dbg !14743
  %inc176 = add nsw i32 %106, 1, !dbg !14743
  store i32 %inc176, i32* %gy175, align 8, !dbg !14743
  br label %for.cond31, !dbg !14743, !llvm.loop !14818

for.end177:                                       ; preds = %for.cond31
  br label %for.inc178, !dbg !14820

for.inc178:                                       ; preds = %for.end177
  %g179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14729
  %107 = load i32, i32* %g179, align 8, !dbg !14729
  %inc180 = add nsw i32 %107, 1, !dbg !14729
  store i32 %inc180, i32* %g179, align 8, !dbg !14729
  br label %for.cond12, !dbg !14729, !llvm.loop !14821

for.end181:                                       ; preds = %for.cond12
  br label %for.inc182, !dbg !14823

for.inc182:                                       ; preds = %for.end181
  %108 = load i32, i32* %n, align 4, !dbg !14824
  %inc183 = add nsw i32 %108, 1, !dbg !14824
  store i32 %inc183, i32* %n, align 4, !dbg !14824
  br label %for.cond, !dbg !14825, !llvm.loop !14826

for.end184:                                       ; preds = %for.cond
  ret void, !dbg !14828
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_sculpt_normal(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float* %an) #0 !dbg !14829 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %an.addr = alloca float*, align 8
  %brush = alloca %struct.Brush*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14832, metadata !DIExpression()), !dbg !14833
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14834, metadata !DIExpression()), !dbg !14835
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14836, metadata !DIExpression()), !dbg !14837
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14838, metadata !DIExpression()), !dbg !14839
  store float* %an, float** %an.addr, align 8
  call void @llvm.dbg.declare(metadata float** %an.addr, metadata !14840, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14842, metadata !DIExpression()), !dbg !14843
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14844
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !14845
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14846
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14843
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14847, metadata !DIExpression()), !dbg !14848
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14849
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !14850
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14850
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !14848
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14851
  %sculpt_plane = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 28, !dbg !14852
  %4 = load i32, i32* %sculpt_plane, align 8, !dbg !14852
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb4
    i32 4, label %sw.bb8
    i32 0, label %sw.bb12
  ], !dbg !14853

sw.bb:                                            ; preds = %entry
  %5 = load float*, float** %an.addr, align 8, !dbg !14854
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14856
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !14857
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14857
  %true_view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 32, !dbg !14858
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %true_view_normal, i64 0, i64 0, !dbg !14856
  call void @copy_v3_v3(float* %5, float* %arraydecay), !dbg !14859
  br label %sw.epilog, !dbg !14860

sw.bb1:                                           ; preds = %entry
  %8 = load float*, float** %an.addr, align 8, !dbg !14861
  %arrayidx = getelementptr inbounds float, float* %8, i64 1, !dbg !14861
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !14862
  %9 = load float*, float** %an.addr, align 8, !dbg !14863
  %arrayidx2 = getelementptr inbounds float, float* %9, i64 2, !dbg !14863
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !14864
  %10 = load float*, float** %an.addr, align 8, !dbg !14865
  %arrayidx3 = getelementptr inbounds float, float* %10, i64 0, !dbg !14865
  store float 1.000000e+00, float* %arrayidx3, align 4, !dbg !14866
  br label %sw.epilog, !dbg !14867

sw.bb4:                                           ; preds = %entry
  %11 = load float*, float** %an.addr, align 8, !dbg !14868
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 0, !dbg !14868
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !14869
  %12 = load float*, float** %an.addr, align 8, !dbg !14870
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 2, !dbg !14870
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !14871
  %13 = load float*, float** %an.addr, align 8, !dbg !14872
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 1, !dbg !14872
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !14873
  br label %sw.epilog, !dbg !14874

sw.bb8:                                           ; preds = %entry
  %14 = load float*, float** %an.addr, align 8, !dbg !14875
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !14875
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !14876
  %15 = load float*, float** %an.addr, align 8, !dbg !14877
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 1, !dbg !14877
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !14878
  %16 = load float*, float** %an.addr, align 8, !dbg !14879
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !14879
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !14880
  br label %sw.epilog, !dbg !14881

sw.bb12:                                          ; preds = %entry
  %17 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14882
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14883
  %19 = load float*, float** %an.addr, align 8, !dbg !14884
  %20 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14885
  %21 = load i32, i32* %totnode.addr, align 4, !dbg !14886
  call void @calc_area_normal(%struct.Sculpt* %17, %struct.Object* %18, float* %19, %struct.PBVHNode** %20, i32 %21), !dbg !14887
  br label %sw.epilog, !dbg !14888

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !14889

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb8, %sw.bb4, %sw.bb1, %sw.bb
  ret void, !dbg !14890
}

; Function Attrs: noinline nounwind uwtable
define internal void @flip_v3(float* %v, i8 zeroext %symm) #0 !dbg !14891 {
entry:
  %v.addr = alloca float*, align 8
  %symm.addr = alloca i8, align 1
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !14894, metadata !DIExpression()), !dbg !14895
  store i8 %symm, i8* %symm.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %symm.addr, metadata !14896, metadata !DIExpression()), !dbg !14897
  %0 = load float*, float** %v.addr, align 8, !dbg !14898
  %1 = load float*, float** %v.addr, align 8, !dbg !14899
  %2 = load i8, i8* %symm.addr, align 1, !dbg !14900
  call void @flip_v3_v3(float* %0, float* %1, i8 zeroext %2), !dbg !14901
  ret void, !dbg !14902
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_area_normal(%struct.Sculpt* %sd, %struct.Object* %ob, float* %an, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !14903 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %an.addr = alloca float*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %out_flip = alloca [3 x float], align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %n = alloca i32, align 4
  %original = alloca i8, align 1
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %unode = alloca %struct.SculptUndoNode*, align 8
  %private_an = alloca [3 x float], align 4
  %private_out_flip = alloca [3 x float], align 4
  %fno164 = alloca [3 x float], align 4
  %fno377 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !14906, metadata !DIExpression()), !dbg !14907
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14908, metadata !DIExpression()), !dbg !14909
  store float* %an, float** %an.addr, align 8
  call void @llvm.dbg.declare(metadata float** %an.addr, metadata !14910, metadata !DIExpression()), !dbg !14911
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !14912, metadata !DIExpression()), !dbg !14913
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !14914, metadata !DIExpression()), !dbg !14915
  call void @llvm.dbg.declare(metadata [3 x float]* %out_flip, metadata !14916, metadata !DIExpression()), !dbg !14917
  %0 = bitcast [3 x float]* %out_flip to i8*, !dbg !14917
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !14917
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !14918, metadata !DIExpression()), !dbg !14919
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14920
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !14921
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !14921
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !14919
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !14922, metadata !DIExpression()), !dbg !14923
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14924
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %3, i32 0, i32 0, !dbg !14925
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !14926
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !14923
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14927, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.declare(metadata i8* %original, metadata !14929, metadata !DIExpression()), !dbg !14930
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14931
  %paint1 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %4, i32 0, i32 0, !dbg !14932
  %call2 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint1), !dbg !14933
  %sculpt_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %call2, i32 0, i32 34, !dbg !14934
  %5 = load i8, i8* %sculpt_tool, align 8, !dbg !14934
  %conv = zext i8 %5 to i32, !dbg !14933
  %cmp = icmp eq i32 %conv, 5, !dbg !14935
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14933

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14933

cond.false:                                       ; preds = %entry
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14936
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !14937
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !14937
  %original4 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 41, !dbg !14938
  %8 = load i8, i8* %original4, align 4, !dbg !14938
  %conv5 = zext i8 %8 to i32, !dbg !14936
  br label %cond.end, !dbg !14933

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv5, %cond.false ], !dbg !14933
  %conv6 = trunc i32 %cond to i8, !dbg !14939
  store i8 %conv6, i8* %original, align 1, !dbg !14940
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14941
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 10, !dbg !14943
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !14943
  %tobool = icmp ne %struct.BMesh* %10, null, !dbg !14941
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14944

lor.lhs.false:                                    ; preds = %cond.end
  %11 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !14945
  %sculpt_tool7 = getelementptr inbounds %struct.Brush, %struct.Brush* %11, i32 0, i32 34, !dbg !14946
  %12 = load i8, i8* %sculpt_tool7, align 8, !dbg !14946
  %conv8 = zext i8 %12 to i32, !dbg !14945
  %cmp9 = icmp eq i32 %conv8, 19, !dbg !14947
  br i1 %cmp9, label %if.then, label %if.end, !dbg !14948

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  store i8 0, i8* %original, align 1, !dbg !14949
  br label %if.end, !dbg !14950

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !14951
  %14 = load float*, float** %an.addr, align 8, !dbg !14952
  call void @zero_v3(float* %14), !dbg !14953
  store i32 0, i32* %n, align 4, !dbg !14954
  br label %for.cond, !dbg !14956

for.cond:                                         ; preds = %for.inc413, %if.end
  %15 = load i32, i32* %n, align 4, !dbg !14957
  %16 = load i32, i32* %totnode.addr, align 4, !dbg !14959
  %cmp11 = icmp slt i32 %15, %16, !dbg !14960
  br i1 %cmp11, label %for.body, label %for.end415, !dbg !14961

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !14962, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !14965, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !14967, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.declare(metadata [3 x float]* %private_an, metadata !14969, metadata !DIExpression()), !dbg !14970
  %17 = bitcast [3 x float]* %private_an to i8*, !dbg !14970
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 12, i1 false), !dbg !14970
  call void @llvm.dbg.declare(metadata [3 x float]* %private_out_flip, metadata !14971, metadata !DIExpression()), !dbg !14972
  %18 = bitcast [3 x float]* %private_out_flip to i8*, !dbg !14972
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 12, i1 false), !dbg !14972
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14973
  %20 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14974
  %21 = load i32, i32* %n, align 4, !dbg !14975
  %idxprom = sext i32 %21 to i64, !dbg !14974
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %20, i64 %idxprom, !dbg !14974
  %22 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !14974
  %call13 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %19, %struct.PBVHNode* %22, i32 0), !dbg !14976
  store %struct.SculptUndoNode* %call13, %struct.SculptUndoNode** %unode, align 8, !dbg !14977
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14978
  call void @sculpt_brush_test_init(%struct.SculptSession* %23, %struct.SculptBrushTest* %test), !dbg !14979
  %24 = load i8, i8* %original, align 1, !dbg !14980
  %tobool14 = icmp ne i8 %24, 0, !dbg !14980
  br i1 %tobool14, label %if.then15, label %if.else188, !dbg !14982

if.then15:                                        ; preds = %for.body
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !14983
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 15, !dbg !14983
  %26 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14983
  %27 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !14983
  %28 = load i32, i32* %n, align 4, !dbg !14983
  %idxprom16 = sext i32 %28 to i64, !dbg !14983
  %arrayidx17 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %27, i64 %idxprom16, !dbg !14983
  %29 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx17, align 8, !dbg !14983
  call void @pbvh_vertex_iter_init(%struct.PBVH* %26, %struct.PBVHNode* %29, %struct.PBVHVertexIter* %vd, i32 1), !dbg !14983
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !14985
  store i32 0, i32* %i, align 4, !dbg !14985
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14985
  store i32 0, i32* %g, align 8, !dbg !14985
  br label %for.cond18, !dbg !14985

for.cond18:                                       ; preds = %for.inc184, %if.then15
  %g19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14987
  %30 = load i32, i32* %g19, align 8, !dbg !14987
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !14987
  %31 = load i32, i32* %totgrid, align 8, !dbg !14987
  %cmp20 = icmp slt i32 %30, %31, !dbg !14987
  br i1 %cmp20, label %for.body22, label %for.end187, !dbg !14985

for.body22:                                       ; preds = %for.cond18
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14989
  %32 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !14989
  %tobool23 = icmp ne %struct.CCGElem** %32, null, !dbg !14989
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !14992

if.then24:                                        ; preds = %for.body22
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14993
  %33 = load i32, i32* %gridsize, align 4, !dbg !14993
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14993
  store i32 %33, i32* %width, align 4, !dbg !14993
  %gridsize25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !14993
  %34 = load i32, i32* %gridsize25, align 4, !dbg !14993
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14993
  store i32 %34, i32* %height, align 8, !dbg !14993
  %grids26 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !14993
  %35 = load %struct.CCGElem**, %struct.CCGElem*** %grids26, align 8, !dbg !14993
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14993
  %36 = load i32*, i32** %grid_indices, align 8, !dbg !14993
  %g27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14993
  %37 = load i32, i32* %g27, align 8, !dbg !14993
  %idxprom28 = sext i32 %37 to i64, !dbg !14993
  %arrayidx29 = getelementptr inbounds i32, i32* %36, i64 %idxprom28, !dbg !14993
  %38 = load i32, i32* %arrayidx29, align 4, !dbg !14993
  %idxprom30 = sext i32 %38 to i64, !dbg !14993
  %arrayidx31 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %35, i64 %idxprom30, !dbg !14993
  %39 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx31, align 8, !dbg !14993
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !14993
  store %struct.CCGElem* %39, %struct.CCGElem** %grid, align 8, !dbg !14993
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !14995
  %40 = load i32**, i32*** %grid_hidden, align 8, !dbg !14995
  %grid_indices32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !14995
  %41 = load i32*, i32** %grid_indices32, align 8, !dbg !14995
  %g33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14995
  %42 = load i32, i32* %g33, align 8, !dbg !14995
  %idxprom34 = sext i32 %42 to i64, !dbg !14995
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !14995
  %43 = load i32, i32* %arrayidx35, align 4, !dbg !14995
  %idxprom36 = sext i32 %43 to i64, !dbg !14995
  %arrayidx37 = getelementptr inbounds i32*, i32** %40, i64 %idxprom36, !dbg !14995
  %44 = load i32*, i32** %arrayidx37, align 8, !dbg !14995
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !14995
  store i32* %44, i32** %gh, align 8, !dbg !14995
  br label %if.end40, !dbg !14993

if.else:                                          ; preds = %for.body22
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !14997
  %45 = load i32, i32* %totvert, align 8, !dbg !14997
  %width38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !14997
  store i32 %45, i32* %width38, align 4, !dbg !14997
  %height39 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !14997
  store i32 1, i32* %height39, align 8, !dbg !14997
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then24
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !14999
  store i32 0, i32* %gy, align 8, !dbg !14999
  br label %for.cond41, !dbg !14999

for.cond41:                                       ; preds = %for.inc180, %if.end40
  %gy42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15001
  %46 = load i32, i32* %gy42, align 8, !dbg !15001
  %height43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !15001
  %47 = load i32, i32* %height43, align 8, !dbg !15001
  %cmp44 = icmp slt i32 %46, %47, !dbg !15001
  br i1 %cmp44, label %for.body46, label %for.end183, !dbg !14999

for.body46:                                       ; preds = %for.cond41
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15003
  store i32 0, i32* %gx, align 4, !dbg !15003
  br label %for.cond47, !dbg !15003

for.cond47:                                       ; preds = %for.inc, %for.body46
  %gx48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15006
  %48 = load i32, i32* %gx48, align 4, !dbg !15006
  %width49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !15006
  %49 = load i32, i32* %width49, align 4, !dbg !15006
  %cmp50 = icmp slt i32 %48, %49, !dbg !15006
  br i1 %cmp50, label %for.body52, label %for.end, !dbg !15003

for.body52:                                       ; preds = %for.cond47
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15008
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !15008
  %tobool54 = icmp ne %struct.CCGElem* %50, null, !dbg !15008
  br i1 %tobool54, label %if.then55, label %if.else93, !dbg !15011

if.then55:                                        ; preds = %for.body52
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15012
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !15012
  %grid56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15012
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid56, align 8, !dbg !15012
  %call57 = call float* @CCG_elem_co(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !15012
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15012
  store float* %call57, float** %co, align 8, !dbg !15012
  %key58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15012
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key58, align 8, !dbg !15012
  %grid59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15012
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid59, align 8, !dbg !15012
  %call60 = call float* @CCG_elem_no(%struct.CCGKey* %53, %struct.CCGElem* %54), !dbg !15012
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !15012
  store float* %call60, float** %fno, align 8, !dbg !15012
  %key61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15012
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key61, align 8, !dbg !15012
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %55, i32 0, i32 9, !dbg !15012
  %56 = load i32, i32* %has_mask, align 4, !dbg !15012
  %tobool62 = icmp ne i32 %56, 0, !dbg !15012
  br i1 %tobool62, label %cond.true63, label %cond.false67, !dbg !15012

cond.true63:                                      ; preds = %if.then55
  %key64 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15012
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key64, align 8, !dbg !15012
  %grid65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15012
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid65, align 8, !dbg !15012
  %call66 = call float* @CCG_elem_mask(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !15012
  br label %cond.end68, !dbg !15012

cond.false67:                                     ; preds = %if.then55
  br label %cond.end68, !dbg !15012

cond.end68:                                       ; preds = %cond.false67, %cond.true63
  %cond69 = phi float* [ %call66, %cond.true63 ], [ null, %cond.false67 ], !dbg !15012
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15012
  store float* %cond69, float** %mask, align 8, !dbg !15012
  %key70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15012
  %59 = load %struct.CCGKey*, %struct.CCGKey** %key70, align 8, !dbg !15012
  %grid71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15012
  %60 = load %struct.CCGElem*, %struct.CCGElem** %grid71, align 8, !dbg !15012
  %call72 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %59, %struct.CCGElem* %60), !dbg !15012
  %grid73 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15012
  store %struct.CCGElem* %call72, %struct.CCGElem** %grid73, align 8, !dbg !15012
  %gh74 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !15014
  %61 = load i32*, i32** %gh74, align 8, !dbg !15014
  %tobool75 = icmp ne i32* %61, null, !dbg !15014
  br i1 %tobool75, label %if.then76, label %if.end92, !dbg !15012

if.then76:                                        ; preds = %cond.end68
  %gh77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !15016
  %62 = load i32*, i32** %gh77, align 8, !dbg !15016
  %gy78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15016
  %63 = load i32, i32* %gy78, align 8, !dbg !15016
  %gridsize79 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15016
  %64 = load i32, i32* %gridsize79, align 4, !dbg !15016
  %mul = mul nsw i32 %63, %64, !dbg !15016
  %gx80 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15016
  %65 = load i32, i32* %gx80, align 4, !dbg !15016
  %add = add nsw i32 %mul, %65, !dbg !15016
  %shr = ashr i32 %add, 5, !dbg !15016
  %idxprom81 = sext i32 %shr to i64, !dbg !15016
  %arrayidx82 = getelementptr inbounds i32, i32* %62, i64 %idxprom81, !dbg !15016
  %66 = load i32, i32* %arrayidx82, align 4, !dbg !15016
  %gy83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15016
  %67 = load i32, i32* %gy83, align 8, !dbg !15016
  %gridsize84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15016
  %68 = load i32, i32* %gridsize84, align 4, !dbg !15016
  %mul85 = mul nsw i32 %67, %68, !dbg !15016
  %gx86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15016
  %69 = load i32, i32* %gx86, align 4, !dbg !15016
  %add87 = add nsw i32 %mul85, %69, !dbg !15016
  %and = and i32 %add87, 31, !dbg !15016
  %shl = shl i32 1, %and, !dbg !15016
  %and88 = and i32 %66, %shl, !dbg !15016
  %tobool89 = icmp ne i32 %and88, 0, !dbg !15016
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !15019

if.then90:                                        ; preds = %if.then76
  br label %for.inc, !dbg !15016

if.end91:                                         ; preds = %if.then76
  br label %if.end92, !dbg !15019

if.end92:                                         ; preds = %if.end91, %cond.end68
  br label %if.end155, !dbg !15012

if.else93:                                        ; preds = %for.body52
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !15020
  %70 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !15020
  %tobool94 = icmp ne %struct.MVert* %70, null, !dbg !15020
  br i1 %tobool94, label %if.then95, label %if.else125, !dbg !15008

if.then95:                                        ; preds = %if.else93
  %mverts96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !15022
  %71 = load %struct.MVert*, %struct.MVert** %mverts96, align 8, !dbg !15022
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !15022
  %72 = load i32*, i32** %vert_indices, align 8, !dbg !15022
  %gx97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15022
  %73 = load i32, i32* %gx97, align 4, !dbg !15022
  %idxprom98 = sext i32 %73 to i64, !dbg !15022
  %arrayidx99 = getelementptr inbounds i32, i32* %72, i64 %idxprom98, !dbg !15022
  %74 = load i32, i32* %arrayidx99, align 4, !dbg !15022
  %idxprom100 = sext i32 %74 to i64, !dbg !15022
  %arrayidx101 = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i64 %idxprom100, !dbg !15022
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15022
  store %struct.MVert* %arrayidx101, %struct.MVert** %mvert, align 8, !dbg !15022
  %mvert102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15024
  %75 = load %struct.MVert*, %struct.MVert** %mvert102, align 8, !dbg !15024
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i32 0, i32 2, !dbg !15024
  %76 = load i8, i8* %flag, align 2, !dbg !15024
  %conv103 = zext i8 %76 to i32, !dbg !15024
  %and104 = and i32 %conv103, 16, !dbg !15024
  %tobool105 = icmp ne i32 %and104, 0, !dbg !15024
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !15022

if.then106:                                       ; preds = %if.then95
  br label %for.inc, !dbg !15024

if.end107:                                        ; preds = %if.then95
  %mvert108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15022
  %77 = load %struct.MVert*, %struct.MVert** %mvert108, align 8, !dbg !15022
  %co109 = getelementptr inbounds %struct.MVert, %struct.MVert* %77, i32 0, i32 0, !dbg !15022
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co109, i64 0, i64 0, !dbg !15022
  %co110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15022
  store float* %arraydecay, float** %co110, align 8, !dbg !15022
  %mvert111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15022
  %78 = load %struct.MVert*, %struct.MVert** %mvert111, align 8, !dbg !15022
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %78, i32 0, i32 1, !dbg !15022
  %arraydecay112 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !15022
  %no113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !15022
  store i16* %arraydecay112, i16** %no113, align 8, !dbg !15022
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !15026
  %79 = load float*, float** %vmask, align 8, !dbg !15026
  %tobool114 = icmp ne float* %79, null, !dbg !15026
  br i1 %tobool114, label %if.then115, label %if.end124, !dbg !15022

if.then115:                                       ; preds = %if.end107
  %vmask116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !15026
  %80 = load float*, float** %vmask116, align 8, !dbg !15026
  %vert_indices117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !15026
  %81 = load i32*, i32** %vert_indices117, align 8, !dbg !15026
  %gx118 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15026
  %82 = load i32, i32* %gx118, align 4, !dbg !15026
  %idxprom119 = sext i32 %82 to i64, !dbg !15026
  %arrayidx120 = getelementptr inbounds i32, i32* %81, i64 %idxprom119, !dbg !15026
  %83 = load i32, i32* %arrayidx120, align 4, !dbg !15026
  %idxprom121 = sext i32 %83 to i64, !dbg !15026
  %arrayidx122 = getelementptr inbounds float, float* %80, i64 %idxprom121, !dbg !15026
  %mask123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15026
  store float* %arrayidx122, float** %mask123, align 8, !dbg !15026
  br label %if.end124, !dbg !15026

if.end124:                                        ; preds = %if.then115, %if.end107
  br label %if.end154, !dbg !15022

if.else125:                                       ; preds = %if.else93
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15028
  %call126 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !15028
  %tobool127 = icmp ne i8 %call126, 0, !dbg !15028
  br i1 %tobool127, label %if.else132, label %if.then128, !dbg !15031

if.then128:                                       ; preds = %if.else125
  %bm_unique_verts129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15032
  %call130 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts129), !dbg !15032
  %84 = bitcast i8* %call130 to %struct.BMVert*, !dbg !15032
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15032
  store %struct.BMVert* %84, %struct.BMVert** %bm_vert, align 8, !dbg !15032
  %bm_unique_verts131 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15032
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts131), !dbg !15032
  br label %if.end136, !dbg !15032

if.else132:                                       ; preds = %if.else125
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !15034
  %call133 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !15034
  %85 = bitcast i8* %call133 to %struct.BMVert*, !dbg !15034
  %bm_vert134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15034
  store %struct.BMVert* %85, %struct.BMVert** %bm_vert134, align 8, !dbg !15034
  %bm_other_verts135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !15034
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts135), !dbg !15034
  br label %if.end136

if.end136:                                        ; preds = %if.else132, %if.then128
  %bm_vert137 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15036
  %86 = load %struct.BMVert*, %struct.BMVert** %bm_vert137, align 8, !dbg !15036
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %86, i32 0, i32 0, !dbg !15036
  %call138 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !15036
  %conv139 = zext i8 %call138 to i32, !dbg !15036
  %tobool140 = icmp ne i32 %conv139, 0, !dbg !15036
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !15031

if.then141:                                       ; preds = %if.end136
  br label %for.inc, !dbg !15036

if.end142:                                        ; preds = %if.end136
  %bm_vert143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15031
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert143, align 8, !dbg !15031
  %co144 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 2, !dbg !15031
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %co144, i64 0, i64 0, !dbg !15031
  %co146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15031
  store float* %arraydecay145, float** %co146, align 8, !dbg !15031
  %bm_vert147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15031
  %88 = load %struct.BMVert*, %struct.BMVert** %bm_vert147, align 8, !dbg !15031
  %no148 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %88, i32 0, i32 3, !dbg !15031
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %no148, i64 0, i64 0, !dbg !15031
  %fno150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !15031
  store float* %arraydecay149, float** %fno150, align 8, !dbg !15031
  %bm_vert151 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15031
  %89 = load %struct.BMVert*, %struct.BMVert** %bm_vert151, align 8, !dbg !15031
  %head152 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 0, !dbg !15031
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head152, i32 0, i32 0, !dbg !15031
  %90 = load i8*, i8** %data, align 8, !dbg !15031
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !15031
  %91 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !15031
  %idx.ext = sext i32 %91 to i64, !dbg !15031
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %idx.ext, !dbg !15031
  %92 = bitcast i8* %add.ptr to float*, !dbg !15031
  %mask153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15031
  store float* %92, float** %mask153, align 8, !dbg !15031
  br label %if.end154

if.end154:                                        ; preds = %if.end142, %if.end124
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end92
  %93 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !15038
  %co156 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %93, i32 0, i32 5, !dbg !15041
  %94 = load [3 x float]*, [3 x float]** %co156, align 8, !dbg !15041
  %i157 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !15042
  %95 = load i32, i32* %i157, align 4, !dbg !15042
  %idxprom158 = sext i32 %95 to i64, !dbg !15038
  %arrayidx159 = getelementptr inbounds [3 x float], [3 x float]* %94, i64 %idxprom158, !dbg !15038
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 0, !dbg !15038
  %call161 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %arraydecay160), !dbg !15043
  %tobool162 = icmp ne i8 %call161, 0, !dbg !15043
  br i1 %tobool162, label %if.then163, label %if.end176, !dbg !15044

if.then163:                                       ; preds = %if.end155
  call void @llvm.dbg.declare(metadata [3 x float]* %fno164, metadata !15045, metadata !DIExpression()), !dbg !15047
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %fno164, i64 0, i64 0, !dbg !15048
  %96 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !15049
  %no166 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %96, i32 0, i32 7, !dbg !15050
  %97 = load [3 x i16]*, [3 x i16]** %no166, align 8, !dbg !15050
  %i167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !15051
  %98 = load i32, i32* %i167, align 4, !dbg !15051
  %idxprom168 = sext i32 %98 to i64, !dbg !15049
  %arrayidx169 = getelementptr inbounds [3 x i16], [3 x i16]* %97, i64 %idxprom168, !dbg !15049
  %arraydecay170 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx169, i64 0, i64 0, !dbg !15049
  call void @normal_short_to_float_v3(float* %arraydecay165, i16* %arraydecay170), !dbg !15052
  %99 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15053
  %cache171 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %99, i32 0, i32 28, !dbg !15054
  %100 = load %struct.StrokeCache*, %struct.StrokeCache** %cache171, align 8, !dbg !15054
  %view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %100, i32 0, i32 33, !dbg !15055
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %view_normal, i64 0, i64 0, !dbg !15053
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !15056
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !15057
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %fno164, i64 0, i64 0, !dbg !15058
  call void @add_norm_if(float* %arraydecay172, float* %arraydecay173, float* %arraydecay174, float* %arraydecay175), !dbg !15059
  br label %if.end176, !dbg !15060

if.end176:                                        ; preds = %if.then163, %if.end155
  br label %for.inc, !dbg !15061

for.inc:                                          ; preds = %if.end176, %if.then141, %if.then106, %if.then90
  %gx177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15006
  %101 = load i32, i32* %gx177, align 4, !dbg !15006
  %inc = add nsw i32 %101, 1, !dbg !15006
  store i32 %inc, i32* %gx177, align 4, !dbg !15006
  %i178 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !15006
  %102 = load i32, i32* %i178, align 4, !dbg !15006
  %inc179 = add nsw i32 %102, 1, !dbg !15006
  store i32 %inc179, i32* %i178, align 4, !dbg !15006
  br label %for.cond47, !dbg !15006, !llvm.loop !15062

for.end:                                          ; preds = %for.cond47
  br label %for.inc180, !dbg !15064

for.inc180:                                       ; preds = %for.end
  %gy181 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15001
  %103 = load i32, i32* %gy181, align 8, !dbg !15001
  %inc182 = add nsw i32 %103, 1, !dbg !15001
  store i32 %inc182, i32* %gy181, align 8, !dbg !15001
  br label %for.cond41, !dbg !15001, !llvm.loop !15065

for.end183:                                       ; preds = %for.cond41
  br label %for.inc184, !dbg !15067

for.inc184:                                       ; preds = %for.end183
  %g185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !14987
  %104 = load i32, i32* %g185, align 8, !dbg !14987
  %inc186 = add nsw i32 %104, 1, !dbg !14987
  store i32 %inc186, i32* %g185, align 8, !dbg !14987
  br label %for.cond18, !dbg !14987, !llvm.loop !15068

for.end187:                                       ; preds = %for.cond18
  br label %if.end409, !dbg !15070

if.else188:                                       ; preds = %for.body
  %105 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15071
  %pbvh189 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %105, i32 0, i32 15, !dbg !15071
  %106 = load %struct.PBVH*, %struct.PBVH** %pbvh189, align 8, !dbg !15071
  %107 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !15071
  %108 = load i32, i32* %n, align 4, !dbg !15071
  %idxprom190 = sext i32 %108 to i64, !dbg !15071
  %arrayidx191 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %107, i64 %idxprom190, !dbg !15071
  %109 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx191, align 8, !dbg !15071
  call void @pbvh_vertex_iter_init(%struct.PBVH* %106, %struct.PBVHNode* %109, %struct.PBVHVertexIter* %vd, i32 1), !dbg !15071
  %i192 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !15073
  store i32 0, i32* %i192, align 4, !dbg !15073
  %g193 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !15073
  store i32 0, i32* %g193, align 8, !dbg !15073
  br label %for.cond194, !dbg !15073

for.cond194:                                      ; preds = %for.inc405, %if.else188
  %g195 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !15075
  %110 = load i32, i32* %g195, align 8, !dbg !15075
  %totgrid196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !15075
  %111 = load i32, i32* %totgrid196, align 8, !dbg !15075
  %cmp197 = icmp slt i32 %110, %111, !dbg !15075
  br i1 %cmp197, label %for.body199, label %for.end408, !dbg !15073

for.body199:                                      ; preds = %for.cond194
  %grids200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !15077
  %112 = load %struct.CCGElem**, %struct.CCGElem*** %grids200, align 8, !dbg !15077
  %tobool201 = icmp ne %struct.CCGElem** %112, null, !dbg !15077
  br i1 %tobool201, label %if.then202, label %if.else223, !dbg !15080

if.then202:                                       ; preds = %for.body199
  %gridsize203 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15081
  %113 = load i32, i32* %gridsize203, align 4, !dbg !15081
  %width204 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !15081
  store i32 %113, i32* %width204, align 4, !dbg !15081
  %gridsize205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15081
  %114 = load i32, i32* %gridsize205, align 4, !dbg !15081
  %height206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !15081
  store i32 %114, i32* %height206, align 8, !dbg !15081
  %grids207 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !15081
  %115 = load %struct.CCGElem**, %struct.CCGElem*** %grids207, align 8, !dbg !15081
  %grid_indices208 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !15081
  %116 = load i32*, i32** %grid_indices208, align 8, !dbg !15081
  %g209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !15081
  %117 = load i32, i32* %g209, align 8, !dbg !15081
  %idxprom210 = sext i32 %117 to i64, !dbg !15081
  %arrayidx211 = getelementptr inbounds i32, i32* %116, i64 %idxprom210, !dbg !15081
  %118 = load i32, i32* %arrayidx211, align 4, !dbg !15081
  %idxprom212 = sext i32 %118 to i64, !dbg !15081
  %arrayidx213 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %115, i64 %idxprom212, !dbg !15081
  %119 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx213, align 8, !dbg !15081
  %grid214 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15081
  store %struct.CCGElem* %119, %struct.CCGElem** %grid214, align 8, !dbg !15081
  %grid_hidden215 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !15083
  %120 = load i32**, i32*** %grid_hidden215, align 8, !dbg !15083
  %grid_indices216 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !15083
  %121 = load i32*, i32** %grid_indices216, align 8, !dbg !15083
  %g217 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !15083
  %122 = load i32, i32* %g217, align 8, !dbg !15083
  %idxprom218 = sext i32 %122 to i64, !dbg !15083
  %arrayidx219 = getelementptr inbounds i32, i32* %121, i64 %idxprom218, !dbg !15083
  %123 = load i32, i32* %arrayidx219, align 4, !dbg !15083
  %idxprom220 = sext i32 %123 to i64, !dbg !15083
  %arrayidx221 = getelementptr inbounds i32*, i32** %120, i64 %idxprom220, !dbg !15083
  %124 = load i32*, i32** %arrayidx221, align 8, !dbg !15083
  %gh222 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !15083
  store i32* %124, i32** %gh222, align 8, !dbg !15083
  br label %if.end227, !dbg !15081

if.else223:                                       ; preds = %for.body199
  %totvert224 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !15085
  %125 = load i32, i32* %totvert224, align 8, !dbg !15085
  %width225 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !15085
  store i32 %125, i32* %width225, align 4, !dbg !15085
  %height226 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !15085
  store i32 1, i32* %height226, align 8, !dbg !15085
  br label %if.end227

if.end227:                                        ; preds = %if.else223, %if.then202
  %gy228 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15087
  store i32 0, i32* %gy228, align 8, !dbg !15087
  br label %for.cond229, !dbg !15087

for.cond229:                                      ; preds = %for.inc401, %if.end227
  %gy230 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15089
  %126 = load i32, i32* %gy230, align 8, !dbg !15089
  %height231 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !15089
  %127 = load i32, i32* %height231, align 8, !dbg !15089
  %cmp232 = icmp slt i32 %126, %127, !dbg !15089
  br i1 %cmp232, label %for.body234, label %for.end404, !dbg !15087

for.body234:                                      ; preds = %for.cond229
  %gx235 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15091
  store i32 0, i32* %gx235, align 4, !dbg !15091
  br label %for.cond236, !dbg !15091

for.cond236:                                      ; preds = %for.inc395, %for.body234
  %gx237 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15094
  %128 = load i32, i32* %gx237, align 4, !dbg !15094
  %width238 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !15094
  %129 = load i32, i32* %width238, align 4, !dbg !15094
  %cmp239 = icmp slt i32 %128, %129, !dbg !15094
  br i1 %cmp239, label %for.body241, label %for.end400, !dbg !15091

for.body241:                                      ; preds = %for.cond236
  %grid242 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15096
  %130 = load %struct.CCGElem*, %struct.CCGElem** %grid242, align 8, !dbg !15096
  %tobool243 = icmp ne %struct.CCGElem* %130, null, !dbg !15096
  br i1 %tobool243, label %if.then244, label %if.else292, !dbg !15099

if.then244:                                       ; preds = %for.body241
  %key245 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15100
  %131 = load %struct.CCGKey*, %struct.CCGKey** %key245, align 8, !dbg !15100
  %grid246 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15100
  %132 = load %struct.CCGElem*, %struct.CCGElem** %grid246, align 8, !dbg !15100
  %call247 = call float* @CCG_elem_co(%struct.CCGKey* %131, %struct.CCGElem* %132), !dbg !15100
  %co248 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15100
  store float* %call247, float** %co248, align 8, !dbg !15100
  %key249 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15100
  %133 = load %struct.CCGKey*, %struct.CCGKey** %key249, align 8, !dbg !15100
  %grid250 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15100
  %134 = load %struct.CCGElem*, %struct.CCGElem** %grid250, align 8, !dbg !15100
  %call251 = call float* @CCG_elem_no(%struct.CCGKey* %133, %struct.CCGElem* %134), !dbg !15100
  %fno252 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !15100
  store float* %call251, float** %fno252, align 8, !dbg !15100
  %key253 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15100
  %135 = load %struct.CCGKey*, %struct.CCGKey** %key253, align 8, !dbg !15100
  %has_mask254 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %135, i32 0, i32 9, !dbg !15100
  %136 = load i32, i32* %has_mask254, align 4, !dbg !15100
  %tobool255 = icmp ne i32 %136, 0, !dbg !15100
  br i1 %tobool255, label %cond.true256, label %cond.false260, !dbg !15100

cond.true256:                                     ; preds = %if.then244
  %key257 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15100
  %137 = load %struct.CCGKey*, %struct.CCGKey** %key257, align 8, !dbg !15100
  %grid258 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15100
  %138 = load %struct.CCGElem*, %struct.CCGElem** %grid258, align 8, !dbg !15100
  %call259 = call float* @CCG_elem_mask(%struct.CCGKey* %137, %struct.CCGElem* %138), !dbg !15100
  br label %cond.end261, !dbg !15100

cond.false260:                                    ; preds = %if.then244
  br label %cond.end261, !dbg !15100

cond.end261:                                      ; preds = %cond.false260, %cond.true256
  %cond262 = phi float* [ %call259, %cond.true256 ], [ null, %cond.false260 ], !dbg !15100
  %mask263 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15100
  store float* %cond262, float** %mask263, align 8, !dbg !15100
  %key264 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !15100
  %139 = load %struct.CCGKey*, %struct.CCGKey** %key264, align 8, !dbg !15100
  %grid265 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15100
  %140 = load %struct.CCGElem*, %struct.CCGElem** %grid265, align 8, !dbg !15100
  %call266 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %139, %struct.CCGElem* %140), !dbg !15100
  %grid267 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !15100
  store %struct.CCGElem* %call266, %struct.CCGElem** %grid267, align 8, !dbg !15100
  %gh268 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !15102
  %141 = load i32*, i32** %gh268, align 8, !dbg !15102
  %tobool269 = icmp ne i32* %141, null, !dbg !15102
  br i1 %tobool269, label %if.then270, label %if.end291, !dbg !15100

if.then270:                                       ; preds = %cond.end261
  %gh271 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !15104
  %142 = load i32*, i32** %gh271, align 8, !dbg !15104
  %gy272 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15104
  %143 = load i32, i32* %gy272, align 8, !dbg !15104
  %gridsize273 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15104
  %144 = load i32, i32* %gridsize273, align 4, !dbg !15104
  %mul274 = mul nsw i32 %143, %144, !dbg !15104
  %gx275 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15104
  %145 = load i32, i32* %gx275, align 4, !dbg !15104
  %add276 = add nsw i32 %mul274, %145, !dbg !15104
  %shr277 = ashr i32 %add276, 5, !dbg !15104
  %idxprom278 = sext i32 %shr277 to i64, !dbg !15104
  %arrayidx279 = getelementptr inbounds i32, i32* %142, i64 %idxprom278, !dbg !15104
  %146 = load i32, i32* %arrayidx279, align 4, !dbg !15104
  %gy280 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15104
  %147 = load i32, i32* %gy280, align 8, !dbg !15104
  %gridsize281 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !15104
  %148 = load i32, i32* %gridsize281, align 4, !dbg !15104
  %mul282 = mul nsw i32 %147, %148, !dbg !15104
  %gx283 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15104
  %149 = load i32, i32* %gx283, align 4, !dbg !15104
  %add284 = add nsw i32 %mul282, %149, !dbg !15104
  %and285 = and i32 %add284, 31, !dbg !15104
  %shl286 = shl i32 1, %and285, !dbg !15104
  %and287 = and i32 %146, %shl286, !dbg !15104
  %tobool288 = icmp ne i32 %and287, 0, !dbg !15104
  br i1 %tobool288, label %if.then289, label %if.end290, !dbg !15107

if.then289:                                       ; preds = %if.then270
  br label %for.inc395, !dbg !15104

if.end290:                                        ; preds = %if.then270
  br label %if.end291, !dbg !15107

if.end291:                                        ; preds = %if.end290, %cond.end261
  br label %if.end369, !dbg !15100

if.else292:                                       ; preds = %for.body241
  %mverts293 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !15108
  %150 = load %struct.MVert*, %struct.MVert** %mverts293, align 8, !dbg !15108
  %tobool294 = icmp ne %struct.MVert* %150, null, !dbg !15108
  br i1 %tobool294, label %if.then295, label %if.else331, !dbg !15096

if.then295:                                       ; preds = %if.else292
  %mverts296 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !15110
  %151 = load %struct.MVert*, %struct.MVert** %mverts296, align 8, !dbg !15110
  %vert_indices297 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !15110
  %152 = load i32*, i32** %vert_indices297, align 8, !dbg !15110
  %gx298 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15110
  %153 = load i32, i32* %gx298, align 4, !dbg !15110
  %idxprom299 = sext i32 %153 to i64, !dbg !15110
  %arrayidx300 = getelementptr inbounds i32, i32* %152, i64 %idxprom299, !dbg !15110
  %154 = load i32, i32* %arrayidx300, align 4, !dbg !15110
  %idxprom301 = sext i32 %154 to i64, !dbg !15110
  %arrayidx302 = getelementptr inbounds %struct.MVert, %struct.MVert* %151, i64 %idxprom301, !dbg !15110
  %mvert303 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15110
  store %struct.MVert* %arrayidx302, %struct.MVert** %mvert303, align 8, !dbg !15110
  %mvert304 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15112
  %155 = load %struct.MVert*, %struct.MVert** %mvert304, align 8, !dbg !15112
  %flag305 = getelementptr inbounds %struct.MVert, %struct.MVert* %155, i32 0, i32 2, !dbg !15112
  %156 = load i8, i8* %flag305, align 2, !dbg !15112
  %conv306 = zext i8 %156 to i32, !dbg !15112
  %and307 = and i32 %conv306, 16, !dbg !15112
  %tobool308 = icmp ne i32 %and307, 0, !dbg !15112
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !15110

if.then309:                                       ; preds = %if.then295
  br label %for.inc395, !dbg !15112

if.end310:                                        ; preds = %if.then295
  %mvert311 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15110
  %157 = load %struct.MVert*, %struct.MVert** %mvert311, align 8, !dbg !15110
  %co312 = getelementptr inbounds %struct.MVert, %struct.MVert* %157, i32 0, i32 0, !dbg !15110
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %co312, i64 0, i64 0, !dbg !15110
  %co314 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15110
  store float* %arraydecay313, float** %co314, align 8, !dbg !15110
  %mvert315 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !15110
  %158 = load %struct.MVert*, %struct.MVert** %mvert315, align 8, !dbg !15110
  %no316 = getelementptr inbounds %struct.MVert, %struct.MVert* %158, i32 0, i32 1, !dbg !15110
  %arraydecay317 = getelementptr inbounds [3 x i16], [3 x i16]* %no316, i64 0, i64 0, !dbg !15110
  %no318 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !15110
  store i16* %arraydecay317, i16** %no318, align 8, !dbg !15110
  %vmask319 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !15114
  %159 = load float*, float** %vmask319, align 8, !dbg !15114
  %tobool320 = icmp ne float* %159, null, !dbg !15114
  br i1 %tobool320, label %if.then321, label %if.end330, !dbg !15110

if.then321:                                       ; preds = %if.end310
  %vmask322 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !15114
  %160 = load float*, float** %vmask322, align 8, !dbg !15114
  %vert_indices323 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !15114
  %161 = load i32*, i32** %vert_indices323, align 8, !dbg !15114
  %gx324 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15114
  %162 = load i32, i32* %gx324, align 4, !dbg !15114
  %idxprom325 = sext i32 %162 to i64, !dbg !15114
  %arrayidx326 = getelementptr inbounds i32, i32* %161, i64 %idxprom325, !dbg !15114
  %163 = load i32, i32* %arrayidx326, align 4, !dbg !15114
  %idxprom327 = sext i32 %163 to i64, !dbg !15114
  %arrayidx328 = getelementptr inbounds float, float* %160, i64 %idxprom327, !dbg !15114
  %mask329 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15114
  store float* %arrayidx328, float** %mask329, align 8, !dbg !15114
  br label %if.end330, !dbg !15114

if.end330:                                        ; preds = %if.then321, %if.end310
  br label %if.end368, !dbg !15110

if.else331:                                       ; preds = %if.else292
  %bm_unique_verts332 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15116
  %call333 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts332), !dbg !15116
  %tobool334 = icmp ne i8 %call333, 0, !dbg !15116
  br i1 %tobool334, label %if.else340, label %if.then335, !dbg !15119

if.then335:                                       ; preds = %if.else331
  %bm_unique_verts336 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15120
  %call337 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts336), !dbg !15120
  %164 = bitcast i8* %call337 to %struct.BMVert*, !dbg !15120
  %bm_vert338 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15120
  store %struct.BMVert* %164, %struct.BMVert** %bm_vert338, align 8, !dbg !15120
  %bm_unique_verts339 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !15120
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts339), !dbg !15120
  br label %if.end345, !dbg !15120

if.else340:                                       ; preds = %if.else331
  %bm_other_verts341 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !15122
  %call342 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts341), !dbg !15122
  %165 = bitcast i8* %call342 to %struct.BMVert*, !dbg !15122
  %bm_vert343 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15122
  store %struct.BMVert* %165, %struct.BMVert** %bm_vert343, align 8, !dbg !15122
  %bm_other_verts344 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !15122
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts344), !dbg !15122
  br label %if.end345

if.end345:                                        ; preds = %if.else340, %if.then335
  %bm_vert346 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15124
  %166 = load %struct.BMVert*, %struct.BMVert** %bm_vert346, align 8, !dbg !15124
  %head347 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %166, i32 0, i32 0, !dbg !15124
  %call348 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head347, i8 zeroext 2), !dbg !15124
  %conv349 = zext i8 %call348 to i32, !dbg !15124
  %tobool350 = icmp ne i32 %conv349, 0, !dbg !15124
  br i1 %tobool350, label %if.then351, label %if.end352, !dbg !15119

if.then351:                                       ; preds = %if.end345
  br label %for.inc395, !dbg !15124

if.end352:                                        ; preds = %if.end345
  %bm_vert353 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15119
  %167 = load %struct.BMVert*, %struct.BMVert** %bm_vert353, align 8, !dbg !15119
  %co354 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %167, i32 0, i32 2, !dbg !15119
  %arraydecay355 = getelementptr inbounds [3 x float], [3 x float]* %co354, i64 0, i64 0, !dbg !15119
  %co356 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15119
  store float* %arraydecay355, float** %co356, align 8, !dbg !15119
  %bm_vert357 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15119
  %168 = load %struct.BMVert*, %struct.BMVert** %bm_vert357, align 8, !dbg !15119
  %no358 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %168, i32 0, i32 3, !dbg !15119
  %arraydecay359 = getelementptr inbounds [3 x float], [3 x float]* %no358, i64 0, i64 0, !dbg !15119
  %fno360 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !15119
  store float* %arraydecay359, float** %fno360, align 8, !dbg !15119
  %bm_vert361 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !15119
  %169 = load %struct.BMVert*, %struct.BMVert** %bm_vert361, align 8, !dbg !15119
  %head362 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %169, i32 0, i32 0, !dbg !15119
  %data363 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head362, i32 0, i32 0, !dbg !15119
  %170 = load i8*, i8** %data363, align 8, !dbg !15119
  %cd_vert_mask_offset364 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !15119
  %171 = load i32, i32* %cd_vert_mask_offset364, align 8, !dbg !15119
  %idx.ext365 = sext i32 %171 to i64, !dbg !15119
  %add.ptr366 = getelementptr inbounds i8, i8* %170, i64 %idx.ext365, !dbg !15119
  %172 = bitcast i8* %add.ptr366 to float*, !dbg !15119
  %mask367 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !15119
  store float* %172, float** %mask367, align 8, !dbg !15119
  br label %if.end368

if.end368:                                        ; preds = %if.end352, %if.end330
  br label %if.end369

if.end369:                                        ; preds = %if.end368, %if.end291
  %co370 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !15126
  %173 = load float*, float** %co370, align 8, !dbg !15126
  %call371 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %173), !dbg !15129
  %tobool372 = icmp ne i8 %call371, 0, !dbg !15129
  br i1 %tobool372, label %if.then373, label %if.end394, !dbg !15130

if.then373:                                       ; preds = %if.end369
  %no374 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !15131
  %174 = load i16*, i16** %no374, align 8, !dbg !15131
  %tobool375 = icmp ne i16* %174, null, !dbg !15134
  br i1 %tobool375, label %if.then376, label %if.else386, !dbg !15135

if.then376:                                       ; preds = %if.then373
  call void @llvm.dbg.declare(metadata [3 x float]* %fno377, metadata !15136, metadata !DIExpression()), !dbg !15138
  %arraydecay378 = getelementptr inbounds [3 x float], [3 x float]* %fno377, i64 0, i64 0, !dbg !15139
  %no379 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !15140
  %175 = load i16*, i16** %no379, align 8, !dbg !15140
  call void @normal_short_to_float_v3(float* %arraydecay378, i16* %175), !dbg !15141
  %176 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15142
  %cache380 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %176, i32 0, i32 28, !dbg !15143
  %177 = load %struct.StrokeCache*, %struct.StrokeCache** %cache380, align 8, !dbg !15143
  %view_normal381 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %177, i32 0, i32 33, !dbg !15144
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %view_normal381, i64 0, i64 0, !dbg !15142
  %arraydecay383 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !15145
  %arraydecay384 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !15146
  %arraydecay385 = getelementptr inbounds [3 x float], [3 x float]* %fno377, i64 0, i64 0, !dbg !15147
  call void @add_norm_if(float* %arraydecay382, float* %arraydecay383, float* %arraydecay384, float* %arraydecay385), !dbg !15148
  br label %if.end393, !dbg !15149

if.else386:                                       ; preds = %if.then373
  %178 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15150
  %cache387 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %178, i32 0, i32 28, !dbg !15152
  %179 = load %struct.StrokeCache*, %struct.StrokeCache** %cache387, align 8, !dbg !15152
  %view_normal388 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %179, i32 0, i32 33, !dbg !15153
  %arraydecay389 = getelementptr inbounds [3 x float], [3 x float]* %view_normal388, i64 0, i64 0, !dbg !15150
  %arraydecay390 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !15154
  %arraydecay391 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !15155
  %fno392 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !15156
  %180 = load float*, float** %fno392, align 8, !dbg !15156
  call void @add_norm_if(float* %arraydecay389, float* %arraydecay390, float* %arraydecay391, float* %180), !dbg !15157
  br label %if.end393

if.end393:                                        ; preds = %if.else386, %if.then376
  br label %if.end394, !dbg !15158

if.end394:                                        ; preds = %if.end393, %if.end369
  br label %for.inc395, !dbg !15159

for.inc395:                                       ; preds = %if.end394, %if.then351, %if.then309, %if.then289
  %gx396 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !15094
  %181 = load i32, i32* %gx396, align 4, !dbg !15094
  %inc397 = add nsw i32 %181, 1, !dbg !15094
  store i32 %inc397, i32* %gx396, align 4, !dbg !15094
  %i398 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !15094
  %182 = load i32, i32* %i398, align 4, !dbg !15094
  %inc399 = add nsw i32 %182, 1, !dbg !15094
  store i32 %inc399, i32* %i398, align 4, !dbg !15094
  br label %for.cond236, !dbg !15094, !llvm.loop !15160

for.end400:                                       ; preds = %for.cond236
  br label %for.inc401, !dbg !15162

for.inc401:                                       ; preds = %for.end400
  %gy402 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !15089
  %183 = load i32, i32* %gy402, align 8, !dbg !15089
  %inc403 = add nsw i32 %183, 1, !dbg !15089
  store i32 %inc403, i32* %gy402, align 8, !dbg !15089
  br label %for.cond229, !dbg !15089, !llvm.loop !15163

for.end404:                                       ; preds = %for.cond229
  br label %for.inc405, !dbg !15165

for.inc405:                                       ; preds = %for.end404
  %g406 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !15075
  %184 = load i32, i32* %g406, align 8, !dbg !15075
  %inc407 = add nsw i32 %184, 1, !dbg !15075
  store i32 %inc407, i32* %g406, align 8, !dbg !15075
  br label %for.cond194, !dbg !15075, !llvm.loop !15166

for.end408:                                       ; preds = %for.cond194
  br label %if.end409

if.end409:                                        ; preds = %for.end408, %for.end187
  %185 = load float*, float** %an.addr, align 8, !dbg !15168
  %arraydecay410 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !15170
  call void @add_v3_v3(float* %185, float* %arraydecay410), !dbg !15171
  %arraydecay411 = getelementptr inbounds [3 x float], [3 x float]* %out_flip, i64 0, i64 0, !dbg !15172
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !15173
  call void @add_v3_v3(float* %arraydecay411, float* %arraydecay412), !dbg !15174
  br label %for.inc413, !dbg !15175

for.inc413:                                       ; preds = %if.end409
  %186 = load i32, i32* %n, align 4, !dbg !15176
  %inc414 = add nsw i32 %186, 1, !dbg !15176
  store i32 %inc414, i32* %n, align 4, !dbg !15176
  br label %for.cond, !dbg !15177, !llvm.loop !15178

for.end415:                                       ; preds = %for.cond
  %187 = load float*, float** %an.addr, align 8, !dbg !15180
  %call416 = call zeroext i8 @is_zero_v3(float* %187), !dbg !15182
  %tobool417 = icmp ne i8 %call416, 0, !dbg !15182
  br i1 %tobool417, label %if.then418, label %if.end420, !dbg !15183

if.then418:                                       ; preds = %for.end415
  %188 = load float*, float** %an.addr, align 8, !dbg !15184
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %out_flip, i64 0, i64 0, !dbg !15185
  call void @copy_v3_v3(float* %188, float* %arraydecay419), !dbg !15186
  br label %if.end420, !dbg !15186

if.end420:                                        ; preds = %if.then418, %for.end415
  %189 = load float*, float** %an.addr, align 8, !dbg !15187
  %call421 = call float @normalize_v3(float* %189), !dbg !15188
  ret void, !dbg !15189
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_brush_test_init(%struct.SculptSession* %ss, %struct.SculptBrushTest* %test) #0 !dbg !15190 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !15194, metadata !DIExpression()), !dbg !15195
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !15196, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !15198, metadata !DIExpression()), !dbg !15199
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15200
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 28, !dbg !15201
  %1 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15201
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %1, i32 0, i32 22, !dbg !15202
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !15202
  %rv3d1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 5, !dbg !15203
  %3 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d1, align 8, !dbg !15203
  store %struct.RegionView3D* %3, %struct.RegionView3D** %rv3d, align 8, !dbg !15199
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15204
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !15205
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !15205
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 12, !dbg !15206
  %6 = load float, float* %radius_squared, align 4, !dbg !15206
  %7 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15207
  %radius_squared3 = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %7, i32 0, i32 0, !dbg !15208
  store float %6, float* %radius_squared3, align 8, !dbg !15209
  %8 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15210
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %8, i32 0, i32 1, !dbg !15211
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !15210
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15212
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 28, !dbg !15213
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !15213
  %location5 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %10, i32 0, i32 14, !dbg !15214
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %location5, i64 0, i64 0, !dbg !15212
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !15215
  %11 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15216
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %11, i32 0, i32 2, !dbg !15217
  store float 0.000000e+00, float* %dist, align 8, !dbg !15218
  %12 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15219
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %12, i32 0, i32 32, !dbg !15221
  %13 = load i16, i16* %rflag, align 2, !dbg !15221
  %conv = sext i16 %13 to i32, !dbg !15219
  %and = and i32 %conv, 4, !dbg !15222
  %tobool = icmp ne i32 %and, 0, !dbg !15222
  br i1 %tobool, label %if.then, label %if.else, !dbg !15223

if.then:                                          ; preds = %entry
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15224
  %15 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15226
  %clip_rv3d = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %15, i32 0, i32 3, !dbg !15227
  store %struct.RegionView3D* %14, %struct.RegionView3D** %clip_rv3d, align 8, !dbg !15228
  br label %if.end, !dbg !15229

if.else:                                          ; preds = %entry
  %16 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15230
  %clip_rv3d7 = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %16, i32 0, i32 3, !dbg !15232
  store %struct.RegionView3D* null, %struct.RegionView3D** %clip_rv3d7, align 8, !dbg !15233
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15234
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %co) #0 !dbg !15235 {
entry:
  %retval = alloca i8, align 1
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %co.addr = alloca float*, align 8
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !15238, metadata !DIExpression()), !dbg !15239
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  %0 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15242
  %1 = load float*, float** %co.addr, align 8, !dbg !15244
  %call = call zeroext i8 @sculpt_brush_test_clipping(%struct.SculptBrushTest* %0, float* %1), !dbg !15245
  %tobool = icmp ne i8 %call, 0, !dbg !15245
  br i1 %tobool, label %if.then, label %if.end, !dbg !15246

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !15247
  br label %return, !dbg !15247

if.end:                                           ; preds = %entry
  %2 = load float*, float** %co.addr, align 8, !dbg !15249
  %3 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15250
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %3, i32 0, i32 1, !dbg !15251
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !15250
  %call1 = call float @len_squared_v3v3(float* %2, float* %arraydecay), !dbg !15252
  %4 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15253
  %radius_squared = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %4, i32 0, i32 0, !dbg !15254
  %5 = load float, float* %radius_squared, align 8, !dbg !15254
  %cmp = fcmp ole float %call1, %5, !dbg !15255
  %conv = zext i1 %cmp to i32, !dbg !15255
  %conv2 = trunc i32 %conv to i8, !dbg !15252
  store i8 %conv2, i8* %retval, align 1, !dbg !15256
  br label %return, !dbg !15256

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !15257
  ret i8 %6, !dbg !15257
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_norm_if(float* %view_vec, float* %out, float* %out_flip, float* %fno) #0 !dbg !15258 {
entry:
  %view_vec.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %out_flip.addr = alloca float*, align 8
  %fno.addr = alloca float*, align 8
  store float* %view_vec, float** %view_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view_vec.addr, metadata !15261, metadata !DIExpression()), !dbg !15262
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !15263, metadata !DIExpression()), !dbg !15264
  store float* %out_flip, float** %out_flip.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out_flip.addr, metadata !15265, metadata !DIExpression()), !dbg !15266
  store float* %fno, float** %fno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fno.addr, metadata !15267, metadata !DIExpression()), !dbg !15268
  %0 = load float*, float** %view_vec.addr, align 8, !dbg !15269
  %1 = load float*, float** %fno.addr, align 8, !dbg !15271
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !15272
  %cmp = fcmp ogt float %call, 0.000000e+00, !dbg !15273
  br i1 %cmp, label %if.then, label %if.else, !dbg !15274

if.then:                                          ; preds = %entry
  %2 = load float*, float** %out.addr, align 8, !dbg !15275
  %3 = load float*, float** %fno.addr, align 8, !dbg !15277
  call void @add_v3_v3(float* %2, float* %3), !dbg !15278
  br label %if.end, !dbg !15279

if.else:                                          ; preds = %entry
  %4 = load float*, float** %out_flip.addr, align 8, !dbg !15280
  %5 = load float*, float** %fno.addr, align 8, !dbg !15282
  call void @add_v3_v3(float* %4, float* %5), !dbg !15283
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15284
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_zero_v3(float* %v) #0 !dbg !15285 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !15288, metadata !DIExpression()), !dbg !15289
  %0 = load float*, float** %v.addr, align 8, !dbg !15290
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15290
  %1 = load float, float* %arrayidx, align 4, !dbg !15290
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !15291
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !15292

land.lhs.true:                                    ; preds = %entry
  %2 = load float*, float** %v.addr, align 8, !dbg !15293
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !15293
  %3 = load float, float* %arrayidx1, align 4, !dbg !15293
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !15294
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !15295

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load float*, float** %v.addr, align 8, !dbg !15296
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !15296
  %5 = load float, float* %arrayidx3, align 4, !dbg !15296
  %cmp4 = fcmp oeq float %5, 0.000000e+00, !dbg !15297
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !15298
  %land.ext = zext i1 %6 to i32, !dbg !15295
  %conv = trunc i32 %land.ext to i8, !dbg !15299
  ret i8 %conv, !dbg !15300
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_test_clipping(%struct.SculptBrushTest* %test, float* %co) #0 !dbg !15301 {
entry:
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %co.addr = alloca float*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !15304, metadata !DIExpression()), !dbg !15305
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !15306, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !15308, metadata !DIExpression()), !dbg !15309
  %0 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15310
  %clip_rv3d = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %0, i32 0, i32 3, !dbg !15311
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %clip_rv3d, align 8, !dbg !15311
  store %struct.RegionView3D* %1, %struct.RegionView3D** %rv3d, align 8, !dbg !15309
  %2 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15312
  %tobool = icmp ne %struct.RegionView3D* %2, null, !dbg !15312
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15313

land.rhs:                                         ; preds = %entry
  %3 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15314
  %4 = load float*, float** %co.addr, align 8, !dbg !15315
  %call = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %3, float* %4, i8 zeroext 1), !dbg !15316
  %conv = zext i8 %call to i32, !dbg !15317
  %tobool1 = icmp ne i32 %conv, 0, !dbg !15313
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !15318
  %land.ext = zext i1 %5 to i32, !dbg !15313
  %conv2 = trunc i32 %land.ext to i8, !dbg !15319
  ret i8 %conv2, !dbg !15320
}

declare dso_local zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_brush_local_mat(%struct.Brush* %brush, %struct.Object* %ob, [4 x float]* %local_mat) #0 !dbg !15321 {
entry:
  %brush.addr = alloca %struct.Brush*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %local_mat.addr = alloca [4 x float]*, align 8
  %cache = alloca %struct.StrokeCache*, align 8
  %tmat = alloca [4 x [4 x float]], align 16
  %mat = alloca [4 x [4 x float]], align 16
  %scale = alloca [4 x [4 x float]], align 16
  %angle = alloca float, align 4
  %v = alloca [3 x float], align 4
  %up = alloca [3 x float], align 4
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !15324, metadata !DIExpression()), !dbg !15325
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15326, metadata !DIExpression()), !dbg !15327
  store [4 x float]* %local_mat, [4 x float]** %local_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %local_mat.addr, metadata !15328, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !15330, metadata !DIExpression()), !dbg !15333
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15334
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !15335
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !15335
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 28, !dbg !15336
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !15336
  store %struct.StrokeCache* %2, %struct.StrokeCache** %cache, align 8, !dbg !15333
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !15337, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !15339, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %scale, metadata !15341, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.declare(metadata float* %angle, metadata !15343, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !15345, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.declare(metadata [3 x float]* %up, metadata !15347, metadata !DIExpression()), !dbg !15348
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15349
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 50, !dbg !15350
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !15349
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15351
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 47, !dbg !15352
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !15351
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !15353
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15354
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 3, !dbg !15354
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !15355
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 1, !dbg !15356
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 3, !dbg !15356
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !15357
  %arrayidx6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !15358
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx6, i64 0, i64 3, !dbg !15358
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !15359
  %arrayidx8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !15360
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 3, !dbg !15360
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !15361
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15362
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 22, !dbg !15363
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !15363
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15364
  %location = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 14, !dbg !15365
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !15364
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 0, !dbg !15366
  call void @calc_local_y(%struct.ViewContext* %6, float* %arraydecay10, float* %arraydecay11), !dbg !15367
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !15368
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %up, i64 0, i64 0, !dbg !15369
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15370
  %sculpt_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 34, !dbg !15371
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal, i64 0, i64 0, !dbg !15370
  call void @cross_v3_v3v3(float* %arraydecay12, float* %arraydecay13, float* %arraydecay14), !dbg !15372
  %9 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !15373
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %9, i32 0, i32 3, !dbg !15374
  %rot = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 13, !dbg !15375
  %10 = load float, float* %rot, align 4, !dbg !15375
  %11 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15376
  %special_rotation = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %11, i32 0, i32 25, !dbg !15377
  %12 = load float, float* %special_rotation, align 8, !dbg !15377
  %sub = fsub float %10, %12, !dbg !15378
  store float %sub, float* %angle, align 4, !dbg !15379
  %arrayidx15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15380
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i64 0, i64 0, !dbg !15380
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !15381
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15382
  %sculpt_normal18 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 34, !dbg !15383
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal18, i64 0, i64 0, !dbg !15382
  %14 = load float, float* %angle, align 4, !dbg !15384
  call void @rotate_v3_v3v3fl(float* %arraydecay16, float* %arraydecay17, float* %arraydecay19, float %14), !dbg !15385
  %arrayidx20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 1, !dbg !15386
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx20, i64 0, i64 0, !dbg !15386
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15387
  %sculpt_normal22 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 34, !dbg !15388
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal22, i64 0, i64 0, !dbg !15387
  %arrayidx24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15389
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 0, !dbg !15389
  call void @cross_v3_v3v3(float* %arraydecay21, float* %arraydecay23, float* %arraydecay25), !dbg !15390
  %arrayidx26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !15391
  %arraydecay27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 0, !dbg !15391
  %16 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15392
  %sculpt_normal28 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %16, i32 0, i32 34, !dbg !15393
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal28, i64 0, i64 0, !dbg !15392
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay29), !dbg !15394
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !15395
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 0, !dbg !15395
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15396
  %location32 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 14, !dbg !15397
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %location32, i64 0, i64 0, !dbg !15396
  call void @copy_v3_v3(float* %arraydecay31, float* %arraydecay33), !dbg !15398
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15399
  call void @normalize_m4([4 x float]* %arraydecay34), !dbg !15400
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scale, i64 0, i64 0, !dbg !15401
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15402
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 11, !dbg !15403
  %19 = load float, float* %radius, align 8, !dbg !15403
  call void @scale_m4_fl([4 x float]* %arraydecay35, float %19), !dbg !15404
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !15405
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15406
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scale, i64 0, i64 0, !dbg !15407
  call void @mul_m4_m4m4([4 x float]* %arraydecay36, [4 x float]* %arraydecay37, [4 x float]* %arraydecay38), !dbg !15408
  %20 = load [4 x float]*, [4 x float]** %local_mat.addr, align 8, !dbg !15409
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !15410
  %call40 = call zeroext i8 @invert_m4_m4([4 x float]* %20, [4 x float]* %arraydecay39), !dbg !15411
  ret void, !dbg !15412
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_local_y(%struct.ViewContext* %vc, float* %center, float* %y) #0 !dbg !15413 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %center.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  %loc = alloca [3 x float], align 4
  %mval_f = alloca [2 x float], align 4
  %zfac = alloca float, align 4
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !15416, metadata !DIExpression()), !dbg !15417
  store float* %center, float** %center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %center.addr, metadata !15418, metadata !DIExpression()), !dbg !15419
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !15420, metadata !DIExpression()), !dbg !15421
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !15422, metadata !DIExpression()), !dbg !15423
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !15424
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 1, !dbg !15425
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !15425
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !15423
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !15426, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.declare(metadata [2 x float]* %mval_f, metadata !15428, metadata !DIExpression()), !dbg !15429
  %2 = bitcast [2 x float]* %mval_f to i8*, !dbg !15429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 bitcast ([2 x float]* @__const.calc_local_y.mval_f to i8*), i64 8, i1 false), !dbg !15429
  call void @llvm.dbg.declare(metadata float* %zfac, metadata !15430, metadata !DIExpression()), !dbg !15431
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !15432
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15433
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 50, !dbg !15434
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !15433
  %4 = load float*, float** %center.addr, align 8, !dbg !15435
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %arraydecay1, float* %4), !dbg !15436
  %5 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !15437
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %5, i32 0, i32 5, !dbg !15438
  %6 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !15438
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !15439
  %call = call float @ED_view3d_calc_zfac(%struct.RegionView3D* %6, float* %arraydecay2, i8* null), !dbg !15440
  store float %call, float* %zfac, align 4, !dbg !15441
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !15442
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %7, i32 0, i32 3, !dbg !15443
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !15443
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %mval_f, i64 0, i64 0, !dbg !15444
  %9 = load float*, float** %y.addr, align 8, !dbg !15445
  %10 = load float, float* %zfac, align 4, !dbg !15446
  call void @ED_view3d_win_to_delta(%struct.ARegion* %8, float* %arraydecay3, float* %9, float %10), !dbg !15447
  %11 = load float*, float** %y.addr, align 8, !dbg !15448
  %call4 = call float @normalize_v3(float* %11), !dbg !15449
  %12 = load float*, float** %y.addr, align 8, !dbg !15450
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15451
  %loc5 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 33, !dbg !15452
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %loc5, i64 0, i64 0, !dbg !15451
  call void @add_v3_v3(float* %12, float* %arraydecay6), !dbg !15453
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15454
  %imat7 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 50, !dbg !15455
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat7, i64 0, i64 0, !dbg !15454
  %15 = load float*, float** %y.addr, align 8, !dbg !15456
  call void @mul_m4_v3([4 x float]* %arraydecay8, float* %15), !dbg !15457
  ret void, !dbg !15458
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !15459 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15462, metadata !DIExpression()), !dbg !15463
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15464, metadata !DIExpression()), !dbg !15465
  %0 = load float*, float** %a.addr, align 8, !dbg !15466
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !15466
  %1 = load float, float* %arrayidx, align 4, !dbg !15466
  %2 = load float*, float** %b.addr, align 8, !dbg !15467
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !15467
  %3 = load float, float* %arrayidx1, align 4, !dbg !15467
  %mul = fmul float %1, %3, !dbg !15468
  %4 = load float*, float** %a.addr, align 8, !dbg !15469
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !15469
  %5 = load float, float* %arrayidx2, align 4, !dbg !15469
  %6 = load float*, float** %b.addr, align 8, !dbg !15470
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15470
  %7 = load float, float* %arrayidx3, align 4, !dbg !15470
  %mul4 = fmul float %5, %7, !dbg !15471
  %sub = fsub float %mul, %mul4, !dbg !15472
  %8 = load float*, float** %r.addr, align 8, !dbg !15473
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !15473
  store float %sub, float* %arrayidx5, align 4, !dbg !15474
  %9 = load float*, float** %a.addr, align 8, !dbg !15475
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !15475
  %10 = load float, float* %arrayidx6, align 4, !dbg !15475
  %11 = load float*, float** %b.addr, align 8, !dbg !15476
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !15476
  %12 = load float, float* %arrayidx7, align 4, !dbg !15476
  %mul8 = fmul float %10, %12, !dbg !15477
  %13 = load float*, float** %a.addr, align 8, !dbg !15478
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !15478
  %14 = load float, float* %arrayidx9, align 4, !dbg !15478
  %15 = load float*, float** %b.addr, align 8, !dbg !15479
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !15479
  %16 = load float, float* %arrayidx10, align 4, !dbg !15479
  %mul11 = fmul float %14, %16, !dbg !15480
  %sub12 = fsub float %mul8, %mul11, !dbg !15481
  %17 = load float*, float** %r.addr, align 8, !dbg !15482
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !15482
  store float %sub12, float* %arrayidx13, align 4, !dbg !15483
  %18 = load float*, float** %a.addr, align 8, !dbg !15484
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !15484
  %19 = load float, float* %arrayidx14, align 4, !dbg !15484
  %20 = load float*, float** %b.addr, align 8, !dbg !15485
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !15485
  %21 = load float, float* %arrayidx15, align 4, !dbg !15485
  %mul16 = fmul float %19, %21, !dbg !15486
  %22 = load float*, float** %a.addr, align 8, !dbg !15487
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !15487
  %23 = load float, float* %arrayidx17, align 4, !dbg !15487
  %24 = load float*, float** %b.addr, align 8, !dbg !15488
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !15488
  %25 = load float, float* %arrayidx18, align 4, !dbg !15488
  %mul19 = fmul float %23, %25, !dbg !15489
  %sub20 = fsub float %mul16, %mul19, !dbg !15490
  %26 = load float*, float** %r.addr, align 8, !dbg !15491
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !15491
  store float %sub20, float* %arrayidx21, align 4, !dbg !15492
  ret void, !dbg !15493
}

declare dso_local void @rotate_v3_v3v3fl(float*, float*, float*, float) #2

declare dso_local void @normalize_m4([4 x float]*) #2

declare dso_local void @scale_m4_fl([4 x float]*, float) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local float @ED_view3d_calc_zfac(%struct.RegionView3D*, float*, i8*) #2

declare dso_local void @ED_view3d_win_to_delta(%struct.ARegion*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !15494 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  %0 = load float*, float** %a.addr, align 8, !dbg !15499
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15499
  %1 = load float, float* %arrayidx, align 4, !dbg !15499
  %2 = load float*, float** %r.addr, align 8, !dbg !15500
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15500
  %3 = load float, float* %arrayidx1, align 4, !dbg !15501
  %mul = fmul float %3, %1, !dbg !15501
  store float %mul, float* %arrayidx1, align 4, !dbg !15501
  %4 = load float*, float** %a.addr, align 8, !dbg !15502
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15502
  %5 = load float, float* %arrayidx2, align 4, !dbg !15502
  %6 = load float*, float** %r.addr, align 8, !dbg !15503
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15503
  %7 = load float, float* %arrayidx3, align 4, !dbg !15504
  %mul4 = fmul float %7, %5, !dbg !15504
  store float %mul4, float* %arrayidx3, align 4, !dbg !15504
  %8 = load float*, float** %a.addr, align 8, !dbg !15505
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !15505
  %9 = load float, float* %arrayidx5, align 4, !dbg !15505
  %10 = load float*, float** %r.addr, align 8, !dbg !15506
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !15506
  %11 = load float, float* %arrayidx6, align 4, !dbg !15507
  %mul7 = fmul float %11, %9, !dbg !15507
  store float %mul7, float* %arrayidx6, align 4, !dbg !15507
  ret void, !dbg !15508
}

declare dso_local %struct.PBVHProxyNode* @BKE_pbvh_node_add_proxy(%struct.PBVH*, %struct.PBVHNode*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %co) #0 !dbg !15509 {
entry:
  %retval = alloca i8, align 1
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %co.addr = alloca float*, align 8
  %distsq = alloca float, align 4
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !15512, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.declare(metadata float* %distsq, metadata !15514, metadata !DIExpression()), !dbg !15515
  %0 = load float*, float** %co.addr, align 8, !dbg !15516
  %1 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15517
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %1, i32 0, i32 1, !dbg !15518
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !15517
  %call = call float @len_squared_v3v3(float* %0, float* %arraydecay), !dbg !15519
  store float %call, float* %distsq, align 4, !dbg !15515
  %2 = load float, float* %distsq, align 4, !dbg !15520
  %3 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15522
  %radius_squared = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %3, i32 0, i32 0, !dbg !15523
  %4 = load float, float* %radius_squared, align 8, !dbg !15523
  %cmp = fcmp ole float %2, %4, !dbg !15524
  br i1 %cmp, label %if.then, label %if.else, !dbg !15525

if.then:                                          ; preds = %entry
  %5 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15526
  %6 = load float*, float** %co.addr, align 8, !dbg !15529
  %call1 = call zeroext i8 @sculpt_brush_test_clipping(%struct.SculptBrushTest* %5, float* %6), !dbg !15530
  %tobool = icmp ne i8 %call1, 0, !dbg !15530
  br i1 %tobool, label %if.then2, label %if.end, !dbg !15531

if.then2:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !15532
  br label %return, !dbg !15532

if.end:                                           ; preds = %if.then
  %7 = load float, float* %distsq, align 4, !dbg !15534
  %call3 = call float @sqrtf(float %7) #5, !dbg !15535
  %8 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !15536
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %8, i32 0, i32 2, !dbg !15537
  store float %call3, float* %dist, align 8, !dbg !15538
  store i8 1, i8* %retval, align 1, !dbg !15539
  br label %return, !dbg !15539

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !15540
  br label %return, !dbg !15540

return:                                           ; preds = %if.else, %if.end, %if.then2
  %9 = load i8, i8* %retval, align 1, !dbg !15542
  ret i8 %9, !dbg !15542
}

; Function Attrs: noinline nounwind uwtable
define internal float @tex_strength(%struct.SculptSession* %ss, %struct.Brush* %br, float* %point, float %len, i16* %vno, float* %fno, float %mask) #0 !dbg !15543 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %br.addr = alloca %struct.Brush*, align 8
  %point.addr = alloca float*, align 8
  %len.addr = alloca float, align 4
  %vno.addr = alloca i16*, align 8
  %fno.addr = alloca float*, align 8
  %mask.addr = alloca float, align 4
  %cache = alloca %struct.StrokeCache*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %avg = alloca float, align 4
  %rgba = alloca [4 x float], align 16
  %thread_num = alloca i32, align 4
  %symm_point = alloca [3 x float], align 4
  %point_2d = alloca [2 x float], align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %point_3d = alloca [3 x float], align 4
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !15546, metadata !DIExpression()), !dbg !15547
  store %struct.Brush* %br, %struct.Brush** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %br.addr, metadata !15548, metadata !DIExpression()), !dbg !15549
  store float* %point, float** %point.addr, align 8
  call void @llvm.dbg.declare(metadata float** %point.addr, metadata !15550, metadata !DIExpression()), !dbg !15551
  store float %len, float* %len.addr, align 4
  call void @llvm.dbg.declare(metadata float* %len.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  store i16* %vno, i16** %vno.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vno.addr, metadata !15554, metadata !DIExpression()), !dbg !15555
  store float* %fno, float** %fno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fno.addr, metadata !15556, metadata !DIExpression()), !dbg !15557
  store float %mask, float* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mask.addr, metadata !15558, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache, metadata !15560, metadata !DIExpression()), !dbg !15561
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15562
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 28, !dbg !15563
  %1 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !15563
  store %struct.StrokeCache* %1, %struct.StrokeCache** %cache, align 8, !dbg !15561
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !15564, metadata !DIExpression()), !dbg !15565
  %2 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15566
  %vc = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %2, i32 0, i32 22, !dbg !15567
  %3 = load %struct.ViewContext*, %struct.ViewContext** %vc, align 8, !dbg !15567
  %scene2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %3, i32 0, i32 0, !dbg !15568
  %4 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !15568
  store %struct.Scene* %4, %struct.Scene** %scene, align 8, !dbg !15565
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !15569, metadata !DIExpression()), !dbg !15570
  %5 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15571
  %mtex3 = getelementptr inbounds %struct.Brush, %struct.Brush* %5, i32 0, i32 3, !dbg !15572
  store %struct.MTex* %mtex3, %struct.MTex** %mtex, align 8, !dbg !15570
  call void @llvm.dbg.declare(metadata float* %avg, metadata !15573, metadata !DIExpression()), !dbg !15574
  store float 1.000000e+00, float* %avg, align 4, !dbg !15574
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata i32* %thread_num, metadata !15577, metadata !DIExpression()), !dbg !15578
  %6 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !15579
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %6, i32 0, i32 5, !dbg !15581
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !15581
  %tobool = icmp ne %struct.Tex* %7, null, !dbg !15579
  br i1 %tobool, label %if.else, label %if.then, !dbg !15582

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %avg, align 4, !dbg !15583
  br label %if.end54, !dbg !15585

if.else:                                          ; preds = %entry
  %8 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !15586
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 20, !dbg !15588
  %9 = load i8, i8* %brush_map_mode, align 4, !dbg !15588
  %conv = zext i8 %9 to i32, !dbg !15586
  %cmp = icmp eq i32 %conv, 2, !dbg !15589
  br i1 %cmp, label %if.then5, label %if.else6, !dbg !15590

if.then5:                                         ; preds = %if.else
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15591
  %11 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15593
  %12 = load float*, float** %point.addr, align 8, !dbg !15594
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !15595
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15596
  %tex_pool = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 25, !dbg !15597
  %14 = load %struct.ImagePool*, %struct.ImagePool** %tex_pool, align 8, !dbg !15597
  %call = call float @BKE_brush_sample_tex_3D(%struct.Scene* %10, %struct.Brush* %11, float* %12, float* %arraydecay, i32 0, %struct.ImagePool* %14), !dbg !15598
  store float %call, float* %avg, align 4, !dbg !15599
  br label %if.end53, !dbg !15600

if.else6:                                         ; preds = %if.else
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15601
  %texcache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 23, !dbg !15603
  %16 = load i32*, i32** %texcache, align 8, !dbg !15603
  %tobool7 = icmp ne i32* %16, null, !dbg !15601
  br i1 %tobool7, label %if.then8, label %if.end52, !dbg !15604

if.then8:                                         ; preds = %if.else6
  call void @llvm.dbg.declare(metadata [3 x float]* %symm_point, metadata !15605, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.declare(metadata [2 x float]* %point_2d, metadata !15608, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.declare(metadata float* %x, metadata !15610, metadata !DIExpression()), !dbg !15611
  store float 0.000000e+00, float* %x, align 4, !dbg !15611
  call void @llvm.dbg.declare(metadata float* %y, metadata !15612, metadata !DIExpression()), !dbg !15613
  store float 0.000000e+00, float* %y, align 4, !dbg !15613
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 0, !dbg !15614
  %17 = load float*, float** %point.addr, align 8, !dbg !15615
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15616
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 31, !dbg !15617
  %19 = load i32, i32* %mirror_symmetry_pass, align 8, !dbg !15617
  %conv10 = trunc i32 %19 to i8, !dbg !15616
  call void @flip_v3_v3(float* %arraydecay9, float* %17, i8 zeroext %conv10), !dbg !15618
  %20 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15619
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %20, i32 0, i32 38, !dbg !15621
  %21 = load i32, i32* %radial_symmetry_pass, align 8, !dbg !15621
  %tobool11 = icmp ne i32 %21, 0, !dbg !15619
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !15622

if.then12:                                        ; preds = %if.then8
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15623
  %symm_rot_mat_inv = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 40, !dbg !15624
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat_inv, i64 0, i64 0, !dbg !15623
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 0, !dbg !15625
  call void @mul_m4_v3([4 x float]* %arraydecay13, float* %arraydecay14), !dbg !15626
  br label %if.end, !dbg !15626

if.end:                                           ; preds = %if.then12, %if.then8
  %23 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15627
  %vc15 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %23, i32 0, i32 22, !dbg !15628
  %24 = load %struct.ViewContext*, %struct.ViewContext** %vc15, align 8, !dbg !15628
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %24, i32 0, i32 3, !dbg !15629
  %25 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !15629
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 0, !dbg !15630
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %point_2d, i64 0, i64 0, !dbg !15631
  %26 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15632
  %projection_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %26, i32 0, i32 21, !dbg !15633
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projection_mat, i64 0, i64 0, !dbg !15632
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %25, float* %arraydecay16, float* %arraydecay17, [4 x float]* %arraydecay18), !dbg !15634
  %27 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !15635
  %brush_map_mode19 = getelementptr inbounds %struct.MTex, %struct.MTex* %27, i32 0, i32 20, !dbg !15637
  %28 = load i8, i8* %brush_map_mode19, align 4, !dbg !15637
  %conv20 = zext i8 %28 to i32, !dbg !15635
  %cmp21 = icmp eq i32 %conv20, 3, !dbg !15638
  br i1 %cmp21, label %if.then23, label %if.else43, !dbg !15639

if.then23:                                        ; preds = %if.end
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15640
  %brush_local_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 36, !dbg !15642
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %brush_local_mat, i64 0, i64 0, !dbg !15640
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 0, !dbg !15643
  call void @mul_m4_v3([4 x float]* %arraydecay24, float* %arraydecay25), !dbg !15644
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 0, !dbg !15645
  %30 = load float, float* %arrayidx, align 4, !dbg !15645
  store float %30, float* %x, align 4, !dbg !15646
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %symm_point, i64 0, i64 1, !dbg !15647
  %31 = load float, float* %arrayidx26, align 4, !dbg !15647
  store float %31, float* %y, align 4, !dbg !15648
  %32 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15649
  %mtex27 = getelementptr inbounds %struct.Brush, %struct.Brush* %32, i32 0, i32 3, !dbg !15650
  %size = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex27, i32 0, i32 12, !dbg !15651
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !15649
  %33 = load float, float* %arrayidx28, align 8, !dbg !15649
  %34 = load float, float* %x, align 4, !dbg !15652
  %mul = fmul float %34, %33, !dbg !15652
  store float %mul, float* %x, align 4, !dbg !15652
  %35 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15653
  %mtex29 = getelementptr inbounds %struct.Brush, %struct.Brush* %35, i32 0, i32 3, !dbg !15654
  %size30 = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex29, i32 0, i32 12, !dbg !15655
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %size30, i64 0, i64 1, !dbg !15653
  %36 = load float, float* %arrayidx31, align 4, !dbg !15653
  %37 = load float, float* %y, align 4, !dbg !15656
  %mul32 = fmul float %37, %36, !dbg !15656
  store float %mul32, float* %y, align 4, !dbg !15656
  %38 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15657
  %mtex33 = getelementptr inbounds %struct.Brush, %struct.Brush* %38, i32 0, i32 3, !dbg !15658
  %ofs = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex33, i32 0, i32 11, !dbg !15659
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !15657
  %39 = load float, float* %arrayidx34, align 4, !dbg !15657
  %40 = load float, float* %x, align 4, !dbg !15660
  %add = fadd float %40, %39, !dbg !15660
  store float %add, float* %x, align 4, !dbg !15660
  %41 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15661
  %mtex35 = getelementptr inbounds %struct.Brush, %struct.Brush* %41, i32 0, i32 3, !dbg !15662
  %ofs36 = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex35, i32 0, i32 11, !dbg !15663
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %ofs36, i64 0, i64 1, !dbg !15661
  %42 = load float, float* %arrayidx37, align 4, !dbg !15661
  %43 = load float, float* %y, align 4, !dbg !15664
  %add38 = fadd float %43, %42, !dbg !15664
  store float %add38, float* %y, align 4, !dbg !15664
  store i32 0, i32* %thread_num, align 4, !dbg !15665
  %44 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15666
  %mtex39 = getelementptr inbounds %struct.Brush, %struct.Brush* %44, i32 0, i32 3, !dbg !15667
  %45 = load float, float* %x, align 4, !dbg !15668
  %46 = load float, float* %y, align 4, !dbg !15669
  %47 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15670
  %tex_pool40 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %47, i32 0, i32 25, !dbg !15671
  %48 = load %struct.ImagePool*, %struct.ImagePool** %tex_pool40, align 8, !dbg !15671
  %49 = load i32, i32* %thread_num, align 4, !dbg !15672
  %call41 = call float @paint_get_tex_pixel(%struct.MTex* %mtex39, float %45, float %46, %struct.ImagePool* %48, i32 %49), !dbg !15673
  store float %call41, float* %avg, align 4, !dbg !15674
  %50 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15675
  %texture_sample_bias = getelementptr inbounds %struct.Brush, %struct.Brush* %50, i32 0, i32 42, !dbg !15676
  %51 = load float, float* %texture_sample_bias, align 4, !dbg !15676
  %52 = load float, float* %avg, align 4, !dbg !15677
  %add42 = fadd float %52, %51, !dbg !15677
  store float %add42, float* %avg, align 4, !dbg !15677
  br label %if.end51, !dbg !15678

if.else43:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %point_3d, metadata !15679, metadata !DIExpression()), !dbg !15682
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %point_3d, i64 0, i64 0, !dbg !15683
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %point_2d, i64 0, i64 0, !dbg !15684
  %53 = load float, float* %arrayidx44, align 4, !dbg !15684
  store float %53, float* %arrayinit.begin, align 4, !dbg !15683
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !15683
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %point_2d, i64 0, i64 1, !dbg !15685
  %54 = load float, float* %arrayidx45, align 4, !dbg !15685
  store float %54, float* %arrayinit.element, align 4, !dbg !15683
  %arrayinit.element46 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !15683
  store float 0.000000e+00, float* %arrayinit.element46, align 4, !dbg !15683
  %55 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15686
  %56 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15687
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %point_3d, i64 0, i64 0, !dbg !15688
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !15689
  %57 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15690
  %tex_pool49 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %57, i32 0, i32 25, !dbg !15691
  %58 = load %struct.ImagePool*, %struct.ImagePool** %tex_pool49, align 8, !dbg !15691
  %call50 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %55, %struct.Brush* %56, float* %arraydecay47, float* %arraydecay48, i32 0, %struct.ImagePool* %58), !dbg !15692
  store float %call50, float* %avg, align 4, !dbg !15693
  br label %if.end51

if.end51:                                         ; preds = %if.else43, %if.then23
  br label %if.end52, !dbg !15694

if.end52:                                         ; preds = %if.end51, %if.else6
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then5
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then
  %59 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15695
  %60 = load float, float* %len.addr, align 4, !dbg !15696
  %61 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15697
  %radius = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %61, i32 0, i32 11, !dbg !15698
  %62 = load float, float* %radius, align 8, !dbg !15698
  %call55 = call float @BKE_brush_curve_strength(%struct.Brush* %59, float %60, float %62), !dbg !15699
  %63 = load float, float* %avg, align 4, !dbg !15700
  %mul56 = fmul float %63, %call55, !dbg !15700
  store float %mul56, float* %avg, align 4, !dbg !15700
  %64 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15701
  %65 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15702
  %view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %65, i32 0, i32 33, !dbg !15703
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %view_normal, i64 0, i64 0, !dbg !15702
  %66 = load i16*, i16** %vno.addr, align 8, !dbg !15704
  %67 = load float*, float** %fno.addr, align 8, !dbg !15705
  %call58 = call float @frontface(%struct.Brush* %64, float* %arraydecay57, i16* %66, float* %67), !dbg !15706
  %68 = load float, float* %avg, align 4, !dbg !15707
  %mul59 = fmul float %68, %call58, !dbg !15707
  store float %mul59, float* %avg, align 4, !dbg !15707
  %69 = load float, float* %mask.addr, align 4, !dbg !15708
  %sub = fsub float 1.000000e+00, %69, !dbg !15709
  %70 = load float, float* %avg, align 4, !dbg !15710
  %mul60 = fmul float %70, %sub, !dbg !15710
  store float %mul60, float* %avg, align 4, !dbg !15710
  %71 = load float, float* %avg, align 4, !dbg !15711
  ret float %71, !dbg !15712
}

declare dso_local float @BKE_brush_sample_tex_3D(%struct.Scene*, %struct.Brush*, float*, float*, i32, %struct.ImagePool*) #2

declare dso_local void @ED_view3d_project_float_v2_m4(%struct.ARegion*, float*, float*, [4 x float]*) #2

declare dso_local float @paint_get_tex_pixel(%struct.MTex*, float, float, %struct.ImagePool*, i32) #2

declare dso_local float @BKE_brush_curve_strength(%struct.Brush*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @frontface(%struct.Brush* %br, float* %sculpt_normal, i16* %no, float* %fno) #0 !dbg !15713 {
entry:
  %retval = alloca float, align 4
  %br.addr = alloca %struct.Brush*, align 8
  %sculpt_normal.addr = alloca float*, align 8
  %no.addr = alloca i16*, align 8
  %fno.addr = alloca float*, align 8
  %dot = alloca float, align 4
  %tmp = alloca [3 x float], align 4
  store %struct.Brush* %br, %struct.Brush** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %br.addr, metadata !15716, metadata !DIExpression()), !dbg !15717
  store float* %sculpt_normal, float** %sculpt_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sculpt_normal.addr, metadata !15718, metadata !DIExpression()), !dbg !15719
  store i16* %no, i16** %no.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %no.addr, metadata !15720, metadata !DIExpression()), !dbg !15721
  store float* %fno, float** %fno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fno.addr, metadata !15722, metadata !DIExpression()), !dbg !15723
  %0 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !15724
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %0, i32 0, i32 16, !dbg !15726
  %1 = load i32, i32* %flag, align 8, !dbg !15726
  %and = and i32 %1, 134217728, !dbg !15727
  %tobool = icmp ne i32 %and, 0, !dbg !15727
  br i1 %tobool, label %if.then, label %if.else5, !dbg !15728

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %dot, metadata !15729, metadata !DIExpression()), !dbg !15731
  %2 = load i16*, i16** %no.addr, align 8, !dbg !15732
  %tobool1 = icmp ne i16* %2, null, !dbg !15732
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !15734

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !15735, metadata !DIExpression()), !dbg !15737
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !15738
  %3 = load i16*, i16** %no.addr, align 8, !dbg !15739
  call void @normal_short_to_float_v3(float* %arraydecay, i16* %3), !dbg !15740
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !15741
  %4 = load float*, float** %sculpt_normal.addr, align 8, !dbg !15742
  %call = call float @dot_v3v3(float* %arraydecay3, float* %4), !dbg !15743
  store float %call, float* %dot, align 4, !dbg !15744
  br label %if.end, !dbg !15745

if.else:                                          ; preds = %if.then
  %5 = load float*, float** %fno.addr, align 8, !dbg !15746
  %6 = load float*, float** %sculpt_normal.addr, align 8, !dbg !15748
  %call4 = call float @dot_v3v3(float* %5, float* %6), !dbg !15749
  store float %call4, float* %dot, align 4, !dbg !15750
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %7 = load float, float* %dot, align 4, !dbg !15751
  %cmp = fcmp ogt float %7, 0.000000e+00, !dbg !15752
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15751

cond.true:                                        ; preds = %if.end
  %8 = load float, float* %dot, align 4, !dbg !15753
  br label %cond.end, !dbg !15751

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %8, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !15751
  store float %cond, float* %retval, align 4, !dbg !15754
  br label %return, !dbg !15754

if.else5:                                         ; preds = %entry
  store float 1.000000e+00, float* %retval, align 4, !dbg !15755
  br label %return, !dbg !15755

return:                                           ; preds = %if.else5, %cond.end
  %9 = load float, float* %retval, align 4, !dbg !15757
  ret float %9, !dbg !15757
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !15758 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15759, metadata !DIExpression()), !dbg !15760
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15761, metadata !DIExpression()), !dbg !15762
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15763, metadata !DIExpression()), !dbg !15764
  %0 = load float*, float** %a.addr, align 8, !dbg !15765
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15765
  %1 = load float, float* %arrayidx, align 4, !dbg !15765
  %2 = load float*, float** %b.addr, align 8, !dbg !15766
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15766
  %3 = load float, float* %arrayidx1, align 4, !dbg !15766
  %add = fadd float %1, %3, !dbg !15767
  %4 = load float*, float** %r.addr, align 8, !dbg !15768
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !15768
  store float %add, float* %arrayidx2, align 4, !dbg !15769
  %5 = load float*, float** %a.addr, align 8, !dbg !15770
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !15770
  %6 = load float, float* %arrayidx3, align 4, !dbg !15770
  %7 = load float*, float** %b.addr, align 8, !dbg !15771
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !15771
  %8 = load float, float* %arrayidx4, align 4, !dbg !15771
  %add5 = fadd float %6, %8, !dbg !15772
  %9 = load float*, float** %r.addr, align 8, !dbg !15773
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !15773
  store float %add5, float* %arrayidx6, align 4, !dbg !15774
  %10 = load float*, float** %a.addr, align 8, !dbg !15775
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !15775
  %11 = load float, float* %arrayidx7, align 4, !dbg !15775
  %12 = load float*, float** %b.addr, align 8, !dbg !15776
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !15776
  %13 = load float, float* %arrayidx8, align 4, !dbg !15776
  %add9 = fadd float %11, %13, !dbg !15777
  %14 = load float*, float** %r.addr, align 8, !dbg !15778
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !15778
  store float %add9, float* %arrayidx10, align 4, !dbg !15779
  ret void, !dbg !15780
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3v3(float* %r, float* %v1, float* %v2) #0 !dbg !15781 {
entry:
  %r.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15782, metadata !DIExpression()), !dbg !15783
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !15784, metadata !DIExpression()), !dbg !15785
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !15786, metadata !DIExpression()), !dbg !15787
  %0 = load float*, float** %v1.addr, align 8, !dbg !15788
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15788
  %1 = load float, float* %arrayidx, align 4, !dbg !15788
  %2 = load float*, float** %v2.addr, align 8, !dbg !15789
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15789
  %3 = load float, float* %arrayidx1, align 4, !dbg !15789
  %mul = fmul float %1, %3, !dbg !15790
  %4 = load float*, float** %r.addr, align 8, !dbg !15791
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !15791
  store float %mul, float* %arrayidx2, align 4, !dbg !15792
  %5 = load float*, float** %v1.addr, align 8, !dbg !15793
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !15793
  %6 = load float, float* %arrayidx3, align 4, !dbg !15793
  %7 = load float*, float** %v2.addr, align 8, !dbg !15794
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !15794
  %8 = load float, float* %arrayidx4, align 4, !dbg !15794
  %mul5 = fmul float %6, %8, !dbg !15795
  %9 = load float*, float** %r.addr, align 8, !dbg !15796
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !15796
  store float %mul5, float* %arrayidx6, align 4, !dbg !15797
  %10 = load float*, float** %v1.addr, align 8, !dbg !15798
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !15798
  %11 = load float, float* %arrayidx7, align 4, !dbg !15798
  %12 = load float*, float** %v2.addr, align 8, !dbg !15799
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !15799
  %13 = load float, float* %arrayidx8, align 4, !dbg !15799
  %mul9 = fmul float %11, %13, !dbg !15800
  %14 = load float*, float** %r.addr, align 8, !dbg !15801
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !15801
  store float %mul9, float* %arrayidx10, align 4, !dbg !15802
  ret void, !dbg !15803
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !15804 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15805, metadata !DIExpression()), !dbg !15806
  %0 = load float*, float** %a.addr, align 8, !dbg !15807
  %1 = load float*, float** %a.addr, align 8, !dbg !15808
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !15809
  %call1 = call float @sqrtf(float %call) #5, !dbg !15810
  ret float %call1, !dbg !15811
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_orig_vert_data_init(%struct.SculptOrigVertData* %data, %struct.Object* %ob, %struct.PBVHNode* %node) #0 !dbg !15812 {
entry:
  %data.addr = alloca %struct.SculptOrigVertData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %node.addr = alloca %struct.PBVHNode*, align 8
  %unode = alloca %struct.SculptUndoNode*, align 8
  store %struct.SculptOrigVertData* %data, %struct.SculptOrigVertData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptOrigVertData** %data.addr, metadata !15815, metadata !DIExpression()), !dbg !15816
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15817, metadata !DIExpression()), !dbg !15818
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !15819, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !15821, metadata !DIExpression()), !dbg !15822
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15823
  %1 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !15824
  %call = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %0, %struct.PBVHNode* %1, i32 0), !dbg !15825
  store %struct.SculptUndoNode* %call, %struct.SculptUndoNode** %unode, align 8, !dbg !15826
  %2 = load %struct.SculptOrigVertData*, %struct.SculptOrigVertData** %data.addr, align 8, !dbg !15827
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15828
  %4 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !15829
  call void @sculpt_orig_vert_data_unode_init(%struct.SculptOrigVertData* %2, %struct.Object* %3, %struct.SculptUndoNode* %4), !dbg !15830
  ret void, !dbg !15831
}

declare dso_local void @axis_angle_normalized_to_mat3([3 x float]*, float*, float) #2

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !15832 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  %0 = load float*, float** %a.addr, align 8, !dbg !15837
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15837
  %1 = load float, float* %arrayidx, align 4, !dbg !15837
  %2 = load float*, float** %r.addr, align 8, !dbg !15838
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15838
  %3 = load float, float* %arrayidx1, align 4, !dbg !15839
  %sub = fsub float %3, %1, !dbg !15839
  store float %sub, float* %arrayidx1, align 4, !dbg !15839
  %4 = load float*, float** %a.addr, align 8, !dbg !15840
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15840
  %5 = load float, float* %arrayidx2, align 4, !dbg !15840
  %6 = load float*, float** %r.addr, align 8, !dbg !15841
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15841
  %7 = load float, float* %arrayidx3, align 4, !dbg !15842
  %sub4 = fsub float %7, %5, !dbg !15842
  store float %sub4, float* %arrayidx3, align 4, !dbg !15842
  %8 = load float*, float** %a.addr, align 8, !dbg !15843
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !15843
  %9 = load float, float* %arrayidx5, align 4, !dbg !15843
  %10 = load float*, float** %r.addr, align 8, !dbg !15844
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !15844
  %11 = load float, float* %arrayidx6, align 4, !dbg !15845
  %sub7 = fsub float %11, %9, !dbg !15845
  store float %sub7, float* %arrayidx6, align 4, !dbg !15845
  ret void, !dbg !15846
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !15847 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  %0 = load float*, float** %r.addr, align 8, !dbg !15850
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15850
  %1 = load float, float* %arrayidx, align 4, !dbg !15850
  %fneg = fneg float %1, !dbg !15851
  %2 = load float*, float** %r.addr, align 8, !dbg !15852
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15852
  store float %fneg, float* %arrayidx1, align 4, !dbg !15853
  %3 = load float*, float** %r.addr, align 8, !dbg !15854
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !15854
  %4 = load float, float* %arrayidx2, align 4, !dbg !15854
  %fneg3 = fneg float %4, !dbg !15855
  %5 = load float*, float** %r.addr, align 8, !dbg !15856
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !15856
  store float %fneg3, float* %arrayidx4, align 4, !dbg !15857
  %6 = load float*, float** %r.addr, align 8, !dbg !15858
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !15858
  %7 = load float, float* %arrayidx5, align 4, !dbg !15858
  %fneg6 = fneg float %7, !dbg !15859
  %8 = load float*, float** %r.addr, align 8, !dbg !15860
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !15860
  store float %fneg6, float* %arrayidx7, align 4, !dbg !15861
  ret void, !dbg !15862
}

declare dso_local float* @BKE_pbvh_node_layer_disp_get(%struct.PBVH*, %struct.PBVHNode*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_clip(%struct.Sculpt* %sd, %struct.SculptSession* %ss, float* %co, float* %val) #0 !dbg !15863 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %co.addr = alloca float*, align 8
  %val.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !15866, metadata !DIExpression()), !dbg !15867
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !15868, metadata !DIExpression()), !dbg !15869
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !15870, metadata !DIExpression()), !dbg !15871
  store float* %val, float** %val.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val.addr, metadata !15872, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15874, metadata !DIExpression()), !dbg !15875
  store i32 0, i32* %i, align 4, !dbg !15876
  br label %for.cond, !dbg !15878

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15879
  %cmp = icmp slt i32 %0, 3, !dbg !15881
  br i1 %cmp, label %for.body, label %for.end, !dbg !15882

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !15883
  %flags = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %1, i32 0, i32 1, !dbg !15886
  %2 = load i32, i32* %flags, align 8, !dbg !15886
  %3 = load i32, i32* %i, align 4, !dbg !15887
  %shl = shl i32 8, %3, !dbg !15888
  %and = and i32 %2, %shl, !dbg !15889
  %tobool = icmp ne i32 %and, 0, !dbg !15889
  br i1 %tobool, label %if.then, label %if.end, !dbg !15890

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !15891

if.end:                                           ; preds = %for.body
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15892
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 28, !dbg !15894
  %5 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15894
  %flag = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %5, i32 0, i32 2, !dbg !15895
  %6 = load i32, i32* %flag, align 8, !dbg !15895
  %7 = load i32, i32* %i, align 4, !dbg !15896
  %shl1 = shl i32 1, %7, !dbg !15897
  %and2 = and i32 %6, %shl1, !dbg !15898
  %tobool3 = icmp ne i32 %and2, 0, !dbg !15898
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !15899

land.lhs.true:                                    ; preds = %if.end
  %8 = load float*, float** %co.addr, align 8, !dbg !15900
  %9 = load i32, i32* %i, align 4, !dbg !15901
  %idxprom = sext i32 %9 to i64, !dbg !15900
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !15900
  %10 = load float, float* %arrayidx, align 4, !dbg !15900
  %11 = call float @llvm.fabs.f32(float %10), !dbg !15902
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15903
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 28, !dbg !15904
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !15904
  %clip_tolerance = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %13, i32 0, i32 3, !dbg !15905
  %14 = load i32, i32* %i, align 4, !dbg !15906
  %idxprom5 = sext i32 %14 to i64, !dbg !15903
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %clip_tolerance, i64 0, i64 %idxprom5, !dbg !15903
  %15 = load float, float* %arrayidx6, align 4, !dbg !15903
  %cmp7 = fcmp ole float %11, %15, !dbg !15907
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !15908

if.then8:                                         ; preds = %land.lhs.true
  %16 = load float*, float** %co.addr, align 8, !dbg !15909
  %17 = load i32, i32* %i, align 4, !dbg !15910
  %idxprom9 = sext i32 %17 to i64, !dbg !15909
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 %idxprom9, !dbg !15909
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !15911
  br label %if.end15, !dbg !15909

if.else:                                          ; preds = %land.lhs.true, %if.end
  %18 = load float*, float** %val.addr, align 8, !dbg !15912
  %19 = load i32, i32* %i, align 4, !dbg !15913
  %idxprom11 = sext i32 %19 to i64, !dbg !15912
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 %idxprom11, !dbg !15912
  %20 = load float, float* %arrayidx12, align 4, !dbg !15912
  %21 = load float*, float** %co.addr, align 8, !dbg !15914
  %22 = load i32, i32* %i, align 4, !dbg !15915
  %idxprom13 = sext i32 %22 to i64, !dbg !15914
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 %idxprom13, !dbg !15914
  store float %20, float* %arrayidx14, align 4, !dbg !15916
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then8
  br label %for.inc, !dbg !15917

for.inc:                                          ; preds = %if.end15, %if.then
  %23 = load i32, i32* %i, align 4, !dbg !15918
  %inc = add nsw i32 %23, 1, !dbg !15918
  store i32 %inc, i32* %i, align 4, !dbg !15918
  br label %for.cond, !dbg !15919, !llvm.loop !15920

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15922
}

; Function Attrs: noinline nounwind uwtable
define internal float @get_offset(%struct.Sculpt* %sd, %struct.SculptSession* %ss) #0 !dbg !15923 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %rv = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !15926, metadata !DIExpression()), !dbg !15927
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !15928, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !15930, metadata !DIExpression()), !dbg !15931
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !15932
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !15933
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !15934
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !15931
  call void @llvm.dbg.declare(metadata float* %rv, metadata !15935, metadata !DIExpression()), !dbg !15936
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !15937
  %plane_offset = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 29, !dbg !15938
  %2 = load float, float* %plane_offset, align 4, !dbg !15938
  store float %2, float* %rv, align 4, !dbg !15936
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !15939
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 16, !dbg !15941
  %4 = load i32, i32* %flag, align 8, !dbg !15941
  %and = and i32 %4, 65536, !dbg !15942
  %tobool = icmp ne i32 %and, 0, !dbg !15942
  br i1 %tobool, label %if.then, label %if.end, !dbg !15943

if.then:                                          ; preds = %entry
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !15944
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 28, !dbg !15946
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15946
  %pressure = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 17, !dbg !15947
  %7 = load float, float* %pressure, align 4, !dbg !15947
  %8 = load float, float* %rv, align 4, !dbg !15948
  %mul = fmul float %8, %7, !dbg !15948
  store float %mul, float* %rv, align 4, !dbg !15948
  br label %if.end, !dbg !15949

if.end:                                           ; preds = %if.then, %entry
  %9 = load float, float* %rv, align 4, !dbg !15950
  ret float %9, !dbg !15951
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_sculpt_plane(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float* %an, float* %fc) #0 !dbg !15952 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %an.addr = alloca float*, align 8
  %fc.addr = alloca float*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !15955, metadata !DIExpression()), !dbg !15956
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15957, metadata !DIExpression()), !dbg !15958
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !15959, metadata !DIExpression()), !dbg !15960
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  store float* %an, float** %an.addr, align 8
  call void @llvm.dbg.declare(metadata float** %an.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  store float* %fc, float** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fc.addr, metadata !15965, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !15967, metadata !DIExpression()), !dbg !15968
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15969
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !15970
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !15970
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !15968
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !15971, metadata !DIExpression()), !dbg !15972
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !15973
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !15974
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !15975
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !15972
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15976
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !15978
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !15978
  %mirror_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 31, !dbg !15979
  %5 = load i32, i32* %mirror_symmetry_pass, align 8, !dbg !15979
  %cmp = icmp eq i32 %5, 0, !dbg !15980
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !15981

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15982
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 28, !dbg !15983
  %7 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !15983
  %radial_symmetry_pass = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %7, i32 0, i32 38, !dbg !15984
  %8 = load i32, i32* %radial_symmetry_pass, align 8, !dbg !15984
  %cmp2 = icmp eq i32 %8, 0, !dbg !15985
  br i1 %cmp2, label %land.lhs.true3, label %if.else, !dbg !15986

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !15987
  %cache4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 28, !dbg !15988
  %10 = load %struct.StrokeCache*, %struct.StrokeCache** %cache4, align 8, !dbg !15988
  %first_time = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %10, i32 0, i32 20, !dbg !15989
  %11 = load i8, i8* %first_time, align 4, !dbg !15989
  %conv = zext i8 %11 to i32, !dbg !15987
  %tobool = icmp ne i32 %conv, 0, !dbg !15987
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15990

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !15991
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 16, !dbg !15992
  %13 = load i32, i32* %flag, align 8, !dbg !15992
  %and = and i32 %13, 32768, !dbg !15993
  %tobool5 = icmp ne i32 %and, 0, !dbg !15993
  br i1 %tobool5, label %if.else, label %if.then, !dbg !15994

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !15995
  %sculpt_plane = getelementptr inbounds %struct.Brush, %struct.Brush* %14, i32 0, i32 28, !dbg !15997
  %15 = load i32, i32* %sculpt_plane, align 8, !dbg !15997
  switch i32 %15, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb7
    i32 3, label %sw.bb10
    i32 4, label %sw.bb14
    i32 0, label %sw.bb18
  ], !dbg !15998

sw.bb:                                            ; preds = %if.then
  %16 = load float*, float** %an.addr, align 8, !dbg !15999
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16001
  %cache6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %17, i32 0, i32 28, !dbg !16002
  %18 = load %struct.StrokeCache*, %struct.StrokeCache** %cache6, align 8, !dbg !16002
  %true_view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %18, i32 0, i32 32, !dbg !16003
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %true_view_normal, i64 0, i64 0, !dbg !16001
  call void @copy_v3_v3(float* %16, float* %arraydecay), !dbg !16004
  br label %sw.epilog, !dbg !16005

sw.bb7:                                           ; preds = %if.then
  %19 = load float*, float** %an.addr, align 8, !dbg !16006
  %arrayidx = getelementptr inbounds float, float* %19, i64 1, !dbg !16006
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !16007
  %20 = load float*, float** %an.addr, align 8, !dbg !16008
  %arrayidx8 = getelementptr inbounds float, float* %20, i64 2, !dbg !16008
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !16009
  %21 = load float*, float** %an.addr, align 8, !dbg !16010
  %arrayidx9 = getelementptr inbounds float, float* %21, i64 0, !dbg !16010
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !16011
  br label %sw.epilog, !dbg !16012

sw.bb10:                                          ; preds = %if.then
  %22 = load float*, float** %an.addr, align 8, !dbg !16013
  %arrayidx11 = getelementptr inbounds float, float* %22, i64 0, !dbg !16013
  store float 0.000000e+00, float* %arrayidx11, align 4, !dbg !16014
  %23 = load float*, float** %an.addr, align 8, !dbg !16015
  %arrayidx12 = getelementptr inbounds float, float* %23, i64 2, !dbg !16015
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !16016
  %24 = load float*, float** %an.addr, align 8, !dbg !16017
  %arrayidx13 = getelementptr inbounds float, float* %24, i64 1, !dbg !16017
  store float 1.000000e+00, float* %arrayidx13, align 4, !dbg !16018
  br label %sw.epilog, !dbg !16019

sw.bb14:                                          ; preds = %if.then
  %25 = load float*, float** %an.addr, align 8, !dbg !16020
  %arrayidx15 = getelementptr inbounds float, float* %25, i64 0, !dbg !16020
  store float 0.000000e+00, float* %arrayidx15, align 4, !dbg !16021
  %26 = load float*, float** %an.addr, align 8, !dbg !16022
  %arrayidx16 = getelementptr inbounds float, float* %26, i64 1, !dbg !16022
  store float 0.000000e+00, float* %arrayidx16, align 4, !dbg !16023
  %27 = load float*, float** %an.addr, align 8, !dbg !16024
  %arrayidx17 = getelementptr inbounds float, float* %27, i64 2, !dbg !16024
  store float 1.000000e+00, float* %arrayidx17, align 4, !dbg !16025
  br label %sw.epilog, !dbg !16026

sw.bb18:                                          ; preds = %if.then
  %28 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !16027
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16028
  %30 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16029
  %31 = load i32, i32* %totnode.addr, align 4, !dbg !16030
  %32 = load float*, float** %an.addr, align 8, !dbg !16031
  %33 = load float*, float** %fc.addr, align 8, !dbg !16032
  call void @calc_area_normal_and_flatten_center(%struct.Sculpt* %28, %struct.Object* %29, %struct.PBVHNode** %30, i32 %31, float* %32, float* %33), !dbg !16033
  br label %sw.epilog, !dbg !16034

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !16035

sw.epilog:                                        ; preds = %sw.default, %sw.bb18, %sw.bb14, %sw.bb10, %sw.bb7, %sw.bb
  %34 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !16036
  %sculpt_plane19 = getelementptr inbounds %struct.Brush, %struct.Brush* %34, i32 0, i32 28, !dbg !16038
  %35 = load i32, i32* %sculpt_plane19, align 8, !dbg !16038
  %cmp20 = icmp ne i32 %35, 0, !dbg !16039
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !16040

if.then22:                                        ; preds = %sw.epilog
  %36 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !16041
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16042
  %38 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16043
  %39 = load i32, i32* %totnode.addr, align 4, !dbg !16044
  %40 = load float*, float** %fc.addr, align 8, !dbg !16045
  call void @calc_flatten_center(%struct.Sculpt* %36, %struct.Object* %37, %struct.PBVHNode** %38, i32 %39, float* %40), !dbg !16046
  br label %if.end, !dbg !16046

if.end:                                           ; preds = %if.then22, %sw.epilog
  %41 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16047
  %cache23 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %41, i32 0, i32 28, !dbg !16048
  %42 = load %struct.StrokeCache*, %struct.StrokeCache** %cache23, align 8, !dbg !16048
  %sculpt_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %42, i32 0, i32 34, !dbg !16049
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal, i64 0, i64 0, !dbg !16047
  %43 = load float*, float** %an.addr, align 8, !dbg !16050
  call void @copy_v3_v3(float* %arraydecay24, float* %43), !dbg !16051
  %44 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16052
  %cache25 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %44, i32 0, i32 28, !dbg !16053
  %45 = load %struct.StrokeCache*, %struct.StrokeCache** %cache25, align 8, !dbg !16053
  %last_center = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %45, i32 0, i32 37, !dbg !16054
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %last_center, i64 0, i64 0, !dbg !16052
  %46 = load float*, float** %fc.addr, align 8, !dbg !16055
  call void @copy_v3_v3(float* %arraydecay26, float* %46), !dbg !16056
  br label %if.end44, !dbg !16057

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %47 = load float*, float** %an.addr, align 8, !dbg !16058
  %48 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16060
  %cache27 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %48, i32 0, i32 28, !dbg !16061
  %49 = load %struct.StrokeCache*, %struct.StrokeCache** %cache27, align 8, !dbg !16061
  %sculpt_normal28 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %49, i32 0, i32 34, !dbg !16062
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %sculpt_normal28, i64 0, i64 0, !dbg !16060
  call void @copy_v3_v3(float* %47, float* %arraydecay29), !dbg !16063
  %50 = load float*, float** %fc.addr, align 8, !dbg !16064
  %51 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16065
  %cache30 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %51, i32 0, i32 28, !dbg !16066
  %52 = load %struct.StrokeCache*, %struct.StrokeCache** %cache30, align 8, !dbg !16066
  %last_center31 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %52, i32 0, i32 37, !dbg !16067
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %last_center31, i64 0, i64 0, !dbg !16065
  call void @copy_v3_v3(float* %50, float* %arraydecay32), !dbg !16068
  %53 = load float*, float** %an.addr, align 8, !dbg !16069
  %54 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16070
  %cache33 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %54, i32 0, i32 28, !dbg !16071
  %55 = load %struct.StrokeCache*, %struct.StrokeCache** %cache33, align 8, !dbg !16071
  %mirror_symmetry_pass34 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %55, i32 0, i32 31, !dbg !16072
  %56 = load i32, i32* %mirror_symmetry_pass34, align 8, !dbg !16072
  %conv35 = trunc i32 %56 to i8, !dbg !16070
  call void @flip_v3(float* %53, i8 zeroext %conv35), !dbg !16073
  %57 = load float*, float** %fc.addr, align 8, !dbg !16074
  %58 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16075
  %cache36 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %58, i32 0, i32 28, !dbg !16076
  %59 = load %struct.StrokeCache*, %struct.StrokeCache** %cache36, align 8, !dbg !16076
  %mirror_symmetry_pass37 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %59, i32 0, i32 31, !dbg !16077
  %60 = load i32, i32* %mirror_symmetry_pass37, align 8, !dbg !16077
  %conv38 = trunc i32 %60 to i8, !dbg !16075
  call void @flip_v3(float* %57, i8 zeroext %conv38), !dbg !16078
  %61 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16079
  %cache39 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %61, i32 0, i32 28, !dbg !16080
  %62 = load %struct.StrokeCache*, %struct.StrokeCache** %cache39, align 8, !dbg !16080
  %symm_rot_mat = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %62, i32 0, i32 39, !dbg !16081
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat, i64 0, i64 0, !dbg !16079
  %63 = load float*, float** %an.addr, align 8, !dbg !16082
  call void @mul_m4_v3([4 x float]* %arraydecay40, float* %63), !dbg !16083
  %64 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16084
  %cache41 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %64, i32 0, i32 28, !dbg !16085
  %65 = load %struct.StrokeCache*, %struct.StrokeCache** %cache41, align 8, !dbg !16085
  %symm_rot_mat42 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %65, i32 0, i32 39, !dbg !16086
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %symm_rot_mat42, i64 0, i64 0, !dbg !16084
  %66 = load float*, float** %fc.addr, align 8, !dbg !16087
  call void @mul_m4_v3([4 x float]* %arraydecay43, float* %66), !dbg !16088
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.end
  ret void, !dbg !16089
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_test_sq(%struct.SculptBrushTest* %test, float* %co) #0 !dbg !16090 {
entry:
  %retval = alloca i8, align 1
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %co.addr = alloca float*, align 8
  %distsq = alloca float, align 4
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !16091, metadata !DIExpression()), !dbg !16092
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !16093, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.declare(metadata float* %distsq, metadata !16095, metadata !DIExpression()), !dbg !16096
  %0 = load float*, float** %co.addr, align 8, !dbg !16097
  %1 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16098
  %location = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %1, i32 0, i32 1, !dbg !16099
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %location, i64 0, i64 0, !dbg !16098
  %call = call float @len_squared_v3v3(float* %0, float* %arraydecay), !dbg !16100
  store float %call, float* %distsq, align 4, !dbg !16096
  %2 = load float, float* %distsq, align 4, !dbg !16101
  %3 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16103
  %radius_squared = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %3, i32 0, i32 0, !dbg !16104
  %4 = load float, float* %radius_squared, align 8, !dbg !16104
  %cmp = fcmp ole float %2, %4, !dbg !16105
  br i1 %cmp, label %if.then, label %if.else, !dbg !16106

if.then:                                          ; preds = %entry
  %5 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16107
  %6 = load float*, float** %co.addr, align 8, !dbg !16110
  %call1 = call zeroext i8 @sculpt_brush_test_clipping(%struct.SculptBrushTest* %5, float* %6), !dbg !16111
  %tobool = icmp ne i8 %call1, 0, !dbg !16111
  br i1 %tobool, label %if.then2, label %if.end, !dbg !16112

if.then2:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !16113
  br label %return, !dbg !16113

if.end:                                           ; preds = %if.then
  %7 = load float, float* %distsq, align 4, !dbg !16115
  %8 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16116
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %8, i32 0, i32 2, !dbg !16117
  store float %7, float* %dist, align 8, !dbg !16118
  store i8 1, i8* %retval, align 1, !dbg !16119
  br label %return, !dbg !16119

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16120
  br label %return, !dbg !16120

return:                                           ; preds = %if.else, %if.end, %if.then2
  %9 = load i8, i8* %retval, align 1, !dbg !16122
  ret i8 %9, !dbg !16122
}

; Function Attrs: noinline nounwind uwtable
define internal void @point_plane_project(float* %intr, float* %co, float* %plane_normal, float* %plane_center) #0 !dbg !16123 {
entry:
  %intr.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %plane_normal.addr = alloca float*, align 8
  %plane_center.addr = alloca float*, align 8
  store float* %intr, float** %intr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %intr.addr, metadata !16124, metadata !DIExpression()), !dbg !16125
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  store float* %plane_normal, float** %plane_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_normal.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  store float* %plane_center, float** %plane_center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_center.addr, metadata !16130, metadata !DIExpression()), !dbg !16131
  %0 = load float*, float** %intr.addr, align 8, !dbg !16132
  %1 = load float*, float** %co.addr, align 8, !dbg !16133
  %2 = load float*, float** %plane_center.addr, align 8, !dbg !16134
  call void @sub_v3_v3v3(float* %0, float* %1, float* %2), !dbg !16135
  %3 = load float*, float** %intr.addr, align 8, !dbg !16136
  %4 = load float*, float** %plane_normal.addr, align 8, !dbg !16137
  %5 = load float*, float** %plane_normal.addr, align 8, !dbg !16138
  %6 = load float*, float** %intr.addr, align 8, !dbg !16139
  %call = call float @dot_v3v3(float* %5, float* %6), !dbg !16140
  call void @mul_v3_v3fl(float* %3, float* %4, float %call), !dbg !16141
  %7 = load float*, float** %intr.addr, align 8, !dbg !16142
  %8 = load float*, float** %co.addr, align 8, !dbg !16143
  %9 = load float*, float** %intr.addr, align 8, !dbg !16144
  call void @sub_v3_v3v3(float* %7, float* %8, float* %9), !dbg !16145
  ret void, !dbg !16146
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @plane_trim(%struct.StrokeCache* %cache, %struct.Brush* %brush, float* %val) #0 !dbg !16147 {
entry:
  %cache.addr = alloca %struct.StrokeCache*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %val.addr = alloca float*, align 8
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !16150, metadata !DIExpression()), !dbg !16151
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !16152, metadata !DIExpression()), !dbg !16153
  store float* %val, float** %val.addr, align 8
  call void @llvm.dbg.declare(metadata float** %val.addr, metadata !16154, metadata !DIExpression()), !dbg !16155
  %0 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !16156
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %0, i32 0, i32 16, !dbg !16157
  %1 = load i32, i32* %flag, align 8, !dbg !16157
  %and = and i32 %1, 67108864, !dbg !16158
  %tobool = icmp ne i32 %and, 0, !dbg !16158
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !16159

lor.rhs:                                          ; preds = %entry
  %2 = load float*, float** %val.addr, align 8, !dbg !16160
  %3 = load float*, float** %val.addr, align 8, !dbg !16161
  %call = call float @dot_v3v3(float* %2, float* %3), !dbg !16162
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !16163
  %radius_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 12, !dbg !16164
  %5 = load float, float* %radius_squared, align 4, !dbg !16164
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !16165
  %plane_trim_squared = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 49, !dbg !16166
  %7 = load float, float* %plane_trim_squared, align 4, !dbg !16166
  %mul = fmul float %5, %7, !dbg !16167
  %cmp = fcmp ole float %call, %mul, !dbg !16168
  br label %lor.end, !dbg !16159

lor.end:                                          ; preds = %lor.rhs, %entry
  %8 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !16159
  ret i32 %lor.ext, !dbg !16169
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_area_normal_and_flatten_center(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float* %an, float* %fc) #0 !dbg !16170 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %an.addr = alloca float*, align 8
  %fc.addr = alloca float*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %n = alloca i32, align 4
  %out_flip = alloca [3 x float], align 4
  %fc_flip = alloca [3 x float], align 4
  %count = alloca i32, align 4
  %count_flipped = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %unode = alloca %struct.SculptUndoNode*, align 8
  %private_an = alloca [3 x float], align 4
  %private_out_flip = alloca [3 x float], align 4
  %private_fc = alloca [3 x float], align 4
  %private_fc_flip = alloca [3 x float], align 4
  %private_count = alloca i32, align 4
  %private_count_flip = alloca i32, align 4
  %fno146 = alloca [3 x float], align 4
  %fno381 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !16171, metadata !DIExpression()), !dbg !16172
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16173, metadata !DIExpression()), !dbg !16174
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !16175, metadata !DIExpression()), !dbg !16176
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !16177, metadata !DIExpression()), !dbg !16178
  store float* %an, float** %an.addr, align 8
  call void @llvm.dbg.declare(metadata float** %an.addr, metadata !16179, metadata !DIExpression()), !dbg !16180
  store float* %fc, float** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fc.addr, metadata !16181, metadata !DIExpression()), !dbg !16182
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !16183, metadata !DIExpression()), !dbg !16184
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16185
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !16186
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !16186
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !16184
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.declare(metadata [3 x float]* %out_flip, metadata !16189, metadata !DIExpression()), !dbg !16190
  %2 = bitcast [3 x float]* %out_flip to i8*, !dbg !16190
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !16190
  call void @llvm.dbg.declare(metadata [3 x float]* %fc_flip, metadata !16191, metadata !DIExpression()), !dbg !16192
  %3 = bitcast [3 x float]* %fc_flip to i8*, !dbg !16192
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 12, i1 false), !dbg !16192
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16193, metadata !DIExpression()), !dbg !16194
  store i32 0, i32* %count, align 4, !dbg !16194
  call void @llvm.dbg.declare(metadata i32* %count_flipped, metadata !16195, metadata !DIExpression()), !dbg !16196
  store i32 0, i32* %count_flipped, align 4, !dbg !16196
  %4 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !16197
  %5 = load float*, float** %an.addr, align 8, !dbg !16198
  call void @zero_v3(float* %5), !dbg !16199
  %6 = load float*, float** %fc.addr, align 8, !dbg !16200
  call void @zero_v3(float* %6), !dbg !16201
  store i32 0, i32* %n, align 4, !dbg !16202
  br label %for.cond, !dbg !16204

for.cond:                                         ; preds = %for.inc450, %entry
  %7 = load i32, i32* %n, align 4, !dbg !16205
  %8 = load i32, i32* %totnode.addr, align 4, !dbg !16207
  %cmp = icmp slt i32 %7, %8, !dbg !16208
  br i1 %cmp, label %for.body, label %for.end452, !dbg !16209

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !16210, metadata !DIExpression()), !dbg !16212
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !16213, metadata !DIExpression()), !dbg !16214
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !16215, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.declare(metadata [3 x float]* %private_an, metadata !16217, metadata !DIExpression()), !dbg !16218
  %9 = bitcast [3 x float]* %private_an to i8*, !dbg !16218
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 12, i1 false), !dbg !16218
  call void @llvm.dbg.declare(metadata [3 x float]* %private_out_flip, metadata !16219, metadata !DIExpression()), !dbg !16220
  %10 = bitcast [3 x float]* %private_out_flip to i8*, !dbg !16220
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 12, i1 false), !dbg !16220
  call void @llvm.dbg.declare(metadata [3 x float]* %private_fc, metadata !16221, metadata !DIExpression()), !dbg !16222
  %11 = bitcast [3 x float]* %private_fc to i8*, !dbg !16222
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 12, i1 false), !dbg !16222
  call void @llvm.dbg.declare(metadata [3 x float]* %private_fc_flip, metadata !16223, metadata !DIExpression()), !dbg !16224
  %12 = bitcast [3 x float]* %private_fc_flip to i8*, !dbg !16224
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 12, i1 false), !dbg !16224
  call void @llvm.dbg.declare(metadata i32* %private_count, metadata !16225, metadata !DIExpression()), !dbg !16226
  store i32 0, i32* %private_count, align 4, !dbg !16226
  call void @llvm.dbg.declare(metadata i32* %private_count_flip, metadata !16227, metadata !DIExpression()), !dbg !16228
  store i32 0, i32* %private_count_flip, align 4, !dbg !16228
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16229
  %14 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16230
  %15 = load i32, i32* %n, align 4, !dbg !16231
  %idxprom = sext i32 %15 to i64, !dbg !16230
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %14, i64 %idxprom, !dbg !16230
  %16 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !16230
  %call = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %13, %struct.PBVHNode* %16, i32 0), !dbg !16232
  store %struct.SculptUndoNode* %call, %struct.SculptUndoNode** %unode, align 8, !dbg !16233
  %17 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16234
  call void @sculpt_brush_test_init(%struct.SculptSession* %17, %struct.SculptBrushTest* %test), !dbg !16235
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16236
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 28, !dbg !16238
  %19 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !16238
  %original = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %19, i32 0, i32 41, !dbg !16239
  %20 = load i8, i8* %original, align 4, !dbg !16239
  %conv = zext i8 %20 to i32, !dbg !16236
  %tobool = icmp ne i32 %conv, 0, !dbg !16236
  br i1 %tobool, label %land.lhs.true, label %if.else192, !dbg !16240

land.lhs.true:                                    ; preds = %for.body
  %21 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16241
  %co = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %21, i32 0, i32 5, !dbg !16242
  %22 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !16242
  %tobool1 = icmp ne [3 x float]* %22, null, !dbg !16241
  br i1 %tobool1, label %if.then, label %if.else192, !dbg !16243

if.then:                                          ; preds = %land.lhs.true
  %23 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16244
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %23, i32 0, i32 15, !dbg !16244
  %24 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !16244
  %25 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16244
  %26 = load i32, i32* %n, align 4, !dbg !16244
  %idxprom2 = sext i32 %26 to i64, !dbg !16244
  %arrayidx3 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %25, i64 %idxprom2, !dbg !16244
  %27 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx3, align 8, !dbg !16244
  call void @pbvh_vertex_iter_init(%struct.PBVH* %24, %struct.PBVHNode* %27, %struct.PBVHVertexIter* %vd, i32 1), !dbg !16244
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16246
  store i32 0, i32* %i, align 4, !dbg !16246
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16246
  store i32 0, i32* %g, align 8, !dbg !16246
  br label %for.cond4, !dbg !16246

for.cond4:                                        ; preds = %for.inc188, %if.then
  %g5 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16248
  %28 = load i32, i32* %g5, align 8, !dbg !16248
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !16248
  %29 = load i32, i32* %totgrid, align 8, !dbg !16248
  %cmp6 = icmp slt i32 %28, %29, !dbg !16248
  br i1 %cmp6, label %for.body8, label %for.end191, !dbg !16246

for.body8:                                        ; preds = %for.cond4
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16250
  %30 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !16250
  %tobool9 = icmp ne %struct.CCGElem** %30, null, !dbg !16250
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !16253

if.then10:                                        ; preds = %for.body8
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16254
  %31 = load i32, i32* %gridsize, align 4, !dbg !16254
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16254
  store i32 %31, i32* %width, align 4, !dbg !16254
  %gridsize11 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16254
  %32 = load i32, i32* %gridsize11, align 4, !dbg !16254
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16254
  store i32 %32, i32* %height, align 8, !dbg !16254
  %grids12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16254
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grids12, align 8, !dbg !16254
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16254
  %34 = load i32*, i32** %grid_indices, align 8, !dbg !16254
  %g13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16254
  %35 = load i32, i32* %g13, align 8, !dbg !16254
  %idxprom14 = sext i32 %35 to i64, !dbg !16254
  %arrayidx15 = getelementptr inbounds i32, i32* %34, i64 %idxprom14, !dbg !16254
  %36 = load i32, i32* %arrayidx15, align 4, !dbg !16254
  %idxprom16 = sext i32 %36 to i64, !dbg !16254
  %arrayidx17 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %33, i64 %idxprom16, !dbg !16254
  %37 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx17, align 8, !dbg !16254
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16254
  store %struct.CCGElem* %37, %struct.CCGElem** %grid, align 8, !dbg !16254
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !16256
  %38 = load i32**, i32*** %grid_hidden, align 8, !dbg !16256
  %grid_indices18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16256
  %39 = load i32*, i32** %grid_indices18, align 8, !dbg !16256
  %g19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16256
  %40 = load i32, i32* %g19, align 8, !dbg !16256
  %idxprom20 = sext i32 %40 to i64, !dbg !16256
  %arrayidx21 = getelementptr inbounds i32, i32* %39, i64 %idxprom20, !dbg !16256
  %41 = load i32, i32* %arrayidx21, align 4, !dbg !16256
  %idxprom22 = sext i32 %41 to i64, !dbg !16256
  %arrayidx23 = getelementptr inbounds i32*, i32** %38, i64 %idxprom22, !dbg !16256
  %42 = load i32*, i32** %arrayidx23, align 8, !dbg !16256
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16256
  store i32* %42, i32** %gh, align 8, !dbg !16256
  br label %if.end, !dbg !16254

if.else:                                          ; preds = %for.body8
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !16258
  %43 = load i32, i32* %totvert, align 8, !dbg !16258
  %width24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16258
  store i32 %43, i32* %width24, align 4, !dbg !16258
  %height25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16258
  store i32 1, i32* %height25, align 8, !dbg !16258
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16260
  store i32 0, i32* %gy, align 8, !dbg !16260
  br label %for.cond26, !dbg !16260

for.cond26:                                       ; preds = %for.inc184, %if.end
  %gy27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16262
  %44 = load i32, i32* %gy27, align 8, !dbg !16262
  %height28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16262
  %45 = load i32, i32* %height28, align 8, !dbg !16262
  %cmp29 = icmp slt i32 %44, %45, !dbg !16262
  br i1 %cmp29, label %for.body31, label %for.end187, !dbg !16260

for.body31:                                       ; preds = %for.cond26
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16264
  store i32 0, i32* %gx, align 4, !dbg !16264
  br label %for.cond32, !dbg !16264

for.cond32:                                       ; preds = %for.inc, %for.body31
  %gx33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16267
  %46 = load i32, i32* %gx33, align 4, !dbg !16267
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16267
  %47 = load i32, i32* %width34, align 4, !dbg !16267
  %cmp35 = icmp slt i32 %46, %47, !dbg !16267
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !16264

for.body37:                                       ; preds = %for.cond32
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16269
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !16269
  %tobool39 = icmp ne %struct.CCGElem* %48, null, !dbg !16269
  br i1 %tobool39, label %if.then40, label %if.else75, !dbg !16272

if.then40:                                        ; preds = %for.body37
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16273
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !16273
  %grid41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16273
  %50 = load %struct.CCGElem*, %struct.CCGElem** %grid41, align 8, !dbg !16273
  %call42 = call float* @CCG_elem_co(%struct.CCGKey* %49, %struct.CCGElem* %50), !dbg !16273
  %co43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16273
  store float* %call42, float** %co43, align 8, !dbg !16273
  %key44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16273
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key44, align 8, !dbg !16273
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16273
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !16273
  %call46 = call float* @CCG_elem_no(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !16273
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16273
  store float* %call46, float** %fno, align 8, !dbg !16273
  %key47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16273
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key47, align 8, !dbg !16273
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %53, i32 0, i32 9, !dbg !16273
  %54 = load i32, i32* %has_mask, align 4, !dbg !16273
  %tobool48 = icmp ne i32 %54, 0, !dbg !16273
  br i1 %tobool48, label %cond.true, label %cond.false, !dbg !16273

cond.true:                                        ; preds = %if.then40
  %key49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16273
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key49, align 8, !dbg !16273
  %grid50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16273
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid50, align 8, !dbg !16273
  %call51 = call float* @CCG_elem_mask(%struct.CCGKey* %55, %struct.CCGElem* %56), !dbg !16273
  br label %cond.end, !dbg !16273

cond.false:                                       ; preds = %if.then40
  br label %cond.end, !dbg !16273

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call51, %cond.true ], [ null, %cond.false ], !dbg !16273
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16273
  store float* %cond, float** %mask, align 8, !dbg !16273
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16273
  %57 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !16273
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16273
  %58 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !16273
  %call54 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %57, %struct.CCGElem* %58), !dbg !16273
  %grid55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16273
  store %struct.CCGElem* %call54, %struct.CCGElem** %grid55, align 8, !dbg !16273
  %gh56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16275
  %59 = load i32*, i32** %gh56, align 8, !dbg !16275
  %tobool57 = icmp ne i32* %59, null, !dbg !16275
  br i1 %tobool57, label %if.then58, label %if.end74, !dbg !16273

if.then58:                                        ; preds = %cond.end
  %gh59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16277
  %60 = load i32*, i32** %gh59, align 8, !dbg !16277
  %gy60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16277
  %61 = load i32, i32* %gy60, align 8, !dbg !16277
  %gridsize61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16277
  %62 = load i32, i32* %gridsize61, align 4, !dbg !16277
  %mul = mul nsw i32 %61, %62, !dbg !16277
  %gx62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16277
  %63 = load i32, i32* %gx62, align 4, !dbg !16277
  %add = add nsw i32 %mul, %63, !dbg !16277
  %shr = ashr i32 %add, 5, !dbg !16277
  %idxprom63 = sext i32 %shr to i64, !dbg !16277
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !16277
  %64 = load i32, i32* %arrayidx64, align 4, !dbg !16277
  %gy65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16277
  %65 = load i32, i32* %gy65, align 8, !dbg !16277
  %gridsize66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16277
  %66 = load i32, i32* %gridsize66, align 4, !dbg !16277
  %mul67 = mul nsw i32 %65, %66, !dbg !16277
  %gx68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16277
  %67 = load i32, i32* %gx68, align 4, !dbg !16277
  %add69 = add nsw i32 %mul67, %67, !dbg !16277
  %and = and i32 %add69, 31, !dbg !16277
  %shl = shl i32 1, %and, !dbg !16277
  %and70 = and i32 %64, %shl, !dbg !16277
  %tobool71 = icmp ne i32 %and70, 0, !dbg !16277
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !16280

if.then72:                                        ; preds = %if.then58
  br label %for.inc, !dbg !16277

if.end73:                                         ; preds = %if.then58
  br label %if.end74, !dbg !16280

if.end74:                                         ; preds = %if.end73, %cond.end
  br label %if.end137, !dbg !16273

if.else75:                                        ; preds = %for.body37
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16281
  %68 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !16281
  %tobool76 = icmp ne %struct.MVert* %68, null, !dbg !16281
  br i1 %tobool76, label %if.then77, label %if.else107, !dbg !16269

if.then77:                                        ; preds = %if.else75
  %mverts78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16283
  %69 = load %struct.MVert*, %struct.MVert** %mverts78, align 8, !dbg !16283
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16283
  %70 = load i32*, i32** %vert_indices, align 8, !dbg !16283
  %gx79 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16283
  %71 = load i32, i32* %gx79, align 4, !dbg !16283
  %idxprom80 = sext i32 %71 to i64, !dbg !16283
  %arrayidx81 = getelementptr inbounds i32, i32* %70, i64 %idxprom80, !dbg !16283
  %72 = load i32, i32* %arrayidx81, align 4, !dbg !16283
  %idxprom82 = sext i32 %72 to i64, !dbg !16283
  %arrayidx83 = getelementptr inbounds %struct.MVert, %struct.MVert* %69, i64 %idxprom82, !dbg !16283
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16283
  store %struct.MVert* %arrayidx83, %struct.MVert** %mvert, align 8, !dbg !16283
  %mvert84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16285
  %73 = load %struct.MVert*, %struct.MVert** %mvert84, align 8, !dbg !16285
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %73, i32 0, i32 2, !dbg !16285
  %74 = load i8, i8* %flag, align 2, !dbg !16285
  %conv85 = zext i8 %74 to i32, !dbg !16285
  %and86 = and i32 %conv85, 16, !dbg !16285
  %tobool87 = icmp ne i32 %and86, 0, !dbg !16285
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !16283

if.then88:                                        ; preds = %if.then77
  br label %for.inc, !dbg !16285

if.end89:                                         ; preds = %if.then77
  %mvert90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16283
  %75 = load %struct.MVert*, %struct.MVert** %mvert90, align 8, !dbg !16283
  %co91 = getelementptr inbounds %struct.MVert, %struct.MVert* %75, i32 0, i32 0, !dbg !16283
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co91, i64 0, i64 0, !dbg !16283
  %co92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16283
  store float* %arraydecay, float** %co92, align 8, !dbg !16283
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16283
  %76 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !16283
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %76, i32 0, i32 1, !dbg !16283
  %arraydecay94 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !16283
  %no95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16283
  store i16* %arraydecay94, i16** %no95, align 8, !dbg !16283
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16287
  %77 = load float*, float** %vmask, align 8, !dbg !16287
  %tobool96 = icmp ne float* %77, null, !dbg !16287
  br i1 %tobool96, label %if.then97, label %if.end106, !dbg !16283

if.then97:                                        ; preds = %if.end89
  %vmask98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16287
  %78 = load float*, float** %vmask98, align 8, !dbg !16287
  %vert_indices99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16287
  %79 = load i32*, i32** %vert_indices99, align 8, !dbg !16287
  %gx100 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16287
  %80 = load i32, i32* %gx100, align 4, !dbg !16287
  %idxprom101 = sext i32 %80 to i64, !dbg !16287
  %arrayidx102 = getelementptr inbounds i32, i32* %79, i64 %idxprom101, !dbg !16287
  %81 = load i32, i32* %arrayidx102, align 4, !dbg !16287
  %idxprom103 = sext i32 %81 to i64, !dbg !16287
  %arrayidx104 = getelementptr inbounds float, float* %78, i64 %idxprom103, !dbg !16287
  %mask105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16287
  store float* %arrayidx104, float** %mask105, align 8, !dbg !16287
  br label %if.end106, !dbg !16287

if.end106:                                        ; preds = %if.then97, %if.end89
  br label %if.end136, !dbg !16283

if.else107:                                       ; preds = %if.else75
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16289
  %call108 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !16289
  %tobool109 = icmp ne i8 %call108, 0, !dbg !16289
  br i1 %tobool109, label %if.else114, label %if.then110, !dbg !16292

if.then110:                                       ; preds = %if.else107
  %bm_unique_verts111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16293
  %call112 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts111), !dbg !16293
  %82 = bitcast i8* %call112 to %struct.BMVert*, !dbg !16293
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16293
  store %struct.BMVert* %82, %struct.BMVert** %bm_vert, align 8, !dbg !16293
  %bm_unique_verts113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16293
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts113), !dbg !16293
  br label %if.end118, !dbg !16293

if.else114:                                       ; preds = %if.else107
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16295
  %call115 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !16295
  %83 = bitcast i8* %call115 to %struct.BMVert*, !dbg !16295
  %bm_vert116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16295
  store %struct.BMVert* %83, %struct.BMVert** %bm_vert116, align 8, !dbg !16295
  %bm_other_verts117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16295
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts117), !dbg !16295
  br label %if.end118

if.end118:                                        ; preds = %if.else114, %if.then110
  %bm_vert119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16297
  %84 = load %struct.BMVert*, %struct.BMVert** %bm_vert119, align 8, !dbg !16297
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 0, !dbg !16297
  %call120 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !16297
  %conv121 = zext i8 %call120 to i32, !dbg !16297
  %tobool122 = icmp ne i32 %conv121, 0, !dbg !16297
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !16292

if.then123:                                       ; preds = %if.end118
  br label %for.inc, !dbg !16297

if.end124:                                        ; preds = %if.end118
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16292
  %85 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !16292
  %co126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %85, i32 0, i32 2, !dbg !16292
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %co126, i64 0, i64 0, !dbg !16292
  %co128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16292
  store float* %arraydecay127, float** %co128, align 8, !dbg !16292
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16292
  %86 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !16292
  %no130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %86, i32 0, i32 3, !dbg !16292
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %no130, i64 0, i64 0, !dbg !16292
  %fno132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16292
  store float* %arraydecay131, float** %fno132, align 8, !dbg !16292
  %bm_vert133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16292
  %87 = load %struct.BMVert*, %struct.BMVert** %bm_vert133, align 8, !dbg !16292
  %head134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !16292
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head134, i32 0, i32 0, !dbg !16292
  %88 = load i8*, i8** %data, align 8, !dbg !16292
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !16292
  %89 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !16292
  %idx.ext = sext i32 %89 to i64, !dbg !16292
  %add.ptr = getelementptr inbounds i8, i8* %88, i64 %idx.ext, !dbg !16292
  %90 = bitcast i8* %add.ptr to float*, !dbg !16292
  %mask135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16292
  store float* %90, float** %mask135, align 8, !dbg !16292
  br label %if.end136

if.end136:                                        ; preds = %if.end124, %if.end106
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end74
  %91 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16299
  %co138 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %91, i32 0, i32 5, !dbg !16302
  %92 = load [3 x float]*, [3 x float]** %co138, align 8, !dbg !16302
  %i139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16303
  %93 = load i32, i32* %i139, align 4, !dbg !16303
  %idxprom140 = sext i32 %93 to i64, !dbg !16299
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %92, i64 %idxprom140, !dbg !16299
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !16299
  %call143 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %arraydecay142), !dbg !16304
  %tobool144 = icmp ne i8 %call143, 0, !dbg !16304
  br i1 %tobool144, label %if.then145, label %if.end179, !dbg !16305

if.then145:                                       ; preds = %if.end137
  call void @llvm.dbg.declare(metadata [3 x float]* %fno146, metadata !16306, metadata !DIExpression()), !dbg !16308
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16309
  %94 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16310
  %no148 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %94, i32 0, i32 7, !dbg !16311
  %95 = load [3 x i16]*, [3 x i16]** %no148, align 8, !dbg !16311
  %i149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16312
  %96 = load i32, i32* %i149, align 4, !dbg !16312
  %idxprom150 = sext i32 %96 to i64, !dbg !16310
  %arrayidx151 = getelementptr inbounds [3 x i16], [3 x i16]* %95, i64 %idxprom150, !dbg !16310
  %arraydecay152 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx151, i64 0, i64 0, !dbg !16310
  call void @normal_short_to_float_v3(float* %arraydecay147, i16* %arraydecay152), !dbg !16313
  %97 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16314
  %cache153 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %97, i32 0, i32 28, !dbg !16316
  %98 = load %struct.StrokeCache*, %struct.StrokeCache** %cache153, align 8, !dbg !16316
  %view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %98, i32 0, i32 33, !dbg !16317
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %view_normal, i64 0, i64 0, !dbg !16314
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16318
  %call156 = call float @dot_v3v3(float* %arraydecay154, float* %arraydecay155), !dbg !16319
  %cmp157 = fcmp ogt float %call156, 0.000000e+00, !dbg !16320
  br i1 %cmp157, label %if.then159, label %if.else168, !dbg !16321

if.then159:                                       ; preds = %if.then145
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !16322
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16324
  call void @add_v3_v3(float* %arraydecay160, float* %arraydecay161), !dbg !16325
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16326
  %99 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16327
  %co163 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %99, i32 0, i32 5, !dbg !16328
  %100 = load [3 x float]*, [3 x float]** %co163, align 8, !dbg !16328
  %i164 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16329
  %101 = load i32, i32* %i164, align 4, !dbg !16329
  %idxprom165 = sext i32 %101 to i64, !dbg !16327
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %100, i64 %idxprom165, !dbg !16327
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx166, i64 0, i64 0, !dbg !16327
  call void @add_v3_v3(float* %arraydecay162, float* %arraydecay167), !dbg !16330
  %102 = load i32, i32* %private_count, align 4, !dbg !16331
  %inc = add nsw i32 %102, 1, !dbg !16331
  store i32 %inc, i32* %private_count, align 4, !dbg !16331
  br label %if.end178, !dbg !16332

if.else168:                                       ; preds = %if.then145
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !16333
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16335
  call void @add_v3_v3(float* %arraydecay169, float* %arraydecay170), !dbg !16336
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16337
  %103 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16338
  %co172 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %103, i32 0, i32 5, !dbg !16339
  %104 = load [3 x float]*, [3 x float]** %co172, align 8, !dbg !16339
  %i173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16340
  %105 = load i32, i32* %i173, align 4, !dbg !16340
  %idxprom174 = sext i32 %105 to i64, !dbg !16338
  %arrayidx175 = getelementptr inbounds [3 x float], [3 x float]* %104, i64 %idxprom174, !dbg !16338
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx175, i64 0, i64 0, !dbg !16338
  call void @add_v3_v3(float* %arraydecay171, float* %arraydecay176), !dbg !16341
  %106 = load i32, i32* %private_count_flip, align 4, !dbg !16342
  %inc177 = add nsw i32 %106, 1, !dbg !16342
  store i32 %inc177, i32* %private_count_flip, align 4, !dbg !16342
  br label %if.end178

if.end178:                                        ; preds = %if.else168, %if.then159
  br label %if.end179, !dbg !16343

if.end179:                                        ; preds = %if.end178, %if.end137
  br label %for.inc, !dbg !16344

for.inc:                                          ; preds = %if.end179, %if.then123, %if.then88, %if.then72
  %gx180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16267
  %107 = load i32, i32* %gx180, align 4, !dbg !16267
  %inc181 = add nsw i32 %107, 1, !dbg !16267
  store i32 %inc181, i32* %gx180, align 4, !dbg !16267
  %i182 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16267
  %108 = load i32, i32* %i182, align 4, !dbg !16267
  %inc183 = add nsw i32 %108, 1, !dbg !16267
  store i32 %inc183, i32* %i182, align 4, !dbg !16267
  br label %for.cond32, !dbg !16267, !llvm.loop !16345

for.end:                                          ; preds = %for.cond32
  br label %for.inc184, !dbg !16347

for.inc184:                                       ; preds = %for.end
  %gy185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16262
  %109 = load i32, i32* %gy185, align 8, !dbg !16262
  %inc186 = add nsw i32 %109, 1, !dbg !16262
  store i32 %inc186, i32* %gy185, align 8, !dbg !16262
  br label %for.cond26, !dbg !16262, !llvm.loop !16348

for.end187:                                       ; preds = %for.cond26
  br label %for.inc188, !dbg !16350

for.inc188:                                       ; preds = %for.end187
  %g189 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16248
  %110 = load i32, i32* %g189, align 8, !dbg !16248
  %inc190 = add nsw i32 %110, 1, !dbg !16248
  store i32 %inc190, i32* %g189, align 8, !dbg !16248
  br label %for.cond4, !dbg !16248, !llvm.loop !16351

for.end191:                                       ; preds = %for.cond4
  br label %if.end441, !dbg !16353

if.else192:                                       ; preds = %land.lhs.true, %for.body
  %111 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16354
  %pbvh193 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %111, i32 0, i32 15, !dbg !16354
  %112 = load %struct.PBVH*, %struct.PBVH** %pbvh193, align 8, !dbg !16354
  %113 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16354
  %114 = load i32, i32* %n, align 4, !dbg !16354
  %idxprom194 = sext i32 %114 to i64, !dbg !16354
  %arrayidx195 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %113, i64 %idxprom194, !dbg !16354
  %115 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx195, align 8, !dbg !16354
  call void @pbvh_vertex_iter_init(%struct.PBVH* %112, %struct.PBVHNode* %115, %struct.PBVHVertexIter* %vd, i32 1), !dbg !16354
  %i196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16356
  store i32 0, i32* %i196, align 4, !dbg !16356
  %g197 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16356
  store i32 0, i32* %g197, align 8, !dbg !16356
  br label %for.cond198, !dbg !16356

for.cond198:                                      ; preds = %for.inc437, %if.else192
  %g199 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16358
  %116 = load i32, i32* %g199, align 8, !dbg !16358
  %totgrid200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !16358
  %117 = load i32, i32* %totgrid200, align 8, !dbg !16358
  %cmp201 = icmp slt i32 %116, %117, !dbg !16358
  br i1 %cmp201, label %for.body203, label %for.end440, !dbg !16356

for.body203:                                      ; preds = %for.cond198
  %grids204 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16360
  %118 = load %struct.CCGElem**, %struct.CCGElem*** %grids204, align 8, !dbg !16360
  %tobool205 = icmp ne %struct.CCGElem** %118, null, !dbg !16360
  br i1 %tobool205, label %if.then206, label %if.else227, !dbg !16363

if.then206:                                       ; preds = %for.body203
  %gridsize207 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16364
  %119 = load i32, i32* %gridsize207, align 4, !dbg !16364
  %width208 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16364
  store i32 %119, i32* %width208, align 4, !dbg !16364
  %gridsize209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16364
  %120 = load i32, i32* %gridsize209, align 4, !dbg !16364
  %height210 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16364
  store i32 %120, i32* %height210, align 8, !dbg !16364
  %grids211 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16364
  %121 = load %struct.CCGElem**, %struct.CCGElem*** %grids211, align 8, !dbg !16364
  %grid_indices212 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16364
  %122 = load i32*, i32** %grid_indices212, align 8, !dbg !16364
  %g213 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16364
  %123 = load i32, i32* %g213, align 8, !dbg !16364
  %idxprom214 = sext i32 %123 to i64, !dbg !16364
  %arrayidx215 = getelementptr inbounds i32, i32* %122, i64 %idxprom214, !dbg !16364
  %124 = load i32, i32* %arrayidx215, align 4, !dbg !16364
  %idxprom216 = sext i32 %124 to i64, !dbg !16364
  %arrayidx217 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %121, i64 %idxprom216, !dbg !16364
  %125 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx217, align 8, !dbg !16364
  %grid218 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16364
  store %struct.CCGElem* %125, %struct.CCGElem** %grid218, align 8, !dbg !16364
  %grid_hidden219 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !16366
  %126 = load i32**, i32*** %grid_hidden219, align 8, !dbg !16366
  %grid_indices220 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16366
  %127 = load i32*, i32** %grid_indices220, align 8, !dbg !16366
  %g221 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16366
  %128 = load i32, i32* %g221, align 8, !dbg !16366
  %idxprom222 = sext i32 %128 to i64, !dbg !16366
  %arrayidx223 = getelementptr inbounds i32, i32* %127, i64 %idxprom222, !dbg !16366
  %129 = load i32, i32* %arrayidx223, align 4, !dbg !16366
  %idxprom224 = sext i32 %129 to i64, !dbg !16366
  %arrayidx225 = getelementptr inbounds i32*, i32** %126, i64 %idxprom224, !dbg !16366
  %130 = load i32*, i32** %arrayidx225, align 8, !dbg !16366
  %gh226 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16366
  store i32* %130, i32** %gh226, align 8, !dbg !16366
  br label %if.end231, !dbg !16364

if.else227:                                       ; preds = %for.body203
  %totvert228 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !16368
  %131 = load i32, i32* %totvert228, align 8, !dbg !16368
  %width229 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16368
  store i32 %131, i32* %width229, align 4, !dbg !16368
  %height230 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16368
  store i32 1, i32* %height230, align 8, !dbg !16368
  br label %if.end231

if.end231:                                        ; preds = %if.else227, %if.then206
  %gy232 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16370
  store i32 0, i32* %gy232, align 8, !dbg !16370
  br label %for.cond233, !dbg !16370

for.cond233:                                      ; preds = %for.inc433, %if.end231
  %gy234 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16372
  %132 = load i32, i32* %gy234, align 8, !dbg !16372
  %height235 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16372
  %133 = load i32, i32* %height235, align 8, !dbg !16372
  %cmp236 = icmp slt i32 %132, %133, !dbg !16372
  br i1 %cmp236, label %for.body238, label %for.end436, !dbg !16370

for.body238:                                      ; preds = %for.cond233
  %gx239 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16374
  store i32 0, i32* %gx239, align 4, !dbg !16374
  br label %for.cond240, !dbg !16374

for.cond240:                                      ; preds = %for.inc427, %for.body238
  %gx241 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16377
  %134 = load i32, i32* %gx241, align 4, !dbg !16377
  %width242 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16377
  %135 = load i32, i32* %width242, align 4, !dbg !16377
  %cmp243 = icmp slt i32 %134, %135, !dbg !16377
  br i1 %cmp243, label %for.body245, label %for.end432, !dbg !16374

for.body245:                                      ; preds = %for.cond240
  %grid246 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16379
  %136 = load %struct.CCGElem*, %struct.CCGElem** %grid246, align 8, !dbg !16379
  %tobool247 = icmp ne %struct.CCGElem* %136, null, !dbg !16379
  br i1 %tobool247, label %if.then248, label %if.else296, !dbg !16382

if.then248:                                       ; preds = %for.body245
  %key249 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16383
  %137 = load %struct.CCGKey*, %struct.CCGKey** %key249, align 8, !dbg !16383
  %grid250 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16383
  %138 = load %struct.CCGElem*, %struct.CCGElem** %grid250, align 8, !dbg !16383
  %call251 = call float* @CCG_elem_co(%struct.CCGKey* %137, %struct.CCGElem* %138), !dbg !16383
  %co252 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16383
  store float* %call251, float** %co252, align 8, !dbg !16383
  %key253 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16383
  %139 = load %struct.CCGKey*, %struct.CCGKey** %key253, align 8, !dbg !16383
  %grid254 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16383
  %140 = load %struct.CCGElem*, %struct.CCGElem** %grid254, align 8, !dbg !16383
  %call255 = call float* @CCG_elem_no(%struct.CCGKey* %139, %struct.CCGElem* %140), !dbg !16383
  %fno256 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16383
  store float* %call255, float** %fno256, align 8, !dbg !16383
  %key257 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16383
  %141 = load %struct.CCGKey*, %struct.CCGKey** %key257, align 8, !dbg !16383
  %has_mask258 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %141, i32 0, i32 9, !dbg !16383
  %142 = load i32, i32* %has_mask258, align 4, !dbg !16383
  %tobool259 = icmp ne i32 %142, 0, !dbg !16383
  br i1 %tobool259, label %cond.true260, label %cond.false264, !dbg !16383

cond.true260:                                     ; preds = %if.then248
  %key261 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16383
  %143 = load %struct.CCGKey*, %struct.CCGKey** %key261, align 8, !dbg !16383
  %grid262 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16383
  %144 = load %struct.CCGElem*, %struct.CCGElem** %grid262, align 8, !dbg !16383
  %call263 = call float* @CCG_elem_mask(%struct.CCGKey* %143, %struct.CCGElem* %144), !dbg !16383
  br label %cond.end265, !dbg !16383

cond.false264:                                    ; preds = %if.then248
  br label %cond.end265, !dbg !16383

cond.end265:                                      ; preds = %cond.false264, %cond.true260
  %cond266 = phi float* [ %call263, %cond.true260 ], [ null, %cond.false264 ], !dbg !16383
  %mask267 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16383
  store float* %cond266, float** %mask267, align 8, !dbg !16383
  %key268 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16383
  %145 = load %struct.CCGKey*, %struct.CCGKey** %key268, align 8, !dbg !16383
  %grid269 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16383
  %146 = load %struct.CCGElem*, %struct.CCGElem** %grid269, align 8, !dbg !16383
  %call270 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %145, %struct.CCGElem* %146), !dbg !16383
  %grid271 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16383
  store %struct.CCGElem* %call270, %struct.CCGElem** %grid271, align 8, !dbg !16383
  %gh272 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16385
  %147 = load i32*, i32** %gh272, align 8, !dbg !16385
  %tobool273 = icmp ne i32* %147, null, !dbg !16385
  br i1 %tobool273, label %if.then274, label %if.end295, !dbg !16383

if.then274:                                       ; preds = %cond.end265
  %gh275 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16387
  %148 = load i32*, i32** %gh275, align 8, !dbg !16387
  %gy276 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16387
  %149 = load i32, i32* %gy276, align 8, !dbg !16387
  %gridsize277 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16387
  %150 = load i32, i32* %gridsize277, align 4, !dbg !16387
  %mul278 = mul nsw i32 %149, %150, !dbg !16387
  %gx279 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16387
  %151 = load i32, i32* %gx279, align 4, !dbg !16387
  %add280 = add nsw i32 %mul278, %151, !dbg !16387
  %shr281 = ashr i32 %add280, 5, !dbg !16387
  %idxprom282 = sext i32 %shr281 to i64, !dbg !16387
  %arrayidx283 = getelementptr inbounds i32, i32* %148, i64 %idxprom282, !dbg !16387
  %152 = load i32, i32* %arrayidx283, align 4, !dbg !16387
  %gy284 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16387
  %153 = load i32, i32* %gy284, align 8, !dbg !16387
  %gridsize285 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16387
  %154 = load i32, i32* %gridsize285, align 4, !dbg !16387
  %mul286 = mul nsw i32 %153, %154, !dbg !16387
  %gx287 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16387
  %155 = load i32, i32* %gx287, align 4, !dbg !16387
  %add288 = add nsw i32 %mul286, %155, !dbg !16387
  %and289 = and i32 %add288, 31, !dbg !16387
  %shl290 = shl i32 1, %and289, !dbg !16387
  %and291 = and i32 %152, %shl290, !dbg !16387
  %tobool292 = icmp ne i32 %and291, 0, !dbg !16387
  br i1 %tobool292, label %if.then293, label %if.end294, !dbg !16390

if.then293:                                       ; preds = %if.then274
  br label %for.inc427, !dbg !16387

if.end294:                                        ; preds = %if.then274
  br label %if.end295, !dbg !16390

if.end295:                                        ; preds = %if.end294, %cond.end265
  br label %if.end373, !dbg !16383

if.else296:                                       ; preds = %for.body245
  %mverts297 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16391
  %156 = load %struct.MVert*, %struct.MVert** %mverts297, align 8, !dbg !16391
  %tobool298 = icmp ne %struct.MVert* %156, null, !dbg !16391
  br i1 %tobool298, label %if.then299, label %if.else335, !dbg !16379

if.then299:                                       ; preds = %if.else296
  %mverts300 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16393
  %157 = load %struct.MVert*, %struct.MVert** %mverts300, align 8, !dbg !16393
  %vert_indices301 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16393
  %158 = load i32*, i32** %vert_indices301, align 8, !dbg !16393
  %gx302 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16393
  %159 = load i32, i32* %gx302, align 4, !dbg !16393
  %idxprom303 = sext i32 %159 to i64, !dbg !16393
  %arrayidx304 = getelementptr inbounds i32, i32* %158, i64 %idxprom303, !dbg !16393
  %160 = load i32, i32* %arrayidx304, align 4, !dbg !16393
  %idxprom305 = sext i32 %160 to i64, !dbg !16393
  %arrayidx306 = getelementptr inbounds %struct.MVert, %struct.MVert* %157, i64 %idxprom305, !dbg !16393
  %mvert307 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16393
  store %struct.MVert* %arrayidx306, %struct.MVert** %mvert307, align 8, !dbg !16393
  %mvert308 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16395
  %161 = load %struct.MVert*, %struct.MVert** %mvert308, align 8, !dbg !16395
  %flag309 = getelementptr inbounds %struct.MVert, %struct.MVert* %161, i32 0, i32 2, !dbg !16395
  %162 = load i8, i8* %flag309, align 2, !dbg !16395
  %conv310 = zext i8 %162 to i32, !dbg !16395
  %and311 = and i32 %conv310, 16, !dbg !16395
  %tobool312 = icmp ne i32 %and311, 0, !dbg !16395
  br i1 %tobool312, label %if.then313, label %if.end314, !dbg !16393

if.then313:                                       ; preds = %if.then299
  br label %for.inc427, !dbg !16395

if.end314:                                        ; preds = %if.then299
  %mvert315 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16393
  %163 = load %struct.MVert*, %struct.MVert** %mvert315, align 8, !dbg !16393
  %co316 = getelementptr inbounds %struct.MVert, %struct.MVert* %163, i32 0, i32 0, !dbg !16393
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %co316, i64 0, i64 0, !dbg !16393
  %co318 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16393
  store float* %arraydecay317, float** %co318, align 8, !dbg !16393
  %mvert319 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16393
  %164 = load %struct.MVert*, %struct.MVert** %mvert319, align 8, !dbg !16393
  %no320 = getelementptr inbounds %struct.MVert, %struct.MVert* %164, i32 0, i32 1, !dbg !16393
  %arraydecay321 = getelementptr inbounds [3 x i16], [3 x i16]* %no320, i64 0, i64 0, !dbg !16393
  %no322 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16393
  store i16* %arraydecay321, i16** %no322, align 8, !dbg !16393
  %vmask323 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16397
  %165 = load float*, float** %vmask323, align 8, !dbg !16397
  %tobool324 = icmp ne float* %165, null, !dbg !16397
  br i1 %tobool324, label %if.then325, label %if.end334, !dbg !16393

if.then325:                                       ; preds = %if.end314
  %vmask326 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16397
  %166 = load float*, float** %vmask326, align 8, !dbg !16397
  %vert_indices327 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16397
  %167 = load i32*, i32** %vert_indices327, align 8, !dbg !16397
  %gx328 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16397
  %168 = load i32, i32* %gx328, align 4, !dbg !16397
  %idxprom329 = sext i32 %168 to i64, !dbg !16397
  %arrayidx330 = getelementptr inbounds i32, i32* %167, i64 %idxprom329, !dbg !16397
  %169 = load i32, i32* %arrayidx330, align 4, !dbg !16397
  %idxprom331 = sext i32 %169 to i64, !dbg !16397
  %arrayidx332 = getelementptr inbounds float, float* %166, i64 %idxprom331, !dbg !16397
  %mask333 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16397
  store float* %arrayidx332, float** %mask333, align 8, !dbg !16397
  br label %if.end334, !dbg !16397

if.end334:                                        ; preds = %if.then325, %if.end314
  br label %if.end372, !dbg !16393

if.else335:                                       ; preds = %if.else296
  %bm_unique_verts336 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16399
  %call337 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts336), !dbg !16399
  %tobool338 = icmp ne i8 %call337, 0, !dbg !16399
  br i1 %tobool338, label %if.else344, label %if.then339, !dbg !16402

if.then339:                                       ; preds = %if.else335
  %bm_unique_verts340 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16403
  %call341 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts340), !dbg !16403
  %170 = bitcast i8* %call341 to %struct.BMVert*, !dbg !16403
  %bm_vert342 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16403
  store %struct.BMVert* %170, %struct.BMVert** %bm_vert342, align 8, !dbg !16403
  %bm_unique_verts343 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16403
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts343), !dbg !16403
  br label %if.end349, !dbg !16403

if.else344:                                       ; preds = %if.else335
  %bm_other_verts345 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16405
  %call346 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts345), !dbg !16405
  %171 = bitcast i8* %call346 to %struct.BMVert*, !dbg !16405
  %bm_vert347 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16405
  store %struct.BMVert* %171, %struct.BMVert** %bm_vert347, align 8, !dbg !16405
  %bm_other_verts348 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16405
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts348), !dbg !16405
  br label %if.end349

if.end349:                                        ; preds = %if.else344, %if.then339
  %bm_vert350 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16407
  %172 = load %struct.BMVert*, %struct.BMVert** %bm_vert350, align 8, !dbg !16407
  %head351 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %172, i32 0, i32 0, !dbg !16407
  %call352 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head351, i8 zeroext 2), !dbg !16407
  %conv353 = zext i8 %call352 to i32, !dbg !16407
  %tobool354 = icmp ne i32 %conv353, 0, !dbg !16407
  br i1 %tobool354, label %if.then355, label %if.end356, !dbg !16402

if.then355:                                       ; preds = %if.end349
  br label %for.inc427, !dbg !16407

if.end356:                                        ; preds = %if.end349
  %bm_vert357 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16402
  %173 = load %struct.BMVert*, %struct.BMVert** %bm_vert357, align 8, !dbg !16402
  %co358 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %173, i32 0, i32 2, !dbg !16402
  %arraydecay359 = getelementptr inbounds [3 x float], [3 x float]* %co358, i64 0, i64 0, !dbg !16402
  %co360 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16402
  store float* %arraydecay359, float** %co360, align 8, !dbg !16402
  %bm_vert361 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16402
  %174 = load %struct.BMVert*, %struct.BMVert** %bm_vert361, align 8, !dbg !16402
  %no362 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %174, i32 0, i32 3, !dbg !16402
  %arraydecay363 = getelementptr inbounds [3 x float], [3 x float]* %no362, i64 0, i64 0, !dbg !16402
  %fno364 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16402
  store float* %arraydecay363, float** %fno364, align 8, !dbg !16402
  %bm_vert365 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16402
  %175 = load %struct.BMVert*, %struct.BMVert** %bm_vert365, align 8, !dbg !16402
  %head366 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %175, i32 0, i32 0, !dbg !16402
  %data367 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head366, i32 0, i32 0, !dbg !16402
  %176 = load i8*, i8** %data367, align 8, !dbg !16402
  %cd_vert_mask_offset368 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !16402
  %177 = load i32, i32* %cd_vert_mask_offset368, align 8, !dbg !16402
  %idx.ext369 = sext i32 %177 to i64, !dbg !16402
  %add.ptr370 = getelementptr inbounds i8, i8* %176, i64 %idx.ext369, !dbg !16402
  %178 = bitcast i8* %add.ptr370 to float*, !dbg !16402
  %mask371 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16402
  store float* %178, float** %mask371, align 8, !dbg !16402
  br label %if.end372

if.end372:                                        ; preds = %if.end356, %if.end334
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.end295
  %co374 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16409
  %179 = load float*, float** %co374, align 8, !dbg !16409
  %call375 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %179), !dbg !16412
  %tobool376 = icmp ne i8 %call375, 0, !dbg !16412
  br i1 %tobool376, label %if.then377, label %if.end426, !dbg !16413

if.then377:                                       ; preds = %if.end373
  %no378 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16414
  %180 = load i16*, i16** %no378, align 8, !dbg !16414
  %tobool379 = icmp ne i16* %180, null, !dbg !16417
  br i1 %tobool379, label %if.then380, label %if.else404, !dbg !16418

if.then380:                                       ; preds = %if.then377
  call void @llvm.dbg.declare(metadata [3 x float]* %fno381, metadata !16419, metadata !DIExpression()), !dbg !16421
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %fno381, i64 0, i64 0, !dbg !16422
  %no383 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16423
  %181 = load i16*, i16** %no383, align 8, !dbg !16423
  call void @normal_short_to_float_v3(float* %arraydecay382, i16* %181), !dbg !16424
  %182 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16425
  %cache384 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %182, i32 0, i32 28, !dbg !16427
  %183 = load %struct.StrokeCache*, %struct.StrokeCache** %cache384, align 8, !dbg !16427
  %view_normal385 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %183, i32 0, i32 33, !dbg !16428
  %arraydecay386 = getelementptr inbounds [3 x float], [3 x float]* %view_normal385, i64 0, i64 0, !dbg !16425
  %arraydecay387 = getelementptr inbounds [3 x float], [3 x float]* %fno381, i64 0, i64 0, !dbg !16429
  %call388 = call float @dot_v3v3(float* %arraydecay386, float* %arraydecay387), !dbg !16430
  %cmp389 = fcmp ogt float %call388, 0.000000e+00, !dbg !16431
  br i1 %cmp389, label %if.then391, label %if.else397, !dbg !16432

if.then391:                                       ; preds = %if.then380
  %arraydecay392 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !16433
  %arraydecay393 = getelementptr inbounds [3 x float], [3 x float]* %fno381, i64 0, i64 0, !dbg !16435
  call void @add_v3_v3(float* %arraydecay392, float* %arraydecay393), !dbg !16436
  %arraydecay394 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16437
  %co395 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16438
  %184 = load float*, float** %co395, align 8, !dbg !16438
  call void @add_v3_v3(float* %arraydecay394, float* %184), !dbg !16439
  %185 = load i32, i32* %private_count, align 4, !dbg !16440
  %inc396 = add nsw i32 %185, 1, !dbg !16440
  store i32 %inc396, i32* %private_count, align 4, !dbg !16440
  br label %if.end403, !dbg !16441

if.else397:                                       ; preds = %if.then380
  %arraydecay398 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !16442
  %arraydecay399 = getelementptr inbounds [3 x float], [3 x float]* %fno381, i64 0, i64 0, !dbg !16444
  call void @add_v3_v3(float* %arraydecay398, float* %arraydecay399), !dbg !16445
  %arraydecay400 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16446
  %co401 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16447
  %186 = load float*, float** %co401, align 8, !dbg !16447
  call void @add_v3_v3(float* %arraydecay400, float* %186), !dbg !16448
  %187 = load i32, i32* %private_count_flip, align 4, !dbg !16449
  %inc402 = add nsw i32 %187, 1, !dbg !16449
  store i32 %inc402, i32* %private_count_flip, align 4, !dbg !16449
  br label %if.end403

if.end403:                                        ; preds = %if.else397, %if.then391
  br label %if.end425, !dbg !16450

if.else404:                                       ; preds = %if.then377
  %188 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16451
  %cache405 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %188, i32 0, i32 28, !dbg !16454
  %189 = load %struct.StrokeCache*, %struct.StrokeCache** %cache405, align 8, !dbg !16454
  %view_normal406 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %189, i32 0, i32 33, !dbg !16455
  %arraydecay407 = getelementptr inbounds [3 x float], [3 x float]* %view_normal406, i64 0, i64 0, !dbg !16451
  %fno408 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16456
  %190 = load float*, float** %fno408, align 8, !dbg !16456
  %call409 = call float @dot_v3v3(float* %arraydecay407, float* %190), !dbg !16457
  %cmp410 = fcmp ogt float %call409, 0.000000e+00, !dbg !16458
  br i1 %cmp410, label %if.then412, label %if.else418, !dbg !16459

if.then412:                                       ; preds = %if.else404
  %arraydecay413 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !16460
  %fno414 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16462
  %191 = load float*, float** %fno414, align 8, !dbg !16462
  call void @add_v3_v3(float* %arraydecay413, float* %191), !dbg !16463
  %arraydecay415 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16464
  %co416 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16465
  %192 = load float*, float** %co416, align 8, !dbg !16465
  call void @add_v3_v3(float* %arraydecay415, float* %192), !dbg !16466
  %193 = load i32, i32* %private_count, align 4, !dbg !16467
  %inc417 = add nsw i32 %193, 1, !dbg !16467
  store i32 %inc417, i32* %private_count, align 4, !dbg !16467
  br label %if.end424, !dbg !16468

if.else418:                                       ; preds = %if.else404
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !16469
  %fno420 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16471
  %194 = load float*, float** %fno420, align 8, !dbg !16471
  call void @add_v3_v3(float* %arraydecay419, float* %194), !dbg !16472
  %arraydecay421 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16473
  %co422 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16474
  %195 = load float*, float** %co422, align 8, !dbg !16474
  call void @add_v3_v3(float* %arraydecay421, float* %195), !dbg !16475
  %196 = load i32, i32* %private_count_flip, align 4, !dbg !16476
  %inc423 = add nsw i32 %196, 1, !dbg !16476
  store i32 %inc423, i32* %private_count_flip, align 4, !dbg !16476
  br label %if.end424

if.end424:                                        ; preds = %if.else418, %if.then412
  br label %if.end425

if.end425:                                        ; preds = %if.end424, %if.end403
  br label %if.end426, !dbg !16477

if.end426:                                        ; preds = %if.end425, %if.end373
  br label %for.inc427, !dbg !16478

for.inc427:                                       ; preds = %if.end426, %if.then355, %if.then313, %if.then293
  %gx428 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16377
  %197 = load i32, i32* %gx428, align 4, !dbg !16377
  %inc429 = add nsw i32 %197, 1, !dbg !16377
  store i32 %inc429, i32* %gx428, align 4, !dbg !16377
  %i430 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16377
  %198 = load i32, i32* %i430, align 4, !dbg !16377
  %inc431 = add nsw i32 %198, 1, !dbg !16377
  store i32 %inc431, i32* %i430, align 4, !dbg !16377
  br label %for.cond240, !dbg !16377, !llvm.loop !16479

for.end432:                                       ; preds = %for.cond240
  br label %for.inc433, !dbg !16481

for.inc433:                                       ; preds = %for.end432
  %gy434 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16372
  %199 = load i32, i32* %gy434, align 8, !dbg !16372
  %inc435 = add nsw i32 %199, 1, !dbg !16372
  store i32 %inc435, i32* %gy434, align 8, !dbg !16372
  br label %for.cond233, !dbg !16372, !llvm.loop !16482

for.end436:                                       ; preds = %for.cond233
  br label %for.inc437, !dbg !16484

for.inc437:                                       ; preds = %for.end436
  %g438 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16358
  %200 = load i32, i32* %g438, align 8, !dbg !16358
  %inc439 = add nsw i32 %200, 1, !dbg !16358
  store i32 %inc439, i32* %g438, align 8, !dbg !16358
  br label %for.cond198, !dbg !16358, !llvm.loop !16485

for.end440:                                       ; preds = %for.cond198
  br label %if.end441

if.end441:                                        ; preds = %for.end440, %for.end191
  %201 = load float*, float** %an.addr, align 8, !dbg !16487
  %arraydecay442 = getelementptr inbounds [3 x float], [3 x float]* %private_an, i64 0, i64 0, !dbg !16489
  call void @add_v3_v3(float* %201, float* %arraydecay442), !dbg !16490
  %arraydecay443 = getelementptr inbounds [3 x float], [3 x float]* %out_flip, i64 0, i64 0, !dbg !16491
  %arraydecay444 = getelementptr inbounds [3 x float], [3 x float]* %private_out_flip, i64 0, i64 0, !dbg !16492
  call void @add_v3_v3(float* %arraydecay443, float* %arraydecay444), !dbg !16493
  %202 = load float*, float** %fc.addr, align 8, !dbg !16494
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16495
  call void @add_v3_v3(float* %202, float* %arraydecay445), !dbg !16496
  %arraydecay446 = getelementptr inbounds [3 x float], [3 x float]* %fc_flip, i64 0, i64 0, !dbg !16497
  %arraydecay447 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16498
  call void @add_v3_v3(float* %arraydecay446, float* %arraydecay447), !dbg !16499
  %203 = load i32, i32* %private_count, align 4, !dbg !16500
  %204 = load i32, i32* %count, align 4, !dbg !16501
  %add448 = add nsw i32 %204, %203, !dbg !16501
  store i32 %add448, i32* %count, align 4, !dbg !16501
  %205 = load i32, i32* %private_count_flip, align 4, !dbg !16502
  %206 = load i32, i32* %count_flipped, align 4, !dbg !16503
  %add449 = add nsw i32 %206, %205, !dbg !16503
  store i32 %add449, i32* %count_flipped, align 4, !dbg !16503
  br label %for.inc450, !dbg !16504

for.inc450:                                       ; preds = %if.end441
  %207 = load i32, i32* %n, align 4, !dbg !16505
  %inc451 = add nsw i32 %207, 1, !dbg !16505
  store i32 %inc451, i32* %n, align 4, !dbg !16505
  br label %for.cond, !dbg !16506, !llvm.loop !16507

for.end452:                                       ; preds = %for.cond
  %208 = load float*, float** %an.addr, align 8, !dbg !16509
  %call453 = call zeroext i8 @is_zero_v3(float* %208), !dbg !16511
  %tobool454 = icmp ne i8 %call453, 0, !dbg !16511
  br i1 %tobool454, label %if.then455, label %if.end457, !dbg !16512

if.then455:                                       ; preds = %for.end452
  %209 = load float*, float** %an.addr, align 8, !dbg !16513
  %arraydecay456 = getelementptr inbounds [3 x float], [3 x float]* %out_flip, i64 0, i64 0, !dbg !16514
  call void @copy_v3_v3(float* %209, float* %arraydecay456), !dbg !16515
  br label %if.end457, !dbg !16515

if.end457:                                        ; preds = %if.then455, %for.end452
  %210 = load float*, float** %an.addr, align 8, !dbg !16516
  %call458 = call float @normalize_v3(float* %210), !dbg !16517
  %211 = load i32, i32* %count, align 4, !dbg !16518
  %cmp459 = icmp ne i32 %211, 0, !dbg !16520
  br i1 %cmp459, label %if.then461, label %if.else463, !dbg !16521

if.then461:                                       ; preds = %if.end457
  %212 = load float*, float** %fc.addr, align 8, !dbg !16522
  %213 = load i32, i32* %count, align 4, !dbg !16523
  %conv462 = sitofp i32 %213 to float, !dbg !16523
  %div = fdiv float 1.000000e+00, %conv462, !dbg !16524
  call void @mul_v3_fl(float* %212, float %div), !dbg !16525
  br label %if.end472, !dbg !16525

if.else463:                                       ; preds = %if.end457
  %214 = load i32, i32* %count_flipped, align 4, !dbg !16526
  %cmp464 = icmp ne i32 %214, 0, !dbg !16528
  br i1 %cmp464, label %if.then466, label %if.else470, !dbg !16529

if.then466:                                       ; preds = %if.else463
  %215 = load float*, float** %fc.addr, align 8, !dbg !16530
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %fc_flip, i64 0, i64 0, !dbg !16531
  %216 = load i32, i32* %count_flipped, align 4, !dbg !16532
  %conv468 = sitofp i32 %216 to float, !dbg !16532
  %div469 = fdiv float 1.000000e+00, %conv468, !dbg !16533
  call void @mul_v3_v3fl(float* %215, float* %arraydecay467, float %div469), !dbg !16534
  br label %if.end471, !dbg !16534

if.else470:                                       ; preds = %if.else463
  %217 = load float*, float** %fc.addr, align 8, !dbg !16535
  call void @zero_v3(float* %217), !dbg !16536
  br label %if.end471

if.end471:                                        ; preds = %if.else470, %if.then466
  br label %if.end472

if.end472:                                        ; preds = %if.end471, %if.then461
  ret void, !dbg !16537
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_flatten_center(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode, float* %fc) #0 !dbg !16538 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %fc.addr = alloca float*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %n = alloca i32, align 4
  %count = alloca i32, align 4
  %count_flip = alloca i32, align 4
  %fc_flip = alloca [3 x float], align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %unode = alloca %struct.SculptUndoNode*, align 8
  %private_fc = alloca [3 x float], align 4
  %private_fc_flip = alloca [3 x float], align 4
  %private_count = alloca i32, align 4
  %private_count_flip = alloca i32, align 4
  %fno146 = alloca [3 x float], align 4
  %fno377 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !16539, metadata !DIExpression()), !dbg !16540
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16541, metadata !DIExpression()), !dbg !16542
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !16543, metadata !DIExpression()), !dbg !16544
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !16545, metadata !DIExpression()), !dbg !16546
  store float* %fc, float** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fc.addr, metadata !16547, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !16549, metadata !DIExpression()), !dbg !16550
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16551
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !16552
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !16552
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !16550
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16555, metadata !DIExpression()), !dbg !16556
  store i32 0, i32* %count, align 4, !dbg !16556
  call void @llvm.dbg.declare(metadata i32* %count_flip, metadata !16557, metadata !DIExpression()), !dbg !16558
  store i32 0, i32* %count_flip, align 4, !dbg !16558
  call void @llvm.dbg.declare(metadata [3 x float]* %fc_flip, metadata !16559, metadata !DIExpression()), !dbg !16560
  %2 = bitcast [3 x float]* %fc_flip to i8*, !dbg !16560
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !16560
  %3 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !16561
  %4 = load float*, float** %fc.addr, align 8, !dbg !16562
  call void @zero_v3(float* %4), !dbg !16563
  store i32 0, i32* %n, align 4, !dbg !16564
  br label %for.cond, !dbg !16566

for.cond:                                         ; preds = %for.inc435, %entry
  %5 = load i32, i32* %n, align 4, !dbg !16567
  %6 = load i32, i32* %totnode.addr, align 4, !dbg !16569
  %cmp = icmp slt i32 %5, %6, !dbg !16570
  br i1 %cmp, label %for.body, label %for.end437, !dbg !16571

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !16572, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.declare(metadata %struct.SculptUndoNode** %unode, metadata !16577, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.declare(metadata [3 x float]* %private_fc, metadata !16579, metadata !DIExpression()), !dbg !16580
  %7 = bitcast [3 x float]* %private_fc to i8*, !dbg !16580
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 12, i1 false), !dbg !16580
  call void @llvm.dbg.declare(metadata [3 x float]* %private_fc_flip, metadata !16581, metadata !DIExpression()), !dbg !16582
  %8 = bitcast [3 x float]* %private_fc_flip to i8*, !dbg !16582
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 12, i1 false), !dbg !16582
  call void @llvm.dbg.declare(metadata i32* %private_count, metadata !16583, metadata !DIExpression()), !dbg !16584
  store i32 0, i32* %private_count, align 4, !dbg !16584
  call void @llvm.dbg.declare(metadata i32* %private_count_flip, metadata !16585, metadata !DIExpression()), !dbg !16586
  store i32 0, i32* %private_count_flip, align 4, !dbg !16586
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16587
  %10 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16588
  %11 = load i32, i32* %n, align 4, !dbg !16589
  %idxprom = sext i32 %11 to i64, !dbg !16588
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %10, i64 %idxprom, !dbg !16588
  %12 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !16588
  %call = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %9, %struct.PBVHNode* %12, i32 0), !dbg !16590
  store %struct.SculptUndoNode* %call, %struct.SculptUndoNode** %unode, align 8, !dbg !16591
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16592
  call void @sculpt_brush_test_init(%struct.SculptSession* %13, %struct.SculptBrushTest* %test), !dbg !16593
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16594
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 28, !dbg !16596
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !16596
  %original = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 41, !dbg !16597
  %16 = load i8, i8* %original, align 4, !dbg !16597
  %conv = zext i8 %16 to i32, !dbg !16594
  %tobool = icmp ne i32 %conv, 0, !dbg !16594
  br i1 %tobool, label %land.lhs.true, label %if.else188, !dbg !16598

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16599
  %co = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %17, i32 0, i32 5, !dbg !16600
  %18 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !16600
  %tobool1 = icmp ne [3 x float]* %18, null, !dbg !16599
  br i1 %tobool1, label %if.then, label %if.else188, !dbg !16601

if.then:                                          ; preds = %land.lhs.true
  %19 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16602
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %19, i32 0, i32 15, !dbg !16602
  %20 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !16602
  %21 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16602
  %22 = load i32, i32* %n, align 4, !dbg !16602
  %idxprom2 = sext i32 %22 to i64, !dbg !16602
  %arrayidx3 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %21, i64 %idxprom2, !dbg !16602
  %23 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx3, align 8, !dbg !16602
  call void @pbvh_vertex_iter_init(%struct.PBVH* %20, %struct.PBVHNode* %23, %struct.PBVHVertexIter* %vd, i32 1), !dbg !16602
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16604
  store i32 0, i32* %i, align 4, !dbg !16604
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16604
  store i32 0, i32* %g, align 8, !dbg !16604
  br label %for.cond4, !dbg !16604

for.cond4:                                        ; preds = %for.inc184, %if.then
  %g5 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16606
  %24 = load i32, i32* %g5, align 8, !dbg !16606
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !16606
  %25 = load i32, i32* %totgrid, align 8, !dbg !16606
  %cmp6 = icmp slt i32 %24, %25, !dbg !16606
  br i1 %cmp6, label %for.body8, label %for.end187, !dbg !16604

for.body8:                                        ; preds = %for.cond4
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16608
  %26 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !16608
  %tobool9 = icmp ne %struct.CCGElem** %26, null, !dbg !16608
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !16611

if.then10:                                        ; preds = %for.body8
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16612
  %27 = load i32, i32* %gridsize, align 4, !dbg !16612
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16612
  store i32 %27, i32* %width, align 4, !dbg !16612
  %gridsize11 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16612
  %28 = load i32, i32* %gridsize11, align 4, !dbg !16612
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16612
  store i32 %28, i32* %height, align 8, !dbg !16612
  %grids12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16612
  %29 = load %struct.CCGElem**, %struct.CCGElem*** %grids12, align 8, !dbg !16612
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16612
  %30 = load i32*, i32** %grid_indices, align 8, !dbg !16612
  %g13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16612
  %31 = load i32, i32* %g13, align 8, !dbg !16612
  %idxprom14 = sext i32 %31 to i64, !dbg !16612
  %arrayidx15 = getelementptr inbounds i32, i32* %30, i64 %idxprom14, !dbg !16612
  %32 = load i32, i32* %arrayidx15, align 4, !dbg !16612
  %idxprom16 = sext i32 %32 to i64, !dbg !16612
  %arrayidx17 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %29, i64 %idxprom16, !dbg !16612
  %33 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx17, align 8, !dbg !16612
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16612
  store %struct.CCGElem* %33, %struct.CCGElem** %grid, align 8, !dbg !16612
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !16614
  %34 = load i32**, i32*** %grid_hidden, align 8, !dbg !16614
  %grid_indices18 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16614
  %35 = load i32*, i32** %grid_indices18, align 8, !dbg !16614
  %g19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16614
  %36 = load i32, i32* %g19, align 8, !dbg !16614
  %idxprom20 = sext i32 %36 to i64, !dbg !16614
  %arrayidx21 = getelementptr inbounds i32, i32* %35, i64 %idxprom20, !dbg !16614
  %37 = load i32, i32* %arrayidx21, align 4, !dbg !16614
  %idxprom22 = sext i32 %37 to i64, !dbg !16614
  %arrayidx23 = getelementptr inbounds i32*, i32** %34, i64 %idxprom22, !dbg !16614
  %38 = load i32*, i32** %arrayidx23, align 8, !dbg !16614
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16614
  store i32* %38, i32** %gh, align 8, !dbg !16614
  br label %if.end, !dbg !16612

if.else:                                          ; preds = %for.body8
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !16616
  %39 = load i32, i32* %totvert, align 8, !dbg !16616
  %width24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16616
  store i32 %39, i32* %width24, align 4, !dbg !16616
  %height25 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16616
  store i32 1, i32* %height25, align 8, !dbg !16616
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16618
  store i32 0, i32* %gy, align 8, !dbg !16618
  br label %for.cond26, !dbg !16618

for.cond26:                                       ; preds = %for.inc180, %if.end
  %gy27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16620
  %40 = load i32, i32* %gy27, align 8, !dbg !16620
  %height28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16620
  %41 = load i32, i32* %height28, align 8, !dbg !16620
  %cmp29 = icmp slt i32 %40, %41, !dbg !16620
  br i1 %cmp29, label %for.body31, label %for.end183, !dbg !16618

for.body31:                                       ; preds = %for.cond26
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16622
  store i32 0, i32* %gx, align 4, !dbg !16622
  br label %for.cond32, !dbg !16622

for.cond32:                                       ; preds = %for.inc, %for.body31
  %gx33 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16625
  %42 = load i32, i32* %gx33, align 4, !dbg !16625
  %width34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16625
  %43 = load i32, i32* %width34, align 4, !dbg !16625
  %cmp35 = icmp slt i32 %42, %43, !dbg !16625
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !16622

for.body37:                                       ; preds = %for.cond32
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16627
  %44 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !16627
  %tobool39 = icmp ne %struct.CCGElem* %44, null, !dbg !16627
  br i1 %tobool39, label %if.then40, label %if.else75, !dbg !16630

if.then40:                                        ; preds = %for.body37
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16631
  %45 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !16631
  %grid41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16631
  %46 = load %struct.CCGElem*, %struct.CCGElem** %grid41, align 8, !dbg !16631
  %call42 = call float* @CCG_elem_co(%struct.CCGKey* %45, %struct.CCGElem* %46), !dbg !16631
  %co43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16631
  store float* %call42, float** %co43, align 8, !dbg !16631
  %key44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16631
  %47 = load %struct.CCGKey*, %struct.CCGKey** %key44, align 8, !dbg !16631
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16631
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !16631
  %call46 = call float* @CCG_elem_no(%struct.CCGKey* %47, %struct.CCGElem* %48), !dbg !16631
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16631
  store float* %call46, float** %fno, align 8, !dbg !16631
  %key47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16631
  %49 = load %struct.CCGKey*, %struct.CCGKey** %key47, align 8, !dbg !16631
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %49, i32 0, i32 9, !dbg !16631
  %50 = load i32, i32* %has_mask, align 4, !dbg !16631
  %tobool48 = icmp ne i32 %50, 0, !dbg !16631
  br i1 %tobool48, label %cond.true, label %cond.false, !dbg !16631

cond.true:                                        ; preds = %if.then40
  %key49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16631
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key49, align 8, !dbg !16631
  %grid50 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16631
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid50, align 8, !dbg !16631
  %call51 = call float* @CCG_elem_mask(%struct.CCGKey* %51, %struct.CCGElem* %52), !dbg !16631
  br label %cond.end, !dbg !16631

cond.false:                                       ; preds = %if.then40
  br label %cond.end, !dbg !16631

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call51, %cond.true ], [ null, %cond.false ], !dbg !16631
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16631
  store float* %cond, float** %mask, align 8, !dbg !16631
  %key52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16631
  %53 = load %struct.CCGKey*, %struct.CCGKey** %key52, align 8, !dbg !16631
  %grid53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16631
  %54 = load %struct.CCGElem*, %struct.CCGElem** %grid53, align 8, !dbg !16631
  %call54 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %53, %struct.CCGElem* %54), !dbg !16631
  %grid55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16631
  store %struct.CCGElem* %call54, %struct.CCGElem** %grid55, align 8, !dbg !16631
  %gh56 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16633
  %55 = load i32*, i32** %gh56, align 8, !dbg !16633
  %tobool57 = icmp ne i32* %55, null, !dbg !16633
  br i1 %tobool57, label %if.then58, label %if.end74, !dbg !16631

if.then58:                                        ; preds = %cond.end
  %gh59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16635
  %56 = load i32*, i32** %gh59, align 8, !dbg !16635
  %gy60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16635
  %57 = load i32, i32* %gy60, align 8, !dbg !16635
  %gridsize61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16635
  %58 = load i32, i32* %gridsize61, align 4, !dbg !16635
  %mul = mul nsw i32 %57, %58, !dbg !16635
  %gx62 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16635
  %59 = load i32, i32* %gx62, align 4, !dbg !16635
  %add = add nsw i32 %mul, %59, !dbg !16635
  %shr = ashr i32 %add, 5, !dbg !16635
  %idxprom63 = sext i32 %shr to i64, !dbg !16635
  %arrayidx64 = getelementptr inbounds i32, i32* %56, i64 %idxprom63, !dbg !16635
  %60 = load i32, i32* %arrayidx64, align 4, !dbg !16635
  %gy65 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16635
  %61 = load i32, i32* %gy65, align 8, !dbg !16635
  %gridsize66 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16635
  %62 = load i32, i32* %gridsize66, align 4, !dbg !16635
  %mul67 = mul nsw i32 %61, %62, !dbg !16635
  %gx68 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16635
  %63 = load i32, i32* %gx68, align 4, !dbg !16635
  %add69 = add nsw i32 %mul67, %63, !dbg !16635
  %and = and i32 %add69, 31, !dbg !16635
  %shl = shl i32 1, %and, !dbg !16635
  %and70 = and i32 %60, %shl, !dbg !16635
  %tobool71 = icmp ne i32 %and70, 0, !dbg !16635
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !16638

if.then72:                                        ; preds = %if.then58
  br label %for.inc, !dbg !16635

if.end73:                                         ; preds = %if.then58
  br label %if.end74, !dbg !16638

if.end74:                                         ; preds = %if.end73, %cond.end
  br label %if.end137, !dbg !16631

if.else75:                                        ; preds = %for.body37
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16639
  %64 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !16639
  %tobool76 = icmp ne %struct.MVert* %64, null, !dbg !16639
  br i1 %tobool76, label %if.then77, label %if.else107, !dbg !16627

if.then77:                                        ; preds = %if.else75
  %mverts78 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16641
  %65 = load %struct.MVert*, %struct.MVert** %mverts78, align 8, !dbg !16641
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16641
  %66 = load i32*, i32** %vert_indices, align 8, !dbg !16641
  %gx79 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16641
  %67 = load i32, i32* %gx79, align 4, !dbg !16641
  %idxprom80 = sext i32 %67 to i64, !dbg !16641
  %arrayidx81 = getelementptr inbounds i32, i32* %66, i64 %idxprom80, !dbg !16641
  %68 = load i32, i32* %arrayidx81, align 4, !dbg !16641
  %idxprom82 = sext i32 %68 to i64, !dbg !16641
  %arrayidx83 = getelementptr inbounds %struct.MVert, %struct.MVert* %65, i64 %idxprom82, !dbg !16641
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16641
  store %struct.MVert* %arrayidx83, %struct.MVert** %mvert, align 8, !dbg !16641
  %mvert84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16643
  %69 = load %struct.MVert*, %struct.MVert** %mvert84, align 8, !dbg !16643
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %69, i32 0, i32 2, !dbg !16643
  %70 = load i8, i8* %flag, align 2, !dbg !16643
  %conv85 = zext i8 %70 to i32, !dbg !16643
  %and86 = and i32 %conv85, 16, !dbg !16643
  %tobool87 = icmp ne i32 %and86, 0, !dbg !16643
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !16641

if.then88:                                        ; preds = %if.then77
  br label %for.inc, !dbg !16643

if.end89:                                         ; preds = %if.then77
  %mvert90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16641
  %71 = load %struct.MVert*, %struct.MVert** %mvert90, align 8, !dbg !16641
  %co91 = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i32 0, i32 0, !dbg !16641
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co91, i64 0, i64 0, !dbg !16641
  %co92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16641
  store float* %arraydecay, float** %co92, align 8, !dbg !16641
  %mvert93 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16641
  %72 = load %struct.MVert*, %struct.MVert** %mvert93, align 8, !dbg !16641
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i32 0, i32 1, !dbg !16641
  %arraydecay94 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !16641
  %no95 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16641
  store i16* %arraydecay94, i16** %no95, align 8, !dbg !16641
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16645
  %73 = load float*, float** %vmask, align 8, !dbg !16645
  %tobool96 = icmp ne float* %73, null, !dbg !16645
  br i1 %tobool96, label %if.then97, label %if.end106, !dbg !16641

if.then97:                                        ; preds = %if.end89
  %vmask98 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16645
  %74 = load float*, float** %vmask98, align 8, !dbg !16645
  %vert_indices99 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16645
  %75 = load i32*, i32** %vert_indices99, align 8, !dbg !16645
  %gx100 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16645
  %76 = load i32, i32* %gx100, align 4, !dbg !16645
  %idxprom101 = sext i32 %76 to i64, !dbg !16645
  %arrayidx102 = getelementptr inbounds i32, i32* %75, i64 %idxprom101, !dbg !16645
  %77 = load i32, i32* %arrayidx102, align 4, !dbg !16645
  %idxprom103 = sext i32 %77 to i64, !dbg !16645
  %arrayidx104 = getelementptr inbounds float, float* %74, i64 %idxprom103, !dbg !16645
  %mask105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16645
  store float* %arrayidx104, float** %mask105, align 8, !dbg !16645
  br label %if.end106, !dbg !16645

if.end106:                                        ; preds = %if.then97, %if.end89
  br label %if.end136, !dbg !16641

if.else107:                                       ; preds = %if.else75
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16647
  %call108 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !16647
  %tobool109 = icmp ne i8 %call108, 0, !dbg !16647
  br i1 %tobool109, label %if.else114, label %if.then110, !dbg !16650

if.then110:                                       ; preds = %if.else107
  %bm_unique_verts111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16651
  %call112 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts111), !dbg !16651
  %78 = bitcast i8* %call112 to %struct.BMVert*, !dbg !16651
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16651
  store %struct.BMVert* %78, %struct.BMVert** %bm_vert, align 8, !dbg !16651
  %bm_unique_verts113 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16651
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts113), !dbg !16651
  br label %if.end118, !dbg !16651

if.else114:                                       ; preds = %if.else107
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16653
  %call115 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !16653
  %79 = bitcast i8* %call115 to %struct.BMVert*, !dbg !16653
  %bm_vert116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16653
  store %struct.BMVert* %79, %struct.BMVert** %bm_vert116, align 8, !dbg !16653
  %bm_other_verts117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16653
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts117), !dbg !16653
  br label %if.end118

if.end118:                                        ; preds = %if.else114, %if.then110
  %bm_vert119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16655
  %80 = load %struct.BMVert*, %struct.BMVert** %bm_vert119, align 8, !dbg !16655
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %80, i32 0, i32 0, !dbg !16655
  %call120 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !16655
  %conv121 = zext i8 %call120 to i32, !dbg !16655
  %tobool122 = icmp ne i32 %conv121, 0, !dbg !16655
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !16650

if.then123:                                       ; preds = %if.end118
  br label %for.inc, !dbg !16655

if.end124:                                        ; preds = %if.end118
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16650
  %81 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !16650
  %co126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %81, i32 0, i32 2, !dbg !16650
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %co126, i64 0, i64 0, !dbg !16650
  %co128 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16650
  store float* %arraydecay127, float** %co128, align 8, !dbg !16650
  %bm_vert129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16650
  %82 = load %struct.BMVert*, %struct.BMVert** %bm_vert129, align 8, !dbg !16650
  %no130 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 3, !dbg !16650
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %no130, i64 0, i64 0, !dbg !16650
  %fno132 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16650
  store float* %arraydecay131, float** %fno132, align 8, !dbg !16650
  %bm_vert133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16650
  %83 = load %struct.BMVert*, %struct.BMVert** %bm_vert133, align 8, !dbg !16650
  %head134 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %83, i32 0, i32 0, !dbg !16650
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head134, i32 0, i32 0, !dbg !16650
  %84 = load i8*, i8** %data, align 8, !dbg !16650
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !16650
  %85 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !16650
  %idx.ext = sext i32 %85 to i64, !dbg !16650
  %add.ptr = getelementptr inbounds i8, i8* %84, i64 %idx.ext, !dbg !16650
  %86 = bitcast i8* %add.ptr to float*, !dbg !16650
  %mask135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16650
  store float* %86, float** %mask135, align 8, !dbg !16650
  br label %if.end136

if.end136:                                        ; preds = %if.end124, %if.end106
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end74
  %87 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16657
  %co138 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %87, i32 0, i32 5, !dbg !16660
  %88 = load [3 x float]*, [3 x float]** %co138, align 8, !dbg !16660
  %i139 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16661
  %89 = load i32, i32* %i139, align 4, !dbg !16661
  %idxprom140 = sext i32 %89 to i64, !dbg !16657
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %88, i64 %idxprom140, !dbg !16657
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !16657
  %call143 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %arraydecay142), !dbg !16662
  %tobool144 = icmp ne i8 %call143, 0, !dbg !16662
  br i1 %tobool144, label %if.then145, label %if.end175, !dbg !16663

if.then145:                                       ; preds = %if.end137
  call void @llvm.dbg.declare(metadata [3 x float]* %fno146, metadata !16664, metadata !DIExpression()), !dbg !16666
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16667
  %90 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16668
  %no148 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %90, i32 0, i32 7, !dbg !16669
  %91 = load [3 x i16]*, [3 x i16]** %no148, align 8, !dbg !16669
  %i149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16670
  %92 = load i32, i32* %i149, align 4, !dbg !16670
  %idxprom150 = sext i32 %92 to i64, !dbg !16668
  %arrayidx151 = getelementptr inbounds [3 x i16], [3 x i16]* %91, i64 %idxprom150, !dbg !16668
  %arraydecay152 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx151, i64 0, i64 0, !dbg !16668
  call void @normal_short_to_float_v3(float* %arraydecay147, i16* %arraydecay152), !dbg !16671
  %93 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16672
  %cache153 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %93, i32 0, i32 28, !dbg !16674
  %94 = load %struct.StrokeCache*, %struct.StrokeCache** %cache153, align 8, !dbg !16674
  %view_normal = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %94, i32 0, i32 33, !dbg !16675
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %view_normal, i64 0, i64 0, !dbg !16672
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %fno146, i64 0, i64 0, !dbg !16676
  %call156 = call float @dot_v3v3(float* %arraydecay154, float* %arraydecay155), !dbg !16677
  %cmp157 = fcmp ogt float %call156, 0.000000e+00, !dbg !16678
  br i1 %cmp157, label %if.then159, label %if.else166, !dbg !16679

if.then159:                                       ; preds = %if.then145
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16680
  %95 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16682
  %co161 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %95, i32 0, i32 5, !dbg !16683
  %96 = load [3 x float]*, [3 x float]** %co161, align 8, !dbg !16683
  %i162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16684
  %97 = load i32, i32* %i162, align 4, !dbg !16684
  %idxprom163 = sext i32 %97 to i64, !dbg !16682
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %96, i64 %idxprom163, !dbg !16682
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx164, i64 0, i64 0, !dbg !16682
  call void @add_v3_v3(float* %arraydecay160, float* %arraydecay165), !dbg !16685
  %98 = load i32, i32* %private_count, align 4, !dbg !16686
  %inc = add nsw i32 %98, 1, !dbg !16686
  store i32 %inc, i32* %private_count, align 4, !dbg !16686
  br label %if.end174, !dbg !16687

if.else166:                                       ; preds = %if.then145
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16688
  %99 = load %struct.SculptUndoNode*, %struct.SculptUndoNode** %unode, align 8, !dbg !16690
  %co168 = getelementptr inbounds %struct.SculptUndoNode, %struct.SculptUndoNode* %99, i32 0, i32 5, !dbg !16691
  %100 = load [3 x float]*, [3 x float]** %co168, align 8, !dbg !16691
  %i169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16692
  %101 = load i32, i32* %i169, align 4, !dbg !16692
  %idxprom170 = sext i32 %101 to i64, !dbg !16690
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %100, i64 %idxprom170, !dbg !16690
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 0, !dbg !16690
  call void @add_v3_v3(float* %arraydecay167, float* %arraydecay172), !dbg !16693
  %102 = load i32, i32* %private_count_flip, align 4, !dbg !16694
  %inc173 = add nsw i32 %102, 1, !dbg !16694
  store i32 %inc173, i32* %private_count_flip, align 4, !dbg !16694
  br label %if.end174

if.end174:                                        ; preds = %if.else166, %if.then159
  br label %if.end175, !dbg !16695

if.end175:                                        ; preds = %if.end174, %if.end137
  br label %for.inc, !dbg !16696

for.inc:                                          ; preds = %if.end175, %if.then123, %if.then88, %if.then72
  %gx176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16625
  %103 = load i32, i32* %gx176, align 4, !dbg !16625
  %inc177 = add nsw i32 %103, 1, !dbg !16625
  store i32 %inc177, i32* %gx176, align 4, !dbg !16625
  %i178 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16625
  %104 = load i32, i32* %i178, align 4, !dbg !16625
  %inc179 = add nsw i32 %104, 1, !dbg !16625
  store i32 %inc179, i32* %i178, align 4, !dbg !16625
  br label %for.cond32, !dbg !16625, !llvm.loop !16697

for.end:                                          ; preds = %for.cond32
  br label %for.inc180, !dbg !16699

for.inc180:                                       ; preds = %for.end
  %gy181 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16620
  %105 = load i32, i32* %gy181, align 8, !dbg !16620
  %inc182 = add nsw i32 %105, 1, !dbg !16620
  store i32 %inc182, i32* %gy181, align 8, !dbg !16620
  br label %for.cond26, !dbg !16620, !llvm.loop !16700

for.end183:                                       ; preds = %for.cond26
  br label %for.inc184, !dbg !16702

for.inc184:                                       ; preds = %for.end183
  %g185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16606
  %106 = load i32, i32* %g185, align 8, !dbg !16606
  %inc186 = add nsw i32 %106, 1, !dbg !16606
  store i32 %inc186, i32* %g185, align 8, !dbg !16606
  br label %for.cond4, !dbg !16606, !llvm.loop !16703

for.end187:                                       ; preds = %for.cond4
  br label %if.end429, !dbg !16705

if.else188:                                       ; preds = %land.lhs.true, %for.body
  %107 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16706
  %pbvh189 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %107, i32 0, i32 15, !dbg !16706
  %108 = load %struct.PBVH*, %struct.PBVH** %pbvh189, align 8, !dbg !16706
  %109 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !16706
  %110 = load i32, i32* %n, align 4, !dbg !16706
  %idxprom190 = sext i32 %110 to i64, !dbg !16706
  %arrayidx191 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %109, i64 %idxprom190, !dbg !16706
  %111 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx191, align 8, !dbg !16706
  call void @pbvh_vertex_iter_init(%struct.PBVH* %108, %struct.PBVHNode* %111, %struct.PBVHVertexIter* %vd, i32 1), !dbg !16706
  %i192 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16708
  store i32 0, i32* %i192, align 4, !dbg !16708
  %g193 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16708
  store i32 0, i32* %g193, align 8, !dbg !16708
  br label %for.cond194, !dbg !16708

for.cond194:                                      ; preds = %for.inc425, %if.else188
  %g195 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16710
  %112 = load i32, i32* %g195, align 8, !dbg !16710
  %totgrid196 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !16710
  %113 = load i32, i32* %totgrid196, align 8, !dbg !16710
  %cmp197 = icmp slt i32 %112, %113, !dbg !16710
  br i1 %cmp197, label %for.body199, label %for.end428, !dbg !16708

for.body199:                                      ; preds = %for.cond194
  %grids200 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16712
  %114 = load %struct.CCGElem**, %struct.CCGElem*** %grids200, align 8, !dbg !16712
  %tobool201 = icmp ne %struct.CCGElem** %114, null, !dbg !16712
  br i1 %tobool201, label %if.then202, label %if.else223, !dbg !16715

if.then202:                                       ; preds = %for.body199
  %gridsize203 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16716
  %115 = load i32, i32* %gridsize203, align 4, !dbg !16716
  %width204 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16716
  store i32 %115, i32* %width204, align 4, !dbg !16716
  %gridsize205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16716
  %116 = load i32, i32* %gridsize205, align 4, !dbg !16716
  %height206 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16716
  store i32 %116, i32* %height206, align 8, !dbg !16716
  %grids207 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !16716
  %117 = load %struct.CCGElem**, %struct.CCGElem*** %grids207, align 8, !dbg !16716
  %grid_indices208 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16716
  %118 = load i32*, i32** %grid_indices208, align 8, !dbg !16716
  %g209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16716
  %119 = load i32, i32* %g209, align 8, !dbg !16716
  %idxprom210 = sext i32 %119 to i64, !dbg !16716
  %arrayidx211 = getelementptr inbounds i32, i32* %118, i64 %idxprom210, !dbg !16716
  %120 = load i32, i32* %arrayidx211, align 4, !dbg !16716
  %idxprom212 = sext i32 %120 to i64, !dbg !16716
  %arrayidx213 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %117, i64 %idxprom212, !dbg !16716
  %121 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx213, align 8, !dbg !16716
  %grid214 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16716
  store %struct.CCGElem* %121, %struct.CCGElem** %grid214, align 8, !dbg !16716
  %grid_hidden215 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !16718
  %122 = load i32**, i32*** %grid_hidden215, align 8, !dbg !16718
  %grid_indices216 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !16718
  %123 = load i32*, i32** %grid_indices216, align 8, !dbg !16718
  %g217 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16718
  %124 = load i32, i32* %g217, align 8, !dbg !16718
  %idxprom218 = sext i32 %124 to i64, !dbg !16718
  %arrayidx219 = getelementptr inbounds i32, i32* %123, i64 %idxprom218, !dbg !16718
  %125 = load i32, i32* %arrayidx219, align 4, !dbg !16718
  %idxprom220 = sext i32 %125 to i64, !dbg !16718
  %arrayidx221 = getelementptr inbounds i32*, i32** %122, i64 %idxprom220, !dbg !16718
  %126 = load i32*, i32** %arrayidx221, align 8, !dbg !16718
  %gh222 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16718
  store i32* %126, i32** %gh222, align 8, !dbg !16718
  br label %if.end227, !dbg !16716

if.else223:                                       ; preds = %for.body199
  %totvert224 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !16720
  %127 = load i32, i32* %totvert224, align 8, !dbg !16720
  %width225 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16720
  store i32 %127, i32* %width225, align 4, !dbg !16720
  %height226 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16720
  store i32 1, i32* %height226, align 8, !dbg !16720
  br label %if.end227

if.end227:                                        ; preds = %if.else223, %if.then202
  %gy228 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16722
  store i32 0, i32* %gy228, align 8, !dbg !16722
  br label %for.cond229, !dbg !16722

for.cond229:                                      ; preds = %for.inc421, %if.end227
  %gy230 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16724
  %128 = load i32, i32* %gy230, align 8, !dbg !16724
  %height231 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !16724
  %129 = load i32, i32* %height231, align 8, !dbg !16724
  %cmp232 = icmp slt i32 %128, %129, !dbg !16724
  br i1 %cmp232, label %for.body234, label %for.end424, !dbg !16722

for.body234:                                      ; preds = %for.cond229
  %gx235 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16726
  store i32 0, i32* %gx235, align 4, !dbg !16726
  br label %for.cond236, !dbg !16726

for.cond236:                                      ; preds = %for.inc415, %for.body234
  %gx237 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16729
  %130 = load i32, i32* %gx237, align 4, !dbg !16729
  %width238 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !16729
  %131 = load i32, i32* %width238, align 4, !dbg !16729
  %cmp239 = icmp slt i32 %130, %131, !dbg !16729
  br i1 %cmp239, label %for.body241, label %for.end420, !dbg !16726

for.body241:                                      ; preds = %for.cond236
  %grid242 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16731
  %132 = load %struct.CCGElem*, %struct.CCGElem** %grid242, align 8, !dbg !16731
  %tobool243 = icmp ne %struct.CCGElem* %132, null, !dbg !16731
  br i1 %tobool243, label %if.then244, label %if.else292, !dbg !16734

if.then244:                                       ; preds = %for.body241
  %key245 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16735
  %133 = load %struct.CCGKey*, %struct.CCGKey** %key245, align 8, !dbg !16735
  %grid246 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16735
  %134 = load %struct.CCGElem*, %struct.CCGElem** %grid246, align 8, !dbg !16735
  %call247 = call float* @CCG_elem_co(%struct.CCGKey* %133, %struct.CCGElem* %134), !dbg !16735
  %co248 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16735
  store float* %call247, float** %co248, align 8, !dbg !16735
  %key249 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16735
  %135 = load %struct.CCGKey*, %struct.CCGKey** %key249, align 8, !dbg !16735
  %grid250 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16735
  %136 = load %struct.CCGElem*, %struct.CCGElem** %grid250, align 8, !dbg !16735
  %call251 = call float* @CCG_elem_no(%struct.CCGKey* %135, %struct.CCGElem* %136), !dbg !16735
  %fno252 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16735
  store float* %call251, float** %fno252, align 8, !dbg !16735
  %key253 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16735
  %137 = load %struct.CCGKey*, %struct.CCGKey** %key253, align 8, !dbg !16735
  %has_mask254 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %137, i32 0, i32 9, !dbg !16735
  %138 = load i32, i32* %has_mask254, align 4, !dbg !16735
  %tobool255 = icmp ne i32 %138, 0, !dbg !16735
  br i1 %tobool255, label %cond.true256, label %cond.false260, !dbg !16735

cond.true256:                                     ; preds = %if.then244
  %key257 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16735
  %139 = load %struct.CCGKey*, %struct.CCGKey** %key257, align 8, !dbg !16735
  %grid258 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16735
  %140 = load %struct.CCGElem*, %struct.CCGElem** %grid258, align 8, !dbg !16735
  %call259 = call float* @CCG_elem_mask(%struct.CCGKey* %139, %struct.CCGElem* %140), !dbg !16735
  br label %cond.end261, !dbg !16735

cond.false260:                                    ; preds = %if.then244
  br label %cond.end261, !dbg !16735

cond.end261:                                      ; preds = %cond.false260, %cond.true256
  %cond262 = phi float* [ %call259, %cond.true256 ], [ null, %cond.false260 ], !dbg !16735
  %mask263 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16735
  store float* %cond262, float** %mask263, align 8, !dbg !16735
  %key264 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !16735
  %141 = load %struct.CCGKey*, %struct.CCGKey** %key264, align 8, !dbg !16735
  %grid265 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16735
  %142 = load %struct.CCGElem*, %struct.CCGElem** %grid265, align 8, !dbg !16735
  %call266 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %141, %struct.CCGElem* %142), !dbg !16735
  %grid267 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !16735
  store %struct.CCGElem* %call266, %struct.CCGElem** %grid267, align 8, !dbg !16735
  %gh268 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16737
  %143 = load i32*, i32** %gh268, align 8, !dbg !16737
  %tobool269 = icmp ne i32* %143, null, !dbg !16737
  br i1 %tobool269, label %if.then270, label %if.end291, !dbg !16735

if.then270:                                       ; preds = %cond.end261
  %gh271 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !16739
  %144 = load i32*, i32** %gh271, align 8, !dbg !16739
  %gy272 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16739
  %145 = load i32, i32* %gy272, align 8, !dbg !16739
  %gridsize273 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16739
  %146 = load i32, i32* %gridsize273, align 4, !dbg !16739
  %mul274 = mul nsw i32 %145, %146, !dbg !16739
  %gx275 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16739
  %147 = load i32, i32* %gx275, align 4, !dbg !16739
  %add276 = add nsw i32 %mul274, %147, !dbg !16739
  %shr277 = ashr i32 %add276, 5, !dbg !16739
  %idxprom278 = sext i32 %shr277 to i64, !dbg !16739
  %arrayidx279 = getelementptr inbounds i32, i32* %144, i64 %idxprom278, !dbg !16739
  %148 = load i32, i32* %arrayidx279, align 4, !dbg !16739
  %gy280 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16739
  %149 = load i32, i32* %gy280, align 8, !dbg !16739
  %gridsize281 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !16739
  %150 = load i32, i32* %gridsize281, align 4, !dbg !16739
  %mul282 = mul nsw i32 %149, %150, !dbg !16739
  %gx283 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16739
  %151 = load i32, i32* %gx283, align 4, !dbg !16739
  %add284 = add nsw i32 %mul282, %151, !dbg !16739
  %and285 = and i32 %add284, 31, !dbg !16739
  %shl286 = shl i32 1, %and285, !dbg !16739
  %and287 = and i32 %148, %shl286, !dbg !16739
  %tobool288 = icmp ne i32 %and287, 0, !dbg !16739
  br i1 %tobool288, label %if.then289, label %if.end290, !dbg !16742

if.then289:                                       ; preds = %if.then270
  br label %for.inc415, !dbg !16739

if.end290:                                        ; preds = %if.then270
  br label %if.end291, !dbg !16742

if.end291:                                        ; preds = %if.end290, %cond.end261
  br label %if.end369, !dbg !16735

if.else292:                                       ; preds = %for.body241
  %mverts293 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16743
  %152 = load %struct.MVert*, %struct.MVert** %mverts293, align 8, !dbg !16743
  %tobool294 = icmp ne %struct.MVert* %152, null, !dbg !16743
  br i1 %tobool294, label %if.then295, label %if.else331, !dbg !16731

if.then295:                                       ; preds = %if.else292
  %mverts296 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !16745
  %153 = load %struct.MVert*, %struct.MVert** %mverts296, align 8, !dbg !16745
  %vert_indices297 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16745
  %154 = load i32*, i32** %vert_indices297, align 8, !dbg !16745
  %gx298 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16745
  %155 = load i32, i32* %gx298, align 4, !dbg !16745
  %idxprom299 = sext i32 %155 to i64, !dbg !16745
  %arrayidx300 = getelementptr inbounds i32, i32* %154, i64 %idxprom299, !dbg !16745
  %156 = load i32, i32* %arrayidx300, align 4, !dbg !16745
  %idxprom301 = sext i32 %156 to i64, !dbg !16745
  %arrayidx302 = getelementptr inbounds %struct.MVert, %struct.MVert* %153, i64 %idxprom301, !dbg !16745
  %mvert303 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16745
  store %struct.MVert* %arrayidx302, %struct.MVert** %mvert303, align 8, !dbg !16745
  %mvert304 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16747
  %157 = load %struct.MVert*, %struct.MVert** %mvert304, align 8, !dbg !16747
  %flag305 = getelementptr inbounds %struct.MVert, %struct.MVert* %157, i32 0, i32 2, !dbg !16747
  %158 = load i8, i8* %flag305, align 2, !dbg !16747
  %conv306 = zext i8 %158 to i32, !dbg !16747
  %and307 = and i32 %conv306, 16, !dbg !16747
  %tobool308 = icmp ne i32 %and307, 0, !dbg !16747
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !16745

if.then309:                                       ; preds = %if.then295
  br label %for.inc415, !dbg !16747

if.end310:                                        ; preds = %if.then295
  %mvert311 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16745
  %159 = load %struct.MVert*, %struct.MVert** %mvert311, align 8, !dbg !16745
  %co312 = getelementptr inbounds %struct.MVert, %struct.MVert* %159, i32 0, i32 0, !dbg !16745
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %co312, i64 0, i64 0, !dbg !16745
  %co314 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16745
  store float* %arraydecay313, float** %co314, align 8, !dbg !16745
  %mvert315 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !16745
  %160 = load %struct.MVert*, %struct.MVert** %mvert315, align 8, !dbg !16745
  %no316 = getelementptr inbounds %struct.MVert, %struct.MVert* %160, i32 0, i32 1, !dbg !16745
  %arraydecay317 = getelementptr inbounds [3 x i16], [3 x i16]* %no316, i64 0, i64 0, !dbg !16745
  %no318 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16745
  store i16* %arraydecay317, i16** %no318, align 8, !dbg !16745
  %vmask319 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16749
  %161 = load float*, float** %vmask319, align 8, !dbg !16749
  %tobool320 = icmp ne float* %161, null, !dbg !16749
  br i1 %tobool320, label %if.then321, label %if.end330, !dbg !16745

if.then321:                                       ; preds = %if.end310
  %vmask322 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !16749
  %162 = load float*, float** %vmask322, align 8, !dbg !16749
  %vert_indices323 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !16749
  %163 = load i32*, i32** %vert_indices323, align 8, !dbg !16749
  %gx324 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16749
  %164 = load i32, i32* %gx324, align 4, !dbg !16749
  %idxprom325 = sext i32 %164 to i64, !dbg !16749
  %arrayidx326 = getelementptr inbounds i32, i32* %163, i64 %idxprom325, !dbg !16749
  %165 = load i32, i32* %arrayidx326, align 4, !dbg !16749
  %idxprom327 = sext i32 %165 to i64, !dbg !16749
  %arrayidx328 = getelementptr inbounds float, float* %162, i64 %idxprom327, !dbg !16749
  %mask329 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16749
  store float* %arrayidx328, float** %mask329, align 8, !dbg !16749
  br label %if.end330, !dbg !16749

if.end330:                                        ; preds = %if.then321, %if.end310
  br label %if.end368, !dbg !16745

if.else331:                                       ; preds = %if.else292
  %bm_unique_verts332 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16751
  %call333 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts332), !dbg !16751
  %tobool334 = icmp ne i8 %call333, 0, !dbg !16751
  br i1 %tobool334, label %if.else340, label %if.then335, !dbg !16754

if.then335:                                       ; preds = %if.else331
  %bm_unique_verts336 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16755
  %call337 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts336), !dbg !16755
  %166 = bitcast i8* %call337 to %struct.BMVert*, !dbg !16755
  %bm_vert338 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16755
  store %struct.BMVert* %166, %struct.BMVert** %bm_vert338, align 8, !dbg !16755
  %bm_unique_verts339 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !16755
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts339), !dbg !16755
  br label %if.end345, !dbg !16755

if.else340:                                       ; preds = %if.else331
  %bm_other_verts341 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16757
  %call342 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts341), !dbg !16757
  %167 = bitcast i8* %call342 to %struct.BMVert*, !dbg !16757
  %bm_vert343 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16757
  store %struct.BMVert* %167, %struct.BMVert** %bm_vert343, align 8, !dbg !16757
  %bm_other_verts344 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !16757
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts344), !dbg !16757
  br label %if.end345

if.end345:                                        ; preds = %if.else340, %if.then335
  %bm_vert346 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16759
  %168 = load %struct.BMVert*, %struct.BMVert** %bm_vert346, align 8, !dbg !16759
  %head347 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %168, i32 0, i32 0, !dbg !16759
  %call348 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head347, i8 zeroext 2), !dbg !16759
  %conv349 = zext i8 %call348 to i32, !dbg !16759
  %tobool350 = icmp ne i32 %conv349, 0, !dbg !16759
  br i1 %tobool350, label %if.then351, label %if.end352, !dbg !16754

if.then351:                                       ; preds = %if.end345
  br label %for.inc415, !dbg !16759

if.end352:                                        ; preds = %if.end345
  %bm_vert353 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16754
  %169 = load %struct.BMVert*, %struct.BMVert** %bm_vert353, align 8, !dbg !16754
  %co354 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %169, i32 0, i32 2, !dbg !16754
  %arraydecay355 = getelementptr inbounds [3 x float], [3 x float]* %co354, i64 0, i64 0, !dbg !16754
  %co356 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16754
  store float* %arraydecay355, float** %co356, align 8, !dbg !16754
  %bm_vert357 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16754
  %170 = load %struct.BMVert*, %struct.BMVert** %bm_vert357, align 8, !dbg !16754
  %no358 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %170, i32 0, i32 3, !dbg !16754
  %arraydecay359 = getelementptr inbounds [3 x float], [3 x float]* %no358, i64 0, i64 0, !dbg !16754
  %fno360 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16754
  store float* %arraydecay359, float** %fno360, align 8, !dbg !16754
  %bm_vert361 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !16754
  %171 = load %struct.BMVert*, %struct.BMVert** %bm_vert361, align 8, !dbg !16754
  %head362 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %171, i32 0, i32 0, !dbg !16754
  %data363 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head362, i32 0, i32 0, !dbg !16754
  %172 = load i8*, i8** %data363, align 8, !dbg !16754
  %cd_vert_mask_offset364 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !16754
  %173 = load i32, i32* %cd_vert_mask_offset364, align 8, !dbg !16754
  %idx.ext365 = sext i32 %173 to i64, !dbg !16754
  %add.ptr366 = getelementptr inbounds i8, i8* %172, i64 %idx.ext365, !dbg !16754
  %174 = bitcast i8* %add.ptr366 to float*, !dbg !16754
  %mask367 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !16754
  store float* %174, float** %mask367, align 8, !dbg !16754
  br label %if.end368

if.end368:                                        ; preds = %if.end352, %if.end330
  br label %if.end369

if.end369:                                        ; preds = %if.end368, %if.end291
  %co370 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16761
  %175 = load float*, float** %co370, align 8, !dbg !16761
  %call371 = call zeroext i8 @sculpt_brush_test_fast(%struct.SculptBrushTest* %test, float* %175), !dbg !16764
  %tobool372 = icmp ne i8 %call371, 0, !dbg !16764
  br i1 %tobool372, label %if.then373, label %if.end414, !dbg !16765

if.then373:                                       ; preds = %if.end369
  %no374 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16766
  %176 = load i16*, i16** %no374, align 8, !dbg !16766
  %tobool375 = icmp ne i16* %176, null, !dbg !16769
  br i1 %tobool375, label %if.then376, label %if.else396, !dbg !16770

if.then376:                                       ; preds = %if.then373
  call void @llvm.dbg.declare(metadata [3 x float]* %fno377, metadata !16771, metadata !DIExpression()), !dbg !16773
  %arraydecay378 = getelementptr inbounds [3 x float], [3 x float]* %fno377, i64 0, i64 0, !dbg !16774
  %no379 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !16775
  %177 = load i16*, i16** %no379, align 8, !dbg !16775
  call void @normal_short_to_float_v3(float* %arraydecay378, i16* %177), !dbg !16776
  %178 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16777
  %cache380 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %178, i32 0, i32 28, !dbg !16779
  %179 = load %struct.StrokeCache*, %struct.StrokeCache** %cache380, align 8, !dbg !16779
  %view_normal381 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %179, i32 0, i32 33, !dbg !16780
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %view_normal381, i64 0, i64 0, !dbg !16777
  %arraydecay383 = getelementptr inbounds [3 x float], [3 x float]* %fno377, i64 0, i64 0, !dbg !16781
  %call384 = call float @dot_v3v3(float* %arraydecay382, float* %arraydecay383), !dbg !16782
  %cmp385 = fcmp ogt float %call384, 0.000000e+00, !dbg !16783
  br i1 %cmp385, label %if.then387, label %if.else391, !dbg !16784

if.then387:                                       ; preds = %if.then376
  %arraydecay388 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16785
  %co389 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16787
  %180 = load float*, float** %co389, align 8, !dbg !16787
  call void @add_v3_v3(float* %arraydecay388, float* %180), !dbg !16788
  %181 = load i32, i32* %private_count, align 4, !dbg !16789
  %inc390 = add nsw i32 %181, 1, !dbg !16789
  store i32 %inc390, i32* %private_count, align 4, !dbg !16789
  br label %if.end395, !dbg !16790

if.else391:                                       ; preds = %if.then376
  %arraydecay392 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16791
  %co393 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16793
  %182 = load float*, float** %co393, align 8, !dbg !16793
  call void @add_v3_v3(float* %arraydecay392, float* %182), !dbg !16794
  %183 = load i32, i32* %private_count_flip, align 4, !dbg !16795
  %inc394 = add nsw i32 %183, 1, !dbg !16795
  store i32 %inc394, i32* %private_count_flip, align 4, !dbg !16795
  br label %if.end395

if.end395:                                        ; preds = %if.else391, %if.then387
  br label %if.end413, !dbg !16796

if.else396:                                       ; preds = %if.then373
  %184 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !16797
  %cache397 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %184, i32 0, i32 28, !dbg !16800
  %185 = load %struct.StrokeCache*, %struct.StrokeCache** %cache397, align 8, !dbg !16800
  %view_normal398 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %185, i32 0, i32 33, !dbg !16801
  %arraydecay399 = getelementptr inbounds [3 x float], [3 x float]* %view_normal398, i64 0, i64 0, !dbg !16797
  %fno400 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !16802
  %186 = load float*, float** %fno400, align 8, !dbg !16802
  %call401 = call float @dot_v3v3(float* %arraydecay399, float* %186), !dbg !16803
  %cmp402 = fcmp ogt float %call401, 0.000000e+00, !dbg !16804
  br i1 %cmp402, label %if.then404, label %if.else408, !dbg !16805

if.then404:                                       ; preds = %if.else396
  %arraydecay405 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16806
  %co406 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16808
  %187 = load float*, float** %co406, align 8, !dbg !16808
  call void @add_v3_v3(float* %arraydecay405, float* %187), !dbg !16809
  %188 = load i32, i32* %private_count, align 4, !dbg !16810
  %inc407 = add nsw i32 %188, 1, !dbg !16810
  store i32 %inc407, i32* %private_count, align 4, !dbg !16810
  br label %if.end412, !dbg !16811

if.else408:                                       ; preds = %if.else396
  %arraydecay409 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16812
  %co410 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !16814
  %189 = load float*, float** %co410, align 8, !dbg !16814
  call void @add_v3_v3(float* %arraydecay409, float* %189), !dbg !16815
  %190 = load i32, i32* %private_count_flip, align 4, !dbg !16816
  %inc411 = add nsw i32 %190, 1, !dbg !16816
  store i32 %inc411, i32* %private_count_flip, align 4, !dbg !16816
  br label %if.end412

if.end412:                                        ; preds = %if.else408, %if.then404
  br label %if.end413

if.end413:                                        ; preds = %if.end412, %if.end395
  br label %if.end414, !dbg !16817

if.end414:                                        ; preds = %if.end413, %if.end369
  br label %for.inc415, !dbg !16818

for.inc415:                                       ; preds = %if.end414, %if.then351, %if.then309, %if.then289
  %gx416 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !16729
  %191 = load i32, i32* %gx416, align 4, !dbg !16729
  %inc417 = add nsw i32 %191, 1, !dbg !16729
  store i32 %inc417, i32* %gx416, align 4, !dbg !16729
  %i418 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !16729
  %192 = load i32, i32* %i418, align 4, !dbg !16729
  %inc419 = add nsw i32 %192, 1, !dbg !16729
  store i32 %inc419, i32* %i418, align 4, !dbg !16729
  br label %for.cond236, !dbg !16729, !llvm.loop !16819

for.end420:                                       ; preds = %for.cond236
  br label %for.inc421, !dbg !16821

for.inc421:                                       ; preds = %for.end420
  %gy422 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !16724
  %193 = load i32, i32* %gy422, align 8, !dbg !16724
  %inc423 = add nsw i32 %193, 1, !dbg !16724
  store i32 %inc423, i32* %gy422, align 8, !dbg !16724
  br label %for.cond229, !dbg !16724, !llvm.loop !16822

for.end424:                                       ; preds = %for.cond229
  br label %for.inc425, !dbg !16824

for.inc425:                                       ; preds = %for.end424
  %g426 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !16710
  %194 = load i32, i32* %g426, align 8, !dbg !16710
  %inc427 = add nsw i32 %194, 1, !dbg !16710
  store i32 %inc427, i32* %g426, align 8, !dbg !16710
  br label %for.cond194, !dbg !16710, !llvm.loop !16825

for.end428:                                       ; preds = %for.cond194
  br label %if.end429

if.end429:                                        ; preds = %for.end428, %for.end187
  %195 = load float*, float** %fc.addr, align 8, !dbg !16827
  %arraydecay430 = getelementptr inbounds [3 x float], [3 x float]* %private_fc, i64 0, i64 0, !dbg !16829
  call void @add_v3_v3(float* %195, float* %arraydecay430), !dbg !16830
  %arraydecay431 = getelementptr inbounds [3 x float], [3 x float]* %fc_flip, i64 0, i64 0, !dbg !16831
  %arraydecay432 = getelementptr inbounds [3 x float], [3 x float]* %private_fc_flip, i64 0, i64 0, !dbg !16832
  call void @add_v3_v3(float* %arraydecay431, float* %arraydecay432), !dbg !16833
  %196 = load i32, i32* %private_count, align 4, !dbg !16834
  %197 = load i32, i32* %count, align 4, !dbg !16835
  %add433 = add nsw i32 %197, %196, !dbg !16835
  store i32 %add433, i32* %count, align 4, !dbg !16835
  %198 = load i32, i32* %private_count_flip, align 4, !dbg !16836
  %199 = load i32, i32* %count_flip, align 4, !dbg !16837
  %add434 = add nsw i32 %199, %198, !dbg !16837
  store i32 %add434, i32* %count_flip, align 4, !dbg !16837
  br label %for.inc435, !dbg !16838

for.inc435:                                       ; preds = %if.end429
  %200 = load i32, i32* %n, align 4, !dbg !16839
  %inc436 = add nsw i32 %200, 1, !dbg !16839
  store i32 %inc436, i32* %n, align 4, !dbg !16839
  br label %for.cond, !dbg !16840, !llvm.loop !16841

for.end437:                                       ; preds = %for.cond
  %201 = load i32, i32* %count, align 4, !dbg !16843
  %cmp438 = icmp ne i32 %201, 0, !dbg !16845
  br i1 %cmp438, label %if.then440, label %if.else442, !dbg !16846

if.then440:                                       ; preds = %for.end437
  %202 = load float*, float** %fc.addr, align 8, !dbg !16847
  %203 = load i32, i32* %count, align 4, !dbg !16848
  %conv441 = sitofp i32 %203 to float, !dbg !16848
  %div = fdiv float 1.000000e+00, %conv441, !dbg !16849
  call void @mul_v3_fl(float* %202, float %div), !dbg !16850
  br label %if.end451, !dbg !16850

if.else442:                                       ; preds = %for.end437
  %204 = load i32, i32* %count_flip, align 4, !dbg !16851
  %cmp443 = icmp ne i32 %204, 0, !dbg !16853
  br i1 %cmp443, label %if.then445, label %if.else449, !dbg !16854

if.then445:                                       ; preds = %if.else442
  %205 = load float*, float** %fc.addr, align 8, !dbg !16855
  %arraydecay446 = getelementptr inbounds [3 x float], [3 x float]* %fc_flip, i64 0, i64 0, !dbg !16856
  %206 = load i32, i32* %count_flip, align 4, !dbg !16857
  %conv447 = sitofp i32 %206 to float, !dbg !16857
  %div448 = fdiv float 1.000000e+00, %conv447, !dbg !16858
  call void @mul_v3_v3fl(float* %205, float* %arraydecay446, float %div448), !dbg !16859
  br label %if.end450, !dbg !16859

if.else449:                                       ; preds = %if.else442
  %207 = load float*, float** %fc.addr, align 8, !dbg !16860
  call void @zero_v3(float* %207), !dbg !16861
  br label %if.end450

if.end450:                                        ; preds = %if.else449, %if.then445
  br label %if.end451

if.end451:                                        ; preds = %if.end450, %if.then440
  ret void, !dbg !16862
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @plane_point_side_flip(float* %co, float* %plane_normal, float* %plane_center, i32 %flip) #0 !dbg !16863 {
entry:
  %co.addr = alloca float*, align 8
  %plane_normal.addr = alloca float*, align 8
  %plane_center.addr = alloca float*, align 8
  %flip.addr = alloca i32, align 4
  %delta = alloca [3 x float], align 4
  %d = alloca float, align 4
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !16866, metadata !DIExpression()), !dbg !16867
  store float* %plane_normal, float** %plane_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_normal.addr, metadata !16868, metadata !DIExpression()), !dbg !16869
  store float* %plane_center, float** %plane_center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_center.addr, metadata !16870, metadata !DIExpression()), !dbg !16871
  store i32 %flip, i32* %flip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flip.addr, metadata !16872, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.declare(metadata [3 x float]* %delta, metadata !16874, metadata !DIExpression()), !dbg !16875
  call void @llvm.dbg.declare(metadata float* %d, metadata !16876, metadata !DIExpression()), !dbg !16877
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16878
  %0 = load float*, float** %co.addr, align 8, !dbg !16879
  %1 = load float*, float** %plane_center.addr, align 8, !dbg !16880
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !16881
  %2 = load float*, float** %plane_normal.addr, align 8, !dbg !16882
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16883
  %call = call float @dot_v3v3(float* %2, float* %arraydecay1), !dbg !16884
  store float %call, float* %d, align 4, !dbg !16885
  %3 = load i32, i32* %flip.addr, align 4, !dbg !16886
  %tobool = icmp ne i32 %3, 0, !dbg !16886
  br i1 %tobool, label %if.then, label %if.end, !dbg !16888

if.then:                                          ; preds = %entry
  %4 = load float, float* %d, align 4, !dbg !16889
  %fneg = fneg float %4, !dbg !16890
  store float %fneg, float* %d, align 4, !dbg !16891
  br label %if.end, !dbg !16892

if.end:                                           ; preds = %if.then, %entry
  %5 = load float, float* %d, align 4, !dbg !16893
  %cmp = fcmp ole float %5, 0.000000e+00, !dbg !16894
  %conv = zext i1 %cmp to i32, !dbg !16894
  ret i32 %conv, !dbg !16895
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_brush_test_cube(%struct.SculptBrushTest* %test, float* %co, [4 x float]* %local) #0 !dbg !16896 {
entry:
  %retval = alloca i8, align 1
  %test.addr = alloca %struct.SculptBrushTest*, align 8
  %co.addr = alloca float*, align 8
  %local.addr = alloca [4 x float]*, align 8
  %side = alloca float, align 4
  %local_co = alloca [3 x float], align 4
  %p = alloca float, align 4
  store %struct.SculptBrushTest* %test, %struct.SculptBrushTest** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest** %test.addr, metadata !16899, metadata !DIExpression()), !dbg !16900
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  store [4 x float]* %local, [4 x float]** %local.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %local.addr, metadata !16903, metadata !DIExpression()), !dbg !16904
  call void @llvm.dbg.declare(metadata float* %side, metadata !16905, metadata !DIExpression()), !dbg !16906
  store float 0x3FE6A09E60000000, float* %side, align 4, !dbg !16906
  call void @llvm.dbg.declare(metadata [3 x float]* %local_co, metadata !16907, metadata !DIExpression()), !dbg !16908
  %0 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16909
  %1 = load float*, float** %co.addr, align 8, !dbg !16911
  %call = call zeroext i8 @sculpt_brush_test_clipping(%struct.SculptBrushTest* %0, float* %1), !dbg !16912
  %tobool = icmp ne i8 %call, 0, !dbg !16912
  br i1 %tobool, label %if.then, label %if.end, !dbg !16913

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16914
  br label %return, !dbg !16914

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 0, !dbg !16916
  %2 = load [4 x float]*, [4 x float]** %local.addr, align 8, !dbg !16917
  %3 = load float*, float** %co.addr, align 8, !dbg !16918
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %2, float* %3), !dbg !16919
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 0, !dbg !16920
  %4 = load float, float* %arrayidx, align 4, !dbg !16920
  %5 = call float @llvm.fabs.f32(float %4), !dbg !16921
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 0, !dbg !16922
  store float %5, float* %arrayidx1, align 4, !dbg !16923
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 1, !dbg !16924
  %6 = load float, float* %arrayidx2, align 4, !dbg !16924
  %7 = call float @llvm.fabs.f32(float %6), !dbg !16925
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 1, !dbg !16926
  store float %7, float* %arrayidx3, align 4, !dbg !16927
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 2, !dbg !16928
  %8 = load float, float* %arrayidx4, align 4, !dbg !16928
  %9 = call float @llvm.fabs.f32(float %8), !dbg !16929
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 2, !dbg !16930
  store float %9, float* %arrayidx5, align 4, !dbg !16931
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 0, !dbg !16932
  %10 = load float, float* %arrayidx6, align 4, !dbg !16932
  %11 = load float, float* %side, align 4, !dbg !16934
  %cmp = fcmp ole float %10, %11, !dbg !16935
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16936

land.lhs.true:                                    ; preds = %if.end
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 1, !dbg !16937
  %12 = load float, float* %arrayidx7, align 4, !dbg !16937
  %13 = load float, float* %side, align 4, !dbg !16938
  %cmp8 = fcmp ole float %12, %13, !dbg !16939
  br i1 %cmp8, label %land.lhs.true9, label %if.else, !dbg !16940

land.lhs.true9:                                   ; preds = %land.lhs.true
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 2, !dbg !16941
  %14 = load float, float* %arrayidx10, align 4, !dbg !16941
  %15 = load float, float* %side, align 4, !dbg !16942
  %cmp11 = fcmp ole float %14, %15, !dbg !16943
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !16944

if.then12:                                        ; preds = %land.lhs.true9
  call void @llvm.dbg.declare(metadata float* %p, metadata !16945, metadata !DIExpression()), !dbg !16947
  store float 4.000000e+00, float* %p, align 4, !dbg !16947
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 0, !dbg !16948
  %16 = load float, float* %arrayidx13, align 4, !dbg !16948
  %17 = load float, float* %p, align 4, !dbg !16949
  %call14 = call float @powf(float %16, float %17) #5, !dbg !16950
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 1, !dbg !16951
  %18 = load float, float* %arrayidx15, align 4, !dbg !16951
  %19 = load float, float* %p, align 4, !dbg !16952
  %call16 = call float @powf(float %18, float %19) #5, !dbg !16953
  %add = fadd float %call14, %call16, !dbg !16954
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %local_co, i64 0, i64 2, !dbg !16955
  %20 = load float, float* %arrayidx17, align 4, !dbg !16955
  %21 = load float, float* %p, align 4, !dbg !16956
  %call18 = call float @powf(float %20, float %21) #5, !dbg !16957
  %add19 = fadd float %add, %call18, !dbg !16958
  %22 = load float, float* %side, align 4, !dbg !16959
  %23 = load float, float* %p, align 4, !dbg !16960
  %call20 = call float @powf(float %22, float %23) #5, !dbg !16961
  %div = fdiv float %add19, %call20, !dbg !16962
  %24 = load %struct.SculptBrushTest*, %struct.SculptBrushTest** %test.addr, align 8, !dbg !16963
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %24, i32 0, i32 2, !dbg !16964
  store float %div, float* %dist, align 8, !dbg !16965
  store i8 1, i8* %retval, align 1, !dbg !16966
  br label %return, !dbg !16966

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true, %if.end
  store i8 0, i8* %retval, align 1, !dbg !16967
  br label %return, !dbg !16967

return:                                           ; preds = %if.else, %if.then12, %if.then
  %25 = load i8, i8* %retval, align 1, !dbg !16969
  ret i8 %25, !dbg !16969
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @plane_point_side(float* %co, float* %plane_normal, float* %plane_center) #0 !dbg !16970 {
entry:
  %co.addr = alloca float*, align 8
  %plane_normal.addr = alloca float*, align 8
  %plane_center.addr = alloca float*, align 8
  %delta = alloca [3 x float], align 4
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !16973, metadata !DIExpression()), !dbg !16974
  store float* %plane_normal, float** %plane_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_normal.addr, metadata !16975, metadata !DIExpression()), !dbg !16976
  store float* %plane_center, float** %plane_center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %plane_center.addr, metadata !16977, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.declare(metadata [3 x float]* %delta, metadata !16979, metadata !DIExpression()), !dbg !16980
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16981
  %0 = load float*, float** %co.addr, align 8, !dbg !16982
  %1 = load float*, float** %plane_center.addr, align 8, !dbg !16983
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !16984
  %2 = load float*, float** %plane_normal.addr, align 8, !dbg !16985
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16986
  %call = call float @dot_v3v3(float* %2, float* %arraydecay1), !dbg !16987
  %cmp = fcmp ole float %call, 0.000000e+00, !dbg !16988
  %conv = zext i1 %cmp to i32, !dbg !16988
  ret i32 %conv, !dbg !16989
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mask_brush_draw(%struct.Sculpt* %sd, %struct.Object* %ob, %struct.PBVHNode** %nodes, i32 %totnode) #0 !dbg !16990 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nodes.addr = alloca %struct.PBVHNode**, align 8
  %totnode.addr = alloca i32, align 4
  %ss = alloca %struct.SculptSession*, align 8
  %brush = alloca %struct.Brush*, align 8
  %bstrength = alloca float, align 4
  %n = alloca i32, align 4
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %fade = alloca float, align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !16991, metadata !DIExpression()), !dbg !16992
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16993, metadata !DIExpression()), !dbg !16994
  store %struct.PBVHNode** %nodes, %struct.PBVHNode*** %nodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes.addr, metadata !16995, metadata !DIExpression()), !dbg !16996
  store i32 %totnode, i32* %totnode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totnode.addr, metadata !16997, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !16999, metadata !DIExpression()), !dbg !17000
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !17001
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !17002
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !17002
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !17000
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !17003, metadata !DIExpression()), !dbg !17004
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17005
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %2, i32 0, i32 0, !dbg !17006
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !17007
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !17004
  call void @llvm.dbg.declare(metadata float* %bstrength, metadata !17008, metadata !DIExpression()), !dbg !17009
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !17010
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !17011
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !17011
  %bstrength1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 19, !dbg !17012
  %5 = load float, float* %bstrength1, align 8, !dbg !17012
  store float %5, float* %bstrength, align 4, !dbg !17009
  call void @llvm.dbg.declare(metadata i32* %n, metadata !17013, metadata !DIExpression()), !dbg !17014
  store i32 0, i32* %n, align 4, !dbg !17015
  br label %for.cond, !dbg !17017

for.cond:                                         ; preds = %for.inc173, %entry
  %6 = load i32, i32* %n, align 4, !dbg !17018
  %7 = load i32, i32* %totnode.addr, align 4, !dbg !17020
  %cmp = icmp slt i32 %6, %7, !dbg !17021
  br i1 %cmp, label %for.body, label %for.end175, !dbg !17022

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !17023, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !17026, metadata !DIExpression()), !dbg !17027
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !17028
  call void @sculpt_brush_test_init(%struct.SculptSession* %8, %struct.SculptBrushTest* %test), !dbg !17029
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !17030
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 15, !dbg !17030
  %10 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !17030
  %11 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes.addr, align 8, !dbg !17030
  %12 = load i32, i32* %n, align 4, !dbg !17030
  %idxprom = sext i32 %12 to i64, !dbg !17030
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %11, i64 %idxprom, !dbg !17030
  %13 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !17030
  call void @pbvh_vertex_iter_init(%struct.PBVH* %10, %struct.PBVHNode* %13, %struct.PBVHVertexIter* %vd, i32 1), !dbg !17030
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17031
  store i32 0, i32* %i, align 4, !dbg !17031
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17031
  store i32 0, i32* %g, align 8, !dbg !17031
  br label %for.cond2, !dbg !17031

for.cond2:                                        ; preds = %for.inc169, %for.body
  %g3 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17033
  %14 = load i32, i32* %g3, align 8, !dbg !17033
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !17033
  %15 = load i32, i32* %totgrid, align 8, !dbg !17033
  %cmp4 = icmp slt i32 %14, %15, !dbg !17033
  br i1 %cmp4, label %for.body5, label %for.end172, !dbg !17031

for.body5:                                        ; preds = %for.cond2
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17035
  %16 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !17035
  %tobool = icmp ne %struct.CCGElem** %16, null, !dbg !17035
  br i1 %tobool, label %if.then, label %if.else, !dbg !17038

if.then:                                          ; preds = %for.body5
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17039
  %17 = load i32, i32* %gridsize, align 4, !dbg !17039
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17039
  store i32 %17, i32* %width, align 4, !dbg !17039
  %gridsize6 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17039
  %18 = load i32, i32* %gridsize6, align 4, !dbg !17039
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17039
  store i32 %18, i32* %height, align 8, !dbg !17039
  %grids7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17039
  %19 = load %struct.CCGElem**, %struct.CCGElem*** %grids7, align 8, !dbg !17039
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17039
  %20 = load i32*, i32** %grid_indices, align 8, !dbg !17039
  %g8 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17039
  %21 = load i32, i32* %g8, align 8, !dbg !17039
  %idxprom9 = sext i32 %21 to i64, !dbg !17039
  %arrayidx10 = getelementptr inbounds i32, i32* %20, i64 %idxprom9, !dbg !17039
  %22 = load i32, i32* %arrayidx10, align 4, !dbg !17039
  %idxprom11 = sext i32 %22 to i64, !dbg !17039
  %arrayidx12 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %19, i64 %idxprom11, !dbg !17039
  %23 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx12, align 8, !dbg !17039
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17039
  store %struct.CCGElem* %23, %struct.CCGElem** %grid, align 8, !dbg !17039
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !17041
  %24 = load i32**, i32*** %grid_hidden, align 8, !dbg !17041
  %grid_indices13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17041
  %25 = load i32*, i32** %grid_indices13, align 8, !dbg !17041
  %g14 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17041
  %26 = load i32, i32* %g14, align 8, !dbg !17041
  %idxprom15 = sext i32 %26 to i64, !dbg !17041
  %arrayidx16 = getelementptr inbounds i32, i32* %25, i64 %idxprom15, !dbg !17041
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !17041
  %idxprom17 = sext i32 %27 to i64, !dbg !17041
  %arrayidx18 = getelementptr inbounds i32*, i32** %24, i64 %idxprom17, !dbg !17041
  %28 = load i32*, i32** %arrayidx18, align 8, !dbg !17041
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17041
  store i32* %28, i32** %gh, align 8, !dbg !17041
  br label %if.end, !dbg !17039

if.else:                                          ; preds = %for.body5
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !17043
  %29 = load i32, i32* %totvert, align 8, !dbg !17043
  %width19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17043
  store i32 %29, i32* %width19, align 4, !dbg !17043
  %height20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17043
  store i32 1, i32* %height20, align 8, !dbg !17043
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17045
  store i32 0, i32* %gy, align 8, !dbg !17045
  br label %for.cond21, !dbg !17045

for.cond21:                                       ; preds = %for.inc165, %if.end
  %gy22 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17047
  %30 = load i32, i32* %gy22, align 8, !dbg !17047
  %height23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17047
  %31 = load i32, i32* %height23, align 8, !dbg !17047
  %cmp24 = icmp slt i32 %30, %31, !dbg !17047
  br i1 %cmp24, label %for.body25, label %for.end168, !dbg !17045

for.body25:                                       ; preds = %for.cond21
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17049
  store i32 0, i32* %gx, align 4, !dbg !17049
  br label %for.cond26, !dbg !17049

for.cond26:                                       ; preds = %for.inc, %for.body25
  %gx27 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17052
  %32 = load i32, i32* %gx27, align 4, !dbg !17052
  %width28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17052
  %33 = load i32, i32* %width28, align 4, !dbg !17052
  %cmp29 = icmp slt i32 %32, %33, !dbg !17052
  br i1 %cmp29, label %for.body30, label %for.end, !dbg !17049

for.body30:                                       ; preds = %for.cond26
  %grid31 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17054
  %34 = load %struct.CCGElem*, %struct.CCGElem** %grid31, align 8, !dbg !17054
  %tobool32 = icmp ne %struct.CCGElem* %34, null, !dbg !17054
  br i1 %tobool32, label %if.then33, label %if.else67, !dbg !17057

if.then33:                                        ; preds = %for.body30
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17058
  %35 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !17058
  %grid34 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17058
  %36 = load %struct.CCGElem*, %struct.CCGElem** %grid34, align 8, !dbg !17058
  %call35 = call float* @CCG_elem_co(%struct.CCGKey* %35, %struct.CCGElem* %36), !dbg !17058
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17058
  store float* %call35, float** %co, align 8, !dbg !17058
  %key36 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17058
  %37 = load %struct.CCGKey*, %struct.CCGKey** %key36, align 8, !dbg !17058
  %grid37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17058
  %38 = load %struct.CCGElem*, %struct.CCGElem** %grid37, align 8, !dbg !17058
  %call38 = call float* @CCG_elem_no(%struct.CCGKey* %37, %struct.CCGElem* %38), !dbg !17058
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17058
  store float* %call38, float** %fno, align 8, !dbg !17058
  %key39 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17058
  %39 = load %struct.CCGKey*, %struct.CCGKey** %key39, align 8, !dbg !17058
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %39, i32 0, i32 9, !dbg !17058
  %40 = load i32, i32* %has_mask, align 4, !dbg !17058
  %tobool40 = icmp ne i32 %40, 0, !dbg !17058
  br i1 %tobool40, label %cond.true, label %cond.false, !dbg !17058

cond.true:                                        ; preds = %if.then33
  %key41 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17058
  %41 = load %struct.CCGKey*, %struct.CCGKey** %key41, align 8, !dbg !17058
  %grid42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17058
  %42 = load %struct.CCGElem*, %struct.CCGElem** %grid42, align 8, !dbg !17058
  %call43 = call float* @CCG_elem_mask(%struct.CCGKey* %41, %struct.CCGElem* %42), !dbg !17058
  br label %cond.end, !dbg !17058

cond.false:                                       ; preds = %if.then33
  br label %cond.end, !dbg !17058

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call43, %cond.true ], [ null, %cond.false ], !dbg !17058
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17058
  store float* %cond, float** %mask, align 8, !dbg !17058
  %key44 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17058
  %43 = load %struct.CCGKey*, %struct.CCGKey** %key44, align 8, !dbg !17058
  %grid45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17058
  %44 = load %struct.CCGElem*, %struct.CCGElem** %grid45, align 8, !dbg !17058
  %call46 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %43, %struct.CCGElem* %44), !dbg !17058
  %grid47 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17058
  store %struct.CCGElem* %call46, %struct.CCGElem** %grid47, align 8, !dbg !17058
  %gh48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17060
  %45 = load i32*, i32** %gh48, align 8, !dbg !17060
  %tobool49 = icmp ne i32* %45, null, !dbg !17060
  br i1 %tobool49, label %if.then50, label %if.end66, !dbg !17058

if.then50:                                        ; preds = %cond.end
  %gh51 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17062
  %46 = load i32*, i32** %gh51, align 8, !dbg !17062
  %gy52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17062
  %47 = load i32, i32* %gy52, align 8, !dbg !17062
  %gridsize53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17062
  %48 = load i32, i32* %gridsize53, align 4, !dbg !17062
  %mul = mul nsw i32 %47, %48, !dbg !17062
  %gx54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17062
  %49 = load i32, i32* %gx54, align 4, !dbg !17062
  %add = add nsw i32 %mul, %49, !dbg !17062
  %shr = ashr i32 %add, 5, !dbg !17062
  %idxprom55 = sext i32 %shr to i64, !dbg !17062
  %arrayidx56 = getelementptr inbounds i32, i32* %46, i64 %idxprom55, !dbg !17062
  %50 = load i32, i32* %arrayidx56, align 4, !dbg !17062
  %gy57 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17062
  %51 = load i32, i32* %gy57, align 8, !dbg !17062
  %gridsize58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17062
  %52 = load i32, i32* %gridsize58, align 4, !dbg !17062
  %mul59 = mul nsw i32 %51, %52, !dbg !17062
  %gx60 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17062
  %53 = load i32, i32* %gx60, align 4, !dbg !17062
  %add61 = add nsw i32 %mul59, %53, !dbg !17062
  %and = and i32 %add61, 31, !dbg !17062
  %shl = shl i32 1, %and, !dbg !17062
  %and62 = and i32 %50, %shl, !dbg !17062
  %tobool63 = icmp ne i32 %and62, 0, !dbg !17062
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !17065

if.then64:                                        ; preds = %if.then50
  br label %for.inc, !dbg !17062

if.end65:                                         ; preds = %if.then50
  br label %if.end66, !dbg !17065

if.end66:                                         ; preds = %if.end65, %cond.end
  br label %if.end128, !dbg !17058

if.else67:                                        ; preds = %for.body30
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17066
  %54 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !17066
  %tobool68 = icmp ne %struct.MVert* %54, null, !dbg !17066
  br i1 %tobool68, label %if.then69, label %if.else98, !dbg !17054

if.then69:                                        ; preds = %if.else67
  %mverts70 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17068
  %55 = load %struct.MVert*, %struct.MVert** %mverts70, align 8, !dbg !17068
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17068
  %56 = load i32*, i32** %vert_indices, align 8, !dbg !17068
  %gx71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17068
  %57 = load i32, i32* %gx71, align 4, !dbg !17068
  %idxprom72 = sext i32 %57 to i64, !dbg !17068
  %arrayidx73 = getelementptr inbounds i32, i32* %56, i64 %idxprom72, !dbg !17068
  %58 = load i32, i32* %arrayidx73, align 4, !dbg !17068
  %idxprom74 = sext i32 %58 to i64, !dbg !17068
  %arrayidx75 = getelementptr inbounds %struct.MVert, %struct.MVert* %55, i64 %idxprom74, !dbg !17068
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17068
  store %struct.MVert* %arrayidx75, %struct.MVert** %mvert, align 8, !dbg !17068
  %mvert76 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17070
  %59 = load %struct.MVert*, %struct.MVert** %mvert76, align 8, !dbg !17070
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %59, i32 0, i32 2, !dbg !17070
  %60 = load i8, i8* %flag, align 2, !dbg !17070
  %conv = zext i8 %60 to i32, !dbg !17070
  %and77 = and i32 %conv, 16, !dbg !17070
  %tobool78 = icmp ne i32 %and77, 0, !dbg !17070
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17068

if.then79:                                        ; preds = %if.then69
  br label %for.inc, !dbg !17070

if.end80:                                         ; preds = %if.then69
  %mvert81 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17068
  %61 = load %struct.MVert*, %struct.MVert** %mvert81, align 8, !dbg !17068
  %co82 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i32 0, i32 0, !dbg !17068
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co82, i64 0, i64 0, !dbg !17068
  %co83 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17068
  store float* %arraydecay, float** %co83, align 8, !dbg !17068
  %mvert84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17068
  %62 = load %struct.MVert*, %struct.MVert** %mvert84, align 8, !dbg !17068
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %62, i32 0, i32 1, !dbg !17068
  %arraydecay85 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !17068
  %no86 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17068
  store i16* %arraydecay85, i16** %no86, align 8, !dbg !17068
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17072
  %63 = load float*, float** %vmask, align 8, !dbg !17072
  %tobool87 = icmp ne float* %63, null, !dbg !17072
  br i1 %tobool87, label %if.then88, label %if.end97, !dbg !17068

if.then88:                                        ; preds = %if.end80
  %vmask89 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17072
  %64 = load float*, float** %vmask89, align 8, !dbg !17072
  %vert_indices90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17072
  %65 = load i32*, i32** %vert_indices90, align 8, !dbg !17072
  %gx91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17072
  %66 = load i32, i32* %gx91, align 4, !dbg !17072
  %idxprom92 = sext i32 %66 to i64, !dbg !17072
  %arrayidx93 = getelementptr inbounds i32, i32* %65, i64 %idxprom92, !dbg !17072
  %67 = load i32, i32* %arrayidx93, align 4, !dbg !17072
  %idxprom94 = sext i32 %67 to i64, !dbg !17072
  %arrayidx95 = getelementptr inbounds float, float* %64, i64 %idxprom94, !dbg !17072
  %mask96 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17072
  store float* %arrayidx95, float** %mask96, align 8, !dbg !17072
  br label %if.end97, !dbg !17072

if.end97:                                         ; preds = %if.then88, %if.end80
  br label %if.end127, !dbg !17068

if.else98:                                        ; preds = %if.else67
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17074
  %call99 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !17074
  %tobool100 = icmp ne i8 %call99, 0, !dbg !17074
  br i1 %tobool100, label %if.else105, label %if.then101, !dbg !17077

if.then101:                                       ; preds = %if.else98
  %bm_unique_verts102 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17078
  %call103 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts102), !dbg !17078
  %68 = bitcast i8* %call103 to %struct.BMVert*, !dbg !17078
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17078
  store %struct.BMVert* %68, %struct.BMVert** %bm_vert, align 8, !dbg !17078
  %bm_unique_verts104 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17078
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts104), !dbg !17078
  br label %if.end109, !dbg !17078

if.else105:                                       ; preds = %if.else98
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17080
  %call106 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !17080
  %69 = bitcast i8* %call106 to %struct.BMVert*, !dbg !17080
  %bm_vert107 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17080
  store %struct.BMVert* %69, %struct.BMVert** %bm_vert107, align 8, !dbg !17080
  %bm_other_verts108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17080
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts108), !dbg !17080
  br label %if.end109

if.end109:                                        ; preds = %if.else105, %if.then101
  %bm_vert110 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17082
  %70 = load %struct.BMVert*, %struct.BMVert** %bm_vert110, align 8, !dbg !17082
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %70, i32 0, i32 0, !dbg !17082
  %call111 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !17082
  %conv112 = zext i8 %call111 to i32, !dbg !17082
  %tobool113 = icmp ne i32 %conv112, 0, !dbg !17082
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !17077

if.then114:                                       ; preds = %if.end109
  br label %for.inc, !dbg !17082

if.end115:                                        ; preds = %if.end109
  %bm_vert116 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17077
  %71 = load %struct.BMVert*, %struct.BMVert** %bm_vert116, align 8, !dbg !17077
  %co117 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %71, i32 0, i32 2, !dbg !17077
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %co117, i64 0, i64 0, !dbg !17077
  %co119 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17077
  store float* %arraydecay118, float** %co119, align 8, !dbg !17077
  %bm_vert120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17077
  %72 = load %struct.BMVert*, %struct.BMVert** %bm_vert120, align 8, !dbg !17077
  %no121 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %72, i32 0, i32 3, !dbg !17077
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %no121, i64 0, i64 0, !dbg !17077
  %fno123 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17077
  store float* %arraydecay122, float** %fno123, align 8, !dbg !17077
  %bm_vert124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17077
  %73 = load %struct.BMVert*, %struct.BMVert** %bm_vert124, align 8, !dbg !17077
  %head125 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %73, i32 0, i32 0, !dbg !17077
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head125, i32 0, i32 0, !dbg !17077
  %74 = load i8*, i8** %data, align 8, !dbg !17077
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !17077
  %75 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !17077
  %idx.ext = sext i32 %75 to i64, !dbg !17077
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !17077
  %76 = bitcast i8* %add.ptr to float*, !dbg !17077
  %mask126 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17077
  store float* %76, float** %mask126, align 8, !dbg !17077
  br label %if.end127

if.end127:                                        ; preds = %if.end115, %if.end97
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end66
  %co129 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17084
  %77 = load float*, float** %co129, align 8, !dbg !17084
  %call130 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %77), !dbg !17087
  %tobool131 = icmp ne i8 %call130, 0, !dbg !17087
  br i1 %tobool131, label %if.then132, label %if.end161, !dbg !17088

if.then132:                                       ; preds = %if.end128
  call void @llvm.dbg.declare(metadata float* %fade, metadata !17089, metadata !DIExpression()), !dbg !17091
  %78 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !17092
  %79 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !17093
  %co133 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17094
  %80 = load float*, float** %co133, align 8, !dbg !17094
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !17095
  %81 = load float, float* %dist, align 8, !dbg !17095
  %no134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17096
  %82 = load i16*, i16** %no134, align 8, !dbg !17096
  %fno135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17097
  %83 = load float*, float** %fno135, align 8, !dbg !17097
  %call136 = call float @tex_strength(%struct.SculptSession* %78, %struct.Brush* %79, float* %80, float %81, i16* %82, float* %83, float 0.000000e+00), !dbg !17098
  store float %call136, float* %fade, align 4, !dbg !17091
  %84 = load float, float* %fade, align 4, !dbg !17099
  %85 = load float, float* %bstrength, align 4, !dbg !17100
  %mul137 = fmul float %84, %85, !dbg !17101
  %mask138 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17102
  %86 = load float*, float** %mask138, align 8, !dbg !17102
  %87 = load float, float* %86, align 4, !dbg !17103
  %add139 = fadd float %87, %mul137, !dbg !17103
  store float %add139, float* %86, align 4, !dbg !17103
  %mask140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17104
  %88 = load float*, float** %mask140, align 8, !dbg !17104
  %89 = load float, float* %88, align 4, !dbg !17104
  %cmp141 = fcmp olt float %89, 0.000000e+00, !dbg !17104
  br i1 %cmp141, label %if.then143, label %if.else145, !dbg !17107

if.then143:                                       ; preds = %if.then132
  %mask144 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17104
  %90 = load float*, float** %mask144, align 8, !dbg !17104
  store float 0.000000e+00, float* %90, align 4, !dbg !17104
  br label %if.end152, !dbg !17104

if.else145:                                       ; preds = %if.then132
  %mask146 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17108
  %91 = load float*, float** %mask146, align 8, !dbg !17108
  %92 = load float, float* %91, align 4, !dbg !17108
  %cmp147 = fcmp ogt float %92, 1.000000e+00, !dbg !17108
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !17104

if.then149:                                       ; preds = %if.else145
  %mask150 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17108
  %93 = load float*, float** %mask150, align 8, !dbg !17108
  store float 1.000000e+00, float* %93, align 4, !dbg !17108
  br label %if.end151, !dbg !17108

if.end151:                                        ; preds = %if.then149, %if.else145
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then143
  %mvert153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17110
  %94 = load %struct.MVert*, %struct.MVert** %mvert153, align 8, !dbg !17110
  %tobool154 = icmp ne %struct.MVert* %94, null, !dbg !17112
  br i1 %tobool154, label %if.then155, label %if.end160, !dbg !17113

if.then155:                                       ; preds = %if.end152
  %mvert156 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17114
  %95 = load %struct.MVert*, %struct.MVert** %mvert156, align 8, !dbg !17114
  %flag157 = getelementptr inbounds %struct.MVert, %struct.MVert* %95, i32 0, i32 2, !dbg !17115
  %96 = load i8, i8* %flag157, align 2, !dbg !17116
  %conv158 = zext i8 %96 to i32, !dbg !17116
  %or = or i32 %conv158, 128, !dbg !17116
  %conv159 = trunc i32 %or to i8, !dbg !17116
  store i8 %conv159, i8* %flag157, align 2, !dbg !17116
  br label %if.end160, !dbg !17117

if.end160:                                        ; preds = %if.then155, %if.end152
  br label %if.end161, !dbg !17118

if.end161:                                        ; preds = %if.end160, %if.end128
  br label %for.inc, !dbg !17119

for.inc:                                          ; preds = %if.end161, %if.then114, %if.then79, %if.then64
  %gx162 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17052
  %97 = load i32, i32* %gx162, align 4, !dbg !17052
  %inc = add nsw i32 %97, 1, !dbg !17052
  store i32 %inc, i32* %gx162, align 4, !dbg !17052
  %i163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17052
  %98 = load i32, i32* %i163, align 4, !dbg !17052
  %inc164 = add nsw i32 %98, 1, !dbg !17052
  store i32 %inc164, i32* %i163, align 4, !dbg !17052
  br label %for.cond26, !dbg !17052, !llvm.loop !17120

for.end:                                          ; preds = %for.cond26
  br label %for.inc165, !dbg !17122

for.inc165:                                       ; preds = %for.end
  %gy166 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17047
  %99 = load i32, i32* %gy166, align 8, !dbg !17047
  %inc167 = add nsw i32 %99, 1, !dbg !17047
  store i32 %inc167, i32* %gy166, align 8, !dbg !17047
  br label %for.cond21, !dbg !17047, !llvm.loop !17123

for.end168:                                       ; preds = %for.cond21
  br label %for.inc169, !dbg !17125

for.inc169:                                       ; preds = %for.end168
  %g170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17033
  %100 = load i32, i32* %g170, align 8, !dbg !17033
  %inc171 = add nsw i32 %100, 1, !dbg !17033
  store i32 %inc171, i32* %g170, align 8, !dbg !17033
  br label %for.cond2, !dbg !17033, !llvm.loop !17126

for.end172:                                       ; preds = %for.cond2
  br label %for.inc173, !dbg !17128

for.inc173:                                       ; preds = %for.end172
  %101 = load i32, i32* %n, align 4, !dbg !17129
  %inc174 = add nsw i32 %101, 1, !dbg !17129
  store i32 %inc174, i32* %n, align 4, !dbg !17129
  br label %for.cond, !dbg !17130, !llvm.loop !17131

for.end175:                                       ; preds = %for.cond
  ret void, !dbg !17133
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_multires_smooth_brush(%struct.Sculpt* %sd, %struct.SculptSession* %ss, %struct.PBVHNode* %node, float %bstrength, i32 %smooth_mask) #0 !dbg !17134 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %node.addr = alloca %struct.PBVHNode*, align 8
  %bstrength.addr = alloca float, align 4
  %smooth_mask.addr = alloca i32, align 4
  %brush = alloca %struct.Brush*, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %griddata = alloca %struct.CCGElem**, align 8
  %data = alloca %struct.CCGElem*, align 8
  %key = alloca %struct.CCGKey, align 4
  %gridadj = alloca %struct.DMGridAdjacency*, align 8
  %adj = alloca %struct.DMGridAdjacency*, align 8
  %tmpgrid_co = alloca [3 x float]*, align 8
  %tmprow_co = alloca [3 x float]*, align 8
  %tmpgrid_mask = alloca float*, align 8
  %tmprow_mask = alloca float*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %v4 = alloca i32, align 4
  %thread_num = alloca i32, align 4
  %grid_hidden = alloca i32**, align 8
  %grid_indices = alloca i32*, align 8
  %totgrid = alloca i32, align 4
  %gridsize = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %gi = alloca i32, align 4
  %gh = alloca i32*, align 8
  %tmp = alloca float, align 4
  %tmp92 = alloca [3 x float], align 4
  %co = alloca float*, align 8
  %fno = alloca float*, align 8
  %mask = alloca float*, align 8
  %index = alloca i32, align 4
  %strength_mask = alloca float, align 4
  %fade = alloca float, align 4
  %n = alloca float, align 4
  %avg = alloca float*, align 8
  %val = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !17137, metadata !DIExpression()), !dbg !17138
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !17139, metadata !DIExpression()), !dbg !17140
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !17141, metadata !DIExpression()), !dbg !17142
  store float %bstrength, float* %bstrength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bstrength.addr, metadata !17143, metadata !DIExpression()), !dbg !17144
  store i32 %smooth_mask, i32* %smooth_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_mask.addr, metadata !17145, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !17147, metadata !DIExpression()), !dbg !17148
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17149
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !17150
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !17151
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !17148
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !17152, metadata !DIExpression()), !dbg !17153
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %griddata, metadata !17154, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %data, metadata !17157, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !17159, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.declare(metadata %struct.DMGridAdjacency** %gridadj, metadata !17161, metadata !DIExpression()), !dbg !17162
  call void @llvm.dbg.declare(metadata %struct.DMGridAdjacency** %adj, metadata !17163, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.declare(metadata [3 x float]** %tmpgrid_co, metadata !17165, metadata !DIExpression()), !dbg !17166
  call void @llvm.dbg.declare(metadata [3 x float]** %tmprow_co, metadata !17167, metadata !DIExpression()), !dbg !17168
  call void @llvm.dbg.declare(metadata float** %tmpgrid_mask, metadata !17169, metadata !DIExpression()), !dbg !17170
  call void @llvm.dbg.declare(metadata float** %tmprow_mask, metadata !17171, metadata !DIExpression()), !dbg !17172
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !17173, metadata !DIExpression()), !dbg !17174
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !17175, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !17177, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.declare(metadata i32* %v4, metadata !17179, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.declare(metadata i32* %thread_num, metadata !17181, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.declare(metadata i32*** %grid_hidden, metadata !17183, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.declare(metadata i32** %grid_indices, metadata !17185, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.declare(metadata i32* %totgrid, metadata !17187, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !17189, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17191, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17193, metadata !DIExpression()), !dbg !17194
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17195, metadata !DIExpression()), !dbg !17196
  %1 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17197
  call void @sculpt_brush_test_init(%struct.SculptSession* %1, %struct.SculptBrushTest* %test), !dbg !17198
  %2 = load float, float* %bstrength.addr, align 4, !dbg !17199
  %cmp = fcmp olt float %2, 0.000000e+00, !dbg !17199
  br i1 %cmp, label %if.then, label %if.else, !dbg !17202

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %bstrength.addr, align 4, !dbg !17199
  br label %if.end3, !dbg !17199

if.else:                                          ; preds = %entry
  %3 = load float, float* %bstrength.addr, align 4, !dbg !17203
  %cmp1 = fcmp ogt float %3, 1.000000e+00, !dbg !17203
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !17199

if.then2:                                         ; preds = %if.else
  store float 1.000000e+00, float* %bstrength.addr, align 4, !dbg !17203
  br label %if.end, !dbg !17203

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17205
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 15, !dbg !17206
  %5 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !17206
  %6 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !17207
  call void @BKE_pbvh_node_get_grids(%struct.PBVH* %5, %struct.PBVHNode* %6, i32** %grid_indices, i32* %totgrid, i32* null, i32* %gridsize, %struct.CCGElem*** %griddata, %struct.DMGridAdjacency** %gridadj), !dbg !17208
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17209
  %pbvh4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 15, !dbg !17210
  %8 = load %struct.PBVH*, %struct.PBVH** %pbvh4, align 8, !dbg !17210
  call void @BKE_pbvh_get_grid_key(%struct.PBVH* %8, %struct.CCGKey* %key), !dbg !17211
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17212
  %pbvh5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 15, !dbg !17213
  %10 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !17213
  %call6 = call i32** @BKE_pbvh_grid_hidden(%struct.PBVH* %10), !dbg !17214
  store i32** %call6, i32*** %grid_hidden, align 8, !dbg !17215
  store i32 0, i32* %thread_num, align 4, !dbg !17216
  %11 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17217
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 28, !dbg !17218
  %12 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !17218
  %tmpgrid_co7 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %12, i32 0, i32 7, !dbg !17219
  %13 = load [3 x float]**, [3 x float]*** %tmpgrid_co7, align 8, !dbg !17219
  %14 = load i32, i32* %thread_num, align 4, !dbg !17220
  %idxprom = sext i32 %14 to i64, !dbg !17217
  %arrayidx = getelementptr inbounds [3 x float]*, [3 x float]** %13, i64 %idxprom, !dbg !17217
  %15 = load [3 x float]*, [3 x float]** %arrayidx, align 8, !dbg !17217
  store [3 x float]* %15, [3 x float]** %tmpgrid_co, align 8, !dbg !17221
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17222
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 28, !dbg !17223
  %17 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !17223
  %tmprow_co9 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %17, i32 0, i32 8, !dbg !17224
  %18 = load [3 x float]**, [3 x float]*** %tmprow_co9, align 8, !dbg !17224
  %19 = load i32, i32* %thread_num, align 4, !dbg !17225
  %idxprom10 = sext i32 %19 to i64, !dbg !17222
  %arrayidx11 = getelementptr inbounds [3 x float]*, [3 x float]** %18, i64 %idxprom10, !dbg !17222
  %20 = load [3 x float]*, [3 x float]** %arrayidx11, align 8, !dbg !17222
  store [3 x float]* %20, [3 x float]** %tmprow_co, align 8, !dbg !17226
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17227
  %cache12 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 28, !dbg !17228
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache12, align 8, !dbg !17228
  %tmpgrid_mask13 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 9, !dbg !17229
  %23 = load float**, float*** %tmpgrid_mask13, align 8, !dbg !17229
  %24 = load i32, i32* %thread_num, align 4, !dbg !17230
  %idxprom14 = sext i32 %24 to i64, !dbg !17227
  %arrayidx15 = getelementptr inbounds float*, float** %23, i64 %idxprom14, !dbg !17227
  %25 = load float*, float** %arrayidx15, align 8, !dbg !17227
  store float* %25, float** %tmpgrid_mask, align 8, !dbg !17231
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17232
  %cache16 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 28, !dbg !17233
  %27 = load %struct.StrokeCache*, %struct.StrokeCache** %cache16, align 8, !dbg !17233
  %tmprow_mask17 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %27, i32 0, i32 10, !dbg !17234
  %28 = load float**, float*** %tmprow_mask17, align 8, !dbg !17234
  %29 = load i32, i32* %thread_num, align 4, !dbg !17235
  %idxprom18 = sext i32 %29 to i64, !dbg !17232
  %arrayidx19 = getelementptr inbounds float*, float** %28, i64 %idxprom18, !dbg !17232
  %30 = load float*, float** %arrayidx19, align 8, !dbg !17232
  store float* %30, float** %tmprow_mask, align 8, !dbg !17236
  store i32 0, i32* %i, align 4, !dbg !17237
  br label %for.cond, !dbg !17239

for.cond:                                         ; preds = %for.inc241, %if.end3
  %31 = load i32, i32* %i, align 4, !dbg !17240
  %32 = load i32, i32* %totgrid, align 4, !dbg !17242
  %cmp20 = icmp slt i32 %31, %32, !dbg !17243
  br i1 %cmp20, label %for.body, label %for.end243, !dbg !17244

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %gi, metadata !17245, metadata !DIExpression()), !dbg !17247
  %33 = load i32*, i32** %grid_indices, align 8, !dbg !17248
  %34 = load i32, i32* %i, align 4, !dbg !17249
  %idxprom21 = sext i32 %34 to i64, !dbg !17248
  %arrayidx22 = getelementptr inbounds i32, i32* %33, i64 %idxprom21, !dbg !17248
  %35 = load i32, i32* %arrayidx22, align 4, !dbg !17248
  store i32 %35, i32* %gi, align 4, !dbg !17247
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !17250, metadata !DIExpression()), !dbg !17251
  %36 = load i32**, i32*** %grid_hidden, align 8, !dbg !17252
  %37 = load i32, i32* %gi, align 4, !dbg !17253
  %idxprom23 = sext i32 %37 to i64, !dbg !17252
  %arrayidx24 = getelementptr inbounds i32*, i32** %36, i64 %idxprom23, !dbg !17252
  %38 = load i32*, i32** %arrayidx24, align 8, !dbg !17252
  store i32* %38, i32** %gh, align 8, !dbg !17251
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %griddata, align 8, !dbg !17254
  %40 = load i32, i32* %gi, align 4, !dbg !17255
  %idxprom25 = sext i32 %40 to i64, !dbg !17254
  %arrayidx26 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %39, i64 %idxprom25, !dbg !17254
  %41 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx26, align 8, !dbg !17254
  store %struct.CCGElem* %41, %struct.CCGElem** %data, align 8, !dbg !17256
  %42 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridadj, align 8, !dbg !17257
  %43 = load i32, i32* %gi, align 4, !dbg !17258
  %idxprom27 = sext i32 %43 to i64, !dbg !17257
  %arrayidx28 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %42, i64 %idxprom27, !dbg !17257
  store %struct.DMGridAdjacency* %arrayidx28, %struct.DMGridAdjacency** %adj, align 8, !dbg !17259
  %44 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17260
  %tobool = icmp ne i32 %44, 0, !dbg !17260
  br i1 %tobool, label %if.then29, label %if.else32, !dbg !17262

if.then29:                                        ; preds = %for.body
  %45 = load float*, float** %tmpgrid_mask, align 8, !dbg !17263
  %46 = bitcast float* %45 to i8*, !dbg !17264
  %47 = load i32, i32* %gridsize, align 4, !dbg !17265
  %conv = sext i32 %47 to i64, !dbg !17265
  %mul = mul i64 4, %conv, !dbg !17266
  %48 = load i32, i32* %gridsize, align 4, !dbg !17267
  %conv30 = sext i32 %48 to i64, !dbg !17267
  %mul31 = mul i64 %mul, %conv30, !dbg !17268
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 %mul31, i1 false), !dbg !17264
  br label %if.end37, !dbg !17264

if.else32:                                        ; preds = %for.body
  %49 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17269
  %50 = bitcast [3 x float]* %49 to i8*, !dbg !17270
  %51 = load i32, i32* %gridsize, align 4, !dbg !17271
  %conv33 = sext i32 %51 to i64, !dbg !17271
  %mul34 = mul i64 12, %conv33, !dbg !17272
  %52 = load i32, i32* %gridsize, align 4, !dbg !17273
  %conv35 = sext i32 %52 to i64, !dbg !17273
  %mul36 = mul i64 %mul34, %conv35, !dbg !17274
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 %mul36, i1 false), !dbg !17270
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then29
  store i32 0, i32* %y, align 4, !dbg !17275
  br label %for.cond38, !dbg !17277

for.cond38:                                       ; preds = %for.inc124, %if.end37
  %53 = load i32, i32* %y, align 4, !dbg !17278
  %54 = load i32, i32* %gridsize, align 4, !dbg !17280
  %sub = sub nsw i32 %54, 1, !dbg !17281
  %cmp39 = icmp slt i32 %53, %sub, !dbg !17282
  br i1 %cmp39, label %for.body41, label %for.end126, !dbg !17283

for.body41:                                       ; preds = %for.cond38
  %55 = load i32, i32* %y, align 4, !dbg !17284
  %56 = load i32, i32* %gridsize, align 4, !dbg !17286
  %mul42 = mul nsw i32 %55, %56, !dbg !17287
  store i32 %mul42, i32* %v1, align 4, !dbg !17288
  %57 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17289
  %tobool43 = icmp ne i32 %57, 0, !dbg !17289
  br i1 %tobool43, label %if.then44, label %if.else49, !dbg !17291

if.then44:                                        ; preds = %for.body41
  %58 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17292
  %59 = load i32, i32* %v1, align 4, !dbg !17294
  %call45 = call float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %58, i32 %59), !dbg !17295
  %60 = load float, float* %call45, align 4, !dbg !17296
  %61 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17297
  %62 = load i32, i32* %v1, align 4, !dbg !17298
  %63 = load i32, i32* %gridsize, align 4, !dbg !17299
  %add = add nsw i32 %62, %63, !dbg !17300
  %call46 = call float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %61, i32 %add), !dbg !17301
  %64 = load float, float* %call46, align 4, !dbg !17302
  %add47 = fadd float %60, %64, !dbg !17303
  %65 = load float*, float** %tmprow_mask, align 8, !dbg !17304
  %arrayidx48 = getelementptr inbounds float, float* %65, i64 0, !dbg !17304
  store float %add47, float* %arrayidx48, align 4, !dbg !17305
  br label %if.end54, !dbg !17306

if.else49:                                        ; preds = %for.body41
  %66 = load [3 x float]*, [3 x float]** %tmprow_co, align 8, !dbg !17307
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %66, i64 0, !dbg !17307
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !17307
  %67 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17309
  %68 = load i32, i32* %v1, align 4, !dbg !17310
  %call51 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %67, i32 %68), !dbg !17311
  %69 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17312
  %70 = load i32, i32* %v1, align 4, !dbg !17313
  %71 = load i32, i32* %gridsize, align 4, !dbg !17314
  %add52 = add nsw i32 %70, %71, !dbg !17315
  %call53 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %69, i32 %add52), !dbg !17316
  call void @add_v3_v3v3(float* %arraydecay, float* %call51, float* %call53), !dbg !17317
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then44
  store i32 0, i32* %x, align 4, !dbg !17318
  br label %for.cond55, !dbg !17320

for.cond55:                                       ; preds = %for.inc, %if.end54
  %72 = load i32, i32* %x, align 4, !dbg !17321
  %73 = load i32, i32* %gridsize, align 4, !dbg !17323
  %sub56 = sub nsw i32 %73, 1, !dbg !17324
  %cmp57 = icmp slt i32 %72, %sub56, !dbg !17325
  br i1 %cmp57, label %for.body59, label %for.end, !dbg !17326

for.body59:                                       ; preds = %for.cond55
  %74 = load i32, i32* %x, align 4, !dbg !17327
  %75 = load i32, i32* %y, align 4, !dbg !17329
  %76 = load i32, i32* %gridsize, align 4, !dbg !17330
  %mul60 = mul nsw i32 %75, %76, !dbg !17331
  %add61 = add nsw i32 %74, %mul60, !dbg !17332
  store i32 %add61, i32* %v1, align 4, !dbg !17333
  %77 = load i32, i32* %v1, align 4, !dbg !17334
  %add62 = add nsw i32 %77, 1, !dbg !17335
  store i32 %add62, i32* %v2, align 4, !dbg !17336
  %78 = load i32, i32* %v1, align 4, !dbg !17337
  %79 = load i32, i32* %gridsize, align 4, !dbg !17338
  %add63 = add nsw i32 %78, %79, !dbg !17339
  store i32 %add63, i32* %v3, align 4, !dbg !17340
  %80 = load i32, i32* %v3, align 4, !dbg !17341
  %add64 = add nsw i32 %80, 1, !dbg !17342
  store i32 %add64, i32* %v4, align 4, !dbg !17343
  %81 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17344
  %tobool65 = icmp ne i32 %81, 0, !dbg !17344
  br i1 %tobool65, label %if.then66, label %if.else91, !dbg !17346

if.then66:                                        ; preds = %for.body59
  call void @llvm.dbg.declare(metadata float* %tmp, metadata !17347, metadata !DIExpression()), !dbg !17349
  %82 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17350
  %83 = load i32, i32* %v2, align 4, !dbg !17351
  %call67 = call float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %82, i32 %83), !dbg !17352
  %84 = load float, float* %call67, align 4, !dbg !17353
  %85 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17354
  %86 = load i32, i32* %v4, align 4, !dbg !17355
  %call68 = call float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %85, i32 %86), !dbg !17356
  %87 = load float, float* %call68, align 4, !dbg !17357
  %add69 = fadd float %84, %87, !dbg !17358
  %88 = load float*, float** %tmprow_mask, align 8, !dbg !17359
  %89 = load i32, i32* %x, align 4, !dbg !17360
  %add70 = add nsw i32 %89, 1, !dbg !17361
  %idxprom71 = sext i32 %add70 to i64, !dbg !17359
  %arrayidx72 = getelementptr inbounds float, float* %88, i64 %idxprom71, !dbg !17359
  store float %add69, float* %arrayidx72, align 4, !dbg !17362
  %90 = load float*, float** %tmprow_mask, align 8, !dbg !17363
  %91 = load i32, i32* %x, align 4, !dbg !17364
  %add73 = add nsw i32 %91, 1, !dbg !17365
  %idxprom74 = sext i32 %add73 to i64, !dbg !17363
  %arrayidx75 = getelementptr inbounds float, float* %90, i64 %idxprom74, !dbg !17363
  %92 = load float, float* %arrayidx75, align 4, !dbg !17363
  %93 = load float*, float** %tmprow_mask, align 8, !dbg !17366
  %94 = load i32, i32* %x, align 4, !dbg !17367
  %idxprom76 = sext i32 %94 to i64, !dbg !17366
  %arrayidx77 = getelementptr inbounds float, float* %93, i64 %idxprom76, !dbg !17366
  %95 = load float, float* %arrayidx77, align 4, !dbg !17366
  %add78 = fadd float %92, %95, !dbg !17368
  store float %add78, float* %tmp, align 4, !dbg !17369
  %96 = load float, float* %tmp, align 4, !dbg !17370
  %97 = load float*, float** %tmpgrid_mask, align 8, !dbg !17371
  %98 = load i32, i32* %v1, align 4, !dbg !17372
  %idxprom79 = sext i32 %98 to i64, !dbg !17371
  %arrayidx80 = getelementptr inbounds float, float* %97, i64 %idxprom79, !dbg !17371
  %99 = load float, float* %arrayidx80, align 4, !dbg !17373
  %add81 = fadd float %99, %96, !dbg !17373
  store float %add81, float* %arrayidx80, align 4, !dbg !17373
  %100 = load float, float* %tmp, align 4, !dbg !17374
  %101 = load float*, float** %tmpgrid_mask, align 8, !dbg !17375
  %102 = load i32, i32* %v2, align 4, !dbg !17376
  %idxprom82 = sext i32 %102 to i64, !dbg !17375
  %arrayidx83 = getelementptr inbounds float, float* %101, i64 %idxprom82, !dbg !17375
  %103 = load float, float* %arrayidx83, align 4, !dbg !17377
  %add84 = fadd float %103, %100, !dbg !17377
  store float %add84, float* %arrayidx83, align 4, !dbg !17377
  %104 = load float, float* %tmp, align 4, !dbg !17378
  %105 = load float*, float** %tmpgrid_mask, align 8, !dbg !17379
  %106 = load i32, i32* %v3, align 4, !dbg !17380
  %idxprom85 = sext i32 %106 to i64, !dbg !17379
  %arrayidx86 = getelementptr inbounds float, float* %105, i64 %idxprom85, !dbg !17379
  %107 = load float, float* %arrayidx86, align 4, !dbg !17381
  %add87 = fadd float %107, %104, !dbg !17381
  store float %add87, float* %arrayidx86, align 4, !dbg !17381
  %108 = load float, float* %tmp, align 4, !dbg !17382
  %109 = load float*, float** %tmpgrid_mask, align 8, !dbg !17383
  %110 = load i32, i32* %v4, align 4, !dbg !17384
  %idxprom88 = sext i32 %110 to i64, !dbg !17383
  %arrayidx89 = getelementptr inbounds float, float* %109, i64 %idxprom88, !dbg !17383
  %111 = load float, float* %arrayidx89, align 4, !dbg !17385
  %add90 = fadd float %111, %108, !dbg !17385
  store float %add90, float* %arrayidx89, align 4, !dbg !17385
  br label %if.end123, !dbg !17386

if.else91:                                        ; preds = %for.body59
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp92, metadata !17387, metadata !DIExpression()), !dbg !17389
  %112 = load [3 x float]*, [3 x float]** %tmprow_co, align 8, !dbg !17390
  %113 = load i32, i32* %x, align 4, !dbg !17391
  %add93 = add nsw i32 %113, 1, !dbg !17392
  %idxprom94 = sext i32 %add93 to i64, !dbg !17390
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %112, i64 %idxprom94, !dbg !17390
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx95, i64 0, i64 0, !dbg !17390
  %114 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17393
  %115 = load i32, i32* %v2, align 4, !dbg !17394
  %call97 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %114, i32 %115), !dbg !17395
  %116 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17396
  %117 = load i32, i32* %v4, align 4, !dbg !17397
  %call98 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %116, i32 %117), !dbg !17398
  call void @add_v3_v3v3(float* %arraydecay96, float* %call97, float* %call98), !dbg !17399
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %tmp92, i64 0, i64 0, !dbg !17400
  %118 = load [3 x float]*, [3 x float]** %tmprow_co, align 8, !dbg !17401
  %119 = load i32, i32* %x, align 4, !dbg !17402
  %add100 = add nsw i32 %119, 1, !dbg !17403
  %idxprom101 = sext i32 %add100 to i64, !dbg !17401
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %118, i64 %idxprom101, !dbg !17401
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx102, i64 0, i64 0, !dbg !17401
  %120 = load [3 x float]*, [3 x float]** %tmprow_co, align 8, !dbg !17404
  %121 = load i32, i32* %x, align 4, !dbg !17405
  %idxprom104 = sext i32 %121 to i64, !dbg !17404
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %120, i64 %idxprom104, !dbg !17404
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx105, i64 0, i64 0, !dbg !17404
  call void @add_v3_v3v3(float* %arraydecay99, float* %arraydecay103, float* %arraydecay106), !dbg !17406
  %122 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17407
  %123 = load i32, i32* %v1, align 4, !dbg !17408
  %idxprom107 = sext i32 %123 to i64, !dbg !17407
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %122, i64 %idxprom107, !dbg !17407
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx108, i64 0, i64 0, !dbg !17407
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %tmp92, i64 0, i64 0, !dbg !17409
  call void @add_v3_v3(float* %arraydecay109, float* %arraydecay110), !dbg !17410
  %124 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17411
  %125 = load i32, i32* %v2, align 4, !dbg !17412
  %idxprom111 = sext i32 %125 to i64, !dbg !17411
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %124, i64 %idxprom111, !dbg !17411
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 0, !dbg !17411
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %tmp92, i64 0, i64 0, !dbg !17413
  call void @add_v3_v3(float* %arraydecay113, float* %arraydecay114), !dbg !17414
  %126 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17415
  %127 = load i32, i32* %v3, align 4, !dbg !17416
  %idxprom115 = sext i32 %127 to i64, !dbg !17415
  %arrayidx116 = getelementptr inbounds [3 x float], [3 x float]* %126, i64 %idxprom115, !dbg !17415
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx116, i64 0, i64 0, !dbg !17415
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %tmp92, i64 0, i64 0, !dbg !17417
  call void @add_v3_v3(float* %arraydecay117, float* %arraydecay118), !dbg !17418
  %128 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17419
  %129 = load i32, i32* %v4, align 4, !dbg !17420
  %idxprom119 = sext i32 %129 to i64, !dbg !17419
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %128, i64 %idxprom119, !dbg !17419
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx120, i64 0, i64 0, !dbg !17419
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %tmp92, i64 0, i64 0, !dbg !17421
  call void @add_v3_v3(float* %arraydecay121, float* %arraydecay122), !dbg !17422
  br label %if.end123

if.end123:                                        ; preds = %if.else91, %if.then66
  br label %for.inc, !dbg !17423

for.inc:                                          ; preds = %if.end123
  %130 = load i32, i32* %x, align 4, !dbg !17424
  %inc = add nsw i32 %130, 1, !dbg !17424
  store i32 %inc, i32* %x, align 4, !dbg !17424
  br label %for.cond55, !dbg !17425, !llvm.loop !17426

for.end:                                          ; preds = %for.cond55
  br label %for.inc124, !dbg !17428

for.inc124:                                       ; preds = %for.end
  %131 = load i32, i32* %y, align 4, !dbg !17429
  %inc125 = add nsw i32 %131, 1, !dbg !17429
  store i32 %inc125, i32* %y, align 4, !dbg !17429
  br label %for.cond38, !dbg !17430, !llvm.loop !17431

for.end126:                                       ; preds = %for.cond38
  store i32 0, i32* %y, align 4, !dbg !17433
  br label %for.cond127, !dbg !17435

for.cond127:                                      ; preds = %for.inc238, %for.end126
  %132 = load i32, i32* %y, align 4, !dbg !17436
  %133 = load i32, i32* %gridsize, align 4, !dbg !17438
  %cmp128 = icmp slt i32 %132, %133, !dbg !17439
  br i1 %cmp128, label %for.body130, label %for.end240, !dbg !17440

for.body130:                                      ; preds = %for.cond127
  store i32 0, i32* %x, align 4, !dbg !17441
  br label %for.cond131, !dbg !17444

for.cond131:                                      ; preds = %for.inc235, %for.body130
  %134 = load i32, i32* %x, align 4, !dbg !17445
  %135 = load i32, i32* %gridsize, align 4, !dbg !17447
  %cmp132 = icmp slt i32 %134, %135, !dbg !17448
  br i1 %cmp132, label %for.body134, label %for.end237, !dbg !17449

for.body134:                                      ; preds = %for.cond131
  call void @llvm.dbg.declare(metadata float** %co, metadata !17450, metadata !DIExpression()), !dbg !17452
  call void @llvm.dbg.declare(metadata float** %fno, metadata !17453, metadata !DIExpression()), !dbg !17454
  call void @llvm.dbg.declare(metadata float** %mask, metadata !17455, metadata !DIExpression()), !dbg !17456
  call void @llvm.dbg.declare(metadata i32* %index, metadata !17457, metadata !DIExpression()), !dbg !17458
  %136 = load i32*, i32** %gh, align 8, !dbg !17459
  %tobool135 = icmp ne i32* %136, null, !dbg !17459
  br i1 %tobool135, label %if.then136, label %if.end147, !dbg !17461

if.then136:                                       ; preds = %for.body134
  %137 = load i32*, i32** %gh, align 8, !dbg !17462
  %138 = load i32, i32* %y, align 4, !dbg !17462
  %139 = load i32, i32* %gridsize, align 4, !dbg !17462
  %mul137 = mul nsw i32 %138, %139, !dbg !17462
  %140 = load i32, i32* %x, align 4, !dbg !17462
  %add138 = add nsw i32 %mul137, %140, !dbg !17462
  %shr = ashr i32 %add138, 5, !dbg !17462
  %idxprom139 = sext i32 %shr to i64, !dbg !17462
  %arrayidx140 = getelementptr inbounds i32, i32* %137, i64 %idxprom139, !dbg !17462
  %141 = load i32, i32* %arrayidx140, align 4, !dbg !17462
  %142 = load i32, i32* %y, align 4, !dbg !17462
  %143 = load i32, i32* %gridsize, align 4, !dbg !17462
  %mul141 = mul nsw i32 %142, %143, !dbg !17462
  %144 = load i32, i32* %x, align 4, !dbg !17462
  %add142 = add nsw i32 %mul141, %144, !dbg !17462
  %and = and i32 %add142, 31, !dbg !17462
  %shl = shl i32 1, %and, !dbg !17462
  %and143 = and i32 %141, %shl, !dbg !17462
  %tobool144 = icmp ne i32 %and143, 0, !dbg !17462
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !17465

if.then145:                                       ; preds = %if.then136
  br label %for.inc235, !dbg !17466

if.end146:                                        ; preds = %if.then136
  br label %if.end147, !dbg !17467

if.end147:                                        ; preds = %if.end146, %for.body134
  %145 = load i32, i32* %x, align 4, !dbg !17468
  %cmp148 = icmp eq i32 %145, 0, !dbg !17470
  br i1 %cmp148, label %land.lhs.true, label %if.end155, !dbg !17471

land.lhs.true:                                    ; preds = %if.end147
  %146 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !17472
  %index150 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %146, i32 0, i32 0, !dbg !17473
  %arrayidx151 = getelementptr inbounds [4 x i32], [4 x i32]* %index150, i64 0, i64 0, !dbg !17472
  %147 = load i32, i32* %arrayidx151, align 4, !dbg !17472
  %cmp152 = icmp eq i32 %147, -1, !dbg !17474
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !17475

if.then154:                                       ; preds = %land.lhs.true
  br label %for.inc235, !dbg !17476

if.end155:                                        ; preds = %land.lhs.true, %if.end147
  %148 = load i32, i32* %x, align 4, !dbg !17477
  %149 = load i32, i32* %gridsize, align 4, !dbg !17479
  %sub156 = sub nsw i32 %149, 1, !dbg !17480
  %cmp157 = icmp eq i32 %148, %sub156, !dbg !17481
  br i1 %cmp157, label %land.lhs.true159, label %if.end165, !dbg !17482

land.lhs.true159:                                 ; preds = %if.end155
  %150 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !17483
  %index160 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %150, i32 0, i32 0, !dbg !17484
  %arrayidx161 = getelementptr inbounds [4 x i32], [4 x i32]* %index160, i64 0, i64 2, !dbg !17483
  %151 = load i32, i32* %arrayidx161, align 4, !dbg !17483
  %cmp162 = icmp eq i32 %151, -1, !dbg !17485
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !17486

if.then164:                                       ; preds = %land.lhs.true159
  br label %for.inc235, !dbg !17487

if.end165:                                        ; preds = %land.lhs.true159, %if.end155
  %152 = load i32, i32* %y, align 4, !dbg !17488
  %cmp166 = icmp eq i32 %152, 0, !dbg !17490
  br i1 %cmp166, label %land.lhs.true168, label %if.end174, !dbg !17491

land.lhs.true168:                                 ; preds = %if.end165
  %153 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !17492
  %index169 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %153, i32 0, i32 0, !dbg !17493
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %index169, i64 0, i64 3, !dbg !17492
  %154 = load i32, i32* %arrayidx170, align 4, !dbg !17492
  %cmp171 = icmp eq i32 %154, -1, !dbg !17494
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !17495

if.then173:                                       ; preds = %land.lhs.true168
  br label %for.inc235, !dbg !17496

if.end174:                                        ; preds = %land.lhs.true168, %if.end165
  %155 = load i32, i32* %y, align 4, !dbg !17497
  %156 = load i32, i32* %gridsize, align 4, !dbg !17499
  %sub175 = sub nsw i32 %156, 1, !dbg !17500
  %cmp176 = icmp eq i32 %155, %sub175, !dbg !17501
  br i1 %cmp176, label %land.lhs.true178, label %if.end184, !dbg !17502

land.lhs.true178:                                 ; preds = %if.end174
  %157 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !17503
  %index179 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %157, i32 0, i32 0, !dbg !17504
  %arrayidx180 = getelementptr inbounds [4 x i32], [4 x i32]* %index179, i64 0, i64 1, !dbg !17503
  %158 = load i32, i32* %arrayidx180, align 4, !dbg !17503
  %cmp181 = icmp eq i32 %158, -1, !dbg !17505
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !17506

if.then183:                                       ; preds = %land.lhs.true178
  br label %for.inc235, !dbg !17507

if.end184:                                        ; preds = %land.lhs.true178, %if.end174
  %159 = load i32, i32* %x, align 4, !dbg !17508
  %160 = load i32, i32* %y, align 4, !dbg !17509
  %161 = load i32, i32* %gridsize, align 4, !dbg !17510
  %mul185 = mul nsw i32 %160, %161, !dbg !17511
  %add186 = add nsw i32 %159, %mul185, !dbg !17512
  store i32 %add186, i32* %index, align 4, !dbg !17513
  %162 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17514
  %163 = load i32, i32* %index, align 4, !dbg !17515
  %call187 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %162, i32 %163), !dbg !17516
  store float* %call187, float** %co, align 8, !dbg !17517
  %164 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17518
  %165 = load i32, i32* %index, align 4, !dbg !17519
  %call188 = call float* @CCG_elem_offset_no(%struct.CCGKey* %key, %struct.CCGElem* %164, i32 %165), !dbg !17520
  store float* %call188, float** %fno, align 8, !dbg !17521
  %166 = load %struct.CCGElem*, %struct.CCGElem** %data, align 8, !dbg !17522
  %167 = load i32, i32* %index, align 4, !dbg !17523
  %call189 = call float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %166, i32 %167), !dbg !17524
  store float* %call189, float** %mask, align 8, !dbg !17525
  %168 = load float*, float** %co, align 8, !dbg !17526
  %call190 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %168), !dbg !17528
  %tobool191 = icmp ne i8 %call190, 0, !dbg !17528
  br i1 %tobool191, label %if.then192, label %if.end234, !dbg !17529

if.then192:                                       ; preds = %if.end184
  call void @llvm.dbg.declare(metadata float* %strength_mask, metadata !17530, metadata !DIExpression()), !dbg !17532
  %169 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17533
  %tobool193 = icmp ne i32 %169, 0, !dbg !17533
  br i1 %tobool193, label %cond.true, label %cond.false, !dbg !17533

cond.true:                                        ; preds = %if.then192
  br label %cond.end, !dbg !17533

cond.false:                                       ; preds = %if.then192
  %170 = load float*, float** %mask, align 8, !dbg !17534
  %171 = load float, float* %170, align 4, !dbg !17535
  br label %cond.end, !dbg !17533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %171, %cond.false ], !dbg !17533
  store float %cond, float* %strength_mask, align 4, !dbg !17532
  call void @llvm.dbg.declare(metadata float* %fade, metadata !17536, metadata !DIExpression()), !dbg !17537
  %172 = load float, float* %bstrength.addr, align 4, !dbg !17538
  %173 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17539
  %174 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !17540
  %175 = load float*, float** %co, align 8, !dbg !17541
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !17542
  %176 = load float, float* %dist, align 8, !dbg !17542
  %177 = load float*, float** %fno, align 8, !dbg !17543
  %178 = load float, float* %strength_mask, align 4, !dbg !17544
  %call194 = call float @tex_strength(%struct.SculptSession* %173, %struct.Brush* %174, float* %175, float %176, i16* null, float* %177, float %178), !dbg !17545
  %mul195 = fmul float %172, %call194, !dbg !17546
  store float %mul195, float* %fade, align 4, !dbg !17537
  call void @llvm.dbg.declare(metadata float* %n, metadata !17547, metadata !DIExpression()), !dbg !17548
  store float 6.250000e-02, float* %n, align 4, !dbg !17548
  %179 = load i32, i32* %x, align 4, !dbg !17549
  %cmp196 = icmp eq i32 %179, 0, !dbg !17551
  br i1 %cmp196, label %if.then201, label %lor.lhs.false, !dbg !17552

lor.lhs.false:                                    ; preds = %cond.end
  %180 = load i32, i32* %x, align 4, !dbg !17553
  %181 = load i32, i32* %gridsize, align 4, !dbg !17554
  %sub198 = sub nsw i32 %181, 1, !dbg !17555
  %cmp199 = icmp eq i32 %180, %sub198, !dbg !17556
  br i1 %cmp199, label %if.then201, label %if.end203, !dbg !17557

if.then201:                                       ; preds = %lor.lhs.false, %cond.end
  %182 = load float, float* %n, align 4, !dbg !17558
  %mul202 = fmul float %182, 2.000000e+00, !dbg !17558
  store float %mul202, float* %n, align 4, !dbg !17558
  br label %if.end203, !dbg !17559

if.end203:                                        ; preds = %if.then201, %lor.lhs.false
  %183 = load i32, i32* %y, align 4, !dbg !17560
  %cmp204 = icmp eq i32 %183, 0, !dbg !17562
  br i1 %cmp204, label %if.then210, label %lor.lhs.false206, !dbg !17563

lor.lhs.false206:                                 ; preds = %if.end203
  %184 = load i32, i32* %y, align 4, !dbg !17564
  %185 = load i32, i32* %gridsize, align 4, !dbg !17565
  %sub207 = sub nsw i32 %185, 1, !dbg !17566
  %cmp208 = icmp eq i32 %184, %sub207, !dbg !17567
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !17568

if.then210:                                       ; preds = %lor.lhs.false206, %if.end203
  %186 = load float, float* %n, align 4, !dbg !17569
  %mul211 = fmul float %186, 2.000000e+00, !dbg !17569
  store float %mul211, float* %n, align 4, !dbg !17569
  br label %if.end212, !dbg !17570

if.end212:                                        ; preds = %if.then210, %lor.lhs.false206
  %187 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17571
  %tobool213 = icmp ne i32 %187, 0, !dbg !17571
  br i1 %tobool213, label %if.then214, label %if.else223, !dbg !17573

if.then214:                                       ; preds = %if.end212
  %188 = load float*, float** %tmpgrid_mask, align 8, !dbg !17574
  %189 = load i32, i32* %x, align 4, !dbg !17576
  %190 = load i32, i32* %y, align 4, !dbg !17577
  %191 = load i32, i32* %gridsize, align 4, !dbg !17578
  %mul215 = mul nsw i32 %190, %191, !dbg !17579
  %add216 = add nsw i32 %189, %mul215, !dbg !17580
  %idxprom217 = sext i32 %add216 to i64, !dbg !17574
  %arrayidx218 = getelementptr inbounds float, float* %188, i64 %idxprom217, !dbg !17574
  %192 = load float, float* %arrayidx218, align 4, !dbg !17574
  %193 = load float, float* %n, align 4, !dbg !17581
  %mul219 = fmul float %192, %193, !dbg !17582
  %194 = load float*, float** %mask, align 8, !dbg !17583
  %195 = load float, float* %194, align 4, !dbg !17584
  %sub220 = fsub float %mul219, %195, !dbg !17585
  %196 = load float, float* %fade, align 4, !dbg !17586
  %mul221 = fmul float %sub220, %196, !dbg !17587
  %197 = load float*, float** %mask, align 8, !dbg !17588
  %198 = load float, float* %197, align 4, !dbg !17589
  %add222 = fadd float %198, %mul221, !dbg !17589
  store float %add222, float* %197, align 4, !dbg !17589
  br label %if.end233, !dbg !17590

if.else223:                                       ; preds = %if.end212
  call void @llvm.dbg.declare(metadata float** %avg, metadata !17591, metadata !DIExpression()), !dbg !17593
  call void @llvm.dbg.declare(metadata [3 x float]* %val, metadata !17594, metadata !DIExpression()), !dbg !17595
  %199 = load [3 x float]*, [3 x float]** %tmpgrid_co, align 8, !dbg !17596
  %200 = load i32, i32* %x, align 4, !dbg !17597
  %201 = load i32, i32* %y, align 4, !dbg !17598
  %202 = load i32, i32* %gridsize, align 4, !dbg !17599
  %mul224 = mul nsw i32 %201, %202, !dbg !17600
  %add225 = add nsw i32 %200, %mul224, !dbg !17601
  %idxprom226 = sext i32 %add225 to i64, !dbg !17596
  %arrayidx227 = getelementptr inbounds [3 x float], [3 x float]* %199, i64 %idxprom226, !dbg !17596
  %arraydecay228 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx227, i64 0, i64 0, !dbg !17596
  store float* %arraydecay228, float** %avg, align 8, !dbg !17602
  %203 = load float*, float** %avg, align 8, !dbg !17603
  %204 = load float, float* %n, align 4, !dbg !17604
  call void @mul_v3_fl(float* %203, float %204), !dbg !17605
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !17606
  %205 = load float*, float** %avg, align 8, !dbg !17607
  %206 = load float*, float** %co, align 8, !dbg !17608
  call void @sub_v3_v3v3(float* %arraydecay229, float* %205, float* %206), !dbg !17609
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !17610
  %207 = load float, float* %fade, align 4, !dbg !17611
  call void @mul_v3_fl(float* %arraydecay230, float %207), !dbg !17612
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !17613
  %208 = load float*, float** %co, align 8, !dbg !17614
  call void @add_v3_v3(float* %arraydecay231, float* %208), !dbg !17615
  %209 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17616
  %210 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17617
  %211 = load float*, float** %co, align 8, !dbg !17618
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %val, i64 0, i64 0, !dbg !17619
  call void @sculpt_clip(%struct.Sculpt* %209, %struct.SculptSession* %210, float* %211, float* %arraydecay232), !dbg !17620
  br label %if.end233

if.end233:                                        ; preds = %if.else223, %if.then214
  br label %if.end234, !dbg !17621

if.end234:                                        ; preds = %if.end233, %if.end184
  br label %for.inc235, !dbg !17622

for.inc235:                                       ; preds = %if.end234, %if.then183, %if.then173, %if.then164, %if.then154, %if.then145
  %212 = load i32, i32* %x, align 4, !dbg !17623
  %inc236 = add nsw i32 %212, 1, !dbg !17623
  store i32 %inc236, i32* %x, align 4, !dbg !17623
  br label %for.cond131, !dbg !17624, !llvm.loop !17625

for.end237:                                       ; preds = %for.cond131
  br label %for.inc238, !dbg !17627

for.inc238:                                       ; preds = %for.end237
  %213 = load i32, i32* %y, align 4, !dbg !17628
  %inc239 = add nsw i32 %213, 1, !dbg !17628
  store i32 %inc239, i32* %y, align 4, !dbg !17628
  br label %for.cond127, !dbg !17629, !llvm.loop !17630

for.end240:                                       ; preds = %for.cond127
  br label %for.inc241, !dbg !17632

for.inc241:                                       ; preds = %for.end240
  %214 = load i32, i32* %i, align 4, !dbg !17633
  %inc242 = add nsw i32 %214, 1, !dbg !17633
  store i32 %inc242, i32* %i, align 4, !dbg !17633
  br label %for.cond, !dbg !17634, !llvm.loop !17635

for.end243:                                       ; preds = %for.cond
  ret void, !dbg !17637
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mesh_smooth_brush(%struct.Sculpt* %sd, %struct.SculptSession* %ss, %struct.PBVHNode* %node, float %bstrength, i32 %smooth_mask) #0 !dbg !17638 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %node.addr = alloca %struct.PBVHNode*, align 8
  %bstrength.addr = alloca float, align 4
  %smooth_mask.addr = alloca i32, align 4
  %brush = alloca %struct.Brush*, align 8
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %fade = alloca float, align 4
  %val = alloca float, align 4
  %avg = alloca [3 x float], align 4
  %val177 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !17639, metadata !DIExpression()), !dbg !17640
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !17641, metadata !DIExpression()), !dbg !17642
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !17643, metadata !DIExpression()), !dbg !17644
  store float %bstrength, float* %bstrength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bstrength.addr, metadata !17645, metadata !DIExpression()), !dbg !17646
  store i32 %smooth_mask, i32* %smooth_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_mask.addr, metadata !17647, metadata !DIExpression()), !dbg !17648
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !17649, metadata !DIExpression()), !dbg !17650
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17651
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !17652
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !17653
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !17650
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !17654, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !17656, metadata !DIExpression()), !dbg !17657
  %1 = load float, float* %bstrength.addr, align 4, !dbg !17658
  %cmp = fcmp olt float %1, 0.000000e+00, !dbg !17658
  br i1 %cmp, label %if.then, label %if.else, !dbg !17661

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %bstrength.addr, align 4, !dbg !17658
  br label %if.end3, !dbg !17658

if.else:                                          ; preds = %entry
  %2 = load float, float* %bstrength.addr, align 4, !dbg !17662
  %cmp1 = fcmp ogt float %2, 1.000000e+00, !dbg !17662
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !17658

if.then2:                                         ; preds = %if.else
  store float 1.000000e+00, float* %bstrength.addr, align 4, !dbg !17662
  br label %if.end, !dbg !17662

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17664
  call void @sculpt_brush_test_init(%struct.SculptSession* %3, %struct.SculptBrushTest* %test), !dbg !17665
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17666
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 15, !dbg !17666
  %5 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !17666
  %6 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !17666
  call void @pbvh_vertex_iter_init(%struct.PBVH* %5, %struct.PBVHNode* %6, %struct.PBVHVertexIter* %vd, i32 1), !dbg !17666
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17667
  store i32 0, i32* %i, align 4, !dbg !17667
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17667
  store i32 0, i32* %g, align 8, !dbg !17667
  br label %for.cond, !dbg !17667

for.cond:                                         ; preds = %for.inc208, %if.end3
  %g4 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17669
  %7 = load i32, i32* %g4, align 8, !dbg !17669
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !17669
  %8 = load i32, i32* %totgrid, align 8, !dbg !17669
  %cmp5 = icmp slt i32 %7, %8, !dbg !17669
  br i1 %cmp5, label %for.body, label %for.end211, !dbg !17667

for.body:                                         ; preds = %for.cond
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17671
  %9 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !17671
  %tobool = icmp ne %struct.CCGElem** %9, null, !dbg !17671
  br i1 %tobool, label %if.then6, label %if.else18, !dbg !17674

if.then6:                                         ; preds = %for.body
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17675
  %10 = load i32, i32* %gridsize, align 4, !dbg !17675
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17675
  store i32 %10, i32* %width, align 4, !dbg !17675
  %gridsize7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17675
  %11 = load i32, i32* %gridsize7, align 4, !dbg !17675
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17675
  store i32 %11, i32* %height, align 8, !dbg !17675
  %grids8 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17675
  %12 = load %struct.CCGElem**, %struct.CCGElem*** %grids8, align 8, !dbg !17675
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17675
  %13 = load i32*, i32** %grid_indices, align 8, !dbg !17675
  %g9 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17675
  %14 = load i32, i32* %g9, align 8, !dbg !17675
  %idxprom = sext i32 %14 to i64, !dbg !17675
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !17675
  %15 = load i32, i32* %arrayidx, align 4, !dbg !17675
  %idxprom10 = sext i32 %15 to i64, !dbg !17675
  %arrayidx11 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %12, i64 %idxprom10, !dbg !17675
  %16 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx11, align 8, !dbg !17675
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17675
  store %struct.CCGElem* %16, %struct.CCGElem** %grid, align 8, !dbg !17675
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !17677
  %17 = load i32**, i32*** %grid_hidden, align 8, !dbg !17677
  %grid_indices12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17677
  %18 = load i32*, i32** %grid_indices12, align 8, !dbg !17677
  %g13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17677
  %19 = load i32, i32* %g13, align 8, !dbg !17677
  %idxprom14 = sext i32 %19 to i64, !dbg !17677
  %arrayidx15 = getelementptr inbounds i32, i32* %18, i64 %idxprom14, !dbg !17677
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !17677
  %idxprom16 = sext i32 %20 to i64, !dbg !17677
  %arrayidx17 = getelementptr inbounds i32*, i32** %17, i64 %idxprom16, !dbg !17677
  %21 = load i32*, i32** %arrayidx17, align 8, !dbg !17677
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17677
  store i32* %21, i32** %gh, align 8, !dbg !17677
  br label %if.end21, !dbg !17675

if.else18:                                        ; preds = %for.body
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !17679
  %22 = load i32, i32* %totvert, align 8, !dbg !17679
  %width19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17679
  store i32 %22, i32* %width19, align 4, !dbg !17679
  %height20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17679
  store i32 1, i32* %height20, align 8, !dbg !17679
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.then6
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17681
  store i32 0, i32* %gy, align 8, !dbg !17681
  br label %for.cond22, !dbg !17681

for.cond22:                                       ; preds = %for.inc204, %if.end21
  %gy23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17683
  %23 = load i32, i32* %gy23, align 8, !dbg !17683
  %height24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17683
  %24 = load i32, i32* %height24, align 8, !dbg !17683
  %cmp25 = icmp slt i32 %23, %24, !dbg !17683
  br i1 %cmp25, label %for.body26, label %for.end207, !dbg !17681

for.body26:                                       ; preds = %for.cond22
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17685
  store i32 0, i32* %gx, align 4, !dbg !17685
  br label %for.cond27, !dbg !17685

for.cond27:                                       ; preds = %for.inc, %for.body26
  %gx28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17688
  %25 = load i32, i32* %gx28, align 4, !dbg !17688
  %width29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17688
  %26 = load i32, i32* %width29, align 4, !dbg !17688
  %cmp30 = icmp slt i32 %25, %26, !dbg !17688
  br i1 %cmp30, label %for.body31, label %for.end, !dbg !17685

for.body31:                                       ; preds = %for.cond27
  %grid32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17690
  %27 = load %struct.CCGElem*, %struct.CCGElem** %grid32, align 8, !dbg !17690
  %tobool33 = icmp ne %struct.CCGElem* %27, null, !dbg !17690
  br i1 %tobool33, label %if.then34, label %if.else68, !dbg !17693

if.then34:                                        ; preds = %for.body31
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17694
  %28 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !17694
  %grid35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17694
  %29 = load %struct.CCGElem*, %struct.CCGElem** %grid35, align 8, !dbg !17694
  %call36 = call float* @CCG_elem_co(%struct.CCGKey* %28, %struct.CCGElem* %29), !dbg !17694
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17694
  store float* %call36, float** %co, align 8, !dbg !17694
  %key37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17694
  %30 = load %struct.CCGKey*, %struct.CCGKey** %key37, align 8, !dbg !17694
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17694
  %31 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !17694
  %call39 = call float* @CCG_elem_no(%struct.CCGKey* %30, %struct.CCGElem* %31), !dbg !17694
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17694
  store float* %call39, float** %fno, align 8, !dbg !17694
  %key40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17694
  %32 = load %struct.CCGKey*, %struct.CCGKey** %key40, align 8, !dbg !17694
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %32, i32 0, i32 9, !dbg !17694
  %33 = load i32, i32* %has_mask, align 4, !dbg !17694
  %tobool41 = icmp ne i32 %33, 0, !dbg !17694
  br i1 %tobool41, label %cond.true, label %cond.false, !dbg !17694

cond.true:                                        ; preds = %if.then34
  %key42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17694
  %34 = load %struct.CCGKey*, %struct.CCGKey** %key42, align 8, !dbg !17694
  %grid43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17694
  %35 = load %struct.CCGElem*, %struct.CCGElem** %grid43, align 8, !dbg !17694
  %call44 = call float* @CCG_elem_mask(%struct.CCGKey* %34, %struct.CCGElem* %35), !dbg !17694
  br label %cond.end, !dbg !17694

cond.false:                                       ; preds = %if.then34
  br label %cond.end, !dbg !17694

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call44, %cond.true ], [ null, %cond.false ], !dbg !17694
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17694
  store float* %cond, float** %mask, align 8, !dbg !17694
  %key45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17694
  %36 = load %struct.CCGKey*, %struct.CCGKey** %key45, align 8, !dbg !17694
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17694
  %37 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !17694
  %call47 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %36, %struct.CCGElem* %37), !dbg !17694
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17694
  store %struct.CCGElem* %call47, %struct.CCGElem** %grid48, align 8, !dbg !17694
  %gh49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17696
  %38 = load i32*, i32** %gh49, align 8, !dbg !17696
  %tobool50 = icmp ne i32* %38, null, !dbg !17696
  br i1 %tobool50, label %if.then51, label %if.end67, !dbg !17694

if.then51:                                        ; preds = %cond.end
  %gh52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17698
  %39 = load i32*, i32** %gh52, align 8, !dbg !17698
  %gy53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17698
  %40 = load i32, i32* %gy53, align 8, !dbg !17698
  %gridsize54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17698
  %41 = load i32, i32* %gridsize54, align 4, !dbg !17698
  %mul = mul nsw i32 %40, %41, !dbg !17698
  %gx55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17698
  %42 = load i32, i32* %gx55, align 4, !dbg !17698
  %add = add nsw i32 %mul, %42, !dbg !17698
  %shr = ashr i32 %add, 5, !dbg !17698
  %idxprom56 = sext i32 %shr to i64, !dbg !17698
  %arrayidx57 = getelementptr inbounds i32, i32* %39, i64 %idxprom56, !dbg !17698
  %43 = load i32, i32* %arrayidx57, align 4, !dbg !17698
  %gy58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17698
  %44 = load i32, i32* %gy58, align 8, !dbg !17698
  %gridsize59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17698
  %45 = load i32, i32* %gridsize59, align 4, !dbg !17698
  %mul60 = mul nsw i32 %44, %45, !dbg !17698
  %gx61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17698
  %46 = load i32, i32* %gx61, align 4, !dbg !17698
  %add62 = add nsw i32 %mul60, %46, !dbg !17698
  %and = and i32 %add62, 31, !dbg !17698
  %shl = shl i32 1, %and, !dbg !17698
  %and63 = and i32 %43, %shl, !dbg !17698
  %tobool64 = icmp ne i32 %and63, 0, !dbg !17698
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !17701

if.then65:                                        ; preds = %if.then51
  br label %for.inc, !dbg !17698

if.end66:                                         ; preds = %if.then51
  br label %if.end67, !dbg !17701

if.end67:                                         ; preds = %if.end66, %cond.end
  br label %if.end129, !dbg !17694

if.else68:                                        ; preds = %for.body31
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17702
  %47 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !17702
  %tobool69 = icmp ne %struct.MVert* %47, null, !dbg !17702
  br i1 %tobool69, label %if.then70, label %if.else99, !dbg !17690

if.then70:                                        ; preds = %if.else68
  %mverts71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17704
  %48 = load %struct.MVert*, %struct.MVert** %mverts71, align 8, !dbg !17704
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17704
  %49 = load i32*, i32** %vert_indices, align 8, !dbg !17704
  %gx72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17704
  %50 = load i32, i32* %gx72, align 4, !dbg !17704
  %idxprom73 = sext i32 %50 to i64, !dbg !17704
  %arrayidx74 = getelementptr inbounds i32, i32* %49, i64 %idxprom73, !dbg !17704
  %51 = load i32, i32* %arrayidx74, align 4, !dbg !17704
  %idxprom75 = sext i32 %51 to i64, !dbg !17704
  %arrayidx76 = getelementptr inbounds %struct.MVert, %struct.MVert* %48, i64 %idxprom75, !dbg !17704
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17704
  store %struct.MVert* %arrayidx76, %struct.MVert** %mvert, align 8, !dbg !17704
  %mvert77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17706
  %52 = load %struct.MVert*, %struct.MVert** %mvert77, align 8, !dbg !17706
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i32 0, i32 2, !dbg !17706
  %53 = load i8, i8* %flag, align 2, !dbg !17706
  %conv = zext i8 %53 to i32, !dbg !17706
  %and78 = and i32 %conv, 16, !dbg !17706
  %tobool79 = icmp ne i32 %and78, 0, !dbg !17706
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !17704

if.then80:                                        ; preds = %if.then70
  br label %for.inc, !dbg !17706

if.end81:                                         ; preds = %if.then70
  %mvert82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17704
  %54 = load %struct.MVert*, %struct.MVert** %mvert82, align 8, !dbg !17704
  %co83 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 0, i32 0, !dbg !17704
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !17704
  %co84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17704
  store float* %arraydecay, float** %co84, align 8, !dbg !17704
  %mvert85 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17704
  %55 = load %struct.MVert*, %struct.MVert** %mvert85, align 8, !dbg !17704
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %55, i32 0, i32 1, !dbg !17704
  %arraydecay86 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !17704
  %no87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17704
  store i16* %arraydecay86, i16** %no87, align 8, !dbg !17704
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17708
  %56 = load float*, float** %vmask, align 8, !dbg !17708
  %tobool88 = icmp ne float* %56, null, !dbg !17708
  br i1 %tobool88, label %if.then89, label %if.end98, !dbg !17704

if.then89:                                        ; preds = %if.end81
  %vmask90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17708
  %57 = load float*, float** %vmask90, align 8, !dbg !17708
  %vert_indices91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17708
  %58 = load i32*, i32** %vert_indices91, align 8, !dbg !17708
  %gx92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17708
  %59 = load i32, i32* %gx92, align 4, !dbg !17708
  %idxprom93 = sext i32 %59 to i64, !dbg !17708
  %arrayidx94 = getelementptr inbounds i32, i32* %58, i64 %idxprom93, !dbg !17708
  %60 = load i32, i32* %arrayidx94, align 4, !dbg !17708
  %idxprom95 = sext i32 %60 to i64, !dbg !17708
  %arrayidx96 = getelementptr inbounds float, float* %57, i64 %idxprom95, !dbg !17708
  %mask97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17708
  store float* %arrayidx96, float** %mask97, align 8, !dbg !17708
  br label %if.end98, !dbg !17708

if.end98:                                         ; preds = %if.then89, %if.end81
  br label %if.end128, !dbg !17704

if.else99:                                        ; preds = %if.else68
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17710
  %call100 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !17710
  %tobool101 = icmp ne i8 %call100, 0, !dbg !17710
  br i1 %tobool101, label %if.else106, label %if.then102, !dbg !17713

if.then102:                                       ; preds = %if.else99
  %bm_unique_verts103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17714
  %call104 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts103), !dbg !17714
  %61 = bitcast i8* %call104 to %struct.BMVert*, !dbg !17714
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17714
  store %struct.BMVert* %61, %struct.BMVert** %bm_vert, align 8, !dbg !17714
  %bm_unique_verts105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17714
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts105), !dbg !17714
  br label %if.end110, !dbg !17714

if.else106:                                       ; preds = %if.else99
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17716
  %call107 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !17716
  %62 = bitcast i8* %call107 to %struct.BMVert*, !dbg !17716
  %bm_vert108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17716
  store %struct.BMVert* %62, %struct.BMVert** %bm_vert108, align 8, !dbg !17716
  %bm_other_verts109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17716
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts109), !dbg !17716
  br label %if.end110

if.end110:                                        ; preds = %if.else106, %if.then102
  %bm_vert111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17718
  %63 = load %struct.BMVert*, %struct.BMVert** %bm_vert111, align 8, !dbg !17718
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %63, i32 0, i32 0, !dbg !17718
  %call112 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !17718
  %conv113 = zext i8 %call112 to i32, !dbg !17718
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !17718
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !17713

if.then115:                                       ; preds = %if.end110
  br label %for.inc, !dbg !17718

if.end116:                                        ; preds = %if.end110
  %bm_vert117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17713
  %64 = load %struct.BMVert*, %struct.BMVert** %bm_vert117, align 8, !dbg !17713
  %co118 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %64, i32 0, i32 2, !dbg !17713
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !17713
  %co120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17713
  store float* %arraydecay119, float** %co120, align 8, !dbg !17713
  %bm_vert121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17713
  %65 = load %struct.BMVert*, %struct.BMVert** %bm_vert121, align 8, !dbg !17713
  %no122 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %65, i32 0, i32 3, !dbg !17713
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %no122, i64 0, i64 0, !dbg !17713
  %fno124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17713
  store float* %arraydecay123, float** %fno124, align 8, !dbg !17713
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17713
  %66 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !17713
  %head126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %66, i32 0, i32 0, !dbg !17713
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head126, i32 0, i32 0, !dbg !17713
  %67 = load i8*, i8** %data, align 8, !dbg !17713
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !17713
  %68 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !17713
  %idx.ext = sext i32 %68 to i64, !dbg !17713
  %add.ptr = getelementptr inbounds i8, i8* %67, i64 %idx.ext, !dbg !17713
  %69 = bitcast i8* %add.ptr to float*, !dbg !17713
  %mask127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17713
  store float* %69, float** %mask127, align 8, !dbg !17713
  br label %if.end128

if.end128:                                        ; preds = %if.end116, %if.end98
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end67
  %co130 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17720
  %70 = load float*, float** %co130, align 8, !dbg !17720
  %call131 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %70), !dbg !17723
  %tobool132 = icmp ne i8 %call131, 0, !dbg !17723
  br i1 %tobool132, label %if.then133, label %if.end200, !dbg !17724

if.then133:                                       ; preds = %if.end129
  call void @llvm.dbg.declare(metadata float* %fade, metadata !17725, metadata !DIExpression()), !dbg !17727
  %71 = load float, float* %bstrength.addr, align 4, !dbg !17728
  %72 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17729
  %73 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !17730
  %co134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17731
  %74 = load float*, float** %co134, align 8, !dbg !17731
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !17732
  %75 = load float, float* %dist, align 8, !dbg !17732
  %no135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17733
  %76 = load i16*, i16** %no135, align 8, !dbg !17733
  %fno136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17734
  %77 = load float*, float** %fno136, align 8, !dbg !17734
  %78 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17735
  %tobool137 = icmp ne i32 %78, 0, !dbg !17735
  br i1 %tobool137, label %cond.true138, label %cond.false139, !dbg !17735

cond.true138:                                     ; preds = %if.then133
  br label %cond.end147, !dbg !17735

cond.false139:                                    ; preds = %if.then133
  %mask140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17736
  %79 = load float*, float** %mask140, align 8, !dbg !17736
  %tobool141 = icmp ne float* %79, null, !dbg !17737
  br i1 %tobool141, label %cond.true142, label %cond.false144, !dbg !17737

cond.true142:                                     ; preds = %cond.false139
  %mask143 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17738
  %80 = load float*, float** %mask143, align 8, !dbg !17738
  %81 = load float, float* %80, align 4, !dbg !17739
  br label %cond.end145, !dbg !17737

cond.false144:                                    ; preds = %cond.false139
  br label %cond.end145, !dbg !17737

cond.end145:                                      ; preds = %cond.false144, %cond.true142
  %cond146 = phi float [ %81, %cond.true142 ], [ 0.000000e+00, %cond.false144 ], !dbg !17737
  br label %cond.end147, !dbg !17735

cond.end147:                                      ; preds = %cond.end145, %cond.true138
  %cond148 = phi float [ 0.000000e+00, %cond.true138 ], [ %cond146, %cond.end145 ], !dbg !17735
  %call149 = call float @tex_strength(%struct.SculptSession* %72, %struct.Brush* %73, float* %74, float %75, i16* %76, float* %77, float %cond148), !dbg !17740
  %mul150 = fmul float %71, %call149, !dbg !17741
  store float %mul150, float* %fade, align 4, !dbg !17727
  %82 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17742
  %tobool151 = icmp ne i32 %82, 0, !dbg !17742
  br i1 %tobool151, label %if.then152, label %if.else176, !dbg !17744

if.then152:                                       ; preds = %cond.end147
  call void @llvm.dbg.declare(metadata float* %val, metadata !17745, metadata !DIExpression()), !dbg !17747
  %83 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17748
  %vert_indices153 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17749
  %84 = load i32*, i32** %vert_indices153, align 8, !dbg !17749
  %i154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17750
  %85 = load i32, i32* %i154, align 4, !dbg !17750
  %idxprom155 = sext i32 %85 to i64, !dbg !17751
  %arrayidx156 = getelementptr inbounds i32, i32* %84, i64 %idxprom155, !dbg !17751
  %86 = load i32, i32* %arrayidx156, align 4, !dbg !17751
  %call157 = call float @neighbor_average_mask(%struct.SculptSession* %83, i32 %86), !dbg !17752
  %mask158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17753
  %87 = load float*, float** %mask158, align 8, !dbg !17753
  %88 = load float, float* %87, align 4, !dbg !17754
  %sub = fsub float %call157, %88, !dbg !17755
  store float %sub, float* %val, align 4, !dbg !17747
  %89 = load float, float* %fade, align 4, !dbg !17756
  %90 = load float, float* %bstrength.addr, align 4, !dbg !17757
  %mul159 = fmul float %89, %90, !dbg !17758
  %91 = load float, float* %val, align 4, !dbg !17759
  %mul160 = fmul float %91, %mul159, !dbg !17759
  store float %mul160, float* %val, align 4, !dbg !17759
  %92 = load float, float* %val, align 4, !dbg !17760
  %mask161 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17761
  %93 = load float*, float** %mask161, align 8, !dbg !17761
  %94 = load float, float* %93, align 4, !dbg !17762
  %add162 = fadd float %94, %92, !dbg !17762
  store float %add162, float* %93, align 4, !dbg !17762
  %mask163 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17763
  %95 = load float*, float** %mask163, align 8, !dbg !17763
  %96 = load float, float* %95, align 4, !dbg !17763
  %cmp164 = fcmp olt float %96, 0.000000e+00, !dbg !17763
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !17766

if.then166:                                       ; preds = %if.then152
  %mask167 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17763
  %97 = load float*, float** %mask167, align 8, !dbg !17763
  store float 0.000000e+00, float* %97, align 4, !dbg !17763
  br label %if.end175, !dbg !17763

if.else168:                                       ; preds = %if.then152
  %mask169 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17767
  %98 = load float*, float** %mask169, align 8, !dbg !17767
  %99 = load float, float* %98, align 4, !dbg !17767
  %cmp170 = fcmp ogt float %99, 1.000000e+00, !dbg !17767
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !17763

if.then172:                                       ; preds = %if.else168
  %mask173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17767
  %100 = load float*, float** %mask173, align 8, !dbg !17767
  store float 1.000000e+00, float* %100, align 4, !dbg !17767
  br label %if.end174, !dbg !17767

if.end174:                                        ; preds = %if.then172, %if.else168
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then166
  br label %if.end191, !dbg !17769

if.else176:                                       ; preds = %cond.end147
  call void @llvm.dbg.declare(metadata [3 x float]* %avg, metadata !17770, metadata !DIExpression()), !dbg !17772
  call void @llvm.dbg.declare(metadata [3 x float]* %val177, metadata !17773, metadata !DIExpression()), !dbg !17774
  %101 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17775
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !17776
  %vert_indices179 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17777
  %102 = load i32*, i32** %vert_indices179, align 8, !dbg !17777
  %i180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17778
  %103 = load i32, i32* %i180, align 4, !dbg !17778
  %idxprom181 = sext i32 %103 to i64, !dbg !17779
  %arrayidx182 = getelementptr inbounds i32, i32* %102, i64 %idxprom181, !dbg !17779
  %104 = load i32, i32* %arrayidx182, align 4, !dbg !17779
  call void @neighbor_average(%struct.SculptSession* %101, float* %arraydecay178, i32 %104), !dbg !17780
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %val177, i64 0, i64 0, !dbg !17781
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !17782
  %co185 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17783
  %105 = load float*, float** %co185, align 8, !dbg !17783
  call void @sub_v3_v3v3(float* %arraydecay183, float* %arraydecay184, float* %105), !dbg !17784
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %val177, i64 0, i64 0, !dbg !17785
  %106 = load float, float* %fade, align 4, !dbg !17786
  call void @mul_v3_fl(float* %arraydecay186, float %106), !dbg !17787
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %val177, i64 0, i64 0, !dbg !17788
  %co188 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17789
  %107 = load float*, float** %co188, align 8, !dbg !17789
  call void @add_v3_v3(float* %arraydecay187, float* %107), !dbg !17790
  %108 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17791
  %109 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17792
  %co189 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17793
  %110 = load float*, float** %co189, align 8, !dbg !17793
  %arraydecay190 = getelementptr inbounds [3 x float], [3 x float]* %val177, i64 0, i64 0, !dbg !17794
  call void @sculpt_clip(%struct.Sculpt* %108, %struct.SculptSession* %109, float* %110, float* %arraydecay190), !dbg !17795
  br label %if.end191

if.end191:                                        ; preds = %if.else176, %if.end175
  %mvert192 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17796
  %111 = load %struct.MVert*, %struct.MVert** %mvert192, align 8, !dbg !17796
  %tobool193 = icmp ne %struct.MVert* %111, null, !dbg !17798
  br i1 %tobool193, label %if.then194, label %if.end199, !dbg !17799

if.then194:                                       ; preds = %if.end191
  %mvert195 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17800
  %112 = load %struct.MVert*, %struct.MVert** %mvert195, align 8, !dbg !17800
  %flag196 = getelementptr inbounds %struct.MVert, %struct.MVert* %112, i32 0, i32 2, !dbg !17801
  %113 = load i8, i8* %flag196, align 2, !dbg !17802
  %conv197 = zext i8 %113 to i32, !dbg !17802
  %or = or i32 %conv197, 128, !dbg !17802
  %conv198 = trunc i32 %or to i8, !dbg !17802
  store i8 %conv198, i8* %flag196, align 2, !dbg !17802
  br label %if.end199, !dbg !17803

if.end199:                                        ; preds = %if.then194, %if.end191
  br label %if.end200, !dbg !17804

if.end200:                                        ; preds = %if.end199, %if.end129
  br label %for.inc, !dbg !17805

for.inc:                                          ; preds = %if.end200, %if.then115, %if.then80, %if.then65
  %gx201 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17688
  %114 = load i32, i32* %gx201, align 4, !dbg !17688
  %inc = add nsw i32 %114, 1, !dbg !17688
  store i32 %inc, i32* %gx201, align 4, !dbg !17688
  %i202 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17688
  %115 = load i32, i32* %i202, align 4, !dbg !17688
  %inc203 = add nsw i32 %115, 1, !dbg !17688
  store i32 %inc203, i32* %i202, align 4, !dbg !17688
  br label %for.cond27, !dbg !17688, !llvm.loop !17806

for.end:                                          ; preds = %for.cond27
  br label %for.inc204, !dbg !17808

for.inc204:                                       ; preds = %for.end
  %gy205 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17683
  %116 = load i32, i32* %gy205, align 8, !dbg !17683
  %inc206 = add nsw i32 %116, 1, !dbg !17683
  store i32 %inc206, i32* %gy205, align 8, !dbg !17683
  br label %for.cond22, !dbg !17683, !llvm.loop !17809

for.end207:                                       ; preds = %for.cond22
  br label %for.inc208, !dbg !17811

for.inc208:                                       ; preds = %for.end207
  %g209 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17669
  %117 = load i32, i32* %g209, align 8, !dbg !17669
  %inc210 = add nsw i32 %117, 1, !dbg !17669
  store i32 %inc210, i32* %g209, align 8, !dbg !17669
  br label %for.cond, !dbg !17669, !llvm.loop !17812

for.end211:                                       ; preds = %for.cond
  ret void, !dbg !17814
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_bmesh_smooth_brush(%struct.Sculpt* %sd, %struct.SculptSession* %ss, %struct.PBVHNode* %node, float %bstrength, i32 %smooth_mask) #0 !dbg !17815 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %ss.addr = alloca %struct.SculptSession*, align 8
  %node.addr = alloca %struct.PBVHNode*, align 8
  %bstrength.addr = alloca float, align 4
  %smooth_mask.addr = alloca i32, align 4
  %brush = alloca %struct.Brush*, align 8
  %vd = alloca %struct.PBVHVertexIter, align 8
  %test = alloca %struct.SculptBrushTest, align 8
  %fade = alloca float, align 4
  %val = alloca float, align 4
  %avg = alloca [3 x float], align 4
  %val168 = alloca [3 x float], align 4
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !17816, metadata !DIExpression()), !dbg !17817
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !17818, metadata !DIExpression()), !dbg !17819
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !17820, metadata !DIExpression()), !dbg !17821
  store float %bstrength, float* %bstrength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %bstrength.addr, metadata !17822, metadata !DIExpression()), !dbg !17823
  store i32 %smooth_mask, i32* %smooth_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_mask.addr, metadata !17824, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !17826, metadata !DIExpression()), !dbg !17827
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17828
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !17829
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !17830
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !17827
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter* %vd, metadata !17831, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.declare(metadata %struct.SculptBrushTest* %test, metadata !17833, metadata !DIExpression()), !dbg !17834
  %1 = load float, float* %bstrength.addr, align 4, !dbg !17835
  %cmp = fcmp olt float %1, 0.000000e+00, !dbg !17835
  br i1 %cmp, label %if.then, label %if.else, !dbg !17838

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %bstrength.addr, align 4, !dbg !17835
  br label %if.end3, !dbg !17835

if.else:                                          ; preds = %entry
  %2 = load float, float* %bstrength.addr, align 4, !dbg !17839
  %cmp1 = fcmp ogt float %2, 1.000000e+00, !dbg !17839
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !17835

if.then2:                                         ; preds = %if.else
  store float 1.000000e+00, float* %bstrength.addr, align 4, !dbg !17839
  br label %if.end, !dbg !17839

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17841
  call void @sculpt_brush_test_init(%struct.SculptSession* %3, %struct.SculptBrushTest* %test), !dbg !17842
  %4 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17843
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %4, i32 0, i32 15, !dbg !17843
  %5 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !17843
  %6 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !17843
  call void @pbvh_vertex_iter_init(%struct.PBVH* %5, %struct.PBVHNode* %6, %struct.PBVHVertexIter* %vd, i32 1), !dbg !17843
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17844
  store i32 0, i32* %i, align 4, !dbg !17844
  %g = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17844
  store i32 0, i32* %g, align 8, !dbg !17844
  br label %for.cond, !dbg !17844

for.cond:                                         ; preds = %for.inc196, %if.end3
  %g4 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17846
  %7 = load i32, i32* %g4, align 8, !dbg !17846
  %totgrid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 12, !dbg !17846
  %8 = load i32, i32* %totgrid, align 8, !dbg !17846
  %cmp5 = icmp slt i32 %7, %8, !dbg !17846
  br i1 %cmp5, label %for.body, label %for.end199, !dbg !17844

for.body:                                         ; preds = %for.cond
  %grids = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17848
  %9 = load %struct.CCGElem**, %struct.CCGElem*** %grids, align 8, !dbg !17848
  %tobool = icmp ne %struct.CCGElem** %9, null, !dbg !17848
  br i1 %tobool, label %if.then6, label %if.else18, !dbg !17851

if.then6:                                         ; preds = %for.body
  %gridsize = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17852
  %10 = load i32, i32* %gridsize, align 4, !dbg !17852
  %width = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17852
  store i32 %10, i32* %width, align 4, !dbg !17852
  %gridsize7 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17852
  %11 = load i32, i32* %gridsize7, align 4, !dbg !17852
  %height = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17852
  store i32 %11, i32* %height, align 8, !dbg !17852
  %grids8 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 6, !dbg !17852
  %12 = load %struct.CCGElem**, %struct.CCGElem*** %grids8, align 8, !dbg !17852
  %grid_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17852
  %13 = load i32*, i32** %grid_indices, align 8, !dbg !17852
  %g9 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17852
  %14 = load i32, i32* %g9, align 8, !dbg !17852
  %idxprom = sext i32 %14 to i64, !dbg !17852
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !17852
  %15 = load i32, i32* %arrayidx, align 4, !dbg !17852
  %idxprom10 = sext i32 %15 to i64, !dbg !17852
  %arrayidx11 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %12, i64 %idxprom10, !dbg !17852
  %16 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx11, align 8, !dbg !17852
  %grid = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17852
  store %struct.CCGElem* %16, %struct.CCGElem** %grid, align 8, !dbg !17852
  %grid_hidden = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 9, !dbg !17854
  %17 = load i32**, i32*** %grid_hidden, align 8, !dbg !17854
  %grid_indices12 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 11, !dbg !17854
  %18 = load i32*, i32** %grid_indices12, align 8, !dbg !17854
  %g13 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17854
  %19 = load i32, i32* %g13, align 8, !dbg !17854
  %idxprom14 = sext i32 %19 to i64, !dbg !17854
  %arrayidx15 = getelementptr inbounds i32, i32* %18, i64 %idxprom14, !dbg !17854
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !17854
  %idxprom16 = sext i32 %20 to i64, !dbg !17854
  %arrayidx17 = getelementptr inbounds i32*, i32** %17, i64 %idxprom16, !dbg !17854
  %21 = load i32*, i32** %arrayidx17, align 8, !dbg !17854
  %gh = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17854
  store i32* %21, i32** %gh, align 8, !dbg !17854
  br label %if.end21, !dbg !17852

if.else18:                                        ; preds = %for.body
  %totvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 15, !dbg !17856
  %22 = load i32, i32* %totvert, align 8, !dbg !17856
  %width19 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17856
  store i32 %22, i32* %width19, align 4, !dbg !17856
  %height20 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17856
  store i32 1, i32* %height20, align 8, !dbg !17856
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.then6
  %gy = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17858
  store i32 0, i32* %gy, align 8, !dbg !17858
  br label %for.cond22, !dbg !17858

for.cond22:                                       ; preds = %for.inc192, %if.end21
  %gy23 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17860
  %23 = load i32, i32* %gy23, align 8, !dbg !17860
  %height24 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 2, !dbg !17860
  %24 = load i32, i32* %height24, align 8, !dbg !17860
  %cmp25 = icmp slt i32 %23, %24, !dbg !17860
  br i1 %cmp25, label %for.body26, label %for.end195, !dbg !17858

for.body26:                                       ; preds = %for.cond22
  %gx = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17862
  store i32 0, i32* %gx, align 4, !dbg !17862
  br label %for.cond27, !dbg !17862

for.cond27:                                       ; preds = %for.inc, %for.body26
  %gx28 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17865
  %25 = load i32, i32* %gx28, align 4, !dbg !17865
  %width29 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 1, !dbg !17865
  %26 = load i32, i32* %width29, align 4, !dbg !17865
  %cmp30 = icmp slt i32 %25, %26, !dbg !17865
  br i1 %cmp30, label %for.body31, label %for.end, !dbg !17862

for.body31:                                       ; preds = %for.cond27
  %grid32 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17867
  %27 = load %struct.CCGElem*, %struct.CCGElem** %grid32, align 8, !dbg !17867
  %tobool33 = icmp ne %struct.CCGElem* %27, null, !dbg !17867
  br i1 %tobool33, label %if.then34, label %if.else68, !dbg !17870

if.then34:                                        ; preds = %for.body31
  %key = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17871
  %28 = load %struct.CCGKey*, %struct.CCGKey** %key, align 8, !dbg !17871
  %grid35 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17871
  %29 = load %struct.CCGElem*, %struct.CCGElem** %grid35, align 8, !dbg !17871
  %call36 = call float* @CCG_elem_co(%struct.CCGKey* %28, %struct.CCGElem* %29), !dbg !17871
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17871
  store float* %call36, float** %co, align 8, !dbg !17871
  %key37 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17871
  %30 = load %struct.CCGKey*, %struct.CCGKey** %key37, align 8, !dbg !17871
  %grid38 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17871
  %31 = load %struct.CCGElem*, %struct.CCGElem** %grid38, align 8, !dbg !17871
  %call39 = call float* @CCG_elem_no(%struct.CCGKey* %30, %struct.CCGElem* %31), !dbg !17871
  %fno = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17871
  store float* %call39, float** %fno, align 8, !dbg !17871
  %key40 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17871
  %32 = load %struct.CCGKey*, %struct.CCGKey** %key40, align 8, !dbg !17871
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %32, i32 0, i32 9, !dbg !17871
  %33 = load i32, i32* %has_mask, align 4, !dbg !17871
  %tobool41 = icmp ne i32 %33, 0, !dbg !17871
  br i1 %tobool41, label %cond.true, label %cond.false, !dbg !17871

cond.true:                                        ; preds = %if.then34
  %key42 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17871
  %34 = load %struct.CCGKey*, %struct.CCGKey** %key42, align 8, !dbg !17871
  %grid43 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17871
  %35 = load %struct.CCGElem*, %struct.CCGElem** %grid43, align 8, !dbg !17871
  %call44 = call float* @CCG_elem_mask(%struct.CCGKey* %34, %struct.CCGElem* %35), !dbg !17871
  br label %cond.end, !dbg !17871

cond.false:                                       ; preds = %if.then34
  br label %cond.end, !dbg !17871

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call44, %cond.true ], [ null, %cond.false ], !dbg !17871
  %mask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17871
  store float* %cond, float** %mask, align 8, !dbg !17871
  %key45 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 8, !dbg !17871
  %36 = load %struct.CCGKey*, %struct.CCGKey** %key45, align 8, !dbg !17871
  %grid46 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17871
  %37 = load %struct.CCGElem*, %struct.CCGElem** %grid46, align 8, !dbg !17871
  %call47 = call %struct.CCGElem* @CCG_elem_next(%struct.CCGKey* %36, %struct.CCGElem* %37), !dbg !17871
  %grid48 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 7, !dbg !17871
  store %struct.CCGElem* %call47, %struct.CCGElem** %grid48, align 8, !dbg !17871
  %gh49 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17873
  %38 = load i32*, i32** %gh49, align 8, !dbg !17873
  %tobool50 = icmp ne i32* %38, null, !dbg !17873
  br i1 %tobool50, label %if.then51, label %if.end67, !dbg !17871

if.then51:                                        ; preds = %cond.end
  %gh52 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 10, !dbg !17875
  %39 = load i32*, i32** %gh52, align 8, !dbg !17875
  %gy53 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17875
  %40 = load i32, i32* %gy53, align 8, !dbg !17875
  %gridsize54 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17875
  %41 = load i32, i32* %gridsize54, align 4, !dbg !17875
  %mul = mul nsw i32 %40, %41, !dbg !17875
  %gx55 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17875
  %42 = load i32, i32* %gx55, align 4, !dbg !17875
  %add = add nsw i32 %mul, %42, !dbg !17875
  %shr = ashr i32 %add, 5, !dbg !17875
  %idxprom56 = sext i32 %shr to i64, !dbg !17875
  %arrayidx57 = getelementptr inbounds i32, i32* %39, i64 %idxprom56, !dbg !17875
  %43 = load i32, i32* %arrayidx57, align 4, !dbg !17875
  %gy58 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17875
  %44 = load i32, i32* %gy58, align 8, !dbg !17875
  %gridsize59 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 13, !dbg !17875
  %45 = load i32, i32* %gridsize59, align 4, !dbg !17875
  %mul60 = mul nsw i32 %44, %45, !dbg !17875
  %gx61 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17875
  %46 = load i32, i32* %gx61, align 4, !dbg !17875
  %add62 = add nsw i32 %mul60, %46, !dbg !17875
  %and = and i32 %add62, 31, !dbg !17875
  %shl = shl i32 1, %and, !dbg !17875
  %and63 = and i32 %43, %shl, !dbg !17875
  %tobool64 = icmp ne i32 %and63, 0, !dbg !17875
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !17878

if.then65:                                        ; preds = %if.then51
  br label %for.inc, !dbg !17875

if.end66:                                         ; preds = %if.then51
  br label %if.end67, !dbg !17878

if.end67:                                         ; preds = %if.end66, %cond.end
  br label %if.end129, !dbg !17871

if.else68:                                        ; preds = %for.body31
  %mverts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17879
  %47 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !17879
  %tobool69 = icmp ne %struct.MVert* %47, null, !dbg !17879
  br i1 %tobool69, label %if.then70, label %if.else99, !dbg !17867

if.then70:                                        ; preds = %if.else68
  %mverts71 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 14, !dbg !17881
  %48 = load %struct.MVert*, %struct.MVert** %mverts71, align 8, !dbg !17881
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17881
  %49 = load i32*, i32** %vert_indices, align 8, !dbg !17881
  %gx72 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17881
  %50 = load i32, i32* %gx72, align 4, !dbg !17881
  %idxprom73 = sext i32 %50 to i64, !dbg !17881
  %arrayidx74 = getelementptr inbounds i32, i32* %49, i64 %idxprom73, !dbg !17881
  %51 = load i32, i32* %arrayidx74, align 4, !dbg !17881
  %idxprom75 = sext i32 %51 to i64, !dbg !17881
  %arrayidx76 = getelementptr inbounds %struct.MVert, %struct.MVert* %48, i64 %idxprom75, !dbg !17881
  %mvert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17881
  store %struct.MVert* %arrayidx76, %struct.MVert** %mvert, align 8, !dbg !17881
  %mvert77 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17883
  %52 = load %struct.MVert*, %struct.MVert** %mvert77, align 8, !dbg !17883
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i32 0, i32 2, !dbg !17883
  %53 = load i8, i8* %flag, align 2, !dbg !17883
  %conv = zext i8 %53 to i32, !dbg !17883
  %and78 = and i32 %conv, 16, !dbg !17883
  %tobool79 = icmp ne i32 %and78, 0, !dbg !17883
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !17881

if.then80:                                        ; preds = %if.then70
  br label %for.inc, !dbg !17883

if.end81:                                         ; preds = %if.then70
  %mvert82 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17881
  %54 = load %struct.MVert*, %struct.MVert** %mvert82, align 8, !dbg !17881
  %co83 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 0, i32 0, !dbg !17881
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !17881
  %co84 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17881
  store float* %arraydecay, float** %co84, align 8, !dbg !17881
  %mvert85 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17881
  %55 = load %struct.MVert*, %struct.MVert** %mvert85, align 8, !dbg !17881
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %55, i32 0, i32 1, !dbg !17881
  %arraydecay86 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !17881
  %no87 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17881
  store i16* %arraydecay86, i16** %no87, align 8, !dbg !17881
  %vmask = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17885
  %56 = load float*, float** %vmask, align 8, !dbg !17885
  %tobool88 = icmp ne float* %56, null, !dbg !17885
  br i1 %tobool88, label %if.then89, label %if.end98, !dbg !17881

if.then89:                                        ; preds = %if.end81
  %vmask90 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 17, !dbg !17885
  %57 = load float*, float** %vmask90, align 8, !dbg !17885
  %vert_indices91 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 16, !dbg !17885
  %58 = load i32*, i32** %vert_indices91, align 8, !dbg !17885
  %gx92 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17885
  %59 = load i32, i32* %gx92, align 4, !dbg !17885
  %idxprom93 = sext i32 %59 to i64, !dbg !17885
  %arrayidx94 = getelementptr inbounds i32, i32* %58, i64 %idxprom93, !dbg !17885
  %60 = load i32, i32* %arrayidx94, align 4, !dbg !17885
  %idxprom95 = sext i32 %60 to i64, !dbg !17885
  %arrayidx96 = getelementptr inbounds float, float* %57, i64 %idxprom95, !dbg !17885
  %mask97 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17885
  store float* %arrayidx96, float** %mask97, align 8, !dbg !17885
  br label %if.end98, !dbg !17885

if.end98:                                         ; preds = %if.then89, %if.end81
  br label %if.end128, !dbg !17881

if.else99:                                        ; preds = %if.else68
  %bm_unique_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17887
  %call100 = call zeroext i8 @BLI_gsetIterator_done(%struct.GSetIterator* %bm_unique_verts), !dbg !17887
  %tobool101 = icmp ne i8 %call100, 0, !dbg !17887
  br i1 %tobool101, label %if.else106, label %if.then102, !dbg !17890

if.then102:                                       ; preds = %if.else99
  %bm_unique_verts103 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17891
  %call104 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_unique_verts103), !dbg !17891
  %61 = bitcast i8* %call104 to %struct.BMVert*, !dbg !17891
  %bm_vert = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17891
  store %struct.BMVert* %61, %struct.BMVert** %bm_vert, align 8, !dbg !17891
  %bm_unique_verts105 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 18, !dbg !17891
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_unique_verts105), !dbg !17891
  br label %if.end110, !dbg !17891

if.else106:                                       ; preds = %if.else99
  %bm_other_verts = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17893
  %call107 = call i8* @BLI_gsetIterator_getKey(%struct.GSetIterator* %bm_other_verts), !dbg !17893
  %62 = bitcast i8* %call107 to %struct.BMVert*, !dbg !17893
  %bm_vert108 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17893
  store %struct.BMVert* %62, %struct.BMVert** %bm_vert108, align 8, !dbg !17893
  %bm_other_verts109 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 19, !dbg !17893
  call void @BLI_gsetIterator_step(%struct.GSetIterator* %bm_other_verts109), !dbg !17893
  br label %if.end110

if.end110:                                        ; preds = %if.else106, %if.then102
  %bm_vert111 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17895
  %63 = load %struct.BMVert*, %struct.BMVert** %bm_vert111, align 8, !dbg !17895
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %63, i32 0, i32 0, !dbg !17895
  %call112 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !17895
  %conv113 = zext i8 %call112 to i32, !dbg !17895
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !17895
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !17890

if.then115:                                       ; preds = %if.end110
  br label %for.inc, !dbg !17895

if.end116:                                        ; preds = %if.end110
  %bm_vert117 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17890
  %64 = load %struct.BMVert*, %struct.BMVert** %bm_vert117, align 8, !dbg !17890
  %co118 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %64, i32 0, i32 2, !dbg !17890
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !17890
  %co120 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17890
  store float* %arraydecay119, float** %co120, align 8, !dbg !17890
  %bm_vert121 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17890
  %65 = load %struct.BMVert*, %struct.BMVert** %bm_vert121, align 8, !dbg !17890
  %no122 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %65, i32 0, i32 3, !dbg !17890
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %no122, i64 0, i64 0, !dbg !17890
  %fno124 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17890
  store float* %arraydecay123, float** %fno124, align 8, !dbg !17890
  %bm_vert125 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17890
  %66 = load %struct.BMVert*, %struct.BMVert** %bm_vert125, align 8, !dbg !17890
  %head126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %66, i32 0, i32 0, !dbg !17890
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head126, i32 0, i32 0, !dbg !17890
  %67 = load i8*, i8** %data, align 8, !dbg !17890
  %cd_vert_mask_offset = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 21, !dbg !17890
  %68 = load i32, i32* %cd_vert_mask_offset, align 8, !dbg !17890
  %idx.ext = sext i32 %68 to i64, !dbg !17890
  %add.ptr = getelementptr inbounds i8, i8* %67, i64 %idx.ext, !dbg !17890
  %69 = bitcast i8* %add.ptr to float*, !dbg !17890
  %mask127 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17890
  store float* %69, float** %mask127, align 8, !dbg !17890
  br label %if.end128

if.end128:                                        ; preds = %if.end116, %if.end98
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end67
  %co130 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17897
  %70 = load float*, float** %co130, align 8, !dbg !17897
  %call131 = call zeroext i8 @sculpt_brush_test(%struct.SculptBrushTest* %test, float* %70), !dbg !17900
  %tobool132 = icmp ne i8 %call131, 0, !dbg !17900
  br i1 %tobool132, label %if.then133, label %if.end188, !dbg !17901

if.then133:                                       ; preds = %if.end129
  call void @llvm.dbg.declare(metadata float* %fade, metadata !17902, metadata !DIExpression()), !dbg !17904
  %71 = load float, float* %bstrength.addr, align 4, !dbg !17905
  %72 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17906
  %73 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !17907
  %co134 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17908
  %74 = load float*, float** %co134, align 8, !dbg !17908
  %dist = getelementptr inbounds %struct.SculptBrushTest, %struct.SculptBrushTest* %test, i32 0, i32 2, !dbg !17909
  %75 = load float, float* %dist, align 8, !dbg !17909
  %no135 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 25, !dbg !17910
  %76 = load i16*, i16** %no135, align 8, !dbg !17910
  %fno136 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 26, !dbg !17911
  %77 = load float*, float** %fno136, align 8, !dbg !17911
  %78 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17912
  %tobool137 = icmp ne i32 %78, 0, !dbg !17912
  br i1 %tobool137, label %cond.true138, label %cond.false139, !dbg !17912

cond.true138:                                     ; preds = %if.then133
  br label %cond.end141, !dbg !17912

cond.false139:                                    ; preds = %if.then133
  %mask140 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17913
  %79 = load float*, float** %mask140, align 8, !dbg !17913
  %80 = load float, float* %79, align 4, !dbg !17914
  br label %cond.end141, !dbg !17912

cond.end141:                                      ; preds = %cond.false139, %cond.true138
  %cond142 = phi float [ 0.000000e+00, %cond.true138 ], [ %80, %cond.false139 ], !dbg !17912
  %call143 = call float @tex_strength(%struct.SculptSession* %72, %struct.Brush* %73, float* %74, float %75, i16* %76, float* %77, float %cond142), !dbg !17915
  %mul144 = fmul float %71, %call143, !dbg !17916
  store float %mul144, float* %fade, align 4, !dbg !17904
  %81 = load i32, i32* %smooth_mask.addr, align 4, !dbg !17917
  %tobool145 = icmp ne i32 %81, 0, !dbg !17917
  br i1 %tobool145, label %if.then146, label %if.else167, !dbg !17919

if.then146:                                       ; preds = %cond.end141
  call void @llvm.dbg.declare(metadata float* %val, metadata !17920, metadata !DIExpression()), !dbg !17922
  %82 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17923
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %82, i32 0, i32 10, !dbg !17924
  %83 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !17924
  %bm_vert147 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17925
  %84 = load %struct.BMVert*, %struct.BMVert** %bm_vert147, align 8, !dbg !17925
  %call148 = call float @bmesh_neighbor_average_mask(%struct.BMesh* %83, %struct.BMVert* %84), !dbg !17926
  %mask149 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17927
  %85 = load float*, float** %mask149, align 8, !dbg !17927
  %86 = load float, float* %85, align 4, !dbg !17928
  %sub = fsub float %call148, %86, !dbg !17929
  store float %sub, float* %val, align 4, !dbg !17922
  %87 = load float, float* %fade, align 4, !dbg !17930
  %88 = load float, float* %bstrength.addr, align 4, !dbg !17931
  %mul150 = fmul float %87, %88, !dbg !17932
  %89 = load float, float* %val, align 4, !dbg !17933
  %mul151 = fmul float %89, %mul150, !dbg !17933
  store float %mul151, float* %val, align 4, !dbg !17933
  %90 = load float, float* %val, align 4, !dbg !17934
  %mask152 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17935
  %91 = load float*, float** %mask152, align 8, !dbg !17935
  %92 = load float, float* %91, align 4, !dbg !17936
  %add153 = fadd float %92, %90, !dbg !17936
  store float %add153, float* %91, align 4, !dbg !17936
  %mask154 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17937
  %93 = load float*, float** %mask154, align 8, !dbg !17937
  %94 = load float, float* %93, align 4, !dbg !17937
  %cmp155 = fcmp olt float %94, 0.000000e+00, !dbg !17937
  br i1 %cmp155, label %if.then157, label %if.else159, !dbg !17940

if.then157:                                       ; preds = %if.then146
  %mask158 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17937
  %95 = load float*, float** %mask158, align 8, !dbg !17937
  store float 0.000000e+00, float* %95, align 4, !dbg !17937
  br label %if.end166, !dbg !17937

if.else159:                                       ; preds = %if.then146
  %mask160 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17941
  %96 = load float*, float** %mask160, align 8, !dbg !17941
  %97 = load float, float* %96, align 4, !dbg !17941
  %cmp161 = fcmp ogt float %97, 1.000000e+00, !dbg !17941
  br i1 %cmp161, label %if.then163, label %if.end165, !dbg !17937

if.then163:                                       ; preds = %if.else159
  %mask164 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 27, !dbg !17941
  %98 = load float*, float** %mask164, align 8, !dbg !17941
  store float 1.000000e+00, float* %98, align 4, !dbg !17941
  br label %if.end165, !dbg !17941

if.end165:                                        ; preds = %if.then163, %if.else159
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then157
  br label %if.end179, !dbg !17943

if.else167:                                       ; preds = %cond.end141
  call void @llvm.dbg.declare(metadata [3 x float]* %avg, metadata !17944, metadata !DIExpression()), !dbg !17946
  call void @llvm.dbg.declare(metadata [3 x float]* %val168, metadata !17947, metadata !DIExpression()), !dbg !17948
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !17949
  %bm_vert170 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 23, !dbg !17950
  %99 = load %struct.BMVert*, %struct.BMVert** %bm_vert170, align 8, !dbg !17950
  call void @bmesh_neighbor_average(float* %arraydecay169, %struct.BMVert* %99), !dbg !17951
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %val168, i64 0, i64 0, !dbg !17952
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %avg, i64 0, i64 0, !dbg !17953
  %co173 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17954
  %100 = load float*, float** %co173, align 8, !dbg !17954
  call void @sub_v3_v3v3(float* %arraydecay171, float* %arraydecay172, float* %100), !dbg !17955
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %val168, i64 0, i64 0, !dbg !17956
  %101 = load float, float* %fade, align 4, !dbg !17957
  call void @mul_v3_fl(float* %arraydecay174, float %101), !dbg !17958
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %val168, i64 0, i64 0, !dbg !17959
  %co176 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17960
  %102 = load float*, float** %co176, align 8, !dbg !17960
  call void @add_v3_v3(float* %arraydecay175, float* %102), !dbg !17961
  %103 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !17962
  %104 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !17963
  %co177 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 24, !dbg !17964
  %105 = load float*, float** %co177, align 8, !dbg !17964
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %val168, i64 0, i64 0, !dbg !17965
  call void @sculpt_clip(%struct.Sculpt* %103, %struct.SculptSession* %104, float* %105, float* %arraydecay178), !dbg !17966
  br label %if.end179

if.end179:                                        ; preds = %if.else167, %if.end166
  %mvert180 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17967
  %106 = load %struct.MVert*, %struct.MVert** %mvert180, align 8, !dbg !17967
  %tobool181 = icmp ne %struct.MVert* %106, null, !dbg !17969
  br i1 %tobool181, label %if.then182, label %if.end187, !dbg !17970

if.then182:                                       ; preds = %if.end179
  %mvert183 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 22, !dbg !17971
  %107 = load %struct.MVert*, %struct.MVert** %mvert183, align 8, !dbg !17971
  %flag184 = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i32 0, i32 2, !dbg !17972
  %108 = load i8, i8* %flag184, align 2, !dbg !17973
  %conv185 = zext i8 %108 to i32, !dbg !17973
  %or = or i32 %conv185, 128, !dbg !17973
  %conv186 = trunc i32 %or to i8, !dbg !17973
  store i8 %conv186, i8* %flag184, align 2, !dbg !17973
  br label %if.end187, !dbg !17974

if.end187:                                        ; preds = %if.then182, %if.end179
  br label %if.end188, !dbg !17975

if.end188:                                        ; preds = %if.end187, %if.end129
  br label %for.inc, !dbg !17976

for.inc:                                          ; preds = %if.end188, %if.then115, %if.then80, %if.then65
  %gx189 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 3, !dbg !17865
  %109 = load i32, i32* %gx189, align 4, !dbg !17865
  %inc = add nsw i32 %109, 1, !dbg !17865
  store i32 %inc, i32* %gx189, align 4, !dbg !17865
  %i190 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 5, !dbg !17865
  %110 = load i32, i32* %i190, align 4, !dbg !17865
  %inc191 = add nsw i32 %110, 1, !dbg !17865
  store i32 %inc191, i32* %i190, align 4, !dbg !17865
  br label %for.cond27, !dbg !17865, !llvm.loop !17977

for.end:                                          ; preds = %for.cond27
  br label %for.inc192, !dbg !17979

for.inc192:                                       ; preds = %for.end
  %gy193 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 4, !dbg !17860
  %111 = load i32, i32* %gy193, align 8, !dbg !17860
  %inc194 = add nsw i32 %111, 1, !dbg !17860
  store i32 %inc194, i32* %gy193, align 8, !dbg !17860
  br label %for.cond22, !dbg !17860, !llvm.loop !17980

for.end195:                                       ; preds = %for.cond22
  br label %for.inc196, !dbg !17982

for.inc196:                                       ; preds = %for.end195
  %g197 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %vd, i32 0, i32 0, !dbg !17846
  %112 = load i32, i32* %g197, align 8, !dbg !17846
  %inc198 = add nsw i32 %112, 1, !dbg !17846
  store i32 %inc198, i32* %g197, align 8, !dbg !17846
  br label %for.cond, !dbg !17846, !llvm.loop !17983

for.end199:                                       ; preds = %for.cond
  ret void, !dbg !17985
}

declare dso_local void @multires_stitch_grids(%struct.Object*) #2

declare dso_local void @BKE_pbvh_get_grid_key(%struct.PBVH*, %struct.CCGKey*) #2

declare dso_local i32** @BKE_pbvh_grid_hidden(%struct.PBVH*) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_offset_mask(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !17986 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !17989, metadata !DIExpression()), !dbg !17990
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !17991, metadata !DIExpression()), !dbg !17992
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !17993, metadata !DIExpression()), !dbg !17994
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !17995
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !17996
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !17997
  %3 = load i32, i32* %offset.addr, align 4, !dbg !17998
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3), !dbg !17999
  %call1 = call float* @CCG_elem_mask(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !18000
  ret float* %call1, !dbg !18001
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !18002 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !18003, metadata !DIExpression()), !dbg !18004
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !18005, metadata !DIExpression()), !dbg !18006
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !18007, metadata !DIExpression()), !dbg !18008
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !18009
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !18010
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !18011
  %3 = load i32, i32* %offset.addr, align 4, !dbg !18012
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3), !dbg !18013
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !18014
  ret float* %call1, !dbg !18015
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_offset_no(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !18016 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !18017, metadata !DIExpression()), !dbg !18018
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !18019, metadata !DIExpression()), !dbg !18020
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !18021, metadata !DIExpression()), !dbg !18022
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !18023
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !18024
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !18025
  %3 = load i32, i32* %offset.addr, align 4, !dbg !18026
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3), !dbg !18027
  %call1 = call float* @CCG_elem_no(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !18028
  ret float* %call1, !dbg !18029
}

; Function Attrs: noinline nounwind uwtable
define internal float @neighbor_average_mask(%struct.SculptSession* %ss, i32 %vert) #0 !dbg !18030 {
entry:
  %retval = alloca float, align 4
  %ss.addr = alloca %struct.SculptSession*, align 8
  %vert.addr = alloca i32, align 4
  %vmask = alloca float*, align 8
  %avg = alloca float, align 4
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  %p = alloca %struct.MPoly*, align 8
  %f_adj_v = alloca [3 x i32], align 4
  %j = alloca i32, align 4
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !18033, metadata !DIExpression()), !dbg !18034
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !18035, metadata !DIExpression()), !dbg !18036
  call void @llvm.dbg.declare(metadata float** %vmask, metadata !18037, metadata !DIExpression()), !dbg !18038
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18039
  %vmask1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 8, !dbg !18040
  %1 = load float*, float** %vmask1, align 8, !dbg !18040
  store float* %1, float** %vmask, align 8, !dbg !18038
  call void @llvm.dbg.declare(metadata float* %avg, metadata !18041, metadata !DIExpression()), !dbg !18042
  store float 0.000000e+00, float* %avg, align 4, !dbg !18042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18043, metadata !DIExpression()), !dbg !18044
  call void @llvm.dbg.declare(metadata i32* %total, metadata !18045, metadata !DIExpression()), !dbg !18046
  store i32 0, i32* %total, align 4, !dbg !18046
  store i32 0, i32* %i, align 4, !dbg !18047
  br label %for.cond, !dbg !18049

for.cond:                                         ; preds = %for.inc18, %entry
  %2 = load i32, i32* %i, align 4, !dbg !18050
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18052
  %pmap = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 9, !dbg !18053
  %4 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !18053
  %5 = load i32, i32* %vert.addr, align 4, !dbg !18054
  %idxprom = zext i32 %5 to i64, !dbg !18052
  %arrayidx = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %4, i64 %idxprom, !dbg !18052
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx, i32 0, i32 1, !dbg !18055
  %6 = load i32, i32* %count, align 8, !dbg !18055
  %cmp = icmp slt i32 %2, %6, !dbg !18056
  br i1 %cmp, label %for.body, label %for.end20, !dbg !18057

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p, metadata !18058, metadata !DIExpression()), !dbg !18063
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18064
  %mpoly = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 2, !dbg !18065
  %8 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !18065
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18066
  %pmap2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 9, !dbg !18067
  %10 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap2, align 8, !dbg !18067
  %11 = load i32, i32* %vert.addr, align 4, !dbg !18068
  %idxprom3 = zext i32 %11 to i64, !dbg !18066
  %arrayidx4 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %10, i64 %idxprom3, !dbg !18066
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx4, i32 0, i32 0, !dbg !18069
  %12 = load i32*, i32** %indices, align 8, !dbg !18069
  %13 = load i32, i32* %i, align 4, !dbg !18070
  %idxprom5 = sext i32 %13 to i64, !dbg !18066
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 %idxprom5, !dbg !18066
  %14 = load i32, i32* %arrayidx6, align 4, !dbg !18066
  %idxprom7 = sext i32 %14 to i64, !dbg !18064
  %arrayidx8 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %8, i64 %idxprom7, !dbg !18064
  store %struct.MPoly* %arrayidx8, %struct.MPoly** %p, align 8, !dbg !18063
  call void @llvm.dbg.declare(metadata [3 x i32]* %f_adj_v, metadata !18071, metadata !DIExpression()), !dbg !18073
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 0, !dbg !18074
  %15 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !18076
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18077
  %mloop = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 3, !dbg !18078
  %17 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !18078
  %18 = load i32, i32* %vert.addr, align 4, !dbg !18079
  %call = call i32 @poly_get_adj_loops_from_vert(i32* %arraydecay, %struct.MPoly* %15, %struct.MLoop* %17, i32 %18), !dbg !18080
  %cmp9 = icmp ne i32 %call, -1, !dbg !18081
  br i1 %cmp9, label %if.then, label %if.end, !dbg !18082

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18083, metadata !DIExpression()), !dbg !18085
  store i32 0, i32* %j, align 4, !dbg !18086
  br label %for.cond10, !dbg !18088

for.cond10:                                       ; preds = %for.inc, %if.then
  %19 = load i32, i32* %j, align 4, !dbg !18089
  %cmp11 = icmp slt i32 %19, 3, !dbg !18091
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !18092

for.body12:                                       ; preds = %for.cond10
  %20 = load float*, float** %vmask, align 8, !dbg !18093
  %21 = load i32, i32* %j, align 4, !dbg !18095
  %idxprom13 = sext i32 %21 to i64, !dbg !18096
  %arrayidx14 = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 %idxprom13, !dbg !18096
  %22 = load i32, i32* %arrayidx14, align 4, !dbg !18096
  %idxprom15 = zext i32 %22 to i64, !dbg !18093
  %arrayidx16 = getelementptr inbounds float, float* %20, i64 %idxprom15, !dbg !18093
  %23 = load float, float* %arrayidx16, align 4, !dbg !18093
  %24 = load float, float* %avg, align 4, !dbg !18097
  %add = fadd float %24, %23, !dbg !18097
  store float %add, float* %avg, align 4, !dbg !18097
  %25 = load i32, i32* %total, align 4, !dbg !18098
  %inc = add nsw i32 %25, 1, !dbg !18098
  store i32 %inc, i32* %total, align 4, !dbg !18098
  br label %for.inc, !dbg !18099

for.inc:                                          ; preds = %for.body12
  %26 = load i32, i32* %j, align 4, !dbg !18100
  %inc17 = add nsw i32 %26, 1, !dbg !18100
  store i32 %inc17, i32* %j, align 4, !dbg !18100
  br label %for.cond10, !dbg !18101, !llvm.loop !18102

for.end:                                          ; preds = %for.cond10
  br label %if.end, !dbg !18104

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc18, !dbg !18105

for.inc18:                                        ; preds = %if.end
  %27 = load i32, i32* %i, align 4, !dbg !18106
  %inc19 = add nsw i32 %27, 1, !dbg !18106
  store i32 %inc19, i32* %i, align 4, !dbg !18106
  br label %for.cond, !dbg !18107, !llvm.loop !18108

for.end20:                                        ; preds = %for.cond
  %28 = load i32, i32* %total, align 4, !dbg !18110
  %cmp21 = icmp sgt i32 %28, 0, !dbg !18112
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !18113

if.then22:                                        ; preds = %for.end20
  %29 = load float, float* %avg, align 4, !dbg !18114
  %30 = load i32, i32* %total, align 4, !dbg !18115
  %conv = sitofp i32 %30 to float, !dbg !18116
  %div = fdiv float %29, %conv, !dbg !18117
  store float %div, float* %retval, align 4, !dbg !18118
  br label %return, !dbg !18118

if.else:                                          ; preds = %for.end20
  %31 = load float*, float** %vmask, align 8, !dbg !18119
  %32 = load i32, i32* %vert.addr, align 4, !dbg !18120
  %idxprom23 = zext i32 %32 to i64, !dbg !18119
  %arrayidx24 = getelementptr inbounds float, float* %31, i64 %idxprom23, !dbg !18119
  %33 = load float, float* %arrayidx24, align 4, !dbg !18119
  store float %33, float* %retval, align 4, !dbg !18121
  br label %return, !dbg !18121

return:                                           ; preds = %if.else, %if.then22
  %34 = load float, float* %retval, align 4, !dbg !18122
  ret float %34, !dbg !18122
}

; Function Attrs: noinline nounwind uwtable
define internal void @neighbor_average(%struct.SculptSession* %ss, float* %avg, i32 %vert) #0 !dbg !18123 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %avg.addr = alloca float*, align 8
  %vert.addr = alloca i32, align 4
  %vert_map = alloca %struct.MeshElemMap*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %deform_co = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  %p = alloca %struct.MPoly*, align 8
  %f_adj_v = alloca [3 x i32], align 4
  %j = alloca i32, align 4
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !18126, metadata !DIExpression()), !dbg !18127
  store float* %avg, float** %avg.addr, align 8
  call void @llvm.dbg.declare(metadata float** %avg.addr, metadata !18128, metadata !DIExpression()), !dbg !18129
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !18130, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %vert_map, metadata !18132, metadata !DIExpression()), !dbg !18136
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18137
  %pmap = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 9, !dbg !18138
  %1 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !18138
  %2 = load i32, i32* %vert.addr, align 4, !dbg !18139
  %idxprom = zext i32 %2 to i64, !dbg !18137
  %arrayidx = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %1, i64 %idxprom, !dbg !18137
  store %struct.MeshElemMap* %arrayidx, %struct.MeshElemMap** %vert_map, align 8, !dbg !18136
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !18140, metadata !DIExpression()), !dbg !18143
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18144
  %mvert1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 1, !dbg !18145
  %4 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !18145
  store %struct.MVert* %4, %struct.MVert** %mvert, align 8, !dbg !18143
  call void @llvm.dbg.declare(metadata [3 x float]** %deform_co, metadata !18146, metadata !DIExpression()), !dbg !18147
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18148
  %deform_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 19, !dbg !18149
  %6 = load [3 x float]*, [3 x float]** %deform_cos, align 8, !dbg !18149
  store [3 x float]* %6, [3 x float]** %deform_co, align 8, !dbg !18147
  %7 = load float*, float** %avg.addr, align 8, !dbg !18150
  call void @zero_v3(float* %7), !dbg !18151
  %8 = load %struct.MeshElemMap*, %struct.MeshElemMap** %vert_map, align 8, !dbg !18152
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %8, i32 0, i32 1, !dbg !18154
  %9 = load i32, i32* %count, align 8, !dbg !18154
  %cmp = icmp sgt i32 %9, 1, !dbg !18155
  br i1 %cmp, label %if.then, label %if.end41, !dbg !18156

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18157, metadata !DIExpression()), !dbg !18159
  call void @llvm.dbg.declare(metadata i32* %total, metadata !18160, metadata !DIExpression()), !dbg !18161
  store i32 0, i32* %total, align 4, !dbg !18161
  store i32 0, i32* %i, align 4, !dbg !18162
  br label %for.cond, !dbg !18164

for.cond:                                         ; preds = %for.inc35, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !18165
  %11 = load %struct.MeshElemMap*, %struct.MeshElemMap** %vert_map, align 8, !dbg !18167
  %count2 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %11, i32 0, i32 1, !dbg !18168
  %12 = load i32, i32* %count2, align 8, !dbg !18168
  %cmp3 = icmp slt i32 %10, %12, !dbg !18169
  br i1 %cmp3, label %for.body, label %for.end37, !dbg !18170

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p, metadata !18171, metadata !DIExpression()), !dbg !18173
  %13 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18174
  %mpoly = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %13, i32 0, i32 2, !dbg !18175
  %14 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !18175
  %15 = load %struct.MeshElemMap*, %struct.MeshElemMap** %vert_map, align 8, !dbg !18176
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %15, i32 0, i32 0, !dbg !18177
  %16 = load i32*, i32** %indices, align 8, !dbg !18177
  %17 = load i32, i32* %i, align 4, !dbg !18178
  %idxprom4 = sext i32 %17 to i64, !dbg !18176
  %arrayidx5 = getelementptr inbounds i32, i32* %16, i64 %idxprom4, !dbg !18176
  %18 = load i32, i32* %arrayidx5, align 4, !dbg !18176
  %idxprom6 = sext i32 %18 to i64, !dbg !18174
  %arrayidx7 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i64 %idxprom6, !dbg !18174
  store %struct.MPoly* %arrayidx7, %struct.MPoly** %p, align 8, !dbg !18173
  call void @llvm.dbg.declare(metadata [3 x i32]* %f_adj_v, metadata !18179, metadata !DIExpression()), !dbg !18180
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 0, !dbg !18181
  %19 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !18183
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18184
  %mloop = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 3, !dbg !18185
  %21 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !18185
  %22 = load i32, i32* %vert.addr, align 4, !dbg !18186
  %call = call i32 @poly_get_adj_loops_from_vert(i32* %arraydecay, %struct.MPoly* %19, %struct.MLoop* %21, i32 %22), !dbg !18187
  %cmp8 = icmp ne i32 %call, -1, !dbg !18188
  br i1 %cmp8, label %if.then9, label %if.end34, !dbg !18189

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18190, metadata !DIExpression()), !dbg !18192
  store i32 0, i32* %j, align 4, !dbg !18193
  br label %for.cond10, !dbg !18195

for.cond10:                                       ; preds = %for.inc, %if.then9
  %23 = load i32, i32* %j, align 4, !dbg !18196
  %cmp11 = icmp slt i32 %23, 3, !dbg !18198
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !18199

for.body12:                                       ; preds = %for.cond10
  %24 = load %struct.MeshElemMap*, %struct.MeshElemMap** %vert_map, align 8, !dbg !18200
  %count13 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %24, i32 0, i32 1, !dbg !18203
  %25 = load i32, i32* %count13, align 8, !dbg !18203
  %cmp14 = icmp ne i32 %25, 2, !dbg !18204
  br i1 %cmp14, label %if.then22, label %lor.lhs.false, !dbg !18205

lor.lhs.false:                                    ; preds = %for.body12
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18206
  %pmap15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 9, !dbg !18207
  %27 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap15, align 8, !dbg !18207
  %28 = load i32, i32* %j, align 4, !dbg !18208
  %idxprom16 = sext i32 %28 to i64, !dbg !18209
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 %idxprom16, !dbg !18209
  %29 = load i32, i32* %arrayidx17, align 4, !dbg !18209
  %idxprom18 = zext i32 %29 to i64, !dbg !18206
  %arrayidx19 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %27, i64 %idxprom18, !dbg !18206
  %count20 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx19, i32 0, i32 1, !dbg !18210
  %30 = load i32, i32* %count20, align 8, !dbg !18210
  %cmp21 = icmp sle i32 %30, 2, !dbg !18211
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !18212

if.then22:                                        ; preds = %lor.lhs.false, %for.body12
  %31 = load float*, float** %avg.addr, align 8, !dbg !18213
  %32 = load [3 x float]*, [3 x float]** %deform_co, align 8, !dbg !18215
  %tobool = icmp ne [3 x float]* %32, null, !dbg !18215
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18215

cond.true:                                        ; preds = %if.then22
  %33 = load [3 x float]*, [3 x float]** %deform_co, align 8, !dbg !18216
  %34 = load i32, i32* %j, align 4, !dbg !18217
  %idxprom23 = sext i32 %34 to i64, !dbg !18218
  %arrayidx24 = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 %idxprom23, !dbg !18218
  %35 = load i32, i32* %arrayidx24, align 4, !dbg !18218
  %idxprom25 = zext i32 %35 to i64, !dbg !18216
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %33, i64 %idxprom25, !dbg !18216
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !18216
  br label %cond.end, !dbg !18215

cond.false:                                       ; preds = %if.then22
  %36 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18219
  %37 = load i32, i32* %j, align 4, !dbg !18220
  %idxprom28 = sext i32 %37 to i64, !dbg !18221
  %arrayidx29 = getelementptr inbounds [3 x i32], [3 x i32]* %f_adj_v, i64 0, i64 %idxprom28, !dbg !18221
  %38 = load i32, i32* %arrayidx29, align 4, !dbg !18221
  %idxprom30 = zext i32 %38 to i64, !dbg !18219
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idxprom30, !dbg !18219
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !18222
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18219
  br label %cond.end, !dbg !18215

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay27, %cond.true ], [ %arraydecay32, %cond.false ], !dbg !18215
  call void @add_v3_v3(float* %31, float* %cond), !dbg !18223
  %39 = load i32, i32* %total, align 4, !dbg !18224
  %inc = add nsw i32 %39, 1, !dbg !18224
  store i32 %inc, i32* %total, align 4, !dbg !18224
  br label %if.end, !dbg !18225

if.end:                                           ; preds = %cond.end, %lor.lhs.false
  br label %for.inc, !dbg !18226

for.inc:                                          ; preds = %if.end
  %40 = load i32, i32* %j, align 4, !dbg !18227
  %inc33 = add nsw i32 %40, 1, !dbg !18227
  store i32 %inc33, i32* %j, align 4, !dbg !18227
  br label %for.cond10, !dbg !18228, !llvm.loop !18229

for.end:                                          ; preds = %for.cond10
  br label %if.end34, !dbg !18231

if.end34:                                         ; preds = %for.end, %for.body
  br label %for.inc35, !dbg !18232

for.inc35:                                        ; preds = %if.end34
  %41 = load i32, i32* %i, align 4, !dbg !18233
  %inc36 = add nsw i32 %41, 1, !dbg !18233
  store i32 %inc36, i32* %i, align 4, !dbg !18233
  br label %for.cond, !dbg !18234, !llvm.loop !18235

for.end37:                                        ; preds = %for.cond
  %42 = load i32, i32* %total, align 4, !dbg !18237
  %cmp38 = icmp sgt i32 %42, 0, !dbg !18239
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !18240

if.then39:                                        ; preds = %for.end37
  %43 = load float*, float** %avg.addr, align 8, !dbg !18241
  %44 = load i32, i32* %total, align 4, !dbg !18243
  %conv = sitofp i32 %44 to float, !dbg !18243
  %div = fdiv float 1.000000e+00, %conv, !dbg !18244
  call void @mul_v3_fl(float* %43, float %div), !dbg !18245
  br label %return, !dbg !18246

if.end40:                                         ; preds = %for.end37
  br label %if.end41, !dbg !18247

if.end41:                                         ; preds = %if.end40, %entry
  %45 = load float*, float** %avg.addr, align 8, !dbg !18248
  %46 = load [3 x float]*, [3 x float]** %deform_co, align 8, !dbg !18249
  %tobool42 = icmp ne [3 x float]* %46, null, !dbg !18249
  br i1 %tobool42, label %cond.true43, label %cond.false47, !dbg !18249

cond.true43:                                      ; preds = %if.end41
  %47 = load [3 x float]*, [3 x float]** %deform_co, align 8, !dbg !18250
  %48 = load i32, i32* %vert.addr, align 4, !dbg !18251
  %idxprom44 = zext i32 %48 to i64, !dbg !18250
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %47, i64 %idxprom44, !dbg !18250
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !18250
  br label %cond.end52, !dbg !18249

cond.false47:                                     ; preds = %if.end41
  %49 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18252
  %50 = load i32, i32* %vert.addr, align 4, !dbg !18253
  %idxprom48 = zext i32 %50 to i64, !dbg !18252
  %arrayidx49 = getelementptr inbounds %struct.MVert, %struct.MVert* %49, i64 %idxprom48, !dbg !18252
  %co50 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx49, i32 0, i32 0, !dbg !18254
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 0, !dbg !18252
  br label %cond.end52, !dbg !18249

cond.end52:                                       ; preds = %cond.false47, %cond.true43
  %cond53 = phi float* [ %arraydecay46, %cond.true43 ], [ %arraydecay51, %cond.false47 ], !dbg !18249
  call void @copy_v3_v3(float* %45, float* %cond53), !dbg !18255
  br label %return, !dbg !18256

return:                                           ; preds = %cond.end52, %if.then39
  ret void, !dbg !18256
}

declare dso_local i32 @poly_get_adj_loops_from_vert(i32*, %struct.MPoly*, %struct.MLoop*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @bmesh_neighbor_average_mask(%struct.BMesh* %bm, %struct.BMVert* %v) #0 !dbg !18257 {
entry:
  %retval = alloca float, align 4
  %bm.addr = alloca %struct.BMesh*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %avg = alloca float, align 4
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  %adj_v = alloca [3 x %struct.BMVert*], align 16
  %v2 = alloca %struct.BMVert*, align 8
  %vmask = alloca float*, align 8
  %vmask12 = alloca float*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !18260, metadata !DIExpression()), !dbg !18261
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !18262, metadata !DIExpression()), !dbg !18263
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !18264, metadata !DIExpression()), !dbg !18352
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !18353, metadata !DIExpression()), !dbg !18354
  call void @llvm.dbg.declare(metadata float* %avg, metadata !18355, metadata !DIExpression()), !dbg !18356
  store float 0.000000e+00, float* %avg, align 4, !dbg !18356
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18357, metadata !DIExpression()), !dbg !18358
  call void @llvm.dbg.declare(metadata i32* %total, metadata !18359, metadata !DIExpression()), !dbg !18360
  store i32 0, i32* %total, align 4, !dbg !18360
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18361
  %1 = bitcast %struct.BMVert* %0 to i8*, !dbg !18361
  %call = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 6, i8* %1), !dbg !18361
  %2 = bitcast i8* %call to %struct.BMLoop*, !dbg !18361
  store %struct.BMLoop* %2, %struct.BMLoop** %l, align 8, !dbg !18361
  br label %for.cond, !dbg !18361

for.cond:                                         ; preds = %for.inc8, %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18363
  %tobool = icmp ne %struct.BMLoop* %3, null, !dbg !18361
  br i1 %tobool, label %for.body, label %for.end10, !dbg !18361

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x %struct.BMVert*]* %adj_v, metadata !18365, metadata !DIExpression()), !dbg !18368
  %arrayinit.begin = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %adj_v, i64 0, i64 0, !dbg !18369
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18370
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %4, i32 0, i32 7, !dbg !18371
  %5 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !18371
  %v1 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %5, i32 0, i32 1, !dbg !18372
  %6 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !18372
  store %struct.BMVert* %6, %struct.BMVert** %arrayinit.begin, align 8, !dbg !18369
  %arrayinit.element = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin, i64 1, !dbg !18369
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18373
  store %struct.BMVert* %7, %struct.BMVert** %arrayinit.element, align 8, !dbg !18369
  %arrayinit.element2 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element, i64 1, !dbg !18369
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18374
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 6, !dbg !18375
  %9 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !18375
  %v3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 1, !dbg !18376
  %10 = load %struct.BMVert*, %struct.BMVert** %v3, align 8, !dbg !18376
  store %struct.BMVert* %10, %struct.BMVert** %arrayinit.element2, align 8, !dbg !18369
  store i32 0, i32* %i, align 4, !dbg !18377
  br label %for.cond4, !dbg !18379

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !18380
  %cmp = icmp slt i32 %11, 3, !dbg !18382
  br i1 %cmp, label %for.body5, label %for.end, !dbg !18383

for.body5:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v2, metadata !18384, metadata !DIExpression()), !dbg !18386
  %12 = load i32, i32* %i, align 4, !dbg !18387
  %idxprom = sext i32 %12 to i64, !dbg !18388
  %arrayidx = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %adj_v, i64 0, i64 %idxprom, !dbg !18388
  %13 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !18388
  store %struct.BMVert* %13, %struct.BMVert** %v2, align 8, !dbg !18386
  call void @llvm.dbg.declare(metadata float** %vmask, metadata !18389, metadata !DIExpression()), !dbg !18390
  %14 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18391
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !18392
  %15 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !18393
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %15, i32 0, i32 0, !dbg !18394
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !18395
  %16 = load i8*, i8** %data, align 8, !dbg !18395
  %call6 = call i8* @CustomData_bmesh_get(%struct.CustomData* %vdata, i8* %16, i32 34), !dbg !18396
  %17 = bitcast i8* %call6 to float*, !dbg !18396
  store float* %17, float** %vmask, align 8, !dbg !18390
  %18 = load float*, float** %vmask, align 8, !dbg !18397
  %19 = load float, float* %18, align 4, !dbg !18398
  %20 = load float, float* %avg, align 4, !dbg !18399
  %add = fadd float %20, %19, !dbg !18399
  store float %add, float* %avg, align 4, !dbg !18399
  %21 = load i32, i32* %total, align 4, !dbg !18400
  %inc = add nsw i32 %21, 1, !dbg !18400
  store i32 %inc, i32* %total, align 4, !dbg !18400
  br label %for.inc, !dbg !18401

for.inc:                                          ; preds = %for.body5
  %22 = load i32, i32* %i, align 4, !dbg !18402
  %inc7 = add nsw i32 %22, 1, !dbg !18402
  store i32 %inc7, i32* %i, align 4, !dbg !18402
  br label %for.cond4, !dbg !18403, !llvm.loop !18404

for.end:                                          ; preds = %for.cond4
  br label %for.inc8, !dbg !18406

for.inc8:                                         ; preds = %for.end
  %call9 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !18363
  %23 = bitcast i8* %call9 to %struct.BMLoop*, !dbg !18363
  store %struct.BMLoop* %23, %struct.BMLoop** %l, align 8, !dbg !18363
  br label %for.cond, !dbg !18363, !llvm.loop !18407

for.end10:                                        ; preds = %for.cond
  %24 = load i32, i32* %total, align 4, !dbg !18409
  %cmp11 = icmp sgt i32 %24, 0, !dbg !18411
  br i1 %cmp11, label %if.then, label %if.else, !dbg !18412

if.then:                                          ; preds = %for.end10
  %25 = load float, float* %avg, align 4, !dbg !18413
  %26 = load i32, i32* %total, align 4, !dbg !18415
  %conv = sitofp i32 %26 to float, !dbg !18416
  %div = fdiv float %25, %conv, !dbg !18417
  store float %div, float* %retval, align 4, !dbg !18418
  br label %return, !dbg !18418

if.else:                                          ; preds = %for.end10
  call void @llvm.dbg.declare(metadata float** %vmask12, metadata !18419, metadata !DIExpression()), !dbg !18421
  %27 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18422
  %vdata13 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %27, i32 0, i32 24, !dbg !18423
  %28 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18424
  %head14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 0, !dbg !18425
  %data15 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head14, i32 0, i32 0, !dbg !18426
  %29 = load i8*, i8** %data15, align 8, !dbg !18426
  %call16 = call i8* @CustomData_bmesh_get(%struct.CustomData* %vdata13, i8* %29, i32 34), !dbg !18427
  %30 = bitcast i8* %call16 to float*, !dbg !18427
  store float* %30, float** %vmask12, align 8, !dbg !18421
  %31 = load float*, float** %vmask12, align 8, !dbg !18428
  %32 = load float, float* %31, align 4, !dbg !18429
  store float %32, float* %retval, align 4, !dbg !18430
  br label %return, !dbg !18430

return:                                           ; preds = %if.else, %if.then
  %33 = load float, float* %retval, align 4, !dbg !18431
  ret float %33, !dbg !18431
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmesh_neighbor_average(float* %avg, %struct.BMVert* %v) #0 !dbg !18432 {
entry:
  %avg.addr = alloca float*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %vfcount = alloca i32, align 4
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  %adj_v = alloca [3 x %struct.BMVert*], align 16
  store float* %avg, float** %avg.addr, align 8
  call void @llvm.dbg.declare(metadata float** %avg.addr, metadata !18435, metadata !DIExpression()), !dbg !18436
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !18437, metadata !DIExpression()), !dbg !18438
  call void @llvm.dbg.declare(metadata i32* %vfcount, metadata !18439, metadata !DIExpression()), !dbg !18440
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18441
  %call = call i32 @BM_vert_face_count(%struct.BMVert* %0), !dbg !18442
  store i32 %call, i32* %vfcount, align 4, !dbg !18440
  %1 = load float*, float** %avg.addr, align 8, !dbg !18443
  call void @zero_v3(float* %1), !dbg !18444
  %2 = load i32, i32* %vfcount, align 4, !dbg !18445
  %cmp = icmp sgt i32 %2, 1, !dbg !18447
  br i1 %cmp, label %if.then, label %if.end21, !dbg !18448

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !18449, metadata !DIExpression()), !dbg !18451
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !18452, metadata !DIExpression()), !dbg !18453
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18454, metadata !DIExpression()), !dbg !18455
  call void @llvm.dbg.declare(metadata i32* %total, metadata !18456, metadata !DIExpression()), !dbg !18457
  store i32 0, i32* %total, align 4, !dbg !18457
  %3 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18458
  %4 = bitcast %struct.BMVert* %3 to i8*, !dbg !18458
  %call1 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 6, i8* %4), !dbg !18458
  %5 = bitcast i8* %call1 to %struct.BMLoop*, !dbg !18458
  store %struct.BMLoop* %5, %struct.BMLoop** %l, align 8, !dbg !18458
  br label %for.cond, !dbg !18458

for.cond:                                         ; preds = %for.inc15, %if.then
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18460
  %tobool = icmp ne %struct.BMLoop* %6, null, !dbg !18458
  br i1 %tobool, label %for.body, label %for.end17, !dbg !18458

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x %struct.BMVert*]* %adj_v, metadata !18462, metadata !DIExpression()), !dbg !18464
  %arrayinit.begin = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %adj_v, i64 0, i64 0, !dbg !18465
  %7 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18466
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 7, !dbg !18467
  %8 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !18467
  %v2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !18468
  %9 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !18468
  store %struct.BMVert* %9, %struct.BMVert** %arrayinit.begin, align 8, !dbg !18465
  %arrayinit.element = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.begin, i64 1, !dbg !18465
  %10 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18469
  store %struct.BMVert* %10, %struct.BMVert** %arrayinit.element, align 8, !dbg !18465
  %arrayinit.element3 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %arrayinit.element, i64 1, !dbg !18465
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !18470
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %11, i32 0, i32 6, !dbg !18471
  %12 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !18471
  %v4 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 1, !dbg !18472
  %13 = load %struct.BMVert*, %struct.BMVert** %v4, align 8, !dbg !18472
  store %struct.BMVert* %13, %struct.BMVert** %arrayinit.element3, align 8, !dbg !18465
  store i32 0, i32* %i, align 4, !dbg !18473
  br label %for.cond5, !dbg !18475

for.cond5:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %i, align 4, !dbg !18476
  %cmp6 = icmp slt i32 %14, 3, !dbg !18478
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !18479

for.body7:                                        ; preds = %for.cond5
  %15 = load i32, i32* %vfcount, align 4, !dbg !18480
  %cmp8 = icmp ne i32 %15, 2, !dbg !18483
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !18484

lor.lhs.false:                                    ; preds = %for.body7
  %16 = load i32, i32* %i, align 4, !dbg !18485
  %idxprom = sext i32 %16 to i64, !dbg !18486
  %arrayidx = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %adj_v, i64 0, i64 %idxprom, !dbg !18486
  %17 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !18486
  %call9 = call i32 @BM_vert_face_count(%struct.BMVert* %17), !dbg !18487
  %cmp10 = icmp sle i32 %call9, 2, !dbg !18488
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !18489

if.then11:                                        ; preds = %lor.lhs.false, %for.body7
  %18 = load float*, float** %avg.addr, align 8, !dbg !18490
  %19 = load i32, i32* %i, align 4, !dbg !18492
  %idxprom12 = sext i32 %19 to i64, !dbg !18493
  %arrayidx13 = getelementptr inbounds [3 x %struct.BMVert*], [3 x %struct.BMVert*]* %adj_v, i64 0, i64 %idxprom12, !dbg !18493
  %20 = load %struct.BMVert*, %struct.BMVert** %arrayidx13, align 8, !dbg !18493
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 2, !dbg !18494
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18493
  call void @add_v3_v3(float* %18, float* %arraydecay), !dbg !18495
  %21 = load i32, i32* %total, align 4, !dbg !18496
  %inc = add nsw i32 %21, 1, !dbg !18496
  store i32 %inc, i32* %total, align 4, !dbg !18496
  br label %if.end, !dbg !18497

if.end:                                           ; preds = %if.then11, %lor.lhs.false
  br label %for.inc, !dbg !18498

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !18499
  %inc14 = add nsw i32 %22, 1, !dbg !18499
  store i32 %inc14, i32* %i, align 4, !dbg !18499
  br label %for.cond5, !dbg !18500, !llvm.loop !18501

for.end:                                          ; preds = %for.cond5
  br label %for.inc15, !dbg !18503

for.inc15:                                        ; preds = %for.end
  %call16 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !18460
  %23 = bitcast i8* %call16 to %struct.BMLoop*, !dbg !18460
  store %struct.BMLoop* %23, %struct.BMLoop** %l, align 8, !dbg !18460
  br label %for.cond, !dbg !18460, !llvm.loop !18504

for.end17:                                        ; preds = %for.cond
  %24 = load i32, i32* %total, align 4, !dbg !18506
  %cmp18 = icmp sgt i32 %24, 0, !dbg !18508
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !18509

if.then19:                                        ; preds = %for.end17
  %25 = load float*, float** %avg.addr, align 8, !dbg !18510
  %26 = load i32, i32* %total, align 4, !dbg !18512
  %conv = sitofp i32 %26 to float, !dbg !18512
  %div = fdiv float 1.000000e+00, %conv, !dbg !18513
  call void @mul_v3_fl(float* %25, float %div), !dbg !18514
  br label %return, !dbg !18515

if.end20:                                         ; preds = %for.end17
  br label %if.end21, !dbg !18516

if.end21:                                         ; preds = %if.end20, %entry
  %27 = load float*, float** %avg.addr, align 8, !dbg !18517
  %28 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !18518
  %co22 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 2, !dbg !18519
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !18518
  call void @copy_v3_v3(float* %27, float* %arraydecay23), !dbg !18520
  br label %return, !dbg !18521

return:                                           ; preds = %if.end21, %if.then19
  ret void, !dbg !18521
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !18522 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !18529, metadata !DIExpression()), !dbg !18530
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !18531, metadata !DIExpression()), !dbg !18532
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18535
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18535
  %2 = load i8, i8* %itype.addr, align 1, !dbg !18535
  %3 = load i8*, i8** %data.addr, align 8, !dbg !18535
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !18535
  %tobool = icmp ne i8 %call, 0, !dbg !18535
  br i1 %tobool, label %if.then, label %if.else, !dbg !18537

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18538
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !18540
  store i8* %call1, i8** %retval, align 8, !dbg !18541
  br label %return, !dbg !18541

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !18542
  br label %return, !dbg !18542

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !18544
  ret i8* %5, !dbg !18544
}

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !18545 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !18548, metadata !DIExpression()), !dbg !18549
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18550
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !18551
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !18551
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18552
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !18552
  %call = call i8* %1(i8* %3), !dbg !18550
  ret i8* %call, !dbg !18553
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !18554 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !18557, metadata !DIExpression()), !dbg !18558
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !18559, metadata !DIExpression()), !dbg !18560
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !18561, metadata !DIExpression()), !dbg !18562
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18563, metadata !DIExpression()), !dbg !18564
  %0 = load i8, i8* %itype.addr, align 1, !dbg !18565
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18566
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !18567
  store i8 %0, i8* %itype1, align 4, !dbg !18568
  %2 = load i8, i8* %itype.addr, align 1, !dbg !18569
  %conv = zext i8 %2 to i32, !dbg !18570
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !18571

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18572
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !18574
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !18575
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18576
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !18577
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !18578
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18579
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !18580
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !18580
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18581
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !18582
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !18583
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !18584
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !18585
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !18586
  br label %sw.epilog, !dbg !18587

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18588
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !18589
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !18590
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18591
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !18592
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !18593
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18594
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !18595
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !18595
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18596
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !18597
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !18598
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !18599
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !18600
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !18601
  br label %sw.epilog, !dbg !18602

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18603
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !18604
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !18605
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18606
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !18607
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !18608
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !18609
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !18610
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !18610
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18611
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !18612
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !18613
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !18614
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !18615
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !18616
  br label %sw.epilog, !dbg !18617

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18618
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !18619
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !18620
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18621
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !18622
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !18623
  %20 = load i8*, i8** %data.addr, align 8, !dbg !18624
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !18625
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18626
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !18627
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !18628
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !18629
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !18630
  br label %sw.epilog, !dbg !18631

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18632
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !18633
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !18634
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18635
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !18636
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !18637
  %25 = load i8*, i8** %data.addr, align 8, !dbg !18638
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !18639
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18640
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !18641
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !18642
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !18643
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !18644
  br label %sw.epilog, !dbg !18645

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18646
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !18647
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !18648
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18649
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !18650
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !18651
  %30 = load i8*, i8** %data.addr, align 8, !dbg !18652
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !18653
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18654
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !18655
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !18656
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !18657
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !18658
  br label %sw.epilog, !dbg !18659

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18660
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !18661
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !18662
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18663
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !18664
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !18665
  %35 = load i8*, i8** %data.addr, align 8, !dbg !18666
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !18667
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18668
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !18669
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !18670
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !18671
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !18672
  br label %sw.epilog, !dbg !18673

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18674
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !18675
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !18676
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18677
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !18678
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !18679
  %40 = load i8*, i8** %data.addr, align 8, !dbg !18680
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !18681
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18682
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !18683
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !18684
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !18685
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !18686
  br label %sw.epilog, !dbg !18687

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18688
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !18689
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !18690
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18691
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !18692
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !18693
  %45 = load i8*, i8** %data.addr, align 8, !dbg !18694
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !18695
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18696
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !18697
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !18698
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !18699
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !18700
  br label %sw.epilog, !dbg !18701

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18702
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !18703
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !18704
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18705
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !18706
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !18707
  %50 = load i8*, i8** %data.addr, align 8, !dbg !18708
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !18709
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18710
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !18711
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !18712
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !18713
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !18714
  br label %sw.epilog, !dbg !18715

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18716
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !18717
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !18718
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18719
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !18720
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !18721
  %55 = load i8*, i8** %data.addr, align 8, !dbg !18722
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !18723
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18724
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !18725
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !18726
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !18727
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !18728
  br label %sw.epilog, !dbg !18729

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18730
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !18731
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !18732
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18733
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !18734
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !18735
  %60 = load i8*, i8** %data.addr, align 8, !dbg !18736
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !18737
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18738
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !18739
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !18740
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !18741
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !18742
  br label %sw.epilog, !dbg !18743

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18744
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !18745
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !18746
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18747
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !18748
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !18749
  %65 = load i8*, i8** %data.addr, align 8, !dbg !18750
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !18751
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18752
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !18753
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !18754
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !18755
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !18756
  br label %sw.epilog, !dbg !18757

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !18758
  br label %return, !dbg !18758

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18759
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !18760
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !18760
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !18761
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !18761
  call void %69(i8* %71), !dbg !18759
  store i8 1, i8* %retval, align 1, !dbg !18762
  br label %return, !dbg !18762

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !18763
  ret i8 %72, !dbg !18763
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local i32 @BM_vert_face_count(%struct.BMVert*) #2

declare dso_local void @BKE_pbvh_gather_proxies(%struct.PBVH*, %struct.PBVHNode***, i32*) #2

declare dso_local void @BKE_pbvh_node_get_proxies(%struct.PBVHNode*, %struct.PBVHProxyNode**, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_flush_pbvhvert_deform(%struct.Object* %ob, %struct.PBVHVertexIter* %vd) #0 !dbg !18764 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vd.addr = alloca %struct.PBVHVertexIter*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %me = alloca %struct.Mesh*, align 8
  %disp = alloca [3 x float], align 4
  %newco = alloca [3 x float], align 4
  %index = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !18767, metadata !DIExpression()), !dbg !18768
  store %struct.PBVHVertexIter* %vd, %struct.PBVHVertexIter** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHVertexIter** %vd.addr, metadata !18769, metadata !DIExpression()), !dbg !18770
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !18771, metadata !DIExpression()), !dbg !18772
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18773
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !18774
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !18774
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !18772
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !18775, metadata !DIExpression()), !dbg !18776
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18777
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !18778
  %3 = load i8*, i8** %data, align 8, !dbg !18778
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !18777
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !18776
  call void @llvm.dbg.declare(metadata [3 x float]* %disp, metadata !18779, metadata !DIExpression()), !dbg !18780
  call void @llvm.dbg.declare(metadata [3 x float]* %newco, metadata !18781, metadata !DIExpression()), !dbg !18782
  call void @llvm.dbg.declare(metadata i32* %index, metadata !18783, metadata !DIExpression()), !dbg !18784
  %5 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %vd.addr, align 8, !dbg !18785
  %vert_indices = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %5, i32 0, i32 16, !dbg !18786
  %6 = load i32*, i32** %vert_indices, align 8, !dbg !18786
  %7 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %vd.addr, align 8, !dbg !18787
  %i = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %7, i32 0, i32 5, !dbg !18788
  %8 = load i32, i32* %i, align 4, !dbg !18788
  %idxprom = sext i32 %8 to i64, !dbg !18785
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !18785
  %9 = load i32, i32* %arrayidx, align 4, !dbg !18785
  store i32 %9, i32* %index, align 4, !dbg !18784
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !18789
  %10 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %vd.addr, align 8, !dbg !18790
  %co = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %10, i32 0, i32 24, !dbg !18791
  %11 = load float*, float** %co, align 8, !dbg !18791
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18792
  %deform_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 19, !dbg !18793
  %13 = load [3 x float]*, [3 x float]** %deform_cos, align 8, !dbg !18793
  %14 = load i32, i32* %index, align 4, !dbg !18794
  %idxprom1 = sext i32 %14 to i64, !dbg !18792
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom1, !dbg !18792
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !18792
  call void @sub_v3_v3v3(float* %arraydecay, float* %11, float* %arraydecay3), !dbg !18795
  %15 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18796
  %deform_imats = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 20, !dbg !18797
  %16 = load [3 x [3 x float]]*, [3 x [3 x float]]** %deform_imats, align 8, !dbg !18797
  %17 = load i32, i32* %index, align 4, !dbg !18798
  %idxprom4 = sext i32 %17 to i64, !dbg !18796
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %16, i64 %idxprom4, !dbg !18796
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %arrayidx5, i64 0, i64 0, !dbg !18796
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !18799
  call void @mul_m3_v3([3 x float]* %arraydecay6, float* %arraydecay7), !dbg !18800
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %newco, i64 0, i64 0, !dbg !18801
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !18802
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18803
  %orig_cos = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 18, !dbg !18804
  %19 = load [3 x float]*, [3 x float]** %orig_cos, align 8, !dbg !18804
  %20 = load i32, i32* %index, align 4, !dbg !18805
  %idxprom10 = sext i32 %20 to i64, !dbg !18803
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %19, i64 %idxprom10, !dbg !18803
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !18803
  call void @add_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay12), !dbg !18806
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18807
  %deform_cos13 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 19, !dbg !18808
  %22 = load [3 x float]*, [3 x float]** %deform_cos13, align 8, !dbg !18808
  %23 = load i32, i32* %index, align 4, !dbg !18809
  %idxprom14 = sext i32 %23 to i64, !dbg !18807
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %22, i64 %idxprom14, !dbg !18807
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !18807
  %24 = load %struct.PBVHVertexIter*, %struct.PBVHVertexIter** %vd.addr, align 8, !dbg !18810
  %co17 = getelementptr inbounds %struct.PBVHVertexIter, %struct.PBVHVertexIter* %24, i32 0, i32 24, !dbg !18811
  %25 = load float*, float** %co17, align 8, !dbg !18811
  call void @copy_v3_v3(float* %arraydecay16, float* %25), !dbg !18812
  %26 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18813
  %orig_cos18 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %26, i32 0, i32 18, !dbg !18814
  %27 = load [3 x float]*, [3 x float]** %orig_cos18, align 8, !dbg !18814
  %28 = load i32, i32* %index, align 4, !dbg !18815
  %idxprom19 = sext i32 %28 to i64, !dbg !18813
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom19, !dbg !18813
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !18813
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %newco, i64 0, i64 0, !dbg !18816
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay22), !dbg !18817
  %29 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !18818
  %kb = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 7, !dbg !18820
  %30 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !18820
  %tobool = icmp ne %struct.KeyBlock* %30, null, !dbg !18818
  br i1 %tobool, label %if.end, label %if.then, !dbg !18821

if.then:                                          ; preds = %entry
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !18822
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 15, !dbg !18823
  %32 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18823
  %33 = load i32, i32* %index, align 4, !dbg !18824
  %idxprom23 = sext i32 %33 to i64, !dbg !18822
  %arrayidx24 = getelementptr inbounds %struct.MVert, %struct.MVert* %32, i64 %idxprom23, !dbg !18822
  %co25 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx24, i32 0, i32 0, !dbg !18825
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 0, !dbg !18822
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %newco, i64 0, i64 0, !dbg !18826
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay27), !dbg !18827
  br label %if.end, !dbg !18827

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18828
}

declare dso_local void @BKE_pbvh_node_free_proxies(%struct.PBVHNode*) #2

declare dso_local [3 x float]* @BKE_pbvh_get_vertCos(%struct.PBVH*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @multires_mark_as_modified(%struct.Object*, i32) #2

declare dso_local void @GPU_drawobject_free(%struct.DerivedMesh*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_get_redraw_rect(%struct.ARegion* %ar, %struct.RegionView3D* %rv3d, %struct.Object* %ob, %struct.rcti* %rect) #0 !dbg !18829 {
entry:
  %retval = alloca i8, align 1
  %ar.addr = alloca %struct.ARegion*, align 8
  %rv3d.addr = alloca %struct.RegionView3D*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %pbvh = alloca %struct.PBVH*, align 8
  %bb_min = alloca [3 x float], align 4
  %bb_max = alloca [3 x float], align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !18832, metadata !DIExpression()), !dbg !18833
  store %struct.RegionView3D* %rv3d, %struct.RegionView3D** %rv3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d.addr, metadata !18834, metadata !DIExpression()), !dbg !18835
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !18836, metadata !DIExpression()), !dbg !18837
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !18838, metadata !DIExpression()), !dbg !18839
  call void @llvm.dbg.declare(metadata %struct.PBVH** %pbvh, metadata !18840, metadata !DIExpression()), !dbg !18841
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18842
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !18843
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !18843
  %pbvh1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %1, i32 0, i32 15, !dbg !18844
  %2 = load %struct.PBVH*, %struct.PBVH** %pbvh1, align 8, !dbg !18844
  store %struct.PBVH* %2, %struct.PBVH** %pbvh, align 8, !dbg !18841
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_min, metadata !18845, metadata !DIExpression()), !dbg !18846
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_max, metadata !18847, metadata !DIExpression()), !dbg !18848
  %3 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !18849
  %tobool = icmp ne %struct.PBVH* %3, null, !dbg !18849
  br i1 %tobool, label %if.end, label %if.then, !dbg !18851

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !18852
  br label %return, !dbg !18852

if.end:                                           ; preds = %entry
  %4 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !18853
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !18854
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !18855
  call void @BKE_pbvh_redraw_BB(%struct.PBVH* %4, float* %arraydecay, float* %arraydecay2), !dbg !18856
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !18857
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !18859
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !18860
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !18861
  %7 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !18862
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18863
  %call = call zeroext i8 @paint_convert_bb_to_rect(%struct.rcti* %5, float* %arraydecay3, float* %arraydecay4, %struct.ARegion* %6, %struct.RegionView3D* %7, %struct.Object* %8), !dbg !18864
  %tobool5 = icmp ne i8 %call, 0, !dbg !18864
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !18865

if.then6:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !18866
  br label %return, !dbg !18866

if.end7:                                          ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !18868
  br label %return, !dbg !18868

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !18869
  ret i8 %9, !dbg !18869
}

declare dso_local void @ED_region_tag_redraw_partial(%struct.ARegion*, %struct.rcti*) #2

declare dso_local void @BKE_pbvh_redraw_BB(%struct.PBVH*, float*, float*) #2

declare dso_local zeroext i8 @paint_convert_bb_to_rect(%struct.rcti*, float*, float*, %struct.ARegion*, %struct.RegionView3D*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_omp_done(%struct.SculptSession* %ss) #0 !dbg !18870 {
entry:
  %ss.addr = alloca %struct.SculptSession*, align 8
  %i = alloca i32, align 4
  store %struct.SculptSession* %ss, %struct.SculptSession** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss.addr, metadata !18871, metadata !DIExpression()), !dbg !18872
  %0 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18873
  %multires = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %0, i32 0, i32 0, !dbg !18875
  %1 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %multires, align 8, !dbg !18875
  %tobool = icmp ne %struct.MultiresModifierData* %1, null, !dbg !18873
  br i1 %tobool, label %if.then, label %if.end, !dbg !18876

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18877, metadata !DIExpression()), !dbg !18879
  store i32 0, i32* %i, align 4, !dbg !18880
  br label %for.cond, !dbg !18882

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !18883
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18885
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !18886
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !18886
  %num_threads = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %4, i32 0, i32 5, !dbg !18887
  %5 = load i32, i32* %num_threads, align 8, !dbg !18887
  %cmp = icmp slt i32 %2, %5, !dbg !18888
  br i1 %cmp, label %for.body, label %for.end, !dbg !18889

for.body:                                         ; preds = %for.cond
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18890
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18892
  %cache1 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 28, !dbg !18893
  %8 = load %struct.StrokeCache*, %struct.StrokeCache** %cache1, align 8, !dbg !18893
  %tmpgrid_co = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %8, i32 0, i32 7, !dbg !18894
  %9 = load [3 x float]**, [3 x float]*** %tmpgrid_co, align 8, !dbg !18894
  %10 = load i32, i32* %i, align 4, !dbg !18895
  %idxprom = sext i32 %10 to i64, !dbg !18892
  %arrayidx = getelementptr inbounds [3 x float]*, [3 x float]** %9, i64 %idxprom, !dbg !18892
  %11 = load [3 x float]*, [3 x float]** %arrayidx, align 8, !dbg !18892
  %12 = bitcast [3 x float]* %11 to i8*, !dbg !18892
  call void %6(i8* %12), !dbg !18890
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18896
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18897
  %cache2 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 28, !dbg !18898
  %15 = load %struct.StrokeCache*, %struct.StrokeCache** %cache2, align 8, !dbg !18898
  %tmprow_co = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %15, i32 0, i32 8, !dbg !18899
  %16 = load [3 x float]**, [3 x float]*** %tmprow_co, align 8, !dbg !18899
  %17 = load i32, i32* %i, align 4, !dbg !18900
  %idxprom3 = sext i32 %17 to i64, !dbg !18897
  %arrayidx4 = getelementptr inbounds [3 x float]*, [3 x float]** %16, i64 %idxprom3, !dbg !18897
  %18 = load [3 x float]*, [3 x float]** %arrayidx4, align 8, !dbg !18897
  %19 = bitcast [3 x float]* %18 to i8*, !dbg !18897
  call void %13(i8* %19), !dbg !18896
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18901
  %21 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18902
  %cache5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %21, i32 0, i32 28, !dbg !18903
  %22 = load %struct.StrokeCache*, %struct.StrokeCache** %cache5, align 8, !dbg !18903
  %tmpgrid_mask = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %22, i32 0, i32 9, !dbg !18904
  %23 = load float**, float*** %tmpgrid_mask, align 8, !dbg !18904
  %24 = load i32, i32* %i, align 4, !dbg !18905
  %idxprom6 = sext i32 %24 to i64, !dbg !18902
  %arrayidx7 = getelementptr inbounds float*, float** %23, i64 %idxprom6, !dbg !18902
  %25 = load float*, float** %arrayidx7, align 8, !dbg !18902
  %26 = bitcast float* %25 to i8*, !dbg !18902
  call void %20(i8* %26), !dbg !18901
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18906
  %28 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18907
  %cache8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %28, i32 0, i32 28, !dbg !18908
  %29 = load %struct.StrokeCache*, %struct.StrokeCache** %cache8, align 8, !dbg !18908
  %tmprow_mask = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %29, i32 0, i32 10, !dbg !18909
  %30 = load float**, float*** %tmprow_mask, align 8, !dbg !18909
  %31 = load i32, i32* %i, align 4, !dbg !18910
  %idxprom9 = sext i32 %31 to i64, !dbg !18907
  %arrayidx10 = getelementptr inbounds float*, float** %30, i64 %idxprom9, !dbg !18907
  %32 = load float*, float** %arrayidx10, align 8, !dbg !18907
  %33 = bitcast float* %32 to i8*, !dbg !18907
  call void %27(i8* %33), !dbg !18906
  br label %for.inc, !dbg !18911

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !18912
  %inc = add nsw i32 %34, 1, !dbg !18912
  store i32 %inc, i32* %i, align 4, !dbg !18912
  br label %for.cond, !dbg !18913, !llvm.loop !18914

for.end:                                          ; preds = %for.cond
  %35 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18916
  %36 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18917
  %cache11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %36, i32 0, i32 28, !dbg !18918
  %37 = load %struct.StrokeCache*, %struct.StrokeCache** %cache11, align 8, !dbg !18918
  %tmpgrid_co12 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %37, i32 0, i32 7, !dbg !18919
  %38 = load [3 x float]**, [3 x float]*** %tmpgrid_co12, align 8, !dbg !18919
  %39 = bitcast [3 x float]** %38 to i8*, !dbg !18917
  call void %35(i8* %39), !dbg !18916
  %40 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18920
  %41 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18921
  %cache13 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %41, i32 0, i32 28, !dbg !18922
  %42 = load %struct.StrokeCache*, %struct.StrokeCache** %cache13, align 8, !dbg !18922
  %tmprow_co14 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %42, i32 0, i32 8, !dbg !18923
  %43 = load [3 x float]**, [3 x float]*** %tmprow_co14, align 8, !dbg !18923
  %44 = bitcast [3 x float]** %43 to i8*, !dbg !18921
  call void %40(i8* %44), !dbg !18920
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18924
  %46 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18925
  %cache15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %46, i32 0, i32 28, !dbg !18926
  %47 = load %struct.StrokeCache*, %struct.StrokeCache** %cache15, align 8, !dbg !18926
  %tmpgrid_mask16 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %47, i32 0, i32 9, !dbg !18927
  %48 = load float**, float*** %tmpgrid_mask16, align 8, !dbg !18927
  %49 = bitcast float** %48 to i8*, !dbg !18925
  call void %45(i8* %49), !dbg !18924
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18928
  %51 = load %struct.SculptSession*, %struct.SculptSession** %ss.addr, align 8, !dbg !18929
  %cache17 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %51, i32 0, i32 28, !dbg !18930
  %52 = load %struct.StrokeCache*, %struct.StrokeCache** %cache17, align 8, !dbg !18930
  %tmprow_mask18 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %52, i32 0, i32 10, !dbg !18931
  %53 = load float**, float*** %tmprow_mask18, align 8, !dbg !18931
  %54 = bitcast float** %53 to i8*, !dbg !18929
  call void %50(i8* %54), !dbg !18928
  br label %if.end, !dbg !18932

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !18933
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_cache_free(%struct.StrokeCache* %cache) #0 !dbg !18934 {
entry:
  %cache.addr = alloca %struct.StrokeCache*, align 8
  store %struct.StrokeCache* %cache, %struct.StrokeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrokeCache** %cache.addr, metadata !18937, metadata !DIExpression()), !dbg !18938
  %0 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !18939
  %face_norms = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %0, i32 0, i32 24, !dbg !18941
  %1 = load [3 x float]*, [3 x float]** %face_norms, align 8, !dbg !18941
  %tobool = icmp ne [3 x float]* %1, null, !dbg !18939
  br i1 %tobool, label %if.then, label %if.end, !dbg !18942

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18943
  %3 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !18944
  %face_norms1 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %3, i32 0, i32 24, !dbg !18945
  %4 = load [3 x float]*, [3 x float]** %face_norms1, align 8, !dbg !18945
  %5 = bitcast [3 x float]* %4 to i8*, !dbg !18944
  call void %2(i8* %5), !dbg !18943
  br label %if.end, !dbg !18943

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !18946
  %dial = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %6, i32 0, i32 44, !dbg !18948
  %7 = load %struct.Dial*, %struct.Dial** %dial, align 8, !dbg !18948
  %tobool2 = icmp ne %struct.Dial* %7, null, !dbg !18946
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !18949

if.then3:                                         ; preds = %if.end
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18950
  %9 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !18951
  %dial4 = getelementptr inbounds %struct.StrokeCache, %struct.StrokeCache* %9, i32 0, i32 44, !dbg !18952
  %10 = load %struct.Dial*, %struct.Dial** %dial4, align 8, !dbg !18952
  %11 = bitcast %struct.Dial* %10 to i8*, !dbg !18951
  call void %8(i8* %11), !dbg !18950
  br label %if.end5, !dbg !18950

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18953
  %13 = load %struct.StrokeCache*, %struct.StrokeCache** %cache.addr, align 8, !dbg !18954
  %14 = bitcast %struct.StrokeCache* %13 to i8*, !dbg !18954
  call void %12(i8* %14), !dbg !18953
  ret void, !dbg !18955
}

declare dso_local void @sculpt_undo_push_end() #2

declare dso_local void @BKE_pbvh_bmesh_after_stroke(%struct.PBVH*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_brush_exit_tex(%struct.Sculpt* %sd) #0 !dbg !18956 {
entry:
  %sd.addr = alloca %struct.Sculpt*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mtex = alloca %struct.MTex*, align 8
  store %struct.Sculpt* %sd, %struct.Sculpt** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd.addr, metadata !18959, metadata !DIExpression()), !dbg !18960
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !18961, metadata !DIExpression()), !dbg !18962
  %0 = load %struct.Sculpt*, %struct.Sculpt** %sd.addr, align 8, !dbg !18963
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %0, i32 0, i32 0, !dbg !18964
  %call = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !18965
  store %struct.Brush* %call, %struct.Brush** %brush, align 8, !dbg !18962
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !18966, metadata !DIExpression()), !dbg !18967
  %1 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !18968
  %mtex1 = getelementptr inbounds %struct.Brush, %struct.Brush* %1, i32 0, i32 3, !dbg !18969
  store %struct.MTex* %mtex1, %struct.MTex** %mtex, align 8, !dbg !18967
  %2 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18970
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %2, i32 0, i32 5, !dbg !18972
  %3 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !18972
  %tobool = icmp ne %struct.Tex* %3, null, !dbg !18970
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !18973

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18974
  %tex2 = getelementptr inbounds %struct.MTex, %struct.MTex* %4, i32 0, i32 5, !dbg !18975
  %5 = load %struct.Tex*, %struct.Tex** %tex2, align 8, !dbg !18975
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %5, i32 0, i32 52, !dbg !18976
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !18976
  %tobool3 = icmp ne %struct.bNodeTree* %6, null, !dbg !18974
  br i1 %tobool3, label %if.then, label %if.end, !dbg !18977

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !18978
  %tex4 = getelementptr inbounds %struct.MTex, %struct.MTex* %7, i32 0, i32 5, !dbg !18979
  %8 = load %struct.Tex*, %struct.Tex** %tex4, align 8, !dbg !18979
  %nodetree5 = getelementptr inbounds %struct.Tex, %struct.Tex* %8, i32 0, i32 52, !dbg !18980
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree5, align 8, !dbg !18980
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 27, !dbg !18981
  %10 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !18981
  call void @ntreeTexEndExecTree(%struct.bNodeTreeExec* %10), !dbg !18982
  br label %if.end, !dbg !18982

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !18983
}

declare dso_local void @ntreeTexEndExecTree(%struct.bNodeTreeExec*) #2

declare dso_local i32 @paint_stroke_exec(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @paint_stroke_cancel(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_mode_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !18984 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ob = alloca %struct.Object*, align 8
  %mode_flag = alloca i32, align 4
  %is_mode_set = alloca i8, align 1
  %me = alloca %struct.Mesh*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %flush_recalc = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !18985, metadata !DIExpression()), !dbg !18986
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !18987, metadata !DIExpression()), !dbg !18988
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !18989, metadata !DIExpression()), !dbg !18990
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18991
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !18992
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !18990
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !18993, metadata !DIExpression()), !dbg !18996
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !18997
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !18998
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !18996
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !18999, metadata !DIExpression()), !dbg !19000
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19001
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !19002
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !19000
  call void @llvm.dbg.declare(metadata i32* %mode_flag, metadata !19003, metadata !DIExpression()), !dbg !19004
  store i32 2, i32* %mode_flag, align 4, !dbg !19004
  call void @llvm.dbg.declare(metadata i8* %is_mode_set, metadata !19005, metadata !DIExpression()), !dbg !19006
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19007
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 27, !dbg !19008
  %4 = load i32, i32* %mode, align 8, !dbg !19008
  %and = and i32 %4, 2, !dbg !19009
  %cmp = icmp ne i32 %and, 0, !dbg !19010
  %conv = zext i1 %cmp to i32, !dbg !19010
  %conv3 = trunc i32 %conv to i8, !dbg !19011
  store i8 %conv3, i8* %is_mode_set, align 1, !dbg !19006
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !19012, metadata !DIExpression()), !dbg !19013
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !19014, metadata !DIExpression()), !dbg !19015
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !19016
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19017
  %call4 = call %struct.MultiresModifierData* @BKE_sculpt_multires_active(%struct.Scene* %5, %struct.Object* %6), !dbg !19018
  store %struct.MultiresModifierData* %call4, %struct.MultiresModifierData** %mmd, align 8, !dbg !19015
  call void @llvm.dbg.declare(metadata i32* %flush_recalc, metadata !19019, metadata !DIExpression()), !dbg !19020
  store i32 0, i32* %flush_recalc, align 4, !dbg !19020
  %7 = load i8, i8* %is_mode_set, align 1, !dbg !19021
  %tobool = icmp ne i8 %7, 0, !dbg !19021
  br i1 %tobool, label %if.end8, label %if.then, !dbg !19023

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19024
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19027
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19028
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !19029
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !19029
  %call5 = call zeroext i8 @ED_object_mode_compat_set(%struct.bContext* %8, %struct.Object* %9, i32 2, %struct.ReportList* %11), !dbg !19030
  %tobool6 = icmp ne i8 %call5, 0, !dbg !19030
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !19031

if.then7:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !19032
  br label %return, !dbg !19032

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !19034

if.end8:                                          ; preds = %if.end, %entry
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19035
  %call9 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %12), !dbg !19036
  store %struct.Mesh* %call9, %struct.Mesh** %me, align 8, !dbg !19037
  %13 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19038
  %tobool10 = icmp ne %struct.MultiresModifierData* %13, null, !dbg !19038
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !19039

land.rhs:                                         ; preds = %if.end8
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19040
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %14, i32 0, i32 2, !dbg !19041
  %15 = load i8, i8* %sculptlvl, align 1, !dbg !19041
  %conv11 = zext i8 %15 to i32, !dbg !19040
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19042
  %lvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 1, !dbg !19043
  %17 = load i8, i8* %lvl, align 8, !dbg !19043
  %conv12 = zext i8 %17 to i32, !dbg !19042
  %cmp13 = icmp ne i32 %conv11, %conv12, !dbg !19044
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end8
  %18 = phi i1 [ false, %if.end8 ], [ %cmp13, %land.rhs ], !dbg !19045
  %land.ext = zext i1 %18 to i32, !dbg !19039
  %19 = load i32, i32* %flush_recalc, align 4, !dbg !19046
  %or = or i32 %19, %land.ext, !dbg !19046
  store i32 %or, i32* %flush_recalc, align 4, !dbg !19046
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !19047
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19048
  %call15 = call zeroext i8 @sculpt_has_active_modifiers(%struct.Scene* %20, %struct.Object* %21), !dbg !19049
  %conv16 = zext i8 %call15 to i32, !dbg !19049
  %22 = load i32, i32* %flush_recalc, align 4, !dbg !19050
  %or17 = or i32 %22, %conv16, !dbg !19050
  store i32 %or17, i32* %flush_recalc, align 4, !dbg !19050
  %23 = load i8, i8* %is_mode_set, align 1, !dbg !19051
  %tobool18 = icmp ne i8 %23, 0, !dbg !19051
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !19053

if.then19:                                        ; preds = %land.end
  %24 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19054
  %tobool20 = icmp ne %struct.MultiresModifierData* %24, null, !dbg !19054
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !19057

if.then21:                                        ; preds = %if.then19
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19058
  call void @multires_force_update(%struct.Object* %25), !dbg !19059
  br label %if.end22, !dbg !19059

if.end22:                                         ; preds = %if.then21, %if.then19
  %26 = load i32, i32* %flush_recalc, align 4, !dbg !19060
  %tobool23 = icmp ne i32 %26, 0, !dbg !19060
  br i1 %tobool23, label %if.then27, label %lor.lhs.false, !dbg !19062

lor.lhs.false:                                    ; preds = %if.end22
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19063
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 2, !dbg !19064
  %28 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !19064
  %tobool24 = icmp ne %struct.SculptSession* %28, null, !dbg !19063
  br i1 %tobool24, label %land.lhs.true, label %if.end28, !dbg !19065

land.lhs.true:                                    ; preds = %lor.lhs.false
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19066
  %sculpt25 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 2, !dbg !19067
  %30 = load %struct.SculptSession*, %struct.SculptSession** %sculpt25, align 8, !dbg !19067
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %30, i32 0, i32 10, !dbg !19068
  %31 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19068
  %tobool26 = icmp ne %struct.BMesh* %31, null, !dbg !19066
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !19069

if.then27:                                        ; preds = %land.lhs.true, %if.end22
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19070
  %id = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 0, !dbg !19071
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !19072
  br label %if.end28, !dbg !19072

if.end28:                                         ; preds = %if.then27, %land.lhs.true, %lor.lhs.false
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !19073
  %flag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 38, !dbg !19075
  %34 = load i16, i16* %flag, align 2, !dbg !19075
  %conv29 = sext i16 %34 to i32, !dbg !19073
  %and30 = and i32 %conv29, 1024, !dbg !19076
  %tobool31 = icmp ne i32 %and30, 0, !dbg !19076
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !19077

if.then32:                                        ; preds = %if.end28
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19078
  %call33 = call i32 @sculpt_dynamic_topology_toggle_exec(%struct.bContext* %35, %struct.wmOperator* null), !dbg !19080
  br label %if.end34, !dbg !19081

if.end34:                                         ; preds = %if.then32, %if.end28
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19082
  %mode35 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 27, !dbg !19083
  %37 = load i32, i32* %mode35, align 8, !dbg !19084
  %and36 = and i32 %37, -3, !dbg !19084
  store i32 %and36, i32* %mode35, align 8, !dbg !19084
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19085
  call void @BKE_free_sculptsession(%struct.Object* %38), !dbg !19086
  call void @paint_cursor_delete_textures(), !dbg !19087
  br label %if.end105, !dbg !19088

if.else:                                          ; preds = %land.end
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19089
  %mode37 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 27, !dbg !19091
  %40 = load i32, i32* %mode37, align 8, !dbg !19092
  %or38 = or i32 %40, 2, !dbg !19092
  store i32 %or38, i32* %mode37, align 8, !dbg !19092
  %41 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !19093
  %flag39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 38, !dbg !19094
  %42 = load i16, i16* %flag39, align 2, !dbg !19095
  %conv40 = sext i16 %42 to i32, !dbg !19095
  %and41 = and i32 %conv40, -1025, !dbg !19095
  %conv42 = trunc i32 %and41 to i16, !dbg !19095
  store i16 %conv42, i16* %flag39, align 2, !dbg !19095
  %43 = load i32, i32* %flush_recalc, align 4, !dbg !19096
  %tobool43 = icmp ne i32 %43, 0, !dbg !19096
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !19098

if.then44:                                        ; preds = %if.else
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19099
  %id45 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 0, !dbg !19100
  call void @DAG_id_tag_update(%struct.ID* %id45, i16 signext 2), !dbg !19101
  br label %if.end46, !dbg !19101

if.end46:                                         ; preds = %if.then44, %if.else
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19102
  %sculpt47 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 2, !dbg !19104
  %46 = load %struct.Sculpt*, %struct.Sculpt** %sculpt47, align 8, !dbg !19104
  %tobool48 = icmp ne %struct.Sculpt* %46, null, !dbg !19102
  br i1 %tobool48, label %if.end60, label %if.then49, !dbg !19105

if.then49:                                        ; preds = %if.end46
  %47 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19106
  %call50 = call i8* %47(i64 88, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0)), !dbg !19106
  %48 = bitcast i8* %call50 to %struct.Sculpt*, !dbg !19106
  %49 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19108
  %sculpt51 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %49, i32 0, i32 2, !dbg !19109
  store %struct.Sculpt* %48, %struct.Sculpt** %sculpt51, align 8, !dbg !19110
  %50 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19111
  %sculpt52 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %50, i32 0, i32 2, !dbg !19112
  %51 = load %struct.Sculpt*, %struct.Sculpt** %sculpt52, align 8, !dbg !19112
  %paint = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %51, i32 0, i32 0, !dbg !19113
  %symmetry_flags = getelementptr inbounds %struct.Paint, %struct.Paint* %paint, i32 0, i32 6, !dbg !19114
  %52 = load i32, i32* %symmetry_flags, align 4, !dbg !19115
  %or53 = or i32 %52, 1, !dbg !19115
  store i32 %or53, i32* %symmetry_flags, align 4, !dbg !19115
  %53 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19116
  %sculpt54 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %53, i32 0, i32 2, !dbg !19117
  %54 = load %struct.Sculpt*, %struct.Sculpt** %sculpt54, align 8, !dbg !19117
  %paint55 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %54, i32 0, i32 0, !dbg !19118
  %flags = getelementptr inbounds %struct.Paint, %struct.Paint* %paint55, i32 0, i32 4, !dbg !19119
  %55 = load i32, i32* %flags, align 4, !dbg !19120
  %or56 = or i32 %55, 1, !dbg !19120
  store i32 %or56, i32* %flags, align 4, !dbg !19120
  %56 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19121
  %sculpt57 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %56, i32 0, i32 2, !dbg !19122
  %57 = load %struct.Sculpt*, %struct.Sculpt** %sculpt57, align 8, !dbg !19122
  %flags58 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %57, i32 0, i32 1, !dbg !19123
  %58 = load i32, i32* %flags58, align 8, !dbg !19124
  %or59 = or i32 %58, 6144, !dbg !19124
  store i32 %or59, i32* %flags58, align 8, !dbg !19124
  br label %if.end60, !dbg !19125

if.end60:                                         ; preds = %if.then49, %if.end46
  %59 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19126
  %sculpt61 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %59, i32 0, i32 2, !dbg !19128
  %60 = load %struct.Sculpt*, %struct.Sculpt** %sculpt61, align 8, !dbg !19128
  %detail_size = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %60, i32 0, i32 3, !dbg !19129
  %61 = load float, float* %detail_size, align 8, !dbg !19129
  %tobool62 = fcmp une float %61, 0.000000e+00, !dbg !19126
  br i1 %tobool62, label %if.end66, label %if.then63, !dbg !19130

if.then63:                                        ; preds = %if.end60
  %62 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19131
  %sculpt64 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %62, i32 0, i32 2, !dbg !19133
  %63 = load %struct.Sculpt*, %struct.Sculpt** %sculpt64, align 8, !dbg !19133
  %detail_size65 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %63, i32 0, i32 3, !dbg !19134
  store float 1.200000e+01, float* %detail_size65, align 8, !dbg !19135
  br label %if.end66, !dbg !19136

if.end66:                                         ; preds = %if.then63, %if.end60
  %64 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19137
  %sculpt67 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %64, i32 0, i32 2, !dbg !19139
  %65 = load %struct.Sculpt*, %struct.Sculpt** %sculpt67, align 8, !dbg !19139
  %constant_detail = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %65, i32 0, i32 6, !dbg !19140
  %66 = load float, float* %constant_detail, align 4, !dbg !19140
  %cmp68 = fcmp oeq float %66, 0.000000e+00, !dbg !19141
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !19142

if.then70:                                        ; preds = %if.end66
  %67 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19143
  %sculpt71 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %67, i32 0, i32 2, !dbg !19144
  %68 = load %struct.Sculpt*, %struct.Sculpt** %sculpt71, align 8, !dbg !19144
  %constant_detail72 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %68, i32 0, i32 6, !dbg !19145
  store float 3.000000e+01, float* %constant_detail72, align 4, !dbg !19146
  br label %if.end73, !dbg !19143

if.end73:                                         ; preds = %if.then70, %if.end66
  %69 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19147
  %sculpt74 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 2, !dbg !19149
  %70 = load %struct.SculptSession*, %struct.SculptSession** %sculpt74, align 8, !dbg !19149
  %tobool75 = icmp ne %struct.SculptSession* %70, null, !dbg !19147
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !19150

if.then76:                                        ; preds = %if.end73
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19151
  call void @BKE_free_sculptsession(%struct.Object* %71), !dbg !19152
  br label %if.end77, !dbg !19152

if.end77:                                         ; preds = %if.then76, %if.end73
  %72 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !19153
  %73 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19154
  call void @sculpt_init_session(%struct.Scene* %72, %struct.Object* %73), !dbg !19155
  %74 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19156
  %tobool78 = icmp ne %struct.MultiresModifierData* %74, null, !dbg !19156
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !19158

if.then79:                                        ; preds = %if.end77
  %75 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19159
  %76 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !19161
  %call80 = call i32 @BKE_sculpt_mask_layers_ensure(%struct.Object* %75, %struct.MultiresModifierData* %76), !dbg !19162
  br label %if.end81, !dbg !19163

if.end81:                                         ; preds = %if.then79, %if.end77
  %77 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19164
  %size = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 36, !dbg !19166
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !19164
  %78 = load float, float* %arrayidx, align 4, !dbg !19164
  %79 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19167
  %size82 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 36, !dbg !19168
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %size82, i64 0, i64 1, !dbg !19167
  %80 = load float, float* %arrayidx83, align 4, !dbg !19167
  %sub = fsub float %78, %80, !dbg !19169
  %81 = call float @llvm.fabs.f32(float %sub), !dbg !19170
  %cmp84 = fcmp olt float %81, 0x3F1A36E2E0000000, !dbg !19171
  br i1 %cmp84, label %land.lhs.true86, label %if.then94, !dbg !19172

land.lhs.true86:                                  ; preds = %if.end81
  %82 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19173
  %size87 = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 36, !dbg !19174
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %size87, i64 0, i64 1, !dbg !19173
  %83 = load float, float* %arrayidx88, align 4, !dbg !19173
  %84 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19175
  %size89 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 36, !dbg !19176
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %size89, i64 0, i64 2, !dbg !19175
  %85 = load float, float* %arrayidx90, align 4, !dbg !19175
  %sub91 = fsub float %83, %85, !dbg !19177
  %86 = call float @llvm.fabs.f32(float %sub91), !dbg !19178
  %cmp92 = fcmp olt float %86, 0x3F1A36E2E0000000, !dbg !19179
  br i1 %cmp92, label %if.else96, label %if.then94, !dbg !19180

if.then94:                                        ; preds = %land.lhs.true86, %if.end81
  %87 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19181
  %reports95 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %87, i32 0, i32 8, !dbg !19183
  %88 = load %struct.ReportList*, %struct.ReportList** %reports95, align 8, !dbg !19183
  call void @BKE_report(%struct.ReportList* %88, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.48, i64 0, i64 0)), !dbg !19184
  br label %if.end102, !dbg !19185

if.else96:                                        ; preds = %land.lhs.true86
  %89 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19186
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 47, !dbg !19188
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !19186
  %call97 = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay), !dbg !19189
  %tobool98 = icmp ne i8 %call97, 0, !dbg !19189
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !19190

if.then99:                                        ; preds = %if.else96
  %90 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19191
  %reports100 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %90, i32 0, i32 8, !dbg !19193
  %91 = load %struct.ReportList*, %struct.ReportList** %reports100, align 8, !dbg !19193
  call void @BKE_report(%struct.ReportList* %91, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.49, i64 0, i64 0)), !dbg !19194
  br label %if.end101, !dbg !19195

if.end101:                                        ; preds = %if.then99, %if.else96
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then94
  %92 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !19196
  %sculpt103 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %92, i32 0, i32 2, !dbg !19197
  %93 = load %struct.Sculpt*, %struct.Sculpt** %sculpt103, align 8, !dbg !19197
  %paint104 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %93, i32 0, i32 0, !dbg !19198
  call void @BKE_paint_init(%struct.Paint* %paint104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @PAINT_CURSOR_SCULPT, i64 0, i64 0)), !dbg !19199
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19200
  call void @paint_cursor_start(%struct.bContext* %94, i32 (%struct.bContext*)* @sculpt_poll_view3d), !dbg !19201
  br label %if.end105

if.end105:                                        ; preds = %if.end102, %if.end34
  %95 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19202
  %96 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !19203
  %97 = bitcast %struct.Scene* %96 to i8*, !dbg !19203
  call void @WM_event_add_notifier(%struct.bContext* %95, i32 67829760, i8* %97), !dbg !19204
  store i32 4, i32* %retval, align 4, !dbg !19205
  br label %return, !dbg !19205

return:                                           ; preds = %if.end105, %if.then7
  %98 = load i32, i32* %retval, align 4, !dbg !19206
  ret i32 %98, !dbg !19206
}

declare dso_local i32 @ED_operator_object_active_editable_mesh(%struct.bContext*) #2

declare dso_local %struct.MultiresModifierData* @BKE_sculpt_multires_active(%struct.Scene*, %struct.Object*) #2

declare dso_local zeroext i8 @ED_object_mode_compat_set(%struct.bContext*, %struct.Object*, i32, %struct.ReportList*) #2

declare dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sculpt_has_active_modifiers(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !19207 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !19210, metadata !DIExpression()), !dbg !19211
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !19212, metadata !DIExpression()), !dbg !19213
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !19214, metadata !DIExpression()), !dbg !19215
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !19216, metadata !DIExpression()), !dbg !19254
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !19255
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !19256
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !19257
  br label %for.cond, !dbg !19258

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19259
  %tobool = icmp ne %struct.ModifierData* %1, null, !dbg !19262
  br i1 %tobool, label %for.body, label %for.end, !dbg !19262

for.body:                                         ; preds = %for.cond
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !19263
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19266
  %call1 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %2, %struct.ModifierData* %3, i32 1), !dbg !19267
  %tobool2 = icmp ne i8 %call1, 0, !dbg !19267
  br i1 %tobool2, label %if.then, label %if.end, !dbg !19268

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !19269
  br label %return, !dbg !19269

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19270

for.inc:                                          ; preds = %if.end
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19271
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %4, i32 0, i32 0, !dbg !19272
  %5 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !19272
  store %struct.ModifierData* %5, %struct.ModifierData** %md, align 8, !dbg !19273
  br label %for.cond, !dbg !19274, !llvm.loop !19275

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !19277
  br label %return, !dbg !19277

return:                                           ; preds = %for.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !19278
  ret i8 %6, !dbg !19278
}

declare dso_local void @multires_force_update(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_dynamic_topology_toggle_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !19279 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19280, metadata !DIExpression()), !dbg !19281
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !19282, metadata !DIExpression()), !dbg !19283
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19284, metadata !DIExpression()), !dbg !19285
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19286
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19287
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19285
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !19288, metadata !DIExpression()), !dbg !19289
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19290
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 2, !dbg !19291
  %2 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !19291
  store %struct.SculptSession* %2, %struct.SculptSession** %ss, align 8, !dbg !19289
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19292
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 10, !dbg !19294
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19294
  %tobool = icmp ne %struct.BMesh* %4, null, !dbg !19292
  br i1 %tobool, label %if.then, label %if.else, !dbg !19295

if.then:                                          ; preds = %entry
  call void @sculpt_undo_push_begin(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i64 0, i64 0)), !dbg !19296
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19298
  %call1 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %5, %struct.PBVHNode* null, i32 4), !dbg !19299
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19300
  call void @sculpt_dynamic_topology_disable(%struct.bContext* %6, %struct.SculptUndoNode* null), !dbg !19301
  br label %if.end, !dbg !19302

if.else:                                          ; preds = %entry
  call void @sculpt_undo_push_begin(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i64 0, i64 0)), !dbg !19303
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19305
  call void @sculpt_dynamic_topology_enable(%struct.bContext* %7), !dbg !19306
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19307
  %call2 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %8, %struct.PBVHNode* null, i32 3), !dbg !19308
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @sculpt_undo_push_end(), !dbg !19309
  ret i32 4, !dbg !19310
}

declare dso_local void @BKE_free_sculptsession(%struct.Object*) #2

declare dso_local void @paint_cursor_delete_textures() #2

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_init_session(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !19311 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !19314, metadata !DIExpression()), !dbg !19315
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !19316, metadata !DIExpression()), !dbg !19317
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !19318
  %call = call i8* %0(i64 232, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0)), !dbg !19318
  %1 = bitcast i8* %call to %struct.SculptSession*, !dbg !19318
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !19319
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !19320
  store %struct.SculptSession* %1, %struct.SculptSession** %sculpt, align 8, !dbg !19321
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !19322
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !19323
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !19324
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !19324
  %sculpt1 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 2, !dbg !19325
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sculpt1, align 8, !dbg !19325
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !19326
  call void @BKE_sculpt_update_mesh_elements(%struct.Scene* %3, %struct.Sculpt* %6, %struct.Object* %7, i8 zeroext 0, i8 zeroext 0), !dbg !19327
  ret void, !dbg !19328
}

declare dso_local i32 @BKE_sculpt_mask_layers_ensure(%struct.Object*, %struct.MultiresModifierData*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local zeroext i8 @is_negative_m4([4 x float]*) #2

declare dso_local void @BKE_paint_init(%struct.Paint*, i8*) #2

declare dso_local void @paint_cursor_start(%struct.bContext*, i32 (%struct.bContext*)*) #2

declare dso_local %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object*, %struct.VirtualModifierData*) #2

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_set_persistent_base_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !19329 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19330, metadata !DIExpression()), !dbg !19331
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !19332, metadata !DIExpression()), !dbg !19333
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !19334, metadata !DIExpression()), !dbg !19335
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19336
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19337
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %call, i32 0, i32 2, !dbg !19338
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !19338
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !19335
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19339
  %tobool = icmp ne %struct.SculptSession* %2, null, !dbg !19339
  br i1 %tobool, label %if.then, label %if.end5, !dbg !19341

if.then:                                          ; preds = %entry
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19342
  %layer_co = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 26, !dbg !19345
  %4 = load [3 x float]*, [3 x float]** %layer_co, align 8, !dbg !19345
  %tobool1 = icmp ne [3 x float]* %4, null, !dbg !19342
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !19346

if.then2:                                         ; preds = %if.then
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19347
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19348
  %layer_co3 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 26, !dbg !19349
  %7 = load [3 x float]*, [3 x float]** %layer_co3, align 8, !dbg !19349
  %8 = bitcast [3 x float]* %7 to i8*, !dbg !19348
  call void %5(i8* %8), !dbg !19347
  br label %if.end, !dbg !19347

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19350
  %layer_co4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 26, !dbg !19351
  store [3 x float]* null, [3 x float]** %layer_co4, align 8, !dbg !19352
  br label %if.end5, !dbg !19353

if.end5:                                          ; preds = %if.end, %entry
  ret i32 4, !dbg !19354
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_dynamic_topology_toggle_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !19355 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %scene = alloca %struct.Scene*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %i = alloca i32, align 4
  %vdata = alloca i8, align 1
  %modifiers = alloca i8, align 1
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19356, metadata !DIExpression()), !dbg !19357
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19358, metadata !DIExpression()), !dbg !19359
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !19360, metadata !DIExpression()), !dbg !19361
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19362, metadata !DIExpression()), !dbg !19363
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19364
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19365
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19363
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !19366, metadata !DIExpression()), !dbg !19367
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19368
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !19369
  %2 = load i8*, i8** %data, align 8, !dbg !19369
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !19368
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !19367
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !19370, metadata !DIExpression()), !dbg !19371
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19372
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !19373
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !19373
  store %struct.SculptSession* %5, %struct.SculptSession** %ss, align 8, !dbg !19371
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19374
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 10, !dbg !19376
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19376
  %tobool = icmp ne %struct.BMesh* %7, null, !dbg !19374
  br i1 %tobool, label %if.end51, label %if.then, !dbg !19377

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !19378, metadata !DIExpression()), !dbg !19380
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19381
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %8), !dbg !19382
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !19380
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !19383, metadata !DIExpression()), !dbg !19384
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !19385, metadata !DIExpression()), !dbg !19386
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19387, metadata !DIExpression()), !dbg !19388
  call void @llvm.dbg.declare(metadata i8* %vdata, metadata !19389, metadata !DIExpression()), !dbg !19390
  store i8 0, i8* %vdata, align 1, !dbg !19390
  call void @llvm.dbg.declare(metadata i8* %modifiers, metadata !19391, metadata !DIExpression()), !dbg !19392
  store i8 0, i8* %modifiers, align 1, !dbg !19392
  store i32 0, i32* %i, align 4, !dbg !19393
  br label %for.cond, !dbg !19395

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !19396
  %cmp = icmp slt i32 %9, 41, !dbg !19398
  br i1 %cmp, label %for.body, label %for.end, !dbg !19399

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !19400
  %cmp2 = icmp eq i32 %10, 0, !dbg !19400
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !19400

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !19400
  %cmp3 = icmp eq i32 %11, 3, !dbg !19400
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !19400

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %12 = load i32, i32* %i, align 4, !dbg !19400
  %cmp5 = icmp eq i32 %12, 4, !dbg !19400
  br i1 %cmp5, label %if.end, label %lor.lhs.false6, !dbg !19400

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %13 = load i32, i32* %i, align 4, !dbg !19400
  %cmp7 = icmp eq i32 %13, 26, !dbg !19400
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !19400

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %14 = load i32, i32* %i, align 4, !dbg !19400
  %cmp9 = icmp eq i32 %14, 25, !dbg !19400
  br i1 %cmp9, label %if.end, label %lor.lhs.false10, !dbg !19400

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %15 = load i32, i32* %i, align 4, !dbg !19400
  %cmp11 = icmp eq i32 %15, 34, !dbg !19400
  br i1 %cmp11, label %if.end, label %lor.lhs.false12, !dbg !19400

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %16 = load i32, i32* %i, align 4, !dbg !19400
  %cmp13 = icmp eq i32 %16, 7, !dbg !19400
  br i1 %cmp13, label %if.end, label %land.lhs.true, !dbg !19403

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !19404
  %vdata14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 21, !dbg !19405
  %18 = load i32, i32* %i, align 4, !dbg !19406
  %call15 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata14, i32 %18), !dbg !19407
  %conv = zext i8 %call15 to i32, !dbg !19407
  %tobool16 = icmp ne i32 %conv, 0, !dbg !19407
  br i1 %tobool16, label %if.then25, label %lor.lhs.false17, !dbg !19408

lor.lhs.false17:                                  ; preds = %land.lhs.true
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !19409
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 22, !dbg !19410
  %20 = load i32, i32* %i, align 4, !dbg !19411
  %call18 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %edata, i32 %20), !dbg !19412
  %conv19 = zext i8 %call18 to i32, !dbg !19412
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !19412
  br i1 %tobool20, label %if.then25, label %lor.lhs.false21, !dbg !19413

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !19414
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 23, !dbg !19415
  %22 = load i32, i32* %i, align 4, !dbg !19416
  %call22 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %fdata, i32 %22), !dbg !19417
  %conv23 = zext i8 %call22 to i32, !dbg !19417
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !19417
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !19418

if.then25:                                        ; preds = %lor.lhs.false21, %lor.lhs.false17, %land.lhs.true
  store i8 1, i8* %vdata, align 1, !dbg !19419
  br label %for.end, !dbg !19421

if.end:                                           ; preds = %lor.lhs.false21, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !19422

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !19423
  %inc = add nsw i32 %23, 1, !dbg !19423
  store i32 %inc, i32* %i, align 4, !dbg !19423
  br label %for.cond, !dbg !19424, !llvm.loop !19425

for.end:                                          ; preds = %if.then25, %for.cond
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19427
  %call26 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %24, %struct.VirtualModifierData* %virtualModifierData), !dbg !19428
  store %struct.ModifierData* %call26, %struct.ModifierData** %md, align 8, !dbg !19429
  br label %for.cond27, !dbg !19430

for.cond27:                                       ; preds = %for.inc40, %for.end
  %25 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19431
  %tobool28 = icmp ne %struct.ModifierData* %25, null, !dbg !19434
  br i1 %tobool28, label %for.body29, label %for.end41, !dbg !19434

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !19435, metadata !DIExpression()), !dbg !19528
  %26 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19529
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %26, i32 0, i32 2, !dbg !19530
  %27 = load i32, i32* %type, align 8, !dbg !19530
  %call30 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %27), !dbg !19531
  store %struct.ModifierTypeInfo* %call30, %struct.ModifierTypeInfo** %mti, align 8, !dbg !19528
  %28 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !19532
  %29 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19534
  %call31 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %28, %struct.ModifierData* %29, i32 1), !dbg !19535
  %tobool32 = icmp ne i8 %call31, 0, !dbg !19535
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !19536

if.then33:                                        ; preds = %for.body29
  br label %for.inc40, !dbg !19537

if.end34:                                         ; preds = %for.body29
  %30 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !19538
  %type35 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %30, i32 0, i32 3, !dbg !19540
  %31 = load i32, i32* %type35, align 4, !dbg !19540
  %cmp36 = icmp eq i32 %31, 2, !dbg !19541
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !19542

if.then38:                                        ; preds = %if.end34
  store i8 1, i8* %modifiers, align 1, !dbg !19543
  br label %for.end41, !dbg !19545

if.end39:                                         ; preds = %if.end34
  br label %for.inc40, !dbg !19546

for.inc40:                                        ; preds = %if.end39, %if.then33
  %32 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !19547
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %32, i32 0, i32 0, !dbg !19548
  %33 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !19548
  store %struct.ModifierData* %33, %struct.ModifierData** %md, align 8, !dbg !19549
  br label %for.cond27, !dbg !19550, !llvm.loop !19551

for.end41:                                        ; preds = %if.then38, %for.cond27
  %34 = load i8, i8* %vdata, align 1, !dbg !19553
  %conv42 = zext i8 %34 to i32, !dbg !19553
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !19553
  br i1 %tobool43, label %if.then47, label %lor.lhs.false44, !dbg !19555

lor.lhs.false44:                                  ; preds = %for.end41
  %35 = load i8, i8* %modifiers, align 1, !dbg !19556
  %conv45 = zext i8 %35 to i32, !dbg !19556
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !19556
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !19557

if.then47:                                        ; preds = %lor.lhs.false44, %for.end41
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19558
  %37 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19560
  %type48 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %37, i32 0, i32 4, !dbg !19561
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type48, align 8, !dbg !19561
  %39 = load i8, i8* %vdata, align 1, !dbg !19562
  %40 = load i8, i8* %modifiers, align 1, !dbg !19563
  %call49 = call i32 @dyntopo_warning_popup(%struct.bContext* %36, %struct.wmOperatorType* %38, i8 zeroext %39, i8 zeroext %40), !dbg !19564
  store i32 %call49, i32* %retval, align 4, !dbg !19565
  br label %return, !dbg !19565

if.end50:                                         ; preds = %lor.lhs.false44
  br label %if.end51, !dbg !19566

if.end51:                                         ; preds = %if.end50, %entry
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19567
  %42 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19568
  %call52 = call i32 @sculpt_dynamic_topology_toggle_exec(%struct.bContext* %41, %struct.wmOperator* %42), !dbg !19569
  store i32 %call52, i32* %retval, align 4, !dbg !19570
  br label %return, !dbg !19570

return:                                           ; preds = %if.end51, %if.then47
  %43 = load i32, i32* %retval, align 4, !dbg !19571
  ret i32 %43, !dbg !19571
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @dyntopo_warning_popup(%struct.bContext* %C, %struct.wmOperatorType* %ot, i8 zeroext %vdata, i8 zeroext %modifiers) #0 !dbg !19572 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %vdata.addr = alloca i8, align 1
  %modifiers.addr = alloca i8, align 1
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %msg_error = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %msg_error4 = alloca i8*, align 8
  %msg5 = alloca i8*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19575, metadata !DIExpression()), !dbg !19576
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !19577, metadata !DIExpression()), !dbg !19578
  store i8 %vdata, i8* %vdata.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vdata.addr, metadata !19579, metadata !DIExpression()), !dbg !19580
  store i8 %modifiers, i8* %modifiers.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %modifiers.addr, metadata !19581, metadata !DIExpression()), !dbg !19582
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !19583, metadata !DIExpression()), !dbg !19588
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19589
  %call = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i32 2), !dbg !19590
  store %struct.uiPopupMenu* %call, %struct.uiPopupMenu** %pup, align 8, !dbg !19588
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !19591, metadata !DIExpression()), !dbg !19594
  %1 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !19595
  %call1 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %1), !dbg !19596
  store %struct.uiLayout* %call1, %struct.uiLayout** %layout, align 8, !dbg !19594
  %2 = load i8, i8* %vdata.addr, align 1, !dbg !19597
  %tobool = icmp ne i8 %2, 0, !dbg !19597
  br i1 %tobool, label %if.then, label %if.end, !dbg !19599

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %msg_error, metadata !19600, metadata !DIExpression()), !dbg !19602
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0), i8** %msg_error, align 8, !dbg !19602
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !19603, metadata !DIExpression()), !dbg !19604
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.61, i64 0, i64 0), i8** %msg, align 8, !dbg !19604
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19605
  %4 = load i8*, i8** %msg_error, align 8, !dbg !19606
  call void @uiItemL(%struct.uiLayout* %3, i8* %4, i32 110), !dbg !19607
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19608
  %6 = load i8*, i8** %msg, align 8, !dbg !19609
  call void @uiItemL(%struct.uiLayout* %5, i8* %6, i32 0), !dbg !19610
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19611
  call void @uiItemS(%struct.uiLayout* %7), !dbg !19612
  br label %if.end, !dbg !19613

if.end:                                           ; preds = %if.then, %entry
  %8 = load i8, i8* %modifiers.addr, align 1, !dbg !19614
  %tobool2 = icmp ne i8 %8, 0, !dbg !19614
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !19616

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %msg_error4, metadata !19617, metadata !DIExpression()), !dbg !19619
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.62, i64 0, i64 0), i8** %msg_error4, align 8, !dbg !19619
  call void @llvm.dbg.declare(metadata i8** %msg5, metadata !19620, metadata !DIExpression()), !dbg !19621
  store i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.63, i64 0, i64 0), i8** %msg5, align 8, !dbg !19621
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19622
  %10 = load i8*, i8** %msg_error4, align 8, !dbg !19623
  call void @uiItemL(%struct.uiLayout* %9, i8* %10, i32 110), !dbg !19624
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19625
  %12 = load i8*, i8** %msg5, align 8, !dbg !19626
  call void @uiItemL(%struct.uiLayout* %11, i8* %12, i32 0), !dbg !19627
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19628
  call void @uiItemS(%struct.uiLayout* %13), !dbg !19629
  br label %if.end6, !dbg !19630

if.end6:                                          ; preds = %if.then3, %if.end
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !19631
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !19632
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %14, %struct.wmOperatorType* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i32 0, %struct.IDProperty* null, i32 6, i32 0), !dbg !19633
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19634
  %17 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !19635
  call void @uiPupMenuEnd(%struct.bContext* %16, %struct.uiPopupMenu* %17), !dbg !19636
  ret i32 32, !dbg !19637
}

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local void @uiItemL(%struct.uiLayout*, i8*, i32) #2

declare dso_local void @uiItemS(%struct.uiLayout*) #2

declare dso_local void @uiItemFullO_ptr(%struct.PointerRNA* sret, %struct.uiLayout*, %struct.wmOperatorType*, i8*, i32, %struct.IDProperty*, i32, i32) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_optimize_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !19638 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19639, metadata !DIExpression()), !dbg !19640
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !19641, metadata !DIExpression()), !dbg !19642
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19643, metadata !DIExpression()), !dbg !19644
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19645
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19646
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19644
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19647
  call void @sculpt_pbvh_clear(%struct.Object* %1), !dbg !19648
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19649
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19650
  %4 = bitcast %struct.Object* %3 to i8*, !dbg !19650
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 85393408, i8* %4), !dbg !19651
  ret i32 4, !dbg !19652
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_and_dynamic_topology_poll(%struct.bContext* %C) #0 !dbg !19653 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19654, metadata !DIExpression()), !dbg !19655
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19656, metadata !DIExpression()), !dbg !19657
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19658
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19659
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19657
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19660
  %call1 = call i32 @sculpt_mode_poll(%struct.bContext* %1), !dbg !19661
  %tobool = icmp ne i32 %call1, 0, !dbg !19661
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19662

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19663
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !19664
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !19664
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 10, !dbg !19665
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19665
  %tobool2 = icmp ne %struct.BMesh* %4, null, !dbg !19662
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !19666
  %land.ext = zext i1 %5 to i32, !dbg !19662
  ret i32 %land.ext, !dbg !19667
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_symmetrize_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !19668 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19669, metadata !DIExpression()), !dbg !19670
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !19671, metadata !DIExpression()), !dbg !19672
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19673, metadata !DIExpression()), !dbg !19674
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19675
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19676
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19674
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !19677, metadata !DIExpression()), !dbg !19680
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19681
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !19682
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call1, i32 0, i32 2, !dbg !19683
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !19683
  store %struct.Sculpt* %2, %struct.Sculpt** %sd, align 8, !dbg !19680
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !19684, metadata !DIExpression()), !dbg !19685
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19686
  %sculpt2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 2, !dbg !19687
  %4 = load %struct.SculptSession*, %struct.SculptSession** %sculpt2, align 8, !dbg !19687
  store %struct.SculptSession* %4, %struct.SculptSession** %ss, align 8, !dbg !19685
  call void @sculpt_undo_push_begin(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i64 0, i64 0)), !dbg !19688
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19689
  %call3 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %5, %struct.PBVHNode* null, i32 5), !dbg !19690
  %6 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19691
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %6, i32 0, i32 10, !dbg !19692
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19692
  %8 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19693
  %bm_log = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 14, !dbg !19694
  %9 = load %struct.BMLog*, %struct.BMLog** %bm_log, align 8, !dbg !19694
  call void @BM_log_before_all_removed(%struct.BMesh* %7, %struct.BMLog* %9), !dbg !19695
  %10 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19696
  %bm4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 10, !dbg !19697
  %11 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !19697
  %12 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !19698
  %symmetrize_direction = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %12, i32 0, i32 4, !dbg !19699
  %13 = load i32, i32* %symmetrize_direction, align 4, !dbg !19699
  %call5 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %11, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.72, i64 0, i64 0), i32 %13, double 0x3EE4F8B580000000), !dbg !19700
  %14 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19701
  %bm6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 10, !dbg !19702
  %15 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !19702
  call void @sculpt_dynamic_topology_triangulate(%struct.BMesh* %15), !dbg !19703
  %16 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19704
  %bm7 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %16, i32 0, i32 10, !dbg !19705
  %17 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !19705
  %18 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19706
  %bm_log8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %18, i32 0, i32 14, !dbg !19707
  %19 = load %struct.BMLog*, %struct.BMLog** %bm_log8, align 8, !dbg !19707
  call void @BM_log_all_added(%struct.BMesh* %17, %struct.BMLog* %19), !dbg !19708
  call void @sculpt_undo_push_end(), !dbg !19709
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19710
  call void @sculpt_pbvh_clear(%struct.Object* %20), !dbg !19711
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19712
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19713
  %23 = bitcast %struct.Object* %22 to i8*, !dbg !19713
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 85393408, i8* %23), !dbg !19714
  ret i32 4, !dbg !19715
}

declare dso_local void @BM_log_before_all_removed(%struct.BMesh*, %struct.BMLog*) #2

declare dso_local zeroext i8 @BMO_op_callf(%struct.BMesh*, i32, i8*, ...) #2

declare dso_local void @BM_log_all_added(%struct.BMesh*, %struct.BMLog*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_detail_flood_fill_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !19716 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ob = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %size = alloca float, align 4
  %bb_min = alloca [3 x float], align 4
  %bb_max = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %totnodes = alloca i32, align 4
  %nodes = alloca %struct.PBVHNode**, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19717, metadata !DIExpression()), !dbg !19718
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !19719, metadata !DIExpression()), !dbg !19720
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !19721, metadata !DIExpression()), !dbg !19722
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19723
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !19724
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call, i32 0, i32 2, !dbg !19725
  %1 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !19725
  store %struct.Sculpt* %1, %struct.Sculpt** %sd, align 8, !dbg !19722
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19726, metadata !DIExpression()), !dbg !19727
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19728
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !19729
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !19727
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !19730, metadata !DIExpression()), !dbg !19731
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19732
  %sculpt2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 2, !dbg !19733
  %4 = load %struct.SculptSession*, %struct.SculptSession** %sculpt2, align 8, !dbg !19733
  store %struct.SculptSession* %4, %struct.SculptSession** %ss, align 8, !dbg !19731
  call void @llvm.dbg.declare(metadata float* %size, metadata !19734, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_min, metadata !19736, metadata !DIExpression()), !dbg !19737
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_max, metadata !19738, metadata !DIExpression()), !dbg !19739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19740, metadata !DIExpression()), !dbg !19741
  call void @llvm.dbg.declare(metadata i32* %totnodes, metadata !19742, metadata !DIExpression()), !dbg !19743
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !19744, metadata !DIExpression()), !dbg !19745
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19746
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 15, !dbg !19747
  %6 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !19747
  call void @BKE_pbvh_search_gather(%struct.PBVH* %6, i8 (%struct.PBVHNode*, i8*)* null, i8* null, %struct.PBVHNode*** %nodes, i32* %totnodes), !dbg !19748
  %7 = load i32, i32* %totnodes, align 4, !dbg !19749
  %tobool = icmp ne i32 %7, 0, !dbg !19749
  br i1 %tobool, label %if.end, label %if.then, !dbg !19751

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !19752
  br label %return, !dbg !19752

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !19753
  br label %for.cond, !dbg !19755

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !19756
  %9 = load i32, i32* %totnodes, align 4, !dbg !19758
  %cmp = icmp slt i32 %8, %9, !dbg !19759
  br i1 %cmp, label %for.body, label %for.end, !dbg !19760

for.body:                                         ; preds = %for.cond
  %10 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !19761
  %11 = load i32, i32* %i, align 4, !dbg !19763
  %idxprom = sext i32 %11 to i64, !dbg !19761
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %10, i64 %idxprom, !dbg !19761
  %12 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !19761
  call void @BKE_pbvh_node_mark_topology_update(%struct.PBVHNode* %12), !dbg !19764
  br label %for.inc, !dbg !19765

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !19766
  %inc = add nsw i32 %13, 1, !dbg !19766
  store i32 %inc, i32* %i, align 4, !dbg !19766
  br label %for.cond, !dbg !19767, !llvm.loop !19768

for.end:                                          ; preds = %for.cond
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19770
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 2, !dbg !19771
  %15 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !19771
  %pbvh4 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 15, !dbg !19772
  %16 = load %struct.PBVH*, %struct.PBVH** %pbvh4, align 8, !dbg !19772
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !19773
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !19774
  call void @BKE_pbvh_bounding_box(%struct.PBVH* %16, float* %arraydecay, float* %arraydecay5), !dbg !19775
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !19776
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !19777
  call void @sub_v3_v3(float* %arraydecay6, float* %arraydecay7), !dbg !19778
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !19779
  call void @zero_v3(float* %arraydecay8), !dbg !19780
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 0, !dbg !19781
  %17 = load float, float* %arrayidx9, align 4, !dbg !19781
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 1, !dbg !19782
  %18 = load float, float* %arrayidx10, align 4, !dbg !19782
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %bb_max, i64 0, i64 2, !dbg !19783
  %19 = load float, float* %arrayidx11, align 4, !dbg !19783
  %call12 = call float @max_fff(float %17, float %18, float %19), !dbg !19784
  store float %call12, float* %size, align 4, !dbg !19785
  %20 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19786
  %pbvh13 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %20, i32 0, i32 15, !dbg !19787
  %21 = load %struct.PBVH*, %struct.PBVH** %pbvh13, align 8, !dbg !19787
  %22 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !19788
  %constant_detail = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %22, i32 0, i32 6, !dbg !19789
  %23 = load float, float* %constant_detail, align 4, !dbg !19789
  %div = fdiv float %23, 1.000000e+02, !dbg !19790
  call void @BKE_pbvh_bmesh_detail_size_set(%struct.PBVH* %21, float %div), !dbg !19791
  call void @sculpt_undo_push_begin(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)), !dbg !19792
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19793
  %call14 = call %struct.SculptUndoNode* @sculpt_undo_push_node(%struct.Object* %24, %struct.PBVHNode* null, i32 0), !dbg !19794
  br label %while.cond, !dbg !19795

while.cond:                                       ; preds = %for.end26, %for.end
  %25 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !19796
  %pbvh15 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %25, i32 0, i32 15, !dbg !19797
  %26 = load %struct.PBVH*, %struct.PBVH** %pbvh15, align 8, !dbg !19797
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %bb_min, i64 0, i64 0, !dbg !19798
  %27 = load float, float* %size, align 4, !dbg !19799
  %call17 = call zeroext i8 @BKE_pbvh_bmesh_update_topology(%struct.PBVH* %26, i32 3, float* %arraydecay16, float %27), !dbg !19800
  %tobool18 = icmp ne i8 %call17, 0, !dbg !19795
  br i1 %tobool18, label %while.body, label %while.end, !dbg !19795

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !19801
  br label %for.cond19, !dbg !19804

for.cond19:                                       ; preds = %for.inc24, %while.body
  %28 = load i32, i32* %i, align 4, !dbg !19805
  %29 = load i32, i32* %totnodes, align 4, !dbg !19807
  %cmp20 = icmp slt i32 %28, %29, !dbg !19808
  br i1 %cmp20, label %for.body21, label %for.end26, !dbg !19809

for.body21:                                       ; preds = %for.cond19
  %30 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !19810
  %31 = load i32, i32* %i, align 4, !dbg !19811
  %idxprom22 = sext i32 %31 to i64, !dbg !19810
  %arrayidx23 = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %30, i64 %idxprom22, !dbg !19810
  %32 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx23, align 8, !dbg !19810
  call void @BKE_pbvh_node_mark_topology_update(%struct.PBVHNode* %32), !dbg !19812
  br label %for.inc24, !dbg !19812

for.inc24:                                        ; preds = %for.body21
  %33 = load i32, i32* %i, align 4, !dbg !19813
  %inc25 = add nsw i32 %33, 1, !dbg !19813
  store i32 %inc25, i32* %i, align 4, !dbg !19813
  br label %for.cond19, !dbg !19814, !llvm.loop !19815

for.end26:                                        ; preds = %for.cond19
  br label %while.cond, !dbg !19795, !llvm.loop !19817

while.end:                                        ; preds = %while.cond
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !19819
  %35 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !19820
  %36 = bitcast %struct.PBVHNode** %35 to i8*, !dbg !19820
  call void %34(i8* %36), !dbg !19819
  call void @sculpt_undo_push_end(), !dbg !19821
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19822
  call void @sculpt_pbvh_clear(%struct.Object* %37), !dbg !19823
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19824
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19825
  %40 = bitcast %struct.Object* %39 to i8*, !dbg !19825
  call void @WM_event_add_notifier(%struct.bContext* %38, i32 85393408, i8* %40), !dbg !19826
  store i32 4, i32* %retval, align 4, !dbg !19827
  br label %return, !dbg !19827

return:                                           ; preds = %while.end, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !19828
  ret i32 %41, !dbg !19828
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_and_dynamic_topology_constant_detail_poll(%struct.bContext* %C) #0 !dbg !19829 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19830, metadata !DIExpression()), !dbg !19831
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19832, metadata !DIExpression()), !dbg !19833
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19834
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !19835
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !19833
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !19836, metadata !DIExpression()), !dbg !19837
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19838
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !19839
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call1, i32 0, i32 2, !dbg !19840
  %2 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !19840
  store %struct.Sculpt* %2, %struct.Sculpt** %sd, align 8, !dbg !19837
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19841
  %call2 = call i32 @sculpt_mode_poll(%struct.bContext* %3), !dbg !19842
  %tobool = icmp ne i32 %call2, 0, !dbg !19842
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !19843

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19844
  %sculpt3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !19845
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt3, align 8, !dbg !19845
  %bm = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 10, !dbg !19846
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !19846
  %tobool4 = icmp ne %struct.BMesh* %6, null, !dbg !19844
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !19847

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !19848
  %flags = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %7, i32 0, i32 1, !dbg !19849
  %8 = load i32, i32* %flags, align 8, !dbg !19849
  %and = and i32 %8, 8192, !dbg !19850
  %tobool5 = icmp ne i32 %and, 0, !dbg !19847
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool5, %land.rhs ], !dbg !19851
  %land.ext = zext i1 %9 to i32, !dbg !19847
  ret i32 %land.ext, !dbg !19852
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !19853 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !19856, metadata !DIExpression()), !dbg !19857
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !19858, metadata !DIExpression()), !dbg !19859
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !19860, metadata !DIExpression()), !dbg !19861
  %0 = load float, float* %a.addr, align 4, !dbg !19862
  %1 = load float, float* %b.addr, align 4, !dbg !19863
  %call = call float @max_ff(float %0, float %1), !dbg !19864
  %2 = load float, float* %c.addr, align 4, !dbg !19865
  %call1 = call float @max_ff(float %call, float %2), !dbg !19866
  ret float %call1, !dbg !19867
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_sample_detail_size_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_e) #0 !dbg !19868 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_e.addr = alloca %struct.wmEvent*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19869, metadata !DIExpression()), !dbg !19870
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19871, metadata !DIExpression()), !dbg !19872
  store %struct.wmEvent* %UNUSED_e, %struct.wmEvent** %UNUSED_e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_e.addr, metadata !19873, metadata !DIExpression()), !dbg !19874
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !19875, metadata !DIExpression()), !dbg !19924
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19925
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !19926
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !19924
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !19927
  call void @ED_area_headerprint(%struct.ScrArea* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.82, i64 0, i64 0)), !dbg !19928
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19929
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !19930
  call void @WM_cursor_modal_set(%struct.wmWindow* %call1, i32 17), !dbg !19931
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19932
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19933
  %call2 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !19934
  ret i32 1, !dbg !19935
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_sample_detail_size_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !19936 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ss_co = alloca [2 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19937, metadata !DIExpression()), !dbg !19938
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19939, metadata !DIExpression()), !dbg !19940
  call void @llvm.dbg.declare(metadata [2 x i32]* %ss_co, metadata !19941, metadata !DIExpression()), !dbg !19942
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19943
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !19944
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !19944
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ss_co, i64 0, i64 0, !dbg !19945
  call void @RNA_int_get_array(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i32* %arraydecay), !dbg !19946
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19947
  %arraydecay1 = getelementptr inbounds [2 x i32], [2 x i32]* %ss_co, i64 0, i64 0, !dbg !19948
  call void @sample_detail(%struct.bContext* %2, i32* %arraydecay1), !dbg !19949
  ret i32 4, !dbg !19950
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sculpt_sample_detail_size_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %e) #0 !dbg !19951 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %e.addr = alloca %struct.wmEvent*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ss_co = alloca [2 x i32], align 4
  %sa8 = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !19952, metadata !DIExpression()), !dbg !19953
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !19954, metadata !DIExpression()), !dbg !19955
  store %struct.wmEvent* %e, %struct.wmEvent** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %e.addr, metadata !19956, metadata !DIExpression()), !dbg !19957
  %0 = load %struct.wmEvent*, %struct.wmEvent** %e.addr, align 8, !dbg !19958
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !19959
  %1 = load i16, i16* %type, align 8, !dbg !19959
  %conv = sext i16 %1 to i32, !dbg !19958
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb7
  ], !dbg !19960

sw.bb:                                            ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %e.addr, align 8, !dbg !19961
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 3, !dbg !19964
  %3 = load i16, i16* %val, align 2, !dbg !19964
  %conv1 = sext i16 %3 to i32, !dbg !19961
  %cmp = icmp eq i32 %conv1, 1, !dbg !19965
  br i1 %cmp, label %if.then, label %if.end, !dbg !19966

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !19967, metadata !DIExpression()), !dbg !19969
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19970
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %4), !dbg !19971
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !19969
  call void @llvm.dbg.declare(metadata [2 x i32]* %ss_co, metadata !19972, metadata !DIExpression()), !dbg !19973
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %ss_co, i64 0, i64 0, !dbg !19974
  %5 = load %struct.wmEvent*, %struct.wmEvent** %e.addr, align 8, !dbg !19975
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 6, !dbg !19976
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !19975
  %6 = load i32, i32* %arrayidx, align 4, !dbg !19975
  store i32 %6, i32* %arrayinit.begin, align 4, !dbg !19974
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !19974
  %7 = load %struct.wmEvent*, %struct.wmEvent** %e.addr, align 8, !dbg !19977
  %mval3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 6, !dbg !19978
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %mval3, i64 0, i64 1, !dbg !19977
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !19977
  store i32 %8, i32* %arrayinit.element, align 4, !dbg !19974
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19979
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ss_co, i64 0, i64 0, !dbg !19980
  call void @sample_detail(%struct.bContext* %9, i32* %arraydecay), !dbg !19981
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !19982
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !19983
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !19983
  %arraydecay5 = getelementptr inbounds [2 x i32], [2 x i32]* %ss_co, i64 0, i64 0, !dbg !19984
  call void @RNA_int_set_array(%struct.PointerRNA* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i32* %arraydecay5), !dbg !19985
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19986
  %call6 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %12), !dbg !19987
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call6), !dbg !19988
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !19989
  call void @ED_area_headerprint(%struct.ScrArea* %13, i8* null), !dbg !19990
  call void @WM_main_add_notifier(i32 68091904, i8* null), !dbg !19991
  store i32 4, i32* %retval, align 4, !dbg !19992
  br label %return, !dbg !19992

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !19993

sw.bb7:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa8, metadata !19994, metadata !DIExpression()), !dbg !19996
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19997
  %call9 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %14), !dbg !19998
  store %struct.ScrArea* %call9, %struct.ScrArea** %sa8, align 8, !dbg !19996
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !19999
  %call10 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %15), !dbg !20000
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call10), !dbg !20001
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa8, align 8, !dbg !20002
  call void @ED_area_headerprint(%struct.ScrArea* %16, i8* null), !dbg !20003
  store i32 2, i32* %retval, align 4, !dbg !20004
  br label %return, !dbg !20004

sw.epilog:                                        ; preds = %entry, %if.end
  store i32 1, i32* %retval, align 4, !dbg !20005
  br label %return, !dbg !20005

return:                                           ; preds = %sw.epilog, %sw.bb7, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !20006
  ret i32 %17, !dbg !20006
}

declare dso_local %struct.PropertyRNA* @RNA_def_int_array(i8*, i8*, i32, i32*, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local void @ED_area_headerprint(%struct.ScrArea*, i8*) #2

declare dso_local void @WM_cursor_modal_set(%struct.wmWindow*, i32) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

declare dso_local void @RNA_int_get_array(%struct.PointerRNA*, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sample_detail(%struct.bContext* %C, i32* %ss_co) #0 !dbg !20007 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ss_co.addr = alloca i32*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %ob = alloca %struct.Object*, align 8
  %sd = alloca %struct.Sculpt*, align 8
  %ray_start = alloca [3 x float], align 4
  %ray_end = alloca [3 x float], align 4
  %ray_normal = alloca [3 x float], align 4
  %dist = alloca float, align 4
  %srd = alloca %struct.SculptDetailRaycastData, align 8
  %mouse = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !20010, metadata !DIExpression()), !dbg !20011
  store i32* %ss_co, i32** %ss_co.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ss_co.addr, metadata !20012, metadata !DIExpression()), !dbg !20013
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !20014, metadata !DIExpression()), !dbg !20015
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !20016, metadata !DIExpression()), !dbg !20017
  call void @llvm.dbg.declare(metadata %struct.Sculpt** %sd, metadata !20018, metadata !DIExpression()), !dbg !20019
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !20020, metadata !DIExpression()), !dbg !20021
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_end, metadata !20022, metadata !DIExpression()), !dbg !20023
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_normal, metadata !20024, metadata !DIExpression()), !dbg !20025
  call void @llvm.dbg.declare(metadata float* %dist, metadata !20026, metadata !DIExpression()), !dbg !20027
  call void @llvm.dbg.declare(metadata %struct.SculptDetailRaycastData* %srd, metadata !20028, metadata !DIExpression()), !dbg !20037
  call void @llvm.dbg.declare(metadata [2 x float]* %mouse, metadata !20038, metadata !DIExpression()), !dbg !20039
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !20040
  %0 = load i32*, i32** %ss_co.addr, align 8, !dbg !20041
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !20041
  %1 = load i32, i32* %arrayidx, align 4, !dbg !20041
  %conv = sitofp i32 %1 to float, !dbg !20041
  store float %conv, float* %arrayinit.begin, align 4, !dbg !20040
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !20040
  %2 = load i32*, i32** %ss_co.addr, align 8, !dbg !20042
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !20042
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !20042
  %conv2 = sitofp i32 %3 to float, !dbg !20042
  store float %conv2, float* %arrayinit.element, align 4, !dbg !20040
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !20043
  call void @view3d_set_viewcontext(%struct.bContext* %4, %struct.ViewContext* %vc), !dbg !20044
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !20045
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %5), !dbg !20046
  %sculpt = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call, i32 0, i32 2, !dbg !20047
  %6 = load %struct.Sculpt*, %struct.Sculpt** %sculpt, align 8, !dbg !20047
  store %struct.Sculpt* %6, %struct.Sculpt** %sd, align 8, !dbg !20048
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 1, !dbg !20049
  %7 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !20049
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !20050
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !20051
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !20052
  call void @sculpt_stroke_modifiers_check(%struct.bContext* %8, %struct.Object* %9), !dbg !20053
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mouse, i64 0, i64 0, !dbg !20054
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !20055
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %ray_end, i64 0, i64 0, !dbg !20056
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !20057
  %call6 = call float @sculpt_raycast_init(%struct.ViewContext* %vc, float* %arraydecay, float* %arraydecay3, float* %arraydecay4, float* %arraydecay5, i8 zeroext 0), !dbg !20058
  store float %call6, float* %dist, align 4, !dbg !20059
  %hit = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 2, !dbg !20060
  store i8 0, i8* %hit, align 8, !dbg !20061
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !20062
  %ray_start8 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 0, !dbg !20063
  store float* %arraydecay7, float** %ray_start8, align 8, !dbg !20064
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !20065
  %ray_normal10 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 1, !dbg !20066
  store float* %arraydecay9, float** %ray_normal10, align 8, !dbg !20067
  %10 = load float, float* %dist, align 4, !dbg !20068
  %dist11 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 3, !dbg !20069
  store float %10, float* %dist11, align 4, !dbg !20070
  %11 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !20071
  %constant_detail = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %11, i32 0, i32 6, !dbg !20072
  %12 = load float, float* %constant_detail, align 4, !dbg !20072
  %detail = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 4, !dbg !20073
  store float %12, float* %detail, align 8, !dbg !20074
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !20075
  %sculpt12 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 2, !dbg !20076
  %14 = load %struct.SculptSession*, %struct.SculptSession** %sculpt12, align 8, !dbg !20076
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %14, i32 0, i32 15, !dbg !20077
  %15 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !20077
  %16 = bitcast %struct.SculptDetailRaycastData* %srd to i8*, !dbg !20078
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !20079
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %ray_normal, i64 0, i64 0, !dbg !20080
  call void @BKE_pbvh_raycast(%struct.PBVH* %15, void (%struct.PBVHNode*, i8*, float*)* @sculpt_raycast_detail_cb, i8* %16, float* %arraydecay13, float* %arraydecay14, i8 zeroext 0), !dbg !20081
  %hit15 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 2, !dbg !20082
  %17 = load i8, i8* %hit15, align 8, !dbg !20082
  %tobool = icmp ne i8 %17, 0, !dbg !20084
  br i1 %tobool, label %if.then, label %if.end, !dbg !20085

if.then:                                          ; preds = %entry
  %detail16 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %srd, i32 0, i32 4, !dbg !20086
  %18 = load float, float* %detail16, align 8, !dbg !20086
  %mul = fmul float %18, 1.000000e+02, !dbg !20088
  %19 = load %struct.Sculpt*, %struct.Sculpt** %sd, align 8, !dbg !20089
  %constant_detail17 = getelementptr inbounds %struct.Sculpt, %struct.Sculpt* %19, i32 0, i32 6, !dbg !20090
  store float %mul, float* %constant_detail17, align 4, !dbg !20091
  br label %if.end, !dbg !20092

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !20093
}

; Function Attrs: noinline nounwind uwtable
define internal void @sculpt_raycast_detail_cb(%struct.PBVHNode* %node, i8* %data_v, float* %tmin) #0 !dbg !20094 {
entry:
  %node.addr = alloca %struct.PBVHNode*, align 8
  %data_v.addr = alloca i8*, align 8
  %tmin.addr = alloca float*, align 8
  %srd = alloca %struct.SculptDetailRaycastData*, align 8
  store %struct.PBVHNode* %node, %struct.PBVHNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PBVHNode** %node.addr, metadata !20095, metadata !DIExpression()), !dbg !20096
  store i8* %data_v, i8** %data_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_v.addr, metadata !20097, metadata !DIExpression()), !dbg !20098
  store float* %tmin, float** %tmin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmin.addr, metadata !20099, metadata !DIExpression()), !dbg !20100
  %0 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !20101
  %call = call float @BKE_pbvh_node_get_tmin(%struct.PBVHNode* %0), !dbg !20103
  %1 = load float*, float** %tmin.addr, align 8, !dbg !20104
  %2 = load float, float* %1, align 4, !dbg !20105
  %cmp = fcmp olt float %call, %2, !dbg !20106
  br i1 %cmp, label %if.then, label %if.end4, !dbg !20107

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SculptDetailRaycastData** %srd, metadata !20108, metadata !DIExpression()), !dbg !20111
  %3 = load i8*, i8** %data_v.addr, align 8, !dbg !20112
  %4 = bitcast i8* %3 to %struct.SculptDetailRaycastData*, !dbg !20112
  store %struct.SculptDetailRaycastData* %4, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20111
  %5 = load %struct.PBVHNode*, %struct.PBVHNode** %node.addr, align 8, !dbg !20113
  %6 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20115
  %ray_start = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %6, i32 0, i32 0, !dbg !20116
  %7 = load float*, float** %ray_start, align 8, !dbg !20116
  %8 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20117
  %ray_normal = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %8, i32 0, i32 1, !dbg !20118
  %9 = load float*, float** %ray_normal, align 8, !dbg !20118
  %10 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20119
  %detail = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %10, i32 0, i32 4, !dbg !20120
  %11 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20121
  %dist = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %11, i32 0, i32 3, !dbg !20122
  %call1 = call zeroext i8 @BKE_pbvh_bmesh_node_raycast_detail(%struct.PBVHNode* %5, float* %7, float* %9, float* %detail, float* %dist), !dbg !20123
  %tobool = icmp ne i8 %call1, 0, !dbg !20123
  br i1 %tobool, label %if.then2, label %if.end, !dbg !20124

if.then2:                                         ; preds = %if.then
  %12 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20125
  %hit = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %12, i32 0, i32 2, !dbg !20127
  store i8 1, i8* %hit, align 8, !dbg !20128
  %13 = load %struct.SculptDetailRaycastData*, %struct.SculptDetailRaycastData** %srd, align 8, !dbg !20129
  %dist3 = getelementptr inbounds %struct.SculptDetailRaycastData, %struct.SculptDetailRaycastData* %13, i32 0, i32 3, !dbg !20130
  %14 = load float, float* %dist3, align 4, !dbg !20130
  %15 = load float*, float** %tmin.addr, align 8, !dbg !20131
  store float %14, float* %15, align 4, !dbg !20132
  br label %if.end, !dbg !20133

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !20134

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !20135
}

declare dso_local zeroext i8 @BKE_pbvh_bmesh_node_raycast_detail(%struct.PBVHNode*, float*, float*, float*, float*) #2

declare dso_local void @RNA_int_set_array(%struct.PointerRNA*, i8*, i32*) #2

declare dso_local void @WM_cursor_modal_restore(%struct.wmWindow*) #2

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!3745}
!llvm.module.flags = !{!5192, !5193, !5194}
!llvm.ident = !{!5195}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "flip", scope: !2, file: !3, line: 2036, type: !5190, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "do_rotate_brush", scope: !3, file: !3, line: 2030, type: !4, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!3 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/sculpt.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !3739, !3741, !57}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !8, line: 916, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !8, line: 891, size: 704, elements: !10)
!10 = !{!11, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !9, file: !8, line: 892, baseType: !12, size: 320)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !8, line: 830, baseType: !13)
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !8, line: 813, size: 320, elements: !14)
!14 = !{!15, !3716, !3725, !3726, !3728, !3729, !3730}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !13, file: !8, line: 814, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !18, line: 54, size: 16448, elements: !19)
!18 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19 = !{!20, !92, !189, !239, !3627, !3628, !3629, !3630, !3633, !3634, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !17, file: !18, line: 55, baseType: !21, size: 960)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !22, line: 130, baseType: !23)
!22 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!23 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !22, line: 117, size: 960, elements: !24)
!24 = !{!25, !27, !28, !30, !50, !54, !56, !58, !59, !60}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !23, file: !22, line: 118, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !23, file: !22, line: 118, baseType: !26, size: 64, offset: 64)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !23, file: !22, line: 119, baseType: !29, size: 64, offset: 128)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !23, file: !22, line: 120, baseType: !31, size: 64, offset: 192)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !22, line: 136, size: 17600, elements: !33)
!33 = !{!34, !35, !37, !40, !45, !46, !47}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !32, file: !22, line: 137, baseType: !21, size: 960)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !32, file: !22, line: 138, baseType: !36, size: 64, offset: 960)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !32, file: !22, line: 139, baseType: !38, size: 64, offset: 1024)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !22, line: 43, flags: DIFlagFwdDecl)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !32, file: !22, line: 140, baseType: !41, size: 8192, offset: 1088)
!41 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8192, elements: !43)
!42 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!43 = !{!44}
!44 = !DISubrange(count: 1024)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !32, file: !22, line: 141, baseType: !41, size: 8192, offset: 9280)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !32, file: !22, line: 148, baseType: !31, size: 64, offset: 17472)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !32, file: !22, line: 150, baseType: !48, size: 64, offset: 17536)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!49 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !22, line: 45, flags: DIFlagFwdDecl)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !23, file: !22, line: 121, baseType: !51, size: 528, offset: 256)
!51 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 528, elements: !52)
!52 = !{!53}
!53 = !DISubrange(count: 66)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !23, file: !22, line: 126, baseType: !55, size: 16, offset: 784)
!55 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !23, file: !22, line: 127, baseType: !57, size: 32, offset: 800)
!57 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !23, file: !22, line: 128, baseType: !57, size: 32, offset: 832)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !23, file: !22, line: 128, baseType: !57, size: 32, offset: 864)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !23, file: !22, line: 129, baseType: !61, size: 64, offset: 896)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !22, line: 75, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !22, line: 62, size: 1024, elements: !64)
!64 = !{!65, !67, !68, !69, !70, !71, !75, !76, !90, !91}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !63, file: !22, line: 63, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !63, file: !22, line: 63, baseType: !66, size: 64, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !63, file: !22, line: 64, baseType: !42, size: 8, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !63, file: !22, line: 64, baseType: !42, size: 8, offset: 136)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !63, file: !22, line: 65, baseType: !55, size: 16, offset: 144)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !63, file: !22, line: 66, baseType: !72, size: 512, offset: 160)
!72 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 512, elements: !73)
!73 = !{!74}
!74 = !DISubrange(count: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !63, file: !22, line: 67, baseType: !57, size: 32, offset: 672)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !63, file: !22, line: 69, baseType: !77, size: 256, offset: 704)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !22, line: 60, baseType: !78)
!78 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !22, line: 48, size: 256, elements: !79)
!79 = !{!80, !81, !88, !89}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !78, file: !22, line: 49, baseType: !26, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !78, file: !22, line: 58, baseType: !82, size: 128, offset: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !83, line: 71, baseType: !84)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !83, line: 69, size: 128, elements: !85)
!85 = !{!86, !87}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !84, file: !83, line: 70, baseType: !26, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !84, file: !83, line: 70, baseType: !26, size: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !78, file: !22, line: 59, baseType: !57, size: 32, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !78, file: !22, line: 59, baseType: !57, size: 32, offset: 224)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !63, file: !22, line: 70, baseType: !57, size: 32, offset: 960)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !63, file: !22, line: 74, baseType: !57, size: 32, offset: 992)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !17, file: !18, line: 57, baseType: !93, size: 192, offset: 960)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !18, line: 48, size: 192, elements: !94)
!94 = !{!95, !185, !187, !188}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !93, file: !18, line: 49, baseType: !96, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !98, line: 77, size: 15424, elements: !99)
!98 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!99 = !{!100, !101, !102, !105, !108, !111, !114, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !133, !135, !136, !152, !154, !155, !156, !157, !158, !159, !160, !161, !162, !166, !167, !168, !174, !175, !179}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !97, file: !98, line: 78, baseType: !21, size: 960)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !97, file: !98, line: 80, baseType: !41, size: 8192, offset: 960)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !97, file: !98, line: 82, baseType: !103, size: 64, offset: 9152)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !98, line: 43, flags: DIFlagFwdDecl)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !97, file: !98, line: 83, baseType: !106, size: 64, offset: 9216)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !22, line: 46, flags: DIFlagFwdDecl)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !97, file: !98, line: 86, baseType: !109, size: 64, offset: 9280)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !98, line: 41, flags: DIFlagFwdDecl)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !97, file: !98, line: 87, baseType: !112, size: 64, offset: 9344)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !98, line: 44, flags: DIFlagFwdDecl)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !97, file: !98, line: 89, baseType: !115, size: 512, offset: 9408)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 512, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 8)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !97, file: !98, line: 90, baseType: !55, size: 16, offset: 9920)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !97, file: !98, line: 90, baseType: !55, size: 16, offset: 9936)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !97, file: !98, line: 92, baseType: !55, size: 16, offset: 9952)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !97, file: !98, line: 92, baseType: !55, size: 16, offset: 9968)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !97, file: !98, line: 93, baseType: !55, size: 16, offset: 9984)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !97, file: !98, line: 93, baseType: !55, size: 16, offset: 10000)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !97, file: !98, line: 94, baseType: !57, size: 32, offset: 10016)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !97, file: !98, line: 97, baseType: !55, size: 16, offset: 10048)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !97, file: !98, line: 97, baseType: !55, size: 16, offset: 10064)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !97, file: !98, line: 98, baseType: !55, size: 16, offset: 10080)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !97, file: !98, line: 98, baseType: !55, size: 16, offset: 10096)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !97, file: !98, line: 99, baseType: !55, size: 16, offset: 10112)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !97, file: !98, line: 99, baseType: !55, size: 16, offset: 10128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !97, file: !98, line: 100, baseType: !132, size: 32, offset: 10144)
!132 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !97, file: !98, line: 101, baseType: !134, size: 64, offset: 10176)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !97, file: !98, line: 103, baseType: !48, size: 64, offset: 10240)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !97, file: !98, line: 104, baseType: !137, size: 64, offset: 10304)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !22, line: 159, size: 448, elements: !139)
!139 = !{!140, !144, !145, !147, !148, !150}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !138, file: !22, line: 161, baseType: !141, size: 64)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !142)
!142 = !{!143}
!143 = !DISubrange(count: 2)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !138, file: !22, line: 162, baseType: !141, size: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !138, file: !22, line: 163, baseType: !146, size: 32, offset: 128)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 32, elements: !142)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !138, file: !22, line: 164, baseType: !146, size: 32, offset: 160)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !138, file: !22, line: 165, baseType: !149, size: 128, offset: 192)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 128, elements: !142)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !138, file: !22, line: 166, baseType: !151, size: 128, offset: 320)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 128, elements: !142)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !97, file: !98, line: 107, baseType: !153, size: 32, offset: 10368)
!153 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !97, file: !98, line: 108, baseType: !57, size: 32, offset: 10400)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !97, file: !98, line: 109, baseType: !55, size: 16, offset: 10432)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !97, file: !98, line: 110, baseType: !55, size: 16, offset: 10448)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !97, file: !98, line: 113, baseType: !57, size: 32, offset: 10464)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !97, file: !98, line: 113, baseType: !57, size: 32, offset: 10496)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !97, file: !98, line: 114, baseType: !42, size: 8, offset: 10528)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !97, file: !98, line: 114, baseType: !42, size: 8, offset: 10536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !97, file: !98, line: 115, baseType: !55, size: 16, offset: 10544)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !97, file: !98, line: 116, baseType: !163, size: 128, offset: 10560)
!163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 128, elements: !164)
!164 = !{!165}
!165 = !DISubrange(count: 4)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !97, file: !98, line: 119, baseType: !153, size: 32, offset: 10688)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !97, file: !98, line: 119, baseType: !153, size: 32, offset: 10720)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !97, file: !98, line: 122, baseType: !169, size: 512, offset: 10752)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !170, line: 182, baseType: !171)
!170 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !170, line: 180, size: 512, elements: !172)
!172 = !{!173}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !171, file: !170, line: 181, baseType: !72, size: 512)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !97, file: !98, line: 123, baseType: !42, size: 8, offset: 11264)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !97, file: !98, line: 125, baseType: !176, size: 56, offset: 11272)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 56, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 7)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !97, file: !98, line: 126, baseType: !180, size: 4096, offset: 11328)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 4096, elements: !116)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !98, line: 69, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !98, line: 67, size: 512, elements: !183)
!183 = !{!184}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !182, file: !98, line: 68, baseType: !72, size: 512)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !93, file: !18, line: 50, baseType: !186, size: 64, offset: 64)
!186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 64, elements: !142)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !93, file: !18, line: 51, baseType: !153, size: 32, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !93, file: !18, line: 51, baseType: !153, size: 32, offset: 160)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !17, file: !18, line: 58, baseType: !190, size: 64, offset: 1152)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !170, line: 72, size: 3072, elements: !192)
!192 = !{!193, !194, !195, !196, !197, !206, !207, !232, !236, !237, !238}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !191, file: !170, line: 73, baseType: !57, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !191, file: !170, line: 73, baseType: !57, size: 32, offset: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !191, file: !170, line: 74, baseType: !57, size: 32, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !191, file: !170, line: 75, baseType: !57, size: 32, offset: 96)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !191, file: !170, line: 77, baseType: !198, size: 128, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !199, line: 95, baseType: !200)
!199 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !199, line: 92, size: 128, elements: !201)
!201 = !{!202, !203, !204, !205}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !200, file: !199, line: 93, baseType: !153, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !200, file: !199, line: 93, baseType: !153, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !200, file: !199, line: 94, baseType: !153, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !200, file: !199, line: 94, baseType: !153, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !191, file: !170, line: 77, baseType: !198, size: 128, offset: 256)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !191, file: !170, line: 79, baseType: !208, size: 2304, offset: 384)
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 2304, elements: !164)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !170, line: 67, baseType: !210)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !170, line: 55, size: 576, elements: !211)
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !228, !229, !230, !231}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !210, file: !170, line: 56, baseType: !55, size: 16)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !210, file: !170, line: 56, baseType: !55, size: 16, offset: 16)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !210, file: !170, line: 58, baseType: !153, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !210, file: !170, line: 59, baseType: !153, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !210, file: !170, line: 59, baseType: !153, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !210, file: !170, line: 60, baseType: !186, size: 64, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !210, file: !170, line: 60, baseType: !186, size: 64, offset: 192)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !210, file: !170, line: 61, baseType: !220, size: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !170, line: 47, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !170, line: 44, size: 96, elements: !223)
!223 = !{!224, !225, !226, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !222, file: !170, line: 45, baseType: !153, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !222, file: !170, line: 45, baseType: !153, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !222, file: !170, line: 46, baseType: !55, size: 16, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !222, file: !170, line: 46, baseType: !55, size: 16, offset: 80)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !210, file: !170, line: 62, baseType: !220, size: 64, offset: 320)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !210, file: !170, line: 64, baseType: !220, size: 64, offset: 384)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !210, file: !170, line: 65, baseType: !186, size: 64, offset: 448)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !210, file: !170, line: 66, baseType: !186, size: 64, offset: 512)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !191, file: !170, line: 80, baseType: !233, size: 96, offset: 2688)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 96, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 3)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !191, file: !170, line: 80, baseType: !233, size: 96, offset: 2784)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !191, file: !170, line: 81, baseType: !233, size: 96, offset: 2880)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !191, file: !170, line: 83, baseType: !233, size: 96, offset: 2976)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !17, file: !18, line: 59, baseType: !240, size: 2496, offset: 1216)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !241, line: 57, size: 2496, elements: !242)
!241 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!242 = !{!243, !244, !245, !246, !247, !3425, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !240, file: !241, line: 59, baseType: !55, size: 16)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !240, file: !241, line: 59, baseType: !55, size: 16, offset: 16)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !240, file: !241, line: 59, baseType: !55, size: 16, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !240, file: !241, line: 59, baseType: !55, size: 16, offset: 48)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !240, file: !241, line: 60, baseType: !248, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !250, line: 115, size: 11392, elements: !251)
!250 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!251 = !{!252, !253, !257, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2817, !2818, !2858, !2859, !2860, !2861, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2970, !2973, !2974, !2975, !2976, !2977, !2978, !2981, !2984, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3406, !3409, !3410, !3413, !3414}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !249, file: !250, line: 116, baseType: !21, size: 960)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !249, file: !250, line: 117, baseType: !254, size: 64, offset: 960)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !256, line: 39, flags: DIFlagFwdDecl)
!256 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!257 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !249, file: !250, line: 119, baseType: !258, size: 64, offset: 1024)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !260, line: 155, size: 1856, elements: !261)
!260 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!261 = !{!262, !2028, !2036, !2045, !2051, !2052, !2053, !2055, !2075, !2076, !2085, !2312, !2313, !2314, !2316, !2320, !2323, !2324, !2325, !2326, !2327, !2331, !2332, !2333, !2334, !2335, !2339, !2340, !2343, !2786, !2787, !2788, !2789}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !259, file: !260, line: 157, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !265, line: 717, size: 960, elements: !266)
!265 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!266 = !{!267, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !264, file: !265, line: 718, baseType: !268, size: 896)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !265, line: 110, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !265, line: 99, size: 896, elements: !270)
!270 = !{!271, !273, !274, !275, !276, !277, !278, !279, !2020}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !269, file: !265, line: 100, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !269, file: !265, line: 100, baseType: !272, size: 64, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !265, line: 102, baseType: !57, size: 32, offset: 128)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !269, file: !265, line: 102, baseType: !57, size: 32, offset: 160)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !269, file: !265, line: 103, baseType: !57, size: 32, offset: 192)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !269, file: !265, line: 103, baseType: !57, size: 32, offset: 224)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !265, line: 104, baseType: !72, size: 512, offset: 256)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !269, file: !265, line: 107, baseType: !280, size: 64, offset: 768)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !8, line: 1216, size: 39680, elements: !282)
!282 = !{!283, !284, !285, !286, !1075, !1076, !1077, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1103, !1104, !1451, !1646, !1649, !1890, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1912, !1913, !1914, !1915, !1916, !1924, !1991, !1998, !1999, !2006, !2007, !2013, !2014, !2015, !2016, !2017}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !281, file: !8, line: 1217, baseType: !21, size: 960)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !281, file: !8, line: 1218, baseType: !254, size: 64, offset: 960)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !281, file: !8, line: 1220, baseType: !248, size: 64, offset: 1024)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !281, file: !8, line: 1221, baseType: !287, size: 64, offset: 1088)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !289, line: 52, size: 4224, elements: !290)
!289 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !360, !361, !364, !369, !370, !371, !372, !373}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !288, file: !289, line: 53, baseType: !21, size: 960)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !288, file: !289, line: 54, baseType: !254, size: 64, offset: 960)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !288, file: !289, line: 56, baseType: !55, size: 16, offset: 1024)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !288, file: !289, line: 56, baseType: !55, size: 16, offset: 1040)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !288, file: !289, line: 57, baseType: !55, size: 16, offset: 1056)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !288, file: !289, line: 57, baseType: !55, size: 16, offset: 1072)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !288, file: !289, line: 59, baseType: !153, size: 32, offset: 1088)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !288, file: !289, line: 59, baseType: !153, size: 32, offset: 1120)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !288, file: !289, line: 59, baseType: !153, size: 32, offset: 1152)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !288, file: !289, line: 60, baseType: !153, size: 32, offset: 1184)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !288, file: !289, line: 60, baseType: !153, size: 32, offset: 1216)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !288, file: !289, line: 60, baseType: !153, size: 32, offset: 1248)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !288, file: !289, line: 61, baseType: !153, size: 32, offset: 1280)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !288, file: !289, line: 61, baseType: !153, size: 32, offset: 1312)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !288, file: !289, line: 61, baseType: !153, size: 32, offset: 1344)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !288, file: !289, line: 68, baseType: !153, size: 32, offset: 1376)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !288, file: !289, line: 68, baseType: !153, size: 32, offset: 1408)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !288, file: !289, line: 68, baseType: !153, size: 32, offset: 1440)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !288, file: !289, line: 69, baseType: !153, size: 32, offset: 1472)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !288, file: !289, line: 69, baseType: !153, size: 32, offset: 1504)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !288, file: !289, line: 74, baseType: !153, size: 32, offset: 1536)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !288, file: !289, line: 79, baseType: !153, size: 32, offset: 1568)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !288, file: !289, line: 81, baseType: !55, size: 16, offset: 1600)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !288, file: !289, line: 91, baseType: !55, size: 16, offset: 1616)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !288, file: !289, line: 92, baseType: !55, size: 16, offset: 1632)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !288, file: !289, line: 93, baseType: !55, size: 16, offset: 1648)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !288, file: !289, line: 94, baseType: !55, size: 16, offset: 1664)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !288, file: !289, line: 94, baseType: !55, size: 16, offset: 1680)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !288, file: !289, line: 94, baseType: !55, size: 16, offset: 1696)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !288, file: !289, line: 94, baseType: !55, size: 16, offset: 1712)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !288, file: !289, line: 96, baseType: !153, size: 32, offset: 1728)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !288, file: !289, line: 96, baseType: !153, size: 32, offset: 1760)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !288, file: !289, line: 96, baseType: !153, size: 32, offset: 1792)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !288, file: !289, line: 96, baseType: !153, size: 32, offset: 1824)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !288, file: !289, line: 98, baseType: !153, size: 32, offset: 1856)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !288, file: !289, line: 98, baseType: !153, size: 32, offset: 1888)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !288, file: !289, line: 98, baseType: !153, size: 32, offset: 1920)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !288, file: !289, line: 98, baseType: !153, size: 32, offset: 1952)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !288, file: !289, line: 99, baseType: !153, size: 32, offset: 1984)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !288, file: !289, line: 99, baseType: !153, size: 32, offset: 2016)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !288, file: !289, line: 100, baseType: !153, size: 32, offset: 2048)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !288, file: !289, line: 100, baseType: !153, size: 32, offset: 2080)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !288, file: !289, line: 103, baseType: !55, size: 16, offset: 2112)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !288, file: !289, line: 103, baseType: !55, size: 16, offset: 2128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !288, file: !289, line: 103, baseType: !55, size: 16, offset: 2144)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !288, file: !289, line: 103, baseType: !55, size: 16, offset: 2160)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !288, file: !289, line: 106, baseType: !153, size: 32, offset: 2176)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !288, file: !289, line: 106, baseType: !153, size: 32, offset: 2208)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !288, file: !289, line: 106, baseType: !153, size: 32, offset: 2240)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !288, file: !289, line: 106, baseType: !153, size: 32, offset: 2272)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !288, file: !289, line: 107, baseType: !55, size: 16, offset: 2304)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !288, file: !289, line: 107, baseType: !55, size: 16, offset: 2320)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !288, file: !289, line: 107, baseType: !55, size: 16, offset: 2336)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !288, file: !289, line: 107, baseType: !55, size: 16, offset: 2352)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !288, file: !289, line: 108, baseType: !153, size: 32, offset: 2368)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !288, file: !289, line: 108, baseType: !153, size: 32, offset: 2400)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !288, file: !289, line: 109, baseType: !153, size: 32, offset: 2432)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !288, file: !289, line: 109, baseType: !153, size: 32, offset: 2464)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !288, file: !289, line: 110, baseType: !153, size: 32, offset: 2496)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !288, file: !289, line: 110, baseType: !153, size: 32, offset: 2528)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !288, file: !289, line: 110, baseType: !153, size: 32, offset: 2560)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !288, file: !289, line: 111, baseType: !55, size: 16, offset: 2592)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !288, file: !289, line: 111, baseType: !55, size: 16, offset: 2608)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !288, file: !289, line: 112, baseType: !55, size: 16, offset: 2624)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !288, file: !289, line: 112, baseType: !55, size: 16, offset: 2640)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !288, file: !289, line: 112, baseType: !55, size: 16, offset: 2656)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !288, file: !289, line: 115, baseType: !55, size: 16, offset: 2672)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !288, file: !289, line: 118, baseType: !359, size: 64, offset: 2688)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !288, file: !289, line: 118, baseType: !359, size: 64, offset: 2752)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !288, file: !289, line: 121, baseType: !362, size: 64, offset: 2816)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !256, line: 41, flags: DIFlagFwdDecl)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !288, file: !289, line: 122, baseType: !365, size: 1152, offset: 2880)
!365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 1152, elements: !367)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!367 = !{!368}
!368 = !DISubrange(count: 18)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !288, file: !289, line: 123, baseType: !55, size: 16, offset: 4032)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !288, file: !289, line: 123, baseType: !55, size: 16, offset: 4048)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !288, file: !289, line: 123, baseType: !146, size: 32, offset: 4064)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !288, file: !289, line: 126, baseType: !137, size: 64, offset: 4096)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !288, file: !289, line: 129, baseType: !374, size: 64, offset: 4160)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !376, line: 328, size: 3456, elements: !377)
!376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !{!378, !379, !380, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1053, !1054, !1055, !1058, !1062, !1066, !1070, !1071, !1072, !1073, !1074}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !375, file: !376, line: 329, baseType: !21, size: 960)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !375, file: !376, line: 330, baseType: !254, size: 64, offset: 960)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !375, file: !376, line: 332, baseType: !381, size: 64, offset: 1024)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !383, line: 283, size: 4096, elements: !384)
!383 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!384 = !{!385, !386, !387, !388, !392, !393, !397, !992, !1000, !1004, !1010, !1014, !1015, !1016, !1017, !1021, !1022}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !382, file: !383, line: 284, baseType: !57, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !382, file: !383, line: 285, baseType: !72, size: 512, offset: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !382, file: !383, line: 287, baseType: !72, size: 512, offset: 544)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !382, file: !383, line: 288, baseType: !389, size: 2048, offset: 1056)
!389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 2048, elements: !390)
!390 = !{!391}
!391 = !DISubrange(count: 256)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !382, file: !383, line: 289, baseType: !57, size: 32, offset: 3104)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !382, file: !383, line: 292, baseType: !394, size: 64, offset: 3136)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !374}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !382, file: !383, line: 293, baseType: !398, size: 64, offset: 3200)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{null, !374, !401}
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !376, line: 167, size: 3712, elements: !403)
!403 = !{!404, !405, !406, !407, !408, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !402, file: !376, line: 168, baseType: !401, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !402, file: !376, line: 168, baseType: !401, size: 64, offset: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !402, file: !376, line: 168, baseType: !401, size: 64, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !402, file: !376, line: 170, baseType: !61, size: 64, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !402, file: !376, line: 172, baseType: !409, size: 64, offset: 256)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !383, line: 144, size: 6016, elements: !411)
!411 = !{!412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !588, !589, !590, !860, !864, !868, !869, !875, !879, !883, !884, !885, !886, !890, !891, !895, !899, !903, !907, !911, !915, !919, !920, !927, !929, !938, !947}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !410, file: !383, line: 145, baseType: !26, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !410, file: !383, line: 145, baseType: !26, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !410, file: !383, line: 146, baseType: !55, size: 16, offset: 128)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !410, file: !383, line: 148, baseType: !72, size: 512, offset: 144)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !410, file: !383, line: 149, baseType: !57, size: 32, offset: 672)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !410, file: !383, line: 151, baseType: !72, size: 512, offset: 704)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !410, file: !383, line: 152, baseType: !389, size: 2048, offset: 1216)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !410, file: !383, line: 153, baseType: !57, size: 32, offset: 3264)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !410, file: !383, line: 155, baseType: !153, size: 32, offset: 3296)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !410, file: !383, line: 155, baseType: !153, size: 32, offset: 3328)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !410, file: !383, line: 155, baseType: !153, size: 32, offset: 3360)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !410, file: !383, line: 156, baseType: !153, size: 32, offset: 3392)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !410, file: !383, line: 156, baseType: !153, size: 32, offset: 3424)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !410, file: !383, line: 156, baseType: !153, size: 32, offset: 3456)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !410, file: !383, line: 157, baseType: !55, size: 16, offset: 3488)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !410, file: !383, line: 157, baseType: !55, size: 16, offset: 3504)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !410, file: !383, line: 157, baseType: !55, size: 16, offset: 3520)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !410, file: !383, line: 160, baseType: !430, size: 64, offset: 3584)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !383, line: 109, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !383, line: 98, size: 1408, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !587}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !432, file: !383, line: 99, baseType: !57, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !432, file: !383, line: 99, baseType: !57, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !432, file: !383, line: 100, baseType: !72, size: 512, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !432, file: !383, line: 101, baseType: !153, size: 32, offset: 576)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !432, file: !383, line: 101, baseType: !153, size: 32, offset: 608)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !432, file: !383, line: 101, baseType: !153, size: 32, offset: 640)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !432, file: !383, line: 101, baseType: !153, size: 32, offset: 672)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !432, file: !383, line: 102, baseType: !153, size: 32, offset: 704)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !432, file: !383, line: 102, baseType: !153, size: 32, offset: 736)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !432, file: !383, line: 103, baseType: !57, size: 32, offset: 768)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !432, file: !383, line: 104, baseType: !57, size: 32, offset: 800)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !432, file: !383, line: 107, baseType: !446, size: 64, offset: 832)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !376, line: 87, size: 2816, elements: !448)
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !572}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !447, file: !376, line: 88, baseType: !446, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !447, file: !376, line: 88, baseType: !446, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !447, file: !376, line: 88, baseType: !446, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !447, file: !376, line: 90, baseType: !61, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !447, file: !376, line: 92, baseType: !72, size: 512, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !447, file: !376, line: 94, baseType: !72, size: 512, offset: 768)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !447, file: !376, line: 99, baseType: !26, size: 64, offset: 1280)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !447, file: !376, line: 101, baseType: !55, size: 16, offset: 1344)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !447, file: !376, line: 101, baseType: !55, size: 16, offset: 1360)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !447, file: !376, line: 102, baseType: !55, size: 16, offset: 1376)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !447, file: !376, line: 103, baseType: !55, size: 16, offset: 1392)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !447, file: !376, line: 104, baseType: !461, size: 64, offset: 1408)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !383, line: 114, size: 1600, elements: !463)
!463 = !{!464, !465, !488, !492, !496, !500, !504, !508, !509, !513, !542, !543, !544}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !462, file: !383, line: 115, baseType: !72, size: 512)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !462, file: !383, line: 117, baseType: !466, size: 64, offset: 512)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !469, !472, !475, !475, !486}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !471, line: 44, flags: DIFlagFwdDecl)
!471 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !474, line: 61, flags: DIFlagFwdDecl)
!474 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !471, line: 55, size: 192, elements: !477)
!477 = !{!478, !482, !485}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !476, file: !471, line: 58, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !476, file: !471, line: 56, size: 64, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !479, file: !471, line: 57, baseType: !26, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !476, file: !471, line: 60, baseType: !483, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !376, line: 335, flags: DIFlagFwdDecl)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !476, file: !471, line: 61, baseType: !26, size: 64, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !462, file: !383, line: 118, baseType: !489, size: 64, offset: 576)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{null, !469, !475, !475, !359}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !462, file: !383, line: 120, baseType: !493, size: 64, offset: 640)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{null, !469, !472, !475}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !462, file: !383, line: 121, baseType: !497, size: 64, offset: 704)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{null, !469, !475, !359}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !462, file: !383, line: 122, baseType: !501, size: 64, offset: 768)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DISubroutineType(types: !503)
!503 = !{null, !374, !446, !483}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !462, file: !383, line: 123, baseType: !505, size: 64, offset: 832)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DISubroutineType(types: !507)
!507 = !{null, !374, !446, !401, !446, !486}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !462, file: !383, line: 124, baseType: !505, size: 64, offset: 896)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !462, file: !383, line: 125, baseType: !510, size: 64, offset: 960)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{null, !374, !446, !401, !446}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !462, file: !383, line: 128, baseType: !514, size: 256, offset: 1024)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !471, line: 436, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !471, line: 430, size: 256, elements: !516)
!516 = !{!517, !518, !521, !537}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !515, file: !471, line: 431, baseType: !26, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !515, file: !471, line: 432, baseType: !519, size: 64, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !471, line: 417, baseType: !484)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !515, file: !471, line: 433, baseType: !522, size: 64, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !471, line: 408, baseType: !523)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{!57, !469, !475, !526, !528}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !471, line: 38, flags: DIFlagFwdDecl)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !471, line: 348, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !471, line: 337, size: 256, elements: !531)
!531 = !{!532, !533, !534, !535, !536}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !530, file: !471, line: 339, baseType: !26, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !530, file: !471, line: 342, baseType: !526, size: 64, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !530, file: !471, line: 345, baseType: !57, size: 32, offset: 128)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !530, file: !471, line: 347, baseType: !57, size: 32, offset: 160)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !530, file: !471, line: 347, baseType: !57, size: 32, offset: 192)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !515, file: !471, line: 434, baseType: !538, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !471, line: 409, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DISubroutineType(types: !541)
!541 = !{null, !26}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !462, file: !383, line: 129, baseType: !514, size: 256, offset: 1280)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !462, file: !383, line: 132, baseType: !57, size: 32, offset: 1536)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !462, file: !383, line: 132, baseType: !57, size: 32, offset: 1568)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !447, file: !376, line: 105, baseType: !72, size: 512, offset: 1472)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !447, file: !376, line: 107, baseType: !153, size: 32, offset: 1984)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !447, file: !376, line: 107, baseType: !153, size: 32, offset: 2016)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !447, file: !376, line: 109, baseType: !26, size: 64, offset: 2048)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !447, file: !376, line: 112, baseType: !55, size: 16, offset: 2112)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !447, file: !376, line: 114, baseType: !55, size: 16, offset: 2128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !447, file: !376, line: 115, baseType: !57, size: 32, offset: 2144)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !447, file: !376, line: 117, baseType: !26, size: 64, offset: 2176)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !447, file: !376, line: 122, baseType: !57, size: 32, offset: 2240)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !447, file: !376, line: 124, baseType: !57, size: 32, offset: 2272)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !447, file: !376, line: 126, baseType: !446, size: 64, offset: 2304)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !447, file: !376, line: 128, baseType: !557, size: 64, offset: 2368)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !376, line: 298, size: 448, elements: !559)
!559 = !{!560, !561, !562, !565, !566, !569, !570, !571}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !558, file: !376, line: 299, baseType: !557, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !558, file: !376, line: 299, baseType: !557, size: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !558, file: !376, line: 301, baseType: !563, size: 64, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !376, line: 218, baseType: !402)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !558, file: !376, line: 301, baseType: !563, size: 64, offset: 192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !558, file: !376, line: 302, baseType: !567, size: 64, offset: 256)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !376, line: 132, baseType: !447)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !558, file: !376, line: 302, baseType: !567, size: 64, offset: 320)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !558, file: !376, line: 304, baseType: !57, size: 32, offset: 384)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !558, file: !376, line: 305, baseType: !57, size: 32, offset: 416)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !447, file: !376, line: 131, baseType: !573, size: 384, offset: 2432)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !376, line: 73, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !376, line: 62, size: 384, elements: !575)
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !574, file: !376, line: 63, baseType: !163, size: 128)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !574, file: !376, line: 64, baseType: !153, size: 32, offset: 128)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !574, file: !376, line: 64, baseType: !153, size: 32, offset: 160)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !574, file: !376, line: 65, baseType: !26, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !574, file: !376, line: 66, baseType: !55, size: 16, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !574, file: !376, line: 67, baseType: !55, size: 16, offset: 272)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !574, file: !376, line: 68, baseType: !55, size: 16, offset: 288)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !574, file: !376, line: 69, baseType: !55, size: 16, offset: 304)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !574, file: !376, line: 70, baseType: !55, size: 16, offset: 320)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !574, file: !376, line: 71, baseType: !55, size: 16, offset: 336)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !574, file: !376, line: 72, baseType: !146, size: 32, offset: 352)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !432, file: !383, line: 108, baseType: !72, size: 512, offset: 896)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !410, file: !383, line: 160, baseType: !430, size: 64, offset: 3648)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !410, file: !383, line: 162, baseType: !72, size: 512, offset: 3712)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !410, file: !383, line: 165, baseType: !591, size: 64, offset: 4224)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DISubroutineType(types: !593)
!593 = !{null, !594, !596, !809, !374, !401, !856}
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !598, line: 230, size: 3072, elements: !599)
!598 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!599 = !{!600, !601, !602, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !798, !799, !800, !801, !802, !803, !804, !805, !806, !808}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !597, file: !598, line: 231, baseType: !596, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !597, file: !598, line: 231, baseType: !596, size: 64, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !597, file: !598, line: 233, baseType: !603, size: 1280, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !604, line: 71, baseType: !605)
!604 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !604, line: 40, size: 1280, elements: !606)
!606 = !{!607, !608, !609, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !641}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !605, file: !604, line: 41, baseType: !198, size: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !605, file: !604, line: 41, baseType: !198, size: 128, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !605, file: !604, line: 42, baseType: !610, size: 128, offset: 256)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !199, line: 89, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !199, line: 86, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !611, file: !199, line: 87, baseType: !57, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !611, file: !199, line: 87, baseType: !57, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !611, file: !199, line: 88, baseType: !57, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !611, file: !199, line: 88, baseType: !57, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !605, file: !604, line: 42, baseType: !610, size: 128, offset: 384)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !605, file: !604, line: 43, baseType: !610, size: 128, offset: 512)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !605, file: !604, line: 45, baseType: !186, size: 64, offset: 640)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !605, file: !604, line: 45, baseType: !186, size: 64, offset: 704)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !605, file: !604, line: 46, baseType: !153, size: 32, offset: 768)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !605, file: !604, line: 46, baseType: !153, size: 32, offset: 800)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !605, file: !604, line: 48, baseType: !55, size: 16, offset: 832)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !605, file: !604, line: 49, baseType: !55, size: 16, offset: 848)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !605, file: !604, line: 51, baseType: !55, size: 16, offset: 864)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !605, file: !604, line: 52, baseType: !55, size: 16, offset: 880)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !605, file: !604, line: 53, baseType: !55, size: 16, offset: 896)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !605, file: !604, line: 55, baseType: !55, size: 16, offset: 912)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !605, file: !604, line: 56, baseType: !55, size: 16, offset: 928)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !605, file: !604, line: 58, baseType: !55, size: 16, offset: 944)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !605, file: !604, line: 58, baseType: !55, size: 16, offset: 960)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !605, file: !604, line: 59, baseType: !55, size: 16, offset: 976)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !605, file: !604, line: 59, baseType: !55, size: 16, offset: 992)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !605, file: !604, line: 61, baseType: !55, size: 16, offset: 1008)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !605, file: !604, line: 63, baseType: !359, size: 64, offset: 1024)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !605, file: !604, line: 64, baseType: !57, size: 32, offset: 1088)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !605, file: !604, line: 65, baseType: !57, size: 32, offset: 1120)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !605, file: !604, line: 68, baseType: !639, size: 64, offset: 1152)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !604, line: 68, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !605, file: !604, line: 69, baseType: !642, size: 64, offset: 1216)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !644, line: 490, size: 768, elements: !645)
!644 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!645 = !{!646, !647, !648, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !643, file: !644, line: 491, baseType: !642, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !643, file: !644, line: 491, baseType: !642, size: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !643, file: !644, line: 493, baseType: !649, size: 64, offset: 128)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !474, line: 169, size: 2048, elements: !651)
!651 = !{!652, !653, !654, !655, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !744, !747, !761, !762, !763, !764, !765, !766, !767, !768}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !650, file: !474, line: 170, baseType: !649, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !650, file: !474, line: 170, baseType: !649, size: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !650, file: !474, line: 172, baseType: !26, size: 64, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !650, file: !474, line: 174, baseType: !656, size: 64, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !598, line: 49, size: 1984, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !657, file: !598, line: 50, baseType: !21, size: 960)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !657, file: !598, line: 52, baseType: !82, size: 128, offset: 960)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !657, file: !598, line: 53, baseType: !82, size: 128, offset: 1088)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !657, file: !598, line: 54, baseType: !82, size: 128, offset: 1216)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !657, file: !598, line: 55, baseType: !82, size: 128, offset: 1344)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !657, file: !598, line: 57, baseType: !280, size: 64, offset: 1472)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !657, file: !598, line: 58, baseType: !280, size: 64, offset: 1536)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !657, file: !598, line: 60, baseType: !57, size: 32, offset: 1600)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !657, file: !598, line: 61, baseType: !57, size: 32, offset: 1632)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !657, file: !598, line: 63, baseType: !55, size: 16, offset: 1664)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !657, file: !598, line: 64, baseType: !55, size: 16, offset: 1680)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !657, file: !598, line: 65, baseType: !55, size: 16, offset: 1696)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !657, file: !598, line: 66, baseType: !55, size: 16, offset: 1712)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !657, file: !598, line: 67, baseType: !55, size: 16, offset: 1728)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !657, file: !598, line: 68, baseType: !55, size: 16, offset: 1744)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !657, file: !598, line: 69, baseType: !55, size: 16, offset: 1760)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !657, file: !598, line: 70, baseType: !55, size: 16, offset: 1776)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !657, file: !598, line: 71, baseType: !55, size: 16, offset: 1792)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !657, file: !598, line: 73, baseType: !55, size: 16, offset: 1808)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !657, file: !598, line: 74, baseType: !55, size: 16, offset: 1824)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !657, file: !598, line: 76, baseType: !55, size: 16, offset: 1840)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !657, file: !598, line: 78, baseType: !642, size: 64, offset: 1856)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !657, file: !598, line: 79, baseType: !26, size: 64, offset: 1920)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !650, file: !474, line: 175, baseType: !656, size: 64, offset: 256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !650, file: !474, line: 176, baseType: !72, size: 512, offset: 320)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !650, file: !474, line: 178, baseType: !55, size: 16, offset: 832)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !650, file: !474, line: 178, baseType: !55, size: 16, offset: 848)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !650, file: !474, line: 178, baseType: !55, size: 16, offset: 864)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !650, file: !474, line: 178, baseType: !55, size: 16, offset: 880)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !650, file: !474, line: 179, baseType: !55, size: 16, offset: 896)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !650, file: !474, line: 180, baseType: !55, size: 16, offset: 912)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !650, file: !474, line: 181, baseType: !55, size: 16, offset: 928)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !650, file: !474, line: 182, baseType: !55, size: 16, offset: 944)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !650, file: !474, line: 183, baseType: !55, size: 16, offset: 960)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !650, file: !474, line: 184, baseType: !55, size: 16, offset: 976)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !650, file: !474, line: 185, baseType: !55, size: 16, offset: 992)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !650, file: !474, line: 186, baseType: !55, size: 16, offset: 1008)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !650, file: !474, line: 188, baseType: !57, size: 32, offset: 1024)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !650, file: !474, line: 190, baseType: !55, size: 16, offset: 1056)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !650, file: !474, line: 191, baseType: !55, size: 16, offset: 1072)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !650, file: !474, line: 194, baseType: !700, size: 64, offset: 1088)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !644, line: 421, size: 960, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !708, !709, !711, !715, !716, !717, !718, !719, !720, !721, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !740, !741, !742, !743}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !701, file: !644, line: 422, baseType: !700, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !701, file: !644, line: 422, baseType: !700, size: 64, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !701, file: !644, line: 424, baseType: !55, size: 16, offset: 128)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !701, file: !644, line: 425, baseType: !55, size: 16, offset: 144)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !701, file: !644, line: 426, baseType: !57, size: 32, offset: 160)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !701, file: !644, line: 426, baseType: !57, size: 32, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !701, file: !644, line: 427, baseType: !710, size: 64, offset: 224)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 64, elements: !142)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !701, file: !644, line: 428, baseType: !712, size: 48, offset: 288)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 48, elements: !713)
!713 = !{!714}
!714 = !DISubrange(count: 6)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !701, file: !644, line: 431, baseType: !42, size: 8, offset: 336)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !701, file: !644, line: 432, baseType: !42, size: 8, offset: 344)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !701, file: !644, line: 435, baseType: !55, size: 16, offset: 352)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !701, file: !644, line: 436, baseType: !55, size: 16, offset: 368)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !701, file: !644, line: 437, baseType: !57, size: 32, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !701, file: !644, line: 437, baseType: !57, size: 32, offset: 416)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !701, file: !644, line: 438, baseType: !722, size: 64, offset: 448)
!722 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !701, file: !644, line: 439, baseType: !57, size: 32, offset: 512)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !701, file: !644, line: 439, baseType: !57, size: 32, offset: 544)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !701, file: !644, line: 442, baseType: !55, size: 16, offset: 576)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !701, file: !644, line: 442, baseType: !55, size: 16, offset: 592)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !701, file: !644, line: 442, baseType: !55, size: 16, offset: 608)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !701, file: !644, line: 442, baseType: !55, size: 16, offset: 624)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !701, file: !644, line: 443, baseType: !55, size: 16, offset: 640)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !701, file: !644, line: 446, baseType: !55, size: 16, offset: 656)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !701, file: !644, line: 449, baseType: !486, size: 64, offset: 704)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !701, file: !644, line: 452, baseType: !733, size: 64, offset: 768)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !644, line: 463, size: 128, elements: !735)
!735 = !{!736, !737, !738, !739}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !734, file: !644, line: 464, baseType: !57, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !734, file: !644, line: 465, baseType: !153, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !734, file: !644, line: 466, baseType: !153, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !734, file: !644, line: 467, baseType: !153, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !701, file: !644, line: 455, baseType: !55, size: 16, offset: 832)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !701, file: !644, line: 456, baseType: !55, size: 16, offset: 848)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !701, file: !644, line: 457, baseType: !57, size: 32, offset: 864)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !701, file: !644, line: 458, baseType: !26, size: 64, offset: 896)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !650, file: !474, line: 196, baseType: !745, size: 64, offset: 1152)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !474, line: 55, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !650, file: !474, line: 198, baseType: !748, size: 64, offset: 1216)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !644, line: 398, size: 448, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !749, file: !644, line: 399, baseType: !748, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !749, file: !644, line: 399, baseType: !748, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !749, file: !644, line: 400, baseType: !57, size: 32, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !749, file: !644, line: 401, baseType: !57, size: 32, offset: 160)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !749, file: !644, line: 402, baseType: !57, size: 32, offset: 192)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !749, file: !644, line: 403, baseType: !57, size: 32, offset: 224)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !749, file: !644, line: 404, baseType: !57, size: 32, offset: 256)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !749, file: !644, line: 405, baseType: !57, size: 32, offset: 288)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !749, file: !644, line: 407, baseType: !26, size: 64, offset: 320)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !749, file: !644, line: 414, baseType: !26, size: 64, offset: 384)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !650, file: !474, line: 200, baseType: !57, size: 32, offset: 1280)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !650, file: !474, line: 200, baseType: !57, size: 32, offset: 1312)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !650, file: !474, line: 201, baseType: !26, size: 64, offset: 1344)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !650, file: !474, line: 203, baseType: !82, size: 128, offset: 1408)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !650, file: !474, line: 204, baseType: !82, size: 128, offset: 1536)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !650, file: !474, line: 205, baseType: !82, size: 128, offset: 1664)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !650, file: !474, line: 207, baseType: !82, size: 128, offset: 1792)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !650, file: !474, line: 208, baseType: !82, size: 128, offset: 1920)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !643, file: !644, line: 495, baseType: !722, size: 64, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !643, file: !644, line: 496, baseType: !57, size: 32, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !643, file: !644, line: 497, baseType: !26, size: 64, offset: 320)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !643, file: !644, line: 499, baseType: !722, size: 64, offset: 384)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !643, file: !644, line: 500, baseType: !722, size: 64, offset: 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !643, file: !644, line: 502, baseType: !722, size: 64, offset: 512)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !643, file: !644, line: 503, baseType: !722, size: 64, offset: 576)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !643, file: !644, line: 504, baseType: !722, size: 64, offset: 640)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !643, file: !644, line: 505, baseType: !57, size: 32, offset: 704)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !597, file: !598, line: 234, baseType: !610, size: 128, offset: 1408)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !597, file: !598, line: 235, baseType: !610, size: 128, offset: 1536)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !597, file: !598, line: 236, baseType: !55, size: 16, offset: 1664)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !597, file: !598, line: 236, baseType: !55, size: 16, offset: 1680)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !597, file: !598, line: 238, baseType: !55, size: 16, offset: 1696)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !597, file: !598, line: 239, baseType: !55, size: 16, offset: 1712)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !597, file: !598, line: 240, baseType: !55, size: 16, offset: 1728)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !597, file: !598, line: 241, baseType: !55, size: 16, offset: 1744)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !597, file: !598, line: 243, baseType: !153, size: 32, offset: 1760)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !597, file: !598, line: 244, baseType: !55, size: 16, offset: 1792)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !597, file: !598, line: 244, baseType: !55, size: 16, offset: 1808)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !597, file: !598, line: 246, baseType: !55, size: 16, offset: 1824)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !597, file: !598, line: 247, baseType: !55, size: 16, offset: 1840)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !597, file: !598, line: 248, baseType: !55, size: 16, offset: 1856)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !597, file: !598, line: 249, baseType: !55, size: 16, offset: 1872)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !597, file: !598, line: 250, baseType: !55, size: 16, offset: 1888)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !597, file: !598, line: 251, baseType: !55, size: 16, offset: 1904)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !597, file: !598, line: 253, baseType: !796, size: 64, offset: 1920)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !598, line: 42, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !597, file: !598, line: 255, baseType: !82, size: 128, offset: 1984)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !597, file: !598, line: 256, baseType: !82, size: 128, offset: 2112)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !597, file: !598, line: 257, baseType: !82, size: 128, offset: 2240)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !597, file: !598, line: 258, baseType: !82, size: 128, offset: 2368)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !597, file: !598, line: 259, baseType: !82, size: 128, offset: 2496)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !597, file: !598, line: 260, baseType: !82, size: 128, offset: 2624)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !597, file: !598, line: 261, baseType: !82, size: 128, offset: 2752)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !597, file: !598, line: 263, baseType: !642, size: 64, offset: 2880)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !597, file: !598, line: 265, baseType: !807, size: 64, offset: 2944)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !597, file: !598, line: 266, baseType: !26, size: 64, offset: 3008)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !811, line: 925, size: 3200, elements: !812)
!811 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!812 = !{!813, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !810, file: !811, line: 926, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !811, line: 91, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !811, line: 85, size: 448, elements: !817)
!817 = !{!818, !820, !821, !822, !823, !824}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !816, file: !811, line: 86, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !816, file: !811, line: 86, baseType: !819, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !816, file: !811, line: 87, baseType: !82, size: 128, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !816, file: !811, line: 88, baseType: !57, size: 32, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !816, file: !811, line: 89, baseType: !153, size: 32, offset: 288)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !816, file: !811, line: 90, baseType: !825, size: 128, offset: 320)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 128, elements: !116)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !810, file: !811, line: 926, baseType: !814, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !810, file: !811, line: 927, baseType: !82, size: 128, offset: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !810, file: !811, line: 928, baseType: !57, size: 32, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !810, file: !811, line: 929, baseType: !153, size: 32, offset: 288)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !810, file: !811, line: 930, baseType: !825, size: 128, offset: 320)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !810, file: !811, line: 932, baseType: !603, size: 1280, offset: 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !810, file: !811, line: 934, baseType: !29, size: 64, offset: 1728)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !810, file: !811, line: 934, baseType: !29, size: 64, offset: 1792)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !810, file: !811, line: 935, baseType: !55, size: 16, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !810, file: !811, line: 935, baseType: !55, size: 16, offset: 1872)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !810, file: !811, line: 936, baseType: !153, size: 32, offset: 1888)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !810, file: !811, line: 936, baseType: !153, size: 32, offset: 1920)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !810, file: !811, line: 938, baseType: !153, size: 32, offset: 1952)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !810, file: !811, line: 938, baseType: !153, size: 32, offset: 1984)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !810, file: !811, line: 939, baseType: !153, size: 32, offset: 2016)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !810, file: !811, line: 940, baseType: !186, size: 64, offset: 2048)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !810, file: !811, line: 947, baseType: !82, size: 128, offset: 2112)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !810, file: !811, line: 949, baseType: !374, size: 64, offset: 2240)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !810, file: !811, line: 949, baseType: !374, size: 64, offset: 2304)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !810, file: !811, line: 952, baseType: !72, size: 512, offset: 2368)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !810, file: !811, line: 953, baseType: !57, size: 32, offset: 2880)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !810, file: !811, line: 954, baseType: !57, size: 32, offset: 2912)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !810, file: !811, line: 956, baseType: !55, size: 16, offset: 2944)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !810, file: !811, line: 957, baseType: !55, size: 16, offset: 2960)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !810, file: !811, line: 958, baseType: !55, size: 16, offset: 2976)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !810, file: !811, line: 959, baseType: !55, size: 16, offset: 2992)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !810, file: !811, line: 960, baseType: !82, size: 128, offset: 3008)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !810, file: !811, line: 962, baseType: !854, size: 64, offset: 3136)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !8, line: 61, flags: DIFlagFwdDecl)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !376, line: 274, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !376, line: 271, size: 32, elements: !858)
!858 = !{!859}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !857, file: !376, line: 273, baseType: !132, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !410, file: !383, line: 168, baseType: !861, size: 64, offset: 4288)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !594, !374, !401}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !410, file: !383, line: 171, baseType: !865, size: 64, offset: 4352)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{null, !472, !469, !475}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !410, file: !383, line: 173, baseType: !865, size: 64, offset: 4416)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !410, file: !383, line: 176, baseType: !870, size: 64, offset: 4480)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !809, !873, !401, !57, !57}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !170, line: 136, flags: DIFlagFwdDecl)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !410, file: !383, line: 179, baseType: !876, size: 64, offset: 4544)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{null, !374, !401, !807, !57}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !410, file: !383, line: 181, baseType: !880, size: 64, offset: 4608)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!57, !401, !57, !57}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !410, file: !383, line: 183, baseType: !880, size: 64, offset: 4672)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !410, file: !383, line: 185, baseType: !880, size: 64, offset: 4736)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !410, file: !383, line: 188, baseType: !398, size: 64, offset: 4800)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !410, file: !383, line: 190, baseType: !887, size: 64, offset: 4864)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !374, !401, !29}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !410, file: !383, line: 193, baseType: !398, size: 64, offset: 4928)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !410, file: !383, line: 195, baseType: !892, size: 64, offset: 4992)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !401}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !410, file: !383, line: 197, baseType: !896, size: 64, offset: 5056)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !374, !401, !401}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !410, file: !383, line: 200, baseType: !900, size: 64, offset: 5120)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !594, !475}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !410, file: !383, line: 201, baseType: !904, size: 64, offset: 5184)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !475}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !410, file: !383, line: 202, baseType: !908, size: 64, offset: 5248)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !475, !401}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !410, file: !383, line: 205, baseType: !912, size: 64, offset: 5312)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!57, !409, !374}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !410, file: !383, line: 207, baseType: !916, size: 64, offset: 5376)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!57, !401, !374}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !410, file: !383, line: 210, baseType: !398, size: 64, offset: 5440)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !410, file: !383, line: 213, baseType: !921, size: 64, offset: 5504)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !383, line: 135, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!26, !925, !401, !856}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !383, line: 62, flags: DIFlagFwdDecl)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !410, file: !383, line: 214, baseType: !928, size: 64, offset: 5568)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !383, line: 136, baseType: !539)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !410, file: !383, line: 215, baseType: !930, size: 64, offset: 5632)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !383, line: 137, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !26, !57, !401, !934, !936, !936}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !383, line: 63, flags: DIFlagFwdDecl)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !410, file: !383, line: 217, baseType: !939, size: 64, offset: 5696)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !383, line: 138, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!57, !943, !401, !934, !945, !945}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !383, line: 64, flags: DIFlagFwdDecl)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !383, line: 66, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !410, file: !383, line: 220, baseType: !514, size: 256, offset: 5760)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !402, file: !376, line: 173, baseType: !72, size: 512, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !402, file: !376, line: 175, baseType: !72, size: 512, offset: 832)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !402, file: !376, line: 176, baseType: !57, size: 32, offset: 1344)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !402, file: !376, line: 177, baseType: !55, size: 16, offset: 1376)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !402, file: !376, line: 177, baseType: !55, size: 16, offset: 1392)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !402, file: !376, line: 178, baseType: !55, size: 16, offset: 1408)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !402, file: !376, line: 178, baseType: !55, size: 16, offset: 1424)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !402, file: !376, line: 179, baseType: !55, size: 16, offset: 1440)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !402, file: !376, line: 179, baseType: !55, size: 16, offset: 1456)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !402, file: !376, line: 180, baseType: !55, size: 16, offset: 1472)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !402, file: !376, line: 181, baseType: !55, size: 16, offset: 1488)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !402, file: !376, line: 182, baseType: !233, size: 96, offset: 1504)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !402, file: !376, line: 184, baseType: !82, size: 128, offset: 1600)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !402, file: !376, line: 184, baseType: !82, size: 128, offset: 1728)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !402, file: !376, line: 185, baseType: !401, size: 64, offset: 1856)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !402, file: !376, line: 186, baseType: !29, size: 64, offset: 1920)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !402, file: !376, line: 187, baseType: !26, size: 64, offset: 1984)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !402, file: !376, line: 188, baseType: !401, size: 64, offset: 2048)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !402, file: !376, line: 189, baseType: !82, size: 128, offset: 2112)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !402, file: !376, line: 191, baseType: !153, size: 32, offset: 2240)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !402, file: !376, line: 191, baseType: !153, size: 32, offset: 2272)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !402, file: !376, line: 192, baseType: !153, size: 32, offset: 2304)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !402, file: !376, line: 192, baseType: !153, size: 32, offset: 2336)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !402, file: !376, line: 193, baseType: !153, size: 32, offset: 2368)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !402, file: !376, line: 194, baseType: !153, size: 32, offset: 2400)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !402, file: !376, line: 194, baseType: !153, size: 32, offset: 2432)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !402, file: !376, line: 196, baseType: !57, size: 32, offset: 2464)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !402, file: !376, line: 198, baseType: !72, size: 512, offset: 2496)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !402, file: !376, line: 199, baseType: !55, size: 16, offset: 3008)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !402, file: !376, line: 199, baseType: !55, size: 16, offset: 3024)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !402, file: !376, line: 200, baseType: !153, size: 32, offset: 3040)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !402, file: !376, line: 200, baseType: !153, size: 32, offset: 3072)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !402, file: !376, line: 202, baseType: !55, size: 16, offset: 3104)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !402, file: !376, line: 202, baseType: !55, size: 16, offset: 3120)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !402, file: !376, line: 203, baseType: !26, size: 64, offset: 3136)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !402, file: !376, line: 204, baseType: !198, size: 128, offset: 3200)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !402, file: !376, line: 205, baseType: !198, size: 128, offset: 3328)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !402, file: !376, line: 206, baseType: !198, size: 128, offset: 3456)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !402, file: !376, line: 215, baseType: !55, size: 16, offset: 3584)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !402, file: !376, line: 215, baseType: !55, size: 16, offset: 3600)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !402, file: !376, line: 216, baseType: !57, size: 32, offset: 3616)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !402, file: !376, line: 217, baseType: !990, size: 64, offset: 3648)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !376, line: 51, flags: DIFlagFwdDecl)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !382, file: !383, line: 294, baseType: !993, size: 64, offset: 3264)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !280, !26, !996}
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !383, line: 282, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !26, !57, !486}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !382, file: !383, line: 296, baseType: !1001, size: 64, offset: 3328)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!57, !594, !381}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !382, file: !383, line: 298, baseType: !1005, size: 64, offset: 3392)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !594, !381, !1008, !1009, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !382, file: !383, line: 302, baseType: !1011, size: 64, offset: 3456)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{null, !374, !374}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !382, file: !383, line: 303, baseType: !1011, size: 64, offset: 3520)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !382, file: !383, line: 304, baseType: !1011, size: 64, offset: 3584)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !382, file: !383, line: 307, baseType: !394, size: 64, offset: 3648)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !382, file: !383, line: 309, baseType: !1018, size: 64, offset: 3712)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!57, !374, !557}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !382, file: !383, line: 311, baseType: !398, size: 64, offset: 3776)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !382, file: !383, line: 314, baseType: !514, size: 256, offset: 3840)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !375, file: !376, line: 333, baseType: !72, size: 512, offset: 1088)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !375, file: !376, line: 335, baseType: !483, size: 64, offset: 1600)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !375, file: !376, line: 337, baseType: !854, size: 64, offset: 1664)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !375, file: !376, line: 338, baseType: !186, size: 64, offset: 1728)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !375, file: !376, line: 340, baseType: !82, size: 128, offset: 1792)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !375, file: !376, line: 340, baseType: !82, size: 128, offset: 1920)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !375, file: !376, line: 342, baseType: !57, size: 32, offset: 2048)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !375, file: !376, line: 342, baseType: !57, size: 32, offset: 2080)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !375, file: !376, line: 343, baseType: !57, size: 32, offset: 2112)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !375, file: !376, line: 345, baseType: !57, size: 32, offset: 2144)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !375, file: !376, line: 346, baseType: !57, size: 32, offset: 2176)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !375, file: !376, line: 347, baseType: !55, size: 16, offset: 2208)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !375, file: !376, line: 348, baseType: !55, size: 16, offset: 2224)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !375, file: !376, line: 349, baseType: !57, size: 32, offset: 2240)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !375, file: !376, line: 351, baseType: !57, size: 32, offset: 2272)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !375, file: !376, line: 353, baseType: !55, size: 16, offset: 2304)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !375, file: !376, line: 354, baseType: !55, size: 16, offset: 2320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !375, file: !376, line: 355, baseType: !57, size: 32, offset: 2336)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !375, file: !376, line: 357, baseType: !198, size: 128, offset: 2368)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !375, file: !376, line: 363, baseType: !82, size: 128, offset: 2496)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !375, file: !376, line: 363, baseType: !82, size: 128, offset: 2624)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !375, file: !376, line: 368, baseType: !1045, size: 64, offset: 2752)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !383, line: 500, size: 64, elements: !1047)
!1047 = !{!1048}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1046, file: !383, line: 502, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1051, line: 48, baseType: !1052)
!1051 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1051, line: 48, flags: DIFlagFwdDecl)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !375, file: !376, line: 372, baseType: !856, size: 32, offset: 2816)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !375, file: !376, line: 373, baseType: !57, size: 32, offset: 2848)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !375, file: !376, line: 382, baseType: !1056, size: 64, offset: 2880)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !376, line: 46, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !375, file: !376, line: 385, baseType: !1059, size: 64, offset: 2944)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !26, !153}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !375, file: !376, line: 386, baseType: !1063, size: 64, offset: 3008)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{null, !26, !807}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !375, file: !376, line: 387, baseType: !1067, size: 64, offset: 3072)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!57, !26}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !375, file: !376, line: 388, baseType: !539, size: 64, offset: 3136)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !375, file: !376, line: 389, baseType: !26, size: 64, offset: 3200)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !375, file: !376, line: 389, baseType: !26, size: 64, offset: 3264)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !375, file: !376, line: 389, baseType: !26, size: 64, offset: 3328)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !375, file: !376, line: 389, baseType: !26, size: 64, offset: 3392)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !281, file: !8, line: 1223, baseType: !280, size: 64, offset: 1152)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !281, file: !8, line: 1225, baseType: !82, size: 128, offset: 1216)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !281, file: !8, line: 1226, baseType: !1078, size: 64, offset: 1344)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !8, line: 69, size: 320, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1079, file: !8, line: 70, baseType: !1078, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1079, file: !8, line: 70, baseType: !1078, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1079, file: !8, line: 71, baseType: !132, size: 32, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1079, file: !8, line: 71, baseType: !132, size: 32, offset: 160)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1079, file: !8, line: 72, baseType: !57, size: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1079, file: !8, line: 73, baseType: !55, size: 16, offset: 224)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1079, file: !8, line: 73, baseType: !55, size: 16, offset: 240)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1079, file: !8, line: 74, baseType: !248, size: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !281, file: !8, line: 1227, baseType: !248, size: 64, offset: 1408)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !281, file: !8, line: 1229, baseType: !233, size: 96, offset: 1472)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !281, file: !8, line: 1230, baseType: !233, size: 96, offset: 1568)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !281, file: !8, line: 1231, baseType: !233, size: 96, offset: 1664)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !281, file: !8, line: 1231, baseType: !233, size: 96, offset: 1760)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !281, file: !8, line: 1233, baseType: !132, size: 32, offset: 1856)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !281, file: !8, line: 1234, baseType: !57, size: 32, offset: 1888)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !281, file: !8, line: 1235, baseType: !132, size: 32, offset: 1920)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !281, file: !8, line: 1237, baseType: !55, size: 16, offset: 1952)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !281, file: !8, line: 1239, baseType: !42, size: 8, offset: 1968)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !281, file: !8, line: 1240, baseType: !1100, size: 8, offset: 1976)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, elements: !1101)
!1101 = !{!1102}
!1102 = !DISubrange(count: 1)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !281, file: !8, line: 1242, baseType: !374, size: 64, offset: 1984)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !281, file: !8, line: 1244, baseType: !1105, size: 64, offset: 2048)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1107, line: 200, size: 17024, elements: !1108)
!1107 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1108 = !{!1109, !1111, !1112, !1113, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1106, file: !1107, line: 201, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1106, file: !1107, line: 202, baseType: !82, size: 128, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1106, file: !1107, line: 203, baseType: !82, size: 128, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1106, file: !1107, line: 206, baseType: !1114, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1107, line: 190, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1107, line: 126, size: 2816, elements: !1117)
!1117 = !{!1118, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1206, !1207, !1208, !1209, !1415, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1443}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1116, file: !1107, line: 127, baseType: !1119, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1116, file: !1107, line: 127, baseType: !1119, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1116, file: !1107, line: 128, baseType: !26, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1116, file: !1107, line: 129, baseType: !26, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1116, file: !1107, line: 130, baseType: !72, size: 512, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1116, file: !1107, line: 132, baseType: !57, size: 32, offset: 768)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1116, file: !1107, line: 132, baseType: !57, size: 32, offset: 800)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1116, file: !1107, line: 133, baseType: !57, size: 32, offset: 832)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1116, file: !1107, line: 134, baseType: !57, size: 32, offset: 864)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1116, file: !1107, line: 134, baseType: !57, size: 32, offset: 896)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1116, file: !1107, line: 134, baseType: !57, size: 32, offset: 928)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1116, file: !1107, line: 135, baseType: !57, size: 32, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1116, file: !1107, line: 135, baseType: !57, size: 32, offset: 992)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1116, file: !1107, line: 136, baseType: !57, size: 32, offset: 1024)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1116, file: !1107, line: 136, baseType: !57, size: 32, offset: 1056)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1116, file: !1107, line: 137, baseType: !57, size: 32, offset: 1088)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1116, file: !1107, line: 137, baseType: !57, size: 32, offset: 1120)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1116, file: !1107, line: 138, baseType: !153, size: 32, offset: 1152)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1116, file: !1107, line: 139, baseType: !153, size: 32, offset: 1184)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1116, file: !1107, line: 139, baseType: !153, size: 32, offset: 1216)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1116, file: !1107, line: 141, baseType: !55, size: 16, offset: 1248)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1116, file: !1107, line: 142, baseType: !55, size: 16, offset: 1264)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1116, file: !1107, line: 143, baseType: !57, size: 32, offset: 1280)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1116, file: !1107, line: 144, baseType: !57, size: 32, offset: 1312)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1116, file: !1107, line: 146, baseType: !1144, size: 64, offset: 1344)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1107, line: 114, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1107, line: 99, size: 7232, elements: !1147)
!1147 = !{!1148, !1150, !1151, !1152, !1153, !1154, !1155, !1163, !1167, !1179, !1188, !1195, !1205}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1146, file: !1107, line: 100, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1146, file: !1107, line: 100, baseType: !1149, size: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1146, file: !1107, line: 101, baseType: !57, size: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1146, file: !1107, line: 101, baseType: !57, size: 32, offset: 160)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1146, file: !1107, line: 102, baseType: !57, size: 32, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1146, file: !1107, line: 102, baseType: !57, size: 32, offset: 224)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1146, file: !1107, line: 103, baseType: !1156, size: 64, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1107, line: 59, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1107, line: 56, size: 2112, elements: !1159)
!1159 = !{!1160, !1161, !1162}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1158, file: !1107, line: 57, baseType: !389, size: 2048)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1158, file: !1107, line: 58, baseType: !57, size: 32, offset: 2048)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1158, file: !1107, line: 58, baseType: !57, size: 32, offset: 2080)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1146, file: !1107, line: 106, baseType: !1164, size: 6144, offset: 320)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 6144, elements: !1165)
!1165 = !{!1166}
!1166 = !DISubrange(count: 768)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1146, file: !1107, line: 107, baseType: !1168, size: 64, offset: 6464)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1107, line: 97, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1107, line: 83, size: 8320, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1178}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1170, file: !1107, line: 84, baseType: !1164, size: 6144)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1170, file: !1107, line: 87, baseType: !389, size: 2048, offset: 6144)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1170, file: !1107, line: 88, baseType: !109, size: 64, offset: 8192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1170, file: !1107, line: 90, baseType: !55, size: 16, offset: 8256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1170, file: !1107, line: 92, baseType: !55, size: 16, offset: 8272)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1170, file: !1107, line: 93, baseType: !55, size: 16, offset: 8288)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1170, file: !1107, line: 95, baseType: !55, size: 16, offset: 8304)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1146, file: !1107, line: 108, baseType: !1180, size: 64, offset: 6528)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1107, line: 66, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1107, line: 61, size: 128, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1182, file: !1107, line: 62, baseType: !57, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1182, file: !1107, line: 63, baseType: !57, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1182, file: !1107, line: 64, baseType: !57, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1182, file: !1107, line: 65, baseType: !57, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1146, file: !1107, line: 109, baseType: !1189, size: 64, offset: 6592)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1107, line: 71, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1107, line: 68, size: 64, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1191, file: !1107, line: 69, baseType: !57, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1191, file: !1107, line: 70, baseType: !57, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1146, file: !1107, line: 110, baseType: !1196, size: 64, offset: 6656)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1107, line: 81, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1107, line: 73, size: 352, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1198, file: !1107, line: 74, baseType: !233, size: 96)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1198, file: !1107, line: 75, baseType: !233, size: 96, offset: 96)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1198, file: !1107, line: 76, baseType: !233, size: 96, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1198, file: !1107, line: 77, baseType: !57, size: 32, offset: 288)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1198, file: !1107, line: 78, baseType: !57, size: 32, offset: 320)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1146, file: !1107, line: 113, baseType: !169, size: 512, offset: 6720)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1116, file: !1107, line: 148, baseType: !362, size: 64, offset: 1408)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1116, file: !1107, line: 151, baseType: !280, size: 64, offset: 1472)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1116, file: !1107, line: 152, baseType: !248, size: 64, offset: 1536)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1116, file: !1107, line: 153, baseType: !1210, size: 64, offset: 1600)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1212, line: 64, size: 19136, elements: !1213)
!1212 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1226, !1227, !1401, !1402, !1410, !1411, !1412, !1413, !1414}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1211, file: !1212, line: 65, baseType: !21, size: 960)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1211, file: !1212, line: 66, baseType: !254, size: 64, offset: 960)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1211, file: !1212, line: 68, baseType: !41, size: 8192, offset: 1024)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1211, file: !1212, line: 70, baseType: !57, size: 32, offset: 9216)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1211, file: !1212, line: 71, baseType: !57, size: 32, offset: 9248)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1211, file: !1212, line: 72, baseType: !710, size: 64, offset: 9280)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1211, file: !1212, line: 74, baseType: !153, size: 32, offset: 9344)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1211, file: !1212, line: 74, baseType: !153, size: 32, offset: 9376)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1211, file: !1212, line: 76, baseType: !109, size: 64, offset: 9408)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1211, file: !1212, line: 77, baseType: !1224, size: 64, offset: 9472)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1212, line: 77, flags: DIFlagFwdDecl)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1211, file: !1212, line: 78, baseType: !854, size: 64, offset: 9536)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1211, file: !1212, line: 80, baseType: !1228, size: 2624, offset: 9600)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1229, line: 340, size: 2624, elements: !1230)
!1229 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1230 = !{!1231, !1259, !1277, !1278, !1279, !1296, !1354, !1355, !1381, !1382, !1383, !1384, !1390}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1228, file: !1229, line: 341, baseType: !1232, size: 576)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1229, line: 251, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1229, line: 207, size: 576, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1233, file: !1229, line: 208, baseType: !57, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1233, file: !1229, line: 211, baseType: !55, size: 16, offset: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1233, file: !1229, line: 212, baseType: !55, size: 16, offset: 48)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1233, file: !1229, line: 213, baseType: !153, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1233, file: !1229, line: 214, baseType: !55, size: 16, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1233, file: !1229, line: 215, baseType: !55, size: 16, offset: 112)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1233, file: !1229, line: 216, baseType: !55, size: 16, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1233, file: !1229, line: 217, baseType: !55, size: 16, offset: 144)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1233, file: !1229, line: 218, baseType: !55, size: 16, offset: 160)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1233, file: !1229, line: 219, baseType: !55, size: 16, offset: 176)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1233, file: !1229, line: 220, baseType: !153, size: 32, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1233, file: !1229, line: 222, baseType: !55, size: 16, offset: 224)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1233, file: !1229, line: 225, baseType: !55, size: 16, offset: 240)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1233, file: !1229, line: 228, baseType: !57, size: 32, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1233, file: !1229, line: 229, baseType: !57, size: 32, offset: 288)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1233, file: !1229, line: 233, baseType: !57, size: 32, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1233, file: !1229, line: 236, baseType: !55, size: 16, offset: 352)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1233, file: !1229, line: 236, baseType: !55, size: 16, offset: 368)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1233, file: !1229, line: 241, baseType: !153, size: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1233, file: !1229, line: 244, baseType: !57, size: 32, offset: 416)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1233, file: !1229, line: 244, baseType: !57, size: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1233, file: !1229, line: 245, baseType: !153, size: 32, offset: 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1233, file: !1229, line: 248, baseType: !153, size: 32, offset: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1233, file: !1229, line: 250, baseType: !57, size: 32, offset: 544)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1228, file: !1229, line: 342, baseType: !1260, size: 448, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1229, line: 79, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1229, line: 61, size: 448, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1261, file: !1229, line: 62, baseType: !26, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1261, file: !1229, line: 64, baseType: !55, size: 16, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1261, file: !1229, line: 65, baseType: !55, size: 16, offset: 80)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1261, file: !1229, line: 67, baseType: !153, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1261, file: !1229, line: 68, baseType: !153, size: 32, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1261, file: !1229, line: 69, baseType: !153, size: 32, offset: 160)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1261, file: !1229, line: 70, baseType: !55, size: 16, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1261, file: !1229, line: 71, baseType: !55, size: 16, offset: 208)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1261, file: !1229, line: 72, baseType: !186, size: 64, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1261, file: !1229, line: 75, baseType: !153, size: 32, offset: 288)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1261, file: !1229, line: 75, baseType: !153, size: 32, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1261, file: !1229, line: 75, baseType: !153, size: 32, offset: 352)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1261, file: !1229, line: 78, baseType: !153, size: 32, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1261, file: !1229, line: 78, baseType: !153, size: 32, offset: 416)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1228, file: !1229, line: 343, baseType: !82, size: 128, offset: 1024)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1228, file: !1229, line: 344, baseType: !82, size: 128, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1228, file: !1229, line: 345, baseType: !1280, size: 192, offset: 1280)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1229, line: 278, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1229, line: 270, size: 192, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1281, file: !1229, line: 271, baseType: !57, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1281, file: !1229, line: 273, baseType: !153, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1281, file: !1229, line: 275, baseType: !57, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1281, file: !1229, line: 276, baseType: !57, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1281, file: !1229, line: 277, baseType: !1288, size: 64, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1229, line: 55, size: 576, elements: !1290)
!1290 = !{!1291, !1292, !1293}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1289, file: !1229, line: 56, baseType: !57, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1289, file: !1229, line: 57, baseType: !153, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1289, file: !1229, line: 58, baseType: !1294, size: 512, offset: 64)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 512, elements: !1295)
!1295 = !{!165, !165}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1228, file: !1229, line: 346, baseType: !1297, size: 384, offset: 1472)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1229, line: 268, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1229, line: 253, size: 384, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !1304, !1348, !1349, !1350, !1351, !1352, !1353}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1298, file: !1229, line: 254, baseType: !57, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1298, file: !1229, line: 255, baseType: !57, size: 32, offset: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1298, file: !1229, line: 255, baseType: !57, size: 32, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1298, file: !1229, line: 258, baseType: !153, size: 32, offset: 96)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1298, file: !1229, line: 259, baseType: !1305, size: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1229, line: 164, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1229, line: 108, size: 1664, elements: !1308)
!1308 = !{!1309, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1307, file: !1229, line: 109, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1307, file: !1229, line: 109, baseType: !1310, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1307, file: !1229, line: 111, baseType: !72, size: 512, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1307, file: !1229, line: 119, baseType: !186, size: 64, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1307, file: !1229, line: 119, baseType: !186, size: 64, offset: 704)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1307, file: !1229, line: 125, baseType: !186, size: 64, offset: 768)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1307, file: !1229, line: 125, baseType: !186, size: 64, offset: 832)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1307, file: !1229, line: 127, baseType: !186, size: 64, offset: 896)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1307, file: !1229, line: 130, baseType: !57, size: 32, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1307, file: !1229, line: 131, baseType: !57, size: 32, offset: 992)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1307, file: !1229, line: 132, baseType: !1321, size: 64, offset: 1024)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1229, line: 106, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1229, line: 81, size: 512, elements: !1324)
!1324 = !{!1325, !1326, !1329, !1330, !1331, !1332}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1323, file: !1229, line: 82, baseType: !186, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1323, file: !1229, line: 97, baseType: !1327, size: 256, offset: 64)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 256, elements: !1328)
!1328 = !{!165, !143}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1323, file: !1229, line: 102, baseType: !186, size: 64, offset: 320)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1323, file: !1229, line: 102, baseType: !186, size: 64, offset: 384)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1323, file: !1229, line: 104, baseType: !57, size: 32, offset: 448)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1323, file: !1229, line: 105, baseType: !57, size: 32, offset: 480)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1307, file: !1229, line: 135, baseType: !233, size: 96, offset: 1088)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1307, file: !1229, line: 136, baseType: !153, size: 32, offset: 1184)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1307, file: !1229, line: 139, baseType: !57, size: 32, offset: 1216)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1307, file: !1229, line: 139, baseType: !57, size: 32, offset: 1248)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1307, file: !1229, line: 139, baseType: !57, size: 32, offset: 1280)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1307, file: !1229, line: 140, baseType: !233, size: 96, offset: 1312)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1307, file: !1229, line: 143, baseType: !55, size: 16, offset: 1408)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1307, file: !1229, line: 144, baseType: !55, size: 16, offset: 1424)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1307, file: !1229, line: 145, baseType: !55, size: 16, offset: 1440)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1307, file: !1229, line: 148, baseType: !55, size: 16, offset: 1456)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1307, file: !1229, line: 149, baseType: !57, size: 32, offset: 1472)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1307, file: !1229, line: 150, baseType: !153, size: 32, offset: 1504)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1307, file: !1229, line: 152, baseType: !854, size: 64, offset: 1536)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1307, file: !1229, line: 163, baseType: !153, size: 32, offset: 1600)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1307, file: !1229, line: 163, baseType: !153, size: 32, offset: 1632)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1298, file: !1229, line: 261, baseType: !153, size: 32, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1298, file: !1229, line: 261, baseType: !153, size: 32, offset: 224)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1298, file: !1229, line: 261, baseType: !153, size: 32, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1298, file: !1229, line: 263, baseType: !57, size: 32, offset: 288)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1298, file: !1229, line: 266, baseType: !57, size: 32, offset: 320)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1298, file: !1229, line: 267, baseType: !153, size: 32, offset: 352)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1228, file: !1229, line: 347, baseType: !1305, size: 64, offset: 1856)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1228, file: !1229, line: 348, baseType: !1356, size: 64, offset: 1920)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1229, line: 205, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1229, line: 186, size: 1024, elements: !1359)
!1359 = !{!1360, !1362, !1363, !1364, !1366, !1367, !1368, !1376, !1377, !1378, !1379, !1380}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1358, file: !1229, line: 187, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1358, file: !1229, line: 187, baseType: !1361, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1358, file: !1229, line: 189, baseType: !72, size: 512, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1358, file: !1229, line: 191, baseType: !1365, size: 64, offset: 640)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1358, file: !1229, line: 193, baseType: !57, size: 32, offset: 704)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1358, file: !1229, line: 193, baseType: !57, size: 32, offset: 736)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1358, file: !1229, line: 195, baseType: !1369, size: 64, offset: 768)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1229, line: 184, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1229, line: 166, size: 320, elements: !1372)
!1372 = !{!1373, !1374, !1375}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1371, file: !1229, line: 180, baseType: !1327, size: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1371, file: !1229, line: 182, baseType: !57, size: 32, offset: 256)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1371, file: !1229, line: 183, baseType: !57, size: 32, offset: 288)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1358, file: !1229, line: 196, baseType: !57, size: 32, offset: 832)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1358, file: !1229, line: 198, baseType: !57, size: 32, offset: 864)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1358, file: !1229, line: 200, baseType: !96, size: 64, offset: 896)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1358, file: !1229, line: 201, baseType: !153, size: 32, offset: 960)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1358, file: !1229, line: 204, baseType: !57, size: 32, offset: 992)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1228, file: !1229, line: 350, baseType: !82, size: 128, offset: 1984)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1228, file: !1229, line: 351, baseType: !57, size: 32, offset: 2112)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1228, file: !1229, line: 351, baseType: !57, size: 32, offset: 2144)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1228, file: !1229, line: 353, baseType: !1385, size: 64, offset: 2176)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1229, line: 297, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1229, line: 295, size: 2048, elements: !1388)
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1387, file: !1229, line: 296, baseType: !389, size: 2048)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1228, file: !1229, line: 355, baseType: !1391, size: 384, offset: 2240)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1229, line: 338, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1229, line: 322, size: 384, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1392, file: !1229, line: 323, baseType: !57, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1392, file: !1229, line: 325, baseType: !55, size: 16, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1392, file: !1229, line: 326, baseType: !55, size: 16, offset: 48)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1392, file: !1229, line: 331, baseType: !82, size: 128, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1392, file: !1229, line: 334, baseType: !82, size: 128, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1392, file: !1229, line: 335, baseType: !57, size: 32, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1392, file: !1229, line: 337, baseType: !57, size: 32, offset: 352)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1211, file: !1212, line: 81, baseType: !26, size: 64, offset: 12224)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1211, file: !1212, line: 85, baseType: !1403, size: 6208, offset: 12288)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1212, line: 55, size: 6208, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1403, file: !1212, line: 56, baseType: !1164, size: 6144)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1403, file: !1212, line: 58, baseType: !55, size: 16, offset: 6144)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1403, file: !1212, line: 59, baseType: !55, size: 16, offset: 6160)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1403, file: !1212, line: 60, baseType: !55, size: 16, offset: 6176)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1403, file: !1212, line: 61, baseType: !55, size: 16, offset: 6192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1211, file: !1212, line: 86, baseType: !57, size: 32, offset: 18496)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1211, file: !1212, line: 88, baseType: !57, size: 32, offset: 18528)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1211, file: !1212, line: 90, baseType: !57, size: 32, offset: 18560)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1211, file: !1212, line: 94, baseType: !57, size: 32, offset: 18592)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1211, file: !1212, line: 100, baseType: !169, size: 512, offset: 18624)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1116, file: !1107, line: 154, baseType: !1416, size: 64, offset: 1664)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1418, line: 264, flags: DIFlagFwdDecl)
!1418 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1116, file: !1107, line: 156, baseType: !109, size: 64, offset: 1728)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1116, file: !1107, line: 158, baseType: !153, size: 32, offset: 1792)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1116, file: !1107, line: 159, baseType: !153, size: 32, offset: 1824)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1116, file: !1107, line: 162, baseType: !1119, size: 64, offset: 1856)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1116, file: !1107, line: 162, baseType: !1119, size: 64, offset: 1920)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1116, file: !1107, line: 162, baseType: !1119, size: 64, offset: 1984)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1116, file: !1107, line: 164, baseType: !82, size: 128, offset: 2048)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1116, file: !1107, line: 166, baseType: !1427, size: 64, offset: 2176)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1107, line: 51, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1116, file: !1107, line: 167, baseType: !26, size: 64, offset: 2240)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1116, file: !1107, line: 168, baseType: !153, size: 32, offset: 2304)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1116, file: !1107, line: 170, baseType: !153, size: 32, offset: 2336)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1116, file: !1107, line: 170, baseType: !153, size: 32, offset: 2368)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1116, file: !1107, line: 171, baseType: !153, size: 32, offset: 2400)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1116, file: !1107, line: 173, baseType: !26, size: 64, offset: 2432)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1116, file: !1107, line: 175, baseType: !57, size: 32, offset: 2496)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1116, file: !1107, line: 176, baseType: !57, size: 32, offset: 2528)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1116, file: !1107, line: 179, baseType: !57, size: 32, offset: 2560)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1116, file: !1107, line: 180, baseType: !153, size: 32, offset: 2592)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1116, file: !1107, line: 183, baseType: !57, size: 32, offset: 2624)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1116, file: !1107, line: 185, baseType: !42, size: 8, offset: 2656)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1116, file: !1107, line: 186, baseType: !1442, size: 24, offset: 2664)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 24, elements: !234)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1116, file: !1107, line: 189, baseType: !82, size: 128, offset: 2688)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1106, file: !1107, line: 207, baseType: !41, size: 8192, offset: 384)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1106, file: !1107, line: 208, baseType: !41, size: 8192, offset: 8576)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1106, file: !1107, line: 210, baseType: !57, size: 32, offset: 16768)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1106, file: !1107, line: 210, baseType: !57, size: 32, offset: 16800)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1106, file: !1107, line: 211, baseType: !57, size: 32, offset: 16832)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1106, file: !1107, line: 211, baseType: !57, size: 32, offset: 16864)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1106, file: !1107, line: 212, baseType: !198, size: 128, offset: 16896)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !281, file: !8, line: 1246, baseType: !1452, size: 64, offset: 2112)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !8, line: 1067, size: 5184, elements: !1454)
!1454 = !{!1455, !1479, !1480, !1481, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1503, !1519, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1629}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1453, file: !8, line: 1068, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !8, line: 934, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !8, line: 925, size: 576, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1478}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1458, file: !8, line: 926, baseType: !12, size: 320)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1458, file: !8, line: 928, baseType: !55, size: 16, offset: 320)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1458, file: !8, line: 928, baseType: !55, size: 16, offset: 336)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1458, file: !8, line: 929, baseType: !57, size: 32, offset: 352)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1458, file: !8, line: 930, baseType: !134, size: 64, offset: 384)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1458, file: !8, line: 931, baseType: !1466, size: 64, offset: 448)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1468, line: 59, size: 128, elements: !1469)
!1468 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1469 = !{!1470, !1476, !1477}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1467, file: !1468, line: 60, baseType: !1471, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1468, line: 54, size: 64, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1472, file: !1468, line: 55, baseType: !57, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1472, file: !1468, line: 56, baseType: !153, size: 32, offset: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1467, file: !1468, line: 61, baseType: !57, size: 32, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1467, file: !1468, line: 62, baseType: !57, size: 32, offset: 96)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1458, file: !8, line: 933, baseType: !26, size: 64, offset: 512)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1453, file: !8, line: 1069, baseType: !1456, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1453, file: !8, line: 1070, baseType: !6, size: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1453, file: !8, line: 1071, baseType: !1482, size: 64, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !8, line: 920, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !8, line: 918, size: 320, elements: !1485)
!1485 = !{!1486}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1484, file: !8, line: 919, baseType: !12, size: 320)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1453, file: !8, line: 1075, baseType: !153, size: 32, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1453, file: !8, line: 1077, baseType: !153, size: 32, offset: 288)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1453, file: !8, line: 1078, baseType: !153, size: 32, offset: 320)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1453, file: !8, line: 1079, baseType: !55, size: 16, offset: 352)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1453, file: !8, line: 1082, baseType: !55, size: 16, offset: 368)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1453, file: !8, line: 1085, baseType: !42, size: 8, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1453, file: !8, line: 1086, baseType: !42, size: 8, offset: 392)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1453, file: !8, line: 1087, baseType: !42, size: 8, offset: 400)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1453, file: !8, line: 1088, baseType: !42, size: 8, offset: 408)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1453, file: !8, line: 1090, baseType: !153, size: 32, offset: 416)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1453, file: !8, line: 1093, baseType: !55, size: 16, offset: 448)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1453, file: !8, line: 1096, baseType: !42, size: 8, offset: 464)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1453, file: !8, line: 1098, baseType: !1500, size: 40, offset: 472)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 40, elements: !1501)
!1501 = !{!1502}
!1502 = !DISubrange(count: 5)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1453, file: !8, line: 1101, baseType: !1504, size: 832, offset: 512)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !8, line: 836, size: 832, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1504, file: !8, line: 837, baseType: !12, size: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1504, file: !8, line: 839, baseType: !55, size: 16, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1504, file: !8, line: 839, baseType: !55, size: 16, offset: 336)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1504, file: !8, line: 842, baseType: !55, size: 16, offset: 352)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1504, file: !8, line: 842, baseType: !55, size: 16, offset: 368)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1504, file: !8, line: 843, baseType: !146, size: 32, offset: 384)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1504, file: !8, line: 845, baseType: !57, size: 32, offset: 416)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1504, file: !8, line: 847, baseType: !26, size: 64, offset: 448)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1504, file: !8, line: 848, baseType: !96, size: 64, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1504, file: !8, line: 849, baseType: !96, size: 64, offset: 576)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1504, file: !8, line: 850, baseType: !96, size: 64, offset: 640)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1504, file: !8, line: 851, baseType: !233, size: 96, offset: 704)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1504, file: !8, line: 852, baseType: !153, size: 32, offset: 800)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1453, file: !8, line: 1104, baseType: !1520, size: 1344, offset: 1344)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !8, line: 867, size: 1344, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525, !1526, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1520, file: !8, line: 868, baseType: !55, size: 16)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1520, file: !8, line: 869, baseType: !55, size: 16, offset: 16)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1520, file: !8, line: 870, baseType: !55, size: 16, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1520, file: !8, line: 871, baseType: !55, size: 16, offset: 48)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1520, file: !8, line: 873, baseType: !1527, size: 896, offset: 64)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 896, elements: !177)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !8, line: 864, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !8, line: 859, size: 128, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535, !1536}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1529, file: !8, line: 860, baseType: !55, size: 16)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1529, file: !8, line: 861, baseType: !55, size: 16, offset: 16)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1529, file: !8, line: 861, baseType: !55, size: 16, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1529, file: !8, line: 861, baseType: !55, size: 16, offset: 48)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1529, file: !8, line: 862, baseType: !57, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1529, file: !8, line: 863, baseType: !153, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1520, file: !8, line: 874, baseType: !26, size: 64, offset: 960)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1520, file: !8, line: 876, baseType: !153, size: 32, offset: 1024)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1520, file: !8, line: 876, baseType: !153, size: 32, offset: 1056)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1520, file: !8, line: 878, baseType: !57, size: 32, offset: 1088)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1520, file: !8, line: 879, baseType: !57, size: 32, offset: 1120)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1520, file: !8, line: 881, baseType: !57, size: 32, offset: 1152)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1520, file: !8, line: 881, baseType: !57, size: 32, offset: 1184)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1520, file: !8, line: 883, baseType: !280, size: 64, offset: 1216)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1520, file: !8, line: 884, baseType: !248, size: 64, offset: 1280)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1453, file: !8, line: 1107, baseType: !153, size: 32, offset: 2688)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1453, file: !8, line: 1110, baseType: !153, size: 32, offset: 2720)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1453, file: !8, line: 1113, baseType: !55, size: 16, offset: 2752)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1453, file: !8, line: 1113, baseType: !55, size: 16, offset: 2768)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1453, file: !8, line: 1116, baseType: !42, size: 8, offset: 2784)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1453, file: !8, line: 1117, baseType: !1100, size: 8, offset: 2792)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1453, file: !8, line: 1120, baseType: !55, size: 16, offset: 2800)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1453, file: !8, line: 1121, baseType: !153, size: 32, offset: 2816)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1453, file: !8, line: 1122, baseType: !153, size: 32, offset: 2848)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1453, file: !8, line: 1123, baseType: !153, size: 32, offset: 2880)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1453, file: !8, line: 1124, baseType: !153, size: 32, offset: 2912)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1453, file: !8, line: 1125, baseType: !153, size: 32, offset: 2944)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1453, file: !8, line: 1126, baseType: !153, size: 32, offset: 2976)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1453, file: !8, line: 1127, baseType: !153, size: 32, offset: 3008)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1453, file: !8, line: 1128, baseType: !153, size: 32, offset: 3040)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1453, file: !8, line: 1129, baseType: !153, size: 32, offset: 3072)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1453, file: !8, line: 1130, baseType: !153, size: 32, offset: 3104)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1453, file: !8, line: 1131, baseType: !55, size: 16, offset: 3136)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1453, file: !8, line: 1132, baseType: !42, size: 8, offset: 3152)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1453, file: !8, line: 1133, baseType: !42, size: 8, offset: 3160)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1453, file: !8, line: 1134, baseType: !1442, size: 24, offset: 3168)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1453, file: !8, line: 1135, baseType: !42, size: 8, offset: 3192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1453, file: !8, line: 1138, baseType: !248, size: 64, offset: 3200)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1453, file: !8, line: 1139, baseType: !42, size: 8, offset: 3264)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1453, file: !8, line: 1140, baseType: !42, size: 8, offset: 3272)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1453, file: !8, line: 1141, baseType: !42, size: 8, offset: 3280)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1453, file: !8, line: 1142, baseType: !42, size: 8, offset: 3288)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1453, file: !8, line: 1143, baseType: !42, size: 8, offset: 3296)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1453, file: !8, line: 1144, baseType: !1575, size: 64, offset: 3304)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 64, elements: !116)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1453, file: !8, line: 1145, baseType: !1575, size: 64, offset: 3368)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1453, file: !8, line: 1148, baseType: !42, size: 8, offset: 3432)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1453, file: !8, line: 1149, baseType: !42, size: 8, offset: 3440)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1453, file: !8, line: 1152, baseType: !42, size: 8, offset: 3448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1453, file: !8, line: 1152, baseType: !42, size: 8, offset: 3456)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1453, file: !8, line: 1153, baseType: !42, size: 8, offset: 3464)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1453, file: !8, line: 1154, baseType: !55, size: 16, offset: 3472)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1453, file: !8, line: 1154, baseType: !55, size: 16, offset: 3488)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1453, file: !8, line: 1155, baseType: !55, size: 16, offset: 3504)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1453, file: !8, line: 1155, baseType: !55, size: 16, offset: 3520)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1453, file: !8, line: 1156, baseType: !42, size: 8, offset: 3536)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1453, file: !8, line: 1157, baseType: !42, size: 8, offset: 3544)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1453, file: !8, line: 1159, baseType: !42, size: 8, offset: 3552)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1453, file: !8, line: 1160, baseType: !42, size: 8, offset: 3560)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1453, file: !8, line: 1161, baseType: !42, size: 8, offset: 3568)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1453, file: !8, line: 1162, baseType: !42, size: 8, offset: 3576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1453, file: !8, line: 1165, baseType: !57, size: 32, offset: 3584)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1453, file: !8, line: 1166, baseType: !57, size: 32, offset: 3616)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1453, file: !8, line: 1167, baseType: !57, size: 32, offset: 3648)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1453, file: !8, line: 1168, baseType: !57, size: 32, offset: 3680)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1453, file: !8, line: 1171, baseType: !55, size: 16, offset: 3712)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1453, file: !8, line: 1171, baseType: !55, size: 16, offset: 3728)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1453, file: !8, line: 1172, baseType: !57, size: 32, offset: 3744)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1453, file: !8, line: 1173, baseType: !153, size: 32, offset: 3776)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1453, file: !8, line: 1174, baseType: !153, size: 32, offset: 3808)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1453, file: !8, line: 1177, baseType: !1602, size: 1024, offset: 3840)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !8, line: 963, size: 1024, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1627, !1628}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1602, file: !8, line: 965, baseType: !57, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1602, file: !8, line: 968, baseType: !153, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1602, file: !8, line: 971, baseType: !153, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1602, file: !8, line: 974, baseType: !153, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1602, file: !8, line: 977, baseType: !233, size: 96, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1602, file: !8, line: 979, baseType: !233, size: 96, offset: 224)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1602, file: !8, line: 982, baseType: !57, size: 32, offset: 320)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1602, file: !8, line: 987, baseType: !186, size: 64, offset: 352)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1602, file: !8, line: 989, baseType: !153, size: 32, offset: 416)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1602, file: !8, line: 994, baseType: !57, size: 32, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1602, file: !8, line: 995, baseType: !57, size: 32, offset: 480)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1602, file: !8, line: 997, baseType: !42, size: 8, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1602, file: !8, line: 998, baseType: !176, size: 56, offset: 520)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1602, file: !8, line: 1000, baseType: !153, size: 32, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1602, file: !8, line: 1003, baseType: !186, size: 64, offset: 608)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1602, file: !8, line: 1006, baseType: !57, size: 32, offset: 672)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1602, file: !8, line: 1009, baseType: !153, size: 32, offset: 704)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1602, file: !8, line: 1012, baseType: !186, size: 64, offset: 736)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1602, file: !8, line: 1015, baseType: !186, size: 64, offset: 800)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1602, file: !8, line: 1018, baseType: !57, size: 32, offset: 864)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1602, file: !8, line: 1019, baseType: !1625, size: 64, offset: 896)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !8, line: 63, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1602, file: !8, line: 1023, baseType: !153, size: 32, offset: 960)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1602, file: !8, line: 1024, baseType: !57, size: 32, offset: 992)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1453, file: !8, line: 1179, baseType: !1630, size: 320, offset: 4864)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !8, line: 1043, size: 320, elements: !1631)
!1631 = !{!1632, !1633, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1630, file: !8, line: 1044, baseType: !42, size: 8)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1630, file: !8, line: 1045, baseType: !1634, size: 16, offset: 8)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 16, elements: !142)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1630, file: !8, line: 1048, baseType: !42, size: 8, offset: 24)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1630, file: !8, line: 1049, baseType: !153, size: 32, offset: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1630, file: !8, line: 1049, baseType: !153, size: 32, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1630, file: !8, line: 1052, baseType: !153, size: 32, offset: 96)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1630, file: !8, line: 1052, baseType: !153, size: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1630, file: !8, line: 1053, baseType: !42, size: 8, offset: 160)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1630, file: !8, line: 1054, baseType: !1442, size: 24, offset: 168)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1630, file: !8, line: 1057, baseType: !153, size: 32, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1630, file: !8, line: 1057, baseType: !153, size: 32, offset: 224)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1630, file: !8, line: 1060, baseType: !153, size: 32, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1630, file: !8, line: 1060, baseType: !153, size: 32, offset: 288)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !281, file: !8, line: 1247, baseType: !1647, size: 64, offset: 2176)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !8, line: 60, flags: DIFlagFwdDecl)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !281, file: !8, line: 1251, baseType: !1650, size: 31872, offset: 2240)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !8, line: 403, size: 31872, elements: !1651)
!1651 = !{!1652, !1686, !1706, !1715, !1735, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1866, !1867, !1868, !1872, !1888, !1889}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1650, file: !8, line: 404, baseType: !1653, size: 1984)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !8, line: 259, size: 1984, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1681}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1653, file: !8, line: 260, baseType: !42, size: 8)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1653, file: !8, line: 263, baseType: !42, size: 8, offset: 8)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1653, file: !8, line: 266, baseType: !42, size: 8, offset: 16)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1653, file: !8, line: 267, baseType: !42, size: 8, offset: 24)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1653, file: !8, line: 269, baseType: !42, size: 8, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1653, file: !8, line: 270, baseType: !42, size: 8, offset: 40)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1653, file: !8, line: 276, baseType: !42, size: 8, offset: 48)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1653, file: !8, line: 279, baseType: !42, size: 8, offset: 56)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1653, file: !8, line: 280, baseType: !55, size: 16, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1653, file: !8, line: 280, baseType: !55, size: 16, offset: 80)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1653, file: !8, line: 281, baseType: !153, size: 32, offset: 96)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1653, file: !8, line: 284, baseType: !42, size: 8, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1653, file: !8, line: 285, baseType: !42, size: 8, offset: 136)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1653, file: !8, line: 287, baseType: !712, size: 48, offset: 144)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1653, file: !8, line: 290, baseType: !1670, size: 1280, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !170, line: 174, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !170, line: 166, size: 1280, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1671, file: !170, line: 167, baseType: !57, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1671, file: !170, line: 167, baseType: !57, size: 32, offset: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1671, file: !170, line: 168, baseType: !72, size: 512, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1671, file: !170, line: 169, baseType: !72, size: 512, offset: 576)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1671, file: !170, line: 170, baseType: !153, size: 32, offset: 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1671, file: !170, line: 171, baseType: !153, size: 32, offset: 1120)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1671, file: !170, line: 172, baseType: !190, size: 64, offset: 1152)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1671, file: !170, line: 173, baseType: !26, size: 64, offset: 1216)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1653, file: !8, line: 291, baseType: !1682, size: 512, offset: 1472)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !170, line: 178, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !170, line: 176, size: 512, elements: !1684)
!1684 = !{!1685}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1683, file: !170, line: 177, baseType: !72, size: 512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1650, file: !8, line: 406, baseType: !1687, size: 64, offset: 1984)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !8, line: 80, size: 1472, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1688, file: !8, line: 81, baseType: !26, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1688, file: !8, line: 82, baseType: !26, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1688, file: !8, line: 83, baseType: !132, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1688, file: !8, line: 84, baseType: !132, size: 32, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1688, file: !8, line: 86, baseType: !132, size: 32, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1688, file: !8, line: 87, baseType: !132, size: 32, offset: 224)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1688, file: !8, line: 88, baseType: !132, size: 32, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1688, file: !8, line: 89, baseType: !132, size: 32, offset: 288)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1688, file: !8, line: 90, baseType: !132, size: 32, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1688, file: !8, line: 91, baseType: !132, size: 32, offset: 352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1688, file: !8, line: 92, baseType: !132, size: 32, offset: 384)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1688, file: !8, line: 93, baseType: !132, size: 32, offset: 416)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1688, file: !8, line: 95, baseType: !1703, size: 1024, offset: 448)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1024, elements: !1704)
!1704 = !{!1705}
!1705 = !DISubrange(count: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1650, file: !8, line: 407, baseType: !1707, size: 64, offset: 2048)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !8, line: 98, size: 1216, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1708, file: !8, line: 100, baseType: !26, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1708, file: !8, line: 101, baseType: !26, size: 64, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1708, file: !8, line: 103, baseType: !132, size: 32, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1708, file: !8, line: 104, baseType: !132, size: 32, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1708, file: !8, line: 106, baseType: !1703, size: 1024, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1650, file: !8, line: 408, baseType: !1716, size: 512, offset: 2112)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !8, line: 109, size: 512, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1716, file: !8, line: 111, baseType: !57, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1716, file: !8, line: 112, baseType: !57, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1716, file: !8, line: 115, baseType: !57, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1716, file: !8, line: 116, baseType: !57, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1716, file: !8, line: 117, baseType: !57, size: 32, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1716, file: !8, line: 118, baseType: !57, size: 32, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1716, file: !8, line: 119, baseType: !57, size: 32, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1716, file: !8, line: 120, baseType: !57, size: 32, offset: 224)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1716, file: !8, line: 121, baseType: !57, size: 32, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1716, file: !8, line: 122, baseType: !57, size: 32, offset: 288)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1716, file: !8, line: 125, baseType: !57, size: 32, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1716, file: !8, line: 126, baseType: !57, size: 32, offset: 352)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1716, file: !8, line: 127, baseType: !55, size: 16, offset: 384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1716, file: !8, line: 128, baseType: !55, size: 16, offset: 400)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1716, file: !8, line: 129, baseType: !57, size: 32, offset: 416)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1716, file: !8, line: 130, baseType: !57, size: 32, offset: 448)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1716, file: !8, line: 131, baseType: !57, size: 32, offset: 480)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1650, file: !8, line: 409, baseType: !1736, size: 576, offset: 2624)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !8, line: 134, size: 576, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !8, line: 135, baseType: !57, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1736, file: !8, line: 136, baseType: !57, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1736, file: !8, line: 137, baseType: !57, size: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1736, file: !8, line: 138, baseType: !57, size: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1736, file: !8, line: 139, baseType: !57, size: 32, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1736, file: !8, line: 140, baseType: !57, size: 32, offset: 160)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1736, file: !8, line: 141, baseType: !57, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1736, file: !8, line: 142, baseType: !57, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1736, file: !8, line: 143, baseType: !153, size: 32, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1736, file: !8, line: 144, baseType: !57, size: 32, offset: 288)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1736, file: !8, line: 145, baseType: !57, size: 32, offset: 320)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1736, file: !8, line: 147, baseType: !57, size: 32, offset: 352)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1736, file: !8, line: 148, baseType: !57, size: 32, offset: 384)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1736, file: !8, line: 149, baseType: !57, size: 32, offset: 416)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1736, file: !8, line: 150, baseType: !57, size: 32, offset: 448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1736, file: !8, line: 151, baseType: !57, size: 32, offset: 480)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1736, file: !8, line: 152, baseType: !61, size: 64, offset: 512)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1650, file: !8, line: 411, baseType: !57, size: 32, offset: 3200)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1650, file: !8, line: 411, baseType: !57, size: 32, offset: 3232)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1650, file: !8, line: 411, baseType: !57, size: 32, offset: 3264)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1650, file: !8, line: 412, baseType: !153, size: 32, offset: 3296)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1650, file: !8, line: 413, baseType: !57, size: 32, offset: 3328)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1650, file: !8, line: 413, baseType: !57, size: 32, offset: 3360)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1650, file: !8, line: 415, baseType: !57, size: 32, offset: 3392)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1650, file: !8, line: 415, baseType: !57, size: 32, offset: 3424)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1650, file: !8, line: 416, baseType: !55, size: 16, offset: 3456)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1650, file: !8, line: 416, baseType: !55, size: 16, offset: 3472)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1650, file: !8, line: 418, baseType: !153, size: 32, offset: 3488)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1650, file: !8, line: 418, baseType: !153, size: 32, offset: 3520)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1650, file: !8, line: 421, baseType: !153, size: 32, offset: 3552)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1650, file: !8, line: 421, baseType: !153, size: 32, offset: 3584)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1650, file: !8, line: 421, baseType: !153, size: 32, offset: 3616)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1650, file: !8, line: 425, baseType: !55, size: 16, offset: 3648)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1650, file: !8, line: 425, baseType: !55, size: 16, offset: 3664)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1650, file: !8, line: 425, baseType: !55, size: 16, offset: 3680)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1650, file: !8, line: 426, baseType: !55, size: 16, offset: 3696)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1650, file: !8, line: 428, baseType: !55, size: 16, offset: 3712)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1650, file: !8, line: 428, baseType: !55, size: 16, offset: 3728)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1650, file: !8, line: 431, baseType: !57, size: 32, offset: 3744)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1650, file: !8, line: 433, baseType: !55, size: 16, offset: 3776)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1650, file: !8, line: 435, baseType: !55, size: 16, offset: 3792)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1650, file: !8, line: 437, baseType: !55, size: 16, offset: 3808)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1650, file: !8, line: 439, baseType: !55, size: 16, offset: 3824)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1650, file: !8, line: 441, baseType: !55, size: 16, offset: 3840)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1650, file: !8, line: 443, baseType: !55, size: 16, offset: 3856)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1650, file: !8, line: 449, baseType: !57, size: 32, offset: 3872)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1650, file: !8, line: 453, baseType: !57, size: 32, offset: 3904)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1650, file: !8, line: 458, baseType: !55, size: 16, offset: 3936)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1650, file: !8, line: 462, baseType: !55, size: 16, offset: 3952)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1650, file: !8, line: 467, baseType: !57, size: 32, offset: 3968)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1650, file: !8, line: 467, baseType: !57, size: 32, offset: 4000)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1650, file: !8, line: 469, baseType: !55, size: 16, offset: 4032)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1650, file: !8, line: 469, baseType: !55, size: 16, offset: 4048)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1650, file: !8, line: 469, baseType: !55, size: 16, offset: 4064)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1650, file: !8, line: 469, baseType: !55, size: 16, offset: 4080)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1650, file: !8, line: 474, baseType: !55, size: 16, offset: 4096)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1650, file: !8, line: 475, baseType: !42, size: 8, offset: 4112)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1650, file: !8, line: 476, baseType: !42, size: 8, offset: 4120)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1650, file: !8, line: 481, baseType: !57, size: 32, offset: 4128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1650, file: !8, line: 486, baseType: !57, size: 32, offset: 4160)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1650, file: !8, line: 491, baseType: !57, size: 32, offset: 4192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1650, file: !8, line: 496, baseType: !55, size: 16, offset: 4224)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1650, file: !8, line: 498, baseType: !55, size: 16, offset: 4240)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1650, file: !8, line: 501, baseType: !55, size: 16, offset: 4256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1650, file: !8, line: 502, baseType: !55, size: 16, offset: 4272)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1650, file: !8, line: 508, baseType: !55, size: 16, offset: 4288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1650, file: !8, line: 513, baseType: !55, size: 16, offset: 4304)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1650, file: !8, line: 515, baseType: !55, size: 16, offset: 4320)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1650, file: !8, line: 515, baseType: !55, size: 16, offset: 4336)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1650, file: !8, line: 519, baseType: !198, size: 128, offset: 4352)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1650, file: !8, line: 519, baseType: !198, size: 128, offset: 4480)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1650, file: !8, line: 520, baseType: !610, size: 128, offset: 4608)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1650, file: !8, line: 523, baseType: !82, size: 128, offset: 4736)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1650, file: !8, line: 524, baseType: !55, size: 16, offset: 4864)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1650, file: !8, line: 527, baseType: !55, size: 16, offset: 4880)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1650, file: !8, line: 532, baseType: !153, size: 32, offset: 4896)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1650, file: !8, line: 532, baseType: !153, size: 32, offset: 4928)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1650, file: !8, line: 534, baseType: !153, size: 32, offset: 4960)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1650, file: !8, line: 538, baseType: !153, size: 32, offset: 4992)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1650, file: !8, line: 542, baseType: !57, size: 32, offset: 5024)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1650, file: !8, line: 545, baseType: !153, size: 32, offset: 5056)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1650, file: !8, line: 545, baseType: !153, size: 32, offset: 5088)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1650, file: !8, line: 545, baseType: !153, size: 32, offset: 5120)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1650, file: !8, line: 548, baseType: !153, size: 32, offset: 5152)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1650, file: !8, line: 551, baseType: !55, size: 16, offset: 5184)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1650, file: !8, line: 551, baseType: !55, size: 16, offset: 5200)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1650, file: !8, line: 551, baseType: !55, size: 16, offset: 5216)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1650, file: !8, line: 551, baseType: !55, size: 16, offset: 5232)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1650, file: !8, line: 552, baseType: !55, size: 16, offset: 5248)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1650, file: !8, line: 552, baseType: !55, size: 16, offset: 5264)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1650, file: !8, line: 553, baseType: !153, size: 32, offset: 5280)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1650, file: !8, line: 553, baseType: !153, size: 32, offset: 5312)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1650, file: !8, line: 554, baseType: !55, size: 16, offset: 5344)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1650, file: !8, line: 554, baseType: !55, size: 16, offset: 5360)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1650, file: !8, line: 555, baseType: !153, size: 32, offset: 5376)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1650, file: !8, line: 555, baseType: !153, size: 32, offset: 5408)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1650, file: !8, line: 558, baseType: !41, size: 8192, offset: 5440)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1650, file: !8, line: 561, baseType: !57, size: 32, offset: 13632)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1650, file: !8, line: 562, baseType: !55, size: 16, offset: 13664)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1650, file: !8, line: 562, baseType: !55, size: 16, offset: 13680)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1650, file: !8, line: 565, baseType: !1164, size: 6144, offset: 13696)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1650, file: !8, line: 568, baseType: !163, size: 128, offset: 19840)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1650, file: !8, line: 569, baseType: !163, size: 128, offset: 19968)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1650, file: !8, line: 572, baseType: !42, size: 8, offset: 20096)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1650, file: !8, line: 573, baseType: !42, size: 8, offset: 20104)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1650, file: !8, line: 574, baseType: !42, size: 8, offset: 20112)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1650, file: !8, line: 575, baseType: !1500, size: 40, offset: 20120)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1650, file: !8, line: 578, baseType: !57, size: 32, offset: 20160)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1650, file: !8, line: 579, baseType: !55, size: 16, offset: 20192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1650, file: !8, line: 580, baseType: !55, size: 16, offset: 20208)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1650, file: !8, line: 581, baseType: !153, size: 32, offset: 20224)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1650, file: !8, line: 582, baseType: !153, size: 32, offset: 20256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1650, file: !8, line: 585, baseType: !55, size: 16, offset: 20288)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1650, file: !8, line: 585, baseType: !55, size: 16, offset: 20304)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1650, file: !8, line: 586, baseType: !153, size: 32, offset: 20320)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1650, file: !8, line: 589, baseType: !55, size: 16, offset: 20352)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1650, file: !8, line: 589, baseType: !55, size: 16, offset: 20368)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1650, file: !8, line: 590, baseType: !57, size: 32, offset: 20384)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1650, file: !8, line: 593, baseType: !55, size: 16, offset: 20416)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1650, file: !8, line: 593, baseType: !55, size: 16, offset: 20432)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1650, file: !8, line: 594, baseType: !55, size: 16, offset: 20448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1650, file: !8, line: 594, baseType: !55, size: 16, offset: 20464)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1650, file: !8, line: 595, baseType: !153, size: 32, offset: 20480)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1650, file: !8, line: 596, baseType: !153, size: 32, offset: 20512)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1650, file: !8, line: 597, baseType: !1863, size: 64, offset: 20544)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1865, line: 44, flags: DIFlagFwdDecl)
!1865 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1650, file: !8, line: 600, baseType: !57, size: 32, offset: 20608)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1650, file: !8, line: 601, baseType: !153, size: 32, offset: 20640)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1650, file: !8, line: 604, baseType: !1869, size: 256, offset: 20672)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 256, elements: !1870)
!1870 = !{!1871}
!1871 = !DISubrange(count: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1650, file: !8, line: 607, baseType: !1873, size: 10880, offset: 20928)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !8, line: 364, size: 10880, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1873, file: !8, line: 365, baseType: !1653, size: 1984)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1873, file: !8, line: 367, baseType: !41, size: 8192, offset: 1984)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1873, file: !8, line: 369, baseType: !55, size: 16, offset: 10176)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1873, file: !8, line: 369, baseType: !55, size: 16, offset: 10192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1873, file: !8, line: 370, baseType: !55, size: 16, offset: 10208)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1873, file: !8, line: 370, baseType: !55, size: 16, offset: 10224)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1873, file: !8, line: 372, baseType: !153, size: 32, offset: 10240)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1873, file: !8, line: 373, baseType: !153, size: 32, offset: 10272)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1873, file: !8, line: 375, baseType: !1442, size: 24, offset: 10304)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1873, file: !8, line: 376, baseType: !42, size: 8, offset: 10328)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1873, file: !8, line: 378, baseType: !42, size: 8, offset: 10336)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1873, file: !8, line: 379, baseType: !1442, size: 24, offset: 10344)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1873, file: !8, line: 381, baseType: !72, size: 512, offset: 10368)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1650, file: !8, line: 609, baseType: !57, size: 32, offset: 31808)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1650, file: !8, line: 610, baseType: !57, size: 32, offset: 31840)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !281, file: !8, line: 1252, baseType: !1891, size: 256, offset: 34112)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !8, line: 158, size: 256, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1891, file: !8, line: 159, baseType: !57, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1891, file: !8, line: 160, baseType: !153, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1891, file: !8, line: 161, baseType: !153, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1891, file: !8, line: 162, baseType: !153, size: 32, offset: 96)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1891, file: !8, line: 163, baseType: !57, size: 32, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1891, file: !8, line: 164, baseType: !55, size: 16, offset: 160)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1891, file: !8, line: 165, baseType: !55, size: 16, offset: 176)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1891, file: !8, line: 166, baseType: !153, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1891, file: !8, line: 167, baseType: !153, size: 32, offset: 224)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !281, file: !8, line: 1254, baseType: !82, size: 128, offset: 34368)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !281, file: !8, line: 1255, baseType: !82, size: 128, offset: 34496)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !281, file: !8, line: 1257, baseType: !26, size: 64, offset: 34624)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !281, file: !8, line: 1258, baseType: !26, size: 64, offset: 34688)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !281, file: !8, line: 1259, baseType: !26, size: 64, offset: 34752)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !281, file: !8, line: 1260, baseType: !26, size: 64, offset: 34816)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !281, file: !8, line: 1262, baseType: !26, size: 64, offset: 34880)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !281, file: !8, line: 1265, baseType: !1910, size: 64, offset: 34944)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !8, line: 1265, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !281, file: !8, line: 1266, baseType: !55, size: 16, offset: 35008)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !281, file: !8, line: 1267, baseType: !55, size: 16, offset: 35024)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !281, file: !8, line: 1270, baseType: !57, size: 32, offset: 35040)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !281, file: !8, line: 1271, baseType: !82, size: 128, offset: 35072)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !281, file: !8, line: 1274, baseType: !1917, size: 128, offset: 35200)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !8, line: 650, size: 128, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1917, file: !8, line: 651, baseType: !233, size: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1917, file: !8, line: 652, baseType: !42, size: 8, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1917, file: !8, line: 652, baseType: !42, size: 8, offset: 104)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1917, file: !8, line: 652, baseType: !42, size: 8, offset: 112)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1917, file: !8, line: 652, baseType: !42, size: 8, offset: 120)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !281, file: !8, line: 1275, baseType: !1925, size: 1472, offset: 35328)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !8, line: 676, size: 1472, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1939, !1949, !1950, !1951, !1952, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1925, file: !8, line: 679, baseType: !1917, size: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1925, file: !8, line: 680, baseType: !55, size: 16, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1925, file: !8, line: 680, baseType: !55, size: 16, offset: 144)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1925, file: !8, line: 680, baseType: !55, size: 16, offset: 160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1925, file: !8, line: 680, baseType: !55, size: 16, offset: 176)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1925, file: !8, line: 681, baseType: !55, size: 16, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1925, file: !8, line: 681, baseType: !55, size: 16, offset: 208)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1925, file: !8, line: 681, baseType: !55, size: 16, offset: 224)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1925, file: !8, line: 681, baseType: !55, size: 16, offset: 240)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1925, file: !8, line: 682, baseType: !55, size: 16, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1925, file: !8, line: 682, baseType: !1938, size: 48, offset: 272)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 48, elements: !234)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1925, file: !8, line: 685, baseType: !1940, size: 192, offset: 320)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !8, line: 633, size: 192, elements: !1941)
!1941 = !{!1942, !1943, !1944, !1945, !1946, !1947, !1948}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1940, file: !8, line: 634, baseType: !55, size: 16)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1940, file: !8, line: 634, baseType: !55, size: 16, offset: 16)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1940, file: !8, line: 635, baseType: !55, size: 16, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1940, file: !8, line: 635, baseType: !55, size: 16, offset: 48)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1940, file: !8, line: 636, baseType: !153, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1940, file: !8, line: 636, baseType: !153, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1940, file: !8, line: 637, baseType: !1863, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1925, file: !8, line: 686, baseType: !55, size: 16, offset: 512)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1925, file: !8, line: 686, baseType: !55, size: 16, offset: 528)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1925, file: !8, line: 687, baseType: !153, size: 32, offset: 544)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1925, file: !8, line: 688, baseType: !1953, size: 448, offset: 576)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !8, line: 674, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !8, line: 659, size: 448, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1954, file: !8, line: 660, baseType: !153, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1954, file: !8, line: 661, baseType: !153, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1954, file: !8, line: 662, baseType: !153, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1954, file: !8, line: 663, baseType: !153, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1954, file: !8, line: 664, baseType: !153, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1954, file: !8, line: 665, baseType: !153, size: 32, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1954, file: !8, line: 666, baseType: !153, size: 32, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1954, file: !8, line: 667, baseType: !153, size: 32, offset: 224)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1954, file: !8, line: 668, baseType: !153, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1954, file: !8, line: 669, baseType: !153, size: 32, offset: 288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1954, file: !8, line: 670, baseType: !57, size: 32, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1954, file: !8, line: 671, baseType: !153, size: 32, offset: 352)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1954, file: !8, line: 672, baseType: !153, size: 32, offset: 384)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1954, file: !8, line: 673, baseType: !55, size: 16, offset: 416)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1954, file: !8, line: 673, baseType: !55, size: 16, offset: 432)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1925, file: !8, line: 692, baseType: !153, size: 32, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1925, file: !8, line: 697, baseType: !153, size: 32, offset: 1056)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1925, file: !8, line: 703, baseType: !57, size: 32, offset: 1088)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1925, file: !8, line: 704, baseType: !55, size: 16, offset: 1120)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1925, file: !8, line: 704, baseType: !55, size: 16, offset: 1136)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1925, file: !8, line: 705, baseType: !55, size: 16, offset: 1152)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1925, file: !8, line: 706, baseType: !55, size: 16, offset: 1168)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1925, file: !8, line: 707, baseType: !55, size: 16, offset: 1184)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1925, file: !8, line: 708, baseType: !55, size: 16, offset: 1200)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1925, file: !8, line: 709, baseType: !55, size: 16, offset: 1216)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1925, file: !8, line: 709, baseType: !55, size: 16, offset: 1232)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1925, file: !8, line: 709, baseType: !55, size: 16, offset: 1248)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1925, file: !8, line: 709, baseType: !55, size: 16, offset: 1264)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1925, file: !8, line: 710, baseType: !55, size: 16, offset: 1280)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1925, file: !8, line: 711, baseType: !55, size: 16, offset: 1296)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1925, file: !8, line: 712, baseType: !153, size: 32, offset: 1312)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1925, file: !8, line: 713, baseType: !153, size: 32, offset: 1344)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1925, file: !8, line: 713, baseType: !153, size: 32, offset: 1376)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1925, file: !8, line: 713, baseType: !153, size: 32, offset: 1408)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1925, file: !8, line: 713, baseType: !153, size: 32, offset: 1440)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !281, file: !8, line: 1278, baseType: !1992, size: 64, offset: 36800)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !8, line: 1197, size: 64, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1992, file: !8, line: 1199, baseType: !153, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1992, file: !8, line: 1200, baseType: !42, size: 8, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1992, file: !8, line: 1201, baseType: !42, size: 8, offset: 40)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1992, file: !8, line: 1202, baseType: !55, size: 16, offset: 48)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !281, file: !8, line: 1281, baseType: !854, size: 64, offset: 36864)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !281, file: !8, line: 1284, baseType: !2000, size: 192, offset: 36928)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !8, line: 1208, size: 192, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2000, file: !8, line: 1209, baseType: !233, size: 96)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2000, file: !8, line: 1210, baseType: !57, size: 32, offset: 96)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2000, file: !8, line: 1210, baseType: !57, size: 32, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2000, file: !8, line: 1210, baseType: !57, size: 32, offset: 160)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !281, file: !8, line: 1287, baseType: !1210, size: 64, offset: 37120)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !281, file: !8, line: 1289, baseType: !2008, size: 64, offset: 37184)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2009, line: 27, baseType: !2010)
!2009 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2011, line: 45, baseType: !2012)
!2011 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2012 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !281, file: !8, line: 1290, baseType: !2008, size: 64, offset: 37248)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !281, file: !8, line: 1293, baseType: !1670, size: 1280, offset: 37312)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !281, file: !8, line: 1294, baseType: !1682, size: 512, offset: 38592)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !281, file: !8, line: 1295, baseType: !169, size: 512, offset: 39104)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !281, file: !8, line: 1298, baseType: !2018, size: 64, offset: 39616)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !8, line: 1298, flags: DIFlagFwdDecl)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !269, file: !265, line: 109, baseType: !807, size: 64, offset: 832)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !264, file: !265, line: 720, baseType: !42, size: 8, offset: 896)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !264, file: !265, line: 720, baseType: !42, size: 8, offset: 904)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !264, file: !265, line: 720, baseType: !42, size: 8, offset: 912)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !264, file: !265, line: 720, baseType: !42, size: 8, offset: 920)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !264, file: !265, line: 721, baseType: !42, size: 8, offset: 928)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !265, line: 721, baseType: !42, size: 8, offset: 936)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !264, file: !265, line: 721, baseType: !1634, size: 16, offset: 944)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !259, file: !260, line: 158, baseType: !2029, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !1468, line: 65, size: 160, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2030, file: !1468, line: 66, baseType: !233, size: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2030, file: !1468, line: 67, baseType: !1938, size: 48, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2030, file: !1468, line: 68, baseType: !42, size: 8, offset: 144)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2030, file: !1468, line: 68, baseType: !42, size: 8, offset: 152)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !259, file: !260, line: 159, baseType: !2037, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !1468, line: 79, size: 96, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2043, !2044}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !2038, file: !1468, line: 81, baseType: !57, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2038, file: !1468, line: 82, baseType: !57, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2038, file: !1468, line: 83, baseType: !55, size: 16, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2038, file: !1468, line: 84, baseType: !42, size: 8, offset: 80)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2038, file: !1468, line: 84, baseType: !42, size: 8, offset: 88)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !259, file: !260, line: 160, baseType: !2046, size: 64, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !1468, line: 88, size: 64, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2047, file: !1468, line: 89, baseType: !132, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2047, file: !1468, line: 90, baseType: !132, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !259, file: !260, line: 161, baseType: !57, size: 32, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !259, file: !260, line: 161, baseType: !57, size: 32, offset: 288)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !259, file: !260, line: 162, baseType: !2054, size: 64, offset: 320)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !259, file: !260, line: 163, baseType: !2056, size: 64, offset: 384)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !2058, line: 45, size: 1472, elements: !2059)
!2058 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2057, file: !2058, line: 46, baseType: !2056, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2057, file: !2058, line: 46, baseType: !2056, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2057, file: !2058, line: 48, baseType: !153, size: 32, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2057, file: !2058, line: 51, baseType: !153, size: 32, offset: 160)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2057, file: !2058, line: 53, baseType: !55, size: 16, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2057, file: !2058, line: 54, baseType: !55, size: 16, offset: 208)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !2057, file: !2058, line: 56, baseType: !55, size: 16, offset: 224)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2057, file: !2058, line: 57, baseType: !55, size: 16, offset: 240)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !2057, file: !2058, line: 59, baseType: !57, size: 32, offset: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2057, file: !2058, line: 60, baseType: !57, size: 32, offset: 288)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2057, file: !2058, line: 62, baseType: !26, size: 64, offset: 320)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2057, file: !2058, line: 63, baseType: !72, size: 512, offset: 384)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2057, file: !2058, line: 64, baseType: !72, size: 512, offset: 896)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !2057, file: !2058, line: 67, baseType: !153, size: 32, offset: 1408)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !2057, file: !2058, line: 68, baseType: !153, size: 32, offset: 1440)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !259, file: !260, line: 164, baseType: !359, size: 64, offset: 448)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !259, file: !260, line: 167, baseType: !2077, size: 64, offset: 512)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !2080, line: 96, size: 128, elements: !2081)
!2080 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2081 = !{!2082, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !2079, file: !2080, line: 97, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2079, file: !2080, line: 98, baseType: !57, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !259, file: !260, line: 170, baseType: !2086, size: 64, offset: 576)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !2088, line: 186, size: 8064, elements: !2089)
!2088 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2103, !2104, !2105, !2106, !2167, !2171, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2268, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2087, file: !2088, line: 187, baseType: !57, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2087, file: !2088, line: 187, baseType: !57, size: 32, offset: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2087, file: !2088, line: 187, baseType: !57, size: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2087, file: !2088, line: 187, baseType: !57, size: 32, offset: 96)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !2087, file: !2088, line: 188, baseType: !57, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !2087, file: !2088, line: 188, baseType: !57, size: 32, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !2087, file: !2088, line: 188, baseType: !57, size: 32, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !2087, file: !2088, line: 193, baseType: !42, size: 8, offset: 224)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !2087, file: !2088, line: 197, baseType: !42, size: 8, offset: 232)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !2087, file: !2088, line: 201, baseType: !2100, size: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !2102, line: 71, flags: DIFlagFwdDecl)
!2102 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !2087, file: !2088, line: 201, baseType: !2100, size: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !2087, file: !2088, line: 201, baseType: !2100, size: 64, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !2087, file: !2088, line: 201, baseType: !2100, size: 64, offset: 448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2087, file: !2088, line: 208, baseType: !2107, size: 64, offset: 512)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !2088, line: 103, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !2088, line: 90, size: 448, elements: !2111)
!2111 = !{!2112, !2121, !2126, !2127, !2128}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2110, file: !2088, line: 91, baseType: !2113, size: 128)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !2088, line: 82, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !2088, line: 64, size: 128, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2119, !2120}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2114, file: !2088, line: 65, baseType: !26, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2114, file: !2088, line: 66, baseType: !57, size: 32, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !2114, file: !2088, line: 73, baseType: !42, size: 8, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !2114, file: !2088, line: 74, baseType: !42, size: 8, offset: 104)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !2114, file: !2088, line: 80, baseType: !42, size: 8, offset: 112)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2110, file: !2088, line: 92, baseType: !2122, size: 64, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !2088, line: 180, size: 16, elements: !2124)
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2123, file: !2088, line: 181, baseType: !55, size: 16)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2110, file: !2088, line: 94, baseType: !233, size: 96, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2110, file: !2088, line: 95, baseType: !233, size: 96, offset: 288)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2110, file: !2088, line: 102, baseType: !2129, size: 64, offset: 384)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !2088, line: 110, size: 640, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2136, !2137, !2160, !2166}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2130, file: !2088, line: 111, baseType: !2113, size: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2130, file: !2088, line: 112, baseType: !2122, size: 64, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2130, file: !2088, line: 114, baseType: !2135, size: 64, offset: 192)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2130, file: !2088, line: 114, baseType: !2135, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2130, file: !2088, line: 118, baseType: !2138, size: 64, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !2088, line: 125, size: 576, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144, !2156, !2157, !2158, !2159}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2139, file: !2088, line: 126, baseType: !2113, size: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2139, file: !2088, line: 129, baseType: !2135, size: 64, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2139, file: !2088, line: 130, baseType: !2129, size: 64, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2139, file: !2088, line: 131, baseType: !2145, size: 64, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !2088, line: 164, size: 448, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2153, !2154, !2155}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2146, file: !2088, line: 165, baseType: !2113, size: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2146, file: !2088, line: 166, baseType: !2122, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2146, file: !2088, line: 172, baseType: !2151, size: 64, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !2088, line: 140, baseType: !2139)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2146, file: !2088, line: 174, baseType: !57, size: 32, offset: 256)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2146, file: !2088, line: 175, baseType: !233, size: 96, offset: 288)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2146, file: !2088, line: 176, baseType: !55, size: 16, offset: 384)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !2139, file: !2088, line: 135, baseType: !2138, size: 64, offset: 320)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !2139, file: !2088, line: 135, baseType: !2138, size: 64, offset: 384)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2139, file: !2088, line: 139, baseType: !2138, size: 64, offset: 448)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2139, file: !2088, line: 139, baseType: !2138, size: 64, offset: 512)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !2130, file: !2088, line: 122, baseType: !2161, size: 128, offset: 384)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !2088, line: 108, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !2088, line: 106, size: 128, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2162, file: !2088, line: 107, baseType: !2129, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2162, file: !2088, line: 107, baseType: !2129, size: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !2130, file: !2088, line: 122, baseType: !2161, size: 128, offset: 512)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !2087, file: !2088, line: 209, baseType: !2168, size: 64, offset: 576)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !2088, line: 123, baseType: !2130)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !2087, file: !2088, line: 210, baseType: !2172, size: 64, offset: 640)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !2088, line: 178, baseType: !2146)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !2087, file: !2088, line: 213, baseType: !57, size: 32, offset: 704)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !2087, file: !2088, line: 214, baseType: !57, size: 32, offset: 736)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !2087, file: !2088, line: 215, baseType: !57, size: 32, offset: 768)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !2087, file: !2088, line: 218, baseType: !2100, size: 64, offset: 832)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !2087, file: !2088, line: 218, baseType: !2100, size: 64, offset: 896)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !2087, file: !2088, line: 218, baseType: !2100, size: 64, offset: 960)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !2087, file: !2088, line: 220, baseType: !57, size: 32, offset: 1024)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !2087, file: !2088, line: 221, baseType: !2183, size: 64, offset: 1088)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !2185, line: 190, size: 10496, elements: !2186)
!2185 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2186 = !{!2187, !2247, !2248, !2254, !2257, !2258, !2267}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !2184, file: !2185, line: 191, baseType: !2188, size: 5120)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2189, size: 5120, elements: !2245)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !2185, line: 147, size: 320, elements: !2190)
!2190 = !{!2191, !2192, !2204, !2234, !2235}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !2189, file: !2185, line: 148, baseType: !486, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !2189, file: !2185, line: 149, baseType: !2193, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !2185, line: 112, baseType: !2194)
!2194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !2185, line: 94, baseType: !132, size: 32, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203}
!2196 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!2197 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!2198 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!2199 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!2200 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!2201 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!2202 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!2203 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !2189, file: !2185, line: 150, baseType: !2205, size: 32, offset: 96)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !2185, line: 142, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !2185, line: 138, size: 32, elements: !2207)
!2207 = !{!2208, !2216, !2224}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2206, file: !2185, line: 139, baseType: !2209, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !2185, line: 122, baseType: !2210)
!2210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !2185, line: 116, baseType: !132, size: 32, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215}
!2212 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!2213 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!2214 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!2215 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2206, file: !2185, line: 140, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !2185, line: 136, baseType: !2218)
!2218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !2185, line: 131, baseType: !132, size: 32, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223}
!2220 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!2221 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!2222 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!2223 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2206, file: !2185, line: 141, baseType: !2225, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !2185, line: 130, baseType: !2226)
!2226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !2185, line: 123, baseType: !132, size: 32, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233}
!2228 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!2229 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!2230 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!2231 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!2232 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!2233 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2189, file: !2185, line: 152, baseType: !57, size: 32, offset: 128)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2189, file: !2185, line: 162, baseType: !2236, size: 128, offset: 192)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2189, file: !2185, line: 155, size: 128, elements: !2237)
!2237 = !{!2238, !2239, !2240, !2241, !2242, !2244}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2236, file: !2185, line: 156, baseType: !57, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2236, file: !2185, line: 157, baseType: !153, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2236, file: !2185, line: 158, baseType: !26, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2236, file: !2185, line: 159, baseType: !233, size: 96)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2236, file: !2185, line: 160, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !2236, file: !2185, line: 161, baseType: !1049, size: 64)
!2245 = !{!2246}
!2246 = !DISubrange(count: 16)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !2184, file: !2185, line: 192, baseType: !2188, size: 5120, offset: 5120)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !2184, file: !2185, line: 193, baseType: !2249, size: 64, offset: 10240)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{null, !2252, !2183}
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !2088, line: 246, baseType: !2087)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !2184, file: !2185, line: 194, baseType: !2255, size: 64, offset: 10304)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2185, line: 194, flags: DIFlagFwdDecl)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2184, file: !2185, line: 195, baseType: !57, size: 32, offset: 10368)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !2184, file: !2185, line: 196, baseType: !2259, size: 32, offset: 10400)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !2185, line: 188, baseType: !2260)
!2260 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2185, line: 182, baseType: !132, size: 32, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266}
!2262 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!2263 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!2264 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!2265 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!2266 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2184, file: !2185, line: 197, baseType: !57, size: 32, offset: 10432)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2087, file: !2088, line: 223, baseType: !2269, size: 1600, offset: 1152)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !2102, line: 73, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !2102, line: 64, size: 1600, elements: !2271)
!2271 = !{!2272, !2287, !2291, !2292, !2293, !2294, !2295}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2270, file: !2102, line: 65, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !2102, line: 53, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !2102, line: 42, size: 832, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2275, file: !2102, line: 43, baseType: !57, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2275, file: !2102, line: 44, baseType: !57, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2275, file: !2102, line: 45, baseType: !57, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2275, file: !2102, line: 46, baseType: !57, size: 32, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !2275, file: !2102, line: 47, baseType: !57, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !2275, file: !2102, line: 48, baseType: !57, size: 32, offset: 160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !2275, file: !2102, line: 49, baseType: !57, size: 32, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2275, file: !2102, line: 50, baseType: !57, size: 32, offset: 224)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2275, file: !2102, line: 51, baseType: !72, size: 512, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2275, file: !2102, line: 52, baseType: !26, size: 64, offset: 768)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !2270, file: !2102, line: 66, baseType: !2288, size: 1312, offset: 64)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 1312, elements: !2289)
!2289 = !{!2290}
!2290 = !DISubrange(count: 41)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !2270, file: !2102, line: 69, baseType: !57, size: 32, offset: 1376)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !2270, file: !2102, line: 69, baseType: !57, size: 32, offset: 1408)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !2270, file: !2102, line: 70, baseType: !57, size: 32, offset: 1440)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2270, file: !2102, line: 71, baseType: !2100, size: 64, offset: 1472)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !2270, file: !2102, line: 72, baseType: !2296, size: 64, offset: 1536)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !2102, line: 59, baseType: !2298)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !2102, line: 57, size: 8192, elements: !2299)
!2299 = !{!2300}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2298, file: !2102, line: 58, baseType: !41, size: 8192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2087, file: !2088, line: 223, baseType: !2269, size: 1600, offset: 2752)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2087, file: !2088, line: 223, baseType: !2269, size: 1600, offset: 4352)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2087, file: !2088, line: 223, baseType: !2269, size: 1600, offset: 5952)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2087, file: !2088, line: 233, baseType: !55, size: 16, offset: 7552)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2087, file: !2088, line: 236, baseType: !57, size: 32, offset: 7584)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2087, file: !2088, line: 238, baseType: !57, size: 32, offset: 7616)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !2087, file: !2088, line: 238, baseType: !57, size: 32, offset: 7648)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !2087, file: !2088, line: 239, baseType: !82, size: 128, offset: 7680)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2087, file: !2088, line: 241, baseType: !2173, size: 64, offset: 7808)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !2087, file: !2088, line: 243, baseType: !82, size: 128, offset: 7872)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !2087, file: !2088, line: 245, baseType: !26, size: 64, offset: 8000)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !259, file: !260, line: 171, baseType: !57, size: 32, offset: 640)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !259, file: !260, line: 172, baseType: !57, size: 32, offset: 672)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !259, file: !260, line: 173, baseType: !2315, size: 8, offset: 704)
!2315 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !259, file: !260, line: 175, baseType: !2317, size: 64, offset: 768)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !2319, line: 44, flags: DIFlagFwdDecl)
!2319 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !259, file: !260, line: 178, baseType: !2321, size: 64, offset: 832)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !2319, line: 41, flags: DIFlagFwdDecl)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !259, file: !260, line: 179, baseType: !2315, size: 8, offset: 896)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !259, file: !260, line: 182, baseType: !2315, size: 8, offset: 904)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !259, file: !260, line: 183, baseType: !2054, size: 64, offset: 960)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !259, file: !260, line: 184, baseType: !2054, size: 64, offset: 1024)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !259, file: !260, line: 185, baseType: !2328, size: 64, offset: 1088)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 288, elements: !2330)
!2330 = !{!235, !235}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !259, file: !260, line: 188, baseType: !2315, size: 8, offset: 1152)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !259, file: !260, line: 191, baseType: !132, size: 32, offset: 1184)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !259, file: !260, line: 191, baseType: !134, size: 64, offset: 1216)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !259, file: !260, line: 191, baseType: !132, size: 32, offset: 1280)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !259, file: !260, line: 192, baseType: !2336, size: 64, offset: 1344)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2338, line: 33, flags: DIFlagFwdDecl)
!2338 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_brush.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !259, file: !260, line: 195, baseType: !2054, size: 64, offset: 1408)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !259, file: !260, line: 197, baseType: !2341, size: 64, offset: 1472)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !260, line: 197, flags: DIFlagFwdDecl)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !259, file: !260, line: 198, baseType: !2344, size: 64, offset: 1536)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !3, line: 176, size: 5696, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2356, !2357, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2748, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "initial_radius", scope: !2345, file: !3, line: 178, baseType: !153, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2345, file: !3, line: 179, baseType: !233, size: 96, offset: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2345, file: !3, line: 180, baseType: !57, size: 32, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "clip_tolerance", scope: !2345, file: !3, line: 181, baseType: !233, size: 96, offset: 160)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "initial_mouse", scope: !2345, file: !3, line: 182, baseType: !186, size: 64, offset: 256)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "num_threads", scope: !2345, file: !3, line: 185, baseType: !57, size: 32, offset: 320)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "init_num_threads", scope: !2345, file: !3, line: 185, baseType: !57, size: 32, offset: 352)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "tmpgrid_co", scope: !2345, file: !3, line: 186, baseType: !2355, size: 64, offset: 384)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tmprow_co", scope: !2345, file: !3, line: 186, baseType: !2355, size: 64, offset: 448)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "tmpgrid_mask", scope: !2345, file: !3, line: 187, baseType: !2358, size: 64, offset: 512)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "tmprow_mask", scope: !2345, file: !3, line: 187, baseType: !2358, size: 64, offset: 576)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2345, file: !3, line: 190, baseType: !153, size: 32, offset: 640)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "radius_squared", scope: !2345, file: !3, line: 191, baseType: !153, size: 32, offset: 672)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "true_location", scope: !2345, file: !3, line: 192, baseType: !233, size: 96, offset: 704)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2345, file: !3, line: 193, baseType: !233, size: 96, offset: 800)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pen_flip", scope: !2345, file: !3, line: 195, baseType: !2315, size: 8, offset: 896)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2345, file: !3, line: 196, baseType: !2315, size: 8, offset: 904)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !2345, file: !3, line: 197, baseType: !153, size: 32, offset: 928)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "mouse", scope: !2345, file: !3, line: 198, baseType: !186, size: 64, offset: 960)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "bstrength", scope: !2345, file: !3, line: 199, baseType: !153, size: 32, offset: 1024)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "first_time", scope: !2345, file: !3, line: 203, baseType: !2315, size: 8, offset: 1056)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "projection_mat", scope: !2345, file: !3, line: 206, baseType: !1294, size: 512, offset: 1088)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !2345, file: !3, line: 209, baseType: !2372, size: 64, offset: 1600)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !2374, line: 75, baseType: !2375)
!2374 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !2374, line: 66, size: 512, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2674, !2744, !2747}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2375, file: !2374, line: 67, baseType: !280, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !2375, file: !2374, line: 68, baseType: !248, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !2375, file: !2374, line: 69, baseType: !248, size: 64, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !2375, file: !2374, line: 70, baseType: !596, size: 64, offset: 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !2375, file: !2374, line: 71, baseType: !2382, size: 64, offset: 256)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !2384, line: 151, size: 3008, elements: !2385)
!2384 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2385 = !{!2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2673}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2383, file: !2384, line: 152, baseType: !819, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2383, file: !2384, line: 152, baseType: !819, size: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2383, file: !2384, line: 153, baseType: !82, size: 128, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2383, file: !2384, line: 154, baseType: !57, size: 32, offset: 256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2383, file: !2384, line: 155, baseType: !153, size: 32, offset: 288)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2383, file: !2384, line: 156, baseType: !825, size: 128, offset: 320)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2383, file: !2384, line: 158, baseType: !163, size: 128, offset: 448)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2383, file: !2384, line: 159, baseType: !153, size: 32, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !2383, file: !2384, line: 161, baseType: !153, size: 32, offset: 608)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !2383, file: !2384, line: 162, baseType: !42, size: 8, offset: 640)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2383, file: !2384, line: 163, baseType: !1442, size: 24, offset: 648)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !2383, file: !2384, line: 165, baseType: !132, size: 32, offset: 672)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !2383, file: !2384, line: 166, baseType: !132, size: 32, offset: 704)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2383, file: !2384, line: 168, baseType: !55, size: 16, offset: 736)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2383, file: !2384, line: 169, baseType: !55, size: 16, offset: 752)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2383, file: !2384, line: 171, baseType: !248, size: 64, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !2383, file: !2384, line: 171, baseType: !248, size: 64, offset: 832)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !2383, file: !2384, line: 172, baseType: !198, size: 128, offset: 896)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !2383, file: !2384, line: 174, baseType: !84, size: 128, offset: 1024)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !2383, file: !2384, line: 175, baseType: !2406, size: 64, offset: 1152)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !2384, line: 70, size: 832, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2429, !2430, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2407, file: !2384, line: 71, baseType: !2406, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2407, file: !2384, line: 71, baseType: !2406, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2407, file: !2384, line: 73, baseType: !96, size: 64, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2407, file: !2384, line: 74, baseType: !2413, size: 320, offset: 192)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !98, line: 50, size: 320, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2413, file: !98, line: 51, baseType: !280, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2413, file: !98, line: 53, baseType: !57, size: 32, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2413, file: !98, line: 54, baseType: !57, size: 32, offset: 96)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !98, line: 55, baseType: !57, size: 32, offset: 128)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2413, file: !98, line: 55, baseType: !57, size: 32, offset: 160)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2413, file: !98, line: 56, baseType: !42, size: 8, offset: 192)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2413, file: !98, line: 56, baseType: !42, size: 8, offset: 200)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2413, file: !98, line: 57, baseType: !42, size: 8, offset: 208)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2413, file: !98, line: 57, baseType: !42, size: 8, offset: 216)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2413, file: !98, line: 59, baseType: !55, size: 16, offset: 224)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2413, file: !98, line: 59, baseType: !55, size: 16, offset: 240)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2413, file: !98, line: 59, baseType: !55, size: 16, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2413, file: !98, line: 61, baseType: !55, size: 16, offset: 272)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2413, file: !98, line: 63, baseType: !57, size: 32, offset: 288)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2407, file: !2384, line: 75, baseType: !1210, size: 64, offset: 512)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !2407, file: !2384, line: 76, baseType: !2431, size: 64, offset: 576)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1212, line: 50, size: 64, elements: !2432)
!2432 = !{!2433, !2434, !2435}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2431, file: !1212, line: 51, baseType: !57, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !2431, file: !1212, line: 52, baseType: !55, size: 16, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !2431, file: !1212, line: 52, baseType: !55, size: 16, offset: 48)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2407, file: !2384, line: 77, baseType: !153, size: 32, offset: 640)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2407, file: !2384, line: 77, baseType: !153, size: 32, offset: 672)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2407, file: !2384, line: 77, baseType: !153, size: 32, offset: 704)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2407, file: !2384, line: 77, baseType: !153, size: 32, offset: 736)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2407, file: !2384, line: 78, baseType: !55, size: 16, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2407, file: !2384, line: 79, baseType: !55, size: 16, offset: 784)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2407, file: !2384, line: 80, baseType: !55, size: 16, offset: 800)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2407, file: !2384, line: 80, baseType: !55, size: 16, offset: 816)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2383, file: !2384, line: 177, baseType: !2382, size: 64, offset: 1216)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !2383, file: !2384, line: 179, baseType: !72, size: 512, offset: 1280)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2383, file: !2384, line: 181, baseType: !132, size: 32, offset: 1792)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2383, file: !2384, line: 182, baseType: !57, size: 32, offset: 1824)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2383, file: !2384, line: 187, baseType: !55, size: 16, offset: 1856)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !2383, file: !2384, line: 188, baseType: !55, size: 16, offset: 1872)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !2383, file: !2384, line: 189, baseType: !55, size: 16, offset: 1888)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2383, file: !2384, line: 189, baseType: !55, size: 16, offset: 1904)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2383, file: !2384, line: 190, baseType: !55, size: 16, offset: 1920)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !2383, file: !2384, line: 190, baseType: !55, size: 16, offset: 1936)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !2383, file: !2384, line: 192, baseType: !153, size: 32, offset: 1952)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !2383, file: !2384, line: 192, baseType: !153, size: 32, offset: 1984)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !2383, file: !2384, line: 193, baseType: !153, size: 32, offset: 2016)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !2383, file: !2384, line: 193, baseType: !153, size: 32, offset: 2048)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2383, file: !2384, line: 194, baseType: !233, size: 96, offset: 2080)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2383, file: !2384, line: 195, baseType: !233, size: 96, offset: 2176)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !2383, file: !2384, line: 197, baseType: !55, size: 16, offset: 2272)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !2383, file: !2384, line: 199, baseType: !55, size: 16, offset: 2288)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !2383, file: !2384, line: 200, baseType: !55, size: 16, offset: 2304)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !2383, file: !2384, line: 201, baseType: !42, size: 8, offset: 2320)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !2383, file: !2384, line: 204, baseType: !42, size: 8, offset: 2328)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !2383, file: !2384, line: 204, baseType: !42, size: 8, offset: 2336)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !2383, file: !2384, line: 204, baseType: !42, size: 8, offset: 2344)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2383, file: !2384, line: 204, baseType: !1634, size: 16, offset: 2352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !2383, file: !2384, line: 207, baseType: !84, size: 128, offset: 2368)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !2383, file: !2384, line: 208, baseType: !84, size: 128, offset: 2496)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !2383, file: !2384, line: 209, baseType: !84, size: 128, offset: 2624)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !2383, file: !2384, line: 212, baseType: !42, size: 8, offset: 2752)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2383, file: !2384, line: 212, baseType: !42, size: 8, offset: 2760)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !2383, file: !2384, line: 212, baseType: !42, size: 8, offset: 2768)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2383, file: !2384, line: 213, baseType: !1500, size: 40, offset: 2776)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !2383, file: !2384, line: 215, baseType: !26, size: 64, offset: 2816)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !2383, file: !2384, line: 216, baseType: !2477, size: 64, offset: 2880)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !2479, line: 93, size: 7552, elements: !2480)
!2479 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2480 = !{!2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2529, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2672}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2478, file: !2479, line: 94, baseType: !21, size: 960)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2478, file: !2479, line: 95, baseType: !254, size: 64, offset: 960)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !2478, file: !2479, line: 97, baseType: !55, size: 16, offset: 1024)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2478, file: !2479, line: 97, baseType: !55, size: 16, offset: 1040)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2478, file: !2479, line: 99, baseType: !153, size: 32, offset: 1056)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2478, file: !2479, line: 99, baseType: !153, size: 32, offset: 1088)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2478, file: !2479, line: 99, baseType: !153, size: 32, offset: 1120)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2478, file: !2479, line: 100, baseType: !153, size: 32, offset: 1152)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2478, file: !2479, line: 100, baseType: !153, size: 32, offset: 1184)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2478, file: !2479, line: 100, baseType: !153, size: 32, offset: 1216)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2478, file: !2479, line: 101, baseType: !153, size: 32, offset: 1248)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2478, file: !2479, line: 101, baseType: !153, size: 32, offset: 1280)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2478, file: !2479, line: 101, baseType: !153, size: 32, offset: 1312)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2478, file: !2479, line: 102, baseType: !153, size: 32, offset: 1344)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2478, file: !2479, line: 102, baseType: !153, size: 32, offset: 1376)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2478, file: !2479, line: 102, baseType: !153, size: 32, offset: 1408)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2478, file: !2479, line: 103, baseType: !153, size: 32, offset: 1440)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2478, file: !2479, line: 103, baseType: !153, size: 32, offset: 1472)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2478, file: !2479, line: 103, baseType: !153, size: 32, offset: 1504)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2478, file: !2479, line: 103, baseType: !153, size: 32, offset: 1536)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2478, file: !2479, line: 103, baseType: !153, size: 32, offset: 1568)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2478, file: !2479, line: 104, baseType: !153, size: 32, offset: 1600)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2478, file: !2479, line: 104, baseType: !153, size: 32, offset: 1632)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2478, file: !2479, line: 104, baseType: !153, size: 32, offset: 1664)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2478, file: !2479, line: 104, baseType: !153, size: 32, offset: 1696)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2478, file: !2479, line: 104, baseType: !153, size: 32, offset: 1728)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2478, file: !2479, line: 105, baseType: !153, size: 32, offset: 1760)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !2478, file: !2479, line: 108, baseType: !2509, size: 704, offset: 1792)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !2479, line: 53, size: 704, elements: !2510)
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !2509, file: !2479, line: 54, baseType: !153, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !2509, file: !2479, line: 55, baseType: !153, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !2509, file: !2479, line: 56, baseType: !153, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !2509, file: !2479, line: 57, baseType: !153, size: 32, offset: 96)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !2509, file: !2479, line: 59, baseType: !233, size: 96, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !2509, file: !2479, line: 60, baseType: !233, size: 96, offset: 224)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !2509, file: !2479, line: 61, baseType: !233, size: 96, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !2509, file: !2479, line: 63, baseType: !153, size: 32, offset: 416)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !2509, file: !2479, line: 64, baseType: !153, size: 32, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !2509, file: !2479, line: 65, baseType: !153, size: 32, offset: 480)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !2509, file: !2479, line: 67, baseType: !55, size: 16, offset: 512)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !2509, file: !2479, line: 68, baseType: !55, size: 16, offset: 528)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !2509, file: !2479, line: 69, baseType: !55, size: 16, offset: 544)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !2509, file: !2479, line: 70, baseType: !55, size: 16, offset: 560)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !2509, file: !2479, line: 72, baseType: !153, size: 32, offset: 576)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !2509, file: !2479, line: 73, baseType: !153, size: 32, offset: 608)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !2509, file: !2479, line: 74, baseType: !153, size: 32, offset: 640)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !2509, file: !2479, line: 75, baseType: !153, size: 32, offset: 672)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !2478, file: !2479, line: 109, baseType: !2530, size: 128, offset: 2496)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !2479, line: 79, size: 128, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2530, file: !2479, line: 80, baseType: !57, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !2530, file: !2479, line: 81, baseType: !57, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !2530, file: !2479, line: 82, baseType: !57, size: 32, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2530, file: !2479, line: 83, baseType: !57, size: 32, offset: 96)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !2478, file: !2479, line: 111, baseType: !153, size: 32, offset: 2624)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !2478, file: !2479, line: 111, baseType: !153, size: 32, offset: 2656)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !2478, file: !2479, line: 112, baseType: !153, size: 32, offset: 2688)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !2478, file: !2479, line: 112, baseType: !153, size: 32, offset: 2720)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2478, file: !2479, line: 113, baseType: !153, size: 32, offset: 2752)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !2478, file: !2479, line: 114, baseType: !153, size: 32, offset: 2784)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !2478, file: !2479, line: 114, baseType: !153, size: 32, offset: 2816)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !2478, file: !2479, line: 115, baseType: !55, size: 16, offset: 2848)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !2478, file: !2479, line: 115, baseType: !55, size: 16, offset: 2864)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2478, file: !2479, line: 116, baseType: !55, size: 16, offset: 2880)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !2478, file: !2479, line: 117, baseType: !42, size: 8, offset: 2896)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !2478, file: !2479, line: 117, baseType: !42, size: 8, offset: 2904)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !2478, file: !2479, line: 119, baseType: !153, size: 32, offset: 2912)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !2478, file: !2479, line: 119, baseType: !153, size: 32, offset: 2944)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !2478, file: !2479, line: 120, baseType: !55, size: 16, offset: 2976)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !2478, file: !2479, line: 120, baseType: !55, size: 16, offset: 2992)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !2478, file: !2479, line: 121, baseType: !153, size: 32, offset: 3008)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !2478, file: !2479, line: 121, baseType: !153, size: 32, offset: 3040)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !2478, file: !2479, line: 122, baseType: !153, size: 32, offset: 3072)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !2478, file: !2479, line: 123, baseType: !153, size: 32, offset: 3104)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !2478, file: !2479, line: 124, baseType: !55, size: 16, offset: 3136)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !2478, file: !2479, line: 125, baseType: !55, size: 16, offset: 3152)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2478, file: !2479, line: 127, baseType: !57, size: 32, offset: 3168)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !2478, file: !2479, line: 127, baseType: !57, size: 32, offset: 3200)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2478, file: !2479, line: 128, baseType: !57, size: 32, offset: 3232)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !2478, file: !2479, line: 128, baseType: !57, size: 32, offset: 3264)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2478, file: !2479, line: 129, baseType: !55, size: 16, offset: 3296)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !2478, file: !2479, line: 129, baseType: !55, size: 16, offset: 3312)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2478, file: !2479, line: 129, baseType: !55, size: 16, offset: 3328)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2478, file: !2479, line: 129, baseType: !55, size: 16, offset: 3344)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2478, file: !2479, line: 130, baseType: !153, size: 32, offset: 3360)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !2478, file: !2479, line: 130, baseType: !153, size: 32, offset: 3392)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !2478, file: !2479, line: 130, baseType: !153, size: 32, offset: 3424)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !2478, file: !2479, line: 130, baseType: !153, size: 32, offset: 3456)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !2478, file: !2479, line: 131, baseType: !153, size: 32, offset: 3488)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !2478, file: !2479, line: 131, baseType: !153, size: 32, offset: 3520)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !2478, file: !2479, line: 131, baseType: !153, size: 32, offset: 3552)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !2478, file: !2479, line: 131, baseType: !153, size: 32, offset: 3584)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !2478, file: !2479, line: 132, baseType: !153, size: 32, offset: 3616)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !2478, file: !2479, line: 132, baseType: !153, size: 32, offset: 3648)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !2478, file: !2479, line: 133, baseType: !72, size: 512, offset: 3680)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !2478, file: !2479, line: 135, baseType: !153, size: 32, offset: 4192)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !2478, file: !2479, line: 136, baseType: !153, size: 32, offset: 4224)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !2478, file: !2479, line: 137, baseType: !153, size: 32, offset: 4256)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !2478, file: !2479, line: 138, baseType: !57, size: 32, offset: 4288)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !2478, file: !2479, line: 141, baseType: !42, size: 8, offset: 4320)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2478, file: !2479, line: 141, baseType: !42, size: 8, offset: 4328)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !2478, file: !2479, line: 141, baseType: !42, size: 8, offset: 4336)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2478, file: !2479, line: 141, baseType: !42, size: 8, offset: 4344)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !2478, file: !2479, line: 142, baseType: !55, size: 16, offset: 4352)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2478, file: !2479, line: 142, baseType: !55, size: 16, offset: 4368)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !2478, file: !2479, line: 142, baseType: !55, size: 16, offset: 4384)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !2478, file: !2479, line: 145, baseType: !42, size: 8, offset: 4400)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2478, file: !2479, line: 145, baseType: !42, size: 8, offset: 4408)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !2478, file: !2479, line: 148, baseType: !55, size: 16, offset: 4416)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !2478, file: !2479, line: 148, baseType: !55, size: 16, offset: 4432)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !2478, file: !2479, line: 149, baseType: !153, size: 32, offset: 4448)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !2478, file: !2479, line: 149, baseType: !153, size: 32, offset: 4480)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2478, file: !2479, line: 152, baseType: !163, size: 128, offset: 4512)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !2478, file: !2479, line: 153, baseType: !153, size: 32, offset: 4640)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !2478, file: !2479, line: 154, baseType: !153, size: 32, offset: 4672)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2478, file: !2479, line: 157, baseType: !55, size: 16, offset: 4704)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2478, file: !2479, line: 157, baseType: !55, size: 16, offset: 4720)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !2478, file: !2479, line: 160, baseType: !2600, size: 64, offset: 4736)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !241, line: 113, size: 6208, elements: !2602)
!2602 = !{!2603, !2604, !2605, !2606, !2607, !2608, !2609}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2601, file: !241, line: 114, baseType: !55, size: 16)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2601, file: !241, line: 114, baseType: !55, size: 16, offset: 16)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !2601, file: !241, line: 115, baseType: !42, size: 8, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !2601, file: !241, line: 115, baseType: !42, size: 8, offset: 40)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !2601, file: !241, line: 116, baseType: !42, size: 8, offset: 48)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2601, file: !241, line: 117, baseType: !1100, size: 8, offset: 56)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2601, file: !241, line: 119, baseType: !2610, size: 6144, offset: 64)
!2610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2611, size: 6144, elements: !1870)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !241, line: 109, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !241, line: 106, size: 192, elements: !2613)
!2613 = !{!2614, !2615, !2616, !2617, !2618, !2619}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2612, file: !241, line: 107, baseType: !153, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2612, file: !241, line: 107, baseType: !153, size: 32, offset: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2612, file: !241, line: 107, baseType: !153, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2612, file: !241, line: 107, baseType: !153, size: 32, offset: 96)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2612, file: !241, line: 107, baseType: !153, size: 32, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2612, file: !241, line: 108, baseType: !57, size: 32, offset: 160)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !2478, file: !2479, line: 161, baseType: !2600, size: 64, offset: 4800)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !2478, file: !2479, line: 162, baseType: !42, size: 8, offset: 4864)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !2478, file: !2479, line: 162, baseType: !42, size: 8, offset: 4872)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !2478, file: !2479, line: 163, baseType: !42, size: 8, offset: 4880)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !2478, file: !2479, line: 163, baseType: !42, size: 8, offset: 4888)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !2478, file: !2479, line: 164, baseType: !55, size: 16, offset: 4896)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2478, file: !2479, line: 164, baseType: !55, size: 16, offset: 4912)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !2478, file: !2479, line: 165, baseType: !153, size: 32, offset: 4928)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !2478, file: !2479, line: 165, baseType: !153, size: 32, offset: 4960)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2478, file: !2479, line: 167, baseType: !365, size: 1152, offset: 4992)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2478, file: !2479, line: 168, baseType: !374, size: 64, offset: 6144)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2478, file: !2479, line: 169, baseType: !362, size: 64, offset: 6208)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2478, file: !2479, line: 170, baseType: !2633, size: 64, offset: 6272)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1865, line: 43, flags: DIFlagFwdDecl)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2478, file: !2479, line: 171, baseType: !137, size: 64, offset: 6336)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2478, file: !2479, line: 174, baseType: !153, size: 32, offset: 6400)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !2478, file: !2479, line: 174, baseType: !153, size: 32, offset: 6432)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !2478, file: !2479, line: 174, baseType: !153, size: 32, offset: 6464)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !2478, file: !2479, line: 175, baseType: !153, size: 32, offset: 6496)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !2478, file: !2479, line: 175, baseType: !153, size: 32, offset: 6528)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !2478, file: !2479, line: 176, baseType: !55, size: 16, offset: 6560)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2478, file: !2479, line: 176, baseType: !55, size: 16, offset: 6576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !2478, file: !2479, line: 179, baseType: !233, size: 96, offset: 6592)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !2478, file: !2479, line: 179, baseType: !233, size: 96, offset: 6688)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !2478, file: !2479, line: 180, baseType: !153, size: 32, offset: 6784)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !2478, file: !2479, line: 180, baseType: !153, size: 32, offset: 6816)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !2478, file: !2479, line: 180, baseType: !153, size: 32, offset: 6848)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !2478, file: !2479, line: 181, baseType: !153, size: 32, offset: 6880)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !2478, file: !2479, line: 181, baseType: !153, size: 32, offset: 6912)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !2478, file: !2479, line: 182, baseType: !153, size: 32, offset: 6944)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !2478, file: !2479, line: 182, baseType: !153, size: 32, offset: 6976)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !2478, file: !2479, line: 183, baseType: !55, size: 16, offset: 7008)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !2478, file: !2479, line: 183, baseType: !55, size: 16, offset: 7024)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !2478, file: !2479, line: 185, baseType: !57, size: 32, offset: 7040)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !2478, file: !2479, line: 186, baseType: !55, size: 16, offset: 7072)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2478, file: !2479, line: 187, baseType: !55, size: 16, offset: 7088)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !2478, file: !2479, line: 190, baseType: !163, size: 128, offset: 7104)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !2478, file: !2479, line: 191, baseType: !55, size: 16, offset: 7232)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !2478, file: !2479, line: 192, baseType: !55, size: 16, offset: 7248)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !2478, file: !2479, line: 195, baseType: !55, size: 16, offset: 7264)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !2478, file: !2479, line: 196, baseType: !55, size: 16, offset: 7280)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !2478, file: !2479, line: 197, baseType: !55, size: 16, offset: 7296)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2478, file: !2479, line: 198, baseType: !1938, size: 48, offset: 7312)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !2478, file: !2479, line: 200, baseType: !2665, size: 64, offset: 7360)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !2479, line: 86, size: 192, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2666, file: !2479, line: 87, baseType: !96, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2666, file: !2479, line: 88, baseType: !807, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2666, file: !2479, line: 89, baseType: !57, size: 32, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2666, file: !2479, line: 90, baseType: !57, size: 32, offset: 160)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !2478, file: !2479, line: 202, baseType: !82, size: 128, offset: 7424)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2383, file: !2384, line: 219, baseType: !854, size: 64, offset: 2944)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !2375, file: !2374, line: 72, baseType: !2675, size: 64, offset: 320)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !2384, line: 85, size: 7040, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2688, !2689, !2698, !2699, !2702, !2715, !2716, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2676, file: !2384, line: 87, baseType: !1294, size: 512)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2676, file: !2384, line: 88, baseType: !1294, size: 512, offset: 512)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2676, file: !2384, line: 89, baseType: !1294, size: 512, offset: 1024)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2676, file: !2384, line: 90, baseType: !1294, size: 512, offset: 1536)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !2676, file: !2384, line: 91, baseType: !1294, size: 512, offset: 2048)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !2676, file: !2384, line: 94, baseType: !1294, size: 512, offset: 2560)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !2676, file: !2384, line: 95, baseType: !1294, size: 512, offset: 3072)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2676, file: !2384, line: 99, baseType: !2686, size: 768, offset: 3584)
!2686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 768, elements: !2687)
!2687 = !{!714, !165}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !2676, file: !2384, line: 100, baseType: !2686, size: 768, offset: 4352)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !2676, file: !2384, line: 101, baseType: !2690, size: 64, offset: 5120)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !250, line: 97, size: 832, elements: !2692)
!2692 = !{!2693, !2696, !2697}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2691, file: !250, line: 98, baseType: !2694, size: 768)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 768, elements: !2695)
!2695 = !{!117, !235}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2691, file: !250, line: 99, baseType: !57, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2691, file: !250, line: 99, baseType: !57, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2676, file: !2384, line: 103, baseType: !2675, size: 64, offset: 5184)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !2676, file: !2384, line: 104, baseType: !2700, size: 64, offset: 5248)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2384, line: 44, flags: DIFlagFwdDecl)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2676, file: !2384, line: 105, baseType: !2703, size: 64, offset: 5312)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2374, line: 77, size: 320, elements: !2705)
!2705 = !{!2706, !2708, !2709, !2710, !2711, !2712, !2714}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2704, file: !2374, line: 78, baseType: !2707, size: 16)
!2707 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2704, file: !2374, line: 78, baseType: !2707, size: 16, offset: 16)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2704, file: !2374, line: 79, baseType: !55, size: 16, offset: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2704, file: !2374, line: 79, baseType: !55, size: 16, offset: 48)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2704, file: !2374, line: 80, baseType: !359, size: 64, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !2704, file: !2374, line: 81, baseType: !2713, size: 128, offset: 128)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 128, elements: !142)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !2704, file: !2374, line: 83, baseType: !2315, size: 8, offset: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !2676, file: !2384, line: 106, baseType: !26, size: 64, offset: 5376)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2676, file: !2384, line: 109, baseType: !2717, size: 64, offset: 5440)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !2384, line: 46, flags: DIFlagFwdDecl)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2676, file: !2384, line: 110, baseType: !642, size: 64, offset: 5504)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !2676, file: !2384, line: 114, baseType: !1294, size: 512, offset: 5568)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2676, file: !2384, line: 116, baseType: !163, size: 128, offset: 6080)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2676, file: !2384, line: 117, baseType: !153, size: 32, offset: 6208)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !2676, file: !2384, line: 118, baseType: !153, size: 32, offset: 6240)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !2676, file: !2384, line: 118, baseType: !153, size: 32, offset: 6272)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2676, file: !2384, line: 119, baseType: !153, size: 32, offset: 6304)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2676, file: !2384, line: 120, baseType: !233, size: 96, offset: 6336)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !2676, file: !2384, line: 122, baseType: !153, size: 32, offset: 6432)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !2676, file: !2384, line: 123, baseType: !42, size: 8, offset: 6464)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2676, file: !2384, line: 125, baseType: !42, size: 8, offset: 6472)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2676, file: !2384, line: 126, baseType: !42, size: 8, offset: 6480)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !2676, file: !2384, line: 127, baseType: !42, size: 8, offset: 6488)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !2676, file: !2384, line: 128, baseType: !42, size: 8, offset: 6496)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2676, file: !2384, line: 129, baseType: !1442, size: 24, offset: 6504)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !2676, file: !2384, line: 130, baseType: !186, size: 64, offset: 6528)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !2676, file: !2384, line: 132, baseType: !55, size: 16, offset: 6592)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !2676, file: !2384, line: 133, baseType: !55, size: 16, offset: 6608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !2676, file: !2384, line: 137, baseType: !163, size: 128, offset: 6624)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !2676, file: !2384, line: 138, baseType: !55, size: 16, offset: 6752)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !2676, file: !2384, line: 138, baseType: !55, size: 16, offset: 6768)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !2676, file: !2384, line: 140, baseType: !153, size: 32, offset: 6784)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !2676, file: !2384, line: 141, baseType: !233, size: 96, offset: 6816)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !2676, file: !2384, line: 145, baseType: !153, size: 32, offset: 6912)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !2676, file: !2384, line: 146, baseType: !233, size: 96, offset: 6944)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !2375, file: !2374, line: 73, baseType: !2745, size: 64, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !256, line: 93, flags: DIFlagFwdDecl)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2375, file: !2374, line: 74, baseType: !710, size: 64, offset: 448)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2345, file: !3, line: 210, baseType: !2749, size: 64, offset: 1664)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !18, line: 138, baseType: !17)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "face_norms", scope: !2345, file: !3, line: 212, baseType: !2054, size: 64, offset: 1728)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "special_rotation", scope: !2345, file: !3, line: 214, baseType: !153, size: 32, offset: 1792)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "grab_delta", scope: !2345, file: !3, line: 215, baseType: !233, size: 96, offset: 1824)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "grab_delta_symmetry", scope: !2345, file: !3, line: 215, baseType: !233, size: 96, offset: 1920)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "old_grab_location", scope: !2345, file: !3, line: 216, baseType: !233, size: 96, offset: 2016)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "orig_grab_location", scope: !2345, file: !3, line: 216, baseType: !233, size: 96, offset: 2112)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry", scope: !2345, file: !3, line: 218, baseType: !57, size: 32, offset: 2208)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_symmetry_pass", scope: !2345, file: !3, line: 220, baseType: !57, size: 32, offset: 2240)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "true_view_normal", scope: !2345, file: !3, line: 221, baseType: !233, size: 96, offset: 2272)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "view_normal", scope: !2345, file: !3, line: 222, baseType: !233, size: 96, offset: 2368)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_normal", scope: !2345, file: !3, line: 227, baseType: !233, size: 96, offset: 2464)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_normal_symm", scope: !2345, file: !3, line: 228, baseType: !233, size: 96, offset: 2560)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "brush_local_mat", scope: !2345, file: !3, line: 232, baseType: !1294, size: 512, offset: 2656)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "last_center", scope: !2345, file: !3, line: 234, baseType: !233, size: 96, offset: 3168)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry_pass", scope: !2345, file: !3, line: 235, baseType: !57, size: 32, offset: 3264)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "symm_rot_mat", scope: !2345, file: !3, line: 236, baseType: !1294, size: 512, offset: 3296)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "symm_rot_mat_inv", scope: !2345, file: !3, line: 237, baseType: !1294, size: 512, offset: 3808)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !2345, file: !3, line: 238, baseType: !2315, size: 8, offset: 4320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_location", scope: !2345, file: !3, line: 239, baseType: !233, size: 96, offset: 4352)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "vertex_rotation", scope: !2345, file: !3, line: 241, baseType: !153, size: 32, offset: 4448)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "dial", scope: !2345, file: !3, line: 242, baseType: !2772, size: 64, offset: 4480)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "Dial", file: !2774, line: 53, baseType: !2775)
!2774 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dial.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2775 = !DICompositeType(tag: DW_TAG_structure_type, name: "Dial", file: !2774, line: 53, flags: DIFlagFwdDecl)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "saved_active_brush_name", scope: !2345, file: !3, line: 244, baseType: !51, size: 528, offset: 4544)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "saved_mask_brush_tool", scope: !2345, file: !3, line: 245, baseType: !42, size: 8, offset: 5072)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "saved_smooth_size", scope: !2345, file: !3, line: 246, baseType: !57, size: 32, offset: 5088)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "alt_smooth", scope: !2345, file: !3, line: 247, baseType: !2315, size: 8, offset: 5120)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim_squared", scope: !2345, file: !3, line: 249, baseType: !153, size: 32, offset: 5152)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "supports_gravity", scope: !2345, file: !3, line: 251, baseType: !2315, size: 8, offset: 5184)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "true_gravity_direction", scope: !2345, file: !3, line: 252, baseType: !233, size: 96, offset: 5216)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_direction", scope: !2345, file: !3, line: 253, baseType: !233, size: 96, offset: 5312)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "previous_r", scope: !2345, file: !3, line: 255, baseType: !610, size: 128, offset: 5408)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "current_r", scope: !2345, file: !3, line: 256, baseType: !610, size: 128, offset: 5536)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !259, file: !260, line: 201, baseType: !2315, size: 8, offset: 1600)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !259, file: !260, line: 202, baseType: !233, size: 96, offset: 1632)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !259, file: !260, line: 204, baseType: !233, size: 96, offset: 1728)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !259, file: !260, line: 205, baseType: !57, size: 32, offset: 1824)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !249, file: !250, line: 121, baseType: !55, size: 16, offset: 1088)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !249, file: !250, line: 121, baseType: !55, size: 16, offset: 1104)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !249, file: !250, line: 122, baseType: !57, size: 32, offset: 1120)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !249, file: !250, line: 122, baseType: !57, size: 32, offset: 1152)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !249, file: !250, line: 122, baseType: !57, size: 32, offset: 1184)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !249, file: !250, line: 123, baseType: !72, size: 512, offset: 1216)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !249, file: !250, line: 124, baseType: !248, size: 64, offset: 1728)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !249, file: !250, line: 124, baseType: !248, size: 64, offset: 1792)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !249, file: !250, line: 127, baseType: !248, size: 64, offset: 1856)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !249, file: !250, line: 127, baseType: !248, size: 64, offset: 1920)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !249, file: !250, line: 127, baseType: !248, size: 64, offset: 1984)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !249, file: !250, line: 128, baseType: !362, size: 64, offset: 2048)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !249, file: !250, line: 130, baseType: !2690, size: 64, offset: 2112)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !249, file: !250, line: 131, baseType: !2804, size: 64, offset: 2176)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !2806, line: 486, size: 1600, elements: !2807)
!2806 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2805, file: !2806, line: 487, baseType: !21, size: 960)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !2805, file: !2806, line: 489, baseType: !82, size: 128, offset: 960)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2805, file: !2806, line: 490, baseType: !82, size: 128, offset: 1088)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2805, file: !2806, line: 491, baseType: !82, size: 128, offset: 1216)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2805, file: !2806, line: 492, baseType: !82, size: 128, offset: 1344)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2805, file: !2806, line: 494, baseType: !57, size: 32, offset: 1472)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !2805, file: !2806, line: 495, baseType: !57, size: 32, offset: 1504)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !2805, file: !2806, line: 497, baseType: !57, size: 32, offset: 1536)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2805, file: !2806, line: 498, baseType: !57, size: 32, offset: 1568)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !249, file: !250, line: 132, baseType: !2804, size: 64, offset: 2240)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !249, file: !250, line: 133, baseType: !2819, size: 64, offset: 2304)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !2806, line: 334, size: 1728, elements: !2821)
!2821 = !{!2822, !2823, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2857}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2820, file: !2806, line: 335, baseType: !82, size: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !2820, file: !2806, line: 336, baseType: !2824, size: 64, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2820, file: !2806, line: 338, baseType: !55, size: 16, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2820, file: !2806, line: 338, baseType: !55, size: 16, offset: 208)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !2820, file: !2806, line: 339, baseType: !132, size: 32, offset: 224)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2820, file: !2806, line: 340, baseType: !57, size: 32, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2820, file: !2806, line: 342, baseType: !153, size: 32, offset: 288)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !2820, file: !2806, line: 343, baseType: !233, size: 96, offset: 320)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !2820, file: !2806, line: 344, baseType: !233, size: 96, offset: 416)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !2820, file: !2806, line: 347, baseType: !82, size: 128, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !2820, file: !2806, line: 349, baseType: !57, size: 32, offset: 640)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !2820, file: !2806, line: 350, baseType: !57, size: 32, offset: 672)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !2820, file: !2806, line: 351, baseType: !26, size: 64, offset: 704)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !2820, file: !2806, line: 352, baseType: !26, size: 64, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2820, file: !2806, line: 354, baseType: !2838, size: 384, offset: 832)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !2806, line: 116, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !2806, line: 94, size: 384, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !2839, file: !2806, line: 96, baseType: !57, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !2839, file: !2806, line: 96, baseType: !57, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !2839, file: !2806, line: 97, baseType: !57, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !2839, file: !2806, line: 97, baseType: !57, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !2839, file: !2806, line: 99, baseType: !55, size: 16, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !2839, file: !2806, line: 100, baseType: !55, size: 16, offset: 144)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !2839, file: !2806, line: 102, baseType: !55, size: 16, offset: 160)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2839, file: !2806, line: 105, baseType: !55, size: 16, offset: 176)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !2839, file: !2806, line: 108, baseType: !55, size: 16, offset: 192)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !2839, file: !2806, line: 109, baseType: !55, size: 16, offset: 208)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !2839, file: !2806, line: 111, baseType: !55, size: 16, offset: 224)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !2839, file: !2806, line: 112, baseType: !55, size: 16, offset: 240)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !2839, file: !2806, line: 114, baseType: !57, size: 32, offset: 256)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !2839, file: !2806, line: 114, baseType: !57, size: 32, offset: 288)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !2839, file: !2806, line: 115, baseType: !57, size: 32, offset: 320)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !2839, file: !2806, line: 115, baseType: !57, size: 32, offset: 352)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !2820, file: !2806, line: 355, baseType: !72, size: 512, offset: 1216)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !249, file: !250, line: 134, baseType: !26, size: 64, offset: 2368)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !249, file: !250, line: 136, baseType: !854, size: 64, offset: 2432)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !249, file: !250, line: 138, baseType: !2838, size: 384, offset: 2496)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !249, file: !250, line: 139, baseType: !2862, size: 64, offset: 2880)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !2806, line: 80, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !2806, line: 72, size: 192, elements: !2865)
!2865 = !{!2866, !2873, !2874, !2875, !2876}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2864, file: !2806, line: 73, baseType: !2867, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !2806, line: 59, baseType: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !2806, line: 56, size: 128, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2869, file: !2806, line: 57, baseType: !233, size: 96)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2869, file: !2806, line: 58, baseType: !57, size: 32, offset: 96)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2864, file: !2806, line: 74, baseType: !57, size: 32, offset: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2864, file: !2806, line: 76, baseType: !57, size: 32, offset: 96)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2864, file: !2806, line: 77, baseType: !57, size: 32, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2864, file: !2806, line: 79, baseType: !57, size: 32, offset: 160)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !249, file: !250, line: 141, baseType: !82, size: 128, offset: 2944)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !249, file: !250, line: 142, baseType: !82, size: 128, offset: 3072)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !249, file: !250, line: 143, baseType: !82, size: 128, offset: 3200)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !249, file: !250, line: 144, baseType: !82, size: 128, offset: 3328)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !249, file: !250, line: 146, baseType: !57, size: 32, offset: 3456)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !249, file: !250, line: 147, baseType: !57, size: 32, offset: 3488)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !249, file: !250, line: 150, baseType: !2884, size: 64, offset: 3520)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !249, file: !250, line: 151, baseType: !807, size: 64, offset: 3584)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !249, file: !250, line: 152, baseType: !57, size: 32, offset: 3648)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !249, file: !250, line: 153, baseType: !57, size: 32, offset: 3680)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !249, file: !250, line: 156, baseType: !233, size: 96, offset: 3712)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !249, file: !250, line: 156, baseType: !233, size: 96, offset: 3808)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !249, file: !250, line: 156, baseType: !233, size: 96, offset: 3904)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !249, file: !250, line: 157, baseType: !233, size: 96, offset: 4000)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !249, file: !250, line: 158, baseType: !233, size: 96, offset: 4096)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !249, file: !250, line: 159, baseType: !233, size: 96, offset: 4192)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !249, file: !250, line: 160, baseType: !233, size: 96, offset: 4288)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !249, file: !250, line: 160, baseType: !233, size: 96, offset: 4384)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !249, file: !250, line: 161, baseType: !163, size: 128, offset: 4480)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !249, file: !250, line: 161, baseType: !163, size: 128, offset: 4608)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !249, file: !250, line: 162, baseType: !233, size: 96, offset: 4736)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !249, file: !250, line: 162, baseType: !233, size: 96, offset: 4832)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !249, file: !250, line: 163, baseType: !153, size: 32, offset: 4928)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !249, file: !250, line: 163, baseType: !153, size: 32, offset: 4960)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !249, file: !250, line: 164, baseType: !1294, size: 512, offset: 4992)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !249, file: !250, line: 165, baseType: !1294, size: 512, offset: 5504)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !249, file: !250, line: 166, baseType: !1294, size: 512, offset: 6016)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !249, file: !250, line: 167, baseType: !1294, size: 512, offset: 6528)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !249, file: !250, line: 176, baseType: !1294, size: 512, offset: 7040)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !249, file: !250, line: 178, baseType: !132, size: 32, offset: 7552)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !249, file: !250, line: 180, baseType: !55, size: 16, offset: 7584)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !249, file: !250, line: 181, baseType: !55, size: 16, offset: 7600)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !249, file: !250, line: 183, baseType: !55, size: 16, offset: 7616)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !249, file: !250, line: 183, baseType: !55, size: 16, offset: 7632)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !249, file: !250, line: 184, baseType: !55, size: 16, offset: 7648)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !249, file: !250, line: 184, baseType: !55, size: 16, offset: 7664)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !249, file: !250, line: 185, baseType: !55, size: 16, offset: 7680)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !249, file: !250, line: 186, baseType: !55, size: 16, offset: 7696)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !249, file: !250, line: 187, baseType: !55, size: 16, offset: 7712)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !249, file: !250, line: 188, baseType: !42, size: 8, offset: 7728)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !249, file: !250, line: 189, baseType: !42, size: 8, offset: 7736)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !249, file: !250, line: 192, baseType: !57, size: 32, offset: 7744)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !249, file: !250, line: 192, baseType: !57, size: 32, offset: 7776)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !249, file: !250, line: 192, baseType: !57, size: 32, offset: 7808)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !249, file: !250, line: 192, baseType: !57, size: 32, offset: 7840)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !249, file: !250, line: 194, baseType: !57, size: 32, offset: 7872)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !249, file: !250, line: 202, baseType: !153, size: 32, offset: 7904)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !249, file: !250, line: 202, baseType: !153, size: 32, offset: 7936)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !249, file: !250, line: 202, baseType: !153, size: 32, offset: 7968)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !249, file: !250, line: 211, baseType: !153, size: 32, offset: 8000)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !249, file: !250, line: 212, baseType: !153, size: 32, offset: 8032)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !249, file: !250, line: 213, baseType: !153, size: 32, offset: 8064)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !249, file: !250, line: 214, baseType: !153, size: 32, offset: 8096)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !249, file: !250, line: 215, baseType: !153, size: 32, offset: 8128)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !249, file: !250, line: 216, baseType: !153, size: 32, offset: 8160)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !249, file: !250, line: 219, baseType: !153, size: 32, offset: 8192)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !249, file: !250, line: 220, baseType: !153, size: 32, offset: 8224)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !249, file: !250, line: 221, baseType: !153, size: 32, offset: 8256)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !249, file: !250, line: 224, baseType: !2707, size: 16, offset: 8288)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !249, file: !250, line: 224, baseType: !2707, size: 16, offset: 8304)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !249, file: !250, line: 226, baseType: !55, size: 16, offset: 8320)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !249, file: !250, line: 228, baseType: !42, size: 8, offset: 8336)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !249, file: !250, line: 229, baseType: !42, size: 8, offset: 8344)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !249, file: !250, line: 231, baseType: !55, size: 16, offset: 8352)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !249, file: !250, line: 232, baseType: !42, size: 8, offset: 8368)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !249, file: !250, line: 233, baseType: !42, size: 8, offset: 8376)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !249, file: !250, line: 234, baseType: !153, size: 32, offset: 8384)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !249, file: !250, line: 235, baseType: !153, size: 32, offset: 8416)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !249, file: !250, line: 237, baseType: !82, size: 128, offset: 8448)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !249, file: !250, line: 238, baseType: !82, size: 128, offset: 8576)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !249, file: !250, line: 239, baseType: !82, size: 128, offset: 8704)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !249, file: !250, line: 240, baseType: !82, size: 128, offset: 8832)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !249, file: !250, line: 242, baseType: !153, size: 32, offset: 8960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !249, file: !250, line: 244, baseType: !55, size: 16, offset: 8992)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !249, file: !250, line: 245, baseType: !2707, size: 16, offset: 9008)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !249, file: !250, line: 246, baseType: !163, size: 128, offset: 9024)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !249, file: !250, line: 248, baseType: !57, size: 32, offset: 9152)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !249, file: !250, line: 249, baseType: !57, size: 32, offset: 9184)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !249, file: !250, line: 251, baseType: !2957, size: 64, offset: 9216)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !250, line: 251, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !249, file: !250, line: 253, baseType: !42, size: 8, offset: 9280)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !249, file: !250, line: 254, baseType: !42, size: 8, offset: 9288)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !249, file: !250, line: 255, baseType: !55, size: 16, offset: 9296)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !249, file: !250, line: 256, baseType: !233, size: 96, offset: 9312)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !249, file: !250, line: 258, baseType: !82, size: 128, offset: 9408)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !249, file: !250, line: 259, baseType: !82, size: 128, offset: 9536)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !249, file: !250, line: 260, baseType: !82, size: 128, offset: 9664)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !249, file: !250, line: 261, baseType: !82, size: 128, offset: 9792)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !249, file: !250, line: 263, baseType: !2968, size: 64, offset: 9920)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !250, line: 52, flags: DIFlagFwdDecl)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !249, file: !250, line: 264, baseType: !2971, size: 64, offset: 9984)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !250, line: 53, flags: DIFlagFwdDecl)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !249, file: !250, line: 265, baseType: !2633, size: 64, offset: 10048)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !249, file: !250, line: 267, baseType: !42, size: 8, offset: 10112)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !249, file: !250, line: 268, baseType: !42, size: 8, offset: 10120)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !249, file: !250, line: 269, baseType: !55, size: 16, offset: 10128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !249, file: !250, line: 270, baseType: !153, size: 32, offset: 10144)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !249, file: !250, line: 272, baseType: !2979, size: 64, offset: 10176)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !250, line: 54, flags: DIFlagFwdDecl)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !249, file: !250, line: 275, baseType: !2982, size: 64, offset: 10240)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !250, line: 275, flags: DIFlagFwdDecl)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !249, file: !250, line: 277, baseType: !2985, size: 64, offset: 10304)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !2987, line: 178, size: 13504, elements: !2988)
!2987 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3007, !3044, !3051, !3052, !3059, !3060, !3061, !3062, !3068, !3073, !3074, !3078, !3079, !3080, !3081, !3082, !3086, !3098, !3112, !3116, !3120, !3124, !3128, !3132, !3136, !3140, !3144, !3148, !3152, !3153, !3154, !3155, !3156, !3157, !3161, !3162, !3163, !3164, !3168, !3169, !3170, !3171, !3172, !3177, !3178, !3179, !3180, !3181, !3185, !3186, !3187, !3188, !3189, !3196, !3207, !3211, !3229, !3239, !3244, !3259, !3266, !3273, !3277, !3281, !3285, !3289, !3290, !3291, !3295, !3299, !3300, !3301, !3305, !3306, !3315, !3352, !3356, !3364, !3368, !3372, !3376, !3384, !3394}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !2986, file: !2987, line: 180, baseType: !2269, size: 1600)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !2986, file: !2987, line: 180, baseType: !2269, size: 1600, offset: 1600)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !2986, file: !2987, line: 180, baseType: !2269, size: 1600, offset: 3200)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !2986, file: !2987, line: 180, baseType: !2269, size: 1600, offset: 4800)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !2986, file: !2987, line: 180, baseType: !2269, size: 1600, offset: 6400)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !2986, file: !2987, line: 181, baseType: !57, size: 32, offset: 8000)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !2986, file: !2987, line: 181, baseType: !57, size: 32, offset: 8032)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !2986, file: !2987, line: 181, baseType: !57, size: 32, offset: 8064)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !2986, file: !2987, line: 181, baseType: !57, size: 32, offset: 8096)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !2986, file: !2987, line: 181, baseType: !57, size: 32, offset: 8128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !2986, file: !2987, line: 182, baseType: !57, size: 32, offset: 8160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !2986, file: !2987, line: 183, baseType: !57, size: 32, offset: 8192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !2986, file: !2987, line: 184, baseType: !3002, size: 64, offset: 8256)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !3003, line: 124, baseType: !3004)
!3003 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !3006, line: 118, flags: DIFlagFwdDecl)
!3006 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !2986, file: !2987, line: 185, baseType: !3008, size: 64, offset: 8320)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !3010, line: 84, size: 832, elements: !3011)
!3010 = !DIFile(filename: "blender/source/blender/gpu/GPU_buffers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3011 = !{!3012, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3029, !3030, !3038, !3039, !3040, !3041, !3042, !3043}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3009, file: !3010, line: 85, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBuffer", file: !3010, line: 57, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBuffer", file: !3010, line: 53, size: 192, elements: !3016)
!3016 = !{!3017, !3018, !3019}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3015, file: !3010, line: 54, baseType: !57, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3015, file: !3010, line: 55, baseType: !26, size: 64, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3015, file: !3010, line: 56, baseType: !132, size: 32, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !3009, file: !3010, line: 86, baseType: !3013, size: 64, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3009, file: !3010, line: 87, baseType: !3013, size: 64, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !3009, file: !3010, line: 88, baseType: !3013, size: 64, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !3009, file: !3010, line: 89, baseType: !3013, size: 64, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !3009, file: !3010, line: 90, baseType: !3013, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "triangle_to_mface", scope: !3009, file: !3010, line: 93, baseType: !2083, size: 64, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "vert_points", scope: !3009, file: !3010, line: 96, baseType: !3027, size: 64, offset: 448)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertPointLink", file: !3010, line: 50, flags: DIFlagFwdDecl)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "colType", scope: !3009, file: !3010, line: 105, baseType: !57, size: 32, offset: 512)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !3009, file: !3010, line: 107, baseType: !3031, size: 64, offset: 576)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUBufferMaterial", file: !3010, line: 66, baseType: !3033)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUBufferMaterial", file: !3010, line: 59, size: 96, elements: !3034)
!3034 = !{!3035, !3036, !3037}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3033, file: !3010, line: 61, baseType: !57, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3033, file: !3010, line: 62, baseType: !57, size: 32, offset: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3033, file: !3010, line: 65, baseType: !55, size: 16, offset: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "totmaterial", scope: !3009, file: !3010, line: 108, baseType: !57, size: 32, offset: 640)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "tot_triangle_point", scope: !3009, file: !3010, line: 110, baseType: !57, size: 32, offset: 672)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "tot_loose_point", scope: !3009, file: !3010, line: 111, baseType: !57, size: 32, offset: 704)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3009, file: !3010, line: 114, baseType: !57, size: 32, offset: 736)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3009, file: !3010, line: 115, baseType: !57, size: 32, offset: 768)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !3009, file: !3010, line: 119, baseType: !2315, size: 8, offset: 800)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2986, file: !2987, line: 186, baseType: !3045, size: 32, offset: 8384)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !2987, line: 132, baseType: !3046)
!3046 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !2987, line: 128, baseType: !132, size: 32, elements: !3047)
!3047 = !{!3048, !3049, !3050}
!3048 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!3049 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!3050 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !2986, file: !2987, line: 187, baseType: !153, size: 32, offset: 8416)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !2986, file: !2987, line: 188, baseType: !3053, size: 32, offset: 8448)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !2987, line: 175, baseType: !3054)
!3054 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !2987, line: 164, baseType: !132, size: 32, elements: !3055)
!3055 = !{!3056, !3057, !3058}
!3056 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!3057 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!3058 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !2986, file: !2987, line: 189, baseType: !57, size: 32, offset: 8480)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2986, file: !2987, line: 190, baseType: !2884, size: 64, offset: 8512)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2986, file: !2987, line: 193, baseType: !42, size: 8, offset: 8576)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !2986, file: !2987, line: 196, baseType: !3063, size: 64, offset: 8640)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{null, !3066}
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !2987, line: 177, baseType: !2986)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !2986, file: !2987, line: 199, baseType: !3069, size: 64, offset: 8704)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null, !3066, !3072}
!3072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !2986, file: !2987, line: 202, baseType: !3063, size: 64, offset: 8768)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !2986, file: !2987, line: 207, baseType: !3075, size: 64, offset: 8832)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!57, !3066}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !2986, file: !2987, line: 208, baseType: !3075, size: 64, offset: 8896)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !2986, file: !2987, line: 209, baseType: !3075, size: 64, offset: 8960)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !2986, file: !2987, line: 210, baseType: !3075, size: 64, offset: 9024)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !2986, file: !2987, line: 211, baseType: !3075, size: 64, offset: 9088)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !2986, file: !2987, line: 218, baseType: !3083, size: 64, offset: 9152)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{null, !3066, !57, !2029}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !2986, file: !2987, line: 219, baseType: !3087, size: 64, offset: 9216)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{null, !3066, !57, !3090}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !1468, line: 48, size: 96, elements: !3092)
!3092 = !{!3093, !3094, !3095, !3096, !3097}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3091, file: !1468, line: 49, baseType: !132, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3091, file: !1468, line: 49, baseType: !132, size: 32, offset: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3091, file: !1468, line: 50, baseType: !42, size: 8, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3091, file: !1468, line: 50, baseType: !42, size: 8, offset: 72)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3091, file: !1468, line: 51, baseType: !55, size: 16, offset: 80)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !2986, file: !2987, line: 220, baseType: !3099, size: 64, offset: 9280)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !3066, !57, !3102}
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !1468, line: 42, size: 160, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3103, file: !1468, line: 43, baseType: !132, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3103, file: !1468, line: 43, baseType: !132, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3103, file: !1468, line: 43, baseType: !132, size: 32, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3103, file: !1468, line: 43, baseType: !132, size: 32, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3103, file: !1468, line: 44, baseType: !55, size: 16, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3103, file: !1468, line: 45, baseType: !42, size: 8, offset: 144)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3103, file: !1468, line: 45, baseType: !42, size: 8, offset: 152)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !2986, file: !2987, line: 227, baseType: !3113, size: 64, offset: 9344)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!2029, !3066}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !2986, file: !2987, line: 228, baseType: !3117, size: 64, offset: 9408)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!3090, !3066}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !2986, file: !2987, line: 229, baseType: !3121, size: 64, offset: 9472)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!3102, !3066}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !2986, file: !2987, line: 230, baseType: !3125, size: 64, offset: 9536)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!2046, !3066}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !2986, file: !2987, line: 231, baseType: !3129, size: 64, offset: 9600)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!2037, !3066}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !2986, file: !2987, line: 236, baseType: !3133, size: 64, offset: 9664)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !3066, !2029}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !2986, file: !2987, line: 237, baseType: !3137, size: 64, offset: 9728)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{null, !3066, !3090}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !2986, file: !2987, line: 238, baseType: !3141, size: 64, offset: 9792)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{null, !3066, !3102}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !2986, file: !2987, line: 239, baseType: !3145, size: 64, offset: 9856)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{null, !3066, !2046}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !2986, file: !2987, line: 240, baseType: !3149, size: 64, offset: 9920)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{null, !3066, !2037}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !2986, file: !2987, line: 245, baseType: !3113, size: 64, offset: 9984)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !2986, file: !2987, line: 246, baseType: !3117, size: 64, offset: 10048)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !2986, file: !2987, line: 247, baseType: !3121, size: 64, offset: 10112)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !2986, file: !2987, line: 248, baseType: !3125, size: 64, offset: 10176)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !2986, file: !2987, line: 249, baseType: !3129, size: 64, offset: 10240)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !2986, file: !2987, line: 255, baseType: !3158, size: 64, offset: 10304)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!26, !3066, !57, !57}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !2986, file: !2987, line: 256, baseType: !3158, size: 64, offset: 10368)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !2986, file: !2987, line: 257, baseType: !3158, size: 64, offset: 10432)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !2986, file: !2987, line: 258, baseType: !3158, size: 64, offset: 10496)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !2986, file: !2987, line: 264, baseType: !3165, size: 64, offset: 10560)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!26, !3066, !57}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !2986, file: !2987, line: 265, baseType: !3165, size: 64, offset: 10624)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !2986, file: !2987, line: 266, baseType: !3165, size: 64, offset: 10688)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !2986, file: !2987, line: 267, baseType: !3165, size: 64, offset: 10752)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !2986, file: !2987, line: 268, baseType: !3165, size: 64, offset: 10816)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !2986, file: !2987, line: 272, baseType: !3173, size: 64, offset: 10880)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!3176, !3066}
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !2986, file: !2987, line: 273, baseType: !3173, size: 64, offset: 10944)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !2986, file: !2987, line: 274, baseType: !3173, size: 64, offset: 11008)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !2986, file: !2987, line: 275, baseType: !3173, size: 64, offset: 11072)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !2986, file: !2987, line: 276, baseType: !3173, size: 64, offset: 11136)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !2986, file: !2987, line: 279, baseType: !3182, size: 64, offset: 11200)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{null, !3066, !57, !3176, !57}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !2986, file: !2987, line: 280, baseType: !3182, size: 64, offset: 11264)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !2986, file: !2987, line: 281, baseType: !3182, size: 64, offset: 11328)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !2986, file: !2987, line: 284, baseType: !3075, size: 64, offset: 11392)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !2986, file: !2987, line: 285, baseType: !3075, size: 64, offset: 11456)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !2986, file: !2987, line: 286, baseType: !3190, size: 64, offset: 11520)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!3193, !3066}
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !2319, line: 33, flags: DIFlagFwdDecl)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !2986, file: !2987, line: 287, baseType: !3197, size: 64, offset: 11584)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!3200, !3066}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !2987, line: 120, baseType: !3202)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !2987, line: 117, size: 256, elements: !3203)
!3203 = !{!3204, !3206}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3202, file: !2987, line: 118, baseType: !3205, size: 128)
!3205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 128, elements: !164)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !3202, file: !2987, line: 119, baseType: !3205, size: 128, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !2986, file: !2987, line: 288, baseType: !3208, size: 64, offset: 11648)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!2083, !3066}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !2986, file: !2987, line: 289, baseType: !3212, size: 64, offset: 11712)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{null, !3066, !3215}
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !3217, line: 53, size: 320, elements: !3218)
!3217 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3216, file: !3217, line: 54, baseType: !57, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !3216, file: !3217, line: 58, baseType: !57, size: 32, offset: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !3216, file: !3217, line: 61, baseType: !57, size: 32, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !3216, file: !3217, line: 63, baseType: !57, size: 32, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !3216, file: !3217, line: 65, baseType: !57, size: 32, offset: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !3216, file: !3217, line: 69, baseType: !57, size: 32, offset: 160)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !3216, file: !3217, line: 73, baseType: !57, size: 32, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !3216, file: !3217, line: 75, baseType: !57, size: 32, offset: 224)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !3216, file: !3217, line: 76, baseType: !57, size: 32, offset: 256)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !3216, file: !3217, line: 77, baseType: !57, size: 32, offset: 288)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !2986, file: !2987, line: 290, baseType: !3230, size: 64, offset: 11776)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!3233, !3066}
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !2987, line: 126, baseType: !3235)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !2987, line: 123, size: 32, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3235, file: !2987, line: 124, baseType: !55, size: 16)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3235, file: !2987, line: 125, baseType: !42, size: 8, offset: 16)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !2986, file: !2987, line: 291, baseType: !3240, size: 64, offset: 11840)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!3243, !3066}
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !2986, file: !2987, line: 299, baseType: !3245, size: 64, offset: 11904)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !3066, !3248, !26, !3254}
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null, !26, !57, !3251, !3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!3254 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !2987, line: 162, baseType: !3255)
!3255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !2987, line: 159, baseType: !132, size: 32, elements: !3256)
!3256 = !{!3257, !3258}
!3257 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!3258 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !2986, file: !2987, line: 309, baseType: !3260, size: 64, offset: 11968)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{null, !3066, !3263, !26}
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{null, !26, !57, !3251, !3251}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !2986, file: !2987, line: 317, baseType: !3267, size: 64, offset: 12032)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{null, !3066, !3270, !26, !3254}
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !26, !57, !57, !3251, !3251}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !2986, file: !2987, line: 327, baseType: !3274, size: 64, offset: 12096)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !3066, !3263, !26, !3254}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !2986, file: !2987, line: 337, baseType: !3278, size: 64, offset: 12160)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{null, !3066, !359, !359}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !2986, file: !2987, line: 344, baseType: !3282, size: 64, offset: 12224)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !3066, !57, !359}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !2986, file: !2987, line: 347, baseType: !3286, size: 64, offset: 12288)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{null, !3066, !2054}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !2986, file: !2987, line: 350, baseType: !3282, size: 64, offset: 12352)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !2986, file: !2987, line: 351, baseType: !3282, size: 64, offset: 12416)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !2986, file: !2987, line: 355, baseType: !3292, size: 64, offset: 12480)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!2077, !248, !3066}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !2986, file: !2987, line: 359, baseType: !3296, size: 64, offset: 12544)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!2321, !248, !3066}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !2986, file: !2987, line: 364, baseType: !3063, size: 64, offset: 12608)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !2986, file: !2987, line: 367, baseType: !3063, size: 64, offset: 12672)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !2986, file: !2987, line: 373, baseType: !3302, size: 64, offset: 12736)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{null, !3066, !2315, !2315}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !2986, file: !2987, line: 376, baseType: !3063, size: 64, offset: 12800)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !2986, file: !2987, line: 385, baseType: !3307, size: 64, offset: 12864)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{null, !3066, !3310, !2315, !3311}
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !2987, line: 146, baseType: !3312)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!57, !57, !26}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !2986, file: !2987, line: 391, baseType: !3316, size: 64, offset: 12928)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{null, !3066, !3319, !3341, !26, !3345}
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !2987, line: 150, baseType: !3320)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!3323, !3330, !3340, !57}
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !2987, line: 143, baseType: !3324)
!3324 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !2987, line: 134, baseType: !132, size: 32, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329}
!3326 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!3327 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!3328 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!3329 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !1468, line: 160, size: 384, elements: !3332)
!3332 = !{!3333, !3334, !3335, !3336, !3337, !3338, !3339}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3331, file: !1468, line: 161, baseType: !1327, size: 256)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3331, file: !1468, line: 162, baseType: !96, size: 64, offset: 256)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3331, file: !1468, line: 163, baseType: !42, size: 8, offset: 320)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3331, file: !1468, line: 163, baseType: !42, size: 8, offset: 328)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3331, file: !1468, line: 164, baseType: !55, size: 16, offset: 336)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3331, file: !1468, line: 164, baseType: !55, size: 16, offset: 352)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3331, file: !1468, line: 164, baseType: !55, size: 16, offset: 368)
!3340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2315)
!3341 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !2987, line: 147, baseType: !3342)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!57, !26, !57, !57}
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !2987, line: 157, baseType: !3346)
!3346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !2987, line: 152, baseType: !132, size: 32, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3351}
!3348 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!3349 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!3350 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!3351 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !2986, file: !2987, line: 400, baseType: !3353, size: 64, offset: 12992)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !3066, !3311}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !2986, file: !2987, line: 415, baseType: !3357, size: 64, offset: 13056)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{null, !3066, !3360, !3311, !3341, !26, !3345}
!3360 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !2987, line: 149, baseType: !3361)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!3323, !26, !57}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !2986, file: !2987, line: 425, baseType: !3365, size: 64, offset: 13120)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{null, !3066, !3360, !3341, !26, !3345}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !2986, file: !2987, line: 435, baseType: !3369, size: 64, offset: 13184)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{null, !3066, !3311, !3360, !26}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !2986, file: !2987, line: 444, baseType: !3373, size: 64, offset: 13248)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{null, !3066, !3360, !26}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !2986, file: !2987, line: 455, baseType: !3377, size: 64, offset: 13312)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !3066, !3360, !3380, !26}
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !2987, line: 148, baseType: !3381)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{null, !26, !57, !153}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !2986, file: !2987, line: 464, baseType: !3385, size: 64, offset: 13376)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{null, !3066, !3388, !3391, !26}
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !26, !57, !26}
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!2315, !26, !57}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2986, file: !2987, line: 470, baseType: !3063, size: 64, offset: 13440)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !249, file: !250, line: 277, baseType: !2985, size: 64, offset: 10368)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !249, file: !250, line: 278, baseType: !2008, size: 64, offset: 10432)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !249, file: !250, line: 279, baseType: !2008, size: 64, offset: 10496)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !249, file: !250, line: 280, baseType: !132, size: 32, offset: 10560)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !249, file: !250, line: 281, baseType: !132, size: 32, offset: 10592)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !249, file: !250, line: 283, baseType: !82, size: 128, offset: 10624)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !249, file: !250, line: 284, baseType: !82, size: 128, offset: 10752)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !249, file: !250, line: 285, baseType: !1110, size: 64, offset: 10880)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !249, file: !250, line: 287, baseType: !3404, size: 64, offset: 10944)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !250, line: 59, flags: DIFlagFwdDecl)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !249, file: !250, line: 288, baseType: !3407, size: 64, offset: 11008)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !250, line: 288, flags: DIFlagFwdDecl)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !249, file: !250, line: 290, baseType: !186, size: 64, offset: 11072)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !249, file: !250, line: 291, baseType: !3411, size: 64, offset: 11136)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !98, line: 65, baseType: !2413)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !249, file: !250, line: 293, baseType: !82, size: 128, offset: 11200)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !249, file: !250, line: 294, baseType: !3415, size: 64, offset: 11328)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !250, line: 113, baseType: !3417)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !250, line: 108, size: 256, elements: !3418)
!3418 = !{!3419, !3421, !3422, !3423, !3424}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3417, file: !250, line: 109, baseType: !3420, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3417, file: !250, line: 109, baseType: !3420, size: 64, offset: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3417, file: !250, line: 110, baseType: !248, size: 64, offset: 128)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3417, file: !250, line: 111, baseType: !57, size: 32, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3417, file: !250, line: 112, baseType: !153, size: 32, offset: 224)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !240, file: !241, line: 61, baseType: !3426, size: 64, offset: 128)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !241, line: 202, size: 3328, elements: !3428)
!3428 = !{!3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3507, !3508, !3537, !3558, !3566, !3567}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3427, file: !241, line: 203, baseType: !21, size: 960)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3427, file: !241, line: 204, baseType: !254, size: 64, offset: 960)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !3427, file: !241, line: 206, baseType: !153, size: 32, offset: 1024)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !3427, file: !241, line: 206, baseType: !153, size: 32, offset: 1056)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1088)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1120)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1152)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1184)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1216)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !3427, file: !241, line: 207, baseType: !153, size: 32, offset: 1248)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !3427, file: !241, line: 208, baseType: !153, size: 32, offset: 1280)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3427, file: !241, line: 208, baseType: !153, size: 32, offset: 1312)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !3427, file: !241, line: 211, baseType: !153, size: 32, offset: 1344)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !3427, file: !241, line: 211, baseType: !153, size: 32, offset: 1376)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !3427, file: !241, line: 211, baseType: !153, size: 32, offset: 1408)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !3427, file: !241, line: 211, baseType: !153, size: 32, offset: 1440)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !3427, file: !241, line: 211, baseType: !153, size: 32, offset: 1472)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !3427, file: !241, line: 214, baseType: !153, size: 32, offset: 1504)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !3427, file: !241, line: 214, baseType: !153, size: 32, offset: 1536)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !3427, file: !241, line: 217, baseType: !153, size: 32, offset: 1568)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !3427, file: !241, line: 218, baseType: !153, size: 32, offset: 1600)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !3427, file: !241, line: 219, baseType: !153, size: 32, offset: 1632)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !3427, file: !241, line: 220, baseType: !153, size: 32, offset: 1664)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !3427, file: !241, line: 221, baseType: !153, size: 32, offset: 1696)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !3427, file: !241, line: 222, baseType: !55, size: 16, offset: 1728)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !3427, file: !241, line: 222, baseType: !55, size: 16, offset: 1744)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !3427, file: !241, line: 224, baseType: !55, size: 16, offset: 1760)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !3427, file: !241, line: 224, baseType: !55, size: 16, offset: 1776)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !3427, file: !241, line: 227, baseType: !55, size: 16, offset: 1792)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !3427, file: !241, line: 227, baseType: !55, size: 16, offset: 1808)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !3427, file: !241, line: 229, baseType: !55, size: 16, offset: 1824)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3427, file: !241, line: 229, baseType: !55, size: 16, offset: 1840)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3427, file: !241, line: 230, baseType: !55, size: 16, offset: 1856)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3427, file: !241, line: 230, baseType: !55, size: 16, offset: 1872)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !3427, file: !241, line: 232, baseType: !153, size: 32, offset: 1888)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !3427, file: !241, line: 232, baseType: !153, size: 32, offset: 1920)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !3427, file: !241, line: 232, baseType: !153, size: 32, offset: 1952)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !3427, file: !241, line: 232, baseType: !153, size: 32, offset: 1984)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !3427, file: !241, line: 233, baseType: !57, size: 32, offset: 2016)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !3427, file: !241, line: 234, baseType: !57, size: 32, offset: 2048)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !3427, file: !241, line: 235, baseType: !55, size: 16, offset: 2080)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !3427, file: !241, line: 235, baseType: !55, size: 16, offset: 2096)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3427, file: !241, line: 236, baseType: !55, size: 16, offset: 2112)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !3427, file: !241, line: 239, baseType: !55, size: 16, offset: 2128)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3427, file: !241, line: 240, baseType: !57, size: 32, offset: 2144)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !3427, file: !241, line: 241, baseType: !57, size: 32, offset: 2176)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3427, file: !241, line: 241, baseType: !57, size: 32, offset: 2208)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3427, file: !241, line: 241, baseType: !57, size: 32, offset: 2240)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !3427, file: !241, line: 243, baseType: !153, size: 32, offset: 2272)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !3427, file: !241, line: 243, baseType: !153, size: 32, offset: 2304)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3427, file: !241, line: 244, baseType: !153, size: 32, offset: 2336)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3427, file: !241, line: 246, baseType: !2413, size: 320, offset: 2368)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3427, file: !241, line: 248, baseType: !374, size: 64, offset: 2688)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3427, file: !241, line: 249, baseType: !362, size: 64, offset: 2752)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3427, file: !241, line: 250, baseType: !96, size: 64, offset: 2816)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3427, file: !241, line: 251, baseType: !2600, size: 64, offset: 2880)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3427, file: !241, line: 252, baseType: !3486, size: 64, offset: 2944)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !241, line: 122, size: 1600, elements: !3488)
!3488 = !{!3489, !3490, !3491, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3487, file: !241, line: 123, baseType: !248, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3487, file: !241, line: 124, baseType: !96, size: 64, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !3487, file: !241, line: 125, baseType: !3492, size: 384, offset: 128)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 384, elements: !713)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3487, file: !241, line: 126, baseType: !1294, size: 512, offset: 512)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !3487, file: !241, line: 127, baseType: !2329, size: 288, offset: 1024)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3487, file: !241, line: 128, baseType: !55, size: 16, offset: 1312)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3487, file: !241, line: 128, baseType: !55, size: 16, offset: 1328)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3487, file: !241, line: 129, baseType: !153, size: 32, offset: 1344)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3487, file: !241, line: 129, baseType: !153, size: 32, offset: 1376)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !3487, file: !241, line: 130, baseType: !153, size: 32, offset: 1408)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !3487, file: !241, line: 131, baseType: !132, size: 32, offset: 1440)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !3487, file: !241, line: 132, baseType: !55, size: 16, offset: 1472)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3487, file: !241, line: 132, baseType: !55, size: 16, offset: 1488)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3487, file: !241, line: 133, baseType: !57, size: 32, offset: 1504)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !3487, file: !241, line: 133, baseType: !57, size: 32, offset: 1536)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3487, file: !241, line: 134, baseType: !55, size: 16, offset: 1568)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !3487, file: !241, line: 134, baseType: !55, size: 16, offset: 1584)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3427, file: !241, line: 253, baseType: !137, size: 64, offset: 3008)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3427, file: !241, line: 254, baseType: !3509, size: 64, offset: 3072)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !241, line: 137, size: 832, elements: !3511)
!3511 = !{!3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3510, file: !241, line: 138, baseType: !55, size: 16)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !3510, file: !241, line: 140, baseType: !55, size: 16, offset: 16)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !3510, file: !241, line: 141, baseType: !153, size: 32, offset: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3510, file: !241, line: 142, baseType: !153, size: 32, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3510, file: !241, line: 143, baseType: !55, size: 16, offset: 96)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !3510, file: !241, line: 144, baseType: !55, size: 16, offset: 112)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !3510, file: !241, line: 145, baseType: !57, size: 32, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !3510, file: !241, line: 147, baseType: !57, size: 32, offset: 160)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3510, file: !241, line: 149, baseType: !248, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3510, file: !241, line: 150, baseType: !57, size: 32, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !3510, file: !241, line: 151, baseType: !55, size: 16, offset: 288)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !3510, file: !241, line: 152, baseType: !55, size: 16, offset: 304)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !3510, file: !241, line: 154, baseType: !26, size: 64, offset: 320)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !3510, file: !241, line: 155, baseType: !359, size: 64, offset: 384)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !3510, file: !241, line: 157, baseType: !153, size: 32, offset: 448)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !3510, file: !241, line: 158, baseType: !55, size: 16, offset: 480)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !3510, file: !241, line: 159, baseType: !55, size: 16, offset: 496)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !3510, file: !241, line: 160, baseType: !55, size: 16, offset: 512)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !3510, file: !241, line: 161, baseType: !1938, size: 48, offset: 528)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !3510, file: !241, line: 162, baseType: !153, size: 32, offset: 576)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !3510, file: !241, line: 164, baseType: !153, size: 32, offset: 608)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !3510, file: !241, line: 164, baseType: !153, size: 32, offset: 640)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !3510, file: !241, line: 164, baseType: !153, size: 32, offset: 672)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3510, file: !241, line: 165, baseType: !2600, size: 64, offset: 704)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !3510, file: !241, line: 167, baseType: !190, size: 64, offset: 768)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3427, file: !241, line: 255, baseType: !3538, size: 64, offset: 3136)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !241, line: 170, size: 8704, elements: !3540)
!3540 = !{!3541, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !3539, file: !241, line: 171, baseType: !3542, size: 96)
!3542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 96, elements: !234)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !3539, file: !241, line: 172, baseType: !57, size: 32, offset: 96)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !3539, file: !241, line: 173, baseType: !55, size: 16, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3539, file: !241, line: 174, baseType: !55, size: 16, offset: 144)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3539, file: !241, line: 175, baseType: !55, size: 16, offset: 160)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !3539, file: !241, line: 176, baseType: !55, size: 16, offset: 176)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !3539, file: !241, line: 177, baseType: !55, size: 16, offset: 192)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3539, file: !241, line: 178, baseType: !55, size: 16, offset: 208)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3539, file: !241, line: 179, baseType: !57, size: 32, offset: 224)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3539, file: !241, line: 181, baseType: !248, size: 64, offset: 256)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !3539, file: !241, line: 182, baseType: !153, size: 32, offset: 320)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !3539, file: !241, line: 183, baseType: !57, size: 32, offset: 352)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !3539, file: !241, line: 184, baseType: !41, size: 8192, offset: 384)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !3539, file: !241, line: 187, baseType: !359, size: 64, offset: 8576)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !3539, file: !241, line: 188, baseType: !57, size: 32, offset: 8640)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3539, file: !241, line: 189, baseType: !57, size: 32, offset: 8672)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !3427, file: !241, line: 256, baseType: !3559, size: 64, offset: 3200)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !241, line: 193, size: 640, elements: !3561)
!3561 = !{!3562, !3563, !3564, !3565}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3560, file: !241, line: 194, baseType: !248, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !3560, file: !241, line: 195, baseType: !72, size: 512, offset: 64)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3560, file: !241, line: 197, baseType: !57, size: 32, offset: 576)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3560, file: !241, line: 198, baseType: !57, size: 32, offset: 608)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3427, file: !241, line: 258, baseType: !42, size: 8, offset: 3264)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3427, file: !241, line: 259, baseType: !176, size: 56, offset: 3272)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !240, file: !241, line: 62, baseType: !72, size: 512, offset: 192)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !240, file: !241, line: 64, baseType: !42, size: 8, offset: 704)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !240, file: !241, line: 64, baseType: !42, size: 8, offset: 712)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !240, file: !241, line: 64, baseType: !42, size: 8, offset: 720)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !240, file: !241, line: 64, baseType: !42, size: 8, offset: 728)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !240, file: !241, line: 65, baseType: !233, size: 96, offset: 736)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !240, file: !241, line: 65, baseType: !233, size: 96, offset: 832)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !240, file: !241, line: 65, baseType: !153, size: 32, offset: 928)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !240, file: !241, line: 67, baseType: !55, size: 16, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !240, file: !241, line: 67, baseType: !55, size: 16, offset: 976)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !240, file: !241, line: 67, baseType: !55, size: 16, offset: 992)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !240, file: !241, line: 67, baseType: !55, size: 16, offset: 1008)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !240, file: !241, line: 68, baseType: !55, size: 16, offset: 1024)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !240, file: !241, line: 68, baseType: !55, size: 16, offset: 1040)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !240, file: !241, line: 69, baseType: !42, size: 8, offset: 1056)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !240, file: !241, line: 69, baseType: !176, size: 56, offset: 1064)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !240, file: !241, line: 70, baseType: !153, size: 32, offset: 1120)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !240, file: !241, line: 70, baseType: !153, size: 32, offset: 1152)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !240, file: !241, line: 70, baseType: !153, size: 32, offset: 1184)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !240, file: !241, line: 70, baseType: !153, size: 32, offset: 1216)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !240, file: !241, line: 71, baseType: !153, size: 32, offset: 1248)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !240, file: !241, line: 71, baseType: !153, size: 32, offset: 1280)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !240, file: !241, line: 74, baseType: !153, size: 32, offset: 1312)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !240, file: !241, line: 74, baseType: !153, size: 32, offset: 1344)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !240, file: !241, line: 77, baseType: !153, size: 32, offset: 1376)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !240, file: !241, line: 77, baseType: !153, size: 32, offset: 1408)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !240, file: !241, line: 77, baseType: !153, size: 32, offset: 1440)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !240, file: !241, line: 78, baseType: !153, size: 32, offset: 1472)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !240, file: !241, line: 78, baseType: !153, size: 32, offset: 1504)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !240, file: !241, line: 78, baseType: !153, size: 32, offset: 1536)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !240, file: !241, line: 79, baseType: !153, size: 32, offset: 1568)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !240, file: !241, line: 79, baseType: !153, size: 32, offset: 1600)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !240, file: !241, line: 79, baseType: !153, size: 32, offset: 1632)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !240, file: !241, line: 79, baseType: !153, size: 32, offset: 1664)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !240, file: !241, line: 80, baseType: !153, size: 32, offset: 1696)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !240, file: !241, line: 80, baseType: !153, size: 32, offset: 1728)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !240, file: !241, line: 80, baseType: !153, size: 32, offset: 1760)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !240, file: !241, line: 81, baseType: !153, size: 32, offset: 1792)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !240, file: !241, line: 81, baseType: !153, size: 32, offset: 1824)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !240, file: !241, line: 81, baseType: !153, size: 32, offset: 1856)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !240, file: !241, line: 82, baseType: !153, size: 32, offset: 1888)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !240, file: !241, line: 82, baseType: !153, size: 32, offset: 1920)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !240, file: !241, line: 82, baseType: !153, size: 32, offset: 1952)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !240, file: !241, line: 85, baseType: !153, size: 32, offset: 1984)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !240, file: !241, line: 85, baseType: !153, size: 32, offset: 2016)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !240, file: !241, line: 85, baseType: !153, size: 32, offset: 2048)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !240, file: !241, line: 85, baseType: !153, size: 32, offset: 2080)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !240, file: !241, line: 86, baseType: !153, size: 32, offset: 2112)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !240, file: !241, line: 86, baseType: !153, size: 32, offset: 2144)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !240, file: !241, line: 86, baseType: !153, size: 32, offset: 2176)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !240, file: !241, line: 86, baseType: !153, size: 32, offset: 2208)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !240, file: !241, line: 87, baseType: !153, size: 32, offset: 2240)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !240, file: !241, line: 87, baseType: !153, size: 32, offset: 2272)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !240, file: !241, line: 87, baseType: !153, size: 32, offset: 2304)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !240, file: !241, line: 87, baseType: !153, size: 32, offset: 2336)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !240, file: !241, line: 90, baseType: !153, size: 32, offset: 2368)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !240, file: !241, line: 93, baseType: !153, size: 32, offset: 2400)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !240, file: !241, line: 93, baseType: !153, size: 32, offset: 2432)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !240, file: !241, line: 93, baseType: !153, size: 32, offset: 2464)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !17, file: !18, line: 60, baseType: !240, size: 2496, offset: 3712)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !17, file: !18, line: 62, baseType: !16, size: 64, offset: 6208)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !17, file: !18, line: 64, baseType: !873, size: 64, offset: 6272)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !17, file: !18, line: 65, baseType: !3631, size: 64, offset: 6336)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !22, line: 167, baseType: !138)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !17, file: !18, line: 66, baseType: !2600, size: 64, offset: 6400)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !17, file: !18, line: 67, baseType: !3635, size: 64, offset: 6464)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !18, line: 166, size: 1088, elements: !3637)
!3637 = !{!3638, !3639, !3667, !3668}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3636, file: !18, line: 168, baseType: !21, size: 960)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3636, file: !18, line: 169, baseType: !3640, size: 64, offset: 960)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !18, line: 164, baseType: !3642)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !18, line: 160, size: 608, elements: !3643)
!3643 = !{!3644, !3666}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !3642, file: !18, line: 162, baseType: !3645, size: 576)
!3645 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !3646, line: 133, baseType: !3647)
!3646 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !3646, line: 117, size: 576, elements: !3648)
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3647, file: !3646, line: 118, baseType: !2329, size: 288)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3647, file: !3646, line: 119, baseType: !153, size: 32, offset: 288)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3647, file: !3646, line: 119, baseType: !153, size: 32, offset: 320)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3647, file: !3646, line: 119, baseType: !153, size: 32, offset: 352)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3647, file: !3646, line: 121, baseType: !42, size: 8, offset: 384)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !3647, file: !3646, line: 123, baseType: !42, size: 8, offset: 392)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !3647, file: !3646, line: 123, baseType: !42, size: 8, offset: 400)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3647, file: !3646, line: 124, baseType: !42, size: 8, offset: 408)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !3647, file: !3646, line: 124, baseType: !42, size: 8, offset: 416)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !3647, file: !3646, line: 124, baseType: !42, size: 8, offset: 424)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3647, file: !3646, line: 126, baseType: !42, size: 8, offset: 432)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !3647, file: !3646, line: 128, baseType: !42, size: 8, offset: 440)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !3647, file: !3646, line: 129, baseType: !153, size: 32, offset: 448)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !3647, file: !3646, line: 130, baseType: !153, size: 32, offset: 480)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3647, file: !3646, line: 130, baseType: !153, size: 32, offset: 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3647, file: !3646, line: 132, baseType: !3665, size: 32, offset: 544)
!3665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 32, elements: !164)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !3642, file: !18, line: 163, baseType: !153, size: 32, offset: 576)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !3636, file: !18, line: 170, baseType: !57, size: 32, offset: 1024)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !3636, file: !18, line: 171, baseType: !57, size: 32, offset: 1056)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !17, file: !18, line: 69, baseType: !41, size: 8192, offset: 6528)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !17, file: !18, line: 71, baseType: !153, size: 32, offset: 14720)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !17, file: !18, line: 73, baseType: !55, size: 16, offset: 14752)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !17, file: !18, line: 74, baseType: !55, size: 16, offset: 14768)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !17, file: !18, line: 75, baseType: !153, size: 32, offset: 14784)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17, file: !18, line: 76, baseType: !57, size: 32, offset: 14816)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !17, file: !18, line: 77, baseType: !57, size: 32, offset: 14848)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !17, file: !18, line: 78, baseType: !57, size: 32, offset: 14880)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !17, file: !18, line: 79, baseType: !153, size: 32, offset: 14912)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !17, file: !18, line: 80, baseType: !57, size: 32, offset: 14944)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !17, file: !18, line: 81, baseType: !57, size: 32, offset: 14976)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !17, file: !18, line: 82, baseType: !57, size: 32, offset: 15008)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !17, file: !18, line: 83, baseType: !57, size: 32, offset: 15040)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !17, file: !18, line: 84, baseType: !153, size: 32, offset: 15072)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !17, file: !18, line: 85, baseType: !153, size: 32, offset: 15104)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !17, file: !18, line: 87, baseType: !233, size: 96, offset: 15136)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !17, file: !18, line: 88, baseType: !153, size: 32, offset: 15232)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !17, file: !18, line: 90, baseType: !233, size: 96, offset: 15264)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !17, file: !18, line: 92, baseType: !57, size: 32, offset: 15360)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !17, file: !18, line: 94, baseType: !153, size: 32, offset: 15392)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !17, file: !18, line: 96, baseType: !153, size: 32, offset: 15424)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !17, file: !18, line: 97, baseType: !57, size: 32, offset: 15456)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !17, file: !18, line: 98, baseType: !57, size: 32, offset: 15488)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !17, file: !18, line: 99, baseType: !57, size: 32, offset: 15520)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !17, file: !18, line: 101, baseType: !42, size: 8, offset: 15552)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !17, file: !18, line: 102, baseType: !42, size: 8, offset: 15560)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !17, file: !18, line: 103, baseType: !42, size: 8, offset: 15568)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !17, file: !18, line: 104, baseType: !42, size: 8, offset: 15576)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !17, file: !18, line: 106, baseType: !153, size: 32, offset: 15584)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !17, file: !18, line: 108, baseType: !153, size: 32, offset: 15616)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !17, file: !18, line: 110, baseType: !153, size: 32, offset: 15648)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !17, file: !18, line: 111, baseType: !153, size: 32, offset: 15680)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !17, file: !18, line: 113, baseType: !153, size: 32, offset: 15712)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !17, file: !18, line: 116, baseType: !57, size: 32, offset: 15744)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !17, file: !18, line: 117, baseType: !57, size: 32, offset: 15776)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !17, file: !18, line: 118, baseType: !57, size: 32, offset: 15808)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !17, file: !18, line: 120, baseType: !153, size: 32, offset: 15840)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !17, file: !18, line: 123, baseType: !153, size: 32, offset: 15872)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !17, file: !18, line: 124, baseType: !57, size: 32, offset: 15904)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !17, file: !18, line: 125, baseType: !57, size: 32, offset: 15936)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !17, file: !18, line: 128, baseType: !153, size: 32, offset: 15968)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !17, file: !18, line: 130, baseType: !233, size: 96, offset: 16000)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !17, file: !18, line: 131, baseType: !233, size: 96, offset: 16096)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !17, file: !18, line: 133, baseType: !186, size: 64, offset: 16192)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !17, file: !18, line: 134, baseType: !186, size: 64, offset: 16256)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !17, file: !18, line: 136, baseType: !186, size: 64, offset: 16320)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !17, file: !18, line: 137, baseType: !186, size: 64, offset: 16384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !13, file: !8, line: 815, baseType: !3717, size: 64, offset: 64)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !18, line: 148, size: 1280, elements: !3719)
!3719 = !{!3720, !3721, !3722, !3723, !3724}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3718, file: !18, line: 150, baseType: !21, size: 960)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !3718, file: !18, line: 153, baseType: !82, size: 128, offset: 960)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !3718, file: !18, line: 154, baseType: !82, size: 128, offset: 1088)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !3718, file: !18, line: 156, baseType: !57, size: 32, offset: 1216)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3718, file: !18, line: 157, baseType: !57, size: 32, offset: 1248)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !13, file: !8, line: 818, baseType: !26, size: 64, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !13, file: !8, line: 819, baseType: !3727, size: 32, offset: 192)
!3727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2315, size: 32, elements: !164)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13, file: !8, line: 822, baseType: !57, size: 32, offset: 224)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !13, file: !8, line: 826, baseType: !57, size: 32, offset: 256)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !13, file: !8, line: 829, baseType: !57, size: 32, offset: 288)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9, file: !8, line: 896, baseType: !57, size: 32, offset: 320)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !9, file: !8, line: 900, baseType: !3542, size: 96, offset: 352)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !9, file: !8, line: 903, baseType: !153, size: 32, offset: 448)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !9, file: !8, line: 906, baseType: !57, size: 32, offset: 480)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !9, file: !8, line: 909, baseType: !153, size: 32, offset: 512)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !9, file: !8, line: 912, baseType: !153, size: 32, offset: 544)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !9, file: !8, line: 914, baseType: !248, size: 64, offset: 576)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9, file: !8, line: 915, baseType: !26, size: 64, offset: 640)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !250, line: 295, baseType: !249)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHNode", file: !2319, line: 47, baseType: !3744)
!3744 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVHNode", file: !2319, line: 42, flags: DIFlagFwdDecl)
!3745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3746, retainedTypes: !5011, globals: !5188, splitDebugInlining: false, nameTableKind: None)
!3746 = !{!2194, !2210, !2218, !2226, !2260, !3046, !3054, !3255, !3324, !3346, !3747, !3758, !3762, !3772, !3815, !3822, !3838, !3847, !3853, !3874, !3878, !3883, !3889, !3893, !3901, !3934, !3986, !3996, !4006, !4011, !4020, !4026, !4035, !4041, !4045, !4052, !4069, !4074, !4080, !4085, !4096, !4105, !4117, !4123, !4973, !4987, !4990}
!3747 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2319, line: 152, baseType: !132, size: 32, elements: !3748)
!3748 = !{!3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757}
!3749 = !DIEnumerator(name: "PBVH_Leaf", value: 1, isUnsigned: true)
!3750 = !DIEnumerator(name: "PBVH_UpdateNormals", value: 2, isUnsigned: true)
!3751 = !DIEnumerator(name: "PBVH_UpdateBB", value: 4, isUnsigned: true)
!3752 = !DIEnumerator(name: "PBVH_UpdateOriginalBB", value: 8, isUnsigned: true)
!3753 = !DIEnumerator(name: "PBVH_UpdateDrawBuffers", value: 16, isUnsigned: true)
!3754 = !DIEnumerator(name: "PBVH_UpdateRedraw", value: 32, isUnsigned: true)
!3755 = !DIEnumerator(name: "PBVH_RebuildDrawBuffers", value: 64, isUnsigned: true)
!3756 = !DIEnumerator(name: "PBVH_FullyHidden", value: 128, isUnsigned: true)
!3757 = !DIEnumerator(name: "PBVH_UpdateTopology", value: 256, isUnsigned: true)
!3758 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2058, line: 110, baseType: !132, size: 32, elements: !3759)
!3759 = !{!3760, !3761}
!3760 = !DIEnumerator(name: "KEY_NORMAL", value: 0, isUnsigned: true)
!3761 = !DIEnumerator(name: "KEY_RELATIVE", value: 1, isUnsigned: true)
!3762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !250, line: 666, baseType: !132, size: 32, elements: !3763)
!3763 = !{!3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771}
!3764 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!3765 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!3766 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!3767 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!3768 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!3769 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!3770 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!3771 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!3772 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2102, line: 76, baseType: !132, size: 32, elements: !3773)
!3773 = !{!3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814}
!3774 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!3775 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!3776 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!3777 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!3778 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!3779 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!3780 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!3781 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!3782 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!3783 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!3784 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!3785 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!3786 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!3787 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!3788 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!3789 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!3790 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!3791 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!3792 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!3793 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!3794 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!3795 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!3796 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!3797 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!3798 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!3799 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!3800 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!3801 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!3802 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!3803 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!3804 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!3805 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!3806 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!3807 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!3808 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!3809 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!3810 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!3811 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!3812 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!3813 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!3814 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!3815 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2102, line: 172, baseType: !132, size: 32, elements: !3816)
!3816 = !{!3817, !3818, !3819, !3820, !3821}
!3817 = !DIEnumerator(name: "CD_FLAG_NOCOPY", value: 1, isUnsigned: true)
!3818 = !DIEnumerator(name: "CD_FLAG_NOFREE", value: 2, isUnsigned: true)
!3819 = !DIEnumerator(name: "CD_FLAG_TEMPORARY", value: 5, isUnsigned: true)
!3820 = !DIEnumerator(name: "CD_FLAG_EXTERNAL", value: 8, isUnsigned: true)
!3821 = !DIEnumerator(name: "CD_FLAG_IN_MEMORY", value: 16, isUnsigned: true)
!3822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SculptFlags", file: !8, line: 1688, baseType: !132, size: 32, elements: !3823)
!3823 = !{!3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837}
!3824 = !DIEnumerator(name: "SCULPT_SYMM_X", value: 1, isUnsigned: true)
!3825 = !DIEnumerator(name: "SCULPT_SYMM_Y", value: 2, isUnsigned: true)
!3826 = !DIEnumerator(name: "SCULPT_SYMM_Z", value: 4, isUnsigned: true)
!3827 = !DIEnumerator(name: "SCULPT_LOCK_X", value: 8, isUnsigned: true)
!3828 = !DIEnumerator(name: "SCULPT_LOCK_Y", value: 16, isUnsigned: true)
!3829 = !DIEnumerator(name: "SCULPT_LOCK_Z", value: 32, isUnsigned: true)
!3830 = !DIEnumerator(name: "SCULPT_SYMMETRY_FEATHER", value: 64, isUnsigned: true)
!3831 = !DIEnumerator(name: "SCULPT_USE_OPENMP", value: 128, isUnsigned: true)
!3832 = !DIEnumerator(name: "SCULPT_ONLY_DEFORM", value: 256, isUnsigned: true)
!3833 = !DIEnumerator(name: "SCULPT_SHOW_DIFFUSE", value: 512, isUnsigned: true)
!3834 = !DIEnumerator(name: "SCULPT_DYNTOPO_SMOOTH_SHADING", value: 1024, isUnsigned: true)
!3835 = !DIEnumerator(name: "SCULPT_DYNTOPO_SUBDIVIDE", value: 4096, isUnsigned: true)
!3836 = !DIEnumerator(name: "SCULPT_DYNTOPO_COLLAPSE", value: 2048, isUnsigned: true)
!3837 = !DIEnumerator(name: "SCULPT_DYNTOPO_DETAIL_CONSTANT", value: 8192, isUnsigned: true)
!3838 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3839, line: 73, baseType: !132, size: 32, elements: !3840)
!3839 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/sculpt_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3840 = !{!3841, !3842, !3843, !3844, !3845, !3846}
!3841 = !DIEnumerator(name: "SCULPT_UNDO_COORDS", value: 0, isUnsigned: true)
!3842 = !DIEnumerator(name: "SCULPT_UNDO_HIDDEN", value: 1, isUnsigned: true)
!3843 = !DIEnumerator(name: "SCULPT_UNDO_MASK", value: 2, isUnsigned: true)
!3844 = !DIEnumerator(name: "SCULPT_UNDO_DYNTOPO_BEGIN", value: 3, isUnsigned: true)
!3845 = !DIEnumerator(name: "SCULPT_UNDO_DYNTOPO_END", value: 4, isUnsigned: true)
!3846 = !DIEnumerator(name: "SCULPT_UNDO_DYNTOPO_SYMMETRIZE", value: 5, isUnsigned: true)
!3847 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushStrokeMode", file: !3848, line: 248, baseType: !132, size: 32, elements: !3849)
!3848 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3849 = !{!3850, !3851, !3852}
!3850 = !DIEnumerator(name: "BRUSH_STROKE_NORMAL", value: 0, isUnsigned: true)
!3851 = !DIEnumerator(name: "BRUSH_STROKE_INVERT", value: 1, isUnsigned: true)
!3852 = !DIEnumerator(name: "BRUSH_STROKE_SMOOTH", value: 2, isUnsigned: true)
!3853 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushSculptTool", file: !18, line: 241, baseType: !132, size: 32, elements: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873}
!3855 = !DIEnumerator(name: "SCULPT_TOOL_DRAW", value: 1, isUnsigned: true)
!3856 = !DIEnumerator(name: "SCULPT_TOOL_SMOOTH", value: 2, isUnsigned: true)
!3857 = !DIEnumerator(name: "SCULPT_TOOL_PINCH", value: 3, isUnsigned: true)
!3858 = !DIEnumerator(name: "SCULPT_TOOL_INFLATE", value: 4, isUnsigned: true)
!3859 = !DIEnumerator(name: "SCULPT_TOOL_GRAB", value: 5, isUnsigned: true)
!3860 = !DIEnumerator(name: "SCULPT_TOOL_LAYER", value: 6, isUnsigned: true)
!3861 = !DIEnumerator(name: "SCULPT_TOOL_FLATTEN", value: 7, isUnsigned: true)
!3862 = !DIEnumerator(name: "SCULPT_TOOL_CLAY", value: 8, isUnsigned: true)
!3863 = !DIEnumerator(name: "SCULPT_TOOL_FILL", value: 9, isUnsigned: true)
!3864 = !DIEnumerator(name: "SCULPT_TOOL_SCRAPE", value: 10, isUnsigned: true)
!3865 = !DIEnumerator(name: "SCULPT_TOOL_NUDGE", value: 11, isUnsigned: true)
!3866 = !DIEnumerator(name: "SCULPT_TOOL_THUMB", value: 12, isUnsigned: true)
!3867 = !DIEnumerator(name: "SCULPT_TOOL_SNAKE_HOOK", value: 13, isUnsigned: true)
!3868 = !DIEnumerator(name: "SCULPT_TOOL_ROTATE", value: 14, isUnsigned: true)
!3869 = !DIEnumerator(name: "SCULPT_TOOL_SIMPLIFY", value: 15, isUnsigned: true)
!3870 = !DIEnumerator(name: "SCULPT_TOOL_CREASE", value: 16, isUnsigned: true)
!3871 = !DIEnumerator(name: "SCULPT_TOOL_BLOB", value: 17, isUnsigned: true)
!3872 = !DIEnumerator(name: "SCULPT_TOOL_CLAY_STRIPS", value: 18, isUnsigned: true)
!3873 = !DIEnumerator(name: "SCULPT_TOOL_MASK", value: 19, isUnsigned: true)
!3874 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !18, line: 292, baseType: !132, size: 32, elements: !3875)
!3875 = !{!3876, !3877}
!3876 = !DIEnumerator(name: "BRUSH_MASK_DRAW", value: 0, isUnsigned: true)
!3877 = !DIEnumerator(name: "BRUSH_MASK_SMOOTH", value: 1, isUnsigned: true)
!3878 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2319, line: 118, baseType: !132, size: 32, elements: !3879)
!3879 = !{!3880, !3881, !3882}
!3880 = !DIEnumerator(name: "PBVH_FACES", value: 0, isUnsigned: true)
!3881 = !DIEnumerator(name: "PBVH_GRIDS", value: 1, isUnsigned: true)
!3882 = !DIEnumerator(name: "PBVH_BMESH", value: 2, isUnsigned: true)
!3883 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 1232, baseType: !132, size: 32, elements: !3884)
!3884 = !{!3885, !3886, !3887, !3888}
!3885 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_BEAUTY", value: 0, isUnsigned: true)
!3886 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_FIXED", value: 1, isUnsigned: true)
!3887 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_ALTERNATE", value: 2, isUnsigned: true)
!3888 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_SHORTEDGE", value: 3, isUnsigned: true)
!3889 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 1226, baseType: !132, size: 32, elements: !3890)
!3890 = !{!3891, !3892}
!3891 = !DIEnumerator(name: "MOD_TRIANGULATE_NGON_BEAUTY", value: 0, isUnsigned: true)
!3892 = !DIEnumerator(name: "MOD_TRIANGULATE_NGON_EARCLIP", value: 1, isUnsigned: true)
!3893 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !474, line: 351, baseType: !132, size: 32, elements: !3894)
!3894 = !{!3895, !3896, !3897, !3898, !3899, !3900}
!3895 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!3896 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!3897 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!3898 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!3899 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!3900 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!3901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushFlags", file: !18, line: 187, baseType: !57, size: 32, elements: !3902)
!3902 = !{!3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933}
!3903 = !DIEnumerator(name: "BRUSH_AIRBRUSH", value: 1)
!3904 = !DIEnumerator(name: "BRUSH_TORUS", value: 2)
!3905 = !DIEnumerator(name: "BRUSH_ALPHA_PRESSURE", value: 4)
!3906 = !DIEnumerator(name: "BRUSH_SIZE_PRESSURE", value: 8)
!3907 = !DIEnumerator(name: "BRUSH_JITTER_PRESSURE", value: 16)
!3908 = !DIEnumerator(name: "BRUSH_SPACING_PRESSURE", value: 32)
!3909 = !DIEnumerator(name: "BRUSH_UNUSED", value: 64)
!3910 = !DIEnumerator(name: "BRUSH_RAKE", value: 128)
!3911 = !DIEnumerator(name: "BRUSH_ANCHORED", value: 256)
!3912 = !DIEnumerator(name: "BRUSH_DIR_IN", value: 512)
!3913 = !DIEnumerator(name: "BRUSH_SPACE", value: 1024)
!3914 = !DIEnumerator(name: "BRUSH_SMOOTH_STROKE", value: 2048)
!3915 = !DIEnumerator(name: "BRUSH_PERSISTENT", value: 4096)
!3916 = !DIEnumerator(name: "BRUSH_ACCUMULATE", value: 8192)
!3917 = !DIEnumerator(name: "BRUSH_LOCK_ALPHA", value: 16384)
!3918 = !DIEnumerator(name: "BRUSH_ORIGINAL_NORMAL", value: 32768)
!3919 = !DIEnumerator(name: "BRUSH_OFFSET_PRESSURE", value: 65536)
!3920 = !DIEnumerator(name: "BRUSH_SPACE_ATTEN", value: 262144)
!3921 = !DIEnumerator(name: "BRUSH_ADAPTIVE_SPACE", value: 524288)
!3922 = !DIEnumerator(name: "BRUSH_LOCK_SIZE", value: 1048576)
!3923 = !DIEnumerator(name: "BRUSH_USE_GRADIENT", value: 2097152)
!3924 = !DIEnumerator(name: "BRUSH_EDGE_TO_EDGE", value: 4194304)
!3925 = !DIEnumerator(name: "BRUSH_DRAG_DOT", value: 8388608)
!3926 = !DIEnumerator(name: "BRUSH_INVERSE_SMOOTH_PRESSURE", value: 16777216)
!3927 = !DIEnumerator(name: "BRUSH_RANDOM_ROTATION", value: 33554432)
!3928 = !DIEnumerator(name: "BRUSH_PLANE_TRIM", value: 67108864)
!3929 = !DIEnumerator(name: "BRUSH_FRONTFACE", value: 134217728)
!3930 = !DIEnumerator(name: "BRUSH_CUSTOM_ICON", value: 268435456)
!3931 = !DIEnumerator(name: "BRUSH_LINE", value: 536870912)
!3932 = !DIEnumerator(name: "BRUSH_ABSOLUTE_JITTER", value: 1073741824)
!3933 = !DIEnumerator(name: "BRUSH_CURVE", value: -2147483648)
!3934 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !265, line: 35, baseType: !132, size: 32, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985}
!3936 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!3937 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!3938 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!3939 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!3940 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!3941 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!3942 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!3943 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!3944 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!3945 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!3946 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!3947 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!3948 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!3949 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!3950 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!3951 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!3952 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!3953 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!3954 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!3955 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!3956 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!3957 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!3958 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!3959 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!3960 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!3961 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!3962 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!3963 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!3964 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!3965 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!3966 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!3967 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!3968 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!3969 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!3970 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!3971 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!3972 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!3973 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!3974 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!3975 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!3976 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!3977 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!3978 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!3979 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!3980 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!3981 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!3982 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!3983 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!3984 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!3985 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!3986 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !265, line: 88, baseType: !57, size: 32, elements: !3987)
!3987 = !{!3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995}
!3988 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!3989 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!3990 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!3991 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!3992 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!3993 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!3994 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!3995 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!3996 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 278, baseType: !132, size: 32, elements: !3997)
!3997 = !{!3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005}
!3998 = !DIEnumerator(name: "MOD_MIR_CLIPPING", value: 1, isUnsigned: true)
!3999 = !DIEnumerator(name: "MOD_MIR_MIRROR_U", value: 2, isUnsigned: true)
!4000 = !DIEnumerator(name: "MOD_MIR_MIRROR_V", value: 4, isUnsigned: true)
!4001 = !DIEnumerator(name: "MOD_MIR_AXIS_X", value: 8, isUnsigned: true)
!4002 = !DIEnumerator(name: "MOD_MIR_AXIS_Y", value: 16, isUnsigned: true)
!4003 = !DIEnumerator(name: "MOD_MIR_AXIS_Z", value: 32, isUnsigned: true)
!4004 = !DIEnumerator(name: "MOD_MIR_VGROUP", value: 64, isUnsigned: true)
!4005 = !DIEnumerator(name: "MOD_MIR_NO_MERGE", value: 128, isUnsigned: true)
!4006 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "StrokeFlags", file: !3, line: 165, baseType: !132, size: 32, elements: !4007)
!4007 = !{!4008, !4009, !4010}
!4008 = !DIEnumerator(name: "CLIP_X", value: 1, isUnsigned: true)
!4009 = !DIEnumerator(name: "CLIP_Y", value: 2, isUnsigned: true)
!4010 = !DIEnumerator(name: "CLIP_Z", value: 4, isUnsigned: true)
!4011 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PaintMode", file: !260, line: 74, baseType: !132, size: 32, elements: !4012)
!4012 = !{!4013, !4014, !4015, !4016, !4017, !4018, !4019}
!4013 = !DIEnumerator(name: "PAINT_SCULPT", value: 0, isUnsigned: true)
!4014 = !DIEnumerator(name: "PAINT_VERTEX", value: 1, isUnsigned: true)
!4015 = !DIEnumerator(name: "PAINT_WEIGHT", value: 2, isUnsigned: true)
!4016 = !DIEnumerator(name: "PAINT_TEXTURE_PROJECTIVE", value: 3, isUnsigned: true)
!4017 = !DIEnumerator(name: "PAINT_TEXTURE_2D", value: 4, isUnsigned: true)
!4018 = !DIEnumerator(name: "PAINT_SCULPT_UV", value: 5, isUnsigned: true)
!4019 = !DIEnumerator(name: "PAINT_INVALID", value: 6, isUnsigned: true)
!4020 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1468, line: 304, baseType: !132, size: 32, elements: !4021)
!4021 = !{!4022, !4023, !4024, !4025}
!4022 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!4023 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!4024 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!4025 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!4026 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2088, line: 260, baseType: !132, size: 32, elements: !4027)
!4027 = !{!4028, !4029, !4030, !4031, !4032, !4033, !4034}
!4028 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!4029 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!4030 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!4031 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!4032 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!4033 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!4034 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!4035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SymmetryFlags", file: !8, line: 1677, baseType: !132, size: 32, elements: !4036)
!4036 = !{!4037, !4038, !4039, !4040}
!4037 = !DIEnumerator(name: "PAINT_SYMM_X", value: 1, isUnsigned: true)
!4038 = !DIEnumerator(name: "PAINT_SYMM_Y", value: 2, isUnsigned: true)
!4039 = !DIEnumerator(name: "PAINT_SYMM_Z", value: 4, isUnsigned: true)
!4040 = !DIEnumerator(name: "PAINT_SYMMETRY_FEATHER", value: 8, isUnsigned: true)
!4041 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2319, line: 143, baseType: !132, size: 32, elements: !4042)
!4042 = !{!4043, !4044}
!4043 = !DIEnumerator(name: "PBVH_Subdivide", value: 1, isUnsigned: true)
!4044 = !DIEnumerator(name: "PBVH_Collapse", value: 2, isUnsigned: true)
!4045 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !18, line: 274, baseType: !132, size: 32, elements: !4046)
!4046 = !{!4047, !4048, !4049, !4050, !4051}
!4047 = !DIEnumerator(name: "SCULPT_DISP_DIR_AREA", value: 0, isUnsigned: true)
!4048 = !DIEnumerator(name: "SCULPT_DISP_DIR_VIEW", value: 1, isUnsigned: true)
!4049 = !DIEnumerator(name: "SCULPT_DISP_DIR_X", value: 2, isUnsigned: true)
!4050 = !DIEnumerator(name: "SCULPT_DISP_DIR_Y", value: 3, isUnsigned: true)
!4051 = !DIEnumerator(name: "SCULPT_DISP_DIR_Z", value: 4, isUnsigned: true)
!4052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !4053, line: 57, baseType: !132, size: 32, elements: !4054)
!4053 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4054 = !{!4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068}
!4055 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!4056 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!4057 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!4058 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!4059 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!4060 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!4061 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!4062 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!4063 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!4064 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!4065 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!4066 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!4067 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!4068 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!4069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MultiresModifiedFlags", file: !4070, line: 90, baseType: !132, size: 32, elements: !4071)
!4070 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_subsurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4071 = !{!4072, !4073}
!4072 = !DIEnumerator(name: "MULTIRES_COORDS_MODIFIED", value: 1, isUnsigned: true)
!4073 = !DIEnumerator(name: "MULTIRES_HIDDEN_MODIFIED", value: 2, isUnsigned: true)
!4074 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !250, line: 519, baseType: !132, size: 32, elements: !4075)
!4075 = !{!4076, !4077, !4078, !4079}
!4076 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!4077 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!4078 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!4079 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!4080 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 1669, baseType: !132, size: 32, elements: !4081)
!4081 = !{!4082, !4083, !4084}
!4082 = !DIEnumerator(name: "PAINT_SHOW_BRUSH", value: 1, isUnsigned: true)
!4083 = !DIEnumerator(name: "PAINT_FAST_NAVIGATE", value: 2, isUnsigned: true)
!4084 = !DIEnumerator(name: "PAINT_SHOW_BRUSH_ON_SURFACE", value: 4, isUnsigned: true)
!4085 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !474, line: 67, baseType: !132, size: 32, elements: !4086)
!4086 = !{!4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095}
!4087 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!4088 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!4089 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!4090 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!4091 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!4092 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!4093 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!4094 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!4095 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!4096 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4097, line: 47, baseType: !132, size: 32, elements: !4098)
!4097 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4098 = !{!4099, !4100, !4101, !4102, !4103, !4104}
!4099 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!4100 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!4101 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!4102 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!4103 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!4104 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!4105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4097, line: 73, baseType: !132, size: 32, elements: !4106)
!4106 = !{!4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116}
!4107 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!4108 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!4109 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!4110 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!4111 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!4112 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!4113 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!4114 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!4115 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!4116 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!4117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !4097, line: 110, baseType: !132, size: 32, elements: !4118)
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!4120 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!4121 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!4122 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!4123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4124, line: 40, baseType: !132, size: 32, elements: !4125)
!4124 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4125 = !{!4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4126 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!4127 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!4128 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!4129 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!4130 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!4131 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!4132 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!4133 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!4134 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!4135 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!4136 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!4137 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!4138 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!4139 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!4140 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!4141 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!4142 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!4143 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!4144 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!4145 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!4146 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!4147 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!4148 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!4149 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!4150 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!4151 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!4152 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!4153 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!4154 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!4155 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!4156 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!4157 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!4158 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!4159 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!4160 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!4161 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!4162 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!4163 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!4164 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!4165 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!4166 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!4167 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!4168 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!4169 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!4170 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!4171 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!4172 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!4173 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!4174 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!4175 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!4176 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!4177 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!4178 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!4179 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!4180 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!4181 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!4182 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!4183 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!4184 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!4185 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!4186 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!4187 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!4188 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!4189 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!4190 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!4191 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!4192 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!4193 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!4194 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!4195 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!4196 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!4197 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!4198 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!4199 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!4200 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!4201 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!4202 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!4203 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!4204 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!4205 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!4206 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!4207 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!4208 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!4209 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!4210 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!4211 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!4212 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!4213 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!4214 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!4215 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!4216 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!4217 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!4218 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!4219 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!4220 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!4221 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!4222 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!4223 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!4224 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!4225 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!4226 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!4227 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!4228 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!4229 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!4230 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!4231 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!4232 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!4233 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!4234 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!4235 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!4236 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!4237 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!4238 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!4239 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!4240 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!4241 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!4242 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!4243 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!4244 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!4245 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!4246 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!4247 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!4248 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!4249 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!4250 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!4251 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!4252 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!4253 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!4254 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!4255 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!4256 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!4257 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!4258 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!4259 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!4260 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!4261 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!4262 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!4263 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!4264 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!4265 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!4266 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!4267 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!4268 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!4269 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!4270 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!4271 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!4272 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!4273 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!4274 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!4275 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!4276 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!4277 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!4278 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!4279 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!4280 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!4281 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!4282 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!4283 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!4284 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!4285 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!4286 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!4287 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!4288 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!4289 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!4290 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!4291 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!4292 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!4293 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!4294 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!4295 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!4296 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!4297 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!4298 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!4299 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!4300 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!4301 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!4302 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!4303 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!4304 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!4305 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!4306 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!4307 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!4308 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!4309 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!4310 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!4311 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!4312 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!4313 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!4314 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!4315 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!4316 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!4317 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!4318 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!4319 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!4320 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!4321 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!4322 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!4323 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!4324 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!4325 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!4326 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!4327 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!4328 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!4329 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!4330 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!4331 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!4332 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!4333 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!4334 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!4335 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!4336 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!4337 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!4338 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!4339 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!4340 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!4341 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!4342 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!4343 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!4344 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!4345 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!4346 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!4347 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!4348 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!4349 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!4350 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!4351 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!4352 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!4353 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!4354 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!4355 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!4356 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!4357 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!4358 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!4359 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!4360 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!4361 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!4362 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!4363 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!4364 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!4365 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!4366 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!4367 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!4368 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!4369 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!4370 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!4371 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!4372 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!4373 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!4374 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!4375 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!4376 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!4377 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!4378 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!4379 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!4380 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!4381 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!4382 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!4383 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!4384 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!4385 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!4386 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!4387 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!4388 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!4389 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!4390 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!4391 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!4392 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!4393 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!4394 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!4395 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!4396 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!4397 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!4398 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!4399 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!4400 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!4401 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!4402 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!4403 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!4404 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!4405 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!4406 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!4407 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!4408 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!4409 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!4410 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!4411 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!4412 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!4413 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!4414 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!4415 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!4416 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!4417 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!4418 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!4419 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!4420 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!4421 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!4422 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!4423 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!4424 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!4425 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!4426 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!4427 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!4428 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!4429 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!4430 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!4431 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!4432 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!4433 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!4434 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!4435 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!4436 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!4437 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!4438 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!4439 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!4440 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!4441 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!4442 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!4443 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!4444 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!4445 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!4446 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!4447 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!4448 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!4449 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!4450 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!4451 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!4452 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!4453 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!4454 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!4455 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!4456 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!4457 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!4458 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!4459 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!4460 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!4461 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!4462 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!4463 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!4464 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!4465 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!4466 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!4467 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!4468 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!4469 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!4470 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!4471 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!4472 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!4473 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!4474 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!4475 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!4476 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!4477 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!4478 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!4479 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!4480 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!4481 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!4482 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!4483 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!4484 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!4485 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!4486 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!4487 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!4488 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!4489 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!4490 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!4491 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!4492 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!4493 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!4494 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!4495 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!4496 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!4497 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!4498 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!4499 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!4500 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!4501 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!4502 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!4503 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!4504 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!4505 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!4506 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!4507 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!4508 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!4509 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!4510 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!4511 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!4512 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!4513 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!4514 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!4515 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!4516 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!4517 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!4518 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!4519 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!4520 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!4521 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!4522 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!4523 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!4524 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!4525 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!4526 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!4527 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!4528 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!4529 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!4530 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!4531 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!4532 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!4533 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!4534 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!4535 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!4536 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!4537 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!4538 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!4539 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!4540 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!4541 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!4542 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!4543 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!4544 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!4545 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!4546 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!4547 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!4548 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!4549 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!4550 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!4551 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!4552 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!4553 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!4554 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!4555 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!4556 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!4557 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!4558 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!4559 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!4560 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!4561 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!4562 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!4563 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!4564 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!4565 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!4566 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!4567 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!4568 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!4569 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!4570 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!4571 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!4572 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!4573 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!4574 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!4575 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!4576 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!4577 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!4578 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!4579 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!4580 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!4581 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!4582 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!4583 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!4584 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!4585 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!4586 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!4587 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!4588 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!4589 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!4590 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!4591 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!4592 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!4593 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!4594 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!4595 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!4596 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!4597 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!4598 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!4599 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!4600 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!4601 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!4602 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!4603 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!4604 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!4605 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!4606 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!4607 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!4608 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!4609 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!4610 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!4611 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!4612 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!4613 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!4614 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!4615 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!4616 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!4617 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!4618 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!4619 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!4620 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!4621 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!4622 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!4623 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!4624 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!4625 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!4626 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!4627 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!4628 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!4629 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!4630 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!4631 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!4632 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!4633 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!4634 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!4635 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!4636 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!4637 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!4638 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!4639 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!4640 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!4641 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!4642 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!4643 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!4644 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!4645 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!4646 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!4647 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!4648 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!4649 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!4650 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!4651 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!4652 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!4653 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!4654 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!4655 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!4656 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!4657 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!4658 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!4659 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!4660 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!4661 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!4662 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!4663 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!4664 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!4665 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!4666 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!4667 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!4668 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!4669 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!4670 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!4671 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!4672 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!4673 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!4674 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!4675 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!4676 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!4677 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!4678 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!4679 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!4680 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!4681 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!4682 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!4683 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!4684 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!4685 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!4686 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!4687 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!4688 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!4689 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!4690 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!4691 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!4692 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!4693 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!4694 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!4695 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!4696 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!4697 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!4698 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!4699 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!4700 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!4701 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!4702 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!4703 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!4704 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!4705 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!4706 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!4707 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!4708 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!4709 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!4710 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!4711 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!4712 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!4713 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!4714 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!4715 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!4716 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!4717 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!4718 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!4719 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!4720 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!4721 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!4722 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!4723 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!4724 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!4725 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!4726 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!4727 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!4728 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!4729 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!4730 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!4731 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!4732 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!4733 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!4734 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!4735 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!4736 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!4737 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!4738 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!4739 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!4740 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!4741 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!4742 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!4743 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!4744 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!4745 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!4746 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!4747 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!4748 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!4749 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!4750 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!4751 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!4752 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!4753 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!4754 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!4755 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!4756 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!4757 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!4758 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!4759 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!4760 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!4761 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!4762 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!4763 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!4764 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!4765 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!4766 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!4767 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!4768 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!4769 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!4770 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!4771 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!4772 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!4773 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!4774 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!4775 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!4776 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!4777 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!4778 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!4779 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!4780 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!4781 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!4782 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!4783 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!4784 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!4785 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!4786 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!4787 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!4788 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!4789 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!4790 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!4791 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!4792 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!4793 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!4794 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!4795 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!4796 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!4797 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!4798 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!4799 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!4800 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!4801 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!4802 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!4803 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!4804 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!4805 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!4806 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!4807 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!4808 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!4809 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!4810 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!4811 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!4812 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!4813 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!4814 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!4815 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!4816 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!4817 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!4818 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!4819 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!4820 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!4821 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!4822 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!4823 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!4824 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!4825 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!4826 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!4827 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!4828 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!4829 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!4830 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!4831 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!4832 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!4833 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!4834 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!4835 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!4836 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!4837 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!4838 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!4839 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!4840 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!4841 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!4842 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!4843 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!4844 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!4845 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!4846 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!4847 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!4848 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!4849 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!4850 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!4851 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!4852 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!4853 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!4854 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!4855 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!4856 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!4857 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!4858 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!4859 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!4860 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!4861 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!4862 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!4863 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!4864 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!4865 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!4866 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!4867 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!4868 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!4869 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!4870 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!4871 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!4872 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!4873 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!4874 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!4875 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!4876 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!4877 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!4878 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!4879 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!4880 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!4881 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!4882 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!4883 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!4884 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!4885 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!4886 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!4887 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!4888 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!4889 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!4890 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!4891 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!4892 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!4893 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!4894 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!4895 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!4896 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!4897 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!4898 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!4899 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!4900 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!4901 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!4902 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!4903 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!4904 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!4905 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!4906 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!4907 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!4908 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!4909 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!4910 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!4911 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!4912 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!4913 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!4914 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!4915 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!4916 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!4917 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!4918 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!4919 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!4920 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!4921 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!4922 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!4923 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!4924 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!4925 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!4926 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!4927 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!4928 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!4929 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!4930 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!4931 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!4932 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!4933 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!4934 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!4935 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!4936 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!4937 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!4938 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!4939 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!4940 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!4941 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!4942 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!4943 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!4944 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!4945 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!4946 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!4947 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!4948 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!4949 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!4950 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!4951 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!4952 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!4953 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!4954 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!4955 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!4956 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!4957 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!4958 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!4959 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!4960 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!4961 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!4962 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!4963 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!4964 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!4965 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!4966 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!4967 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!4968 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!4969 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!4970 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!4971 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!4972 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!4973 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !644, line: 141, baseType: !132, size: 32, elements: !4974)
!4974 = !{!4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985, !4986}
!4975 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!4976 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!4977 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!4978 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!4979 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!4980 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!4981 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!4982 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!4983 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!4984 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!4985 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!4986 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!4987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2185, line: 200, baseType: !132, size: 32, elements: !4988)
!4988 = !{!4989}
!4989 = !DIEnumerator(name: "BMO_FLAG_RESPECT_HIDE", value: 1, isUnsigned: true)
!4990 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4991, line: 82, baseType: !132, size: 32, elements: !4992)
!4991 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4992 = !{!4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010}
!4993 = !DIEnumerator(name: "BC_NW_ARROWCURSOR", value: 2, isUnsigned: true)
!4994 = !DIEnumerator(name: "BC_NS_ARROWCURSOR", value: 3, isUnsigned: true)
!4995 = !DIEnumerator(name: "BC_EW_ARROWCURSOR", value: 4, isUnsigned: true)
!4996 = !DIEnumerator(name: "BC_WAITCURSOR", value: 5, isUnsigned: true)
!4997 = !DIEnumerator(name: "BC_CROSSCURSOR", value: 6, isUnsigned: true)
!4998 = !DIEnumerator(name: "BC_EDITCROSSCURSOR", value: 7, isUnsigned: true)
!4999 = !DIEnumerator(name: "BC_BOXSELCURSOR", value: 8, isUnsigned: true)
!5000 = !DIEnumerator(name: "BC_KNIFECURSOR", value: 9, isUnsigned: true)
!5001 = !DIEnumerator(name: "BC_VLOOPCURSOR", value: 10, isUnsigned: true)
!5002 = !DIEnumerator(name: "BC_TEXTEDITCURSOR", value: 11, isUnsigned: true)
!5003 = !DIEnumerator(name: "BC_PAINTBRUSHCURSOR", value: 12, isUnsigned: true)
!5004 = !DIEnumerator(name: "BC_HANDCURSOR", value: 13, isUnsigned: true)
!5005 = !DIEnumerator(name: "BC_NSEW_SCROLLCURSOR", value: 14, isUnsigned: true)
!5006 = !DIEnumerator(name: "BC_NS_SCROLLCURSOR", value: 15, isUnsigned: true)
!5007 = !DIEnumerator(name: "BC_EW_SCROLLCURSOR", value: 16, isUnsigned: true)
!5008 = !DIEnumerator(name: "BC_EYEDROPPER_CURSOR", value: 17, isUnsigned: true)
!5009 = !DIEnumerator(name: "BC_SWAPAREA_CURSOR", value: 18, isUnsigned: true)
!5010 = !DIEnumerator(name: "BC_NUMCURSORS", value: 19, isUnsigned: true)
!5011 = !{!5012, !2749, !5151, !5160, !153, !26, !5161, !807, !359, !5164, !5166, !5175, !5181, !57, !5182, !5183, !5184, !2108, !2169, !2173, !2151}
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !256, line: 133, baseType: !5014)
!5014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !256, line: 58, size: 11008, elements: !5015)
!5015 = !{!5016, !5017, !5018, !5019, !5020, !5041, !5042, !5048, !5049, !5059, !5060, !5066, !5074, !5075, !5076, !5089, !5090, !5091, !5092, !5100, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130}
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5014, file: !256, line: 59, baseType: !21, size: 960)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5014, file: !256, line: 60, baseType: !254, size: 64, offset: 960)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5014, file: !256, line: 62, baseType: !2690, size: 64, offset: 1024)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5014, file: !256, line: 64, baseType: !362, size: 64, offset: 1088)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5014, file: !256, line: 65, baseType: !5021, size: 64, offset: 1152)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !2058, line: 73, size: 1792, elements: !5023)
!5023 = !{!5024, !5025, !5026, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5022, file: !2058, line: 74, baseType: !21, size: 960)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5022, file: !2058, line: 75, baseType: !254, size: 64, offset: 960)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !5022, file: !2058, line: 80, baseType: !5027, size: 64, offset: 1024)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !2058, line: 70, baseType: !2057)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !5022, file: !2058, line: 85, baseType: !1869, size: 256, offset: 1088)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5022, file: !2058, line: 86, baseType: !57, size: 32, offset: 1344)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5022, file: !2058, line: 87, baseType: !57, size: 32, offset: 1376)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5022, file: !2058, line: 89, baseType: !82, size: 128, offset: 1408)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5022, file: !2058, line: 90, baseType: !362, size: 64, offset: 1536)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5022, file: !2058, line: 92, baseType: !36, size: 64, offset: 1600)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5022, file: !2058, line: 94, baseType: !55, size: 16, offset: 1664)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !5022, file: !2058, line: 95, baseType: !55, size: 16, offset: 1680)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !5022, file: !2058, line: 96, baseType: !55, size: 16, offset: 1696)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5022, file: !2058, line: 97, baseType: !55, size: 16, offset: 1712)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !5022, file: !2058, line: 101, baseType: !153, size: 32, offset: 1728)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !5022, file: !2058, line: 104, baseType: !57, size: 32, offset: 1760)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5014, file: !256, line: 66, baseType: !2884, size: 64, offset: 1216)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !5014, file: !256, line: 67, baseType: !5043, size: 64, offset: 1280)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !1468, line: 154, size: 64, elements: !5045)
!5045 = !{!5046, !5047}
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5044, file: !1468, line: 155, baseType: !57, size: 32)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5044, file: !1468, line: 156, baseType: !57, size: 32, offset: 32)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !5014, file: !256, line: 71, baseType: !2037, size: 64, offset: 1344)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !5014, file: !256, line: 72, baseType: !5050, size: 64, offset: 1408)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !1468, line: 93, size: 128, elements: !5052)
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058}
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !5051, file: !1468, line: 94, baseType: !96, size: 64)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5051, file: !1468, line: 95, baseType: !42, size: 8, offset: 64)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5051, file: !1468, line: 95, baseType: !42, size: 8, offset: 72)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5051, file: !1468, line: 96, baseType: !55, size: 16, offset: 80)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !5051, file: !1468, line: 96, baseType: !55, size: 16, offset: 96)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5051, file: !1468, line: 96, baseType: !55, size: 16, offset: 112)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !5014, file: !256, line: 73, baseType: !2046, size: 64, offset: 1472)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !5014, file: !256, line: 74, baseType: !5061, size: 64, offset: 1536)
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5062, size: 64)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !1468, line: 109, size: 96, elements: !5063)
!5063 = !{!5064, !5065}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5062, file: !1468, line: 110, baseType: !186, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5062, file: !1468, line: 111, baseType: !57, size: 32, offset: 64)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !5014, file: !256, line: 75, baseType: !5067, size: 64, offset: 1600)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !1468, line: 129, size: 32, elements: !5069)
!5069 = !{!5070, !5071, !5072, !5073}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5068, file: !1468, line: 130, baseType: !42, size: 8)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5068, file: !1468, line: 130, baseType: !42, size: 8, offset: 8)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5068, file: !1468, line: 130, baseType: !42, size: 8, offset: 16)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5068, file: !1468, line: 130, baseType: !42, size: 8, offset: 24)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !5014, file: !256, line: 80, baseType: !3102, size: 64, offset: 1664)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !5014, file: !256, line: 81, baseType: !3330, size: 64, offset: 1728)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !5014, file: !256, line: 82, baseType: !5077, size: 64, offset: 1792)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !256, line: 136, size: 512, elements: !5079)
!5079 = !{!5080, !5081, !5082, !5084, !5085, !5086, !5087, !5088}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !5078, file: !256, line: 137, baseType: !26, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5078, file: !256, line: 138, baseType: !1327, size: 256, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5078, file: !256, line: 139, baseType: !5083, size: 128, offset: 320)
!5083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 128, elements: !164)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5078, file: !256, line: 140, baseType: !42, size: 8, offset: 448)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5078, file: !256, line: 140, baseType: !42, size: 8, offset: 456)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5078, file: !256, line: 141, baseType: !55, size: 16, offset: 464)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !5078, file: !256, line: 141, baseType: !55, size: 16, offset: 480)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !5078, file: !256, line: 141, baseType: !55, size: 16, offset: 496)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !5014, file: !256, line: 83, baseType: !2029, size: 64, offset: 1856)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !5014, file: !256, line: 84, baseType: !3090, size: 64, offset: 1920)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !5014, file: !256, line: 85, baseType: !1466, size: 64, offset: 1984)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !5014, file: !256, line: 89, baseType: !5093, size: 64, offset: 2048)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !1468, line: 74, size: 32, elements: !5095)
!5095 = !{!5096, !5097, !5098, !5099}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5094, file: !1468, line: 75, baseType: !42, size: 8)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5094, file: !1468, line: 75, baseType: !42, size: 8, offset: 8)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5094, file: !1468, line: 75, baseType: !42, size: 8, offset: 16)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5094, file: !1468, line: 75, baseType: !42, size: 8, offset: 24)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !5014, file: !256, line: 90, baseType: !5101, size: 64, offset: 2112)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5014, size: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !5014, file: !256, line: 93, baseType: !2745, size: 64, offset: 2176)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !5014, file: !256, line: 95, baseType: !2270, size: 1600, offset: 2240)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !5014, file: !256, line: 95, baseType: !2270, size: 1600, offset: 3840)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !5014, file: !256, line: 95, baseType: !2270, size: 1600, offset: 5440)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !5014, file: !256, line: 98, baseType: !2270, size: 1600, offset: 7040)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !5014, file: !256, line: 98, baseType: !2270, size: 1600, offset: 8640)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5014, file: !256, line: 101, baseType: !57, size: 32, offset: 10240)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !5014, file: !256, line: 101, baseType: !57, size: 32, offset: 10272)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !5014, file: !256, line: 101, baseType: !57, size: 32, offset: 10304)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !5014, file: !256, line: 101, baseType: !57, size: 32, offset: 10336)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !5014, file: !256, line: 104, baseType: !57, size: 32, offset: 10368)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !5014, file: !256, line: 104, baseType: !57, size: 32, offset: 10400)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !5014, file: !256, line: 111, baseType: !57, size: 32, offset: 10432)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5014, file: !256, line: 114, baseType: !233, size: 96, offset: 10464)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5014, file: !256, line: 115, baseType: !233, size: 96, offset: 10560)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !5014, file: !256, line: 116, baseType: !233, size: 96, offset: 10656)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !5014, file: !256, line: 118, baseType: !57, size: 32, offset: 10752)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !5014, file: !256, line: 119, baseType: !55, size: 16, offset: 10784)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5014, file: !256, line: 119, baseType: !55, size: 16, offset: 10800)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !5014, file: !256, line: 120, baseType: !153, size: 32, offset: 10816)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5014, file: !256, line: 121, baseType: !57, size: 32, offset: 10848)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !5014, file: !256, line: 124, baseType: !42, size: 8, offset: 10880)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5014, file: !256, line: 124, baseType: !42, size: 8, offset: 10888)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !5014, file: !256, line: 126, baseType: !42, size: 8, offset: 10896)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !5014, file: !256, line: 126, baseType: !42, size: 8, offset: 10904)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !5014, file: !256, line: 127, baseType: !42, size: 8, offset: 10912)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5014, file: !256, line: 128, baseType: !42, size: 8, offset: 10920)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !5014, file: !256, line: 130, baseType: !55, size: 16, offset: 10928)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !5014, file: !256, line: 132, baseType: !5131, size: 64, offset: 10944)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !1468, line: 233, size: 3584, elements: !5133)
!5133 = !{!5134, !5135, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5150}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !5132, file: !1468, line: 234, baseType: !82, size: 128)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !5132, file: !1468, line: 235, baseType: !5136, size: 64, offset: 128)
!5136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5137, size: 64)
!5137 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !1468, line: 69, baseType: !2030)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 192)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 200)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 208)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 216)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 224)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !5132, file: !1468, line: 237, baseType: !2315, size: 8, offset: 232)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !5132, file: !1468, line: 238, baseType: !2315, size: 8, offset: 240)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5132, file: !1468, line: 238, baseType: !2315, size: 8, offset: 248)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !5132, file: !1468, line: 241, baseType: !2269, size: 1600, offset: 256)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !5132, file: !1468, line: 242, baseType: !2269, size: 1600, offset: 1856)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !5132, file: !1468, line: 243, baseType: !5149, size: 64, offset: 3456)
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !5132, file: !1468, line: 244, baseType: !807, size: 64, offset: 3520)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_typedef, name: "MirrorModifierData", file: !265, line: 275, baseType: !5153)
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MirrorModifierData", file: !265, line: 268, size: 1024, elements: !5154)
!5154 = !{!5155, !5156, !5157, !5158, !5159}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5153, file: !265, line: 269, baseType: !268, size: 896)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "axis", scope: !5153, file: !265, line: 271, baseType: !55, size: 16, offset: 896)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5153, file: !265, line: 272, baseType: !55, size: 16, offset: 912)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "tolerance", scope: !5153, file: !265, line: 273, baseType: !153, size: 32, offset: 928)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_ob", scope: !5153, file: !265, line: 274, baseType: !248, size: 64, offset: 960)
!5160 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushSculptTool", file: !18, line: 261, baseType: !3853)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !5163, line: 33, baseType: !132)
!5163 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGElem", file: !3217, line: 51, baseType: !3195)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !1051, line: 54, baseType: !5168)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !1051, line: 50, size: 192, elements: !5169)
!5169 = !{!5170, !5171, !5174}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !5168, file: !1051, line: 51, baseType: !1049, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !5168, file: !1051, line: 52, baseType: !5172, size: 64, offset: 64)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !1051, line: 52, flags: DIFlagFwdDecl)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !5168, file: !1051, line: 53, baseType: !132, size: 32, offset: 128)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !1051, line: 94, size: 192, elements: !5177)
!5177 = !{!5178, !5179, !5180}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5176, file: !1051, line: 94, baseType: !26, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5176, file: !1051, line: 94, baseType: !26, size: 64, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5176, file: !1051, line: 94, baseType: !26, size: 64, offset: 128)
!5181 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushMaskTool", file: !18, line: 295, baseType: !3874)
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !4053, line: 79, baseType: !4052)
!5183 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !4053, line: 158, baseType: !539)
!5184 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !4053, line: 159, baseType: !5185)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!26, !26}
!5188 = !{!0}
!5189 = !{}
!5190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5191, size: 256, elements: !116)
!5191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!5192 = !{i32 7, !"Dwarf Version", i32 4}
!5193 = !{i32 2, !"Debug Info Version", i32 3}
!5194 = !{i32 1, !"wchar_size", i32 4}
!5195 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!5196 = distinct !DISubprogram(name: "ED_sculpt_stroke_get_average", scope: !3, file: !3, line: 119, type: !5197, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{null, !3739, !359}
!5199 = !DILocalVariable(name: "ob", arg: 1, scope: !5196, file: !3, line: 119, type: !3739)
!5200 = !DILocation(line: 119, column: 43, scope: !5196)
!5201 = !DILocalVariable(name: "stroke", arg: 2, scope: !5196, file: !3, line: 119, type: !359)
!5202 = !DILocation(line: 119, column: 53, scope: !5196)
!5203 = !DILocation(line: 121, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 121, column: 6)
!5205 = !DILocation(line: 121, column: 10, scope: !5204)
!5206 = !DILocation(line: 121, column: 18, scope: !5204)
!5207 = !DILocation(line: 121, column: 36, scope: !5204)
!5208 = !DILocation(line: 121, column: 39, scope: !5204)
!5209 = !DILocation(line: 121, column: 43, scope: !5204)
!5210 = !DILocation(line: 121, column: 51, scope: !5204)
!5211 = !DILocation(line: 121, column: 74, scope: !5204)
!5212 = !DILocation(line: 121, column: 6, scope: !5196)
!5213 = !DILocalVariable(name: "fac", scope: !5214, file: !3, line: 122, type: !153)
!5214 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 121, column: 79)
!5215 = !DILocation(line: 122, column: 9, scope: !5214)
!5216 = !DILocation(line: 122, column: 22, scope: !5214)
!5217 = !DILocation(line: 122, column: 26, scope: !5214)
!5218 = !DILocation(line: 122, column: 34, scope: !5214)
!5219 = !DILocation(line: 122, column: 20, scope: !5214)
!5220 = !DILocation(line: 123, column: 15, scope: !5214)
!5221 = !DILocation(line: 123, column: 23, scope: !5214)
!5222 = !DILocation(line: 123, column: 27, scope: !5214)
!5223 = !DILocation(line: 123, column: 35, scope: !5214)
!5224 = !DILocation(line: 123, column: 57, scope: !5214)
!5225 = !DILocation(line: 123, column: 3, scope: !5214)
!5226 = !DILocation(line: 124, column: 2, scope: !5214)
!5227 = !DILocation(line: 126, column: 14, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 125, column: 7)
!5229 = !DILocation(line: 126, column: 22, scope: !5228)
!5230 = !DILocation(line: 126, column: 26, scope: !5228)
!5231 = !DILocation(line: 126, column: 3, scope: !5228)
!5232 = !DILocation(line: 128, column: 1, scope: !5196)
!5233 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !5234, file: !5234, line: 399, type: !5235, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5234 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5235 = !DISubroutineType(types: !5236)
!5236 = !{null, !359, !3251, !153}
!5237 = !DILocalVariable(name: "r", arg: 1, scope: !5233, file: !5234, line: 399, type: !359)
!5238 = !DILocation(line: 399, column: 32, scope: !5233)
!5239 = !DILocalVariable(name: "a", arg: 2, scope: !5233, file: !5234, line: 399, type: !3251)
!5240 = !DILocation(line: 399, column: 50, scope: !5233)
!5241 = !DILocalVariable(name: "f", arg: 3, scope: !5233, file: !5234, line: 399, type: !153)
!5242 = !DILocation(line: 399, column: 62, scope: !5233)
!5243 = !DILocation(line: 401, column: 9, scope: !5233)
!5244 = !DILocation(line: 401, column: 16, scope: !5233)
!5245 = !DILocation(line: 401, column: 14, scope: !5233)
!5246 = !DILocation(line: 401, column: 2, scope: !5233)
!5247 = !DILocation(line: 401, column: 7, scope: !5233)
!5248 = !DILocation(line: 402, column: 9, scope: !5233)
!5249 = !DILocation(line: 402, column: 16, scope: !5233)
!5250 = !DILocation(line: 402, column: 14, scope: !5233)
!5251 = !DILocation(line: 402, column: 2, scope: !5233)
!5252 = !DILocation(line: 402, column: 7, scope: !5233)
!5253 = !DILocation(line: 403, column: 9, scope: !5233)
!5254 = !DILocation(line: 403, column: 16, scope: !5233)
!5255 = !DILocation(line: 403, column: 14, scope: !5233)
!5256 = !DILocation(line: 403, column: 2, scope: !5233)
!5257 = !DILocation(line: 403, column: 7, scope: !5233)
!5258 = !DILocation(line: 404, column: 1, scope: !5233)
!5259 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5234, file: !5234, line: 64, type: !5260, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !359, !3251}
!5262 = !DILocalVariable(name: "r", arg: 1, scope: !5259, file: !5234, line: 64, type: !359)
!5263 = !DILocation(line: 64, column: 31, scope: !5259)
!5264 = !DILocalVariable(name: "a", arg: 2, scope: !5259, file: !5234, line: 64, type: !3251)
!5265 = !DILocation(line: 64, column: 49, scope: !5259)
!5266 = !DILocation(line: 66, column: 9, scope: !5259)
!5267 = !DILocation(line: 66, column: 2, scope: !5259)
!5268 = !DILocation(line: 66, column: 7, scope: !5259)
!5269 = !DILocation(line: 67, column: 9, scope: !5259)
!5270 = !DILocation(line: 67, column: 2, scope: !5259)
!5271 = !DILocation(line: 67, column: 7, scope: !5259)
!5272 = !DILocation(line: 68, column: 9, scope: !5259)
!5273 = !DILocation(line: 68, column: 2, scope: !5259)
!5274 = !DILocation(line: 68, column: 7, scope: !5259)
!5275 = !DILocation(line: 69, column: 1, scope: !5259)
!5276 = distinct !DISubprogram(name: "ED_sculpt_minmax", scope: !3, file: !3, line: 130, type: !5277, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{!2315, !5279, !359, !359}
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1418, line: 69, baseType: !470)
!5281 = !DILocalVariable(name: "C", arg: 1, scope: !5276, file: !3, line: 130, type: !5279)
!5282 = !DILocation(line: 130, column: 33, scope: !5276)
!5283 = !DILocalVariable(name: "min", arg: 2, scope: !5276, file: !3, line: 130, type: !359)
!5284 = !DILocation(line: 130, column: 42, scope: !5276)
!5285 = !DILocalVariable(name: "max", arg: 3, scope: !5276, file: !3, line: 130, type: !359)
!5286 = !DILocation(line: 130, column: 56, scope: !5276)
!5287 = !DILocalVariable(name: "ob", scope: !5276, file: !3, line: 132, type: !3739)
!5288 = !DILocation(line: 132, column: 10, scope: !5276)
!5289 = !DILocation(line: 132, column: 38, scope: !5276)
!5290 = !DILocation(line: 132, column: 15, scope: !5276)
!5291 = !DILocation(line: 134, column: 6, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 134, column: 6)
!5293 = !DILocation(line: 134, column: 9, scope: !5292)
!5294 = !DILocation(line: 134, column: 12, scope: !5292)
!5295 = !DILocation(line: 134, column: 16, scope: !5292)
!5296 = !DILocation(line: 134, column: 23, scope: !5292)
!5297 = !DILocation(line: 134, column: 26, scope: !5292)
!5298 = !DILocation(line: 134, column: 30, scope: !5292)
!5299 = !DILocation(line: 134, column: 38, scope: !5292)
!5300 = !DILocation(line: 134, column: 6, scope: !5276)
!5301 = !DILocation(line: 135, column: 14, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 134, column: 57)
!5303 = !DILocation(line: 135, column: 19, scope: !5302)
!5304 = !DILocation(line: 135, column: 23, scope: !5302)
!5305 = !DILocation(line: 135, column: 31, scope: !5302)
!5306 = !DILocation(line: 135, column: 3, scope: !5302)
!5307 = !DILocation(line: 136, column: 14, scope: !5302)
!5308 = !DILocation(line: 136, column: 19, scope: !5302)
!5309 = !DILocation(line: 136, column: 23, scope: !5302)
!5310 = !DILocation(line: 136, column: 31, scope: !5302)
!5311 = !DILocation(line: 136, column: 3, scope: !5302)
!5312 = !DILocation(line: 138, column: 3, scope: !5302)
!5313 = !DILocation(line: 141, column: 3, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 140, column: 7)
!5315 = !DILocation(line: 143, column: 1, scope: !5276)
!5316 = distinct !DISubprogram(name: "ED_sculpt_redraw_planes_get", scope: !3, file: !3, line: 491, type: !5317, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{null, !3310, !5319, !5321, !3739}
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !598, line: 267, baseType: !597)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !2384, line: 148, baseType: !2676)
!5323 = !DILocalVariable(name: "planes", arg: 1, scope: !5316, file: !3, line: 491, type: !3310)
!5324 = !DILocation(line: 491, column: 40, scope: !5316)
!5325 = !DILocalVariable(name: "ar", arg: 2, scope: !5316, file: !3, line: 491, type: !5319)
!5326 = !DILocation(line: 491, column: 63, scope: !5316)
!5327 = !DILocalVariable(name: "rv3d", arg: 3, scope: !5316, file: !3, line: 492, type: !5321)
!5328 = !DILocation(line: 492, column: 48, scope: !5316)
!5329 = !DILocalVariable(name: "ob", arg: 4, scope: !5316, file: !3, line: 492, type: !3739)
!5330 = !DILocation(line: 492, column: 62, scope: !5316)
!5331 = !DILocalVariable(name: "pbvh", scope: !5316, file: !3, line: 494, type: !5332)
!5332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5333, size: 64)
!5333 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVH", file: !2319, line: 46, baseType: !2322)
!5334 = !DILocation(line: 494, column: 8, scope: !5316)
!5335 = !DILocation(line: 494, column: 15, scope: !5316)
!5336 = !DILocation(line: 494, column: 19, scope: !5316)
!5337 = !DILocation(line: 494, column: 27, scope: !5316)
!5338 = !DILocalVariable(name: "rect", scope: !5316, file: !3, line: 496, type: !610)
!5339 = !DILocation(line: 496, column: 7, scope: !5316)
!5340 = !DILocation(line: 496, column: 14, scope: !5316)
!5341 = !DILocation(line: 496, column: 18, scope: !5316)
!5342 = !DILocation(line: 496, column: 26, scope: !5316)
!5343 = !DILocation(line: 496, column: 33, scope: !5316)
!5344 = !DILocation(line: 498, column: 37, scope: !5316)
!5345 = !DILocation(line: 498, column: 2, scope: !5316)
!5346 = !DILocation(line: 500, column: 27, scope: !5316)
!5347 = !DILocation(line: 500, column: 35, scope: !5316)
!5348 = !DILocation(line: 500, column: 39, scope: !5316)
!5349 = !DILocation(line: 500, column: 45, scope: !5316)
!5350 = !DILocation(line: 500, column: 2, scope: !5316)
!5351 = !DILocation(line: 506, column: 2, scope: !5316)
!5352 = !DILocation(line: 506, column: 6, scope: !5316)
!5353 = !DILocation(line: 506, column: 14, scope: !5316)
!5354 = !DILocation(line: 506, column: 21, scope: !5316)
!5355 = !DILocation(line: 506, column: 34, scope: !5316)
!5356 = !DILocation(line: 506, column: 38, scope: !5316)
!5357 = !DILocation(line: 506, column: 46, scope: !5316)
!5358 = !DILocation(line: 506, column: 53, scope: !5316)
!5359 = !DILocation(line: 509, column: 6, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 509, column: 6)
!5361 = !DILocation(line: 509, column: 6, scope: !5316)
!5362 = !DILocation(line: 510, column: 19, scope: !5360)
!5363 = !DILocation(line: 510, column: 3, scope: !5360)
!5364 = !DILocation(line: 511, column: 1, scope: !5316)
!5365 = distinct !DISubprogram(name: "sculpt_extend_redraw_rect_previous", scope: !3, file: !3, line: 448, type: !5366, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !3739, !5368}
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!5369 = !DILocalVariable(name: "ob", arg: 1, scope: !5365, file: !3, line: 448, type: !3739)
!5370 = !DILocation(line: 448, column: 56, scope: !5365)
!5371 = !DILocalVariable(name: "rect", arg: 2, scope: !5365, file: !3, line: 448, type: !5368)
!5372 = !DILocation(line: 448, column: 66, scope: !5365)
!5373 = !DILocalVariable(name: "ss", scope: !5365, file: !3, line: 456, type: !5374)
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptSession", file: !260, line: 206, baseType: !259)
!5376 = !DILocation(line: 456, column: 17, scope: !5365)
!5377 = !DILocation(line: 456, column: 22, scope: !5365)
!5378 = !DILocation(line: 456, column: 26, scope: !5365)
!5379 = !DILocation(line: 458, column: 6, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 458, column: 6)
!5381 = !DILocation(line: 458, column: 10, scope: !5380)
!5382 = !DILocation(line: 458, column: 6, scope: !5365)
!5383 = !DILocation(line: 459, column: 27, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 459, column: 7)
!5385 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 458, column: 17)
!5386 = !DILocation(line: 459, column: 31, scope: !5384)
!5387 = !DILocation(line: 459, column: 38, scope: !5384)
!5388 = !DILocation(line: 459, column: 8, scope: !5384)
!5389 = !DILocation(line: 459, column: 7, scope: !5385)
!5390 = !DILocation(line: 460, column: 19, scope: !5384)
!5391 = !DILocation(line: 460, column: 26, scope: !5384)
!5392 = !DILocation(line: 460, column: 30, scope: !5384)
!5393 = !DILocation(line: 460, column: 37, scope: !5384)
!5394 = !DILocation(line: 460, column: 4, scope: !5384)
!5395 = !DILocation(line: 461, column: 2, scope: !5385)
!5396 = !DILocation(line: 462, column: 1, scope: !5365)
!5397 = distinct !DISubprogram(name: "sculpt_vertcos_to_key", scope: !3, file: !3, line: 2968, type: !5398, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{null, !3739, !5027, !2054}
!5400 = !DILocalVariable(name: "ob", arg: 1, scope: !5397, file: !3, line: 2968, type: !3739)
!5401 = !DILocation(line: 2968, column: 36, scope: !5397)
!5402 = !DILocalVariable(name: "kb", arg: 2, scope: !5397, file: !3, line: 2968, type: !5027)
!5403 = !DILocation(line: 2968, column: 50, scope: !5397)
!5404 = !DILocalVariable(name: "vertCos", arg: 3, scope: !5397, file: !3, line: 2968, type: !2054)
!5405 = !DILocation(line: 2968, column: 62, scope: !5397)
!5406 = !DILocalVariable(name: "me", scope: !5397, file: !3, line: 2970, type: !5012)
!5407 = !DILocation(line: 2970, column: 8, scope: !5397)
!5408 = !DILocation(line: 2970, column: 21, scope: !5397)
!5409 = !DILocation(line: 2970, column: 25, scope: !5397)
!5410 = !DILocation(line: 2970, column: 13, scope: !5397)
!5411 = !DILocalVariable(name: "ofs", scope: !5397, file: !3, line: 2971, type: !2054)
!5412 = !DILocation(line: 2971, column: 10, scope: !5397)
!5413 = !DILocalVariable(name: "a", scope: !5397, file: !3, line: 2972, type: !57)
!5414 = !DILocation(line: 2972, column: 6, scope: !5397)
!5415 = !DILocalVariable(name: "is_basis", scope: !5397, file: !3, line: 2972, type: !57)
!5416 = !DILocation(line: 2972, column: 9, scope: !5397)
!5417 = !DILocalVariable(name: "currkey", scope: !5397, file: !3, line: 2973, type: !5027)
!5418 = !DILocation(line: 2973, column: 12, scope: !5397)
!5419 = !DILocation(line: 2976, column: 6, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2976, column: 6)
!5421 = !DILocation(line: 2976, column: 10, scope: !5420)
!5422 = !DILocation(line: 2976, column: 15, scope: !5420)
!5423 = !DILocation(line: 2976, column: 20, scope: !5420)
!5424 = !DILocation(line: 2976, column: 6, scope: !5397)
!5425 = !DILocation(line: 2977, column: 18, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2977, column: 3)
!5427 = !DILocation(line: 2977, column: 22, scope: !5426)
!5428 = !DILocation(line: 2977, column: 27, scope: !5426)
!5429 = !DILocation(line: 2977, column: 33, scope: !5426)
!5430 = !DILocation(line: 2977, column: 16, scope: !5426)
!5431 = !DILocation(line: 2977, column: 8, scope: !5426)
!5432 = !DILocation(line: 2977, column: 40, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2977, column: 3)
!5434 = !DILocation(line: 2977, column: 3, scope: !5426)
!5435 = !DILocation(line: 2978, column: 8, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 2978, column: 8)
!5437 = !DILocation(line: 2978, column: 12, scope: !5436)
!5438 = !DILocation(line: 2978, column: 20, scope: !5436)
!5439 = !DILocation(line: 2978, column: 27, scope: !5436)
!5440 = !DILocation(line: 2978, column: 36, scope: !5436)
!5441 = !DILocation(line: 2978, column: 24, scope: !5436)
!5442 = !DILocation(line: 2978, column: 8, scope: !5433)
!5443 = !DILocation(line: 2979, column: 14, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2978, column: 46)
!5445 = !DILocation(line: 2980, column: 5, scope: !5444)
!5446 = !DILocation(line: 2977, column: 59, scope: !5433)
!5447 = !DILocation(line: 2977, column: 68, scope: !5433)
!5448 = !DILocation(line: 2977, column: 57, scope: !5433)
!5449 = !DILocation(line: 2977, column: 3, scope: !5433)
!5450 = distinct !{!5450, !5434, !5451}
!5451 = !DILocation(line: 2981, column: 4, scope: !5426)
!5452 = !DILocation(line: 2983, column: 6, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2983, column: 6)
!5454 = !DILocation(line: 2983, column: 6, scope: !5397)
!5455 = !DILocation(line: 2984, column: 36, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 2983, column: 16)
!5457 = !DILocation(line: 2984, column: 40, scope: !5456)
!5458 = !DILocation(line: 2984, column: 9, scope: !5456)
!5459 = !DILocation(line: 2984, column: 7, scope: !5456)
!5460 = !DILocation(line: 2987, column: 10, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 2987, column: 3)
!5462 = !DILocation(line: 2987, column: 8, scope: !5461)
!5463 = !DILocation(line: 2987, column: 15, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 2987, column: 3)
!5465 = !DILocation(line: 2987, column: 19, scope: !5464)
!5466 = !DILocation(line: 2987, column: 23, scope: !5464)
!5467 = !DILocation(line: 2987, column: 17, scope: !5464)
!5468 = !DILocation(line: 2987, column: 3, scope: !5461)
!5469 = !DILocation(line: 2988, column: 16, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 2987, column: 37)
!5471 = !DILocation(line: 2988, column: 20, scope: !5470)
!5472 = !DILocation(line: 2988, column: 24, scope: !5470)
!5473 = !DILocation(line: 2988, column: 32, scope: !5470)
!5474 = !DILocation(line: 2988, column: 36, scope: !5470)
!5475 = !DILocation(line: 2988, column: 40, scope: !5470)
!5476 = !DILocation(line: 2988, column: 4, scope: !5470)
!5477 = !DILocation(line: 2989, column: 3, scope: !5470)
!5478 = !DILocation(line: 2987, column: 33, scope: !5464)
!5479 = !DILocation(line: 2987, column: 3, scope: !5464)
!5480 = distinct !{!5480, !5468, !5481}
!5481 = !DILocation(line: 2989, column: 3, scope: !5461)
!5482 = !DILocation(line: 2992, column: 13, scope: !5456)
!5483 = !DILocation(line: 2992, column: 17, scope: !5456)
!5484 = !DILocation(line: 2992, column: 22, scope: !5456)
!5485 = !DILocation(line: 2992, column: 28, scope: !5456)
!5486 = !DILocation(line: 2992, column: 11, scope: !5456)
!5487 = !DILocation(line: 2993, column: 3, scope: !5456)
!5488 = !DILocation(line: 2993, column: 10, scope: !5456)
!5489 = !DILocalVariable(name: "apply_offset", scope: !5490, file: !3, line: 2994, type: !57)
!5490 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 2993, column: 19)
!5491 = !DILocation(line: 2994, column: 8, scope: !5490)
!5492 = !DILocation(line: 2994, column: 25, scope: !5490)
!5493 = !DILocation(line: 2994, column: 36, scope: !5490)
!5494 = !DILocation(line: 2994, column: 33, scope: !5490)
!5495 = !DILocation(line: 2994, column: 40, scope: !5490)
!5496 = !DILocation(line: 2994, column: 44, scope: !5490)
!5497 = !DILocation(line: 2994, column: 48, scope: !5490)
!5498 = !DILocation(line: 2994, column: 56, scope: !5490)
!5499 = !DILocation(line: 2994, column: 63, scope: !5490)
!5500 = !DILocation(line: 2994, column: 72, scope: !5490)
!5501 = !DILocation(line: 2994, column: 60, scope: !5490)
!5502 = !DILocation(line: 0, scope: !5490)
!5503 = !DILocation(line: 2996, column: 8, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 2996, column: 8)
!5505 = !DILocation(line: 2996, column: 8, scope: !5490)
!5506 = !DILocation(line: 2997, column: 33, scope: !5504)
!5507 = !DILocation(line: 2997, column: 37, scope: !5504)
!5508 = !DILocation(line: 2997, column: 46, scope: !5504)
!5509 = !DILocation(line: 2997, column: 5, scope: !5504)
!5510 = !DILocation(line: 2999, column: 14, scope: !5490)
!5511 = !DILocation(line: 2999, column: 23, scope: !5490)
!5512 = !DILocation(line: 2999, column: 12, scope: !5490)
!5513 = distinct !{!5513, !5487, !5514}
!5514 = !DILocation(line: 3000, column: 3, scope: !5456)
!5515 = !DILocation(line: 3002, column: 3, scope: !5456)
!5516 = !DILocation(line: 3002, column: 13, scope: !5456)
!5517 = !DILocation(line: 3003, column: 2, scope: !5456)
!5518 = !DILocation(line: 3006, column: 6, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 3006, column: 6)
!5520 = !DILocation(line: 3006, column: 12, scope: !5519)
!5521 = !DILocation(line: 3006, column: 16, scope: !5519)
!5522 = !DILocation(line: 3006, column: 21, scope: !5519)
!5523 = !DILocation(line: 3006, column: 9, scope: !5519)
!5524 = !DILocation(line: 3006, column: 6, scope: !5397)
!5525 = !DILocalVariable(name: "mvert", scope: !5526, file: !3, line: 3007, type: !5136)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 3006, column: 29)
!5527 = !DILocation(line: 3007, column: 10, scope: !5526)
!5528 = !DILocation(line: 3007, column: 18, scope: !5526)
!5529 = !DILocation(line: 3007, column: 22, scope: !5526)
!5530 = !DILocation(line: 3009, column: 10, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 3009, column: 3)
!5532 = !DILocation(line: 3009, column: 8, scope: !5531)
!5533 = !DILocation(line: 3009, column: 15, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3009, column: 3)
!5535 = !DILocation(line: 3009, column: 19, scope: !5534)
!5536 = !DILocation(line: 3009, column: 23, scope: !5534)
!5537 = !DILocation(line: 3009, column: 17, scope: !5534)
!5538 = !DILocation(line: 3009, column: 3, scope: !5531)
!5539 = !DILocation(line: 3010, column: 15, scope: !5534)
!5540 = !DILocation(line: 3010, column: 22, scope: !5534)
!5541 = !DILocation(line: 3010, column: 26, scope: !5534)
!5542 = !DILocation(line: 3010, column: 34, scope: !5534)
!5543 = !DILocation(line: 3010, column: 4, scope: !5534)
!5544 = !DILocation(line: 3009, column: 33, scope: !5534)
!5545 = !DILocation(line: 3009, column: 42, scope: !5534)
!5546 = !DILocation(line: 3009, column: 3, scope: !5534)
!5547 = distinct !{!5547, !5538, !5548}
!5548 = !DILocation(line: 3010, column: 36, scope: !5531)
!5549 = !DILocation(line: 3012, column: 25, scope: !5526)
!5550 = !DILocation(line: 3012, column: 3, scope: !5526)
!5551 = !DILocation(line: 3013, column: 2, scope: !5526)
!5552 = !DILocation(line: 3016, column: 31, scope: !5397)
!5553 = !DILocation(line: 3016, column: 35, scope: !5397)
!5554 = !DILocation(line: 3016, column: 39, scope: !5397)
!5555 = !DILocation(line: 3016, column: 2, scope: !5397)
!5556 = !DILocation(line: 3017, column: 1, scope: !5397)
!5557 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5234, file: !5234, line: 357, type: !5558, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{null, !359, !3251, !3251}
!5560 = !DILocalVariable(name: "r", arg: 1, scope: !5557, file: !5234, line: 357, type: !359)
!5561 = !DILocation(line: 357, column: 32, scope: !5557)
!5562 = !DILocalVariable(name: "a", arg: 2, scope: !5557, file: !5234, line: 357, type: !3251)
!5563 = !DILocation(line: 357, column: 50, scope: !5557)
!5564 = !DILocalVariable(name: "b", arg: 3, scope: !5557, file: !5234, line: 357, type: !3251)
!5565 = !DILocation(line: 357, column: 68, scope: !5557)
!5566 = !DILocation(line: 359, column: 9, scope: !5557)
!5567 = !DILocation(line: 359, column: 16, scope: !5557)
!5568 = !DILocation(line: 359, column: 14, scope: !5557)
!5569 = !DILocation(line: 359, column: 2, scope: !5557)
!5570 = !DILocation(line: 359, column: 7, scope: !5557)
!5571 = !DILocation(line: 360, column: 9, scope: !5557)
!5572 = !DILocation(line: 360, column: 16, scope: !5557)
!5573 = !DILocation(line: 360, column: 14, scope: !5557)
!5574 = !DILocation(line: 360, column: 2, scope: !5557)
!5575 = !DILocation(line: 360, column: 7, scope: !5557)
!5576 = !DILocation(line: 361, column: 9, scope: !5557)
!5577 = !DILocation(line: 361, column: 16, scope: !5557)
!5578 = !DILocation(line: 361, column: 14, scope: !5557)
!5579 = !DILocation(line: 361, column: 2, scope: !5557)
!5580 = !DILocation(line: 361, column: 7, scope: !5557)
!5581 = !DILocation(line: 362, column: 1, scope: !5557)
!5582 = distinct !DISubprogram(name: "sculpt_mode_poll", scope: !3, file: !3, line: 3506, type: !5583, scopeLine: 3507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!57, !5279}
!5585 = !DILocalVariable(name: "C", arg: 1, scope: !5582, file: !3, line: 3506, type: !5279)
!5586 = !DILocation(line: 3506, column: 32, scope: !5582)
!5587 = !DILocalVariable(name: "ob", scope: !5582, file: !3, line: 3508, type: !3739)
!5588 = !DILocation(line: 3508, column: 10, scope: !5582)
!5589 = !DILocation(line: 3508, column: 38, scope: !5582)
!5590 = !DILocation(line: 3508, column: 15, scope: !5582)
!5591 = !DILocation(line: 3509, column: 9, scope: !5582)
!5592 = !DILocation(line: 3509, column: 12, scope: !5582)
!5593 = !DILocation(line: 3509, column: 15, scope: !5582)
!5594 = !DILocation(line: 3509, column: 19, scope: !5582)
!5595 = !DILocation(line: 3509, column: 24, scope: !5582)
!5596 = !DILocation(line: 0, scope: !5582)
!5597 = !DILocation(line: 3509, column: 2, scope: !5582)
!5598 = distinct !DISubprogram(name: "sculpt_mode_poll_view3d", scope: !3, file: !3, line: 3512, type: !5583, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5599 = !DILocalVariable(name: "C", arg: 1, scope: !5598, file: !3, line: 3512, type: !5279)
!5600 = !DILocation(line: 3512, column: 39, scope: !5598)
!5601 = !DILocation(line: 3514, column: 27, scope: !5598)
!5602 = !DILocation(line: 3514, column: 10, scope: !5598)
!5603 = !DILocation(line: 3514, column: 30, scope: !5598)
!5604 = !DILocation(line: 3515, column: 31, scope: !5598)
!5605 = !DILocation(line: 3515, column: 10, scope: !5598)
!5606 = !DILocation(line: 0, scope: !5598)
!5607 = !DILocation(line: 3514, column: 2, scope: !5598)
!5608 = distinct !DISubprogram(name: "sculpt_poll_view3d", scope: !3, file: !3, line: 3518, type: !5583, scopeLine: 3519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5609 = !DILocalVariable(name: "C", arg: 1, scope: !5608, file: !3, line: 3518, type: !5279)
!5610 = !DILocation(line: 3518, column: 34, scope: !5608)
!5611 = !DILocation(line: 3520, column: 22, scope: !5608)
!5612 = !DILocation(line: 3520, column: 10, scope: !5608)
!5613 = !DILocation(line: 3520, column: 25, scope: !5608)
!5614 = !DILocation(line: 3521, column: 31, scope: !5608)
!5615 = !DILocation(line: 3521, column: 10, scope: !5608)
!5616 = !DILocation(line: 0, scope: !5608)
!5617 = !DILocation(line: 3520, column: 2, scope: !5608)
!5618 = distinct !DISubprogram(name: "sculpt_poll", scope: !3, file: !3, line: 3524, type: !5583, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5619 = !DILocalVariable(name: "C", arg: 1, scope: !5618, file: !3, line: 3524, type: !5279)
!5620 = !DILocation(line: 3524, column: 27, scope: !5618)
!5621 = !DILocation(line: 3526, column: 26, scope: !5618)
!5622 = !DILocation(line: 3526, column: 9, scope: !5618)
!5623 = !DILocation(line: 3526, column: 29, scope: !5618)
!5624 = !DILocation(line: 3526, column: 43, scope: !5618)
!5625 = !DILocation(line: 3526, column: 32, scope: !5618)
!5626 = !DILocation(line: 0, scope: !5618)
!5627 = !DILocation(line: 3526, column: 2, scope: !5618)
!5628 = distinct !DISubprogram(name: "sculpt_stroke_get_location", scope: !3, file: !3, line: 4152, type: !5629, scopeLine: 4153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!2315, !5279, !359, !3251}
!5631 = !DILocalVariable(name: "C", arg: 1, scope: !5628, file: !3, line: 4152, type: !5279)
!5632 = !DILocation(line: 4152, column: 43, scope: !5628)
!5633 = !DILocalVariable(name: "out", arg: 2, scope: !5628, file: !3, line: 4152, type: !359)
!5634 = !DILocation(line: 4152, column: 52, scope: !5628)
!5635 = !DILocalVariable(name: "mouse", arg: 3, scope: !5628, file: !3, line: 4152, type: !3251)
!5636 = !DILocation(line: 4152, column: 72, scope: !5628)
!5637 = !DILocalVariable(name: "ob", scope: !5628, file: !3, line: 4154, type: !3739)
!5638 = !DILocation(line: 4154, column: 10, scope: !5628)
!5639 = !DILocalVariable(name: "ss", scope: !5628, file: !3, line: 4155, type: !5374)
!5640 = !DILocation(line: 4155, column: 17, scope: !5628)
!5641 = !DILocalVariable(name: "cache", scope: !5628, file: !3, line: 4156, type: !5642)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrokeCache", file: !3, line: 257, baseType: !2345)
!5644 = !DILocation(line: 4156, column: 15, scope: !5628)
!5645 = !DILocalVariable(name: "ray_start", scope: !5628, file: !3, line: 4157, type: !233)
!5646 = !DILocation(line: 4157, column: 8, scope: !5628)
!5647 = !DILocalVariable(name: "ray_end", scope: !5628, file: !3, line: 4157, type: !233)
!5648 = !DILocation(line: 4157, column: 22, scope: !5628)
!5649 = !DILocalVariable(name: "ray_normal", scope: !5628, file: !3, line: 4157, type: !233)
!5650 = !DILocation(line: 4157, column: 34, scope: !5628)
!5651 = !DILocalVariable(name: "dist", scope: !5628, file: !3, line: 4157, type: !153)
!5652 = !DILocation(line: 4157, column: 49, scope: !5628)
!5653 = !DILocalVariable(name: "srd", scope: !5628, file: !3, line: 4158, type: !5654)
!5654 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptRaycastData", file: !3, line: 4070, baseType: !5655)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4064, size: 320, elements: !5656)
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5655, file: !3, line: 4065, baseType: !5374, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "ray_start", scope: !5655, file: !3, line: 4066, baseType: !3251, size: 64, offset: 64)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "ray_normal", scope: !5655, file: !3, line: 4066, baseType: !3251, size: 64, offset: 128)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !5655, file: !3, line: 4067, baseType: !2315, size: 8, offset: 192)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !5655, file: !3, line: 4068, baseType: !153, size: 32, offset: 224)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !5655, file: !3, line: 4069, baseType: !2315, size: 8, offset: 256)
!5663 = !DILocation(line: 4158, column: 20, scope: !5628)
!5664 = !DILocalVariable(name: "original", scope: !5628, file: !3, line: 4159, type: !2315)
!5665 = !DILocation(line: 4159, column: 7, scope: !5628)
!5666 = !DILocalVariable(name: "vc", scope: !5628, file: !3, line: 4160, type: !2373)
!5667 = !DILocation(line: 4160, column: 14, scope: !5628)
!5668 = !DILocation(line: 4162, column: 25, scope: !5628)
!5669 = !DILocation(line: 4162, column: 2, scope: !5628)
!5670 = !DILocation(line: 4164, column: 10, scope: !5628)
!5671 = !DILocation(line: 4164, column: 5, scope: !5628)
!5672 = !DILocation(line: 4166, column: 7, scope: !5628)
!5673 = !DILocation(line: 4166, column: 11, scope: !5628)
!5674 = !DILocation(line: 4166, column: 5, scope: !5628)
!5675 = !DILocation(line: 4167, column: 10, scope: !5628)
!5676 = !DILocation(line: 4167, column: 14, scope: !5628)
!5677 = !DILocation(line: 4167, column: 8, scope: !5628)
!5678 = !DILocation(line: 4168, column: 14, scope: !5628)
!5679 = !DILocation(line: 4168, column: 13, scope: !5628)
!5680 = !DILocation(line: 4168, column: 23, scope: !5628)
!5681 = !DILocation(line: 4168, column: 30, scope: !5628)
!5682 = !DILocation(line: 4168, column: 11, scope: !5628)
!5683 = !DILocation(line: 4170, column: 32, scope: !5628)
!5684 = !DILocation(line: 4170, column: 35, scope: !5628)
!5685 = !DILocation(line: 4170, column: 2, scope: !5628)
!5686 = !DILocation(line: 4172, column: 34, scope: !5628)
!5687 = !DILocation(line: 4172, column: 41, scope: !5628)
!5688 = !DILocation(line: 4172, column: 52, scope: !5628)
!5689 = !DILocation(line: 4172, column: 61, scope: !5628)
!5690 = !DILocation(line: 4172, column: 73, scope: !5628)
!5691 = !DILocation(line: 4172, column: 9, scope: !5628)
!5692 = !DILocation(line: 4172, column: 7, scope: !5628)
!5693 = !DILocation(line: 4174, column: 17, scope: !5628)
!5694 = !DILocation(line: 4174, column: 6, scope: !5628)
!5695 = !DILocation(line: 4174, column: 15, scope: !5628)
!5696 = !DILocation(line: 4175, column: 11, scope: !5628)
!5697 = !DILocation(line: 4175, column: 15, scope: !5628)
!5698 = !DILocation(line: 4175, column: 6, scope: !5628)
!5699 = !DILocation(line: 4175, column: 9, scope: !5628)
!5700 = !DILocation(line: 4176, column: 6, scope: !5628)
!5701 = !DILocation(line: 4176, column: 10, scope: !5628)
!5702 = !DILocation(line: 4177, column: 18, scope: !5628)
!5703 = !DILocation(line: 4177, column: 6, scope: !5628)
!5704 = !DILocation(line: 4177, column: 16, scope: !5628)
!5705 = !DILocation(line: 4178, column: 19, scope: !5628)
!5706 = !DILocation(line: 4178, column: 6, scope: !5628)
!5707 = !DILocation(line: 4178, column: 17, scope: !5628)
!5708 = !DILocation(line: 4179, column: 13, scope: !5628)
!5709 = !DILocation(line: 4179, column: 6, scope: !5628)
!5710 = !DILocation(line: 4179, column: 11, scope: !5628)
!5711 = !DILocation(line: 4181, column: 19, scope: !5628)
!5712 = !DILocation(line: 4181, column: 23, scope: !5628)
!5713 = !DILocation(line: 4181, column: 48, scope: !5628)
!5714 = !DILocation(line: 4182, column: 19, scope: !5628)
!5715 = !DILocation(line: 4182, column: 30, scope: !5628)
!5716 = !DILocation(line: 4182, column: 46, scope: !5628)
!5717 = !DILocation(line: 4181, column: 2, scope: !5628)
!5718 = !DILocation(line: 4184, column: 13, scope: !5628)
!5719 = !DILocation(line: 4184, column: 18, scope: !5628)
!5720 = !DILocation(line: 4184, column: 2, scope: !5628)
!5721 = !DILocation(line: 4185, column: 12, scope: !5628)
!5722 = !DILocation(line: 4185, column: 21, scope: !5628)
!5723 = !DILocation(line: 4185, column: 2, scope: !5628)
!5724 = !DILocation(line: 4186, column: 12, scope: !5628)
!5725 = !DILocation(line: 4186, column: 17, scope: !5628)
!5726 = !DILocation(line: 4186, column: 2, scope: !5628)
!5727 = !DILocation(line: 4188, column: 13, scope: !5628)
!5728 = !DILocation(line: 4188, column: 2, scope: !5628)
!5729 = distinct !DISubprogram(name: "sculpt_stroke_modifiers_check", scope: !3, file: !3, line: 4051, type: !5730, scopeLine: 4052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{null, !5732, !3739}
!5732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5733, size: 64)
!5733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5280)
!5734 = !DILocalVariable(name: "C", arg: 1, scope: !5729, file: !3, line: 4051, type: !5732)
!5735 = !DILocation(line: 4051, column: 59, scope: !5729)
!5736 = !DILocalVariable(name: "ob", arg: 2, scope: !5729, file: !3, line: 4051, type: !3739)
!5737 = !DILocation(line: 4051, column: 70, scope: !5729)
!5738 = !DILocalVariable(name: "ss", scope: !5729, file: !3, line: 4053, type: !5374)
!5739 = !DILocation(line: 4053, column: 17, scope: !5729)
!5740 = !DILocation(line: 4053, column: 22, scope: !5729)
!5741 = !DILocation(line: 4053, column: 26, scope: !5729)
!5742 = !DILocation(line: 4055, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 4055, column: 6)
!5744 = !DILocation(line: 4055, column: 10, scope: !5743)
!5745 = !DILocation(line: 4055, column: 13, scope: !5743)
!5746 = !DILocation(line: 4055, column: 16, scope: !5743)
!5747 = !DILocation(line: 4055, column: 20, scope: !5743)
!5748 = !DILocation(line: 4055, column: 6, scope: !5729)
!5749 = !DILocalVariable(name: "sd", scope: !5750, file: !3, line: 4056, type: !6)
!5750 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 4055, column: 38)
!5751 = !DILocation(line: 4056, column: 11, scope: !5750)
!5752 = !DILocation(line: 4056, column: 39, scope: !5750)
!5753 = !DILocation(line: 4056, column: 16, scope: !5750)
!5754 = !DILocation(line: 4056, column: 43, scope: !5750)
!5755 = !DILocalVariable(name: "brush", scope: !5750, file: !3, line: 4057, type: !2749)
!5756 = !DILocation(line: 4057, column: 10, scope: !5750)
!5757 = !DILocation(line: 4057, column: 35, scope: !5750)
!5758 = !DILocation(line: 4057, column: 39, scope: !5750)
!5759 = !DILocation(line: 4057, column: 18, scope: !5750)
!5760 = !DILocation(line: 4059, column: 50, scope: !5750)
!5761 = !DILocation(line: 4059, column: 35, scope: !5750)
!5762 = !DILocation(line: 4059, column: 54, scope: !5750)
!5763 = !DILocation(line: 4059, column: 58, scope: !5750)
!5764 = !DILocation(line: 4060, column: 54, scope: !5750)
!5765 = !DILocation(line: 4060, column: 61, scope: !5750)
!5766 = !DILocation(line: 4060, column: 65, scope: !5750)
!5767 = !DILocation(line: 4060, column: 31, scope: !5750)
!5768 = !DILocation(line: 4059, column: 3, scope: !5750)
!5769 = !DILocation(line: 4061, column: 2, scope: !5750)
!5770 = !DILocation(line: 4062, column: 1, scope: !5729)
!5771 = distinct !DISubprogram(name: "sculpt_raycast_init", scope: !3, file: !3, line: 4120, type: !5772, scopeLine: 4121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!153, !2372, !3251, !359, !359, !359, !2315}
!5774 = !DILocalVariable(name: "vc", arg: 1, scope: !5771, file: !3, line: 4120, type: !2372)
!5775 = !DILocation(line: 4120, column: 47, scope: !5771)
!5776 = !DILocalVariable(name: "mouse", arg: 2, scope: !5771, file: !3, line: 4120, type: !3251)
!5777 = !DILocation(line: 4120, column: 63, scope: !5771)
!5778 = !DILocalVariable(name: "ray_start", arg: 3, scope: !5771, file: !3, line: 4120, type: !359)
!5779 = !DILocation(line: 4120, column: 79, scope: !5771)
!5780 = !DILocalVariable(name: "ray_end", arg: 4, scope: !5771, file: !3, line: 4120, type: !359)
!5781 = !DILocation(line: 4120, column: 99, scope: !5771)
!5782 = !DILocalVariable(name: "ray_normal", arg: 5, scope: !5771, file: !3, line: 4120, type: !359)
!5783 = !DILocation(line: 4120, column: 117, scope: !5771)
!5784 = !DILocalVariable(name: "original", arg: 6, scope: !5771, file: !3, line: 4120, type: !2315)
!5785 = !DILocation(line: 4120, column: 137, scope: !5771)
!5786 = !DILocalVariable(name: "obimat", scope: !5771, file: !3, line: 4122, type: !1294)
!5787 = !DILocation(line: 4122, column: 8, scope: !5771)
!5788 = !DILocalVariable(name: "dist", scope: !5771, file: !3, line: 4123, type: !153)
!5789 = !DILocation(line: 4123, column: 8, scope: !5771)
!5790 = !DILocalVariable(name: "ob", scope: !5771, file: !3, line: 4124, type: !3739)
!5791 = !DILocation(line: 4124, column: 10, scope: !5771)
!5792 = !DILocation(line: 4124, column: 15, scope: !5771)
!5793 = !DILocation(line: 4124, column: 19, scope: !5771)
!5794 = !DILocalVariable(name: "rv3d", scope: !5771, file: !3, line: 4125, type: !5321)
!5795 = !DILocation(line: 4125, column: 16, scope: !5771)
!5796 = !DILocation(line: 4125, column: 23, scope: !5771)
!5797 = !DILocation(line: 4125, column: 27, scope: !5771)
!5798 = !DILocation(line: 4125, column: 31, scope: !5771)
!5799 = !DILocation(line: 4128, column: 27, scope: !5771)
!5800 = !DILocation(line: 4128, column: 31, scope: !5771)
!5801 = !DILocation(line: 4128, column: 35, scope: !5771)
!5802 = !DILocation(line: 4128, column: 39, scope: !5771)
!5803 = !DILocation(line: 4128, column: 44, scope: !5771)
!5804 = !DILocation(line: 4128, column: 51, scope: !5771)
!5805 = !DILocation(line: 4128, column: 62, scope: !5771)
!5806 = !DILocation(line: 4128, column: 2, scope: !5771)
!5807 = !DILocation(line: 4130, column: 15, scope: !5771)
!5808 = !DILocation(line: 4130, column: 23, scope: !5771)
!5809 = !DILocation(line: 4130, column: 27, scope: !5771)
!5810 = !DILocation(line: 4130, column: 2, scope: !5771)
!5811 = !DILocation(line: 4131, column: 12, scope: !5771)
!5812 = !DILocation(line: 4131, column: 20, scope: !5771)
!5813 = !DILocation(line: 4131, column: 2, scope: !5771)
!5814 = !DILocation(line: 4132, column: 12, scope: !5771)
!5815 = !DILocation(line: 4132, column: 20, scope: !5771)
!5816 = !DILocation(line: 4132, column: 2, scope: !5771)
!5817 = !DILocation(line: 4134, column: 14, scope: !5771)
!5818 = !DILocation(line: 4134, column: 26, scope: !5771)
!5819 = !DILocation(line: 4134, column: 35, scope: !5771)
!5820 = !DILocation(line: 4134, column: 2, scope: !5771)
!5821 = !DILocation(line: 4135, column: 22, scope: !5771)
!5822 = !DILocation(line: 4135, column: 9, scope: !5771)
!5823 = !DILocation(line: 4135, column: 7, scope: !5771)
!5824 = !DILocation(line: 4137, column: 7, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 4137, column: 6)
!5826 = !DILocation(line: 4137, column: 13, scope: !5825)
!5827 = !DILocation(line: 4137, column: 6, scope: !5771)
!5828 = !DILocation(line: 4138, column: 37, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 4137, column: 23)
!5830 = !DILocation(line: 4138, column: 41, scope: !5829)
!5831 = !DILocation(line: 4138, column: 49, scope: !5829)
!5832 = !DILocation(line: 4138, column: 55, scope: !5829)
!5833 = !DILocation(line: 4138, column: 65, scope: !5829)
!5834 = !DILocation(line: 4138, column: 76, scope: !5829)
!5835 = !DILocation(line: 4138, column: 85, scope: !5829)
!5836 = !DILocation(line: 4138, column: 3, scope: !5829)
!5837 = !DILocation(line: 4141, column: 15, scope: !5829)
!5838 = !DILocation(line: 4141, column: 27, scope: !5829)
!5839 = !DILocation(line: 4141, column: 36, scope: !5829)
!5840 = !DILocation(line: 4141, column: 3, scope: !5829)
!5841 = !DILocation(line: 4142, column: 23, scope: !5829)
!5842 = !DILocation(line: 4142, column: 10, scope: !5829)
!5843 = !DILocation(line: 4142, column: 8, scope: !5829)
!5844 = !DILocation(line: 4143, column: 2, scope: !5829)
!5845 = !DILocation(line: 4145, column: 9, scope: !5771)
!5846 = !DILocation(line: 4145, column: 2, scope: !5771)
!5847 = distinct !DISubprogram(name: "sculpt_raycast_cb", scope: !3, file: !3, line: 4079, type: !5848, scopeLine: 4080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{null, !3742, !26, !359}
!5850 = !DILocalVariable(name: "node", arg: 1, scope: !5847, file: !3, line: 4079, type: !3742)
!5851 = !DILocation(line: 4079, column: 41, scope: !5847)
!5852 = !DILocalVariable(name: "data_v", arg: 2, scope: !5847, file: !3, line: 4079, type: !26)
!5853 = !DILocation(line: 4079, column: 53, scope: !5847)
!5854 = !DILocalVariable(name: "tmin", arg: 3, scope: !5847, file: !3, line: 4079, type: !359)
!5855 = !DILocation(line: 4079, column: 68, scope: !5847)
!5856 = !DILocation(line: 4081, column: 29, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 4081, column: 6)
!5858 = !DILocation(line: 4081, column: 6, scope: !5857)
!5859 = !DILocation(line: 4081, column: 38, scope: !5857)
!5860 = !DILocation(line: 4081, column: 37, scope: !5857)
!5861 = !DILocation(line: 4081, column: 35, scope: !5857)
!5862 = !DILocation(line: 4081, column: 6, scope: !5847)
!5863 = !DILocalVariable(name: "srd", scope: !5864, file: !3, line: 4082, type: !5865)
!5864 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 4081, column: 44)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 64)
!5866 = !DILocation(line: 4082, column: 22, scope: !5864)
!5867 = !DILocation(line: 4082, column: 28, scope: !5864)
!5868 = !DILocalVariable(name: "origco", scope: !5864, file: !3, line: 4083, type: !2054)
!5869 = !DILocation(line: 4083, column: 11, scope: !5864)
!5870 = !DILocalVariable(name: "use_origco", scope: !5864, file: !3, line: 4084, type: !2315)
!5871 = !DILocation(line: 4084, column: 8, scope: !5864)
!5872 = !DILocation(line: 4086, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 4086, column: 7)
!5874 = !DILocation(line: 4086, column: 12, scope: !5873)
!5875 = !DILocation(line: 4086, column: 21, scope: !5873)
!5876 = !DILocation(line: 4086, column: 24, scope: !5873)
!5877 = !DILocation(line: 4086, column: 29, scope: !5873)
!5878 = !DILocation(line: 4086, column: 33, scope: !5873)
!5879 = !DILocation(line: 4086, column: 7, scope: !5864)
!5880 = !DILocation(line: 4087, column: 22, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4087, column: 8)
!5882 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 4086, column: 40)
!5883 = !DILocation(line: 4087, column: 27, scope: !5881)
!5884 = !DILocation(line: 4087, column: 31, scope: !5881)
!5885 = !DILocation(line: 4087, column: 8, scope: !5881)
!5886 = !DILocation(line: 4087, column: 37, scope: !5881)
!5887 = !DILocation(line: 4087, column: 8, scope: !5882)
!5888 = !DILocation(line: 4088, column: 16, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 4087, column: 52)
!5890 = !DILocation(line: 4089, column: 4, scope: !5889)
!5891 = !DILocalVariable(name: "unode", scope: !5892, file: !3, line: 4092, type: !5893)
!5892 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 4090, column: 9)
!5893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5894, size: 64)
!5894 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptUndoNode", file: !3839, line: 122, baseType: !5895)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptUndoNode", file: !3839, line: 82, size: 8640, elements: !5896)
!5896 = !{!5897, !5899, !5900, !5902, !5903, !5904, !5905, !5906, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5919, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5895, file: !3839, line: 83, baseType: !5898, size: 64)
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5895, file: !3839, line: 83, baseType: !5898, size: 64, offset: 64)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5895, file: !3839, line: 85, baseType: !5901, size: 32, offset: 128)
!5901 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptUndoType", file: !3839, line: 80, baseType: !3838)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !5895, file: !3839, line: 87, baseType: !51, size: 528, offset: 160)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5895, file: !3839, line: 88, baseType: !26, size: 64, offset: 704)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5895, file: !3839, line: 90, baseType: !2054, size: 64, offset: 768)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "orig_co", scope: !5895, file: !3839, line: 91, baseType: !2054, size: 64, offset: 832)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !5895, file: !3839, line: 92, baseType: !5907, size: 64, offset: 896)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5895, file: !3839, line: 93, baseType: !359, size: 64, offset: 960)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5895, file: !3839, line: 94, baseType: !57, size: 32, offset: 1024)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "maxvert", scope: !5895, file: !3839, line: 97, baseType: !57, size: 32, offset: 1056)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5895, file: !3839, line: 98, baseType: !2083, size: 64, offset: 1088)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "vert_hidden", scope: !5895, file: !3839, line: 99, baseType: !5161, size: 64, offset: 1152)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "maxgrid", scope: !5895, file: !3839, line: 102, baseType: !57, size: 32, offset: 1216)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "gridsize", scope: !5895, file: !3839, line: 103, baseType: !57, size: 32, offset: 1248)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "totgrid", scope: !5895, file: !3839, line: 104, baseType: !57, size: 32, offset: 1280)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "grids", scope: !5895, file: !3839, line: 105, baseType: !2083, size: 64, offset: 1344)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "grid_hidden", scope: !5895, file: !3839, line: 106, baseType: !5918, size: 64, offset: 1408)
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "bm_entry", scope: !5895, file: !3839, line: 109, baseType: !5920, size: 64, offset: 1472)
!5920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5921, size: 64)
!5921 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLogEntry", file: !3839, line: 109, flags: DIFlagFwdDecl)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "applied", scope: !5895, file: !3839, line: 110, baseType: !2315, size: 8, offset: 1536)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_vdata", scope: !5895, file: !3839, line: 111, baseType: !2269, size: 1600, offset: 1600)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_edata", scope: !5895, file: !3839, line: 112, baseType: !2269, size: 1600, offset: 3200)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_ldata", scope: !5895, file: !3839, line: 113, baseType: !2269, size: 1600, offset: 4800)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_pdata", scope: !5895, file: !3839, line: 114, baseType: !2269, size: 1600, offset: 6400)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_totvert", scope: !5895, file: !3839, line: 115, baseType: !57, size: 32, offset: 8000)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_totedge", scope: !5895, file: !3839, line: 116, baseType: !57, size: 32, offset: 8032)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_totloop", scope: !5895, file: !3839, line: 117, baseType: !57, size: 32, offset: 8064)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "bm_enter_totpoly", scope: !5895, file: !3839, line: 118, baseType: !57, size: 32, offset: 8096)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "shapeName", scope: !5895, file: !3839, line: 121, baseType: !72, size: 512, offset: 8128)
!5932 = !DILocation(line: 4092, column: 21, scope: !5892)
!5933 = !DILocation(line: 4092, column: 50, scope: !5892)
!5934 = !DILocation(line: 4092, column: 29, scope: !5892)
!5935 = !DILocation(line: 4093, column: 15, scope: !5892)
!5936 = !DILocation(line: 4093, column: 14, scope: !5892)
!5937 = !DILocation(line: 4093, column: 24, scope: !5892)
!5938 = !DILocation(line: 4093, column: 31, scope: !5892)
!5939 = !DILocation(line: 4093, column: 12, scope: !5892)
!5940 = !DILocation(line: 4094, column: 18, scope: !5892)
!5941 = !DILocation(line: 4094, column: 16, scope: !5892)
!5942 = !DILocation(line: 4096, column: 3, scope: !5882)
!5943 = !DILocation(line: 4098, column: 29, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 4098, column: 7)
!5945 = !DILocation(line: 4098, column: 34, scope: !5944)
!5946 = !DILocation(line: 4098, column: 38, scope: !5944)
!5947 = !DILocation(line: 4098, column: 44, scope: !5944)
!5948 = !DILocation(line: 4098, column: 50, scope: !5944)
!5949 = !DILocation(line: 4098, column: 58, scope: !5944)
!5950 = !DILocation(line: 4099, column: 29, scope: !5944)
!5951 = !DILocation(line: 4099, column: 34, scope: !5944)
!5952 = !DILocation(line: 4099, column: 45, scope: !5944)
!5953 = !DILocation(line: 4099, column: 50, scope: !5944)
!5954 = !DILocation(line: 4099, column: 63, scope: !5944)
!5955 = !DILocation(line: 4099, column: 68, scope: !5944)
!5956 = !DILocation(line: 4098, column: 7, scope: !5944)
!5957 = !DILocation(line: 4098, column: 7, scope: !5864)
!5958 = !DILocation(line: 4101, column: 4, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 4100, column: 3)
!5960 = !DILocation(line: 4101, column: 9, scope: !5959)
!5961 = !DILocation(line: 4101, column: 13, scope: !5959)
!5962 = !DILocation(line: 4102, column: 12, scope: !5959)
!5963 = !DILocation(line: 4102, column: 17, scope: !5959)
!5964 = !DILocation(line: 4102, column: 5, scope: !5959)
!5965 = !DILocation(line: 4102, column: 10, scope: !5959)
!5966 = !DILocation(line: 4103, column: 3, scope: !5959)
!5967 = !DILocation(line: 4104, column: 2, scope: !5864)
!5968 = !DILocation(line: 4105, column: 1, scope: !5847)
!5969 = distinct !DISubprogram(name: "mul_v3_fl", scope: !5234, file: !5234, line: 392, type: !5970, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !359, !153}
!5972 = !DILocalVariable(name: "r", arg: 1, scope: !5969, file: !5234, line: 392, type: !359)
!5973 = !DILocation(line: 392, column: 30, scope: !5969)
!5974 = !DILocalVariable(name: "f", arg: 2, scope: !5969, file: !5234, line: 392, type: !153)
!5975 = !DILocation(line: 392, column: 42, scope: !5969)
!5976 = !DILocation(line: 394, column: 10, scope: !5969)
!5977 = !DILocation(line: 394, column: 2, scope: !5969)
!5978 = !DILocation(line: 394, column: 7, scope: !5969)
!5979 = !DILocation(line: 395, column: 10, scope: !5969)
!5980 = !DILocation(line: 395, column: 2, scope: !5969)
!5981 = !DILocation(line: 395, column: 7, scope: !5969)
!5982 = !DILocation(line: 396, column: 10, scope: !5969)
!5983 = !DILocation(line: 396, column: 2, scope: !5969)
!5984 = !DILocation(line: 396, column: 7, scope: !5969)
!5985 = !DILocation(line: 397, column: 1, scope: !5969)
!5986 = distinct !DISubprogram(name: "add_v3_v3", scope: !5234, file: !5234, line: 302, type: !5260, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!5987 = !DILocalVariable(name: "r", arg: 1, scope: !5986, file: !5234, line: 302, type: !359)
!5988 = !DILocation(line: 302, column: 30, scope: !5986)
!5989 = !DILocalVariable(name: "a", arg: 2, scope: !5986, file: !5234, line: 302, type: !3251)
!5990 = !DILocation(line: 302, column: 48, scope: !5986)
!5991 = !DILocation(line: 304, column: 10, scope: !5986)
!5992 = !DILocation(line: 304, column: 2, scope: !5986)
!5993 = !DILocation(line: 304, column: 7, scope: !5986)
!5994 = !DILocation(line: 305, column: 10, scope: !5986)
!5995 = !DILocation(line: 305, column: 2, scope: !5986)
!5996 = !DILocation(line: 305, column: 7, scope: !5986)
!5997 = !DILocation(line: 306, column: 10, scope: !5986)
!5998 = !DILocation(line: 306, column: 2, scope: !5986)
!5999 = !DILocation(line: 306, column: 7, scope: !5986)
!6000 = !DILocation(line: 307, column: 1, scope: !5986)
!6001 = distinct !DISubprogram(name: "sculpt_update_object_bounding_box", scope: !3, file: !3, line: 4249, type: !6002, scopeLine: 4250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{null, !3739}
!6004 = !DILocalVariable(name: "ob", arg: 1, scope: !6001, file: !3, line: 4249, type: !3739)
!6005 = !DILocation(line: 4249, column: 48, scope: !6001)
!6006 = !DILocation(line: 4251, column: 6, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 4251, column: 6)
!6008 = !DILocation(line: 4251, column: 10, scope: !6007)
!6009 = !DILocation(line: 4251, column: 6, scope: !6001)
!6010 = !DILocalVariable(name: "bb_min", scope: !6011, file: !3, line: 4252, type: !233)
!6011 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 4251, column: 14)
!6012 = !DILocation(line: 4252, column: 9, scope: !6011)
!6013 = !DILocalVariable(name: "bb_max", scope: !6011, file: !3, line: 4252, type: !233)
!6014 = !DILocation(line: 4252, column: 20, scope: !6011)
!6015 = !DILocation(line: 4254, column: 25, scope: !6011)
!6016 = !DILocation(line: 4254, column: 29, scope: !6011)
!6017 = !DILocation(line: 4254, column: 37, scope: !6011)
!6018 = !DILocation(line: 4254, column: 43, scope: !6011)
!6019 = !DILocation(line: 4254, column: 51, scope: !6011)
!6020 = !DILocation(line: 4254, column: 3, scope: !6011)
!6021 = !DILocation(line: 4255, column: 33, scope: !6011)
!6022 = !DILocation(line: 4255, column: 37, scope: !6011)
!6023 = !DILocation(line: 4255, column: 41, scope: !6011)
!6024 = !DILocation(line: 4255, column: 49, scope: !6011)
!6025 = !DILocation(line: 4255, column: 3, scope: !6011)
!6026 = !DILocation(line: 4256, column: 2, scope: !6011)
!6027 = !DILocation(line: 4257, column: 1, scope: !6001)
!6028 = distinct !DISubprogram(name: "sculpt_pbvh_clear", scope: !3, file: !3, line: 4602, type: !6002, scopeLine: 4603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6029 = !DILocalVariable(name: "ob", arg: 1, scope: !6028, file: !3, line: 4602, type: !3739)
!6030 = !DILocation(line: 4602, column: 32, scope: !6028)
!6031 = !DILocalVariable(name: "ss", scope: !6028, file: !3, line: 4604, type: !5374)
!6032 = !DILocation(line: 4604, column: 17, scope: !6028)
!6033 = !DILocation(line: 4604, column: 22, scope: !6028)
!6034 = !DILocation(line: 4604, column: 26, scope: !6028)
!6035 = !DILocalVariable(name: "dm", scope: !6028, file: !3, line: 4605, type: !3066)
!6036 = !DILocation(line: 4605, column: 15, scope: !6028)
!6037 = !DILocation(line: 4605, column: 20, scope: !6028)
!6038 = !DILocation(line: 4605, column: 24, scope: !6028)
!6039 = !DILocation(line: 4608, column: 6, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 4608, column: 6)
!6041 = !DILocation(line: 4608, column: 10, scope: !6040)
!6042 = !DILocation(line: 4608, column: 6, scope: !6028)
!6043 = !DILocation(line: 4609, column: 17, scope: !6040)
!6044 = !DILocation(line: 4609, column: 21, scope: !6040)
!6045 = !DILocation(line: 4609, column: 3, scope: !6040)
!6046 = !DILocation(line: 4610, column: 2, scope: !6028)
!6047 = !DILocation(line: 4610, column: 6, scope: !6028)
!6048 = !DILocation(line: 4610, column: 11, scope: !6028)
!6049 = !DILocation(line: 4611, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 4611, column: 6)
!6051 = !DILocation(line: 4611, column: 6, scope: !6028)
!6052 = !DILocation(line: 4612, column: 3, scope: !6050)
!6053 = !DILocation(line: 4612, column: 7, scope: !6050)
!6054 = !DILocation(line: 4612, column: 21, scope: !6050)
!6055 = !DILocation(line: 4613, column: 33, scope: !6028)
!6056 = !DILocation(line: 4613, column: 2, scope: !6028)
!6057 = !DILocation(line: 4614, column: 1, scope: !6028)
!6058 = distinct !DISubprogram(name: "sculpt_dyntopo_node_layers_add", scope: !3, file: !3, line: 4616, type: !6059, scopeLine: 4617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{null, !5374}
!6061 = !DILocalVariable(name: "ss", arg: 1, scope: !6058, file: !3, line: 4616, type: !5374)
!6062 = !DILocation(line: 4616, column: 52, scope: !6058)
!6063 = !DILocalVariable(name: "cd_node_layer_index", scope: !6058, file: !3, line: 4618, type: !57)
!6064 = !DILocation(line: 4618, column: 6, scope: !6058)
!6065 = !DILocalVariable(name: "layer_id", scope: !6058, file: !3, line: 4620, type: !6066)
!6066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 136, elements: !6067)
!6067 = !{!6068}
!6068 = !DISubrange(count: 17)
!6069 = !DILocation(line: 4620, column: 7, scope: !6058)
!6070 = !DILocation(line: 4622, column: 58, scope: !6058)
!6071 = !DILocation(line: 4622, column: 62, scope: !6058)
!6072 = !DILocation(line: 4622, column: 66, scope: !6058)
!6073 = !DILocation(line: 4622, column: 86, scope: !6058)
!6074 = !DILocation(line: 4622, column: 24, scope: !6058)
!6075 = !DILocation(line: 4622, column: 22, scope: !6058)
!6076 = !DILocation(line: 4623, column: 6, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 4623, column: 6)
!6078 = !DILocation(line: 4623, column: 26, scope: !6077)
!6079 = !DILocation(line: 4623, column: 6, scope: !6058)
!6080 = !DILocation(line: 4624, column: 27, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 4623, column: 33)
!6082 = !DILocation(line: 4624, column: 31, scope: !6081)
!6083 = !DILocation(line: 4624, column: 36, scope: !6081)
!6084 = !DILocation(line: 4624, column: 40, scope: !6081)
!6085 = !DILocation(line: 4624, column: 44, scope: !6081)
!6086 = !DILocation(line: 4624, column: 64, scope: !6081)
!6087 = !DILocation(line: 4624, column: 3, scope: !6081)
!6088 = !DILocation(line: 4625, column: 59, scope: !6081)
!6089 = !DILocation(line: 4625, column: 63, scope: !6081)
!6090 = !DILocation(line: 4625, column: 67, scope: !6081)
!6091 = !DILocation(line: 4625, column: 87, scope: !6081)
!6092 = !DILocation(line: 4625, column: 25, scope: !6081)
!6093 = !DILocation(line: 4625, column: 23, scope: !6081)
!6094 = !DILocation(line: 4626, column: 2, scope: !6081)
!6095 = !DILocation(line: 4628, column: 53, scope: !6058)
!6096 = !DILocation(line: 4628, column: 57, scope: !6058)
!6097 = !DILocation(line: 4628, column: 61, scope: !6058)
!6098 = !DILocation(line: 4629, column: 52, scope: !6058)
!6099 = !DILocation(line: 4629, column: 102, scope: !6058)
!6100 = !DILocation(line: 4629, column: 106, scope: !6058)
!6101 = !DILocation(line: 4629, column: 110, scope: !6058)
!6102 = !DILocation(line: 4629, column: 74, scope: !6058)
!6103 = !DILocation(line: 4629, column: 72, scope: !6058)
!6104 = !DILocation(line: 4628, column: 28, scope: !6058)
!6105 = !DILocation(line: 4628, column: 2, scope: !6058)
!6106 = !DILocation(line: 4628, column: 6, scope: !6058)
!6107 = !DILocation(line: 4628, column: 26, scope: !6058)
!6108 = !DILocation(line: 4631, column: 2, scope: !6058)
!6109 = !DILocation(line: 4631, column: 6, scope: !6058)
!6110 = !DILocation(line: 4631, column: 10, scope: !6058)
!6111 = !DILocation(line: 4631, column: 16, scope: !6058)
!6112 = !DILocation(line: 4631, column: 23, scope: !6058)
!6113 = !DILocation(line: 4631, column: 44, scope: !6058)
!6114 = !DILocation(line: 4631, column: 49, scope: !6058)
!6115 = !DILocation(line: 4633, column: 58, scope: !6058)
!6116 = !DILocation(line: 4633, column: 62, scope: !6058)
!6117 = !DILocation(line: 4633, column: 66, scope: !6058)
!6118 = !DILocation(line: 4633, column: 86, scope: !6058)
!6119 = !DILocation(line: 4633, column: 24, scope: !6058)
!6120 = !DILocation(line: 4633, column: 22, scope: !6058)
!6121 = !DILocation(line: 4634, column: 6, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 4634, column: 6)
!6123 = !DILocation(line: 4634, column: 26, scope: !6122)
!6124 = !DILocation(line: 4634, column: 6, scope: !6058)
!6125 = !DILocation(line: 4635, column: 27, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 4634, column: 33)
!6127 = !DILocation(line: 4635, column: 31, scope: !6126)
!6128 = !DILocation(line: 4635, column: 36, scope: !6126)
!6129 = !DILocation(line: 4635, column: 40, scope: !6126)
!6130 = !DILocation(line: 4635, column: 44, scope: !6126)
!6131 = !DILocation(line: 4635, column: 64, scope: !6126)
!6132 = !DILocation(line: 4635, column: 3, scope: !6126)
!6133 = !DILocation(line: 4636, column: 59, scope: !6126)
!6134 = !DILocation(line: 4636, column: 63, scope: !6126)
!6135 = !DILocation(line: 4636, column: 67, scope: !6126)
!6136 = !DILocation(line: 4636, column: 87, scope: !6126)
!6137 = !DILocation(line: 4636, column: 25, scope: !6126)
!6138 = !DILocation(line: 4636, column: 23, scope: !6126)
!6139 = !DILocation(line: 4637, column: 2, scope: !6126)
!6140 = !DILocation(line: 4639, column: 53, scope: !6058)
!6141 = !DILocation(line: 4639, column: 57, scope: !6058)
!6142 = !DILocation(line: 4639, column: 61, scope: !6058)
!6143 = !DILocation(line: 4640, column: 52, scope: !6058)
!6144 = !DILocation(line: 4640, column: 102, scope: !6058)
!6145 = !DILocation(line: 4640, column: 106, scope: !6058)
!6146 = !DILocation(line: 4640, column: 110, scope: !6058)
!6147 = !DILocation(line: 4640, column: 74, scope: !6058)
!6148 = !DILocation(line: 4640, column: 72, scope: !6058)
!6149 = !DILocation(line: 4639, column: 28, scope: !6058)
!6150 = !DILocation(line: 4639, column: 2, scope: !6058)
!6151 = !DILocation(line: 4639, column: 6, scope: !6058)
!6152 = !DILocation(line: 4639, column: 26, scope: !6058)
!6153 = !DILocation(line: 4642, column: 2, scope: !6058)
!6154 = !DILocation(line: 4642, column: 6, scope: !6058)
!6155 = !DILocation(line: 4642, column: 10, scope: !6058)
!6156 = !DILocation(line: 4642, column: 16, scope: !6058)
!6157 = !DILocation(line: 4642, column: 23, scope: !6058)
!6158 = !DILocation(line: 4642, column: 44, scope: !6058)
!6159 = !DILocation(line: 4642, column: 49, scope: !6058)
!6160 = !DILocation(line: 4643, column: 1, scope: !6058)
!6161 = distinct !DISubprogram(name: "sculpt_update_after_dynamic_topology_toggle", scope: !3, file: !3, line: 4646, type: !6162, scopeLine: 4647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !5279}
!6164 = !DILocalVariable(name: "C", arg: 1, scope: !6161, file: !3, line: 4646, type: !5279)
!6165 = !DILocation(line: 4646, column: 60, scope: !6161)
!6166 = !DILocalVariable(name: "scene", scope: !6161, file: !3, line: 4648, type: !6167)
!6167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6168 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !8, line: 1299, baseType: !281)
!6169 = !DILocation(line: 4648, column: 9, scope: !6161)
!6170 = !DILocation(line: 4648, column: 32, scope: !6161)
!6171 = !DILocation(line: 4648, column: 17, scope: !6161)
!6172 = !DILocalVariable(name: "ob", scope: !6161, file: !3, line: 4649, type: !3739)
!6173 = !DILocation(line: 4649, column: 10, scope: !6161)
!6174 = !DILocation(line: 4649, column: 38, scope: !6161)
!6175 = !DILocation(line: 4649, column: 15, scope: !6161)
!6176 = !DILocalVariable(name: "sd", scope: !6161, file: !3, line: 4650, type: !6)
!6177 = !DILocation(line: 4650, column: 10, scope: !6161)
!6178 = !DILocation(line: 4650, column: 15, scope: !6161)
!6179 = !DILocation(line: 4650, column: 22, scope: !6161)
!6180 = !DILocation(line: 4650, column: 36, scope: !6161)
!6181 = !DILocation(line: 4653, column: 34, scope: !6161)
!6182 = !DILocation(line: 4653, column: 41, scope: !6161)
!6183 = !DILocation(line: 4653, column: 45, scope: !6161)
!6184 = !DILocation(line: 4653, column: 2, scope: !6161)
!6185 = !DILocation(line: 4654, column: 24, scope: !6161)
!6186 = !DILocation(line: 4654, column: 48, scope: !6161)
!6187 = !DILocation(line: 4654, column: 2, scope: !6161)
!6188 = !DILocation(line: 4655, column: 1, scope: !6161)
!6189 = distinct !DISubprogram(name: "sculpt_dynamic_topology_enable", scope: !3, file: !3, line: 4657, type: !6162, scopeLine: 4658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6190 = !DILocalVariable(name: "C", arg: 1, scope: !6189, file: !3, line: 4657, type: !5279)
!6191 = !DILocation(line: 4657, column: 47, scope: !6189)
!6192 = !DILocalVariable(name: "scene", scope: !6189, file: !3, line: 4659, type: !6167)
!6193 = !DILocation(line: 4659, column: 9, scope: !6189)
!6194 = !DILocation(line: 4659, column: 32, scope: !6189)
!6195 = !DILocation(line: 4659, column: 17, scope: !6189)
!6196 = !DILocalVariable(name: "ob", scope: !6189, file: !3, line: 4660, type: !3739)
!6197 = !DILocation(line: 4660, column: 10, scope: !6189)
!6198 = !DILocation(line: 4660, column: 38, scope: !6189)
!6199 = !DILocation(line: 4660, column: 15, scope: !6189)
!6200 = !DILocalVariable(name: "ss", scope: !6189, file: !3, line: 4661, type: !5374)
!6201 = !DILocation(line: 4661, column: 17, scope: !6189)
!6202 = !DILocation(line: 4661, column: 22, scope: !6189)
!6203 = !DILocation(line: 4661, column: 26, scope: !6189)
!6204 = !DILocalVariable(name: "me", scope: !6189, file: !3, line: 4662, type: !5012)
!6205 = !DILocation(line: 4662, column: 8, scope: !6189)
!6206 = !DILocation(line: 4662, column: 13, scope: !6189)
!6207 = !DILocation(line: 4662, column: 17, scope: !6189)
!6208 = !DILocalVariable(name: "allocsize", scope: !6189, file: !3, line: 4663, type: !6209)
!6209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6210)
!6210 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMAllocTemplate", file: !6211, line: 80, baseType: !6212)
!6211 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_mesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMAllocTemplate", file: !6211, line: 78, size: 128, elements: !6213)
!6213 = !{!6214, !6215, !6216, !6217}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !6212, file: !6211, line: 79, baseType: !57, size: 32)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !6212, file: !6211, line: 79, baseType: !57, size: 32, offset: 32)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !6212, file: !6211, line: 79, baseType: !57, size: 32, offset: 64)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !6212, file: !6211, line: 79, baseType: !57, size: 32, offset: 96)
!6218 = !DILocation(line: 4663, column: 24, scope: !6189)
!6219 = !DILocation(line: 4663, column: 36, scope: !6189)
!6220 = !DILocation(line: 4665, column: 20, scope: !6189)
!6221 = !DILocation(line: 4665, column: 2, scope: !6189)
!6222 = !DILocation(line: 4667, column: 27, scope: !6189)
!6223 = !DILocation(line: 4667, column: 34, scope: !6189)
!6224 = !DILocation(line: 4667, column: 48, scope: !6189)
!6225 = !DILocation(line: 4667, column: 56, scope: !6189)
!6226 = !DILocation(line: 4667, column: 62, scope: !6189)
!6227 = !DILocation(line: 4667, column: 95, scope: !6189)
!6228 = !DILocation(line: 4667, column: 26, scope: !6189)
!6229 = !DILocation(line: 4667, column: 2, scope: !6189)
!6230 = !DILocation(line: 4667, column: 6, scope: !6189)
!6231 = !DILocation(line: 4667, column: 24, scope: !6189)
!6232 = !DILocation(line: 4670, column: 25, scope: !6189)
!6233 = !DILocation(line: 4670, column: 2, scope: !6189)
!6234 = !DILocation(line: 4673, column: 11, scope: !6189)
!6235 = !DILocation(line: 4673, column: 2, scope: !6189)
!6236 = !DILocation(line: 4673, column: 6, scope: !6189)
!6237 = !DILocation(line: 4673, column: 9, scope: !6189)
!6238 = !DILocation(line: 4675, column: 21, scope: !6189)
!6239 = !DILocation(line: 4675, column: 25, scope: !6189)
!6240 = !DILocation(line: 4675, column: 29, scope: !6189)
!6241 = !DILocation(line: 4675, column: 45, scope: !6189)
!6242 = !DILocation(line: 4675, column: 49, scope: !6189)
!6243 = !DILocation(line: 4675, column: 2, scope: !6189)
!6244 = !DILocation(line: 4676, column: 38, scope: !6189)
!6245 = !DILocation(line: 4676, column: 42, scope: !6189)
!6246 = !DILocation(line: 4676, column: 2, scope: !6189)
!6247 = !DILocation(line: 4677, column: 20, scope: !6189)
!6248 = !DILocation(line: 4677, column: 24, scope: !6189)
!6249 = !DILocation(line: 4677, column: 29, scope: !6189)
!6250 = !DILocation(line: 4677, column: 33, scope: !6189)
!6251 = !DILocation(line: 4677, column: 37, scope: !6189)
!6252 = !DILocation(line: 4677, column: 2, scope: !6189)
!6253 = !DILocation(line: 4678, column: 33, scope: !6189)
!6254 = !DILocation(line: 4678, column: 2, scope: !6189)
!6255 = !DILocation(line: 4680, column: 25, scope: !6189)
!6256 = !DILocation(line: 4680, column: 29, scope: !6189)
!6257 = !DILocation(line: 4680, column: 2, scope: !6189)
!6258 = !DILocation(line: 4683, column: 2, scope: !6189)
!6259 = !DILocation(line: 4683, column: 6, scope: !6189)
!6260 = !DILocation(line: 4683, column: 11, scope: !6189)
!6261 = !DILocation(line: 4686, column: 29, scope: !6189)
!6262 = !DILocation(line: 4686, column: 33, scope: !6189)
!6263 = !DILocation(line: 4686, column: 15, scope: !6189)
!6264 = !DILocation(line: 4686, column: 2, scope: !6189)
!6265 = !DILocation(line: 4686, column: 6, scope: !6189)
!6266 = !DILocation(line: 4686, column: 13, scope: !6189)
!6267 = !DILocation(line: 4689, column: 46, scope: !6189)
!6268 = !DILocation(line: 4689, column: 2, scope: !6189)
!6269 = !DILocation(line: 4690, column: 1, scope: !6189)
!6270 = distinct !DISubprogram(name: "sculpt_dynamic_topology_triangulate", scope: !3, file: !3, line: 4595, type: !6271, scopeLine: 4596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !2252}
!6273 = !DILocalVariable(name: "bm", arg: 1, scope: !6270, file: !3, line: 4595, type: !2252)
!6274 = !DILocation(line: 4595, column: 56, scope: !6270)
!6275 = !DILocation(line: 4597, column: 6, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 4597, column: 6)
!6277 = !DILocation(line: 4597, column: 10, scope: !6276)
!6278 = !DILocation(line: 4597, column: 21, scope: !6276)
!6279 = !DILocation(line: 4597, column: 25, scope: !6276)
!6280 = !DILocation(line: 4597, column: 33, scope: !6276)
!6281 = !DILocation(line: 4597, column: 18, scope: !6276)
!6282 = !DILocation(line: 4597, column: 6, scope: !6270)
!6283 = !DILocation(line: 4598, column: 23, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 4597, column: 38)
!6285 = !DILocation(line: 4598, column: 3, scope: !6284)
!6286 = !DILocation(line: 4599, column: 2, scope: !6284)
!6287 = !DILocation(line: 4600, column: 1, scope: !6270)
!6288 = distinct !DISubprogram(name: "sculpt_dynamic_topology_disable", scope: !3, file: !3, line: 4696, type: !6289, scopeLine: 4698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{null, !5279, !5893}
!6291 = !DILocalVariable(name: "C", arg: 1, scope: !6288, file: !3, line: 4696, type: !5279)
!6292 = !DILocation(line: 4696, column: 48, scope: !6288)
!6293 = !DILocalVariable(name: "unode", arg: 2, scope: !6288, file: !3, line: 4697, type: !5893)
!6294 = !DILocation(line: 4697, column: 54, scope: !6288)
!6295 = !DILocalVariable(name: "ob", scope: !6288, file: !3, line: 4699, type: !3739)
!6296 = !DILocation(line: 4699, column: 10, scope: !6288)
!6297 = !DILocation(line: 4699, column: 38, scope: !6288)
!6298 = !DILocation(line: 4699, column: 15, scope: !6288)
!6299 = !DILocalVariable(name: "ss", scope: !6288, file: !3, line: 4700, type: !5374)
!6300 = !DILocation(line: 4700, column: 17, scope: !6288)
!6301 = !DILocation(line: 4700, column: 22, scope: !6288)
!6302 = !DILocation(line: 4700, column: 26, scope: !6288)
!6303 = !DILocalVariable(name: "me", scope: !6288, file: !3, line: 4701, type: !5012)
!6304 = !DILocation(line: 4701, column: 8, scope: !6288)
!6305 = !DILocation(line: 4701, column: 13, scope: !6288)
!6306 = !DILocation(line: 4701, column: 17, scope: !6288)
!6307 = !DILocation(line: 4703, column: 20, scope: !6288)
!6308 = !DILocation(line: 4703, column: 2, scope: !6288)
!6309 = !DILocation(line: 4705, column: 6, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 4705, column: 6)
!6311 = !DILocation(line: 4705, column: 6, scope: !6288)
!6312 = !DILocation(line: 4707, column: 20, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 4705, column: 13)
!6314 = !DILocation(line: 4707, column: 24, scope: !6313)
!6315 = !DILocation(line: 4707, column: 31, scope: !6313)
!6316 = !DILocation(line: 4707, column: 35, scope: !6313)
!6317 = !DILocation(line: 4707, column: 3, scope: !6313)
!6318 = !DILocation(line: 4708, column: 20, scope: !6313)
!6319 = !DILocation(line: 4708, column: 24, scope: !6313)
!6320 = !DILocation(line: 4708, column: 31, scope: !6313)
!6321 = !DILocation(line: 4708, column: 35, scope: !6313)
!6322 = !DILocation(line: 4708, column: 3, scope: !6313)
!6323 = !DILocation(line: 4709, column: 20, scope: !6313)
!6324 = !DILocation(line: 4709, column: 24, scope: !6313)
!6325 = !DILocation(line: 4709, column: 31, scope: !6313)
!6326 = !DILocation(line: 4709, column: 35, scope: !6313)
!6327 = !DILocation(line: 4709, column: 3, scope: !6313)
!6328 = !DILocation(line: 4710, column: 20, scope: !6313)
!6329 = !DILocation(line: 4710, column: 24, scope: !6313)
!6330 = !DILocation(line: 4710, column: 31, scope: !6313)
!6331 = !DILocation(line: 4710, column: 35, scope: !6313)
!6332 = !DILocation(line: 4710, column: 3, scope: !6313)
!6333 = !DILocation(line: 4711, column: 20, scope: !6313)
!6334 = !DILocation(line: 4711, column: 24, scope: !6313)
!6335 = !DILocation(line: 4711, column: 31, scope: !6313)
!6336 = !DILocation(line: 4711, column: 35, scope: !6313)
!6337 = !DILocation(line: 4711, column: 3, scope: !6313)
!6338 = !DILocation(line: 4714, column: 17, scope: !6313)
!6339 = !DILocation(line: 4714, column: 24, scope: !6313)
!6340 = !DILocation(line: 4714, column: 3, scope: !6313)
!6341 = !DILocation(line: 4714, column: 7, scope: !6313)
!6342 = !DILocation(line: 4714, column: 15, scope: !6313)
!6343 = !DILocation(line: 4715, column: 17, scope: !6313)
!6344 = !DILocation(line: 4715, column: 24, scope: !6313)
!6345 = !DILocation(line: 4715, column: 3, scope: !6313)
!6346 = !DILocation(line: 4715, column: 7, scope: !6313)
!6347 = !DILocation(line: 4715, column: 15, scope: !6313)
!6348 = !DILocation(line: 4716, column: 17, scope: !6313)
!6349 = !DILocation(line: 4716, column: 24, scope: !6313)
!6350 = !DILocation(line: 4716, column: 3, scope: !6313)
!6351 = !DILocation(line: 4716, column: 7, scope: !6313)
!6352 = !DILocation(line: 4716, column: 15, scope: !6313)
!6353 = !DILocation(line: 4717, column: 17, scope: !6313)
!6354 = !DILocation(line: 4717, column: 24, scope: !6313)
!6355 = !DILocation(line: 4717, column: 3, scope: !6313)
!6356 = !DILocation(line: 4717, column: 7, scope: !6313)
!6357 = !DILocation(line: 4717, column: 15, scope: !6313)
!6358 = !DILocation(line: 4718, column: 3, scope: !6313)
!6359 = !DILocation(line: 4718, column: 7, scope: !6313)
!6360 = !DILocation(line: 4718, column: 15, scope: !6313)
!6361 = !DILocation(line: 4719, column: 20, scope: !6313)
!6362 = !DILocation(line: 4719, column: 27, scope: !6313)
!6363 = !DILocation(line: 4719, column: 44, scope: !6313)
!6364 = !DILocation(line: 4719, column: 48, scope: !6313)
!6365 = !DILocation(line: 4719, column: 55, scope: !6313)
!6366 = !DILocation(line: 4720, column: 33, scope: !6313)
!6367 = !DILocation(line: 4720, column: 40, scope: !6313)
!6368 = !DILocation(line: 4719, column: 3, scope: !6313)
!6369 = !DILocation(line: 4721, column: 20, scope: !6313)
!6370 = !DILocation(line: 4721, column: 27, scope: !6313)
!6371 = !DILocation(line: 4721, column: 44, scope: !6313)
!6372 = !DILocation(line: 4721, column: 48, scope: !6313)
!6373 = !DILocation(line: 4721, column: 55, scope: !6313)
!6374 = !DILocation(line: 4722, column: 33, scope: !6313)
!6375 = !DILocation(line: 4722, column: 40, scope: !6313)
!6376 = !DILocation(line: 4721, column: 3, scope: !6313)
!6377 = !DILocation(line: 4723, column: 20, scope: !6313)
!6378 = !DILocation(line: 4723, column: 27, scope: !6313)
!6379 = !DILocation(line: 4723, column: 44, scope: !6313)
!6380 = !DILocation(line: 4723, column: 48, scope: !6313)
!6381 = !DILocation(line: 4723, column: 55, scope: !6313)
!6382 = !DILocation(line: 4724, column: 33, scope: !6313)
!6383 = !DILocation(line: 4724, column: 40, scope: !6313)
!6384 = !DILocation(line: 4723, column: 3, scope: !6313)
!6385 = !DILocation(line: 4725, column: 20, scope: !6313)
!6386 = !DILocation(line: 4725, column: 27, scope: !6313)
!6387 = !DILocation(line: 4725, column: 44, scope: !6313)
!6388 = !DILocation(line: 4725, column: 48, scope: !6313)
!6389 = !DILocation(line: 4725, column: 55, scope: !6313)
!6390 = !DILocation(line: 4726, column: 33, scope: !6313)
!6391 = !DILocation(line: 4726, column: 40, scope: !6313)
!6392 = !DILocation(line: 4725, column: 3, scope: !6313)
!6393 = !DILocation(line: 4728, column: 39, scope: !6313)
!6394 = !DILocation(line: 4728, column: 3, scope: !6313)
!6395 = !DILocation(line: 4729, column: 2, scope: !6313)
!6396 = !DILocation(line: 4731, column: 30, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 4730, column: 7)
!6398 = !DILocation(line: 4731, column: 3, scope: !6397)
!6399 = !DILocation(line: 4735, column: 2, scope: !6288)
!6400 = !DILocation(line: 4735, column: 6, scope: !6288)
!6401 = !DILocation(line: 4735, column: 11, scope: !6288)
!6402 = !DILocation(line: 4738, column: 6, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 4738, column: 6)
!6404 = !DILocation(line: 4738, column: 10, scope: !6403)
!6405 = !DILocation(line: 4738, column: 6, scope: !6288)
!6406 = !DILocation(line: 4739, column: 16, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 4738, column: 14)
!6408 = !DILocation(line: 4739, column: 20, scope: !6407)
!6409 = !DILocation(line: 4739, column: 3, scope: !6407)
!6410 = !DILocation(line: 4740, column: 3, scope: !6407)
!6411 = !DILocation(line: 4740, column: 7, scope: !6407)
!6412 = !DILocation(line: 4740, column: 10, scope: !6407)
!6413 = !DILocation(line: 4741, column: 2, scope: !6407)
!6414 = !DILocation(line: 4742, column: 6, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 4742, column: 6)
!6416 = !DILocation(line: 4742, column: 10, scope: !6415)
!6417 = !DILocation(line: 4742, column: 6, scope: !6288)
!6418 = !DILocation(line: 4743, column: 15, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 4742, column: 18)
!6420 = !DILocation(line: 4743, column: 19, scope: !6419)
!6421 = !DILocation(line: 4743, column: 3, scope: !6419)
!6422 = !DILocation(line: 4744, column: 3, scope: !6419)
!6423 = !DILocation(line: 4744, column: 7, scope: !6419)
!6424 = !DILocation(line: 4744, column: 14, scope: !6419)
!6425 = !DILocation(line: 4745, column: 2, scope: !6419)
!6426 = !DILocation(line: 4748, column: 46, scope: !6288)
!6427 = !DILocation(line: 4748, column: 2, scope: !6288)
!6428 = !DILocation(line: 4749, column: 1, scope: !6288)
!6429 = distinct !DISubprogram(name: "ED_operatortypes_sculpt", scope: !3, file: !3, line: 5249, type: !6430, scopeLine: 5250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{null}
!6432 = !DILocation(line: 5251, column: 2, scope: !6429)
!6433 = !DILocation(line: 5252, column: 2, scope: !6429)
!6434 = !DILocation(line: 5253, column: 2, scope: !6429)
!6435 = !DILocation(line: 5254, column: 2, scope: !6429)
!6436 = !DILocation(line: 5255, column: 2, scope: !6429)
!6437 = !DILocation(line: 5256, column: 2, scope: !6429)
!6438 = !DILocation(line: 5257, column: 2, scope: !6429)
!6439 = !DILocation(line: 5258, column: 2, scope: !6429)
!6440 = !DILocation(line: 5259, column: 1, scope: !6429)
!6441 = distinct !DISubprogram(name: "SCULPT_OT_brush_stroke", scope: !3, file: !3, line: 4538, type: !6442, scopeLine: 4539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !6444}
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 64)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !644, line: 568, baseType: !6446)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !644, line: 508, size: 1536, elements: !6447)
!6447 = !{!6448, !6449, !6450, !6451, !6452, !6483, !6487, !6493, !6497, !6498, !6502, !6503, !6504, !6505, !6509, !6510, !6525, !6526, !6530, !6531}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6446, file: !644, line: 509, baseType: !486, size: 64)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6446, file: !644, line: 510, baseType: !486, size: 64, offset: 64)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !6446, file: !644, line: 511, baseType: !486, size: 64, offset: 128)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !6446, file: !644, line: 512, baseType: !486, size: 64, offset: 192)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !6446, file: !644, line: 518, baseType: !6453, size: 64, offset: 256)
!6453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6454, size: 64)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!57, !469, !6456}
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 64)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !474, line: 328, size: 1344, elements: !6458)
!6458 = !{!6459, !6460, !6461, !6462, !6463, !6465, !6466, !6467, !6468, !6478, !6479, !6480, !6481, !6482}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6457, file: !474, line: 329, baseType: !6456, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6457, file: !474, line: 329, baseType: !6456, size: 64, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6457, file: !474, line: 332, baseType: !72, size: 512, offset: 128)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !6457, file: !474, line: 333, baseType: !61, size: 64, offset: 640)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6457, file: !474, line: 336, baseType: !6464, size: 64, offset: 704)
!6464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 64)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !6457, file: !474, line: 337, baseType: !26, size: 64, offset: 768)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !6457, file: !474, line: 338, baseType: !26, size: 64, offset: 832)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6457, file: !474, line: 340, baseType: !475, size: 64, offset: 896)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !6457, file: !474, line: 341, baseType: !6469, size: 64, offset: 960)
!6469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !474, line: 106, size: 320, elements: !6471)
!6471 = !{!6472, !6473, !6474, !6475, !6476, !6477}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6470, file: !474, line: 107, baseType: !82, size: 128)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !6470, file: !474, line: 108, baseType: !57, size: 32, offset: 128)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !6470, file: !474, line: 109, baseType: !57, size: 32, offset: 160)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6470, file: !474, line: 110, baseType: !57, size: 32, offset: 192)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6470, file: !474, line: 110, baseType: !57, size: 32, offset: 224)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !6470, file: !474, line: 111, baseType: !642, size: 64, offset: 256)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !6457, file: !474, line: 343, baseType: !82, size: 128, offset: 1024)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !6457, file: !474, line: 344, baseType: !6456, size: 64, offset: 1152)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !6457, file: !474, line: 345, baseType: !472, size: 64, offset: 1216)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6457, file: !474, line: 346, baseType: !55, size: 16, offset: 1280)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6457, file: !474, line: 346, baseType: !1938, size: 48, offset: 1296)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !6446, file: !644, line: 524, baseType: !6484, size: 64, offset: 320)
!6484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6485, size: 64)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!2315, !469, !6456}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !6446, file: !644, line: 530, baseType: !6488, size: 64, offset: 384)
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = !DISubroutineType(types: !6490)
!6490 = !{!57, !469, !6456, !6491}
!6491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6492, size: 64)
!6492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !6446, file: !644, line: 531, baseType: !6494, size: 64, offset: 448)
!6494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6495, size: 64)
!6495 = !DISubroutineType(types: !6496)
!6496 = !{null, !469, !6456}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !6446, file: !644, line: 532, baseType: !6488, size: 64, offset: 512)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6446, file: !644, line: 536, baseType: !6499, size: 64, offset: 576)
!6499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6500, size: 64)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!57, !469}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !6446, file: !644, line: 539, baseType: !6494, size: 64, offset: 640)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !6446, file: !644, line: 542, baseType: !483, size: 64, offset: 704)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !6446, file: !644, line: 545, baseType: !66, size: 64, offset: 768)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !6446, file: !644, line: 549, baseType: !6506, size: 64, offset: 832)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !471, line: 333, baseType: !6508)
!6508 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !471, line: 39, flags: DIFlagFwdDecl)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !6446, file: !644, line: 552, baseType: !82, size: 128, offset: 896)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !6446, file: !644, line: 555, baseType: !6511, size: 64, offset: 1024)
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 64)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !474, line: 281, size: 1088, elements: !6513)
!6513 = !{!6514, !6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522, !6523, !6524}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6512, file: !474, line: 282, baseType: !6511, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6512, file: !474, line: 282, baseType: !6511, size: 64, offset: 64)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !6512, file: !474, line: 284, baseType: !82, size: 128, offset: 128)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !6512, file: !474, line: 285, baseType: !82, size: 128, offset: 256)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6512, file: !474, line: 287, baseType: !72, size: 512, offset: 384)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !6512, file: !474, line: 288, baseType: !55, size: 16, offset: 896)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !6512, file: !474, line: 289, baseType: !55, size: 16, offset: 912)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6512, file: !474, line: 291, baseType: !55, size: 16, offset: 928)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !6512, file: !474, line: 292, baseType: !55, size: 16, offset: 944)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6512, file: !474, line: 295, baseType: !6499, size: 64, offset: 960)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !6512, file: !474, line: 296, baseType: !26, size: 64, offset: 1024)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !6446, file: !644, line: 559, baseType: !26, size: 64, offset: 1088)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !6446, file: !644, line: 560, baseType: !6527, size: 64, offset: 1152)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!57, !469, !6464}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !6446, file: !644, line: 563, baseType: !514, size: 256, offset: 1216)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6446, file: !644, line: 566, baseType: !55, size: 16, offset: 1472)
!6532 = !DILocalVariable(name: "ot", arg: 1, scope: !6441, file: !3, line: 4538, type: !6444)
!6533 = !DILocation(line: 4538, column: 52, scope: !6441)
!6534 = !DILocation(line: 4541, column: 2, scope: !6441)
!6535 = !DILocation(line: 4541, column: 6, scope: !6441)
!6536 = !DILocation(line: 4541, column: 11, scope: !6441)
!6537 = !DILocation(line: 4542, column: 2, scope: !6441)
!6538 = !DILocation(line: 4542, column: 6, scope: !6441)
!6539 = !DILocation(line: 4542, column: 13, scope: !6441)
!6540 = !DILocation(line: 4543, column: 2, scope: !6441)
!6541 = !DILocation(line: 4543, column: 6, scope: !6441)
!6542 = !DILocation(line: 4543, column: 18, scope: !6441)
!6543 = !DILocation(line: 4546, column: 2, scope: !6441)
!6544 = !DILocation(line: 4546, column: 6, scope: !6441)
!6545 = !DILocation(line: 4546, column: 13, scope: !6441)
!6546 = !DILocation(line: 4547, column: 2, scope: !6441)
!6547 = !DILocation(line: 4547, column: 6, scope: !6441)
!6548 = !DILocation(line: 4547, column: 12, scope: !6441)
!6549 = !DILocation(line: 4548, column: 2, scope: !6441)
!6550 = !DILocation(line: 4548, column: 6, scope: !6441)
!6551 = !DILocation(line: 4548, column: 11, scope: !6441)
!6552 = !DILocation(line: 4549, column: 2, scope: !6441)
!6553 = !DILocation(line: 4549, column: 6, scope: !6441)
!6554 = !DILocation(line: 4549, column: 11, scope: !6441)
!6555 = !DILocation(line: 4550, column: 2, scope: !6441)
!6556 = !DILocation(line: 4550, column: 6, scope: !6441)
!6557 = !DILocation(line: 4550, column: 13, scope: !6441)
!6558 = !DILocation(line: 4553, column: 2, scope: !6441)
!6559 = !DILocation(line: 4553, column: 6, scope: !6441)
!6560 = !DILocation(line: 4553, column: 11, scope: !6441)
!6561 = !DILocation(line: 4557, column: 35, scope: !6441)
!6562 = !DILocation(line: 4557, column: 2, scope: !6441)
!6563 = !DILocation(line: 4559, column: 18, scope: !6441)
!6564 = !DILocation(line: 4559, column: 22, scope: !6441)
!6565 = !DILocation(line: 4559, column: 2, scope: !6441)
!6566 = !DILocation(line: 4562, column: 1, scope: !6441)
!6567 = distinct !DISubprogram(name: "SCULPT_OT_sculptmode_toggle", scope: !3, file: !3, line: 5066, type: !6442, scopeLine: 5067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6568 = !DILocalVariable(name: "ot", arg: 1, scope: !6567, file: !3, line: 5066, type: !6444)
!6569 = !DILocation(line: 5066, column: 57, scope: !6567)
!6570 = !DILocation(line: 5069, column: 2, scope: !6567)
!6571 = !DILocation(line: 5069, column: 6, scope: !6567)
!6572 = !DILocation(line: 5069, column: 11, scope: !6567)
!6573 = !DILocation(line: 5070, column: 2, scope: !6567)
!6574 = !DILocation(line: 5070, column: 6, scope: !6567)
!6575 = !DILocation(line: 5070, column: 13, scope: !6567)
!6576 = !DILocation(line: 5071, column: 2, scope: !6567)
!6577 = !DILocation(line: 5071, column: 6, scope: !6567)
!6578 = !DILocation(line: 5071, column: 18, scope: !6567)
!6579 = !DILocation(line: 5074, column: 2, scope: !6567)
!6580 = !DILocation(line: 5074, column: 6, scope: !6567)
!6581 = !DILocation(line: 5074, column: 11, scope: !6567)
!6582 = !DILocation(line: 5075, column: 2, scope: !6567)
!6583 = !DILocation(line: 5075, column: 6, scope: !6567)
!6584 = !DILocation(line: 5075, column: 11, scope: !6567)
!6585 = !DILocation(line: 5077, column: 2, scope: !6567)
!6586 = !DILocation(line: 5077, column: 6, scope: !6567)
!6587 = !DILocation(line: 5077, column: 11, scope: !6567)
!6588 = !DILocation(line: 5078, column: 1, scope: !6567)
!6589 = distinct !DISubprogram(name: "SCULPT_OT_set_persistent_base", scope: !3, file: !3, line: 4579, type: !6442, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6590 = !DILocalVariable(name: "ot", arg: 1, scope: !6589, file: !3, line: 4579, type: !6444)
!6591 = !DILocation(line: 4579, column: 59, scope: !6589)
!6592 = !DILocation(line: 4582, column: 2, scope: !6589)
!6593 = !DILocation(line: 4582, column: 6, scope: !6589)
!6594 = !DILocation(line: 4582, column: 11, scope: !6589)
!6595 = !DILocation(line: 4583, column: 2, scope: !6589)
!6596 = !DILocation(line: 4583, column: 6, scope: !6589)
!6597 = !DILocation(line: 4583, column: 13, scope: !6589)
!6598 = !DILocation(line: 4584, column: 2, scope: !6589)
!6599 = !DILocation(line: 4584, column: 6, scope: !6589)
!6600 = !DILocation(line: 4584, column: 18, scope: !6589)
!6601 = !DILocation(line: 4587, column: 2, scope: !6589)
!6602 = !DILocation(line: 4587, column: 6, scope: !6589)
!6603 = !DILocation(line: 4587, column: 11, scope: !6589)
!6604 = !DILocation(line: 4588, column: 2, scope: !6589)
!6605 = !DILocation(line: 4588, column: 6, scope: !6589)
!6606 = !DILocation(line: 4588, column: 11, scope: !6589)
!6607 = !DILocation(line: 4590, column: 2, scope: !6589)
!6608 = !DILocation(line: 4590, column: 6, scope: !6589)
!6609 = !DILocation(line: 4590, column: 11, scope: !6589)
!6610 = !DILocation(line: 4591, column: 1, scope: !6589)
!6611 = distinct !DISubprogram(name: "SCULPT_OT_dynamic_topology_toggle", scope: !3, file: !3, line: 4850, type: !6442, scopeLine: 4851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6612 = !DILocalVariable(name: "ot", arg: 1, scope: !6611, file: !3, line: 4850, type: !6444)
!6613 = !DILocation(line: 4850, column: 63, scope: !6611)
!6614 = !DILocation(line: 4853, column: 2, scope: !6611)
!6615 = !DILocation(line: 4853, column: 6, scope: !6611)
!6616 = !DILocation(line: 4853, column: 11, scope: !6611)
!6617 = !DILocation(line: 4854, column: 2, scope: !6611)
!6618 = !DILocation(line: 4854, column: 6, scope: !6611)
!6619 = !DILocation(line: 4854, column: 13, scope: !6611)
!6620 = !DILocation(line: 4855, column: 2, scope: !6611)
!6621 = !DILocation(line: 4855, column: 6, scope: !6611)
!6622 = !DILocation(line: 4855, column: 18, scope: !6611)
!6623 = !DILocation(line: 4858, column: 2, scope: !6611)
!6624 = !DILocation(line: 4858, column: 6, scope: !6611)
!6625 = !DILocation(line: 4858, column: 13, scope: !6611)
!6626 = !DILocation(line: 4859, column: 2, scope: !6611)
!6627 = !DILocation(line: 4859, column: 6, scope: !6611)
!6628 = !DILocation(line: 4859, column: 11, scope: !6611)
!6629 = !DILocation(line: 4860, column: 2, scope: !6611)
!6630 = !DILocation(line: 4860, column: 6, scope: !6611)
!6631 = !DILocation(line: 4860, column: 11, scope: !6611)
!6632 = !DILocation(line: 4862, column: 2, scope: !6611)
!6633 = !DILocation(line: 4862, column: 6, scope: !6611)
!6634 = !DILocation(line: 4862, column: 11, scope: !6611)
!6635 = !DILocation(line: 4863, column: 1, scope: !6611)
!6636 = distinct !DISubprogram(name: "SCULPT_OT_optimize", scope: !3, file: !3, line: 4888, type: !6442, scopeLine: 4889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6637 = !DILocalVariable(name: "ot", arg: 1, scope: !6636, file: !3, line: 4888, type: !6444)
!6638 = !DILocation(line: 4888, column: 48, scope: !6636)
!6639 = !DILocation(line: 4891, column: 2, scope: !6636)
!6640 = !DILocation(line: 4891, column: 6, scope: !6636)
!6641 = !DILocation(line: 4891, column: 11, scope: !6636)
!6642 = !DILocation(line: 4892, column: 2, scope: !6636)
!6643 = !DILocation(line: 4892, column: 6, scope: !6636)
!6644 = !DILocation(line: 4892, column: 13, scope: !6636)
!6645 = !DILocation(line: 4893, column: 2, scope: !6636)
!6646 = !DILocation(line: 4893, column: 6, scope: !6636)
!6647 = !DILocation(line: 4893, column: 18, scope: !6636)
!6648 = !DILocation(line: 4896, column: 2, scope: !6636)
!6649 = !DILocation(line: 4896, column: 6, scope: !6636)
!6650 = !DILocation(line: 4896, column: 11, scope: !6636)
!6651 = !DILocation(line: 4897, column: 2, scope: !6636)
!6652 = !DILocation(line: 4897, column: 6, scope: !6636)
!6653 = !DILocation(line: 4897, column: 11, scope: !6636)
!6654 = !DILocation(line: 4899, column: 2, scope: !6636)
!6655 = !DILocation(line: 4899, column: 6, scope: !6636)
!6656 = !DILocation(line: 4899, column: 11, scope: !6636)
!6657 = !DILocation(line: 4900, column: 1, scope: !6636)
!6658 = distinct !DISubprogram(name: "SCULPT_OT_symmetrize", scope: !3, file: !3, line: 4935, type: !6442, scopeLine: 4936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6659 = !DILocalVariable(name: "ot", arg: 1, scope: !6658, file: !3, line: 4935, type: !6444)
!6660 = !DILocation(line: 4935, column: 50, scope: !6658)
!6661 = !DILocation(line: 4938, column: 2, scope: !6658)
!6662 = !DILocation(line: 4938, column: 6, scope: !6658)
!6663 = !DILocation(line: 4938, column: 11, scope: !6658)
!6664 = !DILocation(line: 4939, column: 2, scope: !6658)
!6665 = !DILocation(line: 4939, column: 6, scope: !6658)
!6666 = !DILocation(line: 4939, column: 13, scope: !6658)
!6667 = !DILocation(line: 4940, column: 2, scope: !6658)
!6668 = !DILocation(line: 4940, column: 6, scope: !6658)
!6669 = !DILocation(line: 4940, column: 18, scope: !6658)
!6670 = !DILocation(line: 4943, column: 2, scope: !6658)
!6671 = !DILocation(line: 4943, column: 6, scope: !6658)
!6672 = !DILocation(line: 4943, column: 11, scope: !6658)
!6673 = !DILocation(line: 4944, column: 2, scope: !6658)
!6674 = !DILocation(line: 4944, column: 6, scope: !6658)
!6675 = !DILocation(line: 4944, column: 11, scope: !6658)
!6676 = !DILocation(line: 4945, column: 1, scope: !6658)
!6677 = distinct !DISubprogram(name: "SCULPT_OT_detail_flood_fill", scope: !3, file: !3, line: 5135, type: !6442, scopeLine: 5136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6678 = !DILocalVariable(name: "ot", arg: 1, scope: !6677, file: !3, line: 5135, type: !6444)
!6679 = !DILocation(line: 5135, column: 57, scope: !6677)
!6680 = !DILocation(line: 5138, column: 2, scope: !6677)
!6681 = !DILocation(line: 5138, column: 6, scope: !6677)
!6682 = !DILocation(line: 5138, column: 11, scope: !6677)
!6683 = !DILocation(line: 5139, column: 2, scope: !6677)
!6684 = !DILocation(line: 5139, column: 6, scope: !6677)
!6685 = !DILocation(line: 5139, column: 13, scope: !6677)
!6686 = !DILocation(line: 5140, column: 2, scope: !6677)
!6687 = !DILocation(line: 5140, column: 6, scope: !6677)
!6688 = !DILocation(line: 5140, column: 18, scope: !6677)
!6689 = !DILocation(line: 5143, column: 2, scope: !6677)
!6690 = !DILocation(line: 5143, column: 6, scope: !6677)
!6691 = !DILocation(line: 5143, column: 11, scope: !6677)
!6692 = !DILocation(line: 5144, column: 2, scope: !6677)
!6693 = !DILocation(line: 5144, column: 6, scope: !6677)
!6694 = !DILocation(line: 5144, column: 11, scope: !6677)
!6695 = !DILocation(line: 5146, column: 2, scope: !6677)
!6696 = !DILocation(line: 5146, column: 6, scope: !6677)
!6697 = !DILocation(line: 5146, column: 11, scope: !6677)
!6698 = !DILocation(line: 5147, column: 1, scope: !6677)
!6699 = distinct !DISubprogram(name: "SCULPT_OT_sample_detail_size", scope: !3, file: !3, line: 5231, type: !6442, scopeLine: 5232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6700 = !DILocalVariable(name: "ot", arg: 1, scope: !6699, file: !3, line: 5231, type: !6444)
!6701 = !DILocation(line: 5231, column: 58, scope: !6699)
!6702 = !DILocation(line: 5234, column: 2, scope: !6699)
!6703 = !DILocation(line: 5234, column: 6, scope: !6699)
!6704 = !DILocation(line: 5234, column: 11, scope: !6699)
!6705 = !DILocation(line: 5235, column: 2, scope: !6699)
!6706 = !DILocation(line: 5235, column: 6, scope: !6699)
!6707 = !DILocation(line: 5235, column: 13, scope: !6699)
!6708 = !DILocation(line: 5236, column: 2, scope: !6699)
!6709 = !DILocation(line: 5236, column: 6, scope: !6699)
!6710 = !DILocation(line: 5236, column: 18, scope: !6699)
!6711 = !DILocation(line: 5239, column: 2, scope: !6699)
!6712 = !DILocation(line: 5239, column: 6, scope: !6699)
!6713 = !DILocation(line: 5239, column: 13, scope: !6699)
!6714 = !DILocation(line: 5240, column: 2, scope: !6699)
!6715 = !DILocation(line: 5240, column: 6, scope: !6699)
!6716 = !DILocation(line: 5240, column: 11, scope: !6699)
!6717 = !DILocation(line: 5241, column: 2, scope: !6699)
!6718 = !DILocation(line: 5241, column: 6, scope: !6699)
!6719 = !DILocation(line: 5241, column: 12, scope: !6699)
!6720 = !DILocation(line: 5242, column: 2, scope: !6699)
!6721 = !DILocation(line: 5242, column: 6, scope: !6699)
!6722 = !DILocation(line: 5242, column: 11, scope: !6699)
!6723 = !DILocation(line: 5244, column: 2, scope: !6699)
!6724 = !DILocation(line: 5244, column: 6, scope: !6699)
!6725 = !DILocation(line: 5244, column: 11, scope: !6699)
!6726 = !DILocation(line: 5246, column: 20, scope: !6699)
!6727 = !DILocation(line: 5246, column: 24, scope: !6699)
!6728 = !DILocation(line: 5246, column: 2, scope: !6699)
!6729 = !DILocation(line: 5247, column: 1, scope: !6699)
!6730 = distinct !DISubprogram(name: "sculpt_any_smooth_mode", scope: !3, file: !3, line: 4039, type: !6731, scopeLine: 4042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!2315, !6733, !5642, !57}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2750)
!6735 = !DILocalVariable(name: "brush", arg: 1, scope: !6730, file: !3, line: 4039, type: !6733)
!6736 = !DILocation(line: 4039, column: 49, scope: !6730)
!6737 = !DILocalVariable(name: "cache", arg: 2, scope: !6730, file: !3, line: 4040, type: !5642)
!6738 = !DILocation(line: 4040, column: 49, scope: !6730)
!6739 = !DILocalVariable(name: "stroke_mode", arg: 3, scope: !6730, file: !3, line: 4041, type: !57)
!6740 = !DILocation(line: 4041, column: 40, scope: !6730)
!6741 = !DILocation(line: 4043, column: 11, scope: !6730)
!6742 = !DILocation(line: 4043, column: 23, scope: !6730)
!6743 = !DILocation(line: 4043, column: 47, scope: !6730)
!6744 = !DILocation(line: 4044, column: 11, scope: !6730)
!6745 = !DILocation(line: 4044, column: 17, scope: !6730)
!6746 = !DILocation(line: 4044, column: 20, scope: !6730)
!6747 = !DILocation(line: 4044, column: 27, scope: !6730)
!6748 = !DILocation(line: 4044, column: 39, scope: !6730)
!6749 = !DILocation(line: 4045, column: 11, scope: !6730)
!6750 = !DILocation(line: 4045, column: 18, scope: !6730)
!6751 = !DILocation(line: 4045, column: 30, scope: !6730)
!6752 = !DILocation(line: 4045, column: 53, scope: !6730)
!6753 = !DILocation(line: 4046, column: 11, scope: !6730)
!6754 = !DILocation(line: 4046, column: 18, scope: !6730)
!6755 = !DILocation(line: 4046, column: 36, scope: !6730)
!6756 = !DILocation(line: 4046, column: 41, scope: !6730)
!6757 = !DILocation(line: 4047, column: 12, scope: !6730)
!6758 = !DILocation(line: 4047, column: 19, scope: !6730)
!6759 = !DILocation(line: 4047, column: 31, scope: !6730)
!6760 = !DILocation(line: 4047, column: 52, scope: !6730)
!6761 = !DILocation(line: 4048, column: 12, scope: !6730)
!6762 = !DILocation(line: 4048, column: 19, scope: !6730)
!6763 = !DILocation(line: 4048, column: 29, scope: !6730)
!6764 = !DILocation(line: 0, scope: !6730)
!6765 = !DILocation(line: 4043, column: 9, scope: !6730)
!6766 = !DILocation(line: 4043, column: 2, scope: !6730)
!6767 = distinct !DISubprogram(name: "normalize_v3", scope: !5234, file: !5234, line: 830, type: !6768, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!153, !359}
!6770 = !DILocalVariable(name: "n", arg: 1, scope: !6767, file: !5234, line: 830, type: !359)
!6771 = !DILocation(line: 830, column: 34, scope: !6767)
!6772 = !DILocation(line: 832, column: 25, scope: !6767)
!6773 = !DILocation(line: 832, column: 28, scope: !6767)
!6774 = !DILocation(line: 832, column: 9, scope: !6767)
!6775 = !DILocation(line: 832, column: 2, scope: !6767)
!6776 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !5234, file: !5234, line: 788, type: !6777, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!153, !359, !3251}
!6779 = !DILocalVariable(name: "r", arg: 1, scope: !6776, file: !5234, line: 788, type: !359)
!6780 = !DILocation(line: 788, column: 37, scope: !6776)
!6781 = !DILocalVariable(name: "a", arg: 2, scope: !6776, file: !5234, line: 788, type: !3251)
!6782 = !DILocation(line: 788, column: 55, scope: !6776)
!6783 = !DILocalVariable(name: "d", scope: !6776, file: !5234, line: 790, type: !153)
!6784 = !DILocation(line: 790, column: 8, scope: !6776)
!6785 = !DILocation(line: 790, column: 21, scope: !6776)
!6786 = !DILocation(line: 790, column: 24, scope: !6776)
!6787 = !DILocation(line: 790, column: 12, scope: !6776)
!6788 = !DILocation(line: 794, column: 6, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6776, file: !5234, line: 794, column: 6)
!6790 = !DILocation(line: 794, column: 8, scope: !6789)
!6791 = !DILocation(line: 794, column: 6, scope: !6776)
!6792 = !DILocation(line: 795, column: 13, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !5234, line: 794, column: 20)
!6794 = !DILocation(line: 795, column: 7, scope: !6793)
!6795 = !DILocation(line: 795, column: 5, scope: !6793)
!6796 = !DILocation(line: 796, column: 15, scope: !6793)
!6797 = !DILocation(line: 796, column: 18, scope: !6793)
!6798 = !DILocation(line: 796, column: 28, scope: !6793)
!6799 = !DILocation(line: 796, column: 26, scope: !6793)
!6800 = !DILocation(line: 796, column: 3, scope: !6793)
!6801 = !DILocation(line: 797, column: 2, scope: !6793)
!6802 = !DILocation(line: 799, column: 11, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6789, file: !5234, line: 798, column: 7)
!6804 = !DILocation(line: 799, column: 3, scope: !6803)
!6805 = !DILocation(line: 800, column: 5, scope: !6803)
!6806 = !DILocation(line: 803, column: 9, scope: !6776)
!6807 = !DILocation(line: 803, column: 2, scope: !6776)
!6808 = distinct !DISubprogram(name: "dot_v3v3", scope: !5234, file: !5234, line: 619, type: !6809, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{!153, !3251, !3251}
!6811 = !DILocalVariable(name: "a", arg: 1, scope: !6808, file: !5234, line: 619, type: !3251)
!6812 = !DILocation(line: 619, column: 36, scope: !6808)
!6813 = !DILocalVariable(name: "b", arg: 2, scope: !6808, file: !5234, line: 619, type: !3251)
!6814 = !DILocation(line: 619, column: 54, scope: !6808)
!6815 = !DILocation(line: 621, column: 9, scope: !6808)
!6816 = !DILocation(line: 621, column: 16, scope: !6808)
!6817 = !DILocation(line: 621, column: 14, scope: !6808)
!6818 = !DILocation(line: 621, column: 23, scope: !6808)
!6819 = !DILocation(line: 621, column: 30, scope: !6808)
!6820 = !DILocation(line: 621, column: 28, scope: !6808)
!6821 = !DILocation(line: 621, column: 21, scope: !6808)
!6822 = !DILocation(line: 621, column: 37, scope: !6808)
!6823 = !DILocation(line: 621, column: 44, scope: !6808)
!6824 = !DILocation(line: 621, column: 42, scope: !6808)
!6825 = !DILocation(line: 621, column: 35, scope: !6808)
!6826 = !DILocation(line: 621, column: 2, scope: !6808)
!6827 = distinct !DISubprogram(name: "zero_v3", scope: !5234, file: !5234, line: 43, type: !6828, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !359}
!6830 = !DILocalVariable(name: "r", arg: 1, scope: !6827, file: !5234, line: 43, type: !359)
!6831 = !DILocation(line: 43, column: 28, scope: !6827)
!6832 = !DILocation(line: 45, column: 2, scope: !6827)
!6833 = !DILocation(line: 45, column: 7, scope: !6827)
!6834 = !DILocation(line: 46, column: 2, scope: !6827)
!6835 = !DILocation(line: 46, column: 7, scope: !6827)
!6836 = !DILocation(line: 47, column: 2, scope: !6827)
!6837 = !DILocation(line: 47, column: 7, scope: !6827)
!6838 = !DILocation(line: 48, column: 1, scope: !6827)
!6839 = distinct !DISubprogram(name: "sculpt_brush_stroke_invoke", scope: !3, file: !3, line: 4467, type: !6840, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{!57, !5279, !6842, !6844}
!6842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 64)
!6843 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !474, line: 348, baseType: !6457)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6845, size: 64)
!6845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6846)
!6846 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !644, line: 460, baseType: !701)
!6847 = !DILocalVariable(name: "C", arg: 1, scope: !6839, file: !3, line: 4467, type: !5279)
!6848 = !DILocation(line: 4467, column: 49, scope: !6839)
!6849 = !DILocalVariable(name: "op", arg: 2, scope: !6839, file: !3, line: 4467, type: !6842)
!6850 = !DILocation(line: 4467, column: 64, scope: !6839)
!6851 = !DILocalVariable(name: "event", arg: 3, scope: !6839, file: !3, line: 4467, type: !6844)
!6852 = !DILocation(line: 4467, column: 83, scope: !6839)
!6853 = !DILocalVariable(name: "stroke", scope: !6839, file: !3, line: 4469, type: !6854)
!6854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6855, size: 64)
!6855 = !DICompositeType(tag: DW_TAG_structure_type, name: "PaintStroke", file: !3848, line: 51, flags: DIFlagFwdDecl)
!6856 = !DILocation(line: 4469, column: 22, scope: !6839)
!6857 = !DILocalVariable(name: "ignore_background_click", scope: !6839, file: !3, line: 4470, type: !57)
!6858 = !DILocation(line: 4470, column: 6, scope: !6839)
!6859 = !DILocalVariable(name: "retval", scope: !6839, file: !3, line: 4471, type: !57)
!6860 = !DILocation(line: 4471, column: 6, scope: !6839)
!6861 = !DILocation(line: 4473, column: 32, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 4473, column: 6)
!6863 = !DILocation(line: 4473, column: 35, scope: !6862)
!6864 = !DILocation(line: 4473, column: 7, scope: !6862)
!6865 = !DILocation(line: 4473, column: 6, scope: !6839)
!6866 = !DILocation(line: 4474, column: 3, scope: !6862)
!6867 = !DILocation(line: 4476, column: 28, scope: !6839)
!6868 = !DILocation(line: 4476, column: 31, scope: !6839)
!6869 = !DILocation(line: 4479, column: 48, scope: !6839)
!6870 = !DILocation(line: 4479, column: 55, scope: !6839)
!6871 = !DILocation(line: 4476, column: 11, scope: !6839)
!6872 = !DILocation(line: 4476, column: 9, scope: !6839)
!6873 = !DILocation(line: 4481, column: 19, scope: !6839)
!6874 = !DILocation(line: 4481, column: 2, scope: !6839)
!6875 = !DILocation(line: 4481, column: 6, scope: !6839)
!6876 = !DILocation(line: 4481, column: 17, scope: !6839)
!6877 = !DILocation(line: 4484, column: 44, scope: !6839)
!6878 = !DILocation(line: 4484, column: 48, scope: !6839)
!6879 = !DILocation(line: 4484, column: 28, scope: !6839)
!6880 = !DILocation(line: 4484, column: 26, scope: !6839)
!6881 = !DILocation(line: 4486, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 4486, column: 6)
!6883 = !DILocation(line: 4486, column: 30, scope: !6882)
!6884 = !DILocation(line: 4486, column: 44, scope: !6882)
!6885 = !DILocation(line: 4486, column: 47, scope: !6882)
!6886 = !DILocation(line: 4486, column: 51, scope: !6882)
!6887 = !DILocation(line: 4486, column: 58, scope: !6882)
!6888 = !DILocation(line: 4486, column: 61, scope: !6882)
!6889 = !DILocation(line: 4486, column: 68, scope: !6882)
!6890 = !DILocation(line: 4486, column: 34, scope: !6882)
!6891 = !DILocation(line: 4486, column: 6, scope: !6839)
!6892 = !DILocation(line: 4487, column: 26, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 4486, column: 72)
!6894 = !DILocation(line: 4487, column: 3, scope: !6893)
!6895 = !DILocation(line: 4488, column: 3, scope: !6893)
!6896 = !DILocation(line: 4491, column: 16, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 4491, column: 6)
!6898 = !DILocation(line: 4491, column: 20, scope: !6897)
!6899 = !DILocation(line: 4491, column: 26, scope: !6897)
!6900 = !DILocation(line: 4491, column: 32, scope: !6897)
!6901 = !DILocation(line: 4491, column: 35, scope: !6897)
!6902 = !DILocation(line: 4491, column: 39, scope: !6897)
!6903 = !DILocation(line: 4491, column: 14, scope: !6897)
!6904 = !DILocation(line: 4491, column: 47, scope: !6897)
!6905 = !DILocation(line: 4491, column: 6, scope: !6839)
!6906 = !DILocation(line: 4492, column: 26, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4491, column: 69)
!6908 = !DILocation(line: 4492, column: 3, scope: !6907)
!6909 = !DILocation(line: 4493, column: 3, scope: !6907)
!6910 = !DILocation(line: 4496, column: 29, scope: !6839)
!6911 = !DILocation(line: 4496, column: 32, scope: !6839)
!6912 = !DILocation(line: 4496, column: 2, scope: !6839)
!6913 = !DILocation(line: 4498, column: 2, scope: !6839)
!6914 = !DILocation(line: 4501, column: 2, scope: !6839)
!6915 = !DILocation(line: 4502, column: 1, scope: !6839)
!6916 = distinct !DISubprogram(name: "sculpt_brush_stroke_exec", scope: !3, file: !3, line: 4504, type: !6917, scopeLine: 4505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!57, !5279, !6842}
!6919 = !DILocalVariable(name: "C", arg: 1, scope: !6916, file: !3, line: 4504, type: !5279)
!6920 = !DILocation(line: 4504, column: 47, scope: !6916)
!6921 = !DILocalVariable(name: "op", arg: 2, scope: !6916, file: !3, line: 4504, type: !6842)
!6922 = !DILocation(line: 4504, column: 62, scope: !6916)
!6923 = !DILocation(line: 4506, column: 32, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 4506, column: 6)
!6925 = !DILocation(line: 4506, column: 35, scope: !6924)
!6926 = !DILocation(line: 4506, column: 7, scope: !6924)
!6927 = !DILocation(line: 4506, column: 6, scope: !6916)
!6928 = !DILocation(line: 4507, column: 3, scope: !6924)
!6929 = !DILocation(line: 4509, column: 36, scope: !6916)
!6930 = !DILocation(line: 4509, column: 39, scope: !6916)
!6931 = !DILocation(line: 4509, column: 19, scope: !6916)
!6932 = !DILocation(line: 4509, column: 2, scope: !6916)
!6933 = !DILocation(line: 4509, column: 6, scope: !6916)
!6934 = !DILocation(line: 4509, column: 17, scope: !6916)
!6935 = !DILocation(line: 4513, column: 20, scope: !6916)
!6936 = !DILocation(line: 4513, column: 23, scope: !6916)
!6937 = !DILocation(line: 4513, column: 2, scope: !6916)
!6938 = !DILocation(line: 4515, column: 2, scope: !6916)
!6939 = !DILocation(line: 4516, column: 1, scope: !6916)
!6940 = distinct !DISubprogram(name: "sculpt_brush_stroke_cancel", scope: !3, file: !3, line: 4518, type: !6941, scopeLine: 4519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{null, !5279, !6842}
!6943 = !DILocalVariable(name: "C", arg: 1, scope: !6940, file: !3, line: 4518, type: !5279)
!6944 = !DILocation(line: 4518, column: 50, scope: !6940)
!6945 = !DILocalVariable(name: "op", arg: 2, scope: !6940, file: !3, line: 4518, type: !6842)
!6946 = !DILocation(line: 4518, column: 65, scope: !6940)
!6947 = !DILocalVariable(name: "ob", scope: !6940, file: !3, line: 4520, type: !3739)
!6948 = !DILocation(line: 4520, column: 10, scope: !6940)
!6949 = !DILocation(line: 4520, column: 38, scope: !6940)
!6950 = !DILocation(line: 4520, column: 15, scope: !6940)
!6951 = !DILocalVariable(name: "ss", scope: !6940, file: !3, line: 4521, type: !5374)
!6952 = !DILocation(line: 4521, column: 17, scope: !6940)
!6953 = !DILocation(line: 4521, column: 22, scope: !6940)
!6954 = !DILocation(line: 4521, column: 26, scope: !6940)
!6955 = !DILocalVariable(name: "sd", scope: !6940, file: !3, line: 4522, type: !6)
!6956 = !DILocation(line: 4522, column: 10, scope: !6940)
!6957 = !DILocation(line: 4522, column: 38, scope: !6940)
!6958 = !DILocation(line: 4522, column: 15, scope: !6940)
!6959 = !DILocation(line: 4522, column: 42, scope: !6940)
!6960 = !DILocation(line: 4524, column: 6, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 4524, column: 6)
!6962 = !DILocation(line: 4524, column: 10, scope: !6961)
!6963 = !DILocation(line: 4524, column: 6, scope: !6940)
!6964 = !DILocation(line: 4525, column: 25, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 4524, column: 17)
!6966 = !DILocation(line: 4525, column: 29, scope: !6965)
!6967 = !DILocation(line: 4525, column: 3, scope: !6965)
!6968 = !DILocation(line: 4526, column: 2, scope: !6965)
!6969 = !DILocation(line: 4528, column: 22, scope: !6940)
!6970 = !DILocation(line: 4528, column: 25, scope: !6940)
!6971 = !DILocation(line: 4528, column: 2, scope: !6940)
!6972 = !DILocation(line: 4530, column: 6, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 4530, column: 6)
!6974 = !DILocation(line: 4530, column: 10, scope: !6973)
!6975 = !DILocation(line: 4530, column: 6, scope: !6940)
!6976 = !DILocation(line: 4531, column: 21, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 4530, column: 17)
!6978 = !DILocation(line: 4531, column: 25, scope: !6977)
!6979 = !DILocation(line: 4531, column: 3, scope: !6977)
!6980 = !DILocation(line: 4532, column: 3, scope: !6977)
!6981 = !DILocation(line: 4532, column: 7, scope: !6977)
!6982 = !DILocation(line: 4532, column: 13, scope: !6977)
!6983 = !DILocation(line: 4533, column: 2, scope: !6977)
!6984 = !DILocation(line: 4535, column: 24, scope: !6940)
!6985 = !DILocation(line: 4535, column: 2, scope: !6940)
!6986 = !DILocation(line: 4536, column: 1, scope: !6940)
!6987 = distinct !DISubprogram(name: "sculpt_brush_stroke_init", scope: !3, file: !3, line: 4206, type: !6988, scopeLine: 4207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!2315, !5279, !6842}
!6990 = !DILocalVariable(name: "C", arg: 1, scope: !6987, file: !3, line: 4206, type: !5279)
!6991 = !DILocation(line: 4206, column: 48, scope: !6987)
!6992 = !DILocalVariable(name: "op", arg: 2, scope: !6987, file: !3, line: 4206, type: !6842)
!6993 = !DILocation(line: 4206, column: 63, scope: !6987)
!6994 = !DILocalVariable(name: "scene", scope: !6987, file: !3, line: 4208, type: !6167)
!6995 = !DILocation(line: 4208, column: 9, scope: !6987)
!6996 = !DILocation(line: 4208, column: 32, scope: !6987)
!6997 = !DILocation(line: 4208, column: 17, scope: !6987)
!6998 = !DILocalVariable(name: "ob", scope: !6987, file: !3, line: 4209, type: !3739)
!6999 = !DILocation(line: 4209, column: 10, scope: !6987)
!7000 = !DILocation(line: 4209, column: 38, scope: !6987)
!7001 = !DILocation(line: 4209, column: 15, scope: !6987)
!7002 = !DILocalVariable(name: "sd", scope: !6987, file: !3, line: 4210, type: !6)
!7003 = !DILocation(line: 4210, column: 10, scope: !6987)
!7004 = !DILocation(line: 4210, column: 38, scope: !6987)
!7005 = !DILocation(line: 4210, column: 15, scope: !6987)
!7006 = !DILocation(line: 4210, column: 42, scope: !6987)
!7007 = !DILocalVariable(name: "ss", scope: !6987, file: !3, line: 4211, type: !5374)
!7008 = !DILocation(line: 4211, column: 17, scope: !6987)
!7009 = !DILocation(line: 4211, column: 45, scope: !6987)
!7010 = !DILocation(line: 4211, column: 22, scope: !6987)
!7011 = !DILocation(line: 4211, column: 49, scope: !6987)
!7012 = !DILocalVariable(name: "brush", scope: !6987, file: !3, line: 4212, type: !2749)
!7013 = !DILocation(line: 4212, column: 9, scope: !6987)
!7014 = !DILocation(line: 4212, column: 34, scope: !6987)
!7015 = !DILocation(line: 4212, column: 38, scope: !6987)
!7016 = !DILocation(line: 4212, column: 17, scope: !6987)
!7017 = !DILocalVariable(name: "mode", scope: !6987, file: !3, line: 4213, type: !57)
!7018 = !DILocation(line: 4213, column: 6, scope: !6987)
!7019 = !DILocation(line: 4213, column: 26, scope: !6987)
!7020 = !DILocation(line: 4213, column: 30, scope: !6987)
!7021 = !DILocation(line: 4213, column: 13, scope: !6987)
!7022 = !DILocalVariable(name: "is_smooth", scope: !6987, file: !3, line: 4214, type: !2315)
!7023 = !DILocation(line: 4214, column: 7, scope: !6987)
!7024 = !DILocalVariable(name: "need_mask", scope: !6987, file: !3, line: 4215, type: !2315)
!7025 = !DILocation(line: 4215, column: 7, scope: !6987)
!7026 = !DILocation(line: 4217, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 4217, column: 6)
!7028 = !DILocation(line: 4217, column: 13, scope: !7027)
!7029 = !DILocation(line: 4217, column: 25, scope: !7027)
!7030 = !DILocation(line: 4217, column: 6, scope: !6987)
!7031 = !DILocation(line: 4218, column: 13, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 4217, column: 46)
!7033 = !DILocation(line: 4219, column: 2, scope: !7032)
!7034 = !DILocation(line: 4221, column: 31, scope: !6987)
!7035 = !DILocation(line: 4221, column: 2, scope: !6987)
!7036 = !DILocation(line: 4222, column: 24, scope: !6987)
!7037 = !DILocation(line: 4222, column: 31, scope: !6987)
!7038 = !DILocation(line: 4222, column: 35, scope: !6987)
!7039 = !DILocation(line: 4222, column: 2, scope: !6987)
!7040 = !DILocation(line: 4224, column: 37, scope: !6987)
!7041 = !DILocation(line: 4224, column: 50, scope: !6987)
!7042 = !DILocation(line: 4224, column: 14, scope: !6987)
!7043 = !DILocation(line: 4224, column: 12, scope: !6987)
!7044 = !DILocation(line: 4225, column: 34, scope: !6987)
!7045 = !DILocation(line: 4225, column: 41, scope: !6987)
!7046 = !DILocation(line: 4225, column: 45, scope: !6987)
!7047 = !DILocation(line: 4225, column: 49, scope: !6987)
!7048 = !DILocation(line: 4225, column: 60, scope: !6987)
!7049 = !DILocation(line: 4225, column: 2, scope: !6987)
!7050 = !DILocation(line: 4227, column: 10, scope: !6987)
!7051 = !DILocation(line: 4227, column: 14, scope: !6987)
!7052 = !DILocation(line: 4227, column: 22, scope: !6987)
!7053 = !DILocation(line: 4227, column: 2, scope: !6987)
!7054 = !DILocation(line: 4228, column: 2, scope: !6987)
!7055 = !DILocation(line: 4228, column: 6, scope: !6987)
!7056 = !DILocation(line: 4228, column: 14, scope: !6987)
!7057 = !DILocation(line: 4228, column: 37, scope: !6987)
!7058 = !DILocation(line: 4230, column: 2, scope: !6987)
!7059 = distinct !DISubprogram(name: "sculpt_stroke_test_start", scope: !3, file: !3, line: 4316, type: !7060, scopeLine: 4318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!2315, !5279, !6456, !3251}
!7062 = !DILocalVariable(name: "C", arg: 1, scope: !7059, file: !3, line: 4316, type: !5279)
!7063 = !DILocation(line: 4316, column: 48, scope: !7059)
!7064 = !DILocalVariable(name: "op", arg: 2, scope: !7059, file: !3, line: 4316, type: !6456)
!7065 = !DILocation(line: 4316, column: 70, scope: !7059)
!7066 = !DILocalVariable(name: "mouse", arg: 3, scope: !7059, file: !3, line: 4317, type: !3251)
!7067 = !DILocation(line: 4317, column: 49, scope: !7059)
!7068 = !DILocation(line: 4321, column: 7, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 4321, column: 6)
!7070 = !DILocation(line: 4321, column: 13, scope: !7069)
!7071 = !DILocation(line: 4321, column: 26, scope: !7069)
!7072 = !DILocation(line: 4321, column: 29, scope: !7069)
!7073 = !DILocation(line: 4321, column: 33, scope: !7069)
!7074 = !DILocation(line: 4321, column: 43, scope: !7069)
!7075 = !DILocation(line: 4321, column: 16, scope: !7069)
!7076 = !DILocation(line: 4321, column: 6, scope: !7059)
!7077 = !DILocalVariable(name: "ob", scope: !7078, file: !3, line: 4322, type: !3739)
!7078 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 4321, column: 54)
!7079 = !DILocation(line: 4322, column: 11, scope: !7078)
!7080 = !DILocation(line: 4322, column: 39, scope: !7078)
!7081 = !DILocation(line: 4322, column: 16, scope: !7078)
!7082 = !DILocalVariable(name: "ss", scope: !7078, file: !3, line: 4323, type: !5374)
!7083 = !DILocation(line: 4323, column: 18, scope: !7078)
!7084 = !DILocation(line: 4323, column: 23, scope: !7078)
!7085 = !DILocation(line: 4323, column: 27, scope: !7078)
!7086 = !DILocalVariable(name: "sd", scope: !7078, file: !3, line: 4324, type: !6)
!7087 = !DILocation(line: 4324, column: 11, scope: !7078)
!7088 = !DILocation(line: 4324, column: 39, scope: !7078)
!7089 = !DILocation(line: 4324, column: 16, scope: !7078)
!7090 = !DILocation(line: 4324, column: 43, scope: !7078)
!7091 = !DILocation(line: 4326, column: 28, scope: !7078)
!7092 = !DILocation(line: 4326, column: 53, scope: !7078)
!7093 = !DILocation(line: 4326, column: 32, scope: !7078)
!7094 = !DILocation(line: 4326, column: 3, scope: !7078)
!7095 = !DILocation(line: 4328, column: 34, scope: !7078)
!7096 = !DILocation(line: 4328, column: 37, scope: !7078)
!7097 = !DILocation(line: 4328, column: 41, scope: !7078)
!7098 = !DILocation(line: 4328, column: 45, scope: !7078)
!7099 = !DILocation(line: 4328, column: 49, scope: !7078)
!7100 = !DILocation(line: 4328, column: 3, scope: !7078)
!7101 = !DILocation(line: 4330, column: 43, scope: !7078)
!7102 = !DILocation(line: 4330, column: 26, scope: !7078)
!7103 = !DILocation(line: 4330, column: 3, scope: !7078)
!7104 = !DILocation(line: 4332, column: 3, scope: !7078)
!7105 = !DILocation(line: 4335, column: 3, scope: !7069)
!7106 = !DILocation(line: 4336, column: 1, scope: !7059)
!7107 = distinct !DISubprogram(name: "sculpt_stroke_update_step", scope: !3, file: !3, line: 4338, type: !7108, scopeLine: 4339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{null, !5279, !6854, !7110}
!7110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7111, size: 64)
!7111 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !471, line: 62, baseType: !476)
!7112 = !DILocalVariable(name: "C", arg: 1, scope: !7107, file: !3, line: 4338, type: !5279)
!7113 = !DILocation(line: 4338, column: 49, scope: !7107)
!7114 = !DILocalVariable(name: "UNUSED_stroke", arg: 2, scope: !7107, file: !3, line: 4338, type: !6854)
!7115 = !DILocation(line: 4338, column: 72, scope: !7107)
!7116 = !DILocalVariable(name: "itemptr", arg: 3, scope: !7107, file: !3, line: 4338, type: !7110)
!7117 = !DILocation(line: 4338, column: 100, scope: !7107)
!7118 = !DILocalVariable(name: "ups", scope: !7107, file: !3, line: 4340, type: !7119)
!7119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7120, size: 64)
!7120 = !DIDerivedType(tag: DW_TAG_typedef, name: "UnifiedPaintSettings", file: !8, line: 1025, baseType: !1602)
!7121 = !DILocation(line: 4340, column: 24, scope: !7107)
!7122 = !DILocation(line: 4340, column: 54, scope: !7107)
!7123 = !DILocation(line: 4340, column: 31, scope: !7107)
!7124 = !DILocation(line: 4340, column: 58, scope: !7107)
!7125 = !DILocalVariable(name: "sd", scope: !7107, file: !3, line: 4341, type: !6)
!7126 = !DILocation(line: 4341, column: 10, scope: !7107)
!7127 = !DILocation(line: 4341, column: 38, scope: !7107)
!7128 = !DILocation(line: 4341, column: 15, scope: !7107)
!7129 = !DILocation(line: 4341, column: 42, scope: !7107)
!7130 = !DILocalVariable(name: "ob", scope: !7107, file: !3, line: 4342, type: !3739)
!7131 = !DILocation(line: 4342, column: 10, scope: !7107)
!7132 = !DILocation(line: 4342, column: 38, scope: !7107)
!7133 = !DILocation(line: 4342, column: 15, scope: !7107)
!7134 = !DILocalVariable(name: "ss", scope: !7107, file: !3, line: 4343, type: !5374)
!7135 = !DILocation(line: 4343, column: 17, scope: !7107)
!7136 = !DILocation(line: 4343, column: 22, scope: !7107)
!7137 = !DILocation(line: 4343, column: 26, scope: !7107)
!7138 = !DILocalVariable(name: "brush", scope: !7107, file: !3, line: 4344, type: !6733)
!7139 = !DILocation(line: 4344, column: 15, scope: !7107)
!7140 = !DILocation(line: 4344, column: 40, scope: !7107)
!7141 = !DILocation(line: 4344, column: 44, scope: !7107)
!7142 = !DILocation(line: 4344, column: 23, scope: !7107)
!7143 = !DILocation(line: 4346, column: 32, scope: !7107)
!7144 = !DILocation(line: 4346, column: 35, scope: !7107)
!7145 = !DILocation(line: 4346, column: 2, scope: !7107)
!7146 = !DILocation(line: 4347, column: 31, scope: !7107)
!7147 = !DILocation(line: 4347, column: 34, scope: !7107)
!7148 = !DILocation(line: 4347, column: 38, scope: !7107)
!7149 = !DILocation(line: 4347, column: 42, scope: !7107)
!7150 = !DILocation(line: 4347, column: 2, scope: !7107)
!7151 = !DILocation(line: 4348, column: 22, scope: !7107)
!7152 = !DILocation(line: 4348, column: 26, scope: !7107)
!7153 = !DILocation(line: 4348, column: 2, scope: !7107)
!7154 = !DILocation(line: 4350, column: 6, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4350, column: 6)
!7156 = !DILocation(line: 4350, column: 10, scope: !7155)
!7157 = !DILocation(line: 4350, column: 16, scope: !7155)
!7158 = !DILocation(line: 4350, column: 6, scope: !7107)
!7159 = !DILocation(line: 4351, column: 34, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4350, column: 50)
!7161 = !DILocation(line: 4351, column: 38, scope: !7160)
!7162 = !DILocation(line: 4352, column: 4, scope: !7160)
!7163 = !DILocation(line: 4352, column: 8, scope: !7160)
!7164 = !DILocation(line: 4352, column: 24, scope: !7160)
!7165 = !DILocation(line: 4351, column: 3, scope: !7160)
!7166 = !DILocation(line: 4353, column: 2, scope: !7160)
!7167 = !DILocation(line: 4355, column: 34, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4354, column: 7)
!7169 = !DILocation(line: 4355, column: 38, scope: !7168)
!7170 = !DILocation(line: 4356, column: 35, scope: !7168)
!7171 = !DILocation(line: 4356, column: 39, scope: !7168)
!7172 = !DILocation(line: 4356, column: 46, scope: !7168)
!7173 = !DILocation(line: 4357, column: 42, scope: !7168)
!7174 = !DILocation(line: 4357, column: 47, scope: !7168)
!7175 = !DILocation(line: 4356, column: 53, scope: !7168)
!7176 = !DILocation(line: 4358, column: 41, scope: !7168)
!7177 = !DILocation(line: 4358, column: 45, scope: !7168)
!7178 = !DILocation(line: 4357, column: 61, scope: !7168)
!7179 = !DILocation(line: 4358, column: 57, scope: !7168)
!7180 = !DILocation(line: 4355, column: 3, scope: !7168)
!7181 = !DILocation(line: 4361, column: 37, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4361, column: 6)
!7183 = !DILocation(line: 4361, column: 41, scope: !7182)
!7184 = !DILocation(line: 4361, column: 6, scope: !7182)
!7185 = !DILocation(line: 4361, column: 6, scope: !7107)
!7186 = !DILocation(line: 4362, column: 32, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 4361, column: 49)
!7188 = !DILocation(line: 4362, column: 36, scope: !7187)
!7189 = !DILocation(line: 4362, column: 64, scope: !7187)
!7190 = !DILocation(line: 4362, column: 3, scope: !7187)
!7191 = !DILocation(line: 4363, column: 2, scope: !7187)
!7192 = !DILocation(line: 4365, column: 31, scope: !7107)
!7193 = !DILocation(line: 4365, column: 35, scope: !7107)
!7194 = !DILocation(line: 4365, column: 56, scope: !7107)
!7195 = !DILocation(line: 4365, column: 2, scope: !7107)
!7196 = !DILocation(line: 4367, column: 25, scope: !7107)
!7197 = !DILocation(line: 4367, column: 29, scope: !7107)
!7198 = !DILocation(line: 4367, column: 2, scope: !7107)
!7199 = !DILocation(line: 4370, column: 24, scope: !7107)
!7200 = !DILocation(line: 4370, column: 28, scope: !7107)
!7201 = !DILocation(line: 4370, column: 2, scope: !7107)
!7202 = !DILocation(line: 4382, column: 6, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4382, column: 6)
!7204 = !DILocation(line: 4382, column: 10, scope: !7203)
!7205 = !DILocation(line: 4382, column: 6, scope: !7107)
!7206 = !DILocation(line: 4383, column: 30, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4382, column: 28)
!7208 = !DILocation(line: 4383, column: 34, scope: !7207)
!7209 = !DILocation(line: 4383, column: 3, scope: !7207)
!7210 = !DILocation(line: 4384, column: 2, scope: !7207)
!7211 = !DILocation(line: 4385, column: 11, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4385, column: 11)
!7213 = !DILocation(line: 4385, column: 15, scope: !7212)
!7214 = !DILocation(line: 4385, column: 11, scope: !7203)
!7215 = !DILocation(line: 4386, column: 26, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 4385, column: 19)
!7217 = !DILocation(line: 4386, column: 3, scope: !7216)
!7218 = !DILocation(line: 4387, column: 2, scope: !7216)
!7219 = !DILocation(line: 4389, column: 2, scope: !7107)
!7220 = !DILocation(line: 4389, column: 6, scope: !7107)
!7221 = !DILocation(line: 4389, column: 13, scope: !7107)
!7222 = !DILocation(line: 4389, column: 24, scope: !7107)
!7223 = !DILocation(line: 4392, column: 22, scope: !7107)
!7224 = !DILocation(line: 4392, column: 2, scope: !7107)
!7225 = !DILocation(line: 4393, column: 1, scope: !7107)
!7226 = distinct !DISubprogram(name: "sculpt_stroke_done", scope: !3, file: !3, line: 4404, type: !7227, scopeLine: 4405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !5732, !6854}
!7229 = !DILocalVariable(name: "C", arg: 1, scope: !7226, file: !3, line: 4404, type: !5732)
!7230 = !DILocation(line: 4404, column: 48, scope: !7226)
!7231 = !DILocalVariable(name: "UNUSED_stroke", arg: 2, scope: !7226, file: !3, line: 4404, type: !6854)
!7232 = !DILocation(line: 4404, column: 71, scope: !7226)
!7233 = !DILocalVariable(name: "ob", scope: !7226, file: !3, line: 4406, type: !3739)
!7234 = !DILocation(line: 4406, column: 10, scope: !7226)
!7235 = !DILocation(line: 4406, column: 38, scope: !7226)
!7236 = !DILocation(line: 4406, column: 15, scope: !7226)
!7237 = !DILocalVariable(name: "scene", scope: !7226, file: !3, line: 4407, type: !6167)
!7238 = !DILocation(line: 4407, column: 9, scope: !7226)
!7239 = !DILocation(line: 4407, column: 32, scope: !7226)
!7240 = !DILocation(line: 4407, column: 17, scope: !7226)
!7241 = !DILocalVariable(name: "ss", scope: !7226, file: !3, line: 4408, type: !5374)
!7242 = !DILocation(line: 4408, column: 17, scope: !7226)
!7243 = !DILocation(line: 4408, column: 22, scope: !7226)
!7244 = !DILocation(line: 4408, column: 26, scope: !7226)
!7245 = !DILocalVariable(name: "sd", scope: !7226, file: !3, line: 4409, type: !6)
!7246 = !DILocation(line: 4409, column: 10, scope: !7226)
!7247 = !DILocation(line: 4409, column: 38, scope: !7226)
!7248 = !DILocation(line: 4409, column: 15, scope: !7226)
!7249 = !DILocation(line: 4409, column: 42, scope: !7226)
!7250 = !DILocation(line: 4411, column: 18, scope: !7226)
!7251 = !DILocation(line: 4411, column: 2, scope: !7226)
!7252 = !DILocation(line: 4414, column: 6, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 4414, column: 6)
!7254 = !DILocation(line: 4414, column: 10, scope: !7253)
!7255 = !DILocation(line: 4414, column: 6, scope: !7226)
!7256 = !DILocalVariable(name: "ups", scope: !7257, file: !3, line: 4415, type: !7119)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 4414, column: 17)
!7258 = !DILocation(line: 4415, column: 25, scope: !7257)
!7259 = !DILocation(line: 4415, column: 55, scope: !7257)
!7260 = !DILocation(line: 4415, column: 32, scope: !7257)
!7261 = !DILocation(line: 4415, column: 59, scope: !7257)
!7262 = !DILocalVariable(name: "brush", scope: !7257, file: !3, line: 4416, type: !2749)
!7263 = !DILocation(line: 4416, column: 10, scope: !7257)
!7264 = !DILocation(line: 4416, column: 35, scope: !7257)
!7265 = !DILocation(line: 4416, column: 39, scope: !7257)
!7266 = !DILocation(line: 4416, column: 18, scope: !7257)
!7267 = !DILocation(line: 4417, column: 3, scope: !7257)
!7268 = !DILocation(line: 4417, column: 8, scope: !7257)
!7269 = !DILocation(line: 4417, column: 22, scope: !7257)
!7270 = !DILocation(line: 4419, column: 33, scope: !7257)
!7271 = !DILocation(line: 4419, column: 36, scope: !7257)
!7272 = !DILocation(line: 4419, column: 3, scope: !7257)
!7273 = !DILocation(line: 4422, column: 7, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4422, column: 7)
!7275 = !DILocation(line: 4422, column: 11, scope: !7274)
!7276 = !DILocation(line: 4422, column: 18, scope: !7274)
!7277 = !DILocation(line: 4422, column: 7, scope: !7257)
!7278 = !DILocation(line: 4423, column: 8, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 4423, column: 8)
!7280 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 4422, column: 30)
!7281 = !DILocation(line: 4423, column: 15, scope: !7279)
!7282 = !DILocation(line: 4423, column: 27, scope: !7279)
!7283 = !DILocation(line: 4423, column: 8, scope: !7280)
!7284 = !DILocation(line: 4424, column: 24, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 4423, column: 48)
!7286 = !DILocation(line: 4424, column: 28, scope: !7285)
!7287 = !DILocation(line: 4424, column: 35, scope: !7285)
!7288 = !DILocation(line: 4424, column: 5, scope: !7285)
!7289 = !DILocation(line: 4424, column: 12, scope: !7285)
!7290 = !DILocation(line: 4424, column: 22, scope: !7285)
!7291 = !DILocation(line: 4425, column: 4, scope: !7285)
!7292 = !DILocalVariable(name: "p", scope: !7293, file: !3, line: 4427, type: !7294)
!7293 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 4426, column: 9)
!7294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!7295 = !DILocation(line: 4427, column: 12, scope: !7293)
!7296 = !DILocation(line: 4427, column: 17, scope: !7293)
!7297 = !DILocation(line: 4427, column: 21, scope: !7293)
!7298 = !DILocation(line: 4428, column: 24, scope: !7293)
!7299 = !DILocation(line: 4428, column: 31, scope: !7293)
!7300 = !DILocation(line: 4428, column: 35, scope: !7293)
!7301 = !DILocation(line: 4428, column: 42, scope: !7293)
!7302 = !DILocation(line: 4428, column: 49, scope: !7293)
!7303 = !DILocation(line: 4428, column: 53, scope: !7293)
!7304 = !DILocation(line: 4428, column: 60, scope: !7293)
!7305 = !DILocation(line: 4428, column: 5, scope: !7293)
!7306 = !DILocation(line: 4429, column: 52, scope: !7293)
!7307 = !DILocation(line: 4429, column: 56, scope: !7293)
!7308 = !DILocation(line: 4429, column: 63, scope: !7293)
!7309 = !DILocation(line: 4429, column: 22, scope: !7293)
!7310 = !DILocation(line: 4429, column: 13, scope: !7293)
!7311 = !DILocation(line: 4429, column: 11, scope: !7293)
!7312 = !DILocation(line: 4430, column: 9, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 4430, column: 9)
!7314 = !DILocation(line: 4430, column: 9, scope: !7293)
!7315 = !DILocation(line: 4431, column: 26, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 4430, column: 16)
!7317 = !DILocation(line: 4431, column: 29, scope: !7316)
!7318 = !DILocation(line: 4431, column: 6, scope: !7316)
!7319 = !DILocation(line: 4432, column: 5, scope: !7316)
!7320 = !DILocation(line: 4434, column: 3, scope: !7280)
!7321 = !DILocation(line: 4437, column: 3, scope: !7257)
!7322 = !DILocation(line: 4437, column: 7, scope: !7257)
!7323 = !DILocation(line: 4437, column: 15, scope: !7257)
!7324 = !DILocation(line: 4437, column: 33, scope: !7257)
!7325 = !DILocation(line: 4438, column: 32, scope: !7257)
!7326 = !DILocation(line: 4438, column: 36, scope: !7257)
!7327 = !DILocation(line: 4438, column: 40, scope: !7257)
!7328 = !DILocation(line: 4438, column: 48, scope: !7257)
!7329 = !DILocation(line: 4438, column: 3, scope: !7257)
!7330 = !DILocation(line: 4440, column: 21, scope: !7257)
!7331 = !DILocation(line: 4440, column: 25, scope: !7257)
!7332 = !DILocation(line: 4440, column: 3, scope: !7257)
!7333 = !DILocation(line: 4441, column: 3, scope: !7257)
!7334 = !DILocation(line: 4441, column: 7, scope: !7257)
!7335 = !DILocation(line: 4441, column: 13, scope: !7257)
!7336 = !DILocation(line: 4443, column: 3, scope: !7257)
!7337 = !DILocation(line: 4445, column: 19, scope: !7257)
!7338 = !DILocation(line: 4445, column: 23, scope: !7257)
!7339 = !DILocation(line: 4445, column: 3, scope: !7257)
!7340 = !DILocation(line: 4447, column: 21, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4447, column: 7)
!7342 = !DILocation(line: 4447, column: 25, scope: !7341)
!7343 = !DILocation(line: 4447, column: 7, scope: !7341)
!7344 = !DILocation(line: 4447, column: 31, scope: !7341)
!7345 = !DILocation(line: 4447, column: 7, scope: !7257)
!7346 = !DILocation(line: 4448, column: 32, scope: !7341)
!7347 = !DILocation(line: 4448, column: 36, scope: !7341)
!7348 = !DILocation(line: 4448, column: 4, scope: !7341)
!7349 = !DILocation(line: 4453, column: 7, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4453, column: 7)
!7351 = !DILocation(line: 4453, column: 11, scope: !7350)
!7352 = !DILocation(line: 4453, column: 14, scope: !7350)
!7353 = !DILocation(line: 4453, column: 18, scope: !7350)
!7354 = !DILocation(line: 4453, column: 22, scope: !7350)
!7355 = !DILocation(line: 4453, column: 7, scope: !7257)
!7356 = !DILocation(line: 4453, column: 63, scope: !7350)
!7357 = !DILocation(line: 4453, column: 40, scope: !7350)
!7358 = !DILocation(line: 4455, column: 3, scope: !7257)
!7359 = !DILocation(line: 4455, column: 7, scope: !7257)
!7360 = !DILocation(line: 4455, column: 22, scope: !7257)
!7361 = !DILocation(line: 4458, column: 16, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4458, column: 7)
!7363 = !DILocation(line: 4458, column: 20, scope: !7362)
!7364 = !DILocation(line: 4458, column: 8, scope: !7362)
!7365 = !DILocation(line: 4458, column: 27, scope: !7362)
!7366 = !DILocation(line: 4458, column: 30, scope: !7362)
!7367 = !DILocation(line: 4458, column: 33, scope: !7362)
!7368 = !DILocation(line: 4458, column: 7, scope: !7257)
!7369 = !DILocation(line: 4459, column: 23, scope: !7362)
!7370 = !DILocation(line: 4459, column: 27, scope: !7362)
!7371 = !DILocation(line: 4459, column: 4, scope: !7362)
!7372 = !DILocation(line: 4461, column: 25, scope: !7257)
!7373 = !DILocation(line: 4461, column: 49, scope: !7257)
!7374 = !DILocation(line: 4461, column: 3, scope: !7257)
!7375 = !DILocation(line: 4462, column: 2, scope: !7257)
!7376 = !DILocation(line: 4464, column: 24, scope: !7226)
!7377 = !DILocation(line: 4464, column: 2, scope: !7226)
!7378 = !DILocation(line: 4465, column: 1, scope: !7226)
!7379 = distinct !DISubprogram(name: "over_mesh", scope: !3, file: !3, line: 4306, type: !7380, scopeLine: 4307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!2315, !5279, !6456, !153, !153}
!7382 = !DILocalVariable(name: "C", arg: 1, scope: !7379, file: !3, line: 4306, type: !5279)
!7383 = !DILocation(line: 4306, column: 33, scope: !7379)
!7384 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7379, file: !3, line: 4306, type: !6456)
!7385 = !DILocation(line: 4306, column: 55, scope: !7379)
!7386 = !DILocalVariable(name: "x", arg: 3, scope: !7379, file: !3, line: 4306, type: !153)
!7387 = !DILocation(line: 4306, column: 73, scope: !7379)
!7388 = !DILocalVariable(name: "y", arg: 4, scope: !7379, file: !3, line: 4306, type: !153)
!7389 = !DILocation(line: 4306, column: 82, scope: !7379)
!7390 = !DILocalVariable(name: "mouse", scope: !7379, file: !3, line: 4308, type: !186)
!7391 = !DILocation(line: 4308, column: 8, scope: !7379)
!7392 = !DILocalVariable(name: "co", scope: !7379, file: !3, line: 4308, type: !233)
!7393 = !DILocation(line: 4308, column: 18, scope: !7379)
!7394 = !DILocation(line: 4310, column: 13, scope: !7379)
!7395 = !DILocation(line: 4310, column: 2, scope: !7379)
!7396 = !DILocation(line: 4310, column: 11, scope: !7379)
!7397 = !DILocation(line: 4311, column: 13, scope: !7379)
!7398 = !DILocation(line: 4311, column: 2, scope: !7379)
!7399 = !DILocation(line: 4311, column: 11, scope: !7379)
!7400 = !DILocation(line: 4313, column: 36, scope: !7379)
!7401 = !DILocation(line: 4313, column: 39, scope: !7379)
!7402 = !DILocation(line: 4313, column: 43, scope: !7379)
!7403 = !DILocation(line: 4313, column: 9, scope: !7379)
!7404 = !DILocation(line: 4313, column: 2, scope: !7379)
!7405 = distinct !DISubprogram(name: "sculpt_brush_init_tex", scope: !3, file: !3, line: 4191, type: !7406, scopeLine: 4192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7406 = !DISubroutineType(types: !7407)
!7407 = !{null, !7408, !6, !5374}
!7408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 64)
!7409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6168)
!7410 = !DILocalVariable(name: "scene", arg: 1, scope: !7405, file: !3, line: 4191, type: !7408)
!7411 = !DILocation(line: 4191, column: 48, scope: !7405)
!7412 = !DILocalVariable(name: "sd", arg: 2, scope: !7405, file: !3, line: 4191, type: !6)
!7413 = !DILocation(line: 4191, column: 63, scope: !7405)
!7414 = !DILocalVariable(name: "ss", arg: 3, scope: !7405, file: !3, line: 4191, type: !5374)
!7415 = !DILocation(line: 4191, column: 82, scope: !7405)
!7416 = !DILocalVariable(name: "brush", scope: !7405, file: !3, line: 4193, type: !2749)
!7417 = !DILocation(line: 4193, column: 9, scope: !7405)
!7418 = !DILocation(line: 4193, column: 34, scope: !7405)
!7419 = !DILocation(line: 4193, column: 38, scope: !7405)
!7420 = !DILocation(line: 4193, column: 17, scope: !7405)
!7421 = !DILocalVariable(name: "mtex", scope: !7405, file: !3, line: 4194, type: !7422)
!7422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7423, size: 64)
!7423 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !241, line: 94, baseType: !240)
!7424 = !DILocation(line: 4194, column: 8, scope: !7405)
!7425 = !DILocation(line: 4194, column: 16, scope: !7405)
!7426 = !DILocation(line: 4194, column: 23, scope: !7405)
!7427 = !DILocation(line: 4197, column: 6, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 4197, column: 6)
!7429 = !DILocation(line: 4197, column: 12, scope: !7428)
!7430 = !DILocation(line: 4197, column: 16, scope: !7428)
!7431 = !DILocation(line: 4197, column: 19, scope: !7428)
!7432 = !DILocation(line: 4197, column: 25, scope: !7428)
!7433 = !DILocation(line: 4197, column: 30, scope: !7428)
!7434 = !DILocation(line: 4197, column: 6, scope: !7405)
!7435 = !DILocation(line: 4198, column: 25, scope: !7428)
!7436 = !DILocation(line: 4198, column: 31, scope: !7428)
!7437 = !DILocation(line: 4198, column: 36, scope: !7428)
!7438 = !DILocation(line: 4198, column: 3, scope: !7428)
!7439 = !DILocation(line: 4203, column: 20, scope: !7405)
!7440 = !DILocation(line: 4203, column: 27, scope: !7405)
!7441 = !DILocation(line: 4203, column: 31, scope: !7405)
!7442 = !DILocation(line: 4203, column: 2, scope: !7405)
!7443 = !DILocation(line: 4204, column: 1, scope: !7405)
!7444 = distinct !DISubprogram(name: "sculpt_update_tex", scope: !3, file: !3, line: 3480, type: !7406, scopeLine: 3481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7445 = !DILocalVariable(name: "scene", arg: 1, scope: !7444, file: !3, line: 3480, type: !7408)
!7446 = !DILocation(line: 3480, column: 44, scope: !7444)
!7447 = !DILocalVariable(name: "sd", arg: 2, scope: !7444, file: !3, line: 3480, type: !6)
!7448 = !DILocation(line: 3480, column: 59, scope: !7444)
!7449 = !DILocalVariable(name: "ss", arg: 3, scope: !7444, file: !3, line: 3480, type: !5374)
!7450 = !DILocation(line: 3480, column: 78, scope: !7444)
!7451 = !DILocalVariable(name: "brush", scope: !7444, file: !3, line: 3482, type: !2749)
!7452 = !DILocation(line: 3482, column: 9, scope: !7444)
!7453 = !DILocation(line: 3482, column: 34, scope: !7444)
!7454 = !DILocation(line: 3482, column: 38, scope: !7444)
!7455 = !DILocation(line: 3482, column: 17, scope: !7444)
!7456 = !DILocalVariable(name: "radius", scope: !7444, file: !3, line: 3483, type: !5191)
!7457 = !DILocation(line: 3483, column: 12, scope: !7444)
!7458 = !DILocation(line: 3483, column: 40, scope: !7444)
!7459 = !DILocation(line: 3483, column: 47, scope: !7444)
!7460 = !DILocation(line: 3483, column: 21, scope: !7444)
!7461 = !DILocation(line: 3485, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3485, column: 6)
!7463 = !DILocation(line: 3485, column: 10, scope: !7462)
!7464 = !DILocation(line: 3485, column: 6, scope: !7444)
!7465 = !DILocation(line: 3486, column: 3, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 3485, column: 20)
!7467 = !DILocation(line: 3486, column: 13, scope: !7466)
!7468 = !DILocation(line: 3486, column: 17, scope: !7466)
!7469 = !DILocation(line: 3487, column: 3, scope: !7466)
!7470 = !DILocation(line: 3487, column: 7, scope: !7466)
!7471 = !DILocation(line: 3487, column: 16, scope: !7466)
!7472 = !DILocation(line: 3488, column: 2, scope: !7466)
!7473 = !DILocation(line: 3490, column: 6, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3490, column: 6)
!7475 = !DILocation(line: 3490, column: 10, scope: !7474)
!7476 = !DILocation(line: 3490, column: 6, scope: !7444)
!7477 = !DILocation(line: 3491, column: 23, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 3490, column: 20)
!7479 = !DILocation(line: 3491, column: 27, scope: !7478)
!7480 = !DILocation(line: 3491, column: 3, scope: !7478)
!7481 = !DILocation(line: 3492, column: 3, scope: !7478)
!7482 = !DILocation(line: 3492, column: 7, scope: !7478)
!7483 = !DILocation(line: 3492, column: 16, scope: !7478)
!7484 = !DILocation(line: 3493, column: 2, scope: !7478)
!7485 = !DILocation(line: 3496, column: 26, scope: !7444)
!7486 = !DILocation(line: 3496, column: 24, scope: !7444)
!7487 = !DILocation(line: 3496, column: 2, scope: !7444)
!7488 = !DILocation(line: 3496, column: 6, scope: !7444)
!7489 = !DILocation(line: 3496, column: 20, scope: !7444)
!7490 = !DILocation(line: 3497, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3497, column: 6)
!7492 = !DILocation(line: 3497, column: 11, scope: !7491)
!7493 = !DILocation(line: 3497, column: 20, scope: !7491)
!7494 = !DILocation(line: 3497, column: 23, scope: !7491)
!7495 = !DILocation(line: 3497, column: 27, scope: !7491)
!7496 = !DILocation(line: 3497, column: 43, scope: !7491)
!7497 = !DILocation(line: 3497, column: 47, scope: !7491)
!7498 = !DILocation(line: 3497, column: 41, scope: !7491)
!7499 = !DILocation(line: 3497, column: 6, scope: !7444)
!7500 = !DILocation(line: 3498, column: 46, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 3497, column: 64)
!7502 = !DILocation(line: 3498, column: 53, scope: !7501)
!7503 = !DILocation(line: 3498, column: 18, scope: !7501)
!7504 = !DILocation(line: 3498, column: 3, scope: !7501)
!7505 = !DILocation(line: 3498, column: 7, scope: !7501)
!7506 = !DILocation(line: 3498, column: 16, scope: !7501)
!7507 = !DILocation(line: 3499, column: 25, scope: !7501)
!7508 = !DILocation(line: 3499, column: 29, scope: !7501)
!7509 = !DILocation(line: 3499, column: 3, scope: !7501)
!7510 = !DILocation(line: 3499, column: 7, scope: !7501)
!7511 = !DILocation(line: 3499, column: 23, scope: !7501)
!7512 = !DILocation(line: 3500, column: 18, scope: !7501)
!7513 = !DILocation(line: 3500, column: 3, scope: !7501)
!7514 = !DILocation(line: 3500, column: 7, scope: !7501)
!7515 = !DILocation(line: 3500, column: 16, scope: !7501)
!7516 = !DILocation(line: 3501, column: 2, scope: !7501)
!7517 = !DILocation(line: 3502, column: 1, scope: !7444)
!7518 = distinct !DISubprogram(name: "sculpt_update_cache_invariants", scope: !3, file: !3, line: 3701, type: !7519, scopeLine: 3702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{null, !5279, !6, !5374, !6842, !3251}
!7521 = !DILocalVariable(name: "C", arg: 1, scope: !7518, file: !3, line: 3701, type: !5279)
!7522 = !DILocation(line: 3701, column: 54, scope: !7518)
!7523 = !DILocalVariable(name: "sd", arg: 2, scope: !7518, file: !3, line: 3701, type: !6)
!7524 = !DILocation(line: 3701, column: 65, scope: !7518)
!7525 = !DILocalVariable(name: "ss", arg: 3, scope: !7518, file: !3, line: 3701, type: !5374)
!7526 = !DILocation(line: 3701, column: 84, scope: !7518)
!7527 = !DILocalVariable(name: "op", arg: 4, scope: !7518, file: !3, line: 3701, type: !6842)
!7528 = !DILocation(line: 3701, column: 100, scope: !7518)
!7529 = !DILocalVariable(name: "mouse", arg: 5, scope: !7518, file: !3, line: 3701, type: !3251)
!7530 = !DILocation(line: 3701, column: 116, scope: !7518)
!7531 = !DILocalVariable(name: "cache", scope: !7518, file: !3, line: 3703, type: !5642)
!7532 = !DILocation(line: 3703, column: 15, scope: !7518)
!7533 = !DILocation(line: 3703, column: 23, scope: !7518)
!7534 = !DILocalVariable(name: "scene", scope: !7518, file: !3, line: 3704, type: !6167)
!7535 = !DILocation(line: 3704, column: 9, scope: !7518)
!7536 = !DILocation(line: 3704, column: 32, scope: !7518)
!7537 = !DILocation(line: 3704, column: 17, scope: !7518)
!7538 = !DILocalVariable(name: "ups", scope: !7518, file: !3, line: 3705, type: !7119)
!7539 = !DILocation(line: 3705, column: 24, scope: !7518)
!7540 = !DILocation(line: 3705, column: 54, scope: !7518)
!7541 = !DILocation(line: 3705, column: 31, scope: !7518)
!7542 = !DILocation(line: 3705, column: 58, scope: !7518)
!7543 = !DILocalVariable(name: "brush", scope: !7518, file: !3, line: 3706, type: !2749)
!7544 = !DILocation(line: 3706, column: 9, scope: !7518)
!7545 = !DILocation(line: 3706, column: 34, scope: !7518)
!7546 = !DILocation(line: 3706, column: 38, scope: !7518)
!7547 = !DILocation(line: 3706, column: 17, scope: !7518)
!7548 = !DILocalVariable(name: "vc", scope: !7518, file: !3, line: 3707, type: !2372)
!7549 = !DILocation(line: 3707, column: 15, scope: !7518)
!7550 = !DILocation(line: 3707, column: 46, scope: !7518)
!7551 = !DILocation(line: 3707, column: 50, scope: !7518)
!7552 = !DILocation(line: 3707, column: 20, scope: !7518)
!7553 = !DILocalVariable(name: "ob", scope: !7518, file: !3, line: 3708, type: !3739)
!7554 = !DILocation(line: 3708, column: 10, scope: !7518)
!7555 = !DILocation(line: 3708, column: 38, scope: !7518)
!7556 = !DILocation(line: 3708, column: 15, scope: !7518)
!7557 = !DILocalVariable(name: "mat", scope: !7518, file: !3, line: 3709, type: !2329)
!7558 = !DILocation(line: 3709, column: 8, scope: !7518)
!7559 = !DILocalVariable(name: "viewDir", scope: !7518, file: !3, line: 3710, type: !233)
!7560 = !DILocation(line: 3710, column: 8, scope: !7518)
!7561 = !DILocalVariable(name: "max_scale", scope: !7518, file: !3, line: 3711, type: !153)
!7562 = !DILocation(line: 3711, column: 8, scope: !7518)
!7563 = !DILocalVariable(name: "i", scope: !7518, file: !3, line: 3712, type: !57)
!7564 = !DILocation(line: 3712, column: 6, scope: !7518)
!7565 = !DILocalVariable(name: "mode", scope: !7518, file: !3, line: 3713, type: !57)
!7566 = !DILocation(line: 3713, column: 6, scope: !7518)
!7567 = !DILocation(line: 3715, column: 14, scope: !7518)
!7568 = !DILocation(line: 3715, column: 2, scope: !7518)
!7569 = !DILocation(line: 3715, column: 6, scope: !7518)
!7570 = !DILocation(line: 3715, column: 12, scope: !7518)
!7571 = !DILocation(line: 3718, column: 6, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3718, column: 6)
!7573 = !DILocation(line: 3718, column: 13, scope: !7572)
!7574 = !DILocation(line: 3718, column: 25, scope: !7572)
!7575 = !DILocation(line: 3718, column: 6, scope: !7518)
!7576 = !DILocation(line: 3719, column: 13, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 3718, column: 47)
!7578 = !DILocation(line: 3720, column: 2, scope: !7577)
!7579 = !DILocation(line: 3722, column: 13, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 3721, column: 7)
!7581 = !DILocation(line: 3723, column: 10, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 3723, column: 3)
!7583 = !DILocation(line: 3723, column: 8, scope: !7582)
!7584 = !DILocation(line: 3723, column: 15, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 3723, column: 3)
!7586 = !DILocation(line: 3723, column: 17, scope: !7585)
!7587 = !DILocation(line: 3723, column: 3, scope: !7582)
!7588 = !DILocation(line: 3724, column: 23, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 3723, column: 28)
!7590 = !DILocation(line: 3724, column: 40, scope: !7589)
!7591 = !DILocation(line: 3724, column: 44, scope: !7589)
!7592 = !DILocation(line: 3724, column: 49, scope: !7589)
!7593 = !DILocation(line: 3724, column: 34, scope: !7589)
!7594 = !DILocation(line: 3724, column: 16, scope: !7589)
!7595 = !DILocation(line: 3724, column: 14, scope: !7589)
!7596 = !DILocation(line: 3725, column: 3, scope: !7589)
!7597 = !DILocation(line: 3723, column: 24, scope: !7585)
!7598 = !DILocation(line: 3723, column: 3, scope: !7585)
!7599 = distinct !{!7599, !7587, !7600}
!7600 = !DILocation(line: 3725, column: 3, scope: !7582)
!7601 = !DILocation(line: 3727, column: 20, scope: !7518)
!7602 = !DILocation(line: 3727, column: 32, scope: !7518)
!7603 = !DILocation(line: 3727, column: 36, scope: !7518)
!7604 = !DILocation(line: 3727, column: 30, scope: !7518)
!7605 = !DILocation(line: 3727, column: 2, scope: !7518)
!7606 = !DILocation(line: 3727, column: 9, scope: !7518)
!7607 = !DILocation(line: 3727, column: 18, scope: !7518)
!7608 = !DILocation(line: 3728, column: 20, scope: !7518)
!7609 = !DILocation(line: 3728, column: 32, scope: !7518)
!7610 = !DILocation(line: 3728, column: 36, scope: !7518)
!7611 = !DILocation(line: 3728, column: 30, scope: !7518)
!7612 = !DILocation(line: 3728, column: 2, scope: !7518)
!7613 = !DILocation(line: 3728, column: 9, scope: !7518)
!7614 = !DILocation(line: 3728, column: 18, scope: !7518)
!7615 = !DILocation(line: 3729, column: 20, scope: !7518)
!7616 = !DILocation(line: 3729, column: 32, scope: !7518)
!7617 = !DILocation(line: 3729, column: 36, scope: !7518)
!7618 = !DILocation(line: 3729, column: 30, scope: !7518)
!7619 = !DILocation(line: 3729, column: 2, scope: !7518)
!7620 = !DILocation(line: 3729, column: 9, scope: !7518)
!7621 = !DILocation(line: 3729, column: 18, scope: !7518)
!7622 = !DILocation(line: 3731, column: 30, scope: !7518)
!7623 = !DILocation(line: 3731, column: 37, scope: !7518)
!7624 = !DILocation(line: 3731, column: 50, scope: !7518)
!7625 = !DILocation(line: 3731, column: 57, scope: !7518)
!7626 = !DILocation(line: 3731, column: 48, scope: !7518)
!7627 = !DILocation(line: 3731, column: 2, scope: !7518)
!7628 = !DILocation(line: 3731, column: 9, scope: !7518)
!7629 = !DILocation(line: 3731, column: 28, scope: !7518)
!7630 = !DILocation(line: 3733, column: 2, scope: !7518)
!7631 = !DILocation(line: 3733, column: 9, scope: !7518)
!7632 = !DILocation(line: 3733, column: 14, scope: !7518)
!7633 = !DILocation(line: 3735, column: 30, scope: !7518)
!7634 = !DILocation(line: 3735, column: 34, scope: !7518)
!7635 = !DILocation(line: 3735, column: 2, scope: !7518)
!7636 = !DILocation(line: 3738, column: 6, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3738, column: 6)
!7638 = !DILocation(line: 3738, column: 6, scope: !7518)
!7639 = !DILocation(line: 3739, column: 14, scope: !7637)
!7640 = !DILocation(line: 3739, column: 21, scope: !7637)
!7641 = !DILocation(line: 3739, column: 36, scope: !7637)
!7642 = !DILocation(line: 3739, column: 3, scope: !7637)
!7643 = !DILocation(line: 3741, column: 11, scope: !7637)
!7644 = !DILocation(line: 3741, column: 18, scope: !7637)
!7645 = !DILocation(line: 3741, column: 3, scope: !7637)
!7646 = !DILocation(line: 3743, column: 22, scope: !7518)
!7647 = !DILocation(line: 3743, column: 26, scope: !7518)
!7648 = !DILocation(line: 3743, column: 9, scope: !7518)
!7649 = !DILocation(line: 3743, column: 7, scope: !7518)
!7650 = !DILocation(line: 3744, column: 18, scope: !7518)
!7651 = !DILocation(line: 3744, column: 23, scope: !7518)
!7652 = !DILocation(line: 3744, column: 2, scope: !7518)
!7653 = !DILocation(line: 3744, column: 9, scope: !7518)
!7654 = !DILocation(line: 3744, column: 16, scope: !7518)
!7655 = !DILocation(line: 3745, column: 22, scope: !7518)
!7656 = !DILocation(line: 3745, column: 27, scope: !7518)
!7657 = !DILocation(line: 3745, column: 2, scope: !7518)
!7658 = !DILocation(line: 3745, column: 9, scope: !7518)
!7659 = !DILocation(line: 3745, column: 20, scope: !7518)
!7660 = !DILocation(line: 3749, column: 6, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3749, column: 6)
!7662 = !DILocation(line: 3749, column: 13, scope: !7661)
!7663 = !DILocation(line: 3749, column: 6, scope: !7518)
!7664 = !DILocation(line: 3749, column: 21, scope: !7661)
!7665 = !DILocation(line: 3749, column: 26, scope: !7661)
!7666 = !DILocation(line: 3749, column: 40, scope: !7661)
!7667 = !DILocation(line: 3750, column: 7, scope: !7661)
!7668 = !DILocation(line: 3750, column: 12, scope: !7661)
!7669 = !DILocation(line: 3750, column: 26, scope: !7661)
!7670 = !DILocation(line: 3753, column: 6, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3753, column: 6)
!7672 = !DILocation(line: 3753, column: 13, scope: !7671)
!7673 = !DILocation(line: 3753, column: 6, scope: !7518)
!7674 = !DILocation(line: 3754, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 3754, column: 7)
!7676 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 3753, column: 25)
!7677 = !DILocation(line: 3754, column: 14, scope: !7675)
!7678 = !DILocation(line: 3754, column: 26, scope: !7675)
!7679 = !DILocation(line: 3754, column: 7, scope: !7676)
!7680 = !DILocation(line: 3755, column: 35, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3754, column: 47)
!7682 = !DILocation(line: 3755, column: 42, scope: !7681)
!7683 = !DILocation(line: 3755, column: 4, scope: !7681)
!7684 = !DILocation(line: 3755, column: 11, scope: !7681)
!7685 = !DILocation(line: 3755, column: 33, scope: !7681)
!7686 = !DILocation(line: 3756, column: 4, scope: !7681)
!7687 = !DILocation(line: 3756, column: 11, scope: !7681)
!7688 = !DILocation(line: 3756, column: 21, scope: !7681)
!7689 = !DILocation(line: 3757, column: 3, scope: !7681)
!7690 = !DILocalVariable(name: "p", scope: !7691, file: !3, line: 3759, type: !7294)
!7691 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3758, column: 8)
!7692 = !DILocation(line: 3759, column: 11, scope: !7691)
!7693 = !DILocation(line: 3759, column: 16, scope: !7691)
!7694 = !DILocation(line: 3759, column: 20, scope: !7691)
!7695 = !DILocalVariable(name: "br", scope: !7691, file: !3, line: 3760, type: !2749)
!7696 = !DILocation(line: 3760, column: 11, scope: !7691)
!7697 = !DILocalVariable(name: "size", scope: !7691, file: !3, line: 3761, type: !57)
!7698 = !DILocation(line: 3761, column: 8, scope: !7691)
!7699 = !DILocation(line: 3761, column: 34, scope: !7691)
!7700 = !DILocation(line: 3761, column: 41, scope: !7691)
!7701 = !DILocation(line: 3761, column: 15, scope: !7691)
!7702 = !DILocation(line: 3763, column: 16, scope: !7691)
!7703 = !DILocation(line: 3763, column: 23, scope: !7691)
!7704 = !DILocation(line: 3763, column: 48, scope: !7691)
!7705 = !DILocation(line: 3763, column: 55, scope: !7691)
!7706 = !DILocation(line: 3763, column: 58, scope: !7691)
!7707 = !DILocation(line: 3763, column: 63, scope: !7691)
!7708 = !DILocation(line: 3763, column: 4, scope: !7691)
!7709 = !DILocation(line: 3766, column: 18, scope: !7691)
!7710 = !DILocation(line: 3766, column: 9, scope: !7691)
!7711 = !DILocation(line: 3766, column: 7, scope: !7691)
!7712 = !DILocation(line: 3767, column: 8, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 3767, column: 8)
!7714 = !DILocation(line: 3767, column: 8, scope: !7691)
!7715 = !DILocation(line: 3768, column: 25, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 3767, column: 12)
!7717 = !DILocation(line: 3768, column: 28, scope: !7716)
!7718 = !DILocation(line: 3768, column: 5, scope: !7716)
!7719 = !DILocation(line: 3769, column: 13, scope: !7716)
!7720 = !DILocation(line: 3769, column: 11, scope: !7716)
!7721 = !DILocation(line: 3770, column: 51, scope: !7716)
!7722 = !DILocation(line: 3770, column: 58, scope: !7716)
!7723 = !DILocation(line: 3770, column: 32, scope: !7716)
!7724 = !DILocation(line: 3770, column: 5, scope: !7716)
!7725 = !DILocation(line: 3770, column: 12, scope: !7716)
!7726 = !DILocation(line: 3770, column: 30, scope: !7716)
!7727 = !DILocation(line: 3771, column: 24, scope: !7716)
!7728 = !DILocation(line: 3771, column: 31, scope: !7716)
!7729 = !DILocation(line: 3771, column: 38, scope: !7716)
!7730 = !DILocation(line: 3771, column: 5, scope: !7716)
!7731 = !DILocation(line: 3772, column: 29, scope: !7716)
!7732 = !DILocation(line: 3772, column: 36, scope: !7716)
!7733 = !DILocation(line: 3772, column: 5, scope: !7716)
!7734 = !DILocation(line: 3773, column: 4, scope: !7716)
!7735 = !DILocation(line: 3775, column: 2, scope: !7676)
!7736 = !DILocation(line: 3777, column: 13, scope: !7518)
!7737 = !DILocation(line: 3777, column: 20, scope: !7518)
!7738 = !DILocation(line: 3777, column: 27, scope: !7518)
!7739 = !DILocation(line: 3777, column: 34, scope: !7518)
!7740 = !DILocation(line: 3777, column: 2, scope: !7518)
!7741 = !DILocation(line: 3778, column: 13, scope: !7518)
!7742 = !DILocation(line: 3778, column: 18, scope: !7518)
!7743 = !DILocation(line: 3778, column: 29, scope: !7518)
!7744 = !DILocation(line: 3778, column: 36, scope: !7518)
!7745 = !DILocation(line: 3778, column: 2, scope: !7518)
!7746 = !DILocation(line: 3782, column: 14, scope: !7518)
!7747 = !DILocation(line: 3782, column: 2, scope: !7518)
!7748 = !DILocation(line: 3782, column: 9, scope: !7518)
!7749 = !DILocation(line: 3782, column: 12, scope: !7518)
!7750 = !DILocation(line: 3784, column: 17, scope: !7518)
!7751 = !DILocation(line: 3784, column: 2, scope: !7518)
!7752 = !DILocation(line: 3784, column: 9, scope: !7518)
!7753 = !DILocation(line: 3784, column: 15, scope: !7518)
!7754 = !DILocation(line: 3787, column: 31, scope: !7518)
!7755 = !DILocation(line: 3787, column: 38, scope: !7518)
!7756 = !DILocation(line: 3787, column: 42, scope: !7518)
!7757 = !DILocation(line: 3787, column: 48, scope: !7518)
!7758 = !DILocation(line: 3787, column: 52, scope: !7518)
!7759 = !DILocation(line: 3787, column: 59, scope: !7518)
!7760 = !DILocation(line: 3787, column: 2, scope: !7518)
!7761 = !DILocation(line: 3789, column: 15, scope: !7518)
!7762 = !DILocation(line: 3789, column: 19, scope: !7518)
!7763 = !DILocation(line: 3789, column: 25, scope: !7518)
!7764 = !DILocation(line: 3789, column: 29, scope: !7518)
!7765 = !DILocation(line: 3789, column: 2, scope: !7518)
!7766 = !DILocation(line: 3790, column: 13, scope: !7518)
!7767 = !DILocation(line: 3790, column: 18, scope: !7518)
!7768 = !DILocation(line: 3790, column: 25, scope: !7518)
!7769 = !DILocation(line: 3790, column: 29, scope: !7518)
!7770 = !DILocation(line: 3790, column: 35, scope: !7518)
!7771 = !DILocation(line: 3790, column: 2, scope: !7518)
!7772 = !DILocation(line: 3791, column: 12, scope: !7518)
!7773 = !DILocation(line: 3791, column: 17, scope: !7518)
!7774 = !DILocation(line: 3791, column: 2, scope: !7518)
!7775 = !DILocation(line: 3792, column: 13, scope: !7518)
!7776 = !DILocation(line: 3792, column: 18, scope: !7518)
!7777 = !DILocation(line: 3792, column: 22, scope: !7518)
!7778 = !DILocation(line: 3792, column: 2, scope: !7518)
!7779 = !DILocation(line: 3793, column: 12, scope: !7518)
!7780 = !DILocation(line: 3793, column: 17, scope: !7518)
!7781 = !DILocation(line: 3793, column: 2, scope: !7518)
!7782 = !DILocation(line: 3794, column: 18, scope: !7518)
!7783 = !DILocation(line: 3794, column: 25, scope: !7518)
!7784 = !DILocation(line: 3794, column: 43, scope: !7518)
!7785 = !DILocation(line: 3794, column: 2, scope: !7518)
!7786 = !DILocation(line: 3796, column: 30, scope: !7518)
!7787 = !DILocation(line: 3796, column: 115, scope: !7518)
!7788 = !DILocation(line: 3797, column: 30, scope: !7518)
!7789 = !DILocation(line: 3797, column: 34, scope: !7518)
!7790 = !DILocation(line: 3797, column: 49, scope: !7518)
!7791 = !DILocation(line: 0, scope: !7518)
!7792 = !DILocation(line: 3796, column: 28, scope: !7518)
!7793 = !DILocation(line: 3796, column: 2, scope: !7518)
!7794 = !DILocation(line: 3796, column: 9, scope: !7518)
!7795 = !DILocation(line: 3796, column: 26, scope: !7518)
!7796 = !DILocation(line: 3799, column: 6, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3799, column: 6)
!7798 = !DILocation(line: 3799, column: 13, scope: !7797)
!7799 = !DILocation(line: 3799, column: 6, scope: !7518)
!7800 = !DILocation(line: 3800, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 3800, column: 7)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 3799, column: 31)
!7803 = !DILocation(line: 3800, column: 11, scope: !7801)
!7804 = !DILocation(line: 3800, column: 7, scope: !7802)
!7805 = !DILocalVariable(name: "gravity_object", scope: !7806, file: !3, line: 3801, type: !3739)
!7806 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 3800, column: 27)
!7807 = !DILocation(line: 3801, column: 12, scope: !7806)
!7808 = !DILocation(line: 3801, column: 29, scope: !7806)
!7809 = !DILocation(line: 3801, column: 33, scope: !7806)
!7810 = !DILocation(line: 3803, column: 15, scope: !7806)
!7811 = !DILocation(line: 3803, column: 22, scope: !7806)
!7812 = !DILocation(line: 3803, column: 46, scope: !7806)
!7813 = !DILocation(line: 3803, column: 62, scope: !7806)
!7814 = !DILocation(line: 3803, column: 4, scope: !7806)
!7815 = !DILocation(line: 3804, column: 3, scope: !7806)
!7816 = !DILocation(line: 3806, column: 39, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 3805, column: 8)
!7818 = !DILocation(line: 3806, column: 46, scope: !7817)
!7819 = !DILocation(line: 3806, column: 72, scope: !7817)
!7820 = !DILocation(line: 3806, column: 4, scope: !7817)
!7821 = !DILocation(line: 3806, column: 11, scope: !7817)
!7822 = !DILocation(line: 3806, column: 37, scope: !7817)
!7823 = !DILocation(line: 3807, column: 4, scope: !7817)
!7824 = !DILocation(line: 3807, column: 11, scope: !7817)
!7825 = !DILocation(line: 3807, column: 37, scope: !7817)
!7826 = !DILocation(line: 3811, column: 13, scope: !7802)
!7827 = !DILocation(line: 3811, column: 18, scope: !7802)
!7828 = !DILocation(line: 3811, column: 25, scope: !7802)
!7829 = !DILocation(line: 3811, column: 3, scope: !7802)
!7830 = !DILocation(line: 3812, column: 16, scope: !7802)
!7831 = !DILocation(line: 3812, column: 23, scope: !7802)
!7832 = !DILocation(line: 3812, column: 3, scope: !7802)
!7833 = !DILocation(line: 3813, column: 2, scope: !7802)
!7834 = !DILocation(line: 3816, column: 6, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3816, column: 6)
!7836 = !DILocation(line: 3816, column: 13, scope: !7835)
!7837 = !DILocation(line: 3816, column: 25, scope: !7835)
!7838 = !DILocation(line: 3816, column: 6, scope: !7518)
!7839 = !DILocation(line: 3818, column: 8, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 3818, column: 7)
!7841 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 3816, column: 47)
!7842 = !DILocation(line: 3818, column: 12, scope: !7840)
!7843 = !DILocation(line: 3818, column: 21, scope: !7840)
!7844 = !DILocation(line: 3818, column: 25, scope: !7840)
!7845 = !DILocation(line: 3818, column: 29, scope: !7840)
!7846 = !DILocation(line: 3818, column: 32, scope: !7840)
!7847 = !DILocation(line: 3818, column: 36, scope: !7840)
!7848 = !DILocation(line: 3818, column: 40, scope: !7840)
!7849 = !DILocation(line: 3818, column: 49, scope: !7840)
!7850 = !DILocation(line: 3819, column: 8, scope: !7840)
!7851 = !DILocation(line: 3819, column: 15, scope: !7840)
!7852 = !DILocation(line: 3819, column: 20, scope: !7840)
!7853 = !DILocation(line: 3818, column: 7, scope: !7841)
!7854 = !DILocation(line: 3821, column: 9, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 3821, column: 8)
!7856 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 3820, column: 3)
!7857 = !DILocation(line: 3821, column: 13, scope: !7855)
!7858 = !DILocation(line: 3821, column: 8, scope: !7856)
!7859 = !DILocation(line: 3822, column: 20, scope: !7855)
!7860 = !DILocation(line: 3822, column: 52, scope: !7855)
!7861 = !DILocation(line: 3822, column: 56, scope: !7855)
!7862 = !DILocation(line: 3822, column: 50, scope: !7855)
!7863 = !DILocation(line: 3822, column: 5, scope: !7855)
!7864 = !DILocation(line: 3822, column: 9, scope: !7855)
!7865 = !DILocation(line: 3822, column: 18, scope: !7855)
!7866 = !DILocation(line: 3825, column: 8, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 3825, column: 8)
!7868 = !DILocation(line: 3825, column: 12, scope: !7867)
!7869 = !DILocation(line: 3825, column: 8, scope: !7856)
!7870 = !DILocation(line: 3826, column: 12, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 3825, column: 24)
!7872 = !DILocation(line: 3826, column: 16, scope: !7871)
!7873 = !DILocation(line: 3826, column: 5, scope: !7871)
!7874 = !DILocation(line: 3826, column: 26, scope: !7871)
!7875 = !DILocation(line: 3826, column: 30, scope: !7871)
!7876 = !DILocation(line: 3826, column: 42, scope: !7871)
!7877 = !DILocation(line: 3826, column: 46, scope: !7871)
!7878 = !DILocation(line: 3827, column: 4, scope: !7871)
!7879 = !DILocation(line: 3829, column: 12, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 3829, column: 5)
!7881 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 3828, column: 9)
!7882 = !DILocation(line: 3829, column: 10, scope: !7880)
!7883 = !DILocation(line: 3829, column: 17, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 3829, column: 5)
!7885 = !DILocation(line: 3829, column: 21, scope: !7884)
!7886 = !DILocation(line: 3829, column: 25, scope: !7884)
!7887 = !DILocation(line: 3829, column: 19, scope: !7884)
!7888 = !DILocation(line: 3829, column: 5, scope: !7880)
!7889 = !DILocation(line: 3830, column: 17, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 3829, column: 39)
!7891 = !DILocation(line: 3830, column: 21, scope: !7890)
!7892 = !DILocation(line: 3830, column: 30, scope: !7890)
!7893 = !DILocation(line: 3830, column: 34, scope: !7890)
!7894 = !DILocation(line: 3830, column: 38, scope: !7890)
!7895 = !DILocation(line: 3830, column: 44, scope: !7890)
!7896 = !DILocation(line: 3830, column: 47, scope: !7890)
!7897 = !DILocation(line: 3830, column: 6, scope: !7890)
!7898 = !DILocation(line: 3831, column: 5, scope: !7890)
!7899 = !DILocation(line: 3829, column: 34, scope: !7884)
!7900 = !DILocation(line: 3829, column: 5, scope: !7884)
!7901 = distinct !{!7901, !7888, !7902}
!7902 = !DILocation(line: 3831, column: 5, scope: !7880)
!7903 = !DILocation(line: 3833, column: 3, scope: !7856)
!7904 = !DILocation(line: 3835, column: 7, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 3835, column: 7)
!7906 = !DILocation(line: 3835, column: 11, scope: !7905)
!7907 = !DILocation(line: 3835, column: 7, scope: !7841)
!7908 = !DILocation(line: 3838, column: 29, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 3835, column: 15)
!7910 = !DILocation(line: 3838, column: 33, scope: !7909)
!7911 = !DILocation(line: 3838, column: 4, scope: !7909)
!7912 = !DILocation(line: 3839, column: 3, scope: !7909)
!7913 = !DILocation(line: 3840, column: 2, scope: !7841)
!7914 = !DILocation(line: 3843, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3843, column: 6)
!7916 = !DILocation(line: 3843, column: 13, scope: !7915)
!7917 = !DILocation(line: 3843, column: 18, scope: !7915)
!7918 = !DILocation(line: 3843, column: 6, scope: !7518)
!7919 = !DILocation(line: 3844, column: 7, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 3844, column: 7)
!7921 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 3843, column: 36)
!7922 = !DILocation(line: 3844, column: 11, scope: !7920)
!7923 = !DILocation(line: 3844, column: 7, scope: !7921)
!7924 = !DILocation(line: 3845, column: 24, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 3844, column: 25)
!7926 = !DILocation(line: 3845, column: 56, scope: !7925)
!7927 = !DILocation(line: 3845, column: 60, scope: !7925)
!7928 = !DILocation(line: 3845, column: 54, scope: !7925)
!7929 = !DILocation(line: 3845, column: 4, scope: !7925)
!7930 = !DILocation(line: 3845, column: 11, scope: !7925)
!7931 = !DILocation(line: 3845, column: 22, scope: !7925)
!7932 = !DILocation(line: 3846, column: 11, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3846, column: 4)
!7934 = !DILocation(line: 3846, column: 9, scope: !7933)
!7935 = !DILocation(line: 3846, column: 16, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 3846, column: 4)
!7937 = !DILocation(line: 3846, column: 20, scope: !7936)
!7938 = !DILocation(line: 3846, column: 24, scope: !7936)
!7939 = !DILocation(line: 3846, column: 18, scope: !7936)
!7940 = !DILocation(line: 3846, column: 4, scope: !7933)
!7941 = !DILocation(line: 3847, column: 16, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 3846, column: 38)
!7943 = !DILocation(line: 3847, column: 23, scope: !7942)
!7944 = !DILocation(line: 3847, column: 34, scope: !7942)
!7945 = !DILocation(line: 3847, column: 38, scope: !7942)
!7946 = !DILocation(line: 3847, column: 42, scope: !7942)
!7947 = !DILocation(line: 3847, column: 55, scope: !7942)
!7948 = !DILocation(line: 3847, column: 5, scope: !7942)
!7949 = !DILocation(line: 3848, column: 4, scope: !7942)
!7950 = !DILocation(line: 3846, column: 33, scope: !7936)
!7951 = !DILocation(line: 3846, column: 4, scope: !7936)
!7952 = distinct !{!7952, !7940, !7953}
!7953 = !DILocation(line: 3848, column: 4, scope: !7933)
!7954 = !DILocation(line: 3849, column: 3, scope: !7925)
!7955 = !DILocation(line: 3851, column: 3, scope: !7921)
!7956 = !DILocation(line: 3851, column: 10, scope: !7921)
!7957 = !DILocation(line: 3851, column: 19, scope: !7921)
!7958 = !DILocation(line: 3852, column: 2, scope: !7921)
!7959 = !DILocation(line: 3854, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3854, column: 6)
!7961 = !DILocation(line: 3854, column: 6, scope: !7518)
!7962 = !DILocation(line: 3859, column: 9, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3859, column: 7)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 3858, column: 2)
!7965 = !DILocation(line: 3859, column: 16, scope: !7963)
!7966 = !DILocation(line: 3859, column: 21, scope: !7963)
!7967 = !DILocation(line: 3859, column: 7, scope: !7964)
!7968 = !DILocation(line: 3860, column: 4, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 3859, column: 42)
!7970 = !DILocation(line: 3860, column: 11, scope: !7969)
!7971 = !DILocation(line: 3860, column: 20, scope: !7969)
!7972 = !DILocation(line: 3861, column: 3, scope: !7969)
!7973 = !DILocation(line: 3862, column: 2, scope: !7964)
!7974 = !DILocation(line: 3864, column: 2, scope: !7518)
!7975 = !DILocation(line: 3864, column: 9, scope: !7518)
!7976 = !DILocation(line: 3864, column: 20, scope: !7518)
!7977 = !DILocation(line: 3867, column: 6, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3867, column: 6)
!7979 = !DILocation(line: 3867, column: 13, scope: !7978)
!7980 = !DILocation(line: 3867, column: 25, scope: !7978)
!7981 = !DILocation(line: 3867, column: 6, scope: !7518)
!7982 = !DILocation(line: 3868, column: 37, scope: !7978)
!7983 = !DILocation(line: 3868, column: 44, scope: !7978)
!7984 = !DILocation(line: 3868, column: 17, scope: !7978)
!7985 = !DILocation(line: 3868, column: 3, scope: !7978)
!7986 = !DILocation(line: 3868, column: 10, scope: !7978)
!7987 = !DILocation(line: 3868, column: 15, scope: !7978)
!7988 = !DILocation(line: 3872, column: 19, scope: !7518)
!7989 = !DILocation(line: 3872, column: 23, scope: !7518)
!7990 = !DILocation(line: 3872, column: 2, scope: !7518)
!7991 = !DILocation(line: 3873, column: 1, scope: !7518)
!7992 = distinct !DISubprogram(name: "sculpt_tool_name", scope: !3, file: !3, line: 3529, type: !7993, scopeLine: 3530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{!486, !6}
!7995 = !DILocalVariable(name: "sd", arg: 1, scope: !7992, file: !3, line: 3529, type: !6)
!7996 = !DILocation(line: 3529, column: 45, scope: !7992)
!7997 = !DILocalVariable(name: "brush", scope: !7992, file: !3, line: 3531, type: !2749)
!7998 = !DILocation(line: 3531, column: 9, scope: !7992)
!7999 = !DILocation(line: 3531, column: 34, scope: !7992)
!8000 = !DILocation(line: 3531, column: 38, scope: !7992)
!8001 = !DILocation(line: 3531, column: 17, scope: !7992)
!8002 = !DILocation(line: 3533, column: 27, scope: !7992)
!8003 = !DILocation(line: 3533, column: 34, scope: !7992)
!8004 = !DILocation(line: 3533, column: 10, scope: !7992)
!8005 = !DILocation(line: 3533, column: 2, scope: !7992)
!8006 = !DILocation(line: 3535, column: 4, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 3533, column: 47)
!8008 = !DILocation(line: 3537, column: 4, scope: !8007)
!8009 = !DILocation(line: 3539, column: 4, scope: !8007)
!8010 = !DILocation(line: 3541, column: 4, scope: !8007)
!8011 = !DILocation(line: 3543, column: 4, scope: !8007)
!8012 = !DILocation(line: 3545, column: 4, scope: !8007)
!8013 = !DILocation(line: 3547, column: 4, scope: !8007)
!8014 = !DILocation(line: 3549, column: 4, scope: !8007)
!8015 = !DILocation(line: 3551, column: 4, scope: !8007)
!8016 = !DILocation(line: 3553, column: 4, scope: !8007)
!8017 = !DILocation(line: 3555, column: 4, scope: !8007)
!8018 = !DILocation(line: 3557, column: 4, scope: !8007)
!8019 = !DILocation(line: 3559, column: 4, scope: !8007)
!8020 = !DILocation(line: 3561, column: 4, scope: !8007)
!8021 = !DILocation(line: 3563, column: 4, scope: !8007)
!8022 = !DILocation(line: 3565, column: 4, scope: !8007)
!8023 = !DILocation(line: 3567, column: 4, scope: !8007)
!8024 = !DILocation(line: 3569, column: 4, scope: !8007)
!8025 = !DILocation(line: 3571, column: 4, scope: !8007)
!8026 = !DILocation(line: 3574, column: 2, scope: !7992)
!8027 = !DILocation(line: 3575, column: 1, scope: !7992)
!8028 = distinct !DISubprogram(name: "max_ff", scope: !8029, file: !8029, line: 206, type: !8030, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8029 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!153, !153, !153}
!8032 = !DILocalVariable(name: "a", arg: 1, scope: !8028, file: !8029, line: 206, type: !153)
!8033 = !DILocation(line: 206, column: 28, scope: !8028)
!8034 = !DILocalVariable(name: "b", arg: 2, scope: !8028, file: !8029, line: 206, type: !153)
!8035 = !DILocation(line: 206, column: 37, scope: !8028)
!8036 = !DILocation(line: 208, column: 10, scope: !8028)
!8037 = !DILocation(line: 208, column: 14, scope: !8028)
!8038 = !DILocation(line: 208, column: 12, scope: !8028)
!8039 = !DILocation(line: 208, column: 9, scope: !8028)
!8040 = !DILocation(line: 208, column: 19, scope: !8028)
!8041 = !DILocation(line: 208, column: 23, scope: !8028)
!8042 = !DILocation(line: 208, column: 2, scope: !8028)
!8043 = distinct !DISubprogram(name: "sculpt_init_mirror_clipping", scope: !3, file: !3, line: 3591, type: !8044, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{null, !3739, !5374}
!8046 = !DILocalVariable(name: "ob", arg: 1, scope: !8043, file: !3, line: 3591, type: !3739)
!8047 = !DILocation(line: 3591, column: 49, scope: !8043)
!8048 = !DILocalVariable(name: "ss", arg: 2, scope: !8043, file: !3, line: 3591, type: !5374)
!8049 = !DILocation(line: 3591, column: 68, scope: !8043)
!8050 = !DILocalVariable(name: "md", scope: !8043, file: !3, line: 3593, type: !8051)
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!8052 = !DILocation(line: 3593, column: 16, scope: !8043)
!8053 = !DILocalVariable(name: "i", scope: !8043, file: !3, line: 3594, type: !57)
!8054 = !DILocation(line: 3594, column: 6, scope: !8043)
!8055 = !DILocation(line: 3596, column: 12, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 3596, column: 2)
!8057 = !DILocation(line: 3596, column: 16, scope: !8056)
!8058 = !DILocation(line: 3596, column: 26, scope: !8056)
!8059 = !DILocation(line: 3596, column: 10, scope: !8056)
!8060 = !DILocation(line: 3596, column: 7, scope: !8056)
!8061 = !DILocation(line: 3596, column: 33, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 3596, column: 2)
!8063 = !DILocation(line: 3596, column: 2, scope: !8056)
!8064 = !DILocation(line: 3597, column: 7, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3597, column: 7)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 3596, column: 52)
!8067 = !DILocation(line: 3597, column: 11, scope: !8065)
!8068 = !DILocation(line: 3597, column: 16, scope: !8065)
!8069 = !DILocation(line: 3597, column: 40, scope: !8065)
!8070 = !DILocation(line: 3598, column: 8, scope: !8065)
!8071 = !DILocation(line: 3598, column: 12, scope: !8065)
!8072 = !DILocation(line: 3598, column: 17, scope: !8065)
!8073 = !DILocation(line: 3597, column: 7, scope: !8066)
!8074 = !DILocalVariable(name: "mmd", scope: !8075, file: !3, line: 3600, type: !5151)
!8075 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 3599, column: 3)
!8076 = !DILocation(line: 3600, column: 24, scope: !8075)
!8077 = !DILocation(line: 3600, column: 52, scope: !8075)
!8078 = !DILocation(line: 3600, column: 30, scope: !8075)
!8079 = !DILocation(line: 3602, column: 8, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 3602, column: 8)
!8081 = !DILocation(line: 3602, column: 13, scope: !8080)
!8082 = !DILocation(line: 3602, column: 18, scope: !8080)
!8083 = !DILocation(line: 3602, column: 8, scope: !8075)
!8084 = !DILocation(line: 3604, column: 12, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 3604, column: 5)
!8086 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 3602, column: 38)
!8087 = !DILocation(line: 3604, column: 10, scope: !8085)
!8088 = !DILocation(line: 3604, column: 17, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 3604, column: 5)
!8090 = !DILocation(line: 3604, column: 19, scope: !8089)
!8091 = !DILocation(line: 3604, column: 5, scope: !8085)
!8092 = !DILocation(line: 3605, column: 10, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3605, column: 10)
!8094 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 3604, column: 29)
!8095 = !DILocation(line: 3605, column: 15, scope: !8093)
!8096 = !DILocation(line: 3605, column: 41, scope: !8093)
!8097 = !DILocation(line: 3605, column: 38, scope: !8093)
!8098 = !DILocation(line: 3605, column: 20, scope: !8093)
!8099 = !DILocation(line: 3605, column: 10, scope: !8094)
!8100 = !DILocation(line: 3607, column: 36, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 3605, column: 45)
!8102 = !DILocation(line: 3607, column: 33, scope: !8101)
!8103 = !DILocation(line: 3607, column: 7, scope: !8101)
!8104 = !DILocation(line: 3607, column: 11, scope: !8101)
!8105 = !DILocation(line: 3607, column: 18, scope: !8101)
!8106 = !DILocation(line: 3607, column: 23, scope: !8101)
!8107 = !DILocation(line: 3610, column: 11, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 3610, column: 11)
!8109 = !DILocation(line: 3610, column: 16, scope: !8108)
!8110 = !DILocation(line: 3611, column: 11, scope: !8108)
!8111 = !DILocation(line: 3611, column: 15, scope: !8108)
!8112 = !DILocation(line: 3611, column: 22, scope: !8108)
!8113 = !DILocation(line: 3611, column: 37, scope: !8108)
!8114 = !DILocation(line: 3610, column: 26, scope: !8108)
!8115 = !DILocation(line: 3610, column: 11, scope: !8101)
!8116 = !DILocation(line: 3614, column: 12, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 3612, column: 7)
!8118 = !DILocation(line: 3614, column: 17, scope: !8117)
!8119 = !DILocation(line: 3613, column: 8, scope: !8117)
!8120 = !DILocation(line: 3613, column: 12, scope: !8117)
!8121 = !DILocation(line: 3613, column: 19, scope: !8117)
!8122 = !DILocation(line: 3613, column: 34, scope: !8117)
!8123 = !DILocation(line: 3613, column: 37, scope: !8117)
!8124 = !DILocation(line: 3615, column: 7, scope: !8117)
!8125 = !DILocation(line: 3616, column: 6, scope: !8101)
!8126 = !DILocation(line: 3617, column: 5, scope: !8094)
!8127 = !DILocation(line: 3604, column: 24, scope: !8089)
!8128 = !DILocation(line: 3604, column: 5, scope: !8089)
!8129 = distinct !{!8129, !8091, !8130}
!8130 = !DILocation(line: 3617, column: 5, scope: !8085)
!8131 = !DILocation(line: 3618, column: 4, scope: !8086)
!8132 = !DILocation(line: 3619, column: 3, scope: !8075)
!8133 = !DILocation(line: 3620, column: 2, scope: !8066)
!8134 = !DILocation(line: 3596, column: 42, scope: !8062)
!8135 = !DILocation(line: 3596, column: 46, scope: !8062)
!8136 = !DILocation(line: 3596, column: 40, scope: !8062)
!8137 = !DILocation(line: 3596, column: 2, scope: !8062)
!8138 = distinct !{!8138, !8063, !8139}
!8139 = !DILocation(line: 3620, column: 2, scope: !8056)
!8140 = !DILocation(line: 3621, column: 1, scope: !8043)
!8141 = distinct !DISubprogram(name: "copy_v2_v2", scope: !5234, file: !5234, line: 58, type: !5260, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8142 = !DILocalVariable(name: "r", arg: 1, scope: !8141, file: !5234, line: 58, type: !359)
!8143 = !DILocation(line: 58, column: 31, scope: !8141)
!8144 = !DILocalVariable(name: "a", arg: 2, scope: !8141, file: !5234, line: 58, type: !3251)
!8145 = !DILocation(line: 58, column: 49, scope: !8141)
!8146 = !DILocation(line: 60, column: 9, scope: !8141)
!8147 = !DILocation(line: 60, column: 2, scope: !8141)
!8148 = !DILocation(line: 60, column: 7, scope: !8141)
!8149 = !DILocation(line: 61, column: 9, scope: !8141)
!8150 = !DILocation(line: 61, column: 2, scope: !8141)
!8151 = !DILocation(line: 61, column: 7, scope: !8141)
!8152 = !DILocation(line: 62, column: 1, scope: !8141)
!8153 = distinct !DISubprogram(name: "zero_v2", scope: !5234, file: !5234, line: 37, type: !6828, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8154 = !DILocalVariable(name: "r", arg: 1, scope: !8153, file: !5234, line: 37, type: !359)
!8155 = !DILocation(line: 37, column: 28, scope: !8153)
!8156 = !DILocation(line: 39, column: 2, scope: !8153)
!8157 = !DILocation(line: 39, column: 7, scope: !8153)
!8158 = !DILocation(line: 40, column: 2, scope: !8153)
!8159 = !DILocation(line: 40, column: 7, scope: !8153)
!8160 = !DILocation(line: 41, column: 1, scope: !8153)
!8161 = distinct !DISubprogram(name: "sculpt_omp_start", scope: !3, file: !3, line: 3623, type: !8162, scopeLine: 3624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{null, !6, !5374}
!8164 = !DILocalVariable(name: "sd", arg: 1, scope: !8161, file: !3, line: 3623, type: !6)
!8165 = !DILocation(line: 3623, column: 38, scope: !8161)
!8166 = !DILocalVariable(name: "ss", arg: 2, scope: !8161, file: !3, line: 3623, type: !5374)
!8167 = !DILocation(line: 3623, column: 57, scope: !8161)
!8168 = !DILocalVariable(name: "cache", scope: !8161, file: !3, line: 3625, type: !5642)
!8169 = !DILocation(line: 3625, column: 15, scope: !8161)
!8170 = !DILocation(line: 3625, column: 23, scope: !8161)
!8171 = !DILocation(line: 3625, column: 27, scope: !8161)
!8172 = !DILocation(line: 3650, column: 8, scope: !8161)
!8173 = !DILocation(line: 3651, column: 2, scope: !8161)
!8174 = !DILocation(line: 3651, column: 9, scope: !8161)
!8175 = !DILocation(line: 3651, column: 21, scope: !8161)
!8176 = !DILocation(line: 3653, column: 6, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 3653, column: 6)
!8178 = !DILocation(line: 3653, column: 10, scope: !8177)
!8179 = !DILocation(line: 3653, column: 6, scope: !8161)
!8180 = !DILocalVariable(name: "i", scope: !8181, file: !3, line: 3654, type: !57)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3653, column: 20)
!8182 = !DILocation(line: 3654, column: 7, scope: !8181)
!8183 = !DILocalVariable(name: "gridsize", scope: !8181, file: !3, line: 3654, type: !57)
!8184 = !DILocation(line: 3654, column: 10, scope: !8181)
!8185 = !DILocalVariable(name: "array_mem_size", scope: !8181, file: !3, line: 3654, type: !57)
!8186 = !DILocation(line: 3654, column: 20, scope: !8181)
!8187 = !DILocation(line: 3655, column: 27, scope: !8181)
!8188 = !DILocation(line: 3655, column: 31, scope: !8181)
!8189 = !DILocation(line: 3655, column: 3, scope: !8181)
!8190 = !DILocation(line: 3658, column: 20, scope: !8181)
!8191 = !DILocation(line: 3658, column: 27, scope: !8181)
!8192 = !DILocation(line: 3658, column: 39, scope: !8181)
!8193 = !DILocation(line: 3658, column: 18, scope: !8181)
!8194 = !DILocation(line: 3660, column: 23, scope: !8181)
!8195 = !DILocation(line: 3660, column: 35, scope: !8181)
!8196 = !DILocation(line: 3660, column: 3, scope: !8181)
!8197 = !DILocation(line: 3660, column: 10, scope: !8181)
!8198 = !DILocation(line: 3660, column: 21, scope: !8181)
!8199 = !DILocation(line: 3661, column: 22, scope: !8181)
!8200 = !DILocation(line: 3661, column: 34, scope: !8181)
!8201 = !DILocation(line: 3661, column: 3, scope: !8181)
!8202 = !DILocation(line: 3661, column: 10, scope: !8181)
!8203 = !DILocation(line: 3661, column: 20, scope: !8181)
!8204 = !DILocation(line: 3662, column: 25, scope: !8181)
!8205 = !DILocation(line: 3662, column: 37, scope: !8181)
!8206 = !DILocation(line: 3662, column: 3, scope: !8181)
!8207 = !DILocation(line: 3662, column: 10, scope: !8181)
!8208 = !DILocation(line: 3662, column: 23, scope: !8181)
!8209 = !DILocation(line: 3663, column: 24, scope: !8181)
!8210 = !DILocation(line: 3663, column: 36, scope: !8181)
!8211 = !DILocation(line: 3663, column: 3, scope: !8181)
!8212 = !DILocation(line: 3663, column: 10, scope: !8181)
!8213 = !DILocation(line: 3663, column: 22, scope: !8181)
!8214 = !DILocation(line: 3665, column: 10, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 3665, column: 3)
!8216 = !DILocation(line: 3665, column: 8, scope: !8215)
!8217 = !DILocation(line: 3665, column: 15, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 3665, column: 3)
!8219 = !DILocation(line: 3665, column: 19, scope: !8218)
!8220 = !DILocation(line: 3665, column: 26, scope: !8218)
!8221 = !DILocation(line: 3665, column: 17, scope: !8218)
!8222 = !DILocation(line: 3665, column: 3, scope: !8215)
!8223 = !DILocalVariable(name: "row_size", scope: !8224, file: !3, line: 3666, type: !8225)
!8224 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 3665, column: 44)
!8225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8226)
!8226 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !8227, line: 46, baseType: !2012)
!8227 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!8228 = !DILocation(line: 3666, column: 17, scope: !8224)
!8229 = !DILocation(line: 3666, column: 44, scope: !8224)
!8230 = !DILocation(line: 3666, column: 42, scope: !8224)
!8231 = !DILocalVariable(name: "co_row_size", scope: !8224, file: !3, line: 3667, type: !8225)
!8232 = !DILocation(line: 3667, column: 17, scope: !8224)
!8233 = !DILocation(line: 3667, column: 35, scope: !8224)
!8234 = !DILocation(line: 3667, column: 33, scope: !8224)
!8235 = !DILocation(line: 3669, column: 26, scope: !8224)
!8236 = !DILocation(line: 3669, column: 38, scope: !8224)
!8237 = !DILocation(line: 3669, column: 4, scope: !8224)
!8238 = !DILocation(line: 3669, column: 11, scope: !8224)
!8239 = !DILocation(line: 3669, column: 21, scope: !8224)
!8240 = !DILocation(line: 3669, column: 24, scope: !8224)
!8241 = !DILocation(line: 3670, column: 27, scope: !8224)
!8242 = !DILocation(line: 3670, column: 39, scope: !8224)
!8243 = !DILocation(line: 3670, column: 53, scope: !8224)
!8244 = !DILocation(line: 3670, column: 51, scope: !8224)
!8245 = !DILocation(line: 3670, column: 4, scope: !8224)
!8246 = !DILocation(line: 3670, column: 11, scope: !8224)
!8247 = !DILocation(line: 3670, column: 22, scope: !8224)
!8248 = !DILocation(line: 3670, column: 25, scope: !8224)
!8249 = !DILocation(line: 3671, column: 28, scope: !8224)
!8250 = !DILocation(line: 3671, column: 40, scope: !8224)
!8251 = !DILocation(line: 3671, column: 4, scope: !8224)
!8252 = !DILocation(line: 3671, column: 11, scope: !8224)
!8253 = !DILocation(line: 3671, column: 23, scope: !8224)
!8254 = !DILocation(line: 3671, column: 26, scope: !8224)
!8255 = !DILocation(line: 3672, column: 29, scope: !8224)
!8256 = !DILocation(line: 3672, column: 41, scope: !8224)
!8257 = !DILocation(line: 3672, column: 52, scope: !8224)
!8258 = !DILocation(line: 3672, column: 50, scope: !8224)
!8259 = !DILocation(line: 3672, column: 4, scope: !8224)
!8260 = !DILocation(line: 3672, column: 11, scope: !8224)
!8261 = !DILocation(line: 3672, column: 24, scope: !8224)
!8262 = !DILocation(line: 3672, column: 27, scope: !8224)
!8263 = !DILocation(line: 3673, column: 3, scope: !8224)
!8264 = !DILocation(line: 3665, column: 40, scope: !8218)
!8265 = !DILocation(line: 3665, column: 3, scope: !8218)
!8266 = distinct !{!8266, !8222, !8267}
!8267 = !DILocation(line: 3673, column: 3, scope: !8215)
!8268 = !DILocation(line: 3674, column: 2, scope: !8181)
!8269 = !DILocation(line: 3675, column: 1, scope: !8161)
!8270 = distinct !DISubprogram(name: "sculpt_update_cache_variants", scope: !3, file: !3, line: 3954, type: !8271, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{null, !5279, !6, !3739, !7110}
!8273 = !DILocalVariable(name: "C", arg: 1, scope: !8270, file: !3, line: 3954, type: !5279)
!8274 = !DILocation(line: 3954, column: 52, scope: !8270)
!8275 = !DILocalVariable(name: "sd", arg: 2, scope: !8270, file: !3, line: 3954, type: !6)
!8276 = !DILocation(line: 3954, column: 63, scope: !8270)
!8277 = !DILocalVariable(name: "ob", arg: 3, scope: !8270, file: !3, line: 3954, type: !3739)
!8278 = !DILocation(line: 3954, column: 75, scope: !8270)
!8279 = !DILocalVariable(name: "ptr", arg: 4, scope: !8270, file: !3, line: 3955, type: !7110)
!8280 = !DILocation(line: 3955, column: 54, scope: !8270)
!8281 = !DILocalVariable(name: "scene", scope: !8270, file: !3, line: 3957, type: !6167)
!8282 = !DILocation(line: 3957, column: 9, scope: !8270)
!8283 = !DILocation(line: 3957, column: 32, scope: !8270)
!8284 = !DILocation(line: 3957, column: 17, scope: !8270)
!8285 = !DILocalVariable(name: "ups", scope: !8270, file: !3, line: 3958, type: !7119)
!8286 = !DILocation(line: 3958, column: 24, scope: !8270)
!8287 = !DILocation(line: 3958, column: 31, scope: !8270)
!8288 = !DILocation(line: 3958, column: 38, scope: !8270)
!8289 = !DILocation(line: 3958, column: 52, scope: !8270)
!8290 = !DILocalVariable(name: "ss", scope: !8270, file: !3, line: 3959, type: !5374)
!8291 = !DILocation(line: 3959, column: 17, scope: !8270)
!8292 = !DILocation(line: 3959, column: 22, scope: !8270)
!8293 = !DILocation(line: 3959, column: 26, scope: !8270)
!8294 = !DILocalVariable(name: "cache", scope: !8270, file: !3, line: 3960, type: !5642)
!8295 = !DILocation(line: 3960, column: 15, scope: !8270)
!8296 = !DILocation(line: 3960, column: 23, scope: !8270)
!8297 = !DILocation(line: 3960, column: 27, scope: !8270)
!8298 = !DILocalVariable(name: "brush", scope: !8270, file: !3, line: 3961, type: !2749)
!8299 = !DILocation(line: 3961, column: 9, scope: !8270)
!8300 = !DILocation(line: 3961, column: 34, scope: !8270)
!8301 = !DILocation(line: 3961, column: 38, scope: !8270)
!8302 = !DILocation(line: 3961, column: 17, scope: !8270)
!8303 = !DILocation(line: 3965, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 3965, column: 6)
!8305 = !DILocation(line: 3965, column: 13, scope: !8304)
!8306 = !DILocation(line: 3965, column: 24, scope: !8304)
!8307 = !DILocation(line: 3966, column: 9, scope: !8304)
!8308 = !DILocation(line: 3966, column: 16, scope: !8304)
!8309 = !DILocation(line: 3966, column: 21, scope: !8304)
!8310 = !DILocation(line: 3966, column: 39, scope: !8304)
!8311 = !DILocation(line: 3967, column: 9, scope: !8304)
!8312 = !DILocation(line: 3967, column: 16, scope: !8304)
!8313 = !DILocation(line: 3967, column: 28, scope: !8304)
!8314 = !DILocation(line: 3967, column: 55, scope: !8304)
!8315 = !DILocation(line: 3968, column: 9, scope: !8304)
!8316 = !DILocation(line: 3968, column: 16, scope: !8304)
!8317 = !DILocation(line: 3968, column: 28, scope: !8304)
!8318 = !DILocation(line: 3965, column: 6, scope: !8270)
!8319 = !DILocation(line: 3971, column: 23, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3970, column: 2)
!8321 = !DILocation(line: 3971, column: 40, scope: !8320)
!8322 = !DILocation(line: 3971, column: 47, scope: !8320)
!8323 = !DILocation(line: 3971, column: 3, scope: !8320)
!8324 = !DILocation(line: 3972, column: 2, scope: !8320)
!8325 = !DILocation(line: 3974, column: 36, scope: !8270)
!8326 = !DILocation(line: 3974, column: 20, scope: !8270)
!8327 = !DILocation(line: 3974, column: 2, scope: !8270)
!8328 = !DILocation(line: 3974, column: 9, scope: !8270)
!8329 = !DILocation(line: 3974, column: 18, scope: !8270)
!8330 = !DILocation(line: 3975, column: 22, scope: !8270)
!8331 = !DILocation(line: 3975, column: 36, scope: !8270)
!8332 = !DILocation(line: 3975, column: 43, scope: !8270)
!8333 = !DILocation(line: 3975, column: 2, scope: !8270)
!8334 = !DILocation(line: 3982, column: 34, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 3982, column: 6)
!8336 = !DILocation(line: 3982, column: 6, scope: !8335)
!8337 = !DILocation(line: 3982, column: 55, scope: !8335)
!8338 = !DILocation(line: 3982, column: 58, scope: !8335)
!8339 = !DILocation(line: 3982, column: 65, scope: !8335)
!8340 = !DILocation(line: 3982, column: 6, scope: !8270)
!8341 = !DILocation(line: 3983, column: 35, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3982, column: 77)
!8343 = !DILocation(line: 3983, column: 21, scope: !8342)
!8344 = !DILocation(line: 3983, column: 3, scope: !8342)
!8345 = !DILocation(line: 3983, column: 10, scope: !8342)
!8346 = !DILocation(line: 3983, column: 19, scope: !8342)
!8347 = !DILocation(line: 3984, column: 2, scope: !8342)
!8348 = !DILocation(line: 3987, column: 6, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 3987, column: 6)
!8350 = !DILocation(line: 3987, column: 13, scope: !8349)
!8351 = !DILocation(line: 3987, column: 6, scope: !8270)
!8352 = !DILocation(line: 3988, column: 34, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 3988, column: 7)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3987, column: 25)
!8355 = !DILocation(line: 3988, column: 41, scope: !8353)
!8356 = !DILocation(line: 3988, column: 8, scope: !8353)
!8357 = !DILocation(line: 3988, column: 7, scope: !8354)
!8358 = !DILocation(line: 3989, column: 59, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 3988, column: 49)
!8360 = !DILocation(line: 3989, column: 66, scope: !8359)
!8361 = !DILocation(line: 3990, column: 59, scope: !8359)
!8362 = !DILocation(line: 3990, column: 66, scope: !8359)
!8363 = !DILocation(line: 3991, column: 78, scope: !8359)
!8364 = !DILocation(line: 3991, column: 85, scope: !8359)
!8365 = !DILocation(line: 3991, column: 59, scope: !8359)
!8366 = !DILocation(line: 3989, column: 28, scope: !8359)
!8367 = !DILocation(line: 3989, column: 4, scope: !8359)
!8368 = !DILocation(line: 3989, column: 11, scope: !8359)
!8369 = !DILocation(line: 3989, column: 26, scope: !8359)
!8370 = !DILocation(line: 3992, column: 37, scope: !8359)
!8371 = !DILocation(line: 3992, column: 44, scope: !8359)
!8372 = !DILocation(line: 3992, column: 51, scope: !8359)
!8373 = !DILocation(line: 3992, column: 58, scope: !8359)
!8374 = !DILocation(line: 3992, column: 4, scope: !8359)
!8375 = !DILocation(line: 3993, column: 3, scope: !8359)
!8376 = !DILocation(line: 3995, column: 61, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 3994, column: 8)
!8378 = !DILocation(line: 3995, column: 68, scope: !8377)
!8379 = !DILocation(line: 3995, column: 28, scope: !8377)
!8380 = !DILocation(line: 3995, column: 4, scope: !8377)
!8381 = !DILocation(line: 3995, column: 11, scope: !8377)
!8382 = !DILocation(line: 3995, column: 26, scope: !8377)
!8383 = !DILocation(line: 3997, column: 2, scope: !8354)
!8384 = !DILocation(line: 3999, column: 34, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 3999, column: 6)
!8386 = !DILocation(line: 3999, column: 41, scope: !8385)
!8387 = !DILocation(line: 3999, column: 6, scope: !8385)
!8388 = !DILocation(line: 3999, column: 48, scope: !8385)
!8389 = !DILocation(line: 3999, column: 79, scope: !8385)
!8390 = !DILocation(line: 3999, column: 51, scope: !8385)
!8391 = !DILocation(line: 3999, column: 6, scope: !8270)
!8392 = !DILocation(line: 4000, column: 19, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 3999, column: 101)
!8394 = !DILocation(line: 4000, column: 26, scope: !8393)
!8395 = !DILocation(line: 4000, column: 43, scope: !8393)
!8396 = !DILocation(line: 4000, column: 50, scope: !8393)
!8397 = !DILocation(line: 4000, column: 41, scope: !8393)
!8398 = !DILocation(line: 4000, column: 3, scope: !8393)
!8399 = !DILocation(line: 4000, column: 10, scope: !8393)
!8400 = !DILocation(line: 4000, column: 17, scope: !8393)
!8401 = !DILocation(line: 4001, column: 2, scope: !8393)
!8402 = !DILocation(line: 4003, column: 19, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 4002, column: 7)
!8404 = !DILocation(line: 4003, column: 26, scope: !8403)
!8405 = !DILocation(line: 4003, column: 3, scope: !8403)
!8406 = !DILocation(line: 4003, column: 10, scope: !8403)
!8407 = !DILocation(line: 4003, column: 17, scope: !8403)
!8408 = !DILocation(line: 4006, column: 26, scope: !8270)
!8409 = !DILocation(line: 4006, column: 33, scope: !8270)
!8410 = !DILocation(line: 4006, column: 42, scope: !8270)
!8411 = !DILocation(line: 4006, column: 49, scope: !8270)
!8412 = !DILocation(line: 4006, column: 40, scope: !8270)
!8413 = !DILocation(line: 4006, column: 2, scope: !8270)
!8414 = !DILocation(line: 4006, column: 9, scope: !8270)
!8415 = !DILocation(line: 4006, column: 24, scope: !8270)
!8416 = !DILocation(line: 4008, column: 6, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4008, column: 6)
!8418 = !DILocation(line: 4008, column: 13, scope: !8417)
!8419 = !DILocation(line: 4008, column: 18, scope: !8417)
!8420 = !DILocation(line: 4008, column: 6, scope: !8270)
!8421 = !DILocation(line: 4010, column: 7, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 4010, column: 7)
!8423 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 4008, column: 36)
!8424 = !DILocation(line: 4010, column: 14, scope: !8422)
!8425 = !DILocation(line: 4010, column: 19, scope: !8422)
!8426 = !DILocation(line: 4010, column: 7, scope: !8423)
!8427 = !DILocation(line: 4011, column: 24, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 4010, column: 41)
!8429 = !DILocation(line: 4011, column: 41, scope: !8428)
!8430 = !DILocation(line: 4011, column: 48, scope: !8428)
!8431 = !DILocation(line: 4011, column: 4, scope: !8428)
!8432 = !DILocation(line: 4012, column: 3, scope: !8428)
!8433 = !DILocation(line: 4014, column: 50, scope: !8423)
!8434 = !DILocation(line: 4014, column: 57, scope: !8423)
!8435 = !DILocation(line: 4015, column: 50, scope: !8423)
!8436 = !DILocation(line: 4015, column: 57, scope: !8423)
!8437 = !DILocation(line: 4016, column: 50, scope: !8423)
!8438 = !DILocation(line: 4016, column: 55, scope: !8423)
!8439 = !DILocation(line: 4014, column: 19, scope: !8423)
!8440 = !DILocation(line: 4014, column: 3, scope: !8423)
!8441 = !DILocation(line: 4014, column: 10, scope: !8423)
!8442 = !DILocation(line: 4014, column: 17, scope: !8423)
!8443 = !DILocation(line: 4017, column: 27, scope: !8423)
!8444 = !DILocation(line: 4017, column: 34, scope: !8423)
!8445 = !DILocation(line: 4017, column: 43, scope: !8423)
!8446 = !DILocation(line: 4017, column: 50, scope: !8423)
!8447 = !DILocation(line: 4017, column: 41, scope: !8423)
!8448 = !DILocation(line: 4017, column: 3, scope: !8423)
!8449 = !DILocation(line: 4017, column: 10, scope: !8423)
!8450 = !DILocation(line: 4017, column: 25, scope: !8423)
!8451 = !DILocation(line: 4019, column: 14, scope: !8423)
!8452 = !DILocation(line: 4019, column: 21, scope: !8423)
!8453 = !DILocation(line: 4019, column: 40, scope: !8423)
!8454 = !DILocation(line: 4019, column: 47, scope: !8423)
!8455 = !DILocation(line: 4019, column: 3, scope: !8423)
!8456 = !DILocation(line: 4020, column: 2, scope: !8423)
!8457 = !DILocation(line: 4022, column: 28, scope: !8270)
!8458 = !DILocation(line: 4022, column: 33, scope: !8270)
!8459 = !DILocation(line: 4022, column: 37, scope: !8270)
!8460 = !DILocation(line: 4022, column: 2, scope: !8270)
!8461 = !DILocation(line: 4024, column: 6, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4024, column: 6)
!8463 = !DILocation(line: 4024, column: 13, scope: !8462)
!8464 = !DILocation(line: 4024, column: 25, scope: !8462)
!8465 = !DILocation(line: 4024, column: 6, scope: !8270)
!8466 = !DILocation(line: 4025, column: 44, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4024, column: 48)
!8468 = !DILocation(line: 4025, column: 51, scope: !8467)
!8469 = !DILocation(line: 4025, column: 57, scope: !8467)
!8470 = !DILocation(line: 4025, column: 64, scope: !8467)
!8471 = !DILocation(line: 4025, column: 29, scope: !8467)
!8472 = !DILocation(line: 4025, column: 28, scope: !8467)
!8473 = !DILocation(line: 4025, column: 73, scope: !8467)
!8474 = !DILocation(line: 4025, column: 80, scope: !8467)
!8475 = !DILocation(line: 4025, column: 71, scope: !8467)
!8476 = !DILocation(line: 4025, column: 3, scope: !8467)
!8477 = !DILocation(line: 4025, column: 10, scope: !8467)
!8478 = !DILocation(line: 4025, column: 26, scope: !8467)
!8479 = !DILocation(line: 4027, column: 3, scope: !8467)
!8480 = !DILocation(line: 4027, column: 8, scope: !8467)
!8481 = !DILocation(line: 4027, column: 22, scope: !8467)
!8482 = !DILocation(line: 4028, column: 14, scope: !8467)
!8483 = !DILocation(line: 4028, column: 19, scope: !8467)
!8484 = !DILocation(line: 4028, column: 43, scope: !8467)
!8485 = !DILocation(line: 4028, column: 50, scope: !8467)
!8486 = !DILocation(line: 4028, column: 3, scope: !8467)
!8487 = !DILocation(line: 4029, column: 14, scope: !8467)
!8488 = !DILocation(line: 4029, column: 21, scope: !8467)
!8489 = !DILocation(line: 4029, column: 40, scope: !8467)
!8490 = !DILocation(line: 4029, column: 47, scope: !8467)
!8491 = !DILocation(line: 4029, column: 3, scope: !8467)
!8492 = !DILocation(line: 4030, column: 24, scope: !8467)
!8493 = !DILocation(line: 4030, column: 29, scope: !8467)
!8494 = !DILocation(line: 4030, column: 3, scope: !8467)
!8495 = !DILocation(line: 4030, column: 8, scope: !8467)
!8496 = !DILocation(line: 4030, column: 22, scope: !8467)
!8497 = !DILocation(line: 4031, column: 2, scope: !8467)
!8498 = !DILocation(line: 4033, column: 28, scope: !8270)
!8499 = !DILocation(line: 4033, column: 33, scope: !8270)
!8500 = !DILocation(line: 4033, column: 2, scope: !8270)
!8501 = !DILocation(line: 4033, column: 9, scope: !8270)
!8502 = !DILocation(line: 4033, column: 26, scope: !8270)
!8503 = !DILocation(line: 4034, column: 1, scope: !8270)
!8504 = distinct !DISubprogram(name: "sculpt_restore_mesh", scope: !3, file: !3, line: 4233, type: !8505, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{null, !6, !3739}
!8507 = !DILocalVariable(name: "sd", arg: 1, scope: !8504, file: !3, line: 4233, type: !6)
!8508 = !DILocation(line: 4233, column: 41, scope: !8504)
!8509 = !DILocalVariable(name: "ob", arg: 2, scope: !8504, file: !3, line: 4233, type: !3739)
!8510 = !DILocation(line: 4233, column: 53, scope: !8504)
!8511 = !DILocalVariable(name: "ss", scope: !8504, file: !3, line: 4235, type: !5374)
!8512 = !DILocation(line: 4235, column: 17, scope: !8504)
!8513 = !DILocation(line: 4235, column: 22, scope: !8504)
!8514 = !DILocation(line: 4235, column: 26, scope: !8504)
!8515 = !DILocalVariable(name: "brush", scope: !8504, file: !3, line: 4236, type: !2749)
!8516 = !DILocation(line: 4236, column: 9, scope: !8504)
!8517 = !DILocation(line: 4236, column: 34, scope: !8504)
!8518 = !DILocation(line: 4236, column: 38, scope: !8504)
!8519 = !DILocation(line: 4236, column: 17, scope: !8504)
!8520 = !DILocation(line: 4239, column: 7, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 4239, column: 6)
!8522 = !DILocation(line: 4239, column: 14, scope: !8521)
!8523 = !DILocation(line: 4239, column: 19, scope: !8521)
!8524 = !DILocation(line: 4239, column: 37, scope: !8521)
!8525 = !DILocation(line: 4240, column: 7, scope: !8521)
!8526 = !DILocation(line: 4240, column: 14, scope: !8521)
!8527 = !DILocation(line: 4240, column: 26, scope: !8521)
!8528 = !DILocation(line: 4240, column: 46, scope: !8521)
!8529 = !DILocation(line: 4241, column: 35, scope: !8521)
!8530 = !DILocation(line: 4241, column: 39, scope: !8521)
!8531 = !DILocation(line: 4241, column: 46, scope: !8521)
!8532 = !DILocation(line: 4241, column: 50, scope: !8521)
!8533 = !DILocation(line: 4241, column: 57, scope: !8521)
!8534 = !DILocation(line: 4241, column: 7, scope: !8521)
!8535 = !DILocation(line: 4241, column: 65, scope: !8521)
!8536 = !DILocation(line: 4242, column: 7, scope: !8521)
!8537 = !DILocation(line: 4242, column: 14, scope: !8521)
!8538 = !DILocation(line: 4242, column: 19, scope: !8521)
!8539 = !DILocation(line: 4239, column: 6, scope: !8504)
!8540 = !DILocation(line: 4244, column: 25, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 4243, column: 2)
!8542 = !DILocation(line: 4244, column: 29, scope: !8541)
!8543 = !DILocation(line: 4244, column: 3, scope: !8541)
!8544 = !DILocation(line: 4245, column: 2, scope: !8541)
!8545 = !DILocation(line: 4246, column: 1, scope: !8504)
!8546 = distinct !DISubprogram(name: "sculpt_stroke_dynamic_topology", scope: !3, file: !3, line: 347, type: !8547, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!57, !8549, !6733}
!8549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 64)
!8550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5375)
!8551 = !DILocalVariable(name: "ss", arg: 1, scope: !8546, file: !3, line: 347, type: !8549)
!8552 = !DILocation(line: 347, column: 64, scope: !8546)
!8553 = !DILocalVariable(name: "brush", arg: 2, scope: !8546, file: !3, line: 348, type: !6733)
!8554 = !DILocation(line: 348, column: 56, scope: !8546)
!8555 = !DILocation(line: 350, column: 25, scope: !8546)
!8556 = !DILocation(line: 350, column: 29, scope: !8546)
!8557 = !DILocation(line: 350, column: 11, scope: !8546)
!8558 = !DILocation(line: 350, column: 35, scope: !8546)
!8559 = !DILocation(line: 350, column: 50, scope: !8546)
!8560 = !DILocation(line: 352, column: 12, scope: !8546)
!8561 = !DILocation(line: 352, column: 16, scope: !8546)
!8562 = !DILocation(line: 352, column: 22, scope: !8546)
!8563 = !DILocation(line: 352, column: 27, scope: !8546)
!8564 = !DILocation(line: 352, column: 31, scope: !8546)
!8565 = !DILocation(line: 352, column: 38, scope: !8546)
!8566 = !DILocation(line: 352, column: 51, scope: !8546)
!8567 = !DILocation(line: 356, column: 12, scope: !8546)
!8568 = !DILocation(line: 356, column: 19, scope: !8546)
!8569 = !DILocation(line: 356, column: 24, scope: !8546)
!8570 = !DILocation(line: 356, column: 42, scope: !8546)
!8571 = !DILocation(line: 357, column: 12, scope: !8546)
!8572 = !DILocation(line: 357, column: 19, scope: !8546)
!8573 = !DILocation(line: 357, column: 24, scope: !8546)
!8574 = !DILocation(line: 357, column: 42, scope: !8546)
!8575 = !DILocation(line: 359, column: 12, scope: !8546)
!8576 = !DILocation(line: 359, column: 11, scope: !8546)
!8577 = !DILocation(line: 0, scope: !8546)
!8578 = !DILocation(line: 350, column: 2, scope: !8546)
!8579 = distinct !DISubprogram(name: "do_symmetrical_brush_actions", scope: !3, file: !3, line: 3450, type: !8580, scopeLine: 3452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8580 = !DISubroutineType(types: !8581)
!8581 = !{null, !6, !3739, !8582, !7119}
!8582 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushActionFunc", file: !3, line: 3419, baseType: !8583)
!8583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8584, size: 64)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{null, !6, !3739, !2749}
!8586 = !DILocalVariable(name: "sd", arg: 1, scope: !8579, file: !3, line: 3450, type: !6)
!8587 = !DILocation(line: 3450, column: 50, scope: !8579)
!8588 = !DILocalVariable(name: "ob", arg: 2, scope: !8579, file: !3, line: 3450, type: !3739)
!8589 = !DILocation(line: 3450, column: 62, scope: !8579)
!8590 = !DILocalVariable(name: "action", arg: 3, scope: !8579, file: !3, line: 3451, type: !8582)
!8591 = !DILocation(line: 3451, column: 58, scope: !8579)
!8592 = !DILocalVariable(name: "ups", arg: 4, scope: !8579, file: !3, line: 3451, type: !7119)
!8593 = !DILocation(line: 3451, column: 88, scope: !8579)
!8594 = !DILocalVariable(name: "brush", scope: !8579, file: !3, line: 3453, type: !2749)
!8595 = !DILocation(line: 3453, column: 9, scope: !8579)
!8596 = !DILocation(line: 3453, column: 34, scope: !8579)
!8597 = !DILocation(line: 3453, column: 38, scope: !8579)
!8598 = !DILocation(line: 3453, column: 17, scope: !8579)
!8599 = !DILocalVariable(name: "ss", scope: !8579, file: !3, line: 3454, type: !5374)
!8600 = !DILocation(line: 3454, column: 17, scope: !8579)
!8601 = !DILocation(line: 3454, column: 22, scope: !8579)
!8602 = !DILocation(line: 3454, column: 26, scope: !8579)
!8603 = !DILocalVariable(name: "cache", scope: !8579, file: !3, line: 3455, type: !5642)
!8604 = !DILocation(line: 3455, column: 15, scope: !8579)
!8605 = !DILocation(line: 3455, column: 23, scope: !8579)
!8606 = !DILocation(line: 3455, column: 27, scope: !8579)
!8607 = !DILocalVariable(name: "symm", scope: !8579, file: !3, line: 3456, type: !487)
!8608 = !DILocation(line: 3456, column: 13, scope: !8579)
!8609 = !DILocation(line: 3456, column: 20, scope: !8579)
!8610 = !DILocation(line: 3456, column: 24, scope: !8579)
!8611 = !DILocation(line: 3456, column: 30, scope: !8579)
!8612 = !DILocation(line: 3456, column: 45, scope: !8579)
!8613 = !DILocalVariable(name: "i", scope: !8579, file: !3, line: 3457, type: !57)
!8614 = !DILocation(line: 3457, column: 6, scope: !8579)
!8615 = !DILocalVariable(name: "feather", scope: !8579, file: !3, line: 3459, type: !153)
!8616 = !DILocation(line: 3459, column: 8, scope: !8579)
!8617 = !DILocation(line: 3459, column: 40, scope: !8579)
!8618 = !DILocation(line: 3459, column: 44, scope: !8579)
!8619 = !DILocation(line: 3459, column: 48, scope: !8579)
!8620 = !DILocation(line: 3459, column: 18, scope: !8579)
!8621 = !DILocation(line: 3461, column: 36, scope: !8579)
!8622 = !DILocation(line: 3461, column: 40, scope: !8579)
!8623 = !DILocation(line: 3461, column: 47, scope: !8579)
!8624 = !DILocation(line: 3461, column: 56, scope: !8579)
!8625 = !DILocation(line: 3461, column: 21, scope: !8579)
!8626 = !DILocation(line: 3461, column: 2, scope: !8579)
!8627 = !DILocation(line: 3461, column: 9, scope: !8579)
!8628 = !DILocation(line: 3461, column: 19, scope: !8579)
!8629 = !DILocation(line: 3462, column: 20, scope: !8579)
!8630 = !DILocation(line: 3462, column: 2, scope: !8579)
!8631 = !DILocation(line: 3462, column: 9, scope: !8579)
!8632 = !DILocation(line: 3462, column: 18, scope: !8579)
!8633 = !DILocation(line: 3465, column: 9, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 3465, column: 2)
!8635 = !DILocation(line: 3465, column: 7, scope: !8634)
!8636 = !DILocation(line: 3465, column: 14, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 3465, column: 2)
!8638 = !DILocation(line: 3465, column: 19, scope: !8637)
!8639 = !DILocation(line: 3465, column: 16, scope: !8637)
!8640 = !DILocation(line: 3465, column: 2, scope: !8634)
!8641 = !DILocation(line: 3466, column: 7, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 3466, column: 7)
!8643 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 3465, column: 30)
!8644 = !DILocation(line: 3466, column: 9, scope: !8642)
!8645 = !DILocation(line: 3466, column: 14, scope: !8642)
!8646 = !DILocation(line: 3466, column: 18, scope: !8642)
!8647 = !DILocation(line: 3466, column: 25, scope: !8642)
!8648 = !DILocation(line: 3466, column: 23, scope: !8642)
!8649 = !DILocation(line: 3466, column: 27, scope: !8642)
!8650 = !DILocation(line: 3466, column: 31, scope: !8642)
!8651 = !DILocation(line: 3466, column: 36, scope: !8642)
!8652 = !DILocation(line: 3466, column: 41, scope: !8642)
!8653 = !DILocation(line: 3466, column: 44, scope: !8642)
!8654 = !DILocation(line: 3466, column: 46, scope: !8642)
!8655 = !DILocation(line: 3466, column: 52, scope: !8642)
!8656 = !DILocation(line: 3466, column: 56, scope: !8642)
!8657 = !DILocation(line: 3466, column: 61, scope: !8642)
!8658 = !DILocation(line: 3466, column: 66, scope: !8642)
!8659 = !DILocation(line: 3466, column: 70, scope: !8642)
!8660 = !DILocation(line: 3466, column: 72, scope: !8642)
!8661 = !DILocation(line: 3466, column: 77, scope: !8642)
!8662 = !DILocation(line: 3466, column: 80, scope: !8642)
!8663 = !DILocation(line: 3466, column: 82, scope: !8642)
!8664 = !DILocation(line: 3466, column: 7, scope: !8643)
!8665 = !DILocation(line: 3467, column: 34, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3466, column: 91)
!8667 = !DILocation(line: 3467, column: 4, scope: !8666)
!8668 = !DILocation(line: 3467, column: 11, scope: !8666)
!8669 = !DILocation(line: 3467, column: 32, scope: !8666)
!8670 = !DILocation(line: 3468, column: 4, scope: !8666)
!8671 = !DILocation(line: 3468, column: 11, scope: !8666)
!8672 = !DILocation(line: 3468, column: 32, scope: !8666)
!8673 = !DILocation(line: 3470, column: 24, scope: !8666)
!8674 = !DILocation(line: 3470, column: 28, scope: !8666)
!8675 = !DILocation(line: 3470, column: 35, scope: !8666)
!8676 = !DILocation(line: 3470, column: 44, scope: !8666)
!8677 = !DILocation(line: 3470, column: 4, scope: !8666)
!8678 = !DILocation(line: 3471, column: 4, scope: !8666)
!8679 = !DILocation(line: 3471, column: 11, scope: !8666)
!8680 = !DILocation(line: 3471, column: 15, scope: !8666)
!8681 = !DILocation(line: 3471, column: 19, scope: !8666)
!8682 = !DILocation(line: 3473, column: 23, scope: !8666)
!8683 = !DILocation(line: 3473, column: 27, scope: !8666)
!8684 = !DILocation(line: 3473, column: 31, scope: !8666)
!8685 = !DILocation(line: 3473, column: 38, scope: !8666)
!8686 = !DILocation(line: 3473, column: 46, scope: !8666)
!8687 = !DILocation(line: 3473, column: 54, scope: !8666)
!8688 = !DILocation(line: 3473, column: 4, scope: !8666)
!8689 = !DILocation(line: 3474, column: 23, scope: !8666)
!8690 = !DILocation(line: 3474, column: 27, scope: !8666)
!8691 = !DILocation(line: 3474, column: 31, scope: !8666)
!8692 = !DILocation(line: 3474, column: 38, scope: !8666)
!8693 = !DILocation(line: 3474, column: 46, scope: !8666)
!8694 = !DILocation(line: 3474, column: 54, scope: !8666)
!8695 = !DILocation(line: 3474, column: 4, scope: !8666)
!8696 = !DILocation(line: 3475, column: 23, scope: !8666)
!8697 = !DILocation(line: 3475, column: 27, scope: !8666)
!8698 = !DILocation(line: 3475, column: 31, scope: !8666)
!8699 = !DILocation(line: 3475, column: 38, scope: !8666)
!8700 = !DILocation(line: 3475, column: 46, scope: !8666)
!8701 = !DILocation(line: 3475, column: 54, scope: !8666)
!8702 = !DILocation(line: 3475, column: 4, scope: !8666)
!8703 = !DILocation(line: 3476, column: 3, scope: !8666)
!8704 = !DILocation(line: 3477, column: 2, scope: !8643)
!8705 = !DILocation(line: 3465, column: 25, scope: !8637)
!8706 = !DILocation(line: 3465, column: 2, scope: !8637)
!8707 = distinct !{!8707, !8640, !8708}
!8708 = !DILocation(line: 3477, column: 2, scope: !8634)
!8709 = !DILocation(line: 3478, column: 1, scope: !8579)
!8710 = distinct !DISubprogram(name: "sculpt_topology_update", scope: !3, file: !3, line: 3022, type: !8584, scopeLine: 3023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8711 = !DILocalVariable(name: "sd", arg: 1, scope: !8710, file: !3, line: 3022, type: !6)
!8712 = !DILocation(line: 3022, column: 44, scope: !8710)
!8713 = !DILocalVariable(name: "ob", arg: 2, scope: !8710, file: !3, line: 3022, type: !3739)
!8714 = !DILocation(line: 3022, column: 56, scope: !8710)
!8715 = !DILocalVariable(name: "brush", arg: 3, scope: !8710, file: !3, line: 3022, type: !2749)
!8716 = !DILocation(line: 3022, column: 67, scope: !8710)
!8717 = !DILocalVariable(name: "ss", scope: !8710, file: !3, line: 3024, type: !5374)
!8718 = !DILocation(line: 3024, column: 17, scope: !8710)
!8719 = !DILocation(line: 3024, column: 22, scope: !8710)
!8720 = !DILocation(line: 3024, column: 26, scope: !8710)
!8721 = !DILocalVariable(name: "data", scope: !8710, file: !3, line: 3025, type: !8722)
!8722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptSearchSphereData", file: !3, line: 914, baseType: !8723)
!8723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 909, size: 192, elements: !8724)
!8724 = !{!8725, !8726, !8727, !8728}
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !8723, file: !3, line: 910, baseType: !6, size: 64)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !8723, file: !3, line: 911, baseType: !5374, size: 64, offset: 64)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "radius_squared", scope: !8723, file: !3, line: 912, baseType: !153, size: 32, offset: 128)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !8723, file: !3, line: 913, baseType: !2315, size: 8, offset: 160)
!8729 = !DILocation(line: 3025, column: 25, scope: !8710)
!8730 = !DILocalVariable(name: "nodes", scope: !8710, file: !3, line: 3026, type: !3741)
!8731 = !DILocation(line: 3026, column: 13, scope: !8710)
!8732 = !DILocalVariable(name: "radius", scope: !8710, file: !3, line: 3027, type: !153)
!8733 = !DILocation(line: 3027, column: 8, scope: !8710)
!8734 = !DILocalVariable(name: "n", scope: !8710, file: !3, line: 3028, type: !57)
!8735 = !DILocation(line: 3028, column: 6, scope: !8710)
!8736 = !DILocalVariable(name: "totnode", scope: !8710, file: !3, line: 3028, type: !57)
!8737 = !DILocation(line: 3028, column: 9, scope: !8710)
!8738 = !DILocation(line: 3032, column: 12, scope: !8710)
!8739 = !DILocation(line: 3032, column: 7, scope: !8710)
!8740 = !DILocation(line: 3032, column: 10, scope: !8710)
!8741 = !DILocation(line: 3033, column: 12, scope: !8710)
!8742 = !DILocation(line: 3033, column: 7, scope: !8710)
!8743 = !DILocation(line: 3033, column: 10, scope: !8710)
!8744 = !DILocation(line: 3035, column: 11, scope: !8710)
!8745 = !DILocation(line: 3035, column: 15, scope: !8710)
!8746 = !DILocation(line: 3035, column: 22, scope: !8710)
!8747 = !DILocation(line: 3035, column: 29, scope: !8710)
!8748 = !DILocation(line: 3035, column: 9, scope: !8710)
!8749 = !DILocation(line: 3037, column: 24, scope: !8710)
!8750 = !DILocation(line: 3037, column: 33, scope: !8710)
!8751 = !DILocation(line: 3037, column: 31, scope: !8710)
!8752 = !DILocation(line: 3037, column: 7, scope: !8710)
!8753 = !DILocation(line: 3037, column: 22, scope: !8710)
!8754 = !DILocation(line: 3038, column: 18, scope: !8710)
!8755 = !DILocation(line: 3042, column: 51, scope: !8710)
!8756 = !DILocation(line: 3042, column: 55, scope: !8710)
!8757 = !DILocation(line: 3042, column: 62, scope: !8710)
!8758 = !DILocation(line: 3038, column: 7, scope: !8710)
!8759 = !DILocation(line: 3038, column: 16, scope: !8710)
!8760 = !DILocation(line: 3044, column: 25, scope: !8710)
!8761 = !DILocation(line: 3044, column: 29, scope: !8710)
!8762 = !DILocation(line: 3044, column: 60, scope: !8710)
!8763 = !DILocation(line: 3044, column: 2, scope: !8710)
!8764 = !DILocation(line: 3047, column: 6, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 3047, column: 6)
!8766 = !DILocation(line: 3047, column: 6, scope: !8710)
!8767 = !DILocalVariable(name: "mode", scope: !8768, file: !3, line: 3048, type: !8769)
!8768 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 3047, column: 15)
!8769 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHTopologyUpdateMode", file: !2319, line: 146, baseType: !4041)
!8770 = !DILocation(line: 3048, column: 26, scope: !8768)
!8771 = !DILocalVariable(name: "location", scope: !8768, file: !3, line: 3049, type: !233)
!8772 = !DILocation(line: 3049, column: 9, scope: !8768)
!8773 = !DILocation(line: 3051, column: 7, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3051, column: 7)
!8775 = !DILocation(line: 3051, column: 11, scope: !8774)
!8776 = !DILocation(line: 3051, column: 17, scope: !8774)
!8777 = !DILocation(line: 3051, column: 7, scope: !8768)
!8778 = !DILocation(line: 3052, column: 9, scope: !8774)
!8779 = !DILocation(line: 3052, column: 4, scope: !8774)
!8780 = !DILocation(line: 3054, column: 8, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3054, column: 7)
!8782 = !DILocation(line: 3054, column: 12, scope: !8781)
!8783 = !DILocation(line: 3054, column: 18, scope: !8781)
!8784 = !DILocation(line: 3054, column: 45, scope: !8781)
!8785 = !DILocation(line: 3055, column: 8, scope: !8781)
!8786 = !DILocation(line: 3055, column: 15, scope: !8781)
!8787 = !DILocation(line: 3055, column: 27, scope: !8781)
!8788 = !DILocation(line: 3054, column: 7, scope: !8768)
!8789 = !DILocation(line: 3057, column: 9, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 3056, column: 3)
!8791 = !DILocation(line: 3058, column: 3, scope: !8790)
!8792 = !DILocation(line: 3060, column: 10, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3060, column: 3)
!8794 = !DILocation(line: 3060, column: 8, scope: !8793)
!8795 = !DILocation(line: 3060, column: 15, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 3060, column: 3)
!8797 = !DILocation(line: 3060, column: 19, scope: !8796)
!8798 = !DILocation(line: 3060, column: 17, scope: !8796)
!8799 = !DILocation(line: 3060, column: 3, scope: !8793)
!8800 = !DILocation(line: 3061, column: 26, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 3060, column: 33)
!8802 = !DILocation(line: 3061, column: 30, scope: !8801)
!8803 = !DILocation(line: 3061, column: 36, scope: !8801)
!8804 = !DILocation(line: 3062, column: 26, scope: !8801)
!8805 = !DILocation(line: 3062, column: 33, scope: !8801)
!8806 = !DILocation(line: 3062, column: 45, scope: !8801)
!8807 = !DILocation(line: 3061, column: 4, scope: !8801)
!8808 = !DILocation(line: 3064, column: 30, scope: !8801)
!8809 = !DILocation(line: 3064, column: 36, scope: !8801)
!8810 = !DILocation(line: 3064, column: 4, scope: !8801)
!8811 = !DILocation(line: 3066, column: 22, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 3066, column: 8)
!8813 = !DILocation(line: 3066, column: 26, scope: !8812)
!8814 = !DILocation(line: 3066, column: 8, scope: !8812)
!8815 = !DILocation(line: 3066, column: 32, scope: !8812)
!8816 = !DILocation(line: 3066, column: 8, scope: !8801)
!8817 = !DILocation(line: 3067, column: 40, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 3066, column: 47)
!8819 = !DILocation(line: 3067, column: 46, scope: !8818)
!8820 = !DILocation(line: 3067, column: 5, scope: !8818)
!8821 = !DILocation(line: 3068, column: 35, scope: !8818)
!8822 = !DILocation(line: 3068, column: 41, scope: !8818)
!8823 = !DILocation(line: 3068, column: 5, scope: !8818)
!8824 = !DILocation(line: 3069, column: 4, scope: !8818)
!8825 = !DILocation(line: 3070, column: 3, scope: !8801)
!8826 = !DILocation(line: 3060, column: 29, scope: !8796)
!8827 = !DILocation(line: 3060, column: 3, scope: !8796)
!8828 = distinct !{!8828, !8799, !8829}
!8829 = !DILocation(line: 3070, column: 3, scope: !8793)
!8830 = !DILocation(line: 3072, column: 21, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3072, column: 7)
!8832 = !DILocation(line: 3072, column: 25, scope: !8831)
!8833 = !DILocation(line: 3072, column: 7, scope: !8831)
!8834 = !DILocation(line: 3072, column: 31, scope: !8831)
!8835 = !DILocation(line: 3072, column: 7, scope: !8768)
!8836 = !DILocation(line: 3073, column: 35, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 3072, column: 46)
!8838 = !DILocation(line: 3073, column: 39, scope: !8837)
!8839 = !DILocation(line: 3073, column: 45, scope: !8837)
!8840 = !DILocation(line: 3074, column: 35, scope: !8837)
!8841 = !DILocation(line: 3074, column: 39, scope: !8837)
!8842 = !DILocation(line: 3074, column: 46, scope: !8837)
!8843 = !DILocation(line: 3075, column: 35, scope: !8837)
!8844 = !DILocation(line: 3075, column: 39, scope: !8837)
!8845 = !DILocation(line: 3075, column: 46, scope: !8837)
!8846 = !DILocation(line: 3073, column: 4, scope: !8837)
!8847 = !DILocation(line: 3076, column: 3, scope: !8837)
!8848 = !DILocation(line: 3078, column: 3, scope: !8768)
!8849 = !DILocation(line: 3078, column: 13, scope: !8768)
!8850 = !DILocation(line: 3081, column: 14, scope: !8768)
!8851 = !DILocation(line: 3081, column: 24, scope: !8768)
!8852 = !DILocation(line: 3081, column: 28, scope: !8768)
!8853 = !DILocation(line: 3081, column: 35, scope: !8768)
!8854 = !DILocation(line: 3081, column: 3, scope: !8768)
!8855 = !DILocation(line: 3082, column: 13, scope: !8768)
!8856 = !DILocation(line: 3082, column: 17, scope: !8768)
!8857 = !DILocation(line: 3082, column: 24, scope: !8768)
!8858 = !DILocation(line: 3082, column: 3, scope: !8768)
!8859 = !DILocation(line: 3084, column: 13, scope: !8768)
!8860 = !DILocation(line: 3084, column: 17, scope: !8768)
!8861 = !DILocation(line: 3084, column: 25, scope: !8768)
!8862 = !DILocation(line: 3084, column: 47, scope: !8768)
!8863 = !DILocation(line: 3084, column: 3, scope: !8768)
!8864 = !DILocation(line: 3085, column: 3, scope: !8768)
!8865 = !DILocation(line: 3085, column: 7, scope: !8768)
!8866 = !DILocation(line: 3085, column: 15, scope: !8768)
!8867 = !DILocation(line: 3085, column: 37, scope: !8768)
!8868 = !DILocation(line: 3086, column: 2, scope: !8768)
!8869 = !DILocation(line: 3087, column: 1, scope: !8710)
!8870 = distinct !DISubprogram(name: "do_brush_action", scope: !3, file: !3, line: 3089, type: !8584, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!8871 = !DILocalVariable(name: "sd", arg: 1, scope: !8870, file: !3, line: 3089, type: !6)
!8872 = !DILocation(line: 3089, column: 37, scope: !8870)
!8873 = !DILocalVariable(name: "ob", arg: 2, scope: !8870, file: !3, line: 3089, type: !3739)
!8874 = !DILocation(line: 3089, column: 49, scope: !8870)
!8875 = !DILocalVariable(name: "brush", arg: 3, scope: !8870, file: !3, line: 3089, type: !2749)
!8876 = !DILocation(line: 3089, column: 60, scope: !8870)
!8877 = !DILocalVariable(name: "ss", scope: !8870, file: !3, line: 3091, type: !5374)
!8878 = !DILocation(line: 3091, column: 17, scope: !8870)
!8879 = !DILocation(line: 3091, column: 22, scope: !8870)
!8880 = !DILocation(line: 3091, column: 26, scope: !8870)
!8881 = !DILocalVariable(name: "data", scope: !8870, file: !3, line: 3092, type: !8722)
!8882 = !DILocation(line: 3092, column: 25, scope: !8870)
!8883 = !DILocalVariable(name: "nodes", scope: !8870, file: !3, line: 3093, type: !3741)
!8884 = !DILocation(line: 3093, column: 13, scope: !8870)
!8885 = !DILocalVariable(name: "n", scope: !8870, file: !3, line: 3094, type: !57)
!8886 = !DILocation(line: 3094, column: 6, scope: !8870)
!8887 = !DILocalVariable(name: "totnode", scope: !8870, file: !3, line: 3094, type: !57)
!8888 = !DILocation(line: 3094, column: 9, scope: !8870)
!8889 = !DILocation(line: 3097, column: 12, scope: !8870)
!8890 = !DILocation(line: 3097, column: 7, scope: !8870)
!8891 = !DILocation(line: 3097, column: 10, scope: !8870)
!8892 = !DILocation(line: 3098, column: 12, scope: !8870)
!8893 = !DILocation(line: 3098, column: 7, scope: !8870)
!8894 = !DILocation(line: 3098, column: 10, scope: !8870)
!8895 = !DILocation(line: 3099, column: 24, scope: !8870)
!8896 = !DILocation(line: 3099, column: 28, scope: !8870)
!8897 = !DILocation(line: 3099, column: 35, scope: !8870)
!8898 = !DILocation(line: 3099, column: 7, scope: !8870)
!8899 = !DILocation(line: 3099, column: 22, scope: !8870)
!8900 = !DILocation(line: 3100, column: 18, scope: !8870)
!8901 = !DILocation(line: 3104, column: 51, scope: !8870)
!8902 = !DILocation(line: 3104, column: 55, scope: !8870)
!8903 = !DILocation(line: 3104, column: 62, scope: !8870)
!8904 = !DILocation(line: 3100, column: 7, scope: !8870)
!8905 = !DILocation(line: 3100, column: 16, scope: !8870)
!8906 = !DILocation(line: 3105, column: 25, scope: !8870)
!8907 = !DILocation(line: 3105, column: 29, scope: !8870)
!8908 = !DILocation(line: 3105, column: 60, scope: !8870)
!8909 = !DILocation(line: 3105, column: 2, scope: !8870)
!8910 = !DILocation(line: 3108, column: 6, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 3108, column: 6)
!8912 = !DILocation(line: 3108, column: 6, scope: !8870)
!8913 = !DILocalVariable(name: "location", scope: !8914, file: !3, line: 3109, type: !233)
!8914 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 3108, column: 15)
!8915 = !DILocation(line: 3109, column: 9, scope: !8914)
!8916 = !DILocation(line: 3114, column: 10, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3114, column: 3)
!8918 = !DILocation(line: 3114, column: 8, scope: !8917)
!8919 = !DILocation(line: 3114, column: 15, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 3114, column: 3)
!8921 = !DILocation(line: 3114, column: 19, scope: !8920)
!8922 = !DILocation(line: 3114, column: 17, scope: !8920)
!8923 = !DILocation(line: 3114, column: 3, scope: !8917)
!8924 = !DILocation(line: 3115, column: 26, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 3114, column: 33)
!8926 = !DILocation(line: 3115, column: 30, scope: !8925)
!8927 = !DILocation(line: 3115, column: 36, scope: !8925)
!8928 = !DILocation(line: 3116, column: 26, scope: !8925)
!8929 = !DILocation(line: 3116, column: 33, scope: !8925)
!8930 = !DILocation(line: 3116, column: 45, scope: !8925)
!8931 = !DILocation(line: 3115, column: 4, scope: !8925)
!8932 = !DILocation(line: 3118, column: 30, scope: !8925)
!8933 = !DILocation(line: 3118, column: 36, scope: !8925)
!8934 = !DILocation(line: 3118, column: 4, scope: !8925)
!8935 = !DILocation(line: 3119, column: 3, scope: !8925)
!8936 = !DILocation(line: 3114, column: 29, scope: !8920)
!8937 = !DILocation(line: 3114, column: 3, scope: !8920)
!8938 = distinct !{!8938, !8923, !8939}
!8939 = !DILocation(line: 3119, column: 3, scope: !8917)
!8940 = !DILocation(line: 3121, column: 33, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3121, column: 7)
!8942 = !DILocation(line: 3121, column: 7, scope: !8941)
!8943 = !DILocation(line: 3121, column: 7, scope: !8914)
!8944 = !DILocation(line: 3122, column: 25, scope: !8941)
!8945 = !DILocation(line: 3122, column: 29, scope: !8941)
!8946 = !DILocation(line: 3122, column: 33, scope: !8941)
!8947 = !DILocation(line: 3122, column: 40, scope: !8941)
!8948 = !DILocation(line: 3122, column: 4, scope: !8941)
!8949 = !DILocation(line: 3124, column: 7, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3124, column: 7)
!8951 = !DILocation(line: 3124, column: 14, scope: !8950)
!8952 = !DILocation(line: 3124, column: 19, scope: !8950)
!8953 = !DILocation(line: 3124, column: 34, scope: !8950)
!8954 = !DILocation(line: 3124, column: 7, scope: !8914)
!8955 = !DILocation(line: 3125, column: 27, scope: !8950)
!8956 = !DILocation(line: 3125, column: 31, scope: !8950)
!8957 = !DILocation(line: 3125, column: 4, scope: !8950)
!8958 = !DILocation(line: 3128, column: 11, scope: !8914)
!8959 = !DILocation(line: 3128, column: 18, scope: !8914)
!8960 = !DILocation(line: 3128, column: 3, scope: !8914)
!8961 = !DILocation(line: 3130, column: 19, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3128, column: 31)
!8963 = !DILocation(line: 3130, column: 23, scope: !8962)
!8964 = !DILocation(line: 3130, column: 27, scope: !8962)
!8965 = !DILocation(line: 3130, column: 34, scope: !8962)
!8966 = !DILocation(line: 3130, column: 5, scope: !8962)
!8967 = !DILocation(line: 3131, column: 5, scope: !8962)
!8968 = !DILocation(line: 3133, column: 21, scope: !8962)
!8969 = !DILocation(line: 3133, column: 25, scope: !8962)
!8970 = !DILocation(line: 3133, column: 29, scope: !8962)
!8971 = !DILocation(line: 3133, column: 36, scope: !8962)
!8972 = !DILocation(line: 3133, column: 5, scope: !8962)
!8973 = !DILocation(line: 3134, column: 5, scope: !8962)
!8974 = !DILocation(line: 3136, column: 21, scope: !8962)
!8975 = !DILocation(line: 3136, column: 25, scope: !8962)
!8976 = !DILocation(line: 3136, column: 29, scope: !8962)
!8977 = !DILocation(line: 3136, column: 36, scope: !8962)
!8978 = !DILocation(line: 3136, column: 5, scope: !8962)
!8979 = !DILocation(line: 3137, column: 5, scope: !8962)
!8980 = !DILocation(line: 3139, column: 21, scope: !8962)
!8981 = !DILocation(line: 3139, column: 25, scope: !8962)
!8982 = !DILocation(line: 3139, column: 29, scope: !8962)
!8983 = !DILocation(line: 3139, column: 36, scope: !8962)
!8984 = !DILocation(line: 3139, column: 5, scope: !8962)
!8985 = !DILocation(line: 3140, column: 5, scope: !8962)
!8986 = !DILocation(line: 3142, column: 20, scope: !8962)
!8987 = !DILocation(line: 3142, column: 24, scope: !8962)
!8988 = !DILocation(line: 3142, column: 28, scope: !8962)
!8989 = !DILocation(line: 3142, column: 35, scope: !8962)
!8990 = !DILocation(line: 3142, column: 5, scope: !8962)
!8991 = !DILocation(line: 3143, column: 5, scope: !8962)
!8992 = !DILocation(line: 3145, column: 22, scope: !8962)
!8993 = !DILocation(line: 3145, column: 26, scope: !8962)
!8994 = !DILocation(line: 3145, column: 30, scope: !8962)
!8995 = !DILocation(line: 3145, column: 37, scope: !8962)
!8996 = !DILocation(line: 3145, column: 5, scope: !8962)
!8997 = !DILocation(line: 3146, column: 5, scope: !8962)
!8998 = !DILocation(line: 3148, column: 19, scope: !8962)
!8999 = !DILocation(line: 3148, column: 23, scope: !8962)
!9000 = !DILocation(line: 3148, column: 27, scope: !8962)
!9001 = !DILocation(line: 3148, column: 34, scope: !8962)
!9002 = !DILocation(line: 3148, column: 5, scope: !8962)
!9003 = !DILocation(line: 3149, column: 5, scope: !8962)
!9004 = !DILocation(line: 3151, column: 21, scope: !8962)
!9005 = !DILocation(line: 3151, column: 25, scope: !8962)
!9006 = !DILocation(line: 3151, column: 29, scope: !8962)
!9007 = !DILocation(line: 3151, column: 36, scope: !8962)
!9008 = !DILocation(line: 3151, column: 5, scope: !8962)
!9009 = !DILocation(line: 3152, column: 5, scope: !8962)
!9010 = !DILocation(line: 3154, column: 25, scope: !8962)
!9011 = !DILocation(line: 3154, column: 29, scope: !8962)
!9012 = !DILocation(line: 3154, column: 33, scope: !8962)
!9013 = !DILocation(line: 3154, column: 40, scope: !8962)
!9014 = !DILocation(line: 3154, column: 5, scope: !8962)
!9015 = !DILocation(line: 3155, column: 5, scope: !8962)
!9016 = !DILocation(line: 3157, column: 20, scope: !8962)
!9017 = !DILocation(line: 3157, column: 24, scope: !8962)
!9018 = !DILocation(line: 3157, column: 28, scope: !8962)
!9019 = !DILocation(line: 3157, column: 35, scope: !8962)
!9020 = !DILocation(line: 3157, column: 5, scope: !8962)
!9021 = !DILocation(line: 3158, column: 5, scope: !8962)
!9022 = !DILocation(line: 3160, column: 20, scope: !8962)
!9023 = !DILocation(line: 3160, column: 24, scope: !8962)
!9024 = !DILocation(line: 3160, column: 28, scope: !8962)
!9025 = !DILocation(line: 3160, column: 35, scope: !8962)
!9026 = !DILocation(line: 3160, column: 5, scope: !8962)
!9027 = !DILocation(line: 3161, column: 5, scope: !8962)
!9028 = !DILocation(line: 3163, column: 20, scope: !8962)
!9029 = !DILocation(line: 3163, column: 24, scope: !8962)
!9030 = !DILocation(line: 3163, column: 28, scope: !8962)
!9031 = !DILocation(line: 3163, column: 35, scope: !8962)
!9032 = !DILocation(line: 3163, column: 5, scope: !8962)
!9033 = !DILocation(line: 3164, column: 5, scope: !8962)
!9034 = !DILocation(line: 3166, column: 22, scope: !8962)
!9035 = !DILocation(line: 3166, column: 26, scope: !8962)
!9036 = !DILocation(line: 3166, column: 30, scope: !8962)
!9037 = !DILocation(line: 3166, column: 37, scope: !8962)
!9038 = !DILocation(line: 3166, column: 5, scope: !8962)
!9039 = !DILocation(line: 3167, column: 5, scope: !8962)
!9040 = !DILocation(line: 3169, column: 19, scope: !8962)
!9041 = !DILocation(line: 3169, column: 23, scope: !8962)
!9042 = !DILocation(line: 3169, column: 27, scope: !8962)
!9043 = !DILocation(line: 3169, column: 34, scope: !8962)
!9044 = !DILocation(line: 3169, column: 5, scope: !8962)
!9045 = !DILocation(line: 3170, column: 5, scope: !8962)
!9046 = !DILocation(line: 3172, column: 26, scope: !8962)
!9047 = !DILocation(line: 3172, column: 30, scope: !8962)
!9048 = !DILocation(line: 3172, column: 34, scope: !8962)
!9049 = !DILocation(line: 3172, column: 41, scope: !8962)
!9050 = !DILocation(line: 3172, column: 5, scope: !8962)
!9051 = !DILocation(line: 3173, column: 5, scope: !8962)
!9052 = !DILocation(line: 3175, column: 19, scope: !8962)
!9053 = !DILocation(line: 3175, column: 23, scope: !8962)
!9054 = !DILocation(line: 3175, column: 27, scope: !8962)
!9055 = !DILocation(line: 3175, column: 34, scope: !8962)
!9056 = !DILocation(line: 3175, column: 5, scope: !8962)
!9057 = !DILocation(line: 3176, column: 5, scope: !8962)
!9058 = !DILocation(line: 3178, column: 21, scope: !8962)
!9059 = !DILocation(line: 3178, column: 25, scope: !8962)
!9060 = !DILocation(line: 3178, column: 29, scope: !8962)
!9061 = !DILocation(line: 3178, column: 36, scope: !8962)
!9062 = !DILocation(line: 3178, column: 5, scope: !8962)
!9063 = !DILocation(line: 3179, column: 5, scope: !8962)
!9064 = !DILocation(line: 3181, column: 19, scope: !8962)
!9065 = !DILocation(line: 3181, column: 23, scope: !8962)
!9066 = !DILocation(line: 3181, column: 27, scope: !8962)
!9067 = !DILocation(line: 3181, column: 34, scope: !8962)
!9068 = !DILocation(line: 3181, column: 5, scope: !8962)
!9069 = !DILocation(line: 3182, column: 5, scope: !8962)
!9070 = !DILocation(line: 3185, column: 8, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3185, column: 7)
!9072 = !DILocation(line: 3185, column: 71, scope: !9071)
!9073 = !DILocation(line: 3186, column: 7, scope: !9071)
!9074 = !DILocation(line: 3186, column: 14, scope: !9071)
!9075 = !DILocation(line: 3186, column: 32, scope: !9071)
!9076 = !DILocation(line: 3185, column: 7, scope: !8914)
!9077 = !DILocation(line: 3188, column: 8, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 3188, column: 8)
!9079 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 3187, column: 3)
!9080 = !DILocation(line: 3188, column: 15, scope: !9078)
!9081 = !DILocation(line: 3188, column: 20, scope: !9078)
!9082 = !DILocation(line: 3188, column: 8, scope: !9079)
!9083 = !DILocation(line: 3189, column: 12, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 3188, column: 53)
!9085 = !DILocation(line: 3189, column: 16, scope: !9084)
!9086 = !DILocation(line: 3189, column: 20, scope: !9084)
!9087 = !DILocation(line: 3189, column: 27, scope: !9084)
!9088 = !DILocation(line: 3189, column: 36, scope: !9084)
!9089 = !DILocation(line: 3189, column: 43, scope: !9084)
!9090 = !DILocation(line: 3189, column: 68, scope: !9084)
!9091 = !DILocation(line: 3189, column: 72, scope: !9084)
!9092 = !DILocation(line: 3189, column: 79, scope: !9084)
!9093 = !DILocation(line: 3189, column: 66, scope: !9084)
!9094 = !DILocation(line: 3189, column: 61, scope: !9084)
!9095 = !DILocation(line: 3189, column: 5, scope: !9084)
!9096 = !DILocation(line: 3190, column: 4, scope: !9084)
!9097 = !DILocation(line: 3192, column: 12, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 3191, column: 9)
!9099 = !DILocation(line: 3192, column: 16, scope: !9098)
!9100 = !DILocation(line: 3192, column: 20, scope: !9098)
!9101 = !DILocation(line: 3192, column: 27, scope: !9098)
!9102 = !DILocation(line: 3192, column: 36, scope: !9098)
!9103 = !DILocation(line: 3192, column: 43, scope: !9098)
!9104 = !DILocation(line: 3192, column: 5, scope: !9098)
!9105 = !DILocation(line: 3194, column: 3, scope: !9079)
!9106 = !DILocation(line: 3196, column: 7, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3196, column: 7)
!9108 = !DILocation(line: 3196, column: 11, scope: !9107)
!9109 = !DILocation(line: 3196, column: 18, scope: !9107)
!9110 = !DILocation(line: 3196, column: 7, scope: !8914)
!9111 = !DILocation(line: 3197, column: 15, scope: !9107)
!9112 = !DILocation(line: 3197, column: 19, scope: !9107)
!9113 = !DILocation(line: 3197, column: 23, scope: !9107)
!9114 = !DILocation(line: 3197, column: 30, scope: !9107)
!9115 = !DILocation(line: 3197, column: 39, scope: !9107)
!9116 = !DILocation(line: 3197, column: 43, scope: !9107)
!9117 = !DILocation(line: 3197, column: 4, scope: !9107)
!9118 = !DILocation(line: 3199, column: 3, scope: !8914)
!9119 = !DILocation(line: 3199, column: 13, scope: !8914)
!9120 = !DILocation(line: 3202, column: 14, scope: !8914)
!9121 = !DILocation(line: 3202, column: 24, scope: !8914)
!9122 = !DILocation(line: 3202, column: 28, scope: !8914)
!9123 = !DILocation(line: 3202, column: 35, scope: !8914)
!9124 = !DILocation(line: 3202, column: 3, scope: !8914)
!9125 = !DILocation(line: 3203, column: 13, scope: !8914)
!9126 = !DILocation(line: 3203, column: 17, scope: !8914)
!9127 = !DILocation(line: 3203, column: 24, scope: !8914)
!9128 = !DILocation(line: 3203, column: 3, scope: !8914)
!9129 = !DILocation(line: 3205, column: 13, scope: !8914)
!9130 = !DILocation(line: 3205, column: 17, scope: !8914)
!9131 = !DILocation(line: 3205, column: 25, scope: !8914)
!9132 = !DILocation(line: 3205, column: 47, scope: !8914)
!9133 = !DILocation(line: 3205, column: 3, scope: !8914)
!9134 = !DILocation(line: 3206, column: 3, scope: !8914)
!9135 = !DILocation(line: 3206, column: 7, scope: !8914)
!9136 = !DILocation(line: 3206, column: 15, scope: !8914)
!9137 = !DILocation(line: 3206, column: 37, scope: !8914)
!9138 = !DILocation(line: 3207, column: 2, scope: !8914)
!9139 = !DILocation(line: 3208, column: 1, scope: !8870)
!9140 = distinct !DISubprogram(name: "sculpt_combine_proxies", scope: !3, file: !3, line: 3229, type: !8505, scopeLine: 3230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9141 = !DILocalVariable(name: "sd", arg: 1, scope: !9140, file: !3, line: 3229, type: !6)
!9142 = !DILocation(line: 3229, column: 44, scope: !9140)
!9143 = !DILocalVariable(name: "ob", arg: 2, scope: !9140, file: !3, line: 3229, type: !3739)
!9144 = !DILocation(line: 3229, column: 56, scope: !9140)
!9145 = !DILocalVariable(name: "ss", scope: !9140, file: !3, line: 3231, type: !5374)
!9146 = !DILocation(line: 3231, column: 17, scope: !9140)
!9147 = !DILocation(line: 3231, column: 22, scope: !9140)
!9148 = !DILocation(line: 3231, column: 26, scope: !9140)
!9149 = !DILocalVariable(name: "brush", scope: !9140, file: !3, line: 3232, type: !2749)
!9150 = !DILocation(line: 3232, column: 9, scope: !9140)
!9151 = !DILocation(line: 3232, column: 34, scope: !9140)
!9152 = !DILocation(line: 3232, column: 38, scope: !9140)
!9153 = !DILocation(line: 3232, column: 17, scope: !9140)
!9154 = !DILocalVariable(name: "nodes", scope: !9140, file: !3, line: 3233, type: !3741)
!9155 = !DILocation(line: 3233, column: 13, scope: !9140)
!9156 = !DILocalVariable(name: "totnode", scope: !9140, file: !3, line: 3234, type: !57)
!9157 = !DILocation(line: 3234, column: 6, scope: !9140)
!9158 = !DILocalVariable(name: "n", scope: !9140, file: !3, line: 3234, type: !57)
!9159 = !DILocation(line: 3234, column: 15, scope: !9140)
!9160 = !DILocation(line: 3236, column: 26, scope: !9140)
!9161 = !DILocation(line: 3236, column: 30, scope: !9140)
!9162 = !DILocation(line: 3236, column: 2, scope: !9140)
!9163 = !DILocation(line: 3239, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 3239, column: 6)
!9165 = !DILocation(line: 3239, column: 71, scope: !9164)
!9166 = !DILocation(line: 3240, column: 6, scope: !9164)
!9167 = !DILocation(line: 3240, column: 10, scope: !9164)
!9168 = !DILocation(line: 3240, column: 17, scope: !9164)
!9169 = !DILocation(line: 3239, column: 6, scope: !9140)
!9170 = !DILocalVariable(name: "use_orco", scope: !9171, file: !3, line: 3243, type: !3340)
!9171 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3241, column: 2)
!9172 = !DILocation(line: 3243, column: 14, scope: !9171)
!9173 = !DILocation(line: 3243, column: 25, scope: !9171)
!9174 = !DILocation(line: 3249, column: 10, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 3249, column: 3)
!9176 = !DILocation(line: 3249, column: 8, scope: !9175)
!9177 = !DILocation(line: 3249, column: 15, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3249, column: 3)
!9179 = !DILocation(line: 3249, column: 19, scope: !9178)
!9180 = !DILocation(line: 3249, column: 17, scope: !9178)
!9181 = !DILocation(line: 3249, column: 3, scope: !9175)
!9182 = !DILocalVariable(name: "vd", scope: !9183, file: !3, line: 3250, type: !9184)
!9183 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 3249, column: 33)
!9184 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHVertexIter", file: !2319, line: 269, baseType: !9185)
!9185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PBVHVertexIter", file: !2319, line: 231, size: 1792, elements: !9186)
!9186 = !{!9187, !9188, !9189, !9190, !9191, !9192, !9193, !9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201, !9202, !9203, !9204, !9205, !9209, !9210, !9212, !9213, !9214, !9215, !9216, !9217, !9218}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !9185, file: !2319, line: 233, baseType: !57, size: 32)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9185, file: !2319, line: 234, baseType: !57, size: 32, offset: 32)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9185, file: !2319, line: 235, baseType: !57, size: 32, offset: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "gx", scope: !9185, file: !2319, line: 236, baseType: !57, size: 32, offset: 96)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "gy", scope: !9185, file: !2319, line: 237, baseType: !57, size: 32, offset: 128)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !9185, file: !2319, line: 238, baseType: !57, size: 32, offset: 160)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "grids", scope: !9185, file: !2319, line: 241, baseType: !3193, size: 64, offset: 192)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !9185, file: !2319, line: 242, baseType: !3194, size: 64, offset: 256)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9185, file: !2319, line: 243, baseType: !3215, size: 64, offset: 320)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "grid_hidden", scope: !9185, file: !2319, line: 244, baseType: !5918, size: 64, offset: 384)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !9185, file: !2319, line: 244, baseType: !5161, size: 64, offset: 448)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "grid_indices", scope: !9185, file: !2319, line: 245, baseType: !2083, size: 64, offset: 512)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "totgrid", scope: !9185, file: !2319, line: 246, baseType: !57, size: 32, offset: 576)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "gridsize", scope: !9185, file: !2319, line: 247, baseType: !57, size: 32, offset: 608)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "mverts", scope: !9185, file: !2319, line: 250, baseType: !2029, size: 64, offset: 640)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !9185, file: !2319, line: 251, baseType: !57, size: 32, offset: 704)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "vert_indices", scope: !9185, file: !2319, line: 252, baseType: !2083, size: 64, offset: 768)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !9185, file: !2319, line: 253, baseType: !359, size: 64, offset: 832)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "bm_unique_verts", scope: !9185, file: !2319, line: 256, baseType: !9206, size: 192, offset: 896)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GSetIterator", file: !1051, line: 183, size: 192, elements: !9207)
!9207 = !{!9208}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "_ghi", scope: !9206, file: !1051, line: 184, baseType: !5167, size: 192)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "bm_other_verts", scope: !9185, file: !2319, line: 257, baseType: !9206, size: 192, offset: 1088)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "bm_vdata", scope: !9185, file: !2319, line: 258, baseType: !9211, size: 64, offset: 1280)
!9211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_mask_offset", scope: !9185, file: !2319, line: 259, baseType: !57, size: 32, offset: 1344)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !9185, file: !2319, line: 263, baseType: !2029, size: 64, offset: 1408)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "bm_vert", scope: !9185, file: !2319, line: 264, baseType: !2135, size: 64, offset: 1472)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !9185, file: !2319, line: 265, baseType: !359, size: 64, offset: 1536)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !9185, file: !2319, line: 266, baseType: !5149, size: 64, offset: 1600)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "fno", scope: !9185, file: !2319, line: 267, baseType: !359, size: 64, offset: 1664)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9185, file: !2319, line: 268, baseType: !359, size: 64, offset: 1728)
!9219 = !DILocation(line: 3250, column: 19, scope: !9183)
!9220 = !DILocalVariable(name: "proxies", scope: !9183, file: !3, line: 3251, type: !9221)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9222, size: 64)
!9222 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHProxyNode", file: !2319, line: 51, baseType: !9223)
!9223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2319, line: 49, size: 64, elements: !9224)
!9224 = !{!9225}
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !9223, file: !2319, line: 50, baseType: !2054, size: 64)
!9226 = !DILocation(line: 3251, column: 19, scope: !9183)
!9227 = !DILocalVariable(name: "proxy_count", scope: !9183, file: !3, line: 3252, type: !57)
!9228 = !DILocation(line: 3252, column: 8, scope: !9183)
!9229 = !DILocalVariable(name: "orco", scope: !9183, file: !3, line: 3253, type: !2054)
!9230 = !DILocation(line: 3253, column: 12, scope: !9183)
!9231 = !DILocation(line: 3255, column: 8, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3255, column: 8)
!9233 = !DILocation(line: 3255, column: 17, scope: !9232)
!9234 = !DILocation(line: 3255, column: 21, scope: !9232)
!9235 = !DILocation(line: 3255, column: 25, scope: !9232)
!9236 = !DILocation(line: 3255, column: 8, scope: !9183)
!9237 = !DILocation(line: 3256, column: 34, scope: !9232)
!9238 = !DILocation(line: 3256, column: 38, scope: !9232)
!9239 = !DILocation(line: 3256, column: 44, scope: !9232)
!9240 = !DILocation(line: 3256, column: 12, scope: !9232)
!9241 = !DILocation(line: 3256, column: 69, scope: !9232)
!9242 = !DILocation(line: 3256, column: 10, scope: !9232)
!9243 = !DILocation(line: 3256, column: 5, scope: !9232)
!9244 = !DILocation(line: 3258, column: 30, scope: !9183)
!9245 = !DILocation(line: 3258, column: 36, scope: !9183)
!9246 = !DILocation(line: 3258, column: 4, scope: !9183)
!9247 = !DILocation(line: 3260, column: 4, scope: !9183)
!9248 = !DILocation(line: 3260, column: 4, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3260, column: 4)
!9250 = !DILocation(line: 3260, column: 4, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 3260, column: 4)
!9252 = !DILocation(line: 3260, column: 4, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3260, column: 4)
!9254 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3260, column: 4)
!9255 = !DILocation(line: 3260, column: 4, scope: !9254)
!9256 = !DILocation(line: 3260, column: 4, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 3260, column: 4)
!9258 = !DILocation(line: 3260, column: 4, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 3260, column: 4)
!9260 = !DILocation(line: 3260, column: 4, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 3260, column: 4)
!9262 = !DILocation(line: 3260, column: 4, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3260, column: 4)
!9264 = !DILocation(line: 3260, column: 4, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 3260, column: 4)
!9266 = !DILocation(line: 3260, column: 4, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3260, column: 4)
!9268 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 3260, column: 4)
!9269 = !DILocation(line: 3260, column: 4, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 3260, column: 4)
!9271 = !DILocation(line: 3260, column: 4, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3260, column: 4)
!9273 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 3260, column: 4)
!9274 = !DILocation(line: 3260, column: 4, scope: !9273)
!9275 = !DILocation(line: 3260, column: 4, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !3, line: 3260, column: 4)
!9277 = !DILocation(line: 3260, column: 4, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 3260, column: 4)
!9279 = !DILocation(line: 3260, column: 4, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 3260, column: 4)
!9281 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 3260, column: 4)
!9282 = !DILocation(line: 3260, column: 4, scope: !9281)
!9283 = !DILocation(line: 3260, column: 4, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9272, file: !3, line: 3260, column: 4)
!9285 = !DILocation(line: 3260, column: 4, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 3260, column: 4)
!9287 = !DILocation(line: 3260, column: 4, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3260, column: 4)
!9289 = !DILocation(line: 3260, column: 4, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3260, column: 4)
!9291 = !DILocation(line: 3260, column: 4, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 3260, column: 4)
!9293 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 3260, column: 4)
!9294 = !DILocation(line: 3260, column: 4, scope: !9293)
!9295 = !DILocation(line: 3260, column: 4, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 3260, column: 4)
!9297 = !DILocation(line: 3260, column: 4, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 3260, column: 4)
!9299 = !DILocation(line: 3260, column: 4, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 3260, column: 4)
!9301 = !DILocalVariable(name: "val", scope: !9302, file: !3, line: 3262, type: !233)
!9302 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3261, column: 4)
!9303 = !DILocation(line: 3262, column: 11, scope: !9302)
!9304 = !DILocalVariable(name: "p", scope: !9302, file: !3, line: 3263, type: !57)
!9305 = !DILocation(line: 3263, column: 9, scope: !9302)
!9306 = !DILocation(line: 3265, column: 9, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3265, column: 9)
!9308 = !DILocation(line: 3265, column: 9, scope: !9302)
!9309 = !DILocation(line: 3266, column: 10, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3266, column: 10)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3265, column: 19)
!9312 = !DILocation(line: 3266, column: 14, scope: !9310)
!9313 = !DILocation(line: 3266, column: 10, scope: !9311)
!9314 = !DILocation(line: 3267, column: 18, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 3266, column: 18)
!9316 = !DILocation(line: 3268, column: 42, scope: !9315)
!9317 = !DILocation(line: 3268, column: 46, scope: !9315)
!9318 = !DILocation(line: 3269, column: 21, scope: !9315)
!9319 = !DILocation(line: 3268, column: 18, scope: !9315)
!9320 = !DILocation(line: 3267, column: 7, scope: !9315)
!9321 = !DILocation(line: 3270, column: 6, scope: !9315)
!9322 = !DILocation(line: 3272, column: 18, scope: !9310)
!9323 = !DILocation(line: 3272, column: 23, scope: !9310)
!9324 = !DILocation(line: 3272, column: 31, scope: !9310)
!9325 = !DILocation(line: 3272, column: 7, scope: !9310)
!9326 = !DILocation(line: 3273, column: 5, scope: !9311)
!9327 = !DILocation(line: 3275, column: 17, scope: !9307)
!9328 = !DILocation(line: 3275, column: 25, scope: !9307)
!9329 = !DILocation(line: 3275, column: 6, scope: !9307)
!9330 = !DILocation(line: 3277, column: 12, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3277, column: 5)
!9332 = !DILocation(line: 3277, column: 10, scope: !9331)
!9333 = !DILocation(line: 3277, column: 17, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 3277, column: 5)
!9335 = !DILocation(line: 3277, column: 21, scope: !9334)
!9336 = !DILocation(line: 3277, column: 19, scope: !9334)
!9337 = !DILocation(line: 3277, column: 5, scope: !9331)
!9338 = !DILocation(line: 3278, column: 16, scope: !9334)
!9339 = !DILocation(line: 3278, column: 21, scope: !9334)
!9340 = !DILocation(line: 3278, column: 29, scope: !9334)
!9341 = !DILocation(line: 3278, column: 32, scope: !9334)
!9342 = !DILocation(line: 3278, column: 38, scope: !9334)
!9343 = !DILocation(line: 3278, column: 6, scope: !9334)
!9344 = !DILocation(line: 3277, column: 35, scope: !9334)
!9345 = !DILocation(line: 3277, column: 5, scope: !9334)
!9346 = distinct !{!9346, !9337, !9347}
!9347 = !DILocation(line: 3278, column: 40, scope: !9331)
!9348 = !DILocation(line: 3280, column: 17, scope: !9302)
!9349 = !DILocation(line: 3280, column: 21, scope: !9302)
!9350 = !DILocation(line: 3280, column: 28, scope: !9302)
!9351 = !DILocation(line: 3280, column: 32, scope: !9302)
!9352 = !DILocation(line: 3280, column: 5, scope: !9302)
!9353 = !DILocation(line: 3282, column: 9, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3282, column: 9)
!9355 = !DILocation(line: 3282, column: 13, scope: !9354)
!9356 = !DILocation(line: 3282, column: 9, scope: !9302)
!9357 = !DILocation(line: 3283, column: 35, scope: !9354)
!9358 = !DILocation(line: 3283, column: 6, scope: !9354)
!9359 = !DILocation(line: 3285, column: 4, scope: !9273)
!9360 = distinct !{!9360, !9266, !9361}
!9361 = !DILocation(line: 3285, column: 4, scope: !9267)
!9362 = !DILocation(line: 3285, column: 4, scope: !9268)
!9363 = distinct !{!9363, !9262, !9364}
!9364 = !DILocation(line: 3285, column: 4, scope: !9263)
!9365 = !DILocation(line: 3285, column: 4, scope: !9254)
!9366 = distinct !{!9366, !9248, !9367}
!9367 = !DILocation(line: 3285, column: 4, scope: !9249)
!9368 = !DILocation(line: 3287, column: 31, scope: !9183)
!9369 = !DILocation(line: 3287, column: 37, scope: !9183)
!9370 = !DILocation(line: 3287, column: 4, scope: !9183)
!9371 = !DILocation(line: 3288, column: 3, scope: !9183)
!9372 = !DILocation(line: 3249, column: 29, scope: !9178)
!9373 = !DILocation(line: 3249, column: 3, scope: !9178)
!9374 = distinct !{!9374, !9181, !9375}
!9375 = !DILocation(line: 3288, column: 3, scope: !9175)
!9376 = !DILocation(line: 3289, column: 2, scope: !9171)
!9377 = !DILocation(line: 3291, column: 6, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 3291, column: 6)
!9379 = !DILocation(line: 3291, column: 6, scope: !9140)
!9380 = !DILocation(line: 3292, column: 3, scope: !9378)
!9381 = !DILocation(line: 3292, column: 13, scope: !9378)
!9382 = !DILocation(line: 3293, column: 1, scope: !9140)
!9383 = distinct !DISubprogram(name: "sculpt_fix_noise_tear", scope: !3, file: !3, line: 3440, type: !8505, scopeLine: 3441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9384 = !DILocalVariable(name: "sd", arg: 1, scope: !9383, file: !3, line: 3440, type: !6)
!9385 = !DILocation(line: 3440, column: 43, scope: !9383)
!9386 = !DILocalVariable(name: "ob", arg: 2, scope: !9383, file: !3, line: 3440, type: !3739)
!9387 = !DILocation(line: 3440, column: 55, scope: !9383)
!9388 = !DILocalVariable(name: "ss", scope: !9383, file: !3, line: 3442, type: !5374)
!9389 = !DILocation(line: 3442, column: 17, scope: !9383)
!9390 = !DILocation(line: 3442, column: 22, scope: !9383)
!9391 = !DILocation(line: 3442, column: 26, scope: !9383)
!9392 = !DILocalVariable(name: "brush", scope: !9383, file: !3, line: 3443, type: !2749)
!9393 = !DILocation(line: 3443, column: 9, scope: !9383)
!9394 = !DILocation(line: 3443, column: 34, scope: !9383)
!9395 = !DILocation(line: 3443, column: 38, scope: !9383)
!9396 = !DILocation(line: 3443, column: 17, scope: !9383)
!9397 = !DILocalVariable(name: "mtex", scope: !9383, file: !3, line: 3444, type: !7422)
!9398 = !DILocation(line: 3444, column: 8, scope: !9383)
!9399 = !DILocation(line: 3444, column: 16, scope: !9383)
!9400 = !DILocation(line: 3444, column: 23, scope: !9383)
!9401 = !DILocation(line: 3446, column: 6, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3446, column: 6)
!9403 = !DILocation(line: 3446, column: 10, scope: !9402)
!9404 = !DILocation(line: 3446, column: 19, scope: !9402)
!9405 = !DILocation(line: 3446, column: 22, scope: !9402)
!9406 = !DILocation(line: 3446, column: 28, scope: !9402)
!9407 = !DILocation(line: 3446, column: 32, scope: !9402)
!9408 = !DILocation(line: 3446, column: 35, scope: !9402)
!9409 = !DILocation(line: 3446, column: 41, scope: !9402)
!9410 = !DILocation(line: 3446, column: 46, scope: !9402)
!9411 = !DILocation(line: 3446, column: 51, scope: !9402)
!9412 = !DILocation(line: 3446, column: 6, scope: !9383)
!9413 = !DILocation(line: 3447, column: 25, scope: !9402)
!9414 = !DILocation(line: 3447, column: 3, scope: !9402)
!9415 = !DILocation(line: 3448, column: 1, scope: !9383)
!9416 = distinct !DISubprogram(name: "sculpt_flush_stroke_deform", scope: !3, file: !3, line: 3315, type: !8505, scopeLine: 3316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9417 = !DILocalVariable(name: "sd", arg: 1, scope: !9416, file: !3, line: 3315, type: !6)
!9418 = !DILocation(line: 3315, column: 48, scope: !9416)
!9419 = !DILocalVariable(name: "ob", arg: 2, scope: !9416, file: !3, line: 3315, type: !3739)
!9420 = !DILocation(line: 3315, column: 60, scope: !9416)
!9421 = !DILocalVariable(name: "ss", scope: !9416, file: !3, line: 3317, type: !5374)
!9422 = !DILocation(line: 3317, column: 17, scope: !9416)
!9423 = !DILocation(line: 3317, column: 22, scope: !9416)
!9424 = !DILocation(line: 3317, column: 26, scope: !9416)
!9425 = !DILocalVariable(name: "brush", scope: !9416, file: !3, line: 3318, type: !2749)
!9426 = !DILocation(line: 3318, column: 9, scope: !9416)
!9427 = !DILocation(line: 3318, column: 34, scope: !9416)
!9428 = !DILocation(line: 3318, column: 38, scope: !9416)
!9429 = !DILocation(line: 3318, column: 17, scope: !9416)
!9430 = !DILocation(line: 3320, column: 6, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3320, column: 6)
!9432 = !DILocation(line: 3320, column: 6, scope: !9416)
!9433 = !DILocalVariable(name: "n", scope: !9434, file: !3, line: 3324, type: !57)
!9434 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 3320, column: 71)
!9435 = !DILocation(line: 3324, column: 7, scope: !9434)
!9436 = !DILocalVariable(name: "totnode", scope: !9434, file: !3, line: 3324, type: !57)
!9437 = !DILocation(line: 3324, column: 10, scope: !9434)
!9438 = !DILocalVariable(name: "me", scope: !9434, file: !3, line: 3325, type: !5012)
!9439 = !DILocation(line: 3325, column: 9, scope: !9434)
!9440 = !DILocation(line: 3325, column: 22, scope: !9434)
!9441 = !DILocation(line: 3325, column: 26, scope: !9434)
!9442 = !DILocation(line: 3325, column: 14, scope: !9434)
!9443 = !DILocalVariable(name: "nodes", scope: !9434, file: !3, line: 3326, type: !3741)
!9444 = !DILocation(line: 3326, column: 14, scope: !9434)
!9445 = !DILocalVariable(name: "vertCos", scope: !9434, file: !3, line: 3327, type: !2054)
!9446 = !DILocation(line: 3327, column: 11, scope: !9434)
!9447 = !DILocation(line: 3329, column: 7, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 3329, column: 7)
!9449 = !DILocation(line: 3329, column: 11, scope: !9448)
!9450 = !DILocation(line: 3329, column: 7, scope: !9434)
!9451 = !DILocation(line: 3330, column: 14, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 3329, column: 15)
!9453 = !DILocation(line: 3330, column: 45, scope: !9452)
!9454 = !DILocation(line: 3330, column: 49, scope: !9452)
!9455 = !DILocation(line: 3330, column: 43, scope: !9452)
!9456 = !DILocation(line: 3330, column: 12, scope: !9452)
!9457 = !DILocation(line: 3336, column: 11, scope: !9452)
!9458 = !DILocation(line: 3336, column: 4, scope: !9452)
!9459 = !DILocation(line: 3336, column: 20, scope: !9452)
!9460 = !DILocation(line: 3336, column: 24, scope: !9452)
!9461 = !DILocation(line: 3336, column: 54, scope: !9452)
!9462 = !DILocation(line: 3336, column: 58, scope: !9452)
!9463 = !DILocation(line: 3336, column: 52, scope: !9452)
!9464 = !DILocation(line: 3337, column: 3, scope: !9452)
!9465 = !DILocation(line: 3339, column: 26, scope: !9434)
!9466 = !DILocation(line: 3339, column: 30, scope: !9434)
!9467 = !DILocation(line: 3339, column: 3, scope: !9434)
!9468 = !DILocation(line: 3344, column: 10, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 3344, column: 3)
!9470 = !DILocation(line: 3344, column: 8, scope: !9469)
!9471 = !DILocation(line: 3344, column: 15, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 3344, column: 3)
!9473 = !DILocation(line: 3344, column: 19, scope: !9472)
!9474 = !DILocation(line: 3344, column: 17, scope: !9472)
!9475 = !DILocation(line: 3344, column: 3, scope: !9469)
!9476 = !DILocalVariable(name: "vd", scope: !9477, file: !3, line: 3345, type: !9184)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3344, column: 33)
!9478 = !DILocation(line: 3345, column: 19, scope: !9477)
!9479 = !DILocation(line: 3347, column: 4, scope: !9477)
!9480 = !DILocation(line: 3347, column: 4, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3347, column: 4)
!9482 = !DILocation(line: 3347, column: 4, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9481, file: !3, line: 3347, column: 4)
!9484 = !DILocation(line: 3347, column: 4, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 3347, column: 4)
!9486 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 3347, column: 4)
!9487 = !DILocation(line: 3347, column: 4, scope: !9486)
!9488 = !DILocation(line: 3347, column: 4, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 3347, column: 4)
!9490 = !DILocation(line: 3347, column: 4, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 3347, column: 4)
!9492 = !DILocation(line: 3347, column: 4, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 3347, column: 4)
!9494 = !DILocation(line: 3347, column: 4, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 3347, column: 4)
!9496 = !DILocation(line: 3347, column: 4, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 3347, column: 4)
!9498 = !DILocation(line: 3347, column: 4, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 3347, column: 4)
!9500 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 3347, column: 4)
!9501 = !DILocation(line: 3347, column: 4, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3347, column: 4)
!9503 = !DILocation(line: 3347, column: 4, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 3347, column: 4)
!9505 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 3347, column: 4)
!9506 = !DILocation(line: 3347, column: 4, scope: !9505)
!9507 = !DILocation(line: 3347, column: 4, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 3347, column: 4)
!9509 = !DILocation(line: 3347, column: 4, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 3347, column: 4)
!9511 = !DILocation(line: 3347, column: 4, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 3347, column: 4)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3347, column: 4)
!9514 = !DILocation(line: 3347, column: 4, scope: !9513)
!9515 = !DILocation(line: 3347, column: 4, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 3347, column: 4)
!9517 = !DILocation(line: 3347, column: 4, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 3347, column: 4)
!9519 = !DILocation(line: 3347, column: 4, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 3347, column: 4)
!9521 = !DILocation(line: 3347, column: 4, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 3347, column: 4)
!9523 = !DILocation(line: 3347, column: 4, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 3347, column: 4)
!9525 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 3347, column: 4)
!9526 = !DILocation(line: 3347, column: 4, scope: !9525)
!9527 = !DILocation(line: 3347, column: 4, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3347, column: 4)
!9529 = !DILocation(line: 3347, column: 4, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3347, column: 4)
!9531 = !DILocation(line: 3347, column: 4, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 3347, column: 4)
!9533 = !DILocation(line: 3349, column: 34, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 3348, column: 4)
!9535 = !DILocation(line: 3349, column: 5, scope: !9534)
!9536 = !DILocation(line: 3351, column: 9, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 3351, column: 9)
!9538 = !DILocation(line: 3351, column: 9, scope: !9534)
!9539 = !DILocalVariable(name: "index", scope: !9540, file: !3, line: 3352, type: !57)
!9540 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 3351, column: 18)
!9541 = !DILocation(line: 3352, column: 10, scope: !9540)
!9542 = !DILocation(line: 3352, column: 21, scope: !9540)
!9543 = !DILocation(line: 3352, column: 37, scope: !9540)
!9544 = !DILocation(line: 3352, column: 18, scope: !9540)
!9545 = !DILocation(line: 3353, column: 17, scope: !9540)
!9546 = !DILocation(line: 3353, column: 25, scope: !9540)
!9547 = !DILocation(line: 3353, column: 33, scope: !9540)
!9548 = !DILocation(line: 3353, column: 37, scope: !9540)
!9549 = !DILocation(line: 3353, column: 46, scope: !9540)
!9550 = !DILocation(line: 3353, column: 6, scope: !9540)
!9551 = !DILocation(line: 3354, column: 5, scope: !9540)
!9552 = !DILocation(line: 3356, column: 4, scope: !9505)
!9553 = distinct !{!9553, !9498, !9554}
!9554 = !DILocation(line: 3356, column: 4, scope: !9499)
!9555 = !DILocation(line: 3356, column: 4, scope: !9500)
!9556 = distinct !{!9556, !9494, !9557}
!9557 = !DILocation(line: 3356, column: 4, scope: !9495)
!9558 = !DILocation(line: 3356, column: 4, scope: !9486)
!9559 = distinct !{!9559, !9480, !9560}
!9560 = !DILocation(line: 3356, column: 4, scope: !9481)
!9561 = !DILocation(line: 3357, column: 3, scope: !9477)
!9562 = !DILocation(line: 3344, column: 29, scope: !9472)
!9563 = !DILocation(line: 3344, column: 3, scope: !9472)
!9564 = distinct !{!9564, !9475, !9565}
!9565 = !DILocation(line: 3357, column: 3, scope: !9469)
!9566 = !DILocation(line: 3359, column: 7, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 3359, column: 7)
!9568 = !DILocation(line: 3359, column: 7, scope: !9434)
!9569 = !DILocation(line: 3360, column: 26, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3359, column: 16)
!9571 = !DILocation(line: 3360, column: 30, scope: !9570)
!9572 = !DILocation(line: 3360, column: 34, scope: !9570)
!9573 = !DILocation(line: 3360, column: 38, scope: !9570)
!9574 = !DILocation(line: 3360, column: 4, scope: !9570)
!9575 = !DILocation(line: 3361, column: 4, scope: !9570)
!9576 = !DILocation(line: 3361, column: 14, scope: !9570)
!9577 = !DILocation(line: 3362, column: 3, scope: !9570)
!9578 = !DILocation(line: 3364, column: 3, scope: !9434)
!9579 = !DILocation(line: 3364, column: 13, scope: !9434)
!9580 = !DILocation(line: 3369, column: 25, scope: !9434)
!9581 = !DILocation(line: 3369, column: 3, scope: !9434)
!9582 = !DILocation(line: 3370, column: 2, scope: !9434)
!9583 = !DILocation(line: 3371, column: 11, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 3371, column: 11)
!9585 = !DILocation(line: 3371, column: 15, scope: !9584)
!9586 = !DILocation(line: 3371, column: 11, scope: !9431)
!9587 = !DILocation(line: 3372, column: 26, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3371, column: 19)
!9589 = !DILocation(line: 3372, column: 3, scope: !9588)
!9590 = !DILocation(line: 3373, column: 2, scope: !9588)
!9591 = !DILocation(line: 3374, column: 1, scope: !9416)
!9592 = distinct !DISubprogram(name: "sculpt_update_keyblock", scope: !3, file: !3, line: 3296, type: !6002, scopeLine: 3297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9593 = !DILocalVariable(name: "ob", arg: 1, scope: !9592, file: !3, line: 3296, type: !3739)
!9594 = !DILocation(line: 3296, column: 44, scope: !9592)
!9595 = !DILocalVariable(name: "ss", scope: !9592, file: !3, line: 3298, type: !5374)
!9596 = !DILocation(line: 3298, column: 17, scope: !9592)
!9597 = !DILocation(line: 3298, column: 22, scope: !9592)
!9598 = !DILocation(line: 3298, column: 26, scope: !9592)
!9599 = !DILocalVariable(name: "vertCos", scope: !9592, file: !3, line: 3299, type: !2054)
!9600 = !DILocation(line: 3299, column: 10, scope: !9592)
!9601 = !DILocation(line: 3303, column: 6, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 3303, column: 6)
!9603 = !DILocation(line: 3303, column: 10, scope: !9602)
!9604 = !DILocation(line: 3303, column: 6, scope: !9592)
!9605 = !DILocation(line: 3303, column: 30, scope: !9602)
!9606 = !DILocation(line: 3303, column: 34, scope: !9602)
!9607 = !DILocation(line: 3303, column: 28, scope: !9602)
!9608 = !DILocation(line: 3303, column: 20, scope: !9602)
!9609 = !DILocation(line: 3304, column: 38, scope: !9602)
!9610 = !DILocation(line: 3304, column: 42, scope: !9602)
!9611 = !DILocation(line: 3304, column: 17, scope: !9602)
!9612 = !DILocation(line: 3304, column: 15, scope: !9602)
!9613 = !DILocation(line: 3306, column: 6, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 3306, column: 6)
!9615 = !DILocation(line: 3306, column: 6, scope: !9592)
!9616 = !DILocation(line: 3307, column: 25, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 3306, column: 15)
!9618 = !DILocation(line: 3307, column: 29, scope: !9617)
!9619 = !DILocation(line: 3307, column: 33, scope: !9617)
!9620 = !DILocation(line: 3307, column: 37, scope: !9617)
!9621 = !DILocation(line: 3307, column: 3, scope: !9617)
!9622 = !DILocation(line: 3309, column: 7, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 3309, column: 7)
!9624 = !DILocation(line: 3309, column: 18, scope: !9623)
!9625 = !DILocation(line: 3309, column: 22, scope: !9623)
!9626 = !DILocation(line: 3309, column: 15, scope: !9623)
!9627 = !DILocation(line: 3309, column: 7, scope: !9617)
!9628 = !DILocation(line: 3310, column: 4, scope: !9623)
!9629 = !DILocation(line: 3310, column: 14, scope: !9623)
!9630 = !DILocation(line: 3311, column: 2, scope: !9617)
!9631 = !DILocation(line: 3312, column: 1, scope: !9592)
!9632 = distinct !DISubprogram(name: "sculpt_flush_update", scope: !3, file: !3, line: 4259, type: !6162, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9633 = !DILocalVariable(name: "C", arg: 1, scope: !9632, file: !3, line: 4259, type: !5279)
!9634 = !DILocation(line: 4259, column: 43, scope: !9632)
!9635 = !DILocalVariable(name: "ob", scope: !9632, file: !3, line: 4261, type: !3739)
!9636 = !DILocation(line: 4261, column: 10, scope: !9632)
!9637 = !DILocation(line: 4261, column: 38, scope: !9632)
!9638 = !DILocation(line: 4261, column: 15, scope: !9632)
!9639 = !DILocalVariable(name: "ss", scope: !9632, file: !3, line: 4262, type: !5374)
!9640 = !DILocation(line: 4262, column: 17, scope: !9632)
!9641 = !DILocation(line: 4262, column: 22, scope: !9632)
!9642 = !DILocation(line: 4262, column: 26, scope: !9632)
!9643 = !DILocalVariable(name: "ar", scope: !9632, file: !3, line: 4263, type: !5319)
!9644 = !DILocation(line: 4263, column: 11, scope: !9632)
!9645 = !DILocation(line: 4263, column: 30, scope: !9632)
!9646 = !DILocation(line: 4263, column: 16, scope: !9632)
!9647 = !DILocalVariable(name: "mmd", scope: !9632, file: !3, line: 4264, type: !9648)
!9648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9649, size: 64)
!9649 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifierData", file: !265, line: 722, baseType: !264)
!9650 = !DILocation(line: 4264, column: 24, scope: !9632)
!9651 = !DILocation(line: 4264, column: 30, scope: !9632)
!9652 = !DILocation(line: 4264, column: 34, scope: !9632)
!9653 = !DILocation(line: 4266, column: 6, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 4266, column: 6)
!9655 = !DILocation(line: 4266, column: 6, scope: !9632)
!9656 = !DILocation(line: 4267, column: 29, scope: !9654)
!9657 = !DILocation(line: 4267, column: 3, scope: !9654)
!9658 = !DILocation(line: 4268, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 4268, column: 6)
!9660 = !DILocation(line: 4268, column: 10, scope: !9659)
!9661 = !DILocation(line: 4268, column: 6, scope: !9632)
!9662 = !DILocation(line: 4269, column: 23, scope: !9659)
!9663 = !DILocation(line: 4269, column: 27, scope: !9659)
!9664 = !DILocation(line: 4269, column: 3, scope: !9659)
!9665 = !DILocation(line: 4271, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 4271, column: 6)
!9667 = !DILocation(line: 4271, column: 10, scope: !9666)
!9668 = !DILocation(line: 4271, column: 13, scope: !9666)
!9669 = !DILocation(line: 4271, column: 16, scope: !9666)
!9670 = !DILocation(line: 4271, column: 20, scope: !9666)
!9671 = !DILocation(line: 4271, column: 6, scope: !9632)
!9672 = !DILocation(line: 4272, column: 22, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 4271, column: 38)
!9674 = !DILocation(line: 4272, column: 26, scope: !9673)
!9675 = !DILocation(line: 4272, column: 3, scope: !9673)
!9676 = !DILocation(line: 4273, column: 24, scope: !9673)
!9677 = !DILocation(line: 4273, column: 3, scope: !9673)
!9678 = !DILocation(line: 4274, column: 2, scope: !9673)
!9679 = !DILocalVariable(name: "r", scope: !9680, file: !3, line: 4276, type: !610)
!9680 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 4275, column: 7)
!9681 = !DILocation(line: 4276, column: 8, scope: !9680)
!9682 = !DILocation(line: 4278, column: 19, scope: !9680)
!9683 = !DILocation(line: 4278, column: 23, scope: !9680)
!9684 = !DILocation(line: 4278, column: 3, scope: !9680)
!9685 = !DILocation(line: 4282, column: 37, scope: !9680)
!9686 = !DILocation(line: 4282, column: 3, scope: !9680)
!9687 = !DILocation(line: 4284, column: 30, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 4284, column: 7)
!9689 = !DILocation(line: 4284, column: 55, scope: !9688)
!9690 = !DILocation(line: 4284, column: 34, scope: !9688)
!9691 = !DILocation(line: 4284, column: 59, scope: !9688)
!9692 = !DILocation(line: 4284, column: 7, scope: !9688)
!9693 = !DILocation(line: 4284, column: 7, scope: !9680)
!9694 = !DILocation(line: 4285, column: 8, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 4285, column: 8)
!9696 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 4284, column: 68)
!9697 = !DILocation(line: 4285, column: 12, scope: !9695)
!9698 = !DILocation(line: 4285, column: 8, scope: !9696)
!9699 = !DILocation(line: 4286, column: 5, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 4285, column: 19)
!9701 = !DILocation(line: 4286, column: 9, scope: !9700)
!9702 = !DILocation(line: 4286, column: 16, scope: !9700)
!9703 = !DILocation(line: 4286, column: 28, scope: !9700)
!9704 = !DILocation(line: 4287, column: 4, scope: !9700)
!9705 = !DILocation(line: 4291, column: 39, scope: !9696)
!9706 = !DILocation(line: 4291, column: 4, scope: !9696)
!9707 = !DILocation(line: 4293, column: 14, scope: !9696)
!9708 = !DILocation(line: 4293, column: 18, scope: !9696)
!9709 = !DILocation(line: 4293, column: 25, scope: !9696)
!9710 = !DILocation(line: 4293, column: 30, scope: !9696)
!9711 = !DILocation(line: 4293, column: 6, scope: !9696)
!9712 = !DILocation(line: 4293, column: 11, scope: !9696)
!9713 = !DILocation(line: 4294, column: 14, scope: !9696)
!9714 = !DILocation(line: 4294, column: 18, scope: !9696)
!9715 = !DILocation(line: 4294, column: 25, scope: !9696)
!9716 = !DILocation(line: 4294, column: 30, scope: !9696)
!9717 = !DILocation(line: 4294, column: 6, scope: !9696)
!9718 = !DILocation(line: 4294, column: 11, scope: !9696)
!9719 = !DILocation(line: 4295, column: 14, scope: !9696)
!9720 = !DILocation(line: 4295, column: 18, scope: !9696)
!9721 = !DILocation(line: 4295, column: 25, scope: !9696)
!9722 = !DILocation(line: 4295, column: 30, scope: !9696)
!9723 = !DILocation(line: 4295, column: 6, scope: !9696)
!9724 = !DILocation(line: 4295, column: 11, scope: !9696)
!9725 = !DILocation(line: 4296, column: 14, scope: !9696)
!9726 = !DILocation(line: 4296, column: 18, scope: !9696)
!9727 = !DILocation(line: 4296, column: 25, scope: !9696)
!9728 = !DILocation(line: 4296, column: 30, scope: !9696)
!9729 = !DILocation(line: 4296, column: 6, scope: !9696)
!9730 = !DILocation(line: 4296, column: 11, scope: !9696)
!9731 = !DILocation(line: 4298, column: 4, scope: !9696)
!9732 = !DILocation(line: 4298, column: 8, scope: !9696)
!9733 = !DILocation(line: 4298, column: 23, scope: !9696)
!9734 = !DILocation(line: 4299, column: 33, scope: !9696)
!9735 = !DILocation(line: 4299, column: 4, scope: !9696)
!9736 = !DILocation(line: 4300, column: 3, scope: !9696)
!9737 = !DILocation(line: 4302, column: 1, scope: !9632)
!9738 = distinct !DISubprogram(name: "sculpt_update_brush_delta", scope: !3, file: !3, line: 3875, type: !9739, scopeLine: 3876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !7119, !3739, !2749}
!9741 = !DILocalVariable(name: "ups", arg: 1, scope: !9738, file: !3, line: 3875, type: !7119)
!9742 = !DILocation(line: 3875, column: 61, scope: !9738)
!9743 = !DILocalVariable(name: "ob", arg: 2, scope: !9738, file: !3, line: 3875, type: !3739)
!9744 = !DILocation(line: 3875, column: 74, scope: !9738)
!9745 = !DILocalVariable(name: "brush", arg: 3, scope: !9738, file: !3, line: 3875, type: !2749)
!9746 = !DILocation(line: 3875, column: 85, scope: !9738)
!9747 = !DILocalVariable(name: "ss", scope: !9738, file: !3, line: 3877, type: !5374)
!9748 = !DILocation(line: 3877, column: 17, scope: !9738)
!9749 = !DILocation(line: 3877, column: 22, scope: !9738)
!9750 = !DILocation(line: 3877, column: 26, scope: !9738)
!9751 = !DILocalVariable(name: "cache", scope: !9738, file: !3, line: 3878, type: !5642)
!9752 = !DILocation(line: 3878, column: 15, scope: !9738)
!9753 = !DILocation(line: 3878, column: 23, scope: !9738)
!9754 = !DILocation(line: 3878, column: 27, scope: !9738)
!9755 = !DILocalVariable(name: "mouse", scope: !9738, file: !3, line: 3879, type: !9756)
!9756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3072, size: 64, elements: !142)
!9757 = !DILocation(line: 3879, column: 14, scope: !9738)
!9758 = !DILocation(line: 3879, column: 25, scope: !9738)
!9759 = !DILocation(line: 3880, column: 3, scope: !9738)
!9760 = !DILocation(line: 3880, column: 10, scope: !9738)
!9761 = !DILocation(line: 3881, column: 3, scope: !9738)
!9762 = !DILocation(line: 3881, column: 10, scope: !9738)
!9763 = !DILocalVariable(name: "tool", scope: !9738, file: !3, line: 3883, type: !57)
!9764 = !DILocation(line: 3883, column: 6, scope: !9738)
!9765 = !DILocation(line: 3883, column: 13, scope: !9738)
!9766 = !DILocation(line: 3883, column: 20, scope: !9738)
!9767 = !DILocation(line: 3885, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3885, column: 6)
!9769 = !DILocation(line: 3885, column: 6, scope: !9738)
!9770 = !DILocalVariable(name: "grab_location", scope: !9771, file: !3, line: 3890, type: !233)
!9771 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 3889, column: 2)
!9772 = !DILocation(line: 3890, column: 9, scope: !9771)
!9773 = !DILocalVariable(name: "imat", scope: !9771, file: !3, line: 3890, type: !1294)
!9774 = !DILocation(line: 3890, column: 27, scope: !9771)
!9775 = !DILocalVariable(name: "delta", scope: !9771, file: !3, line: 3890, type: !233)
!9776 = !DILocation(line: 3890, column: 39, scope: !9771)
!9777 = !DILocalVariable(name: "loc", scope: !9771, file: !3, line: 3890, type: !233)
!9778 = !DILocation(line: 3890, column: 49, scope: !9771)
!9779 = !DILocation(line: 3892, column: 7, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 3892, column: 7)
!9781 = !DILocation(line: 3892, column: 14, scope: !9780)
!9782 = !DILocation(line: 3892, column: 7, scope: !9771)
!9783 = !DILocation(line: 3893, column: 15, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 3892, column: 26)
!9785 = !DILocation(line: 3893, column: 22, scope: !9784)
!9786 = !DILocation(line: 3894, column: 15, scope: !9784)
!9787 = !DILocation(line: 3894, column: 22, scope: !9784)
!9788 = !DILocation(line: 3893, column: 4, scope: !9784)
!9789 = !DILocation(line: 3895, column: 3, scope: !9784)
!9790 = !DILocation(line: 3896, column: 12, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 3896, column: 12)
!9792 = !DILocation(line: 3896, column: 17, scope: !9791)
!9793 = !DILocation(line: 3896, column: 12, scope: !9780)
!9794 = !DILocation(line: 3897, column: 14, scope: !9791)
!9795 = !DILocation(line: 3897, column: 21, scope: !9791)
!9796 = !DILocation(line: 3897, column: 36, scope: !9791)
!9797 = !DILocation(line: 3897, column: 43, scope: !9791)
!9798 = !DILocation(line: 3897, column: 4, scope: !9791)
!9799 = !DILocation(line: 3900, column: 15, scope: !9771)
!9800 = !DILocation(line: 3900, column: 20, scope: !9771)
!9801 = !DILocation(line: 3900, column: 24, scope: !9771)
!9802 = !DILocation(line: 3900, column: 31, scope: !9771)
!9803 = !DILocation(line: 3900, column: 38, scope: !9771)
!9804 = !DILocation(line: 3900, column: 3, scope: !9771)
!9805 = !DILocation(line: 3901, column: 23, scope: !9771)
!9806 = !DILocation(line: 3901, column: 30, scope: !9771)
!9807 = !DILocation(line: 3901, column: 34, scope: !9771)
!9808 = !DILocation(line: 3901, column: 38, scope: !9771)
!9809 = !DILocation(line: 3901, column: 43, scope: !9771)
!9810 = !DILocation(line: 3901, column: 50, scope: !9771)
!9811 = !DILocation(line: 3901, column: 3, scope: !9771)
!9812 = !DILocation(line: 3904, column: 8, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 3904, column: 7)
!9814 = !DILocation(line: 3904, column: 15, scope: !9813)
!9815 = !DILocation(line: 3904, column: 7, scope: !9771)
!9816 = !DILocation(line: 3905, column: 12, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 3904, column: 27)
!9818 = !DILocation(line: 3905, column: 4, scope: !9817)
!9819 = !DILocation(line: 3908, column: 18, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 3905, column: 18)
!9821 = !DILocation(line: 3908, column: 25, scope: !9820)
!9822 = !DILocation(line: 3908, column: 40, scope: !9820)
!9823 = !DILocation(line: 3908, column: 47, scope: !9820)
!9824 = !DILocation(line: 3908, column: 6, scope: !9820)
!9825 = !DILocation(line: 3909, column: 19, scope: !9820)
!9826 = !DILocation(line: 3909, column: 25, scope: !9820)
!9827 = !DILocation(line: 3909, column: 29, scope: !9820)
!9828 = !DILocation(line: 3909, column: 6, scope: !9820)
!9829 = !DILocation(line: 3910, column: 21, scope: !9820)
!9830 = !DILocation(line: 3910, column: 27, scope: !9820)
!9831 = !DILocation(line: 3910, column: 6, scope: !9820)
!9832 = !DILocation(line: 3911, column: 16, scope: !9820)
!9833 = !DILocation(line: 3911, column: 23, scope: !9820)
!9834 = !DILocation(line: 3911, column: 35, scope: !9820)
!9835 = !DILocation(line: 3911, column: 6, scope: !9820)
!9836 = !DILocation(line: 3912, column: 6, scope: !9820)
!9837 = !DILocation(line: 3916, column: 10, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 3916, column: 10)
!9839 = !DILocation(line: 3916, column: 17, scope: !9838)
!9840 = !DILocation(line: 3916, column: 22, scope: !9838)
!9841 = !DILocation(line: 3916, column: 10, scope: !9820)
!9842 = !DILocalVariable(name: "orig", scope: !9843, file: !3, line: 3917, type: !233)
!9843 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 3916, column: 40)
!9844 = !DILocation(line: 3917, column: 13, scope: !9843)
!9845 = !DILocation(line: 3918, column: 19, scope: !9843)
!9846 = !DILocation(line: 3918, column: 25, scope: !9843)
!9847 = !DILocation(line: 3918, column: 29, scope: !9843)
!9848 = !DILocation(line: 3918, column: 36, scope: !9843)
!9849 = !DILocation(line: 3918, column: 43, scope: !9843)
!9850 = !DILocation(line: 3918, column: 7, scope: !9843)
!9851 = !DILocation(line: 3919, column: 19, scope: !9843)
!9852 = !DILocation(line: 3919, column: 26, scope: !9843)
!9853 = !DILocation(line: 3919, column: 38, scope: !9843)
!9854 = !DILocation(line: 3919, column: 53, scope: !9843)
!9855 = !DILocation(line: 3919, column: 7, scope: !9843)
!9856 = !DILocation(line: 3920, column: 6, scope: !9843)
!9857 = !DILocation(line: 3922, column: 19, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 3921, column: 11)
!9859 = !DILocation(line: 3922, column: 26, scope: !9858)
!9860 = !DILocation(line: 3922, column: 38, scope: !9858)
!9861 = !DILocation(line: 3923, column: 19, scope: !9858)
!9862 = !DILocation(line: 3923, column: 26, scope: !9858)
!9863 = !DILocation(line: 3922, column: 7, scope: !9858)
!9864 = !DILocation(line: 3926, column: 19, scope: !9820)
!9865 = !DILocation(line: 3926, column: 25, scope: !9820)
!9866 = !DILocation(line: 3926, column: 29, scope: !9820)
!9867 = !DILocation(line: 3926, column: 6, scope: !9820)
!9868 = !DILocation(line: 3927, column: 21, scope: !9820)
!9869 = !DILocation(line: 3927, column: 27, scope: !9820)
!9870 = !DILocation(line: 3927, column: 34, scope: !9820)
!9871 = !DILocation(line: 3927, column: 6, scope: !9820)
!9872 = !DILocation(line: 3928, column: 6, scope: !9820)
!9873 = !DILocation(line: 3930, column: 3, scope: !9817)
!9874 = !DILocation(line: 3932, column: 12, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 3931, column: 8)
!9876 = !DILocation(line: 3932, column: 19, scope: !9875)
!9877 = !DILocation(line: 3932, column: 4, scope: !9875)
!9878 = !DILocation(line: 3935, column: 14, scope: !9771)
!9879 = !DILocation(line: 3935, column: 21, scope: !9771)
!9880 = !DILocation(line: 3935, column: 40, scope: !9771)
!9881 = !DILocation(line: 3935, column: 3, scope: !9771)
!9882 = !DILocation(line: 3937, column: 7, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 3937, column: 7)
!9884 = !DILocation(line: 3937, column: 12, scope: !9883)
!9885 = !DILocation(line: 3937, column: 7, scope: !9771)
!9886 = !DILocation(line: 3938, column: 15, scope: !9883)
!9887 = !DILocation(line: 3938, column: 22, scope: !9883)
!9888 = !DILocation(line: 3938, column: 41, scope: !9883)
!9889 = !DILocation(line: 3938, column: 48, scope: !9883)
!9890 = !DILocation(line: 3938, column: 4, scope: !9883)
!9891 = !DILocation(line: 3939, column: 12, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 3939, column: 12)
!9893 = !DILocation(line: 3939, column: 17, scope: !9892)
!9894 = !DILocation(line: 3939, column: 12, scope: !9883)
!9895 = !DILocation(line: 3940, column: 15, scope: !9892)
!9896 = !DILocation(line: 3940, column: 22, scope: !9892)
!9897 = !DILocation(line: 3940, column: 41, scope: !9892)
!9898 = !DILocation(line: 3940, column: 48, scope: !9892)
!9899 = !DILocation(line: 3940, column: 4, scope: !9892)
!9900 = !DILocation(line: 3942, column: 7, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 3942, column: 7)
!9902 = !DILocation(line: 3942, column: 7, scope: !9771)
!9903 = !DILocation(line: 3944, column: 15, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 3942, column: 56)
!9905 = !DILocation(line: 3944, column: 22, scope: !9904)
!9906 = !DILocation(line: 3944, column: 37, scope: !9904)
!9907 = !DILocation(line: 3944, column: 44, scope: !9904)
!9908 = !DILocation(line: 3944, column: 4, scope: !9904)
!9909 = !DILocation(line: 3946, column: 4, scope: !9904)
!9910 = !DILocation(line: 3946, column: 9, scope: !9904)
!9911 = !DILocation(line: 3946, column: 23, scope: !9904)
!9912 = !DILocation(line: 3947, column: 15, scope: !9904)
!9913 = !DILocation(line: 3947, column: 20, scope: !9904)
!9914 = !DILocation(line: 3947, column: 44, scope: !9904)
!9915 = !DILocation(line: 3947, column: 51, scope: !9904)
!9916 = !DILocation(line: 3947, column: 4, scope: !9904)
!9917 = !DILocation(line: 3948, column: 25, scope: !9904)
!9918 = !DILocation(line: 3948, column: 30, scope: !9904)
!9919 = !DILocation(line: 3948, column: 4, scope: !9904)
!9920 = !DILocation(line: 3948, column: 9, scope: !9904)
!9921 = !DILocation(line: 3948, column: 23, scope: !9904)
!9922 = !DILocation(line: 3949, column: 3, scope: !9904)
!9923 = !DILocation(line: 3950, column: 2, scope: !9771)
!9924 = !DILocation(line: 3951, column: 1, scope: !9738)
!9925 = distinct !DISubprogram(name: "paint_mesh_restore_co", scope: !3, file: !3, line: 376, type: !8505, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!9926 = !DILocalVariable(name: "sd", arg: 1, scope: !9925, file: !3, line: 376, type: !6)
!9927 = !DILocation(line: 376, column: 43, scope: !9925)
!9928 = !DILocalVariable(name: "ob", arg: 2, scope: !9925, file: !3, line: 376, type: !3739)
!9929 = !DILocation(line: 376, column: 55, scope: !9925)
!9930 = !DILocalVariable(name: "ss", scope: !9925, file: !3, line: 378, type: !5374)
!9931 = !DILocation(line: 378, column: 17, scope: !9925)
!9932 = !DILocation(line: 378, column: 22, scope: !9925)
!9933 = !DILocation(line: 378, column: 26, scope: !9925)
!9934 = !DILocalVariable(name: "cache", scope: !9925, file: !3, line: 379, type: !5642)
!9935 = !DILocation(line: 379, column: 15, scope: !9925)
!9936 = !DILocation(line: 379, column: 23, scope: !9925)
!9937 = !DILocation(line: 379, column: 27, scope: !9925)
!9938 = !DILocalVariable(name: "brush", scope: !9925, file: !3, line: 380, type: !6733)
!9939 = !DILocation(line: 380, column: 15, scope: !9925)
!9940 = !DILocation(line: 380, column: 40, scope: !9925)
!9941 = !DILocation(line: 380, column: 44, scope: !9925)
!9942 = !DILocation(line: 380, column: 23, scope: !9925)
!9943 = !DILocalVariable(name: "i", scope: !9925, file: !3, line: 381, type: !57)
!9944 = !DILocation(line: 381, column: 6, scope: !9925)
!9945 = !DILocalVariable(name: "nodes", scope: !9925, file: !3, line: 383, type: !3741)
!9946 = !DILocation(line: 383, column: 13, scope: !9925)
!9947 = !DILocalVariable(name: "n", scope: !9925, file: !3, line: 384, type: !57)
!9948 = !DILocation(line: 384, column: 6, scope: !9925)
!9949 = !DILocalVariable(name: "totnode", scope: !9925, file: !3, line: 384, type: !57)
!9950 = !DILocation(line: 384, column: 9, scope: !9925)
!9951 = !DILocation(line: 387, column: 8, scope: !9925)
!9952 = !DILocation(line: 390, column: 25, scope: !9925)
!9953 = !DILocation(line: 390, column: 29, scope: !9925)
!9954 = !DILocation(line: 390, column: 2, scope: !9925)
!9955 = !DILocation(line: 399, column: 9, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 399, column: 2)
!9957 = !DILocation(line: 399, column: 7, scope: !9956)
!9958 = !DILocation(line: 399, column: 14, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 399, column: 2)
!9960 = !DILocation(line: 399, column: 18, scope: !9959)
!9961 = !DILocation(line: 399, column: 16, scope: !9959)
!9962 = !DILocation(line: 399, column: 2, scope: !9956)
!9963 = !DILocalVariable(name: "unode", scope: !9964, file: !3, line: 400, type: !5893)
!9964 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 399, column: 32)
!9965 = !DILocation(line: 400, column: 19, scope: !9964)
!9966 = !DILocalVariable(name: "type", scope: !9964, file: !3, line: 401, type: !5901)
!9967 = !DILocation(line: 401, column: 18, scope: !9964)
!9968 = !DILocation(line: 401, column: 26, scope: !9964)
!9969 = !DILocation(line: 401, column: 33, scope: !9964)
!9970 = !DILocation(line: 401, column: 45, scope: !9964)
!9971 = !DILocation(line: 404, column: 7, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 404, column: 7)
!9973 = !DILocation(line: 404, column: 11, scope: !9972)
!9974 = !DILocation(line: 404, column: 7, scope: !9964)
!9975 = !DILocation(line: 405, column: 34, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 404, column: 15)
!9977 = !DILocation(line: 405, column: 38, scope: !9976)
!9978 = !DILocation(line: 405, column: 44, scope: !9976)
!9979 = !DILocation(line: 405, column: 48, scope: !9976)
!9980 = !DILocation(line: 405, column: 12, scope: !9976)
!9981 = !DILocation(line: 405, column: 10, scope: !9976)
!9982 = !DILocation(line: 406, column: 3, scope: !9976)
!9983 = !DILocation(line: 408, column: 33, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 407, column: 8)
!9985 = !DILocation(line: 408, column: 39, scope: !9984)
!9986 = !DILocation(line: 408, column: 12, scope: !9984)
!9987 = !DILocation(line: 408, column: 10, scope: !9984)
!9988 = !DILocation(line: 410, column: 7, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 410, column: 7)
!9990 = !DILocation(line: 410, column: 7, scope: !9964)
!9991 = !DILocalVariable(name: "vd", scope: !9992, file: !3, line: 411, type: !9184)
!9992 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 410, column: 14)
!9993 = !DILocation(line: 411, column: 19, scope: !9992)
!9994 = !DILocalVariable(name: "orig_data", scope: !9992, file: !3, line: 412, type: !9995)
!9995 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptOrigVertData", file: !3, line: 273, baseType: !9996)
!9996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 261, size: 512, elements: !9997)
!9997 = !{!9998, !10002, !10003, !10004, !10005, !10006, !10007, !10008}
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !9996, file: !3, line: 262, baseType: !9999, size: 64)
!9999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10000, size: 64)
!10000 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLog", file: !10001, line: 33, baseType: !2318)
!10001 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10002 = !DIDerivedType(tag: DW_TAG_member, name: "unode", scope: !9996, file: !3, line: 264, baseType: !5893, size: 64, offset: 64)
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "coords", scope: !9996, file: !3, line: 265, baseType: !2054, size: 64, offset: 128)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !9996, file: !3, line: 266, baseType: !5907, size: 64, offset: 192)
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "vmasks", scope: !9996, file: !3, line: 267, baseType: !3251, size: 64, offset: 256)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !9996, file: !3, line: 270, baseType: !3251, size: 64, offset: 320)
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !9996, file: !3, line: 271, baseType: !3252, size: 64, offset: 384)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9996, file: !3, line: 272, baseType: !153, size: 32, offset: 448)
!10009 = !DILocation(line: 412, column: 23, scope: !9992)
!10010 = !DILocation(line: 414, column: 49, scope: !9992)
!10011 = !DILocation(line: 414, column: 53, scope: !9992)
!10012 = !DILocation(line: 414, column: 4, scope: !9992)
!10013 = !DILocation(line: 416, column: 4, scope: !9992)
!10014 = !DILocation(line: 416, column: 4, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 416, column: 4)
!10016 = !DILocation(line: 416, column: 4, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 416, column: 4)
!10018 = !DILocation(line: 416, column: 4, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 416, column: 4)
!10020 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 416, column: 4)
!10021 = !DILocation(line: 416, column: 4, scope: !10020)
!10022 = !DILocation(line: 416, column: 4, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 416, column: 4)
!10024 = !DILocation(line: 416, column: 4, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 416, column: 4)
!10026 = !DILocation(line: 416, column: 4, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 416, column: 4)
!10028 = !DILocation(line: 416, column: 4, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 416, column: 4)
!10030 = !DILocation(line: 416, column: 4, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 416, column: 4)
!10032 = !DILocation(line: 416, column: 4, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 416, column: 4)
!10034 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 416, column: 4)
!10035 = !DILocation(line: 416, column: 4, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 416, column: 4)
!10037 = !DILocation(line: 416, column: 4, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 416, column: 4)
!10039 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 416, column: 4)
!10040 = !DILocation(line: 416, column: 4, scope: !10039)
!10041 = !DILocation(line: 416, column: 4, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 416, column: 4)
!10043 = !DILocation(line: 416, column: 4, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 416, column: 4)
!10045 = !DILocation(line: 416, column: 4, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 416, column: 4)
!10047 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 416, column: 4)
!10048 = !DILocation(line: 416, column: 4, scope: !10047)
!10049 = !DILocation(line: 416, column: 4, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 416, column: 4)
!10051 = !DILocation(line: 416, column: 4, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 416, column: 4)
!10053 = !DILocation(line: 416, column: 4, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 416, column: 4)
!10055 = !DILocation(line: 416, column: 4, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 416, column: 4)
!10057 = !DILocation(line: 416, column: 4, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 416, column: 4)
!10059 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 416, column: 4)
!10060 = !DILocation(line: 416, column: 4, scope: !10059)
!10061 = !DILocation(line: 416, column: 4, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 416, column: 4)
!10063 = !DILocation(line: 416, column: 4, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 416, column: 4)
!10065 = !DILocation(line: 416, column: 4, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 416, column: 4)
!10067 = !DILocation(line: 418, column: 5, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 417, column: 4)
!10069 = !DILocation(line: 420, column: 19, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 420, column: 9)
!10071 = !DILocation(line: 420, column: 26, scope: !10070)
!10072 = !DILocation(line: 420, column: 31, scope: !10070)
!10073 = !DILocation(line: 420, column: 9, scope: !10068)
!10074 = !DILocation(line: 421, column: 20, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 420, column: 54)
!10076 = !DILocation(line: 421, column: 34, scope: !10075)
!10077 = !DILocation(line: 421, column: 6, scope: !10075)
!10078 = !DILocation(line: 422, column: 13, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 422, column: 10)
!10080 = !DILocation(line: 422, column: 10, scope: !10079)
!10081 = !DILocation(line: 422, column: 10, scope: !10075)
!10082 = !DILocation(line: 422, column: 37, scope: !10079)
!10083 = !DILocation(line: 422, column: 51, scope: !10079)
!10084 = !DILocation(line: 422, column: 17, scope: !10079)
!10085 = !DILocation(line: 423, column: 39, scope: !10079)
!10086 = !DILocation(line: 423, column: 54, scope: !10079)
!10087 = !DILocation(line: 423, column: 11, scope: !10079)
!10088 = !DILocation(line: 424, column: 5, scope: !10075)
!10089 = !DILocation(line: 425, column: 24, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 425, column: 14)
!10091 = !DILocation(line: 425, column: 31, scope: !10090)
!10092 = !DILocation(line: 425, column: 36, scope: !10090)
!10093 = !DILocation(line: 425, column: 14, scope: !10070)
!10094 = !DILocation(line: 426, column: 27, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 425, column: 57)
!10096 = !DILocation(line: 426, column: 10, scope: !10095)
!10097 = !DILocation(line: 426, column: 15, scope: !10095)
!10098 = !DILocation(line: 427, column: 5, scope: !10095)
!10099 = !DILocation(line: 428, column: 12, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 428, column: 9)
!10101 = !DILocation(line: 428, column: 9, scope: !10100)
!10102 = !DILocation(line: 428, column: 9, scope: !10068)
!10103 = !DILocation(line: 428, column: 22, scope: !10100)
!10104 = !DILocation(line: 428, column: 29, scope: !10100)
!10105 = !DILocation(line: 428, column: 34, scope: !10100)
!10106 = !DILocation(line: 428, column: 19, scope: !10100)
!10107 = !DILocation(line: 430, column: 4, scope: !10039)
!10108 = distinct !{!10108, !10032, !10109}
!10109 = !DILocation(line: 430, column: 4, scope: !10033)
!10110 = !DILocation(line: 430, column: 4, scope: !10034)
!10111 = distinct !{!10111, !10028, !10112}
!10112 = !DILocation(line: 430, column: 4, scope: !10029)
!10113 = !DILocation(line: 430, column: 4, scope: !10020)
!10114 = distinct !{!10114, !10014, !10115}
!10115 = !DILocation(line: 430, column: 4, scope: !10015)
!10116 = !DILocation(line: 432, column: 30, scope: !9992)
!10117 = !DILocation(line: 432, column: 36, scope: !9992)
!10118 = !DILocation(line: 432, column: 4, scope: !9992)
!10119 = !DILocation(line: 433, column: 3, scope: !9992)
!10120 = !DILocation(line: 434, column: 2, scope: !9964)
!10121 = !DILocation(line: 399, column: 28, scope: !9959)
!10122 = !DILocation(line: 399, column: 2, scope: !9959)
!10123 = distinct !{!10123, !9962, !10124}
!10124 = !DILocation(line: 434, column: 2, scope: !9956)
!10125 = !DILocation(line: 436, column: 6, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 436, column: 6)
!10127 = !DILocation(line: 436, column: 10, scope: !10126)
!10128 = !DILocation(line: 436, column: 6, scope: !9925)
!10129 = !DILocation(line: 437, column: 10, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 437, column: 3)
!10131 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 436, column: 24)
!10132 = !DILocation(line: 437, column: 8, scope: !10130)
!10133 = !DILocation(line: 437, column: 15, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 437, column: 3)
!10135 = !DILocation(line: 437, column: 19, scope: !10134)
!10136 = !DILocation(line: 437, column: 23, scope: !10134)
!10137 = !DILocation(line: 437, column: 17, scope: !10134)
!10138 = !DILocation(line: 437, column: 3, scope: !10130)
!10139 = !DILocation(line: 438, column: 15, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 437, column: 37)
!10141 = !DILocation(line: 438, column: 19, scope: !10140)
!10142 = !DILocation(line: 438, column: 32, scope: !10140)
!10143 = !DILocation(line: 438, column: 36, scope: !10140)
!10144 = !DILocation(line: 438, column: 43, scope: !10140)
!10145 = !DILocation(line: 438, column: 54, scope: !10140)
!10146 = !DILocation(line: 438, column: 4, scope: !10140)
!10147 = !DILocation(line: 439, column: 3, scope: !10140)
!10148 = !DILocation(line: 437, column: 33, scope: !10134)
!10149 = !DILocation(line: 437, column: 3, scope: !10134)
!10150 = distinct !{!10150, !10138, !10151}
!10151 = !DILocation(line: 439, column: 3, scope: !10130)
!10152 = !DILocation(line: 440, column: 2, scope: !10131)
!10153 = !DILocation(line: 442, column: 6, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 442, column: 6)
!10155 = !DILocation(line: 442, column: 6, scope: !9925)
!10156 = !DILocation(line: 443, column: 3, scope: !10154)
!10157 = !DILocation(line: 443, column: 13, scope: !10154)
!10158 = !DILocation(line: 444, column: 1, scope: !9925)
!10159 = distinct !DISubprogram(name: "sculpt_orig_vert_data_unode_init", scope: !3, file: !3, line: 278, type: !10160, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10160 = !DISubroutineType(types: !10161)
!10161 = !{null, !10162, !3739, !5893}
!10162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9995, size: 64)
!10163 = !DILocalVariable(name: "data", arg: 1, scope: !10159, file: !3, line: 278, type: !10162)
!10164 = !DILocation(line: 278, column: 66, scope: !10159)
!10165 = !DILocalVariable(name: "ob", arg: 2, scope: !10159, file: !3, line: 279, type: !3739)
!10166 = !DILocation(line: 279, column: 54, scope: !10159)
!10167 = !DILocalVariable(name: "unode", arg: 3, scope: !10159, file: !3, line: 280, type: !5893)
!10168 = !DILocation(line: 280, column: 62, scope: !10159)
!10169 = !DILocalVariable(name: "ss", scope: !10159, file: !3, line: 282, type: !5374)
!10170 = !DILocation(line: 282, column: 17, scope: !10159)
!10171 = !DILocation(line: 282, column: 22, scope: !10159)
!10172 = !DILocation(line: 282, column: 26, scope: !10159)
!10173 = !DILocalVariable(name: "bm", scope: !10159, file: !3, line: 283, type: !2252)
!10174 = !DILocation(line: 283, column: 9, scope: !10159)
!10175 = !DILocation(line: 283, column: 14, scope: !10159)
!10176 = !DILocation(line: 283, column: 18, scope: !10159)
!10177 = !DILocation(line: 285, column: 9, scope: !10159)
!10178 = !DILocation(line: 285, column: 2, scope: !10159)
!10179 = !DILocation(line: 286, column: 16, scope: !10159)
!10180 = !DILocation(line: 286, column: 2, scope: !10159)
!10181 = !DILocation(line: 286, column: 8, scope: !10159)
!10182 = !DILocation(line: 286, column: 14, scope: !10159)
!10183 = !DILocation(line: 288, column: 6, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 288, column: 6)
!10185 = !DILocation(line: 288, column: 6, scope: !10159)
!10186 = !DILocation(line: 289, column: 18, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 288, column: 10)
!10188 = !DILocation(line: 289, column: 22, scope: !10187)
!10189 = !DILocation(line: 289, column: 3, scope: !10187)
!10190 = !DILocation(line: 289, column: 9, scope: !10187)
!10191 = !DILocation(line: 289, column: 16, scope: !10187)
!10192 = !DILocation(line: 290, column: 2, scope: !10187)
!10193 = !DILocation(line: 292, column: 18, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 291, column: 7)
!10195 = !DILocation(line: 292, column: 24, scope: !10194)
!10196 = !DILocation(line: 292, column: 31, scope: !10194)
!10197 = !DILocation(line: 292, column: 3, scope: !10194)
!10198 = !DILocation(line: 292, column: 9, scope: !10194)
!10199 = !DILocation(line: 292, column: 16, scope: !10194)
!10200 = !DILocation(line: 293, column: 19, scope: !10194)
!10201 = !DILocation(line: 293, column: 25, scope: !10194)
!10202 = !DILocation(line: 293, column: 32, scope: !10194)
!10203 = !DILocation(line: 293, column: 3, scope: !10194)
!10204 = !DILocation(line: 293, column: 9, scope: !10194)
!10205 = !DILocation(line: 293, column: 17, scope: !10194)
!10206 = !DILocation(line: 294, column: 18, scope: !10194)
!10207 = !DILocation(line: 294, column: 24, scope: !10194)
!10208 = !DILocation(line: 294, column: 31, scope: !10194)
!10209 = !DILocation(line: 294, column: 3, scope: !10194)
!10210 = !DILocation(line: 294, column: 9, scope: !10194)
!10211 = !DILocation(line: 294, column: 16, scope: !10194)
!10212 = !DILocation(line: 296, column: 1, scope: !10159)
!10213 = distinct !DISubprogram(name: "CCG_elem_co", scope: !3217, file: !3217, line: 109, type: !10214, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{!359, !10216, !5164}
!10216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10217, size: 64)
!10217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10218)
!10218 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !3217, line: 78, baseType: !3216)
!10219 = !DILocalVariable(name: "UNUSED_key", arg: 1, scope: !10213, file: !3217, line: 109, type: !10216)
!10220 = !DILocation(line: 109, column: 45, scope: !10213)
!10221 = !DILocalVariable(name: "elem", arg: 2, scope: !10213, file: !3217, line: 109, type: !5164)
!10222 = !DILocation(line: 109, column: 67, scope: !10213)
!10223 = !DILocation(line: 111, column: 18, scope: !10213)
!10224 = !DILocation(line: 111, column: 9, scope: !10213)
!10225 = !DILocation(line: 111, column: 2, scope: !10213)
!10226 = distinct !DISubprogram(name: "CCG_elem_no", scope: !3217, file: !3217, line: 114, type: !10214, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10227 = !DILocalVariable(name: "key", arg: 1, scope: !10226, file: !3217, line: 114, type: !10216)
!10228 = !DILocation(line: 114, column: 45, scope: !10226)
!10229 = !DILocalVariable(name: "elem", arg: 2, scope: !10226, file: !3217, line: 114, type: !5164)
!10230 = !DILocation(line: 114, column: 59, scope: !10226)
!10231 = !DILocation(line: 117, column: 27, scope: !10226)
!10232 = !DILocation(line: 117, column: 19, scope: !10226)
!10233 = !DILocation(line: 117, column: 34, scope: !10226)
!10234 = !DILocation(line: 117, column: 39, scope: !10226)
!10235 = !DILocation(line: 117, column: 32, scope: !10226)
!10236 = !DILocation(line: 117, column: 9, scope: !10226)
!10237 = !DILocation(line: 117, column: 2, scope: !10226)
!10238 = distinct !DISubprogram(name: "CCG_elem_mask", scope: !3217, file: !3217, line: 120, type: !10214, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10239 = !DILocalVariable(name: "key", arg: 1, scope: !10238, file: !3217, line: 120, type: !10216)
!10240 = !DILocation(line: 120, column: 47, scope: !10238)
!10241 = !DILocalVariable(name: "elem", arg: 2, scope: !10238, file: !3217, line: 120, type: !5164)
!10242 = !DILocation(line: 120, column: 61, scope: !10238)
!10243 = !DILocation(line: 123, column: 27, scope: !10238)
!10244 = !DILocation(line: 123, column: 19, scope: !10238)
!10245 = !DILocation(line: 123, column: 35, scope: !10238)
!10246 = !DILocation(line: 123, column: 40, scope: !10238)
!10247 = !DILocation(line: 123, column: 32, scope: !10238)
!10248 = !DILocation(line: 123, column: 9, scope: !10238)
!10249 = !DILocation(line: 123, column: 2, scope: !10238)
!10250 = distinct !DISubprogram(name: "CCG_elem_next", scope: !3217, file: !3217, line: 167, type: !10251, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!5164, !10216, !5164}
!10253 = !DILocalVariable(name: "key", arg: 1, scope: !10250, file: !3217, line: 167, type: !10216)
!10254 = !DILocation(line: 167, column: 49, scope: !10250)
!10255 = !DILocalVariable(name: "elem", arg: 2, scope: !10250, file: !3217, line: 167, type: !5164)
!10256 = !DILocation(line: 167, column: 63, scope: !10250)
!10257 = !DILocation(line: 169, column: 25, scope: !10250)
!10258 = !DILocation(line: 169, column: 30, scope: !10250)
!10259 = !DILocation(line: 169, column: 9, scope: !10250)
!10260 = !DILocation(line: 169, column: 2, scope: !10250)
!10261 = distinct !DISubprogram(name: "BLI_gsetIterator_done", scope: !1051, file: !1051, line: 220, type: !10262, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{!2315, !10264}
!10264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10265, size: 64)
!10265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSetIterator", file: !1051, line: 189, baseType: !9206)
!10266 = !DILocalVariable(name: "gsi", arg: 1, scope: !10261, file: !1051, line: 220, type: !10264)
!10267 = !DILocation(line: 220, column: 53, scope: !10261)
!10268 = !DILocation(line: 220, column: 107, scope: !10261)
!10269 = !DILocation(line: 220, column: 90, scope: !10261)
!10270 = !DILocation(line: 220, column: 67, scope: !10261)
!10271 = !DILocation(line: 220, column: 60, scope: !10261)
!10272 = distinct !DISubprogram(name: "BLI_gsetIterator_getKey", scope: !1051, file: !1051, line: 218, type: !10273, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10273 = !DISubroutineType(types: !10274)
!10274 = !{!26, !10264}
!10275 = !DILocalVariable(name: "gsi", arg: 1, scope: !10272, file: !1051, line: 218, type: !10264)
!10276 = !DILocation(line: 218, column: 56, scope: !10272)
!10277 = !DILocation(line: 218, column: 112, scope: !10272)
!10278 = !DILocation(line: 218, column: 95, scope: !10272)
!10279 = !DILocation(line: 218, column: 70, scope: !10272)
!10280 = !DILocation(line: 218, column: 63, scope: !10272)
!10281 = distinct !DISubprogram(name: "BLI_gsetIterator_step", scope: !1051, file: !1051, line: 219, type: !10282, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10282 = !DISubroutineType(types: !10283)
!10283 = !{null, !10264}
!10284 = !DILocalVariable(name: "gsi", arg: 1, scope: !10281, file: !1051, line: 219, type: !10264)
!10285 = !DILocation(line: 219, column: 53, scope: !10281)
!10286 = !DILocation(line: 219, column: 100, scope: !10281)
!10287 = !DILocation(line: 219, column: 83, scope: !10281)
!10288 = !DILocation(line: 219, column: 60, scope: !10281)
!10289 = !DILocation(line: 219, column: 106, scope: !10281)
!10290 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !10291, file: !10291, line: 42, type: !10292, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10291 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!42, !10294, !487}
!10294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10295, size: 64)
!10295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2113)
!10296 = !DILocalVariable(name: "head", arg: 1, scope: !10290, file: !10291, line: 42, type: !10294)
!10297 = !DILocation(line: 42, column: 52, scope: !10290)
!10298 = !DILocalVariable(name: "hflag", arg: 2, scope: !10290, file: !10291, line: 42, type: !487)
!10299 = !DILocation(line: 42, column: 69, scope: !10290)
!10300 = !DILocation(line: 44, column: 9, scope: !10290)
!10301 = !DILocation(line: 44, column: 15, scope: !10290)
!10302 = !DILocation(line: 44, column: 23, scope: !10290)
!10303 = !DILocation(line: 44, column: 21, scope: !10290)
!10304 = !DILocation(line: 44, column: 2, scope: !10290)
!10305 = distinct !DISubprogram(name: "sculpt_orig_vert_data_update", scope: !3, file: !3, line: 311, type: !10306, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{null, !10162, !10308}
!10308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9184, size: 64)
!10309 = !DILocalVariable(name: "orig_data", arg: 1, scope: !10305, file: !3, line: 311, type: !10162)
!10310 = !DILocation(line: 311, column: 62, scope: !10305)
!10311 = !DILocalVariable(name: "iter", arg: 2, scope: !10305, file: !3, line: 312, type: !10308)
!10312 = !DILocation(line: 312, column: 58, scope: !10305)
!10313 = !DILocation(line: 314, column: 6, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 314, column: 6)
!10315 = !DILocation(line: 314, column: 17, scope: !10314)
!10316 = !DILocation(line: 314, column: 24, scope: !10314)
!10317 = !DILocation(line: 314, column: 29, scope: !10314)
!10318 = !DILocation(line: 314, column: 6, scope: !10305)
!10319 = !DILocation(line: 315, column: 7, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 315, column: 7)
!10321 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 314, column: 52)
!10322 = !DILocation(line: 315, column: 18, scope: !10320)
!10323 = !DILocation(line: 315, column: 7, scope: !10321)
!10324 = !DILocation(line: 316, column: 20, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 315, column: 26)
!10326 = !DILocation(line: 316, column: 31, scope: !10325)
!10327 = !DILocation(line: 316, column: 38, scope: !10325)
!10328 = !DILocation(line: 316, column: 44, scope: !10325)
!10329 = !DILocation(line: 316, column: 4, scope: !10325)
!10330 = !DILocation(line: 316, column: 15, scope: !10325)
!10331 = !DILocation(line: 316, column: 18, scope: !10325)
!10332 = !DILocation(line: 317, column: 3, scope: !10325)
!10333 = !DILocation(line: 319, column: 44, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 318, column: 8)
!10335 = !DILocation(line: 319, column: 55, scope: !10334)
!10336 = !DILocation(line: 319, column: 63, scope: !10334)
!10337 = !DILocation(line: 319, column: 69, scope: !10334)
!10338 = !DILocation(line: 319, column: 20, scope: !10334)
!10339 = !DILocation(line: 319, column: 4, scope: !10334)
!10340 = !DILocation(line: 319, column: 15, scope: !10334)
!10341 = !DILocation(line: 319, column: 18, scope: !10334)
!10342 = !DILocation(line: 322, column: 7, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 322, column: 7)
!10344 = !DILocation(line: 322, column: 18, scope: !10343)
!10345 = !DILocation(line: 322, column: 7, scope: !10321)
!10346 = !DILocation(line: 323, column: 20, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 322, column: 27)
!10348 = !DILocation(line: 323, column: 31, scope: !10347)
!10349 = !DILocation(line: 323, column: 39, scope: !10347)
!10350 = !DILocation(line: 323, column: 45, scope: !10347)
!10351 = !DILocation(line: 323, column: 4, scope: !10347)
!10352 = !DILocation(line: 323, column: 15, scope: !10347)
!10353 = !DILocation(line: 323, column: 18, scope: !10347)
!10354 = !DILocation(line: 324, column: 3, scope: !10347)
!10355 = !DILocation(line: 326, column: 44, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 325, column: 8)
!10357 = !DILocation(line: 326, column: 55, scope: !10356)
!10358 = !DILocation(line: 326, column: 63, scope: !10356)
!10359 = !DILocation(line: 326, column: 69, scope: !10356)
!10360 = !DILocation(line: 326, column: 20, scope: !10356)
!10361 = !DILocation(line: 326, column: 4, scope: !10356)
!10362 = !DILocation(line: 326, column: 15, scope: !10356)
!10363 = !DILocation(line: 326, column: 18, scope: !10356)
!10364 = !DILocation(line: 328, column: 2, scope: !10321)
!10365 = !DILocation(line: 329, column: 11, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 329, column: 11)
!10367 = !DILocation(line: 329, column: 22, scope: !10366)
!10368 = !DILocation(line: 329, column: 29, scope: !10366)
!10369 = !DILocation(line: 329, column: 34, scope: !10366)
!10370 = !DILocation(line: 329, column: 11, scope: !10314)
!10371 = !DILocation(line: 330, column: 7, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 330, column: 7)
!10373 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 329, column: 55)
!10374 = !DILocation(line: 330, column: 18, scope: !10372)
!10375 = !DILocation(line: 330, column: 7, scope: !10373)
!10376 = !DILocation(line: 331, column: 22, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 330, column: 26)
!10378 = !DILocation(line: 331, column: 33, scope: !10377)
!10379 = !DILocation(line: 331, column: 40, scope: !10377)
!10380 = !DILocation(line: 331, column: 46, scope: !10377)
!10381 = !DILocation(line: 331, column: 4, scope: !10377)
!10382 = !DILocation(line: 331, column: 15, scope: !10377)
!10383 = !DILocation(line: 331, column: 20, scope: !10377)
!10384 = !DILocation(line: 332, column: 3, scope: !10377)
!10385 = !DILocation(line: 334, column: 43, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 333, column: 8)
!10387 = !DILocation(line: 334, column: 54, scope: !10386)
!10388 = !DILocation(line: 334, column: 62, scope: !10386)
!10389 = !DILocation(line: 334, column: 68, scope: !10386)
!10390 = !DILocation(line: 334, column: 22, scope: !10386)
!10391 = !DILocation(line: 334, column: 4, scope: !10386)
!10392 = !DILocation(line: 334, column: 15, scope: !10386)
!10393 = !DILocation(line: 334, column: 20, scope: !10386)
!10394 = !DILocation(line: 336, column: 2, scope: !10373)
!10395 = !DILocation(line: 337, column: 1, scope: !10305)
!10396 = distinct !DISubprogram(name: "copy_v3_v3_short", scope: !5234, file: !5234, line: 136, type: !10397, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{null, !5149, !3252}
!10399 = !DILocalVariable(name: "r", arg: 1, scope: !10396, file: !5234, line: 136, type: !5149)
!10400 = !DILocation(line: 136, column: 37, scope: !10396)
!10401 = !DILocalVariable(name: "a", arg: 2, scope: !10396, file: !5234, line: 136, type: !3252)
!10402 = !DILocation(line: 136, column: 55, scope: !10396)
!10403 = !DILocation(line: 138, column: 9, scope: !10396)
!10404 = !DILocation(line: 138, column: 2, scope: !10396)
!10405 = !DILocation(line: 138, column: 7, scope: !10396)
!10406 = !DILocation(line: 139, column: 9, scope: !10396)
!10407 = !DILocation(line: 139, column: 2, scope: !10396)
!10408 = !DILocation(line: 139, column: 7, scope: !10396)
!10409 = !DILocation(line: 140, column: 9, scope: !10396)
!10410 = !DILocation(line: 140, column: 2, scope: !10396)
!10411 = !DILocation(line: 140, column: 7, scope: !10396)
!10412 = !DILocation(line: 141, column: 1, scope: !10396)
!10413 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !5234, file: !5234, line: 835, type: !10414, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{null, !359, !3252}
!10416 = !DILocalVariable(name: "out", arg: 1, scope: !10413, file: !5234, line: 835, type: !359)
!10417 = !DILocation(line: 835, column: 45, scope: !10413)
!10418 = !DILocalVariable(name: "in", arg: 2, scope: !10413, file: !5234, line: 835, type: !3252)
!10419 = !DILocation(line: 835, column: 65, scope: !10413)
!10420 = !DILocation(line: 837, column: 11, scope: !10413)
!10421 = !DILocation(line: 837, column: 17, scope: !10413)
!10422 = !DILocation(line: 837, column: 2, scope: !10413)
!10423 = !DILocation(line: 837, column: 9, scope: !10413)
!10424 = !DILocation(line: 838, column: 11, scope: !10413)
!10425 = !DILocation(line: 838, column: 17, scope: !10413)
!10426 = !DILocation(line: 838, column: 2, scope: !10413)
!10427 = !DILocation(line: 838, column: 9, scope: !10413)
!10428 = !DILocation(line: 839, column: 11, scope: !10413)
!10429 = !DILocation(line: 839, column: 17, scope: !10413)
!10430 = !DILocation(line: 839, column: 2, scope: !10413)
!10431 = !DILocation(line: 839, column: 9, scope: !10413)
!10432 = !DILocation(line: 840, column: 1, scope: !10413)
!10433 = distinct !DISubprogram(name: "CCG_elem_offset", scope: !3217, file: !3217, line: 126, type: !10434, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{!5164, !10216, !5164, !57}
!10436 = !DILocalVariable(name: "key", arg: 1, scope: !10433, file: !3217, line: 126, type: !10216)
!10437 = !DILocation(line: 126, column: 51, scope: !10433)
!10438 = !DILocalVariable(name: "elem", arg: 2, scope: !10433, file: !3217, line: 126, type: !5164)
!10439 = !DILocation(line: 126, column: 65, scope: !10433)
!10440 = !DILocalVariable(name: "offset", arg: 3, scope: !10433, file: !3217, line: 126, type: !57)
!10441 = !DILocation(line: 126, column: 75, scope: !10433)
!10442 = !DILocation(line: 128, column: 30, scope: !10433)
!10443 = !DILocation(line: 128, column: 22, scope: !10433)
!10444 = !DILocation(line: 128, column: 38, scope: !10433)
!10445 = !DILocation(line: 128, column: 43, scope: !10433)
!10446 = !DILocation(line: 128, column: 55, scope: !10433)
!10447 = !DILocation(line: 128, column: 53, scope: !10433)
!10448 = !DILocation(line: 128, column: 36, scope: !10433)
!10449 = !DILocation(line: 128, column: 9, scope: !10433)
!10450 = !DILocation(line: 128, column: 2, scope: !10433)
!10451 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !1051, file: !1051, line: 98, type: !10452, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{!2315, !5166}
!10454 = !DILocalVariable(name: "ghi", arg: 1, scope: !10451, file: !1051, line: 98, type: !5166)
!10455 = !DILocation(line: 98, column: 57, scope: !10451)
!10456 = !DILocation(line: 98, column: 78, scope: !10451)
!10457 = !DILocation(line: 98, column: 83, scope: !10451)
!10458 = !DILocation(line: 98, column: 77, scope: !10451)
!10459 = !DILocation(line: 98, column: 70, scope: !10451)
!10460 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !1051, file: !1051, line: 95, type: !10461, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{!26, !5166}
!10463 = !DILocalVariable(name: "ghi", arg: 1, scope: !10460, file: !1051, line: 95, type: !5166)
!10464 = !DILocation(line: 95, column: 59, scope: !10460)
!10465 = !DILocation(line: 95, column: 99, scope: !10460)
!10466 = !DILocation(line: 95, column: 104, scope: !10460)
!10467 = !DILocation(line: 95, column: 115, scope: !10460)
!10468 = !DILocation(line: 95, column: 70, scope: !10460)
!10469 = distinct !DISubprogram(name: "calc_symmetry_feather", scope: !3, file: !3, line: 708, type: !10470, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{!153, !6, !5642}
!10472 = !DILocalVariable(name: "sd", arg: 1, scope: !10469, file: !3, line: 708, type: !6)
!10473 = !DILocation(line: 708, column: 44, scope: !10469)
!10474 = !DILocalVariable(name: "cache", arg: 2, scope: !10469, file: !3, line: 708, type: !5642)
!10475 = !DILocation(line: 708, column: 61, scope: !10469)
!10476 = !DILocation(line: 710, column: 6, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 710, column: 6)
!10478 = !DILocation(line: 710, column: 10, scope: !10477)
!10479 = !DILocation(line: 710, column: 16, scope: !10477)
!10480 = !DILocation(line: 710, column: 31, scope: !10477)
!10481 = !DILocation(line: 710, column: 6, scope: !10469)
!10482 = !DILocalVariable(name: "overlap", scope: !10483, file: !3, line: 711, type: !153)
!10483 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 710, column: 57)
!10484 = !DILocation(line: 711, column: 9, scope: !10483)
!10485 = !DILocalVariable(name: "symm", scope: !10483, file: !3, line: 712, type: !57)
!10486 = !DILocation(line: 712, column: 7, scope: !10483)
!10487 = !DILocation(line: 712, column: 14, scope: !10483)
!10488 = !DILocation(line: 712, column: 21, scope: !10483)
!10489 = !DILocalVariable(name: "i", scope: !10483, file: !3, line: 713, type: !57)
!10490 = !DILocation(line: 713, column: 7, scope: !10483)
!10491 = !DILocation(line: 715, column: 11, scope: !10483)
!10492 = !DILocation(line: 716, column: 10, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 716, column: 3)
!10494 = !DILocation(line: 716, column: 8, scope: !10493)
!10495 = !DILocation(line: 716, column: 15, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 716, column: 3)
!10497 = !DILocation(line: 716, column: 20, scope: !10496)
!10498 = !DILocation(line: 716, column: 17, scope: !10496)
!10499 = !DILocation(line: 716, column: 3, scope: !10493)
!10500 = !DILocation(line: 717, column: 8, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 717, column: 8)
!10502 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 716, column: 31)
!10503 = !DILocation(line: 717, column: 10, scope: !10501)
!10504 = !DILocation(line: 717, column: 15, scope: !10501)
!10505 = !DILocation(line: 717, column: 19, scope: !10501)
!10506 = !DILocation(line: 717, column: 26, scope: !10501)
!10507 = !DILocation(line: 717, column: 24, scope: !10501)
!10508 = !DILocation(line: 717, column: 28, scope: !10501)
!10509 = !DILocation(line: 717, column: 32, scope: !10501)
!10510 = !DILocation(line: 717, column: 37, scope: !10501)
!10511 = !DILocation(line: 717, column: 42, scope: !10501)
!10512 = !DILocation(line: 717, column: 45, scope: !10501)
!10513 = !DILocation(line: 717, column: 47, scope: !10501)
!10514 = !DILocation(line: 717, column: 53, scope: !10501)
!10515 = !DILocation(line: 717, column: 57, scope: !10501)
!10516 = !DILocation(line: 717, column: 62, scope: !10501)
!10517 = !DILocation(line: 717, column: 67, scope: !10501)
!10518 = !DILocation(line: 717, column: 71, scope: !10501)
!10519 = !DILocation(line: 717, column: 73, scope: !10501)
!10520 = !DILocation(line: 717, column: 78, scope: !10501)
!10521 = !DILocation(line: 717, column: 81, scope: !10501)
!10522 = !DILocation(line: 717, column: 83, scope: !10501)
!10523 = !DILocation(line: 717, column: 8, scope: !10502)
!10524 = !DILocation(line: 719, column: 29, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 717, column: 92)
!10526 = !DILocation(line: 719, column: 36, scope: !10525)
!10527 = !DILocation(line: 719, column: 16, scope: !10525)
!10528 = !DILocation(line: 719, column: 13, scope: !10525)
!10529 = !DILocation(line: 721, column: 45, scope: !10525)
!10530 = !DILocation(line: 721, column: 49, scope: !10525)
!10531 = !DILocation(line: 721, column: 56, scope: !10525)
!10532 = !DILocation(line: 721, column: 16, scope: !10525)
!10533 = !DILocation(line: 721, column: 13, scope: !10525)
!10534 = !DILocation(line: 722, column: 45, scope: !10525)
!10535 = !DILocation(line: 722, column: 49, scope: !10525)
!10536 = !DILocation(line: 722, column: 56, scope: !10525)
!10537 = !DILocation(line: 722, column: 16, scope: !10525)
!10538 = !DILocation(line: 722, column: 13, scope: !10525)
!10539 = !DILocation(line: 723, column: 45, scope: !10525)
!10540 = !DILocation(line: 723, column: 49, scope: !10525)
!10541 = !DILocation(line: 723, column: 56, scope: !10525)
!10542 = !DILocation(line: 723, column: 16, scope: !10525)
!10543 = !DILocation(line: 723, column: 13, scope: !10525)
!10544 = !DILocation(line: 724, column: 4, scope: !10525)
!10545 = !DILocation(line: 725, column: 3, scope: !10502)
!10546 = !DILocation(line: 716, column: 27, scope: !10496)
!10547 = !DILocation(line: 716, column: 3, scope: !10496)
!10548 = distinct !{!10548, !10499, !10549}
!10549 = !DILocation(line: 725, column: 3, scope: !10493)
!10550 = !DILocation(line: 727, column: 14, scope: !10483)
!10551 = !DILocation(line: 727, column: 12, scope: !10483)
!10552 = !DILocation(line: 727, column: 3, scope: !10483)
!10553 = !DILocation(line: 730, column: 3, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 729, column: 7)
!10555 = !DILocation(line: 732, column: 1, scope: !10469)
!10556 = distinct !DISubprogram(name: "brush_strength", scope: !3, file: !3, line: 737, type: !10557, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{!153, !6, !5642, !153, !7119}
!10559 = !DILocalVariable(name: "sd", arg: 1, scope: !10556, file: !3, line: 737, type: !6)
!10560 = !DILocation(line: 737, column: 37, scope: !10556)
!10561 = !DILocalVariable(name: "cache", arg: 2, scope: !10556, file: !3, line: 737, type: !5642)
!10562 = !DILocation(line: 737, column: 54, scope: !10556)
!10563 = !DILocalVariable(name: "feather", arg: 3, scope: !10556, file: !3, line: 737, type: !153)
!10564 = !DILocation(line: 737, column: 67, scope: !10556)
!10565 = !DILocalVariable(name: "ups", arg: 4, scope: !10556, file: !3, line: 737, type: !7119)
!10566 = !DILocation(line: 737, column: 98, scope: !10556)
!10567 = !DILocalVariable(name: "scene", scope: !10556, file: !3, line: 739, type: !7408)
!10568 = !DILocation(line: 739, column: 15, scope: !10556)
!10569 = !DILocation(line: 739, column: 23, scope: !10556)
!10570 = !DILocation(line: 739, column: 30, scope: !10556)
!10571 = !DILocation(line: 739, column: 34, scope: !10556)
!10572 = !DILocalVariable(name: "brush", scope: !10556, file: !3, line: 740, type: !2749)
!10573 = !DILocation(line: 740, column: 9, scope: !10556)
!10574 = !DILocation(line: 740, column: 34, scope: !10556)
!10575 = !DILocation(line: 740, column: 38, scope: !10556)
!10576 = !DILocation(line: 740, column: 17, scope: !10556)
!10577 = !DILocalVariable(name: "root_alpha", scope: !10556, file: !3, line: 743, type: !3072)
!10578 = !DILocation(line: 743, column: 14, scope: !10556)
!10579 = !DILocation(line: 743, column: 47, scope: !10556)
!10580 = !DILocation(line: 743, column: 54, scope: !10556)
!10581 = !DILocation(line: 743, column: 27, scope: !10556)
!10582 = !DILocalVariable(name: "alpha", scope: !10556, file: !3, line: 744, type: !153)
!10583 = !DILocation(line: 744, column: 8, scope: !10556)
!10584 = !DILocation(line: 744, column: 23, scope: !10556)
!10585 = !DILocation(line: 744, column: 36, scope: !10556)
!10586 = !DILocation(line: 744, column: 34, scope: !10556)
!10587 = !DILocalVariable(name: "dir", scope: !10556, file: !3, line: 745, type: !153)
!10588 = !DILocation(line: 745, column: 8, scope: !10556)
!10589 = !DILocation(line: 745, column: 23, scope: !10556)
!10590 = !DILocation(line: 745, column: 30, scope: !10556)
!10591 = !DILocation(line: 745, column: 35, scope: !10556)
!10592 = !DILocalVariable(name: "pressure", scope: !10556, file: !3, line: 746, type: !153)
!10593 = !DILocation(line: 746, column: 8, scope: !10556)
!10594 = !DILocation(line: 746, column: 52, scope: !10556)
!10595 = !DILocation(line: 746, column: 59, scope: !10556)
!10596 = !DILocation(line: 746, column: 23, scope: !10556)
!10597 = !DILocation(line: 746, column: 68, scope: !10556)
!10598 = !DILocation(line: 746, column: 75, scope: !10556)
!10599 = !DILocalVariable(name: "pen_flip", scope: !10556, file: !3, line: 747, type: !153)
!10600 = !DILocation(line: 747, column: 8, scope: !10556)
!10601 = !DILocation(line: 747, column: 23, scope: !10556)
!10602 = !DILocation(line: 747, column: 30, scope: !10556)
!10603 = !DILocalVariable(name: "invert", scope: !10556, file: !3, line: 748, type: !153)
!10604 = !DILocation(line: 748, column: 8, scope: !10556)
!10605 = !DILocation(line: 748, column: 23, scope: !10556)
!10606 = !DILocation(line: 748, column: 30, scope: !10556)
!10607 = !DILocalVariable(name: "overlap", scope: !10556, file: !3, line: 749, type: !153)
!10608 = !DILocation(line: 749, column: 8, scope: !10556)
!10609 = !DILocation(line: 749, column: 24, scope: !10556)
!10610 = !DILocation(line: 749, column: 29, scope: !10556)
!10611 = !DILocalVariable(name: "flip", scope: !10556, file: !3, line: 753, type: !153)
!10612 = !DILocation(line: 753, column: 8, scope: !10556)
!10613 = !DILocation(line: 753, column: 23, scope: !10556)
!10614 = !DILocation(line: 753, column: 29, scope: !10556)
!10615 = !DILocation(line: 753, column: 27, scope: !10556)
!10616 = !DILocation(line: 753, column: 38, scope: !10556)
!10617 = !DILocation(line: 753, column: 36, scope: !10556)
!10618 = !DILocation(line: 755, column: 10, scope: !10556)
!10619 = !DILocation(line: 755, column: 17, scope: !10556)
!10620 = !DILocation(line: 755, column: 2, scope: !10556)
!10621 = !DILocation(line: 760, column: 11, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 755, column: 30)
!10623 = !DILocation(line: 760, column: 19, scope: !10622)
!10624 = !DILocation(line: 760, column: 17, scope: !10622)
!10625 = !DILocation(line: 760, column: 26, scope: !10622)
!10626 = !DILocation(line: 760, column: 24, scope: !10622)
!10627 = !DILocation(line: 760, column: 37, scope: !10622)
!10628 = !DILocation(line: 760, column: 35, scope: !10622)
!10629 = !DILocation(line: 760, column: 47, scope: !10622)
!10630 = !DILocation(line: 760, column: 45, scope: !10622)
!10631 = !DILocation(line: 760, column: 4, scope: !10622)
!10632 = !DILocation(line: 763, column: 19, scope: !10622)
!10633 = !DILocation(line: 763, column: 17, scope: !10622)
!10634 = !DILocation(line: 763, column: 28, scope: !10622)
!10635 = !DILocation(line: 763, column: 12, scope: !10622)
!10636 = !DILocation(line: 764, column: 27, scope: !10622)
!10637 = !DILocation(line: 764, column: 34, scope: !10622)
!10638 = !DILocation(line: 764, column: 12, scope: !10622)
!10639 = !DILocation(line: 764, column: 4, scope: !10622)
!10640 = !DILocation(line: 766, column: 13, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 764, column: 45)
!10642 = !DILocation(line: 766, column: 21, scope: !10641)
!10643 = !DILocation(line: 766, column: 19, scope: !10641)
!10644 = !DILocation(line: 766, column: 28, scope: !10641)
!10645 = !DILocation(line: 766, column: 26, scope: !10641)
!10646 = !DILocation(line: 766, column: 39, scope: !10641)
!10647 = !DILocation(line: 766, column: 37, scope: !10641)
!10648 = !DILocation(line: 766, column: 49, scope: !10641)
!10649 = !DILocation(line: 766, column: 47, scope: !10641)
!10650 = !DILocation(line: 766, column: 6, scope: !10641)
!10651 = !DILocation(line: 768, column: 13, scope: !10641)
!10652 = !DILocation(line: 768, column: 21, scope: !10641)
!10653 = !DILocation(line: 768, column: 19, scope: !10641)
!10654 = !DILocation(line: 768, column: 32, scope: !10641)
!10655 = !DILocation(line: 768, column: 30, scope: !10641)
!10656 = !DILocation(line: 768, column: 6, scope: !10641)
!10657 = !DILocation(line: 769, column: 4, scope: !10641)
!10658 = !DILocation(line: 773, column: 11, scope: !10622)
!10659 = !DILocation(line: 773, column: 19, scope: !10622)
!10660 = !DILocation(line: 773, column: 17, scope: !10622)
!10661 = !DILocation(line: 773, column: 26, scope: !10622)
!10662 = !DILocation(line: 773, column: 24, scope: !10622)
!10663 = !DILocation(line: 773, column: 37, scope: !10622)
!10664 = !DILocation(line: 773, column: 35, scope: !10622)
!10665 = !DILocation(line: 773, column: 47, scope: !10622)
!10666 = !DILocation(line: 773, column: 45, scope: !10622)
!10667 = !DILocation(line: 773, column: 4, scope: !10622)
!10668 = !DILocation(line: 776, column: 8, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 776, column: 8)
!10670 = !DILocation(line: 776, column: 13, scope: !10669)
!10671 = !DILocation(line: 776, column: 8, scope: !10622)
!10672 = !DILocation(line: 777, column: 21, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 776, column: 18)
!10674 = !DILocation(line: 777, column: 19, scope: !10673)
!10675 = !DILocation(line: 777, column: 29, scope: !10673)
!10676 = !DILocation(line: 777, column: 27, scope: !10673)
!10677 = !DILocation(line: 777, column: 36, scope: !10673)
!10678 = !DILocation(line: 777, column: 34, scope: !10673)
!10679 = !DILocation(line: 777, column: 47, scope: !10673)
!10680 = !DILocation(line: 777, column: 45, scope: !10673)
!10681 = !DILocation(line: 777, column: 57, scope: !10673)
!10682 = !DILocation(line: 777, column: 55, scope: !10673)
!10683 = !DILocation(line: 777, column: 5, scope: !10673)
!10684 = !DILocation(line: 780, column: 21, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 779, column: 9)
!10686 = !DILocation(line: 780, column: 19, scope: !10685)
!10687 = !DILocation(line: 780, column: 29, scope: !10685)
!10688 = !DILocation(line: 780, column: 27, scope: !10685)
!10689 = !DILocation(line: 780, column: 36, scope: !10685)
!10690 = !DILocation(line: 780, column: 34, scope: !10685)
!10691 = !DILocation(line: 780, column: 47, scope: !10685)
!10692 = !DILocation(line: 780, column: 45, scope: !10685)
!10693 = !DILocation(line: 780, column: 57, scope: !10685)
!10694 = !DILocation(line: 780, column: 55, scope: !10685)
!10695 = !DILocation(line: 780, column: 5, scope: !10685)
!10696 = !DILocation(line: 786, column: 8, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 786, column: 8)
!10698 = !DILocation(line: 786, column: 13, scope: !10697)
!10699 = !DILocation(line: 786, column: 8, scope: !10622)
!10700 = !DILocation(line: 787, column: 20, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 786, column: 18)
!10702 = !DILocation(line: 787, column: 18, scope: !10701)
!10703 = !DILocation(line: 787, column: 29, scope: !10701)
!10704 = !DILocation(line: 787, column: 13, scope: !10701)
!10705 = !DILocation(line: 788, column: 12, scope: !10701)
!10706 = !DILocation(line: 788, column: 20, scope: !10701)
!10707 = !DILocation(line: 788, column: 18, scope: !10701)
!10708 = !DILocation(line: 788, column: 27, scope: !10701)
!10709 = !DILocation(line: 788, column: 25, scope: !10701)
!10710 = !DILocation(line: 788, column: 38, scope: !10701)
!10711 = !DILocation(line: 788, column: 36, scope: !10701)
!10712 = !DILocation(line: 788, column: 48, scope: !10701)
!10713 = !DILocation(line: 788, column: 46, scope: !10701)
!10714 = !DILocation(line: 788, column: 5, scope: !10701)
!10715 = !DILocation(line: 792, column: 19, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 790, column: 9)
!10717 = !DILocation(line: 792, column: 17, scope: !10716)
!10718 = !DILocation(line: 792, column: 27, scope: !10716)
!10719 = !DILocation(line: 792, column: 25, scope: !10716)
!10720 = !DILocation(line: 792, column: 34, scope: !10716)
!10721 = !DILocation(line: 792, column: 32, scope: !10716)
!10722 = !DILocation(line: 792, column: 45, scope: !10716)
!10723 = !DILocation(line: 792, column: 43, scope: !10716)
!10724 = !DILocation(line: 792, column: 55, scope: !10716)
!10725 = !DILocation(line: 792, column: 53, scope: !10716)
!10726 = !DILocation(line: 792, column: 5, scope: !10716)
!10727 = !DILocation(line: 796, column: 11, scope: !10622)
!10728 = !DILocation(line: 796, column: 19, scope: !10622)
!10729 = !DILocation(line: 796, column: 17, scope: !10622)
!10730 = !DILocation(line: 796, column: 30, scope: !10622)
!10731 = !DILocation(line: 796, column: 28, scope: !10622)
!10732 = !DILocation(line: 796, column: 4, scope: !10622)
!10733 = !DILocation(line: 799, column: 8, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 799, column: 8)
!10735 = !DILocation(line: 799, column: 13, scope: !10734)
!10736 = !DILocation(line: 799, column: 8, scope: !10622)
!10737 = !DILocation(line: 800, column: 12, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 799, column: 18)
!10739 = !DILocation(line: 800, column: 20, scope: !10738)
!10740 = !DILocation(line: 800, column: 18, scope: !10738)
!10741 = !DILocation(line: 800, column: 27, scope: !10738)
!10742 = !DILocation(line: 800, column: 25, scope: !10738)
!10743 = !DILocation(line: 800, column: 38, scope: !10738)
!10744 = !DILocation(line: 800, column: 36, scope: !10738)
!10745 = !DILocation(line: 800, column: 48, scope: !10738)
!10746 = !DILocation(line: 800, column: 46, scope: !10738)
!10747 = !DILocation(line: 800, column: 5, scope: !10738)
!10748 = !DILocation(line: 803, column: 20, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 802, column: 9)
!10750 = !DILocation(line: 803, column: 18, scope: !10749)
!10751 = !DILocation(line: 803, column: 28, scope: !10749)
!10752 = !DILocation(line: 803, column: 26, scope: !10749)
!10753 = !DILocation(line: 803, column: 35, scope: !10749)
!10754 = !DILocation(line: 803, column: 33, scope: !10749)
!10755 = !DILocation(line: 803, column: 46, scope: !10749)
!10756 = !DILocation(line: 803, column: 44, scope: !10749)
!10757 = !DILocation(line: 803, column: 56, scope: !10749)
!10758 = !DILocation(line: 803, column: 54, scope: !10749)
!10759 = !DILocation(line: 803, column: 5, scope: !10749)
!10760 = !DILocation(line: 807, column: 19, scope: !10622)
!10761 = !DILocation(line: 807, column: 17, scope: !10622)
!10762 = !DILocation(line: 807, column: 28, scope: !10622)
!10763 = !DILocation(line: 807, column: 12, scope: !10622)
!10764 = !DILocation(line: 808, column: 11, scope: !10622)
!10765 = !DILocation(line: 808, column: 19, scope: !10622)
!10766 = !DILocation(line: 808, column: 17, scope: !10622)
!10767 = !DILocation(line: 808, column: 30, scope: !10622)
!10768 = !DILocation(line: 808, column: 28, scope: !10622)
!10769 = !DILocation(line: 808, column: 40, scope: !10622)
!10770 = !DILocation(line: 808, column: 38, scope: !10622)
!10771 = !DILocation(line: 808, column: 4, scope: !10622)
!10772 = !DILocation(line: 811, column: 11, scope: !10622)
!10773 = !DILocation(line: 811, column: 19, scope: !10622)
!10774 = !DILocation(line: 811, column: 17, scope: !10622)
!10775 = !DILocation(line: 811, column: 30, scope: !10622)
!10776 = !DILocation(line: 811, column: 28, scope: !10622)
!10777 = !DILocation(line: 811, column: 4, scope: !10622)
!10778 = !DILocation(line: 814, column: 11, scope: !10622)
!10779 = !DILocation(line: 814, column: 24, scope: !10622)
!10780 = !DILocation(line: 814, column: 22, scope: !10622)
!10781 = !DILocation(line: 814, column: 4, scope: !10622)
!10782 = !DILocation(line: 817, column: 11, scope: !10622)
!10783 = !DILocation(line: 817, column: 24, scope: !10622)
!10784 = !DILocation(line: 817, column: 22, scope: !10622)
!10785 = !DILocation(line: 817, column: 4, scope: !10622)
!10786 = !DILocation(line: 820, column: 11, scope: !10622)
!10787 = !DILocation(line: 820, column: 19, scope: !10622)
!10788 = !DILocation(line: 820, column: 17, scope: !10622)
!10789 = !DILocation(line: 820, column: 30, scope: !10622)
!10790 = !DILocation(line: 820, column: 28, scope: !10622)
!10791 = !DILocation(line: 820, column: 4, scope: !10622)
!10792 = !DILocation(line: 823, column: 4, scope: !10622)
!10793 = !DILocation(line: 825, column: 1, scope: !10556)
!10794 = distinct !DISubprogram(name: "calc_brushdata_symm", scope: !3, file: !3, line: 3378, type: !10795, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10795 = !DISubroutineType(types: !10796)
!10796 = !{null, !6, !5642, !487, !487, !3072, !3072}
!10797 = !DILocalVariable(name: "sd", arg: 1, scope: !10794, file: !3, line: 3378, type: !6)
!10798 = !DILocation(line: 3378, column: 41, scope: !10794)
!10799 = !DILocalVariable(name: "cache", arg: 2, scope: !10794, file: !3, line: 3378, type: !5642)
!10800 = !DILocation(line: 3378, column: 58, scope: !10794)
!10801 = !DILocalVariable(name: "symm", arg: 3, scope: !10794, file: !3, line: 3378, type: !487)
!10802 = !DILocation(line: 3378, column: 76, scope: !10794)
!10803 = !DILocalVariable(name: "axis", arg: 4, scope: !10794, file: !3, line: 3379, type: !487)
!10804 = !DILocation(line: 3379, column: 44, scope: !10794)
!10805 = !DILocalVariable(name: "angle", arg: 5, scope: !10794, file: !3, line: 3379, type: !3072)
!10806 = !DILocation(line: 3379, column: 62, scope: !10794)
!10807 = !DILocalVariable(name: "UNUSED_feather", arg: 6, scope: !10794, file: !3, line: 3380, type: !3072)
!10808 = !DILocation(line: 3380, column: 45, scope: !10794)
!10809 = !DILocation(line: 3382, column: 8, scope: !10794)
!10810 = !DILocation(line: 3384, column: 13, scope: !10794)
!10811 = !DILocation(line: 3384, column: 20, scope: !10794)
!10812 = !DILocation(line: 3384, column: 30, scope: !10794)
!10813 = !DILocation(line: 3384, column: 37, scope: !10794)
!10814 = !DILocation(line: 3384, column: 52, scope: !10794)
!10815 = !DILocation(line: 3384, column: 2, scope: !10794)
!10816 = !DILocation(line: 3385, column: 13, scope: !10794)
!10817 = !DILocation(line: 3385, column: 20, scope: !10794)
!10818 = !DILocation(line: 3385, column: 41, scope: !10794)
!10819 = !DILocation(line: 3385, column: 48, scope: !10794)
!10820 = !DILocation(line: 3385, column: 60, scope: !10794)
!10821 = !DILocation(line: 3385, column: 2, scope: !10794)
!10822 = !DILocation(line: 3386, column: 13, scope: !10794)
!10823 = !DILocation(line: 3386, column: 20, scope: !10794)
!10824 = !DILocation(line: 3386, column: 33, scope: !10794)
!10825 = !DILocation(line: 3386, column: 40, scope: !10794)
!10826 = !DILocation(line: 3386, column: 58, scope: !10794)
!10827 = !DILocation(line: 3386, column: 2, scope: !10794)
!10828 = !DILocation(line: 3402, column: 10, scope: !10794)
!10829 = !DILocation(line: 3402, column: 17, scope: !10794)
!10830 = !DILocation(line: 3402, column: 2, scope: !10794)
!10831 = !DILocation(line: 3403, column: 10, scope: !10794)
!10832 = !DILocation(line: 3403, column: 17, scope: !10794)
!10833 = !DILocation(line: 3403, column: 2, scope: !10794)
!10834 = !DILocation(line: 3405, column: 6, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 3405, column: 6)
!10836 = !DILocation(line: 3405, column: 6, scope: !10794)
!10837 = !DILocation(line: 3406, column: 13, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 3405, column: 12)
!10839 = !DILocation(line: 3406, column: 20, scope: !10838)
!10840 = !DILocation(line: 3406, column: 34, scope: !10838)
!10841 = !DILocation(line: 3406, column: 40, scope: !10838)
!10842 = !DILocation(line: 3406, column: 3, scope: !10838)
!10843 = !DILocation(line: 3407, column: 13, scope: !10838)
!10844 = !DILocation(line: 3407, column: 20, scope: !10838)
!10845 = !DILocation(line: 3407, column: 38, scope: !10838)
!10846 = !DILocation(line: 3407, column: 45, scope: !10838)
!10847 = !DILocation(line: 3407, column: 44, scope: !10838)
!10848 = !DILocation(line: 3407, column: 3, scope: !10838)
!10849 = !DILocation(line: 3408, column: 2, scope: !10838)
!10850 = !DILocation(line: 3410, column: 12, scope: !10794)
!10851 = !DILocation(line: 3410, column: 19, scope: !10794)
!10852 = !DILocation(line: 3410, column: 33, scope: !10794)
!10853 = !DILocation(line: 3410, column: 40, scope: !10794)
!10854 = !DILocation(line: 3410, column: 2, scope: !10794)
!10855 = !DILocation(line: 3411, column: 12, scope: !10794)
!10856 = !DILocation(line: 3411, column: 19, scope: !10794)
!10857 = !DILocation(line: 3411, column: 33, scope: !10794)
!10858 = !DILocation(line: 3411, column: 40, scope: !10794)
!10859 = !DILocation(line: 3411, column: 2, scope: !10794)
!10860 = !DILocation(line: 3413, column: 6, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 3413, column: 6)
!10862 = !DILocation(line: 3413, column: 13, scope: !10861)
!10863 = !DILocation(line: 3413, column: 6, scope: !10794)
!10864 = !DILocation(line: 3414, column: 14, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 3413, column: 31)
!10866 = !DILocation(line: 3414, column: 21, scope: !10865)
!10867 = !DILocation(line: 3414, column: 40, scope: !10865)
!10868 = !DILocation(line: 3414, column: 47, scope: !10865)
!10869 = !DILocation(line: 3414, column: 71, scope: !10865)
!10870 = !DILocation(line: 3414, column: 3, scope: !10865)
!10871 = !DILocation(line: 3415, column: 13, scope: !10865)
!10872 = !DILocation(line: 3415, column: 20, scope: !10865)
!10873 = !DILocation(line: 3415, column: 34, scope: !10865)
!10874 = !DILocation(line: 3415, column: 41, scope: !10865)
!10875 = !DILocation(line: 3415, column: 3, scope: !10865)
!10876 = !DILocation(line: 3416, column: 2, scope: !10865)
!10877 = !DILocation(line: 3417, column: 1, scope: !10794)
!10878 = distinct !DISubprogram(name: "do_radial_symmetry", scope: !3, file: !3, line: 3421, type: !10879, scopeLine: 3425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10879 = !DISubroutineType(types: !10880)
!10880 = !{null, !6, !3739, !2749, !8582, !487, !5191, !3072}
!10881 = !DILocalVariable(name: "sd", arg: 1, scope: !10878, file: !3, line: 3421, type: !6)
!10882 = !DILocation(line: 3421, column: 40, scope: !10878)
!10883 = !DILocalVariable(name: "ob", arg: 2, scope: !10878, file: !3, line: 3421, type: !3739)
!10884 = !DILocation(line: 3421, column: 52, scope: !10878)
!10885 = !DILocalVariable(name: "brush", arg: 3, scope: !10878, file: !3, line: 3421, type: !2749)
!10886 = !DILocation(line: 3421, column: 63, scope: !10878)
!10887 = !DILocalVariable(name: "action", arg: 4, scope: !10878, file: !3, line: 3422, type: !8582)
!10888 = !DILocation(line: 3422, column: 48, scope: !10878)
!10889 = !DILocalVariable(name: "symm", arg: 5, scope: !10878, file: !3, line: 3423, type: !487)
!10890 = !DILocation(line: 3423, column: 43, scope: !10878)
!10891 = !DILocalVariable(name: "axis", arg: 6, scope: !10878, file: !3, line: 3423, type: !5191)
!10892 = !DILocation(line: 3423, column: 59, scope: !10878)
!10893 = !DILocalVariable(name: "feather", arg: 7, scope: !10878, file: !3, line: 3424, type: !3072)
!10894 = !DILocation(line: 3424, column: 44, scope: !10878)
!10895 = !DILocalVariable(name: "ss", scope: !10878, file: !3, line: 3426, type: !5374)
!10896 = !DILocation(line: 3426, column: 17, scope: !10878)
!10897 = !DILocation(line: 3426, column: 22, scope: !10878)
!10898 = !DILocation(line: 3426, column: 26, scope: !10878)
!10899 = !DILocalVariable(name: "i", scope: !10878, file: !3, line: 3427, type: !57)
!10900 = !DILocation(line: 3427, column: 6, scope: !10878)
!10901 = !DILocation(line: 3429, column: 9, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 3429, column: 2)
!10903 = !DILocation(line: 3429, column: 7, scope: !10902)
!10904 = !DILocation(line: 3429, column: 14, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 3429, column: 2)
!10906 = !DILocation(line: 3429, column: 18, scope: !10905)
!10907 = !DILocation(line: 3429, column: 22, scope: !10905)
!10908 = !DILocation(line: 3429, column: 34, scope: !10905)
!10909 = !DILocation(line: 3429, column: 39, scope: !10905)
!10910 = !DILocation(line: 3429, column: 16, scope: !10905)
!10911 = !DILocation(line: 3429, column: 2, scope: !10902)
!10912 = !DILocalVariable(name: "angle", scope: !10913, file: !3, line: 3430, type: !3072)
!10913 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 3429, column: 52)
!10914 = !DILocation(line: 3430, column: 15, scope: !10913)
!10915 = !DILocation(line: 3430, column: 34, scope: !10913)
!10916 = !DILocation(line: 3430, column: 32, scope: !10913)
!10917 = !DILocation(line: 3430, column: 38, scope: !10913)
!10918 = !DILocation(line: 3430, column: 42, scope: !10913)
!10919 = !DILocation(line: 3430, column: 54, scope: !10913)
!10920 = !DILocation(line: 3430, column: 59, scope: !10913)
!10921 = !DILocation(line: 3430, column: 36, scope: !10913)
!10922 = !DILocation(line: 3430, column: 23, scope: !10913)
!10923 = !DILocation(line: 3431, column: 37, scope: !10913)
!10924 = !DILocation(line: 3431, column: 3, scope: !10913)
!10925 = !DILocation(line: 3431, column: 7, scope: !10913)
!10926 = !DILocation(line: 3431, column: 14, scope: !10913)
!10927 = !DILocation(line: 3431, column: 35, scope: !10913)
!10928 = !DILocation(line: 3432, column: 23, scope: !10913)
!10929 = !DILocation(line: 3432, column: 27, scope: !10913)
!10930 = !DILocation(line: 3432, column: 31, scope: !10913)
!10931 = !DILocation(line: 3432, column: 38, scope: !10913)
!10932 = !DILocation(line: 3432, column: 44, scope: !10913)
!10933 = !DILocation(line: 3432, column: 50, scope: !10913)
!10934 = !DILocation(line: 3432, column: 57, scope: !10913)
!10935 = !DILocation(line: 3432, column: 3, scope: !10913)
!10936 = !DILocation(line: 3433, column: 3, scope: !10913)
!10937 = !DILocation(line: 3433, column: 10, scope: !10913)
!10938 = !DILocation(line: 3433, column: 14, scope: !10913)
!10939 = !DILocation(line: 3433, column: 18, scope: !10913)
!10940 = !DILocation(line: 3434, column: 2, scope: !10913)
!10941 = !DILocation(line: 3429, column: 47, scope: !10905)
!10942 = !DILocation(line: 3429, column: 2, scope: !10905)
!10943 = distinct !{!10943, !10911, !10944}
!10944 = !DILocation(line: 3434, column: 2, scope: !10902)
!10945 = !DILocation(line: 3435, column: 1, scope: !10878)
!10946 = distinct !DISubprogram(name: "calc_overlap", scope: !3, file: !3, line: 670, type: !10947, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!153, !5642, !487, !487, !3072}
!10949 = !DILocalVariable(name: "cache", arg: 1, scope: !10946, file: !3, line: 670, type: !5642)
!10950 = !DILocation(line: 670, column: 40, scope: !10946)
!10951 = !DILocalVariable(name: "symm", arg: 2, scope: !10946, file: !3, line: 670, type: !487)
!10952 = !DILocation(line: 670, column: 58, scope: !10946)
!10953 = !DILocalVariable(name: "axis", arg: 3, scope: !10946, file: !3, line: 670, type: !487)
!10954 = !DILocation(line: 670, column: 75, scope: !10946)
!10955 = !DILocalVariable(name: "angle", arg: 4, scope: !10946, file: !3, line: 670, type: !3072)
!10956 = !DILocation(line: 670, column: 93, scope: !10946)
!10957 = !DILocalVariable(name: "mirror", scope: !10946, file: !3, line: 672, type: !233)
!10958 = !DILocation(line: 672, column: 8, scope: !10946)
!10959 = !DILocalVariable(name: "distsq", scope: !10946, file: !3, line: 673, type: !153)
!10960 = !DILocation(line: 673, column: 8, scope: !10946)
!10961 = !DILocation(line: 676, column: 13, scope: !10946)
!10962 = !DILocation(line: 676, column: 21, scope: !10946)
!10963 = !DILocation(line: 676, column: 28, scope: !10946)
!10964 = !DILocation(line: 676, column: 43, scope: !10946)
!10965 = !DILocation(line: 676, column: 2, scope: !10946)
!10966 = !DILocation(line: 678, column: 6, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 678, column: 6)
!10968 = !DILocation(line: 678, column: 11, scope: !10967)
!10969 = !DILocation(line: 678, column: 6, scope: !10946)
!10970 = !DILocalVariable(name: "mat", scope: !10971, file: !3, line: 679, type: !1294)
!10971 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 678, column: 17)
!10972 = !DILocation(line: 679, column: 9, scope: !10971)
!10973 = !DILocation(line: 680, column: 11, scope: !10971)
!10974 = !DILocation(line: 680, column: 3, scope: !10971)
!10975 = !DILocation(line: 681, column: 13, scope: !10971)
!10976 = !DILocation(line: 681, column: 18, scope: !10971)
!10977 = !DILocation(line: 681, column: 24, scope: !10971)
!10978 = !DILocation(line: 681, column: 3, scope: !10971)
!10979 = !DILocation(line: 682, column: 13, scope: !10971)
!10980 = !DILocation(line: 682, column: 18, scope: !10971)
!10981 = !DILocation(line: 682, column: 3, scope: !10971)
!10982 = !DILocation(line: 683, column: 2, scope: !10971)
!10983 = !DILocation(line: 686, column: 28, scope: !10946)
!10984 = !DILocation(line: 686, column: 36, scope: !10946)
!10985 = !DILocation(line: 686, column: 43, scope: !10946)
!10986 = !DILocation(line: 686, column: 11, scope: !10946)
!10987 = !DILocation(line: 686, column: 9, scope: !10946)
!10988 = !DILocation(line: 688, column: 6, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 688, column: 6)
!10990 = !DILocation(line: 688, column: 24, scope: !10989)
!10991 = !DILocation(line: 688, column: 31, scope: !10989)
!10992 = !DILocation(line: 688, column: 21, scope: !10989)
!10993 = !DILocation(line: 688, column: 13, scope: !10989)
!10994 = !DILocation(line: 688, column: 6, scope: !10946)
!10995 = !DILocation(line: 689, column: 19, scope: !10989)
!10996 = !DILocation(line: 689, column: 26, scope: !10989)
!10997 = !DILocation(line: 689, column: 16, scope: !10989)
!10998 = !DILocation(line: 689, column: 42, scope: !10989)
!10999 = !DILocation(line: 689, column: 36, scope: !10989)
!11000 = !DILocation(line: 689, column: 34, scope: !10989)
!11001 = !DILocation(line: 689, column: 62, scope: !10989)
!11002 = !DILocation(line: 689, column: 69, scope: !10989)
!11003 = !DILocation(line: 689, column: 59, scope: !10989)
!11004 = !DILocation(line: 689, column: 51, scope: !10989)
!11005 = !DILocation(line: 689, column: 3, scope: !10989)
!11006 = !DILocation(line: 691, column: 3, scope: !10989)
!11007 = !DILocation(line: 692, column: 1, scope: !10946)
!11008 = distinct !DISubprogram(name: "calc_radial_symmetry_feather", scope: !3, file: !3, line: 694, type: !11009, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{!153, !6, !5642, !487, !487}
!11011 = !DILocalVariable(name: "sd", arg: 1, scope: !11008, file: !3, line: 694, type: !6)
!11012 = !DILocation(line: 694, column: 51, scope: !11008)
!11013 = !DILocalVariable(name: "cache", arg: 2, scope: !11008, file: !3, line: 694, type: !5642)
!11014 = !DILocation(line: 694, column: 68, scope: !11008)
!11015 = !DILocalVariable(name: "symm", arg: 3, scope: !11008, file: !3, line: 694, type: !487)
!11016 = !DILocation(line: 694, column: 86, scope: !11008)
!11017 = !DILocalVariable(name: "axis", arg: 4, scope: !11008, file: !3, line: 694, type: !487)
!11018 = !DILocation(line: 694, column: 103, scope: !11008)
!11019 = !DILocalVariable(name: "i", scope: !11008, file: !3, line: 696, type: !57)
!11020 = !DILocation(line: 696, column: 6, scope: !11008)
!11021 = !DILocalVariable(name: "overlap", scope: !11008, file: !3, line: 697, type: !153)
!11022 = !DILocation(line: 697, column: 8, scope: !11008)
!11023 = !DILocation(line: 699, column: 10, scope: !11008)
!11024 = !DILocation(line: 700, column: 9, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 700, column: 2)
!11026 = !DILocation(line: 700, column: 7, scope: !11025)
!11027 = !DILocation(line: 700, column: 14, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 700, column: 2)
!11029 = !DILocation(line: 700, column: 18, scope: !11028)
!11030 = !DILocation(line: 700, column: 22, scope: !11028)
!11031 = !DILocation(line: 700, column: 34, scope: !11028)
!11032 = !DILocation(line: 700, column: 39, scope: !11028)
!11033 = !DILocation(line: 700, column: 16, scope: !11028)
!11034 = !DILocation(line: 700, column: 2, scope: !11025)
!11035 = !DILocalVariable(name: "angle", scope: !11036, file: !3, line: 701, type: !3072)
!11036 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 700, column: 52)
!11037 = !DILocation(line: 701, column: 15, scope: !11036)
!11038 = !DILocation(line: 701, column: 34, scope: !11036)
!11039 = !DILocation(line: 701, column: 32, scope: !11036)
!11040 = !DILocation(line: 701, column: 38, scope: !11036)
!11041 = !DILocation(line: 701, column: 42, scope: !11036)
!11042 = !DILocation(line: 701, column: 54, scope: !11036)
!11043 = !DILocation(line: 701, column: 59, scope: !11036)
!11044 = !DILocation(line: 701, column: 36, scope: !11036)
!11045 = !DILocation(line: 701, column: 23, scope: !11036)
!11046 = !DILocation(line: 702, column: 27, scope: !11036)
!11047 = !DILocation(line: 702, column: 34, scope: !11036)
!11048 = !DILocation(line: 702, column: 40, scope: !11036)
!11049 = !DILocation(line: 702, column: 46, scope: !11036)
!11050 = !DILocation(line: 702, column: 14, scope: !11036)
!11051 = !DILocation(line: 702, column: 11, scope: !11036)
!11052 = !DILocation(line: 703, column: 2, scope: !11036)
!11053 = !DILocation(line: 700, column: 47, scope: !11028)
!11054 = !DILocation(line: 700, column: 2, scope: !11028)
!11055 = distinct !{!11055, !11034, !11056}
!11056 = !DILocation(line: 703, column: 2, scope: !11025)
!11057 = !DILocation(line: 705, column: 9, scope: !11008)
!11058 = !DILocation(line: 705, column: 2, scope: !11008)
!11059 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !5234, file: !5234, line: 727, type: !6809, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11060 = !DILocalVariable(name: "a", arg: 1, scope: !11059, file: !5234, line: 727, type: !3251)
!11061 = !DILocation(line: 727, column: 44, scope: !11059)
!11062 = !DILocalVariable(name: "b", arg: 2, scope: !11059, file: !5234, line: 727, type: !3251)
!11063 = !DILocation(line: 727, column: 62, scope: !11059)
!11064 = !DILocalVariable(name: "d", scope: !11059, file: !5234, line: 729, type: !233)
!11065 = !DILocation(line: 729, column: 8, scope: !11059)
!11066 = !DILocation(line: 731, column: 14, scope: !11059)
!11067 = !DILocation(line: 731, column: 17, scope: !11059)
!11068 = !DILocation(line: 731, column: 20, scope: !11059)
!11069 = !DILocation(line: 731, column: 2, scope: !11059)
!11070 = !DILocation(line: 732, column: 18, scope: !11059)
!11071 = !DILocation(line: 732, column: 21, scope: !11059)
!11072 = !DILocation(line: 732, column: 9, scope: !11059)
!11073 = !DILocation(line: 732, column: 2, scope: !11059)
!11074 = distinct !DISubprogram(name: "sculpt_search_sphere_cb", scope: !3, file: !3, line: 917, type: !11075, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!2315, !3742, !26}
!11077 = !DILocalVariable(name: "node", arg: 1, scope: !11074, file: !3, line: 917, type: !3742)
!11078 = !DILocation(line: 917, column: 47, scope: !11074)
!11079 = !DILocalVariable(name: "data_v", arg: 2, scope: !11074, file: !3, line: 917, type: !26)
!11080 = !DILocation(line: 917, column: 59, scope: !11074)
!11081 = !DILocalVariable(name: "data", scope: !11074, file: !3, line: 919, type: !11082)
!11082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8722, size: 64)
!11083 = !DILocation(line: 919, column: 26, scope: !11074)
!11084 = !DILocation(line: 919, column: 33, scope: !11074)
!11085 = !DILocalVariable(name: "center", scope: !11074, file: !3, line: 920, type: !359)
!11086 = !DILocation(line: 920, column: 9, scope: !11074)
!11087 = !DILocation(line: 920, column: 18, scope: !11074)
!11088 = !DILocation(line: 920, column: 24, scope: !11074)
!11089 = !DILocation(line: 920, column: 28, scope: !11074)
!11090 = !DILocation(line: 920, column: 35, scope: !11074)
!11091 = !DILocalVariable(name: "nearest", scope: !11074, file: !3, line: 920, type: !233)
!11092 = !DILocation(line: 920, column: 45, scope: !11074)
!11093 = !DILocalVariable(name: "t", scope: !11074, file: !3, line: 921, type: !233)
!11094 = !DILocation(line: 921, column: 8, scope: !11074)
!11095 = !DILocalVariable(name: "bb_min", scope: !11074, file: !3, line: 921, type: !233)
!11096 = !DILocation(line: 921, column: 14, scope: !11074)
!11097 = !DILocalVariable(name: "bb_max", scope: !11074, file: !3, line: 921, type: !233)
!11098 = !DILocation(line: 921, column: 25, scope: !11074)
!11099 = !DILocalVariable(name: "i", scope: !11074, file: !3, line: 922, type: !57)
!11100 = !DILocation(line: 922, column: 6, scope: !11074)
!11101 = !DILocation(line: 924, column: 6, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 924, column: 6)
!11103 = !DILocation(line: 924, column: 12, scope: !11102)
!11104 = !DILocation(line: 924, column: 6, scope: !11074)
!11105 = !DILocation(line: 925, column: 33, scope: !11102)
!11106 = !DILocation(line: 925, column: 39, scope: !11102)
!11107 = !DILocation(line: 925, column: 47, scope: !11102)
!11108 = !DILocation(line: 925, column: 3, scope: !11102)
!11109 = !DILocation(line: 927, column: 24, scope: !11102)
!11110 = !DILocation(line: 927, column: 30, scope: !11102)
!11111 = !DILocation(line: 927, column: 38, scope: !11102)
!11112 = !DILocation(line: 927, column: 3, scope: !11102)
!11113 = !DILocation(line: 929, column: 9, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 929, column: 2)
!11115 = !DILocation(line: 929, column: 7, scope: !11114)
!11116 = !DILocation(line: 929, column: 14, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 929, column: 2)
!11118 = !DILocation(line: 929, column: 16, scope: !11117)
!11119 = !DILocation(line: 929, column: 2, scope: !11114)
!11120 = !DILocation(line: 930, column: 14, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 930, column: 7)
!11122 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 929, column: 26)
!11123 = !DILocation(line: 930, column: 7, scope: !11121)
!11124 = !DILocation(line: 930, column: 19, scope: !11121)
!11125 = !DILocation(line: 930, column: 26, scope: !11121)
!11126 = !DILocation(line: 930, column: 17, scope: !11121)
!11127 = !DILocation(line: 930, column: 7, scope: !11122)
!11128 = !DILocation(line: 931, column: 24, scope: !11121)
!11129 = !DILocation(line: 931, column: 17, scope: !11121)
!11130 = !DILocation(line: 931, column: 12, scope: !11121)
!11131 = !DILocation(line: 931, column: 4, scope: !11121)
!11132 = !DILocation(line: 931, column: 15, scope: !11121)
!11133 = !DILocation(line: 932, column: 19, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 932, column: 12)
!11135 = !DILocation(line: 932, column: 12, scope: !11134)
!11136 = !DILocation(line: 932, column: 24, scope: !11134)
!11137 = !DILocation(line: 932, column: 31, scope: !11134)
!11138 = !DILocation(line: 932, column: 22, scope: !11134)
!11139 = !DILocation(line: 932, column: 12, scope: !11121)
!11140 = !DILocation(line: 933, column: 24, scope: !11134)
!11141 = !DILocation(line: 933, column: 17, scope: !11134)
!11142 = !DILocation(line: 933, column: 12, scope: !11134)
!11143 = !DILocation(line: 933, column: 4, scope: !11134)
!11144 = !DILocation(line: 933, column: 15, scope: !11134)
!11145 = !DILocation(line: 935, column: 17, scope: !11134)
!11146 = !DILocation(line: 935, column: 24, scope: !11134)
!11147 = !DILocation(line: 935, column: 12, scope: !11134)
!11148 = !DILocation(line: 935, column: 4, scope: !11134)
!11149 = !DILocation(line: 935, column: 15, scope: !11134)
!11150 = !DILocation(line: 936, column: 2, scope: !11122)
!11151 = !DILocation(line: 929, column: 21, scope: !11117)
!11152 = !DILocation(line: 929, column: 2, scope: !11117)
!11153 = distinct !{!11153, !11119, !11154}
!11154 = !DILocation(line: 936, column: 2, scope: !11114)
!11155 = !DILocation(line: 938, column: 14, scope: !11074)
!11156 = !DILocation(line: 938, column: 17, scope: !11074)
!11157 = !DILocation(line: 938, column: 25, scope: !11074)
!11158 = !DILocation(line: 938, column: 2, scope: !11074)
!11159 = !DILocation(line: 940, column: 24, scope: !11074)
!11160 = !DILocation(line: 940, column: 9, scope: !11074)
!11161 = !DILocation(line: 940, column: 29, scope: !11074)
!11162 = !DILocation(line: 940, column: 35, scope: !11074)
!11163 = !DILocation(line: 940, column: 27, scope: !11074)
!11164 = !DILocation(line: 940, column: 2, scope: !11074)
!11165 = distinct !DISubprogram(name: "len_squared_v3", scope: !5234, file: !5234, line: 671, type: !11166, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11166 = !DISubroutineType(types: !11167)
!11167 = !{!153, !3251}
!11168 = !DILocalVariable(name: "v", arg: 1, scope: !11165, file: !5234, line: 671, type: !3251)
!11169 = !DILocation(line: 671, column: 42, scope: !11165)
!11170 = !DILocation(line: 673, column: 9, scope: !11165)
!11171 = !DILocation(line: 673, column: 16, scope: !11165)
!11172 = !DILocation(line: 673, column: 14, scope: !11165)
!11173 = !DILocation(line: 673, column: 23, scope: !11165)
!11174 = !DILocation(line: 673, column: 30, scope: !11165)
!11175 = !DILocation(line: 673, column: 28, scope: !11165)
!11176 = !DILocation(line: 673, column: 21, scope: !11165)
!11177 = !DILocation(line: 673, column: 37, scope: !11165)
!11178 = !DILocation(line: 673, column: 44, scope: !11165)
!11179 = !DILocation(line: 673, column: 42, scope: !11165)
!11180 = !DILocation(line: 673, column: 35, scope: !11165)
!11181 = !DILocation(line: 673, column: 2, scope: !11165)
!11182 = distinct !DISubprogram(name: "brush_needs_sculpt_normal", scope: !3, file: !3, line: 1191, type: !11183, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{!57, !6733}
!11185 = !DILocalVariable(name: "brush", arg: 1, scope: !11182, file: !3, line: 1191, type: !6733)
!11186 = !DILocation(line: 1191, column: 51, scope: !11182)
!11187 = !DILocation(line: 1193, column: 11, scope: !11182)
!11188 = !DILocation(line: 1195, column: 40, scope: !11182)
!11189 = !DILocation(line: 1196, column: 12, scope: !11182)
!11190 = !DILocation(line: 1196, column: 19, scope: !11182)
!11191 = !DILocation(line: 1196, column: 33, scope: !11182)
!11192 = !DILocation(line: 1196, column: 39, scope: !11182)
!11193 = !DILocation(line: 1198, column: 10, scope: !11182)
!11194 = !DILocation(line: 1205, column: 34, scope: !11182)
!11195 = !DILocation(line: 1207, column: 11, scope: !11182)
!11196 = !DILocation(line: 1207, column: 18, scope: !11182)
!11197 = !DILocation(line: 1207, column: 23, scope: !11182)
!11198 = !DILocation(line: 1207, column: 38, scope: !11182)
!11199 = !DILocation(line: 1193, column: 2, scope: !11182)
!11200 = distinct !DISubprogram(name: "update_sculpt_normal", scope: !3, file: !3, line: 1096, type: !4, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11201 = !DILocalVariable(name: "sd", arg: 1, scope: !11200, file: !3, line: 1096, type: !6)
!11202 = !DILocation(line: 1096, column: 42, scope: !11200)
!11203 = !DILocalVariable(name: "ob", arg: 2, scope: !11200, file: !3, line: 1096, type: !3739)
!11204 = !DILocation(line: 1096, column: 54, scope: !11200)
!11205 = !DILocalVariable(name: "nodes", arg: 3, scope: !11200, file: !3, line: 1097, type: !3741)
!11206 = !DILocation(line: 1097, column: 45, scope: !11200)
!11207 = !DILocalVariable(name: "totnode", arg: 4, scope: !11200, file: !3, line: 1097, type: !57)
!11208 = !DILocation(line: 1097, column: 56, scope: !11200)
!11209 = !DILocalVariable(name: "brush", scope: !11200, file: !3, line: 1099, type: !6733)
!11210 = !DILocation(line: 1099, column: 15, scope: !11200)
!11211 = !DILocation(line: 1099, column: 40, scope: !11200)
!11212 = !DILocation(line: 1099, column: 44, scope: !11200)
!11213 = !DILocation(line: 1099, column: 23, scope: !11200)
!11214 = !DILocalVariable(name: "cache", scope: !11200, file: !3, line: 1100, type: !5642)
!11215 = !DILocation(line: 1100, column: 15, scope: !11200)
!11216 = !DILocation(line: 1100, column: 23, scope: !11200)
!11217 = !DILocation(line: 1100, column: 27, scope: !11200)
!11218 = !DILocation(line: 1100, column: 35, scope: !11200)
!11219 = !DILocation(line: 1102, column: 6, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 1102, column: 6)
!11221 = !DILocation(line: 1102, column: 13, scope: !11220)
!11222 = !DILocation(line: 1102, column: 34, scope: !11220)
!11223 = !DILocation(line: 1102, column: 39, scope: !11220)
!11224 = !DILocation(line: 1103, column: 6, scope: !11220)
!11225 = !DILocation(line: 1103, column: 13, scope: !11220)
!11226 = !DILocation(line: 1103, column: 34, scope: !11220)
!11227 = !DILocation(line: 1103, column: 39, scope: !11220)
!11228 = !DILocation(line: 1104, column: 7, scope: !11220)
!11229 = !DILocation(line: 1104, column: 14, scope: !11220)
!11230 = !DILocation(line: 1104, column: 25, scope: !11220)
!11231 = !DILocation(line: 1104, column: 30, scope: !11220)
!11232 = !DILocation(line: 1104, column: 37, scope: !11220)
!11233 = !DILocation(line: 1104, column: 42, scope: !11220)
!11234 = !DILocation(line: 1102, column: 6, scope: !11200)
!11235 = !DILocation(line: 1106, column: 22, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 1105, column: 2)
!11237 = !DILocation(line: 1106, column: 26, scope: !11236)
!11238 = !DILocation(line: 1106, column: 30, scope: !11236)
!11239 = !DILocation(line: 1106, column: 37, scope: !11236)
!11240 = !DILocation(line: 1106, column: 46, scope: !11236)
!11241 = !DILocation(line: 1106, column: 53, scope: !11236)
!11242 = !DILocation(line: 1106, column: 3, scope: !11236)
!11243 = !DILocation(line: 1107, column: 14, scope: !11236)
!11244 = !DILocation(line: 1107, column: 21, scope: !11236)
!11245 = !DILocation(line: 1107, column: 41, scope: !11236)
!11246 = !DILocation(line: 1107, column: 48, scope: !11236)
!11247 = !DILocation(line: 1107, column: 3, scope: !11236)
!11248 = !DILocation(line: 1108, column: 2, scope: !11236)
!11249 = !DILocation(line: 1110, column: 14, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 1109, column: 7)
!11251 = !DILocation(line: 1110, column: 21, scope: !11250)
!11252 = !DILocation(line: 1110, column: 41, scope: !11250)
!11253 = !DILocation(line: 1110, column: 48, scope: !11250)
!11254 = !DILocation(line: 1110, column: 3, scope: !11250)
!11255 = !DILocation(line: 1111, column: 11, scope: !11250)
!11256 = !DILocation(line: 1111, column: 18, scope: !11250)
!11257 = !DILocation(line: 1111, column: 38, scope: !11250)
!11258 = !DILocation(line: 1111, column: 45, scope: !11250)
!11259 = !DILocation(line: 1111, column: 3, scope: !11250)
!11260 = !DILocation(line: 1112, column: 13, scope: !11250)
!11261 = !DILocation(line: 1112, column: 20, scope: !11250)
!11262 = !DILocation(line: 1112, column: 34, scope: !11250)
!11263 = !DILocation(line: 1112, column: 41, scope: !11250)
!11264 = !DILocation(line: 1112, column: 3, scope: !11250)
!11265 = !DILocation(line: 1114, column: 1, scope: !11200)
!11266 = distinct !DISubprogram(name: "update_brush_local_mat", scope: !3, file: !3, line: 1177, type: !8505, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11267 = !DILocalVariable(name: "sd", arg: 1, scope: !11266, file: !3, line: 1177, type: !6)
!11268 = !DILocation(line: 1177, column: 44, scope: !11266)
!11269 = !DILocalVariable(name: "ob", arg: 2, scope: !11266, file: !3, line: 1177, type: !3739)
!11270 = !DILocation(line: 1177, column: 56, scope: !11266)
!11271 = !DILocalVariable(name: "cache", scope: !11266, file: !3, line: 1179, type: !5642)
!11272 = !DILocation(line: 1179, column: 15, scope: !11266)
!11273 = !DILocation(line: 1179, column: 23, scope: !11266)
!11274 = !DILocation(line: 1179, column: 27, scope: !11266)
!11275 = !DILocation(line: 1179, column: 35, scope: !11266)
!11276 = !DILocation(line: 1181, column: 6, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 1181, column: 6)
!11278 = !DILocation(line: 1181, column: 13, scope: !11277)
!11279 = !DILocation(line: 1181, column: 34, scope: !11277)
!11280 = !DILocation(line: 1181, column: 39, scope: !11277)
!11281 = !DILocation(line: 1182, column: 6, scope: !11277)
!11282 = !DILocation(line: 1182, column: 13, scope: !11277)
!11283 = !DILocation(line: 1182, column: 34, scope: !11277)
!11284 = !DILocation(line: 1181, column: 6, scope: !11266)
!11285 = !DILocation(line: 1184, column: 41, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 1183, column: 2)
!11287 = !DILocation(line: 1184, column: 45, scope: !11286)
!11288 = !DILocation(line: 1184, column: 24, scope: !11286)
!11289 = !DILocation(line: 1184, column: 53, scope: !11286)
!11290 = !DILocation(line: 1185, column: 24, scope: !11286)
!11291 = !DILocation(line: 1185, column: 31, scope: !11286)
!11292 = !DILocation(line: 1184, column: 3, scope: !11286)
!11293 = !DILocation(line: 1186, column: 2, scope: !11286)
!11294 = !DILocation(line: 1187, column: 1, scope: !11266)
!11295 = distinct !DISubprogram(name: "do_draw_brush", scope: !3, file: !3, line: 1687, type: !4, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11296 = !DILocalVariable(name: "sd", arg: 1, scope: !11295, file: !3, line: 1687, type: !6)
!11297 = !DILocation(line: 1687, column: 35, scope: !11295)
!11298 = !DILocalVariable(name: "ob", arg: 2, scope: !11295, file: !3, line: 1687, type: !3739)
!11299 = !DILocation(line: 1687, column: 47, scope: !11295)
!11300 = !DILocalVariable(name: "nodes", arg: 3, scope: !11295, file: !3, line: 1687, type: !3741)
!11301 = !DILocation(line: 1687, column: 62, scope: !11295)
!11302 = !DILocalVariable(name: "totnode", arg: 4, scope: !11295, file: !3, line: 1687, type: !57)
!11303 = !DILocation(line: 1687, column: 73, scope: !11295)
!11304 = !DILocalVariable(name: "ss", scope: !11295, file: !3, line: 1689, type: !5374)
!11305 = !DILocation(line: 1689, column: 17, scope: !11295)
!11306 = !DILocation(line: 1689, column: 22, scope: !11295)
!11307 = !DILocation(line: 1689, column: 26, scope: !11295)
!11308 = !DILocalVariable(name: "brush", scope: !11295, file: !3, line: 1690, type: !2749)
!11309 = !DILocation(line: 1690, column: 9, scope: !11295)
!11310 = !DILocation(line: 1690, column: 34, scope: !11295)
!11311 = !DILocation(line: 1690, column: 38, scope: !11295)
!11312 = !DILocation(line: 1690, column: 17, scope: !11295)
!11313 = !DILocalVariable(name: "offset", scope: !11295, file: !3, line: 1691, type: !233)
!11314 = !DILocation(line: 1691, column: 8, scope: !11295)
!11315 = !DILocalVariable(name: "bstrength", scope: !11295, file: !3, line: 1692, type: !153)
!11316 = !DILocation(line: 1692, column: 8, scope: !11295)
!11317 = !DILocation(line: 1692, column: 20, scope: !11295)
!11318 = !DILocation(line: 1692, column: 24, scope: !11295)
!11319 = !DILocation(line: 1692, column: 31, scope: !11295)
!11320 = !DILocalVariable(name: "n", scope: !11295, file: !3, line: 1693, type: !57)
!11321 = !DILocation(line: 1693, column: 6, scope: !11295)
!11322 = !DILocation(line: 1696, column: 14, scope: !11295)
!11323 = !DILocation(line: 1696, column: 22, scope: !11295)
!11324 = !DILocation(line: 1696, column: 26, scope: !11295)
!11325 = !DILocation(line: 1696, column: 33, scope: !11295)
!11326 = !DILocation(line: 1696, column: 53, scope: !11295)
!11327 = !DILocation(line: 1696, column: 57, scope: !11295)
!11328 = !DILocation(line: 1696, column: 64, scope: !11295)
!11329 = !DILocation(line: 1696, column: 2, scope: !11295)
!11330 = !DILocation(line: 1697, column: 12, scope: !11295)
!11331 = !DILocation(line: 1697, column: 20, scope: !11295)
!11332 = !DILocation(line: 1697, column: 24, scope: !11295)
!11333 = !DILocation(line: 1697, column: 31, scope: !11295)
!11334 = !DILocation(line: 1697, column: 2, scope: !11295)
!11335 = !DILocation(line: 1698, column: 12, scope: !11295)
!11336 = !DILocation(line: 1698, column: 20, scope: !11295)
!11337 = !DILocation(line: 1698, column: 2, scope: !11295)
!11338 = !DILocation(line: 1704, column: 9, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 1704, column: 2)
!11340 = !DILocation(line: 1704, column: 7, scope: !11339)
!11341 = !DILocation(line: 1704, column: 14, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 1704, column: 2)
!11343 = !DILocation(line: 1704, column: 18, scope: !11342)
!11344 = !DILocation(line: 1704, column: 16, scope: !11342)
!11345 = !DILocation(line: 1704, column: 2, scope: !11339)
!11346 = !DILocalVariable(name: "vd", scope: !11347, file: !3, line: 1705, type: !9184)
!11347 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 1704, column: 32)
!11348 = !DILocation(line: 1705, column: 18, scope: !11347)
!11349 = !DILocalVariable(name: "test", scope: !11347, file: !3, line: 1706, type: !11350)
!11350 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptBrushTest", file: !3, line: 522, baseType: !11351)
!11351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptBrushTest", file: !3, line: 515, size: 256, elements: !11352)
!11352 = !{!11353, !11354, !11355, !11356}
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "radius_squared", scope: !11351, file: !3, line: 516, baseType: !153, size: 32)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !11351, file: !3, line: 517, baseType: !233, size: 96, offset: 32)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !11351, file: !3, line: 518, baseType: !153, size: 32, offset: 128)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "clip_rv3d", scope: !11351, file: !3, line: 521, baseType: !5321, size: 64, offset: 192)
!11357 = !DILocation(line: 1706, column: 19, scope: !11347)
!11358 = !DILocalVariable(name: "proxy", scope: !11347, file: !3, line: 1707, type: !2054)
!11359 = !DILocation(line: 1707, column: 11, scope: !11347)
!11360 = !DILocation(line: 1709, column: 35, scope: !11347)
!11361 = !DILocation(line: 1709, column: 39, scope: !11347)
!11362 = !DILocation(line: 1709, column: 45, scope: !11347)
!11363 = !DILocation(line: 1709, column: 51, scope: !11347)
!11364 = !DILocation(line: 1709, column: 11, scope: !11347)
!11365 = !DILocation(line: 1709, column: 56, scope: !11347)
!11366 = !DILocation(line: 1709, column: 9, scope: !11347)
!11367 = !DILocation(line: 1711, column: 26, scope: !11347)
!11368 = !DILocation(line: 1711, column: 3, scope: !11347)
!11369 = !DILocation(line: 1713, column: 3, scope: !11347)
!11370 = !DILocation(line: 1713, column: 3, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 1713, column: 3)
!11372 = !DILocation(line: 1713, column: 3, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 1713, column: 3)
!11374 = !DILocation(line: 1713, column: 3, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1713, column: 3)
!11376 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1713, column: 3)
!11377 = !DILocation(line: 1713, column: 3, scope: !11376)
!11378 = !DILocation(line: 1713, column: 3, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 1713, column: 3)
!11380 = !DILocation(line: 1713, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1713, column: 3)
!11382 = !DILocation(line: 1713, column: 3, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 1713, column: 3)
!11384 = !DILocation(line: 1713, column: 3, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1713, column: 3)
!11386 = !DILocation(line: 1713, column: 3, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 1713, column: 3)
!11388 = !DILocation(line: 1713, column: 3, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 1713, column: 3)
!11390 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 1713, column: 3)
!11391 = !DILocation(line: 1713, column: 3, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 1713, column: 3)
!11393 = !DILocation(line: 1713, column: 3, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1713, column: 3)
!11395 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 1713, column: 3)
!11396 = !DILocation(line: 1713, column: 3, scope: !11395)
!11397 = !DILocation(line: 1713, column: 3, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 1713, column: 3)
!11399 = !DILocation(line: 1713, column: 3, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 1713, column: 3)
!11401 = !DILocation(line: 1713, column: 3, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 1713, column: 3)
!11403 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1713, column: 3)
!11404 = !DILocation(line: 1713, column: 3, scope: !11403)
!11405 = !DILocation(line: 1713, column: 3, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 1713, column: 3)
!11407 = !DILocation(line: 1713, column: 3, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 1713, column: 3)
!11409 = !DILocation(line: 1713, column: 3, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1713, column: 3)
!11411 = !DILocation(line: 1713, column: 3, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1713, column: 3)
!11413 = !DILocation(line: 1713, column: 3, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 1713, column: 3)
!11415 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 1713, column: 3)
!11416 = !DILocation(line: 1713, column: 3, scope: !11415)
!11417 = !DILocation(line: 1713, column: 3, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 1713, column: 3)
!11419 = !DILocation(line: 1713, column: 3, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 1713, column: 3)
!11421 = !DILocation(line: 1713, column: 3, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 1713, column: 3)
!11423 = !DILocation(line: 1715, column: 36, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1715, column: 8)
!11425 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1714, column: 3)
!11426 = !DILocation(line: 1715, column: 8, scope: !11424)
!11427 = !DILocation(line: 1715, column: 8, scope: !11425)
!11428 = !DILocalVariable(name: "fade", scope: !11429, file: !3, line: 1717, type: !153)
!11429 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 1715, column: 41)
!11430 = !DILocation(line: 1717, column: 11, scope: !11429)
!11431 = !DILocation(line: 1717, column: 31, scope: !11429)
!11432 = !DILocation(line: 1717, column: 35, scope: !11429)
!11433 = !DILocation(line: 1717, column: 45, scope: !11429)
!11434 = !DILocation(line: 1717, column: 54, scope: !11429)
!11435 = !DILocation(line: 1717, column: 63, scope: !11429)
!11436 = !DILocation(line: 1718, column: 34, scope: !11429)
!11437 = !DILocation(line: 1718, column: 42, scope: !11429)
!11438 = !DILocation(line: 1718, column: 39, scope: !11429)
!11439 = !DILocation(line: 1718, column: 53, scope: !11429)
!11440 = !DILocation(line: 1718, column: 49, scope: !11429)
!11441 = !DILocation(line: 1717, column: 18, scope: !11429)
!11442 = !DILocation(line: 1720, column: 17, scope: !11429)
!11443 = !DILocation(line: 1720, column: 26, scope: !11429)
!11444 = !DILocation(line: 1720, column: 30, scope: !11429)
!11445 = !DILocation(line: 1720, column: 38, scope: !11429)
!11446 = !DILocation(line: 1720, column: 5, scope: !11429)
!11447 = !DILocation(line: 1722, column: 12, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 1722, column: 9)
!11449 = !DILocation(line: 1722, column: 9, scope: !11448)
!11450 = !DILocation(line: 1722, column: 9, scope: !11429)
!11451 = !DILocation(line: 1723, column: 9, scope: !11448)
!11452 = !DILocation(line: 1723, column: 16, scope: !11448)
!11453 = !DILocation(line: 1723, column: 21, scope: !11448)
!11454 = !DILocation(line: 1723, column: 6, scope: !11448)
!11455 = !DILocation(line: 1724, column: 4, scope: !11429)
!11456 = !DILocation(line: 1726, column: 3, scope: !11395)
!11457 = distinct !{!11457, !11388, !11458}
!11458 = !DILocation(line: 1726, column: 3, scope: !11389)
!11459 = !DILocation(line: 1726, column: 3, scope: !11390)
!11460 = distinct !{!11460, !11384, !11461}
!11461 = !DILocation(line: 1726, column: 3, scope: !11385)
!11462 = !DILocation(line: 1726, column: 3, scope: !11376)
!11463 = distinct !{!11463, !11370, !11464}
!11464 = !DILocation(line: 1726, column: 3, scope: !11371)
!11465 = !DILocation(line: 1727, column: 2, scope: !11347)
!11466 = !DILocation(line: 1704, column: 28, scope: !11342)
!11467 = !DILocation(line: 1704, column: 2, scope: !11342)
!11468 = distinct !{!11468, !11345, !11469}
!11469 = !DILocation(line: 1727, column: 2, scope: !11339)
!11470 = !DILocation(line: 1728, column: 1, scope: !11295)
!11471 = distinct !DISubprogram(name: "do_smooth_brush", scope: !3, file: !3, line: 1632, type: !4, scopeLine: 1633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11472 = !DILocalVariable(name: "sd", arg: 1, scope: !11471, file: !3, line: 1632, type: !6)
!11473 = !DILocation(line: 1632, column: 37, scope: !11471)
!11474 = !DILocalVariable(name: "ob", arg: 2, scope: !11471, file: !3, line: 1632, type: !3739)
!11475 = !DILocation(line: 1632, column: 49, scope: !11471)
!11476 = !DILocalVariable(name: "nodes", arg: 3, scope: !11471, file: !3, line: 1632, type: !3741)
!11477 = !DILocation(line: 1632, column: 64, scope: !11471)
!11478 = !DILocalVariable(name: "totnode", arg: 4, scope: !11471, file: !3, line: 1632, type: !57)
!11479 = !DILocation(line: 1632, column: 75, scope: !11471)
!11480 = !DILocalVariable(name: "ss", scope: !11471, file: !3, line: 1634, type: !5374)
!11481 = !DILocation(line: 1634, column: 17, scope: !11471)
!11482 = !DILocation(line: 1634, column: 22, scope: !11471)
!11483 = !DILocation(line: 1634, column: 26, scope: !11471)
!11484 = !DILocation(line: 1635, column: 9, scope: !11471)
!11485 = !DILocation(line: 1635, column: 13, scope: !11471)
!11486 = !DILocation(line: 1635, column: 17, scope: !11471)
!11487 = !DILocation(line: 1635, column: 24, scope: !11471)
!11488 = !DILocation(line: 1635, column: 33, scope: !11471)
!11489 = !DILocation(line: 1635, column: 37, scope: !11471)
!11490 = !DILocation(line: 1635, column: 44, scope: !11471)
!11491 = !DILocation(line: 1635, column: 2, scope: !11471)
!11492 = !DILocation(line: 1636, column: 1, scope: !11471)
!11493 = distinct !DISubprogram(name: "do_crease_brush", scope: !3, file: !3, line: 1730, type: !4, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11494 = !DILocalVariable(name: "sd", arg: 1, scope: !11493, file: !3, line: 1730, type: !6)
!11495 = !DILocation(line: 1730, column: 37, scope: !11493)
!11496 = !DILocalVariable(name: "ob", arg: 2, scope: !11493, file: !3, line: 1730, type: !3739)
!11497 = !DILocation(line: 1730, column: 49, scope: !11493)
!11498 = !DILocalVariable(name: "nodes", arg: 3, scope: !11493, file: !3, line: 1730, type: !3741)
!11499 = !DILocation(line: 1730, column: 64, scope: !11493)
!11500 = !DILocalVariable(name: "totnode", arg: 4, scope: !11493, file: !3, line: 1730, type: !57)
!11501 = !DILocation(line: 1730, column: 75, scope: !11493)
!11502 = !DILocalVariable(name: "ss", scope: !11493, file: !3, line: 1732, type: !5374)
!11503 = !DILocation(line: 1732, column: 17, scope: !11493)
!11504 = !DILocation(line: 1732, column: 22, scope: !11493)
!11505 = !DILocation(line: 1732, column: 26, scope: !11493)
!11506 = !DILocalVariable(name: "scene", scope: !11493, file: !3, line: 1733, type: !7408)
!11507 = !DILocation(line: 1733, column: 15, scope: !11493)
!11508 = !DILocation(line: 1733, column: 23, scope: !11493)
!11509 = !DILocation(line: 1733, column: 27, scope: !11493)
!11510 = !DILocation(line: 1733, column: 34, scope: !11493)
!11511 = !DILocation(line: 1733, column: 38, scope: !11493)
!11512 = !DILocalVariable(name: "brush", scope: !11493, file: !3, line: 1734, type: !2749)
!11513 = !DILocation(line: 1734, column: 9, scope: !11493)
!11514 = !DILocation(line: 1734, column: 34, scope: !11493)
!11515 = !DILocation(line: 1734, column: 38, scope: !11493)
!11516 = !DILocation(line: 1734, column: 17, scope: !11493)
!11517 = !DILocalVariable(name: "offset", scope: !11493, file: !3, line: 1735, type: !233)
!11518 = !DILocation(line: 1735, column: 8, scope: !11493)
!11519 = !DILocalVariable(name: "bstrength", scope: !11493, file: !3, line: 1736, type: !153)
!11520 = !DILocation(line: 1736, column: 8, scope: !11493)
!11521 = !DILocation(line: 1736, column: 20, scope: !11493)
!11522 = !DILocation(line: 1736, column: 24, scope: !11493)
!11523 = !DILocation(line: 1736, column: 31, scope: !11493)
!11524 = !DILocalVariable(name: "flippedbstrength", scope: !11493, file: !3, line: 1737, type: !153)
!11525 = !DILocation(line: 1737, column: 8, scope: !11493)
!11526 = !DILocalVariable(name: "crease_correction", scope: !11493, file: !3, line: 1737, type: !153)
!11527 = !DILocation(line: 1737, column: 26, scope: !11493)
!11528 = !DILocalVariable(name: "brush_alpha", scope: !11493, file: !3, line: 1738, type: !153)
!11529 = !DILocation(line: 1738, column: 8, scope: !11493)
!11530 = !DILocalVariable(name: "n", scope: !11493, file: !3, line: 1739, type: !57)
!11531 = !DILocation(line: 1739, column: 6, scope: !11493)
!11532 = !DILocation(line: 1742, column: 14, scope: !11493)
!11533 = !DILocation(line: 1742, column: 22, scope: !11493)
!11534 = !DILocation(line: 1742, column: 26, scope: !11493)
!11535 = !DILocation(line: 1742, column: 33, scope: !11493)
!11536 = !DILocation(line: 1742, column: 53, scope: !11493)
!11537 = !DILocation(line: 1742, column: 57, scope: !11493)
!11538 = !DILocation(line: 1742, column: 64, scope: !11493)
!11539 = !DILocation(line: 1742, column: 2, scope: !11493)
!11540 = !DILocation(line: 1743, column: 12, scope: !11493)
!11541 = !DILocation(line: 1743, column: 20, scope: !11493)
!11542 = !DILocation(line: 1743, column: 24, scope: !11493)
!11543 = !DILocation(line: 1743, column: 31, scope: !11493)
!11544 = !DILocation(line: 1743, column: 2, scope: !11493)
!11545 = !DILocation(line: 1744, column: 12, scope: !11493)
!11546 = !DILocation(line: 1744, column: 20, scope: !11493)
!11547 = !DILocation(line: 1744, column: 2, scope: !11493)
!11548 = !DILocation(line: 1747, column: 22, scope: !11493)
!11549 = !DILocation(line: 1747, column: 29, scope: !11493)
!11550 = !DILocation(line: 1747, column: 51, scope: !11493)
!11551 = !DILocation(line: 1747, column: 58, scope: !11493)
!11552 = !DILocation(line: 1747, column: 49, scope: !11493)
!11553 = !DILocation(line: 1747, column: 20, scope: !11493)
!11554 = !DILocation(line: 1748, column: 36, scope: !11493)
!11555 = !DILocation(line: 1748, column: 43, scope: !11493)
!11556 = !DILocation(line: 1748, column: 16, scope: !11493)
!11557 = !DILocation(line: 1748, column: 14, scope: !11493)
!11558 = !DILocation(line: 1749, column: 6, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 1749, column: 6)
!11560 = !DILocation(line: 1749, column: 18, scope: !11559)
!11561 = !DILocation(line: 1749, column: 6, scope: !11493)
!11562 = !DILocation(line: 1750, column: 24, scope: !11559)
!11563 = !DILocation(line: 1750, column: 38, scope: !11559)
!11564 = !DILocation(line: 1750, column: 36, scope: !11559)
!11565 = !DILocation(line: 1750, column: 21, scope: !11559)
!11566 = !DILocation(line: 1750, column: 3, scope: !11559)
!11567 = !DILocation(line: 1753, column: 22, scope: !11493)
!11568 = !DILocation(line: 1753, column: 32, scope: !11493)
!11569 = !DILocation(line: 1753, column: 21, scope: !11493)
!11570 = !DILocation(line: 1753, column: 40, scope: !11493)
!11571 = !DILocation(line: 1753, column: 39, scope: !11493)
!11572 = !DILocation(line: 1753, column: 60, scope: !11493)
!11573 = !DILocation(line: 1753, column: 58, scope: !11493)
!11574 = !DILocation(line: 1753, column: 72, scope: !11493)
!11575 = !DILocation(line: 1753, column: 92, scope: !11493)
!11576 = !DILocation(line: 1753, column: 90, scope: !11493)
!11577 = !DILocation(line: 1753, column: 19, scope: !11493)
!11578 = !DILocation(line: 1755, column: 6, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 1755, column: 6)
!11580 = !DILocation(line: 1755, column: 13, scope: !11579)
!11581 = !DILocation(line: 1755, column: 25, scope: !11579)
!11582 = !DILocation(line: 1755, column: 6, scope: !11493)
!11583 = !DILocation(line: 1755, column: 63, scope: !11579)
!11584 = !DILocation(line: 1755, column: 46, scope: !11579)
!11585 = !DILocation(line: 1761, column: 9, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 1761, column: 2)
!11587 = !DILocation(line: 1761, column: 7, scope: !11586)
!11588 = !DILocation(line: 1761, column: 14, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1761, column: 2)
!11590 = !DILocation(line: 1761, column: 18, scope: !11589)
!11591 = !DILocation(line: 1761, column: 16, scope: !11589)
!11592 = !DILocation(line: 1761, column: 2, scope: !11586)
!11593 = !DILocalVariable(name: "vd", scope: !11594, file: !3, line: 1762, type: !9184)
!11594 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 1761, column: 32)
!11595 = !DILocation(line: 1762, column: 18, scope: !11594)
!11596 = !DILocalVariable(name: "test", scope: !11594, file: !3, line: 1763, type: !11350)
!11597 = !DILocation(line: 1763, column: 19, scope: !11594)
!11598 = !DILocalVariable(name: "proxy", scope: !11594, file: !3, line: 1764, type: !2054)
!11599 = !DILocation(line: 1764, column: 11, scope: !11594)
!11600 = !DILocation(line: 1766, column: 35, scope: !11594)
!11601 = !DILocation(line: 1766, column: 39, scope: !11594)
!11602 = !DILocation(line: 1766, column: 45, scope: !11594)
!11603 = !DILocation(line: 1766, column: 51, scope: !11594)
!11604 = !DILocation(line: 1766, column: 11, scope: !11594)
!11605 = !DILocation(line: 1766, column: 56, scope: !11594)
!11606 = !DILocation(line: 1766, column: 9, scope: !11594)
!11607 = !DILocation(line: 1768, column: 26, scope: !11594)
!11608 = !DILocation(line: 1768, column: 3, scope: !11594)
!11609 = !DILocation(line: 1770, column: 3, scope: !11594)
!11610 = !DILocation(line: 1770, column: 3, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 1770, column: 3)
!11612 = !DILocation(line: 1770, column: 3, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11611, file: !3, line: 1770, column: 3)
!11614 = !DILocation(line: 1770, column: 3, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1770, column: 3)
!11616 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 1770, column: 3)
!11617 = !DILocation(line: 1770, column: 3, scope: !11616)
!11618 = !DILocation(line: 1770, column: 3, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1770, column: 3)
!11620 = !DILocation(line: 1770, column: 3, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 1770, column: 3)
!11622 = !DILocation(line: 1770, column: 3, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1770, column: 3)
!11624 = !DILocation(line: 1770, column: 3, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1770, column: 3)
!11626 = !DILocation(line: 1770, column: 3, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 1770, column: 3)
!11628 = !DILocation(line: 1770, column: 3, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !3, line: 1770, column: 3)
!11630 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 1770, column: 3)
!11631 = !DILocation(line: 1770, column: 3, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 1770, column: 3)
!11633 = !DILocation(line: 1770, column: 3, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 1770, column: 3)
!11635 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 1770, column: 3)
!11636 = !DILocation(line: 1770, column: 3, scope: !11635)
!11637 = !DILocation(line: 1770, column: 3, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 1770, column: 3)
!11639 = !DILocation(line: 1770, column: 3, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 1770, column: 3)
!11641 = !DILocation(line: 1770, column: 3, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1770, column: 3)
!11643 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 1770, column: 3)
!11644 = !DILocation(line: 1770, column: 3, scope: !11643)
!11645 = !DILocation(line: 1770, column: 3, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 1770, column: 3)
!11647 = !DILocation(line: 1770, column: 3, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 1770, column: 3)
!11649 = !DILocation(line: 1770, column: 3, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1770, column: 3)
!11651 = !DILocation(line: 1770, column: 3, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1770, column: 3)
!11653 = !DILocation(line: 1770, column: 3, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 1770, column: 3)
!11655 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 1770, column: 3)
!11656 = !DILocation(line: 1770, column: 3, scope: !11655)
!11657 = !DILocation(line: 1770, column: 3, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 1770, column: 3)
!11659 = !DILocation(line: 1770, column: 3, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 1770, column: 3)
!11661 = !DILocation(line: 1770, column: 3, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 1770, column: 3)
!11663 = !DILocation(line: 1772, column: 36, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1772, column: 8)
!11665 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 1771, column: 3)
!11666 = !DILocation(line: 1772, column: 8, scope: !11664)
!11667 = !DILocation(line: 1772, column: 8, scope: !11665)
!11668 = !DILocalVariable(name: "fade", scope: !11669, file: !3, line: 1774, type: !3072)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 1772, column: 41)
!11670 = !DILocation(line: 1774, column: 17, scope: !11669)
!11671 = !DILocation(line: 1774, column: 37, scope: !11669)
!11672 = !DILocation(line: 1774, column: 41, scope: !11669)
!11673 = !DILocation(line: 1774, column: 51, scope: !11669)
!11674 = !DILocation(line: 1774, column: 60, scope: !11669)
!11675 = !DILocation(line: 1775, column: 40, scope: !11669)
!11676 = !DILocation(line: 1775, column: 47, scope: !11669)
!11677 = !DILocation(line: 1775, column: 55, scope: !11669)
!11678 = !DILocation(line: 1775, column: 52, scope: !11669)
!11679 = !DILocation(line: 1775, column: 66, scope: !11669)
!11680 = !DILocation(line: 1775, column: 62, scope: !11669)
!11681 = !DILocation(line: 1774, column: 24, scope: !11669)
!11682 = !DILocalVariable(name: "val1", scope: !11669, file: !3, line: 1776, type: !233)
!11683 = !DILocation(line: 1776, column: 11, scope: !11669)
!11684 = !DILocalVariable(name: "val2", scope: !11669, file: !3, line: 1777, type: !233)
!11685 = !DILocation(line: 1777, column: 11, scope: !11669)
!11686 = !DILocation(line: 1780, column: 17, scope: !11669)
!11687 = !DILocation(line: 1780, column: 28, scope: !11669)
!11688 = !DILocation(line: 1780, column: 23, scope: !11669)
!11689 = !DILocation(line: 1780, column: 41, scope: !11669)
!11690 = !DILocation(line: 1780, column: 5, scope: !11669)
!11691 = !DILocation(line: 1781, column: 15, scope: !11669)
!11692 = !DILocation(line: 1781, column: 21, scope: !11669)
!11693 = !DILocation(line: 1781, column: 28, scope: !11669)
!11694 = !DILocation(line: 1781, column: 26, scope: !11669)
!11695 = !DILocation(line: 1781, column: 5, scope: !11669)
!11696 = !DILocation(line: 1784, column: 17, scope: !11669)
!11697 = !DILocation(line: 1784, column: 23, scope: !11669)
!11698 = !DILocation(line: 1784, column: 31, scope: !11669)
!11699 = !DILocation(line: 1784, column: 5, scope: !11669)
!11700 = !DILocation(line: 1786, column: 17, scope: !11669)
!11701 = !DILocation(line: 1786, column: 26, scope: !11669)
!11702 = !DILocation(line: 1786, column: 30, scope: !11669)
!11703 = !DILocation(line: 1786, column: 36, scope: !11669)
!11704 = !DILocation(line: 1786, column: 5, scope: !11669)
!11705 = !DILocation(line: 1788, column: 12, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 1788, column: 9)
!11707 = !DILocation(line: 1788, column: 9, scope: !11706)
!11708 = !DILocation(line: 1788, column: 9, scope: !11669)
!11709 = !DILocation(line: 1789, column: 9, scope: !11706)
!11710 = !DILocation(line: 1789, column: 16, scope: !11706)
!11711 = !DILocation(line: 1789, column: 21, scope: !11706)
!11712 = !DILocation(line: 1789, column: 6, scope: !11706)
!11713 = !DILocation(line: 1790, column: 4, scope: !11669)
!11714 = !DILocation(line: 1792, column: 3, scope: !11635)
!11715 = distinct !{!11715, !11628, !11716}
!11716 = !DILocation(line: 1792, column: 3, scope: !11629)
!11717 = !DILocation(line: 1792, column: 3, scope: !11630)
!11718 = distinct !{!11718, !11624, !11719}
!11719 = !DILocation(line: 1792, column: 3, scope: !11625)
!11720 = !DILocation(line: 1792, column: 3, scope: !11616)
!11721 = distinct !{!11721, !11610, !11722}
!11722 = !DILocation(line: 1792, column: 3, scope: !11611)
!11723 = !DILocation(line: 1793, column: 2, scope: !11594)
!11724 = !DILocation(line: 1761, column: 28, scope: !11589)
!11725 = !DILocation(line: 1761, column: 2, scope: !11589)
!11726 = distinct !{!11726, !11592, !11727}
!11727 = !DILocation(line: 1793, column: 2, scope: !11586)
!11728 = !DILocation(line: 1794, column: 1, scope: !11493)
!11729 = distinct !DISubprogram(name: "do_pinch_brush", scope: !3, file: !3, line: 1796, type: !4, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11730 = !DILocalVariable(name: "sd", arg: 1, scope: !11729, file: !3, line: 1796, type: !6)
!11731 = !DILocation(line: 1796, column: 36, scope: !11729)
!11732 = !DILocalVariable(name: "ob", arg: 2, scope: !11729, file: !3, line: 1796, type: !3739)
!11733 = !DILocation(line: 1796, column: 48, scope: !11729)
!11734 = !DILocalVariable(name: "nodes", arg: 3, scope: !11729, file: !3, line: 1796, type: !3741)
!11735 = !DILocation(line: 1796, column: 63, scope: !11729)
!11736 = !DILocalVariable(name: "totnode", arg: 4, scope: !11729, file: !3, line: 1796, type: !57)
!11737 = !DILocation(line: 1796, column: 74, scope: !11729)
!11738 = !DILocalVariable(name: "ss", scope: !11729, file: !3, line: 1798, type: !5374)
!11739 = !DILocation(line: 1798, column: 17, scope: !11729)
!11740 = !DILocation(line: 1798, column: 22, scope: !11729)
!11741 = !DILocation(line: 1798, column: 26, scope: !11729)
!11742 = !DILocalVariable(name: "brush", scope: !11729, file: !3, line: 1799, type: !2749)
!11743 = !DILocation(line: 1799, column: 9, scope: !11729)
!11744 = !DILocation(line: 1799, column: 34, scope: !11729)
!11745 = !DILocation(line: 1799, column: 38, scope: !11729)
!11746 = !DILocation(line: 1799, column: 17, scope: !11729)
!11747 = !DILocalVariable(name: "bstrength", scope: !11729, file: !3, line: 1800, type: !153)
!11748 = !DILocation(line: 1800, column: 8, scope: !11729)
!11749 = !DILocation(line: 1800, column: 20, scope: !11729)
!11750 = !DILocation(line: 1800, column: 24, scope: !11729)
!11751 = !DILocation(line: 1800, column: 31, scope: !11729)
!11752 = !DILocalVariable(name: "n", scope: !11729, file: !3, line: 1801, type: !57)
!11753 = !DILocation(line: 1801, column: 6, scope: !11729)
!11754 = !DILocation(line: 1806, column: 9, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 1806, column: 2)
!11756 = !DILocation(line: 1806, column: 7, scope: !11755)
!11757 = !DILocation(line: 1806, column: 14, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 1806, column: 2)
!11759 = !DILocation(line: 1806, column: 18, scope: !11758)
!11760 = !DILocation(line: 1806, column: 16, scope: !11758)
!11761 = !DILocation(line: 1806, column: 2, scope: !11755)
!11762 = !DILocalVariable(name: "vd", scope: !11763, file: !3, line: 1807, type: !9184)
!11763 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 1806, column: 32)
!11764 = !DILocation(line: 1807, column: 18, scope: !11763)
!11765 = !DILocalVariable(name: "test", scope: !11763, file: !3, line: 1808, type: !11350)
!11766 = !DILocation(line: 1808, column: 19, scope: !11763)
!11767 = !DILocalVariable(name: "proxy", scope: !11763, file: !3, line: 1809, type: !2054)
!11768 = !DILocation(line: 1809, column: 11, scope: !11763)
!11769 = !DILocation(line: 1811, column: 35, scope: !11763)
!11770 = !DILocation(line: 1811, column: 39, scope: !11763)
!11771 = !DILocation(line: 1811, column: 45, scope: !11763)
!11772 = !DILocation(line: 1811, column: 51, scope: !11763)
!11773 = !DILocation(line: 1811, column: 11, scope: !11763)
!11774 = !DILocation(line: 1811, column: 56, scope: !11763)
!11775 = !DILocation(line: 1811, column: 9, scope: !11763)
!11776 = !DILocation(line: 1813, column: 26, scope: !11763)
!11777 = !DILocation(line: 1813, column: 3, scope: !11763)
!11778 = !DILocation(line: 1815, column: 3, scope: !11763)
!11779 = !DILocation(line: 1815, column: 3, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 1815, column: 3)
!11781 = !DILocation(line: 1815, column: 3, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 1815, column: 3)
!11783 = !DILocation(line: 1815, column: 3, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 1815, column: 3)
!11785 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 1815, column: 3)
!11786 = !DILocation(line: 1815, column: 3, scope: !11785)
!11787 = !DILocation(line: 1815, column: 3, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 1815, column: 3)
!11789 = !DILocation(line: 1815, column: 3, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 1815, column: 3)
!11791 = !DILocation(line: 1815, column: 3, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 1815, column: 3)
!11793 = !DILocation(line: 1815, column: 3, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 1815, column: 3)
!11795 = !DILocation(line: 1815, column: 3, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 1815, column: 3)
!11797 = !DILocation(line: 1815, column: 3, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 1815, column: 3)
!11799 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 1815, column: 3)
!11800 = !DILocation(line: 1815, column: 3, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11798, file: !3, line: 1815, column: 3)
!11802 = !DILocation(line: 1815, column: 3, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 1815, column: 3)
!11804 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 1815, column: 3)
!11805 = !DILocation(line: 1815, column: 3, scope: !11804)
!11806 = !DILocation(line: 1815, column: 3, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 1815, column: 3)
!11808 = !DILocation(line: 1815, column: 3, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1815, column: 3)
!11810 = !DILocation(line: 1815, column: 3, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 1815, column: 3)
!11812 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1815, column: 3)
!11813 = !DILocation(line: 1815, column: 3, scope: !11812)
!11814 = !DILocation(line: 1815, column: 3, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 1815, column: 3)
!11816 = !DILocation(line: 1815, column: 3, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 1815, column: 3)
!11818 = !DILocation(line: 1815, column: 3, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 1815, column: 3)
!11820 = !DILocation(line: 1815, column: 3, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 1815, column: 3)
!11822 = !DILocation(line: 1815, column: 3, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 1815, column: 3)
!11824 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 1815, column: 3)
!11825 = !DILocation(line: 1815, column: 3, scope: !11824)
!11826 = !DILocation(line: 1815, column: 3, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 1815, column: 3)
!11828 = !DILocation(line: 1815, column: 3, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 1815, column: 3)
!11830 = !DILocation(line: 1815, column: 3, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 1815, column: 3)
!11832 = !DILocation(line: 1817, column: 36, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 1817, column: 8)
!11834 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 1816, column: 3)
!11835 = !DILocation(line: 1817, column: 8, scope: !11833)
!11836 = !DILocation(line: 1817, column: 8, scope: !11834)
!11837 = !DILocalVariable(name: "fade", scope: !11838, file: !3, line: 1818, type: !153)
!11838 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1817, column: 41)
!11839 = !DILocation(line: 1818, column: 11, scope: !11838)
!11840 = !DILocation(line: 1818, column: 18, scope: !11838)
!11841 = !DILocation(line: 1818, column: 43, scope: !11838)
!11842 = !DILocation(line: 1818, column: 47, scope: !11838)
!11843 = !DILocation(line: 1818, column: 57, scope: !11838)
!11844 = !DILocation(line: 1818, column: 66, scope: !11838)
!11845 = !DILocation(line: 1818, column: 75, scope: !11838)
!11846 = !DILocation(line: 1819, column: 46, scope: !11838)
!11847 = !DILocation(line: 1819, column: 54, scope: !11838)
!11848 = !DILocation(line: 1819, column: 51, scope: !11838)
!11849 = !DILocation(line: 1819, column: 65, scope: !11838)
!11850 = !DILocation(line: 1819, column: 61, scope: !11838)
!11851 = !DILocation(line: 1818, column: 30, scope: !11838)
!11852 = !DILocation(line: 1818, column: 28, scope: !11838)
!11853 = !DILocalVariable(name: "val", scope: !11838, file: !3, line: 1820, type: !233)
!11854 = !DILocation(line: 1820, column: 11, scope: !11838)
!11855 = !DILocation(line: 1822, column: 17, scope: !11838)
!11856 = !DILocation(line: 1822, column: 27, scope: !11838)
!11857 = !DILocation(line: 1822, column: 22, scope: !11838)
!11858 = !DILocation(line: 1822, column: 40, scope: !11838)
!11859 = !DILocation(line: 1822, column: 5, scope: !11838)
!11860 = !DILocation(line: 1823, column: 17, scope: !11838)
!11861 = !DILocation(line: 1823, column: 26, scope: !11838)
!11862 = !DILocation(line: 1823, column: 30, scope: !11838)
!11863 = !DILocation(line: 1823, column: 35, scope: !11838)
!11864 = !DILocation(line: 1823, column: 5, scope: !11838)
!11865 = !DILocation(line: 1825, column: 12, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11838, file: !3, line: 1825, column: 9)
!11867 = !DILocation(line: 1825, column: 9, scope: !11866)
!11868 = !DILocation(line: 1825, column: 9, scope: !11838)
!11869 = !DILocation(line: 1826, column: 9, scope: !11866)
!11870 = !DILocation(line: 1826, column: 16, scope: !11866)
!11871 = !DILocation(line: 1826, column: 21, scope: !11866)
!11872 = !DILocation(line: 1826, column: 6, scope: !11866)
!11873 = !DILocation(line: 1827, column: 4, scope: !11838)
!11874 = !DILocation(line: 1829, column: 3, scope: !11804)
!11875 = distinct !{!11875, !11797, !11876}
!11876 = !DILocation(line: 1829, column: 3, scope: !11798)
!11877 = !DILocation(line: 1829, column: 3, scope: !11799)
!11878 = distinct !{!11878, !11793, !11879}
!11879 = !DILocation(line: 1829, column: 3, scope: !11794)
!11880 = !DILocation(line: 1829, column: 3, scope: !11785)
!11881 = distinct !{!11881, !11779, !11882}
!11882 = !DILocation(line: 1829, column: 3, scope: !11780)
!11883 = !DILocation(line: 1830, column: 2, scope: !11763)
!11884 = !DILocation(line: 1806, column: 28, scope: !11758)
!11885 = !DILocation(line: 1806, column: 2, scope: !11758)
!11886 = distinct !{!11886, !11761, !11887}
!11887 = !DILocation(line: 1830, column: 2, scope: !11755)
!11888 = !DILocation(line: 1831, column: 1, scope: !11729)
!11889 = distinct !DISubprogram(name: "do_inflate_brush", scope: !3, file: !3, line: 2154, type: !4, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!11890 = !DILocalVariable(name: "sd", arg: 1, scope: !11889, file: !3, line: 2154, type: !6)
!11891 = !DILocation(line: 2154, column: 38, scope: !11889)
!11892 = !DILocalVariable(name: "ob", arg: 2, scope: !11889, file: !3, line: 2154, type: !3739)
!11893 = !DILocation(line: 2154, column: 50, scope: !11889)
!11894 = !DILocalVariable(name: "nodes", arg: 3, scope: !11889, file: !3, line: 2154, type: !3741)
!11895 = !DILocation(line: 2154, column: 65, scope: !11889)
!11896 = !DILocalVariable(name: "totnode", arg: 4, scope: !11889, file: !3, line: 2154, type: !57)
!11897 = !DILocation(line: 2154, column: 76, scope: !11889)
!11898 = !DILocalVariable(name: "ss", scope: !11889, file: !3, line: 2156, type: !5374)
!11899 = !DILocation(line: 2156, column: 17, scope: !11889)
!11900 = !DILocation(line: 2156, column: 22, scope: !11889)
!11901 = !DILocation(line: 2156, column: 26, scope: !11889)
!11902 = !DILocalVariable(name: "brush", scope: !11889, file: !3, line: 2157, type: !2749)
!11903 = !DILocation(line: 2157, column: 9, scope: !11889)
!11904 = !DILocation(line: 2157, column: 34, scope: !11889)
!11905 = !DILocation(line: 2157, column: 38, scope: !11889)
!11906 = !DILocation(line: 2157, column: 17, scope: !11889)
!11907 = !DILocalVariable(name: "bstrength", scope: !11889, file: !3, line: 2158, type: !153)
!11908 = !DILocation(line: 2158, column: 8, scope: !11889)
!11909 = !DILocation(line: 2158, column: 20, scope: !11889)
!11910 = !DILocation(line: 2158, column: 24, scope: !11889)
!11911 = !DILocation(line: 2158, column: 31, scope: !11889)
!11912 = !DILocalVariable(name: "n", scope: !11889, file: !3, line: 2159, type: !57)
!11913 = !DILocation(line: 2159, column: 6, scope: !11889)
!11914 = !DILocation(line: 2164, column: 9, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 2164, column: 2)
!11916 = !DILocation(line: 2164, column: 7, scope: !11915)
!11917 = !DILocation(line: 2164, column: 14, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 2164, column: 2)
!11919 = !DILocation(line: 2164, column: 18, scope: !11918)
!11920 = !DILocation(line: 2164, column: 16, scope: !11918)
!11921 = !DILocation(line: 2164, column: 2, scope: !11915)
!11922 = !DILocalVariable(name: "vd", scope: !11923, file: !3, line: 2165, type: !9184)
!11923 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 2164, column: 32)
!11924 = !DILocation(line: 2165, column: 18, scope: !11923)
!11925 = !DILocalVariable(name: "test", scope: !11923, file: !3, line: 2166, type: !11350)
!11926 = !DILocation(line: 2166, column: 19, scope: !11923)
!11927 = !DILocalVariable(name: "proxy", scope: !11923, file: !3, line: 2167, type: !2054)
!11928 = !DILocation(line: 2167, column: 11, scope: !11923)
!11929 = !DILocation(line: 2169, column: 35, scope: !11923)
!11930 = !DILocation(line: 2169, column: 39, scope: !11923)
!11931 = !DILocation(line: 2169, column: 45, scope: !11923)
!11932 = !DILocation(line: 2169, column: 51, scope: !11923)
!11933 = !DILocation(line: 2169, column: 11, scope: !11923)
!11934 = !DILocation(line: 2169, column: 56, scope: !11923)
!11935 = !DILocation(line: 2169, column: 9, scope: !11923)
!11936 = !DILocation(line: 2171, column: 26, scope: !11923)
!11937 = !DILocation(line: 2171, column: 3, scope: !11923)
!11938 = !DILocation(line: 2173, column: 3, scope: !11923)
!11939 = !DILocation(line: 2173, column: 3, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 2173, column: 3)
!11941 = !DILocation(line: 2173, column: 3, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2173, column: 3)
!11943 = !DILocation(line: 2173, column: 3, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !3, line: 2173, column: 3)
!11945 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 2173, column: 3)
!11946 = !DILocation(line: 2173, column: 3, scope: !11945)
!11947 = !DILocation(line: 2173, column: 3, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 2173, column: 3)
!11949 = !DILocation(line: 2173, column: 3, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 2173, column: 3)
!11951 = !DILocation(line: 2173, column: 3, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 2173, column: 3)
!11953 = !DILocation(line: 2173, column: 3, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11945, file: !3, line: 2173, column: 3)
!11955 = !DILocation(line: 2173, column: 3, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 2173, column: 3)
!11957 = !DILocation(line: 2173, column: 3, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2173, column: 3)
!11959 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 2173, column: 3)
!11960 = !DILocation(line: 2173, column: 3, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 2173, column: 3)
!11962 = !DILocation(line: 2173, column: 3, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 2173, column: 3)
!11964 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 2173, column: 3)
!11965 = !DILocation(line: 2173, column: 3, scope: !11964)
!11966 = !DILocation(line: 2173, column: 3, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 2173, column: 3)
!11968 = !DILocation(line: 2173, column: 3, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 2173, column: 3)
!11970 = !DILocation(line: 2173, column: 3, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2173, column: 3)
!11972 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 2173, column: 3)
!11973 = !DILocation(line: 2173, column: 3, scope: !11972)
!11974 = !DILocation(line: 2173, column: 3, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 2173, column: 3)
!11976 = !DILocation(line: 2173, column: 3, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 2173, column: 3)
!11978 = !DILocation(line: 2173, column: 3, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 2173, column: 3)
!11980 = !DILocation(line: 2173, column: 3, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 2173, column: 3)
!11982 = !DILocation(line: 2173, column: 3, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 2173, column: 3)
!11984 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 2173, column: 3)
!11985 = !DILocation(line: 2173, column: 3, scope: !11984)
!11986 = !DILocation(line: 2173, column: 3, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 2173, column: 3)
!11988 = !DILocation(line: 2173, column: 3, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 2173, column: 3)
!11990 = !DILocation(line: 2173, column: 3, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 2173, column: 3)
!11992 = !DILocation(line: 2175, column: 36, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 2175, column: 8)
!11994 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 2174, column: 3)
!11995 = !DILocation(line: 2175, column: 8, scope: !11993)
!11996 = !DILocation(line: 2175, column: 8, scope: !11994)
!11997 = !DILocalVariable(name: "fade", scope: !11998, file: !3, line: 2176, type: !3072)
!11998 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2175, column: 41)
!11999 = !DILocation(line: 2176, column: 17, scope: !11998)
!12000 = !DILocation(line: 2176, column: 24, scope: !11998)
!12001 = !DILocation(line: 2176, column: 49, scope: !11998)
!12002 = !DILocation(line: 2176, column: 53, scope: !11998)
!12003 = !DILocation(line: 2176, column: 63, scope: !11998)
!12004 = !DILocation(line: 2176, column: 72, scope: !11998)
!12005 = !DILocation(line: 2177, column: 52, scope: !11998)
!12006 = !DILocation(line: 2177, column: 59, scope: !11998)
!12007 = !DILocation(line: 2177, column: 67, scope: !11998)
!12008 = !DILocation(line: 2177, column: 64, scope: !11998)
!12009 = !DILocation(line: 2177, column: 78, scope: !11998)
!12010 = !DILocation(line: 2177, column: 74, scope: !11998)
!12011 = !DILocation(line: 2176, column: 36, scope: !11998)
!12012 = !DILocation(line: 2176, column: 34, scope: !11998)
!12013 = !DILocalVariable(name: "val", scope: !11998, file: !3, line: 2178, type: !233)
!12014 = !DILocation(line: 2178, column: 11, scope: !11998)
!12015 = !DILocation(line: 2180, column: 12, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 2180, column: 9)
!12017 = !DILocation(line: 2180, column: 9, scope: !12016)
!12018 = !DILocation(line: 2180, column: 9, scope: !11998)
!12019 = !DILocation(line: 2180, column: 28, scope: !12016)
!12020 = !DILocation(line: 2180, column: 36, scope: !12016)
!12021 = !DILocation(line: 2180, column: 17, scope: !12016)
!12022 = !DILocation(line: 2181, column: 35, scope: !12016)
!12023 = !DILocation(line: 2181, column: 43, scope: !12016)
!12024 = !DILocation(line: 2181, column: 10, scope: !12016)
!12025 = !DILocation(line: 2183, column: 15, scope: !11998)
!12026 = !DILocation(line: 2183, column: 20, scope: !11998)
!12027 = !DILocation(line: 2183, column: 27, scope: !11998)
!12028 = !DILocation(line: 2183, column: 31, scope: !11998)
!12029 = !DILocation(line: 2183, column: 38, scope: !11998)
!12030 = !DILocation(line: 2183, column: 25, scope: !11998)
!12031 = !DILocation(line: 2183, column: 5, scope: !11998)
!12032 = !DILocation(line: 2184, column: 17, scope: !11998)
!12033 = !DILocation(line: 2184, column: 26, scope: !11998)
!12034 = !DILocation(line: 2184, column: 30, scope: !11998)
!12035 = !DILocation(line: 2184, column: 35, scope: !11998)
!12036 = !DILocation(line: 2184, column: 39, scope: !11998)
!12037 = !DILocation(line: 2184, column: 46, scope: !11998)
!12038 = !DILocation(line: 2184, column: 5, scope: !11998)
!12039 = !DILocation(line: 2186, column: 12, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 2186, column: 9)
!12041 = !DILocation(line: 2186, column: 9, scope: !12040)
!12042 = !DILocation(line: 2186, column: 9, scope: !11998)
!12043 = !DILocation(line: 2187, column: 9, scope: !12040)
!12044 = !DILocation(line: 2187, column: 16, scope: !12040)
!12045 = !DILocation(line: 2187, column: 21, scope: !12040)
!12046 = !DILocation(line: 2187, column: 6, scope: !12040)
!12047 = !DILocation(line: 2188, column: 4, scope: !11998)
!12048 = !DILocation(line: 2190, column: 3, scope: !11964)
!12049 = distinct !{!12049, !11957, !12050}
!12050 = !DILocation(line: 2190, column: 3, scope: !11958)
!12051 = !DILocation(line: 2190, column: 3, scope: !11959)
!12052 = distinct !{!12052, !11953, !12053}
!12053 = !DILocation(line: 2190, column: 3, scope: !11954)
!12054 = !DILocation(line: 2190, column: 3, scope: !11945)
!12055 = distinct !{!12055, !11939, !12056}
!12056 = !DILocation(line: 2190, column: 3, scope: !11940)
!12057 = !DILocation(line: 2191, column: 2, scope: !11923)
!12058 = !DILocation(line: 2164, column: 28, scope: !11918)
!12059 = !DILocation(line: 2164, column: 2, scope: !11918)
!12060 = distinct !{!12060, !11921, !12061}
!12061 = !DILocation(line: 2191, column: 2, scope: !11915)
!12062 = !DILocation(line: 2192, column: 1, scope: !11889)
!12063 = distinct !DISubprogram(name: "do_grab_brush", scope: !3, file: !3, line: 1833, type: !4, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!12064 = !DILocalVariable(name: "sd", arg: 1, scope: !12063, file: !3, line: 1833, type: !6)
!12065 = !DILocation(line: 1833, column: 35, scope: !12063)
!12066 = !DILocalVariable(name: "ob", arg: 2, scope: !12063, file: !3, line: 1833, type: !3739)
!12067 = !DILocation(line: 1833, column: 47, scope: !12063)
!12068 = !DILocalVariable(name: "nodes", arg: 3, scope: !12063, file: !3, line: 1833, type: !3741)
!12069 = !DILocation(line: 1833, column: 62, scope: !12063)
!12070 = !DILocalVariable(name: "totnode", arg: 4, scope: !12063, file: !3, line: 1833, type: !57)
!12071 = !DILocation(line: 1833, column: 73, scope: !12063)
!12072 = !DILocalVariable(name: "ss", scope: !12063, file: !3, line: 1835, type: !5374)
!12073 = !DILocation(line: 1835, column: 17, scope: !12063)
!12074 = !DILocation(line: 1835, column: 22, scope: !12063)
!12075 = !DILocation(line: 1835, column: 26, scope: !12063)
!12076 = !DILocalVariable(name: "brush", scope: !12063, file: !3, line: 1836, type: !2749)
!12077 = !DILocation(line: 1836, column: 9, scope: !12063)
!12078 = !DILocation(line: 1836, column: 34, scope: !12063)
!12079 = !DILocation(line: 1836, column: 38, scope: !12063)
!12080 = !DILocation(line: 1836, column: 17, scope: !12063)
!12081 = !DILocalVariable(name: "bstrength", scope: !12063, file: !3, line: 1837, type: !153)
!12082 = !DILocation(line: 1837, column: 8, scope: !12063)
!12083 = !DILocation(line: 1837, column: 20, scope: !12063)
!12084 = !DILocation(line: 1837, column: 24, scope: !12063)
!12085 = !DILocation(line: 1837, column: 31, scope: !12063)
!12086 = !DILocalVariable(name: "grab_delta", scope: !12063, file: !3, line: 1838, type: !233)
!12087 = !DILocation(line: 1838, column: 8, scope: !12063)
!12088 = !DILocalVariable(name: "n", scope: !12063, file: !3, line: 1839, type: !57)
!12089 = !DILocation(line: 1839, column: 6, scope: !12063)
!12090 = !DILocalVariable(name: "len", scope: !12063, file: !3, line: 1840, type: !153)
!12091 = !DILocation(line: 1840, column: 8, scope: !12063)
!12092 = !DILocation(line: 1842, column: 13, scope: !12063)
!12093 = !DILocation(line: 1842, column: 25, scope: !12063)
!12094 = !DILocation(line: 1842, column: 29, scope: !12063)
!12095 = !DILocation(line: 1842, column: 36, scope: !12063)
!12096 = !DILocation(line: 1842, column: 2, scope: !12063)
!12097 = !DILocation(line: 1844, column: 15, scope: !12063)
!12098 = !DILocation(line: 1844, column: 8, scope: !12063)
!12099 = !DILocation(line: 1844, column: 6, scope: !12063)
!12100 = !DILocation(line: 1846, column: 6, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1846, column: 6)
!12102 = !DILocation(line: 1846, column: 13, scope: !12101)
!12103 = !DILocation(line: 1846, column: 27, scope: !12101)
!12104 = !DILocation(line: 1846, column: 6, scope: !12063)
!12105 = !DILocation(line: 1847, column: 13, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 1846, column: 32)
!12107 = !DILocation(line: 1847, column: 17, scope: !12106)
!12108 = !DILocation(line: 1847, column: 24, scope: !12106)
!12109 = !DILocation(line: 1847, column: 44, scope: !12106)
!12110 = !DILocation(line: 1847, column: 50, scope: !12106)
!12111 = !DILocation(line: 1847, column: 57, scope: !12106)
!12112 = !DILocation(line: 1847, column: 48, scope: !12106)
!12113 = !DILocation(line: 1847, column: 3, scope: !12106)
!12114 = !DILocation(line: 1848, column: 13, scope: !12106)
!12115 = !DILocation(line: 1848, column: 32, scope: !12106)
!12116 = !DILocation(line: 1848, column: 39, scope: !12106)
!12117 = !DILocation(line: 1848, column: 30, scope: !12106)
!12118 = !DILocation(line: 1848, column: 3, scope: !12106)
!12119 = !DILocation(line: 1849, column: 13, scope: !12106)
!12120 = !DILocation(line: 1849, column: 25, scope: !12106)
!12121 = !DILocation(line: 1849, column: 29, scope: !12106)
!12122 = !DILocation(line: 1849, column: 36, scope: !12106)
!12123 = !DILocation(line: 1849, column: 3, scope: !12106)
!12124 = !DILocation(line: 1850, column: 2, scope: !12106)
!12125 = !DILocation(line: 1855, column: 9, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1855, column: 2)
!12127 = !DILocation(line: 1855, column: 7, scope: !12126)
!12128 = !DILocation(line: 1855, column: 14, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 1855, column: 2)
!12130 = !DILocation(line: 1855, column: 18, scope: !12129)
!12131 = !DILocation(line: 1855, column: 16, scope: !12129)
!12132 = !DILocation(line: 1855, column: 2, scope: !12126)
!12133 = !DILocalVariable(name: "vd", scope: !12134, file: !3, line: 1856, type: !9184)
!12134 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1855, column: 32)
!12135 = !DILocation(line: 1856, column: 18, scope: !12134)
!12136 = !DILocalVariable(name: "test", scope: !12134, file: !3, line: 1857, type: !11350)
!12137 = !DILocation(line: 1857, column: 19, scope: !12134)
!12138 = !DILocalVariable(name: "orig_data", scope: !12134, file: !3, line: 1858, type: !9995)
!12139 = !DILocation(line: 1858, column: 22, scope: !12134)
!12140 = !DILocalVariable(name: "proxy", scope: !12134, file: !3, line: 1859, type: !2054)
!12141 = !DILocation(line: 1859, column: 11, scope: !12134)
!12142 = !DILocation(line: 1861, column: 42, scope: !12134)
!12143 = !DILocation(line: 1861, column: 46, scope: !12134)
!12144 = !DILocation(line: 1861, column: 52, scope: !12134)
!12145 = !DILocation(line: 1861, column: 3, scope: !12134)
!12146 = !DILocation(line: 1863, column: 35, scope: !12134)
!12147 = !DILocation(line: 1863, column: 39, scope: !12134)
!12148 = !DILocation(line: 1863, column: 45, scope: !12134)
!12149 = !DILocation(line: 1863, column: 51, scope: !12134)
!12150 = !DILocation(line: 1863, column: 11, scope: !12134)
!12151 = !DILocation(line: 1863, column: 56, scope: !12134)
!12152 = !DILocation(line: 1863, column: 9, scope: !12134)
!12153 = !DILocation(line: 1865, column: 26, scope: !12134)
!12154 = !DILocation(line: 1865, column: 3, scope: !12134)
!12155 = !DILocation(line: 1867, column: 3, scope: !12134)
!12156 = !DILocation(line: 1867, column: 3, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 1867, column: 3)
!12158 = !DILocation(line: 1867, column: 3, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 1867, column: 3)
!12160 = !DILocation(line: 1867, column: 3, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 1867, column: 3)
!12162 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 1867, column: 3)
!12163 = !DILocation(line: 1867, column: 3, scope: !12162)
!12164 = !DILocation(line: 1867, column: 3, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1867, column: 3)
!12166 = !DILocation(line: 1867, column: 3, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 1867, column: 3)
!12168 = !DILocation(line: 1867, column: 3, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1867, column: 3)
!12170 = !DILocation(line: 1867, column: 3, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 1867, column: 3)
!12172 = !DILocation(line: 1867, column: 3, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1867, column: 3)
!12174 = !DILocation(line: 1867, column: 3, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1867, column: 3)
!12176 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 1867, column: 3)
!12177 = !DILocation(line: 1867, column: 3, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12175, file: !3, line: 1867, column: 3)
!12179 = !DILocation(line: 1867, column: 3, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12181, file: !3, line: 1867, column: 3)
!12181 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 1867, column: 3)
!12182 = !DILocation(line: 1867, column: 3, scope: !12181)
!12183 = !DILocation(line: 1867, column: 3, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 1867, column: 3)
!12185 = !DILocation(line: 1867, column: 3, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 1867, column: 3)
!12187 = !DILocation(line: 1867, column: 3, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 1867, column: 3)
!12189 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 1867, column: 3)
!12190 = !DILocation(line: 1867, column: 3, scope: !12189)
!12191 = !DILocation(line: 1867, column: 3, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 1867, column: 3)
!12193 = !DILocation(line: 1867, column: 3, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 1867, column: 3)
!12195 = !DILocation(line: 1867, column: 3, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 1867, column: 3)
!12197 = !DILocation(line: 1867, column: 3, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 1867, column: 3)
!12199 = !DILocation(line: 1867, column: 3, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 1867, column: 3)
!12201 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 1867, column: 3)
!12202 = !DILocation(line: 1867, column: 3, scope: !12201)
!12203 = !DILocation(line: 1867, column: 3, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1867, column: 3)
!12205 = !DILocation(line: 1867, column: 3, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1867, column: 3)
!12207 = !DILocation(line: 1867, column: 3, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 1867, column: 3)
!12209 = !DILocation(line: 1869, column: 4, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12181, file: !3, line: 1868, column: 3)
!12211 = !DILocation(line: 1871, column: 43, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 1871, column: 8)
!12213 = !DILocation(line: 1871, column: 8, scope: !12212)
!12214 = !DILocation(line: 1871, column: 8, scope: !12210)
!12215 = !DILocalVariable(name: "fade", scope: !12216, file: !3, line: 1872, type: !3072)
!12216 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 1871, column: 48)
!12217 = !DILocation(line: 1872, column: 17, scope: !12216)
!12218 = !DILocation(line: 1872, column: 24, scope: !12216)
!12219 = !DILocation(line: 1872, column: 49, scope: !12216)
!12220 = !DILocation(line: 1872, column: 53, scope: !12216)
!12221 = !DILocation(line: 1873, column: 59, scope: !12216)
!12222 = !DILocation(line: 1874, column: 54, scope: !12216)
!12223 = !DILocation(line: 1875, column: 59, scope: !12216)
!12224 = !DILocation(line: 1876, column: 58, scope: !12216)
!12225 = !DILocation(line: 1876, column: 55, scope: !12216)
!12226 = !DILocation(line: 1876, column: 69, scope: !12216)
!12227 = !DILocation(line: 1876, column: 65, scope: !12216)
!12228 = !DILocation(line: 1872, column: 36, scope: !12216)
!12229 = !DILocation(line: 1872, column: 34, scope: !12216)
!12230 = !DILocation(line: 1878, column: 17, scope: !12216)
!12231 = !DILocation(line: 1878, column: 26, scope: !12216)
!12232 = !DILocation(line: 1878, column: 30, scope: !12216)
!12233 = !DILocation(line: 1878, column: 42, scope: !12216)
!12234 = !DILocation(line: 1878, column: 5, scope: !12216)
!12235 = !DILocation(line: 1880, column: 12, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 1880, column: 9)
!12237 = !DILocation(line: 1880, column: 9, scope: !12236)
!12238 = !DILocation(line: 1880, column: 9, scope: !12216)
!12239 = !DILocation(line: 1881, column: 9, scope: !12236)
!12240 = !DILocation(line: 1881, column: 16, scope: !12236)
!12241 = !DILocation(line: 1881, column: 21, scope: !12236)
!12242 = !DILocation(line: 1881, column: 6, scope: !12236)
!12243 = !DILocation(line: 1882, column: 4, scope: !12216)
!12244 = !DILocation(line: 1884, column: 3, scope: !12181)
!12245 = distinct !{!12245, !12174, !12246}
!12246 = !DILocation(line: 1884, column: 3, scope: !12175)
!12247 = !DILocation(line: 1884, column: 3, scope: !12176)
!12248 = distinct !{!12248, !12170, !12249}
!12249 = !DILocation(line: 1884, column: 3, scope: !12171)
!12250 = !DILocation(line: 1884, column: 3, scope: !12162)
!12251 = distinct !{!12251, !12156, !12252}
!12252 = !DILocation(line: 1884, column: 3, scope: !12157)
!12253 = !DILocation(line: 1885, column: 2, scope: !12134)
!12254 = !DILocation(line: 1855, column: 28, scope: !12129)
!12255 = !DILocation(line: 1855, column: 2, scope: !12129)
!12256 = distinct !{!12256, !12132, !12257}
!12257 = !DILocation(line: 1885, column: 2, scope: !12126)
!12258 = !DILocation(line: 1886, column: 1, scope: !12063)
!12259 = !DILocalVariable(name: "sd", arg: 1, scope: !2, file: !3, line: 2030, type: !6)
!12260 = !DILocation(line: 2030, column: 37, scope: !2)
!12261 = !DILocalVariable(name: "ob", arg: 2, scope: !2, file: !3, line: 2030, type: !3739)
!12262 = !DILocation(line: 2030, column: 49, scope: !2)
!12263 = !DILocalVariable(name: "nodes", arg: 3, scope: !2, file: !3, line: 2030, type: !3741)
!12264 = !DILocation(line: 2030, column: 64, scope: !2)
!12265 = !DILocalVariable(name: "totnode", arg: 4, scope: !2, file: !3, line: 2030, type: !57)
!12266 = !DILocation(line: 2030, column: 75, scope: !2)
!12267 = !DILocalVariable(name: "ss", scope: !2, file: !3, line: 2032, type: !5374)
!12268 = !DILocation(line: 2032, column: 17, scope: !2)
!12269 = !DILocation(line: 2032, column: 22, scope: !2)
!12270 = !DILocation(line: 2032, column: 26, scope: !2)
!12271 = !DILocalVariable(name: "brush", scope: !2, file: !3, line: 2033, type: !2749)
!12272 = !DILocation(line: 2033, column: 9, scope: !2)
!12273 = !DILocation(line: 2033, column: 34, scope: !2)
!12274 = !DILocation(line: 2033, column: 38, scope: !2)
!12275 = !DILocation(line: 2033, column: 17, scope: !2)
!12276 = !DILocalVariable(name: "bstrength", scope: !2, file: !3, line: 2034, type: !153)
!12277 = !DILocation(line: 2034, column: 8, scope: !2)
!12278 = !DILocation(line: 2034, column: 20, scope: !2)
!12279 = !DILocation(line: 2034, column: 24, scope: !2)
!12280 = !DILocation(line: 2034, column: 31, scope: !2)
!12281 = !DILocalVariable(name: "n", scope: !2, file: !3, line: 2035, type: !57)
!12282 = !DILocation(line: 2035, column: 6, scope: !2)
!12283 = !DILocalVariable(name: "angle", scope: !2, file: !3, line: 2037, type: !153)
!12284 = !DILocation(line: 2037, column: 8, scope: !2)
!12285 = !DILocation(line: 2037, column: 16, scope: !2)
!12286 = !DILocation(line: 2037, column: 20, scope: !2)
!12287 = !DILocation(line: 2037, column: 27, scope: !2)
!12288 = !DILocation(line: 2037, column: 50, scope: !2)
!12289 = !DILocation(line: 2037, column: 54, scope: !2)
!12290 = !DILocation(line: 2037, column: 61, scope: !2)
!12291 = !DILocation(line: 2037, column: 45, scope: !2)
!12292 = !DILocation(line: 2037, column: 43, scope: !2)
!12293 = !DILocation(line: 2042, column: 9, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2042, column: 2)
!12295 = !DILocation(line: 2042, column: 7, scope: !12294)
!12296 = !DILocation(line: 2042, column: 14, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2042, column: 2)
!12298 = !DILocation(line: 2042, column: 18, scope: !12297)
!12299 = !DILocation(line: 2042, column: 16, scope: !12297)
!12300 = !DILocation(line: 2042, column: 2, scope: !12294)
!12301 = !DILocalVariable(name: "vd", scope: !12302, file: !3, line: 2043, type: !9184)
!12302 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 2042, column: 32)
!12303 = !DILocation(line: 2043, column: 18, scope: !12302)
!12304 = !DILocalVariable(name: "test", scope: !12302, file: !3, line: 2044, type: !11350)
!12305 = !DILocation(line: 2044, column: 19, scope: !12302)
!12306 = !DILocalVariable(name: "orig_data", scope: !12302, file: !3, line: 2045, type: !9995)
!12307 = !DILocation(line: 2045, column: 22, scope: !12302)
!12308 = !DILocalVariable(name: "proxy", scope: !12302, file: !3, line: 2046, type: !2054)
!12309 = !DILocation(line: 2046, column: 11, scope: !12302)
!12310 = !DILocation(line: 2048, column: 42, scope: !12302)
!12311 = !DILocation(line: 2048, column: 46, scope: !12302)
!12312 = !DILocation(line: 2048, column: 52, scope: !12302)
!12313 = !DILocation(line: 2048, column: 3, scope: !12302)
!12314 = !DILocation(line: 2050, column: 35, scope: !12302)
!12315 = !DILocation(line: 2050, column: 39, scope: !12302)
!12316 = !DILocation(line: 2050, column: 45, scope: !12302)
!12317 = !DILocation(line: 2050, column: 51, scope: !12302)
!12318 = !DILocation(line: 2050, column: 11, scope: !12302)
!12319 = !DILocation(line: 2050, column: 56, scope: !12302)
!12320 = !DILocation(line: 2050, column: 9, scope: !12302)
!12321 = !DILocation(line: 2052, column: 26, scope: !12302)
!12322 = !DILocation(line: 2052, column: 3, scope: !12302)
!12323 = !DILocation(line: 2054, column: 3, scope: !12302)
!12324 = !DILocation(line: 2054, column: 3, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2054, column: 3)
!12326 = !DILocation(line: 2054, column: 3, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2054, column: 3)
!12328 = !DILocation(line: 2054, column: 3, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 2054, column: 3)
!12330 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 2054, column: 3)
!12331 = !DILocation(line: 2054, column: 3, scope: !12330)
!12332 = !DILocation(line: 2054, column: 3, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 2054, column: 3)
!12334 = !DILocation(line: 2054, column: 3, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 2054, column: 3)
!12336 = !DILocation(line: 2054, column: 3, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 2054, column: 3)
!12338 = !DILocation(line: 2054, column: 3, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 2054, column: 3)
!12340 = !DILocation(line: 2054, column: 3, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12339, file: !3, line: 2054, column: 3)
!12342 = !DILocation(line: 2054, column: 3, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 2054, column: 3)
!12344 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 2054, column: 3)
!12345 = !DILocation(line: 2054, column: 3, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 2054, column: 3)
!12347 = !DILocation(line: 2054, column: 3, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 2054, column: 3)
!12349 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 2054, column: 3)
!12350 = !DILocation(line: 2054, column: 3, scope: !12349)
!12351 = !DILocation(line: 2054, column: 3, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2054, column: 3)
!12353 = !DILocation(line: 2054, column: 3, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 2054, column: 3)
!12355 = !DILocation(line: 2054, column: 3, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 2054, column: 3)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 2054, column: 3)
!12358 = !DILocation(line: 2054, column: 3, scope: !12357)
!12359 = !DILocation(line: 2054, column: 3, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2054, column: 3)
!12361 = !DILocation(line: 2054, column: 3, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 2054, column: 3)
!12363 = !DILocation(line: 2054, column: 3, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 2054, column: 3)
!12365 = !DILocation(line: 2054, column: 3, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 2054, column: 3)
!12367 = !DILocation(line: 2054, column: 3, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 2054, column: 3)
!12369 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 2054, column: 3)
!12370 = !DILocation(line: 2054, column: 3, scope: !12369)
!12371 = !DILocation(line: 2054, column: 3, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12368, file: !3, line: 2054, column: 3)
!12373 = !DILocation(line: 2054, column: 3, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12368, file: !3, line: 2054, column: 3)
!12375 = !DILocation(line: 2054, column: 3, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 2054, column: 3)
!12377 = !DILocation(line: 2056, column: 4, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 2055, column: 3)
!12379 = !DILocation(line: 2058, column: 43, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 2058, column: 8)
!12381 = !DILocation(line: 2058, column: 8, scope: !12380)
!12382 = !DILocation(line: 2058, column: 8, scope: !12378)
!12383 = !DILocalVariable(name: "vec", scope: !12384, file: !3, line: 2059, type: !233)
!12384 = distinct !DILexicalBlock(scope: !12380, file: !3, line: 2058, column: 48)
!12385 = !DILocation(line: 2059, column: 11, scope: !12384)
!12386 = !DILocalVariable(name: "rot", scope: !12384, file: !3, line: 2059, type: !2329)
!12387 = !DILocation(line: 2059, column: 19, scope: !12384)
!12388 = !DILocalVariable(name: "fade", scope: !12384, file: !3, line: 2060, type: !3072)
!12389 = !DILocation(line: 2060, column: 17, scope: !12384)
!12390 = !DILocation(line: 2060, column: 24, scope: !12384)
!12391 = !DILocation(line: 2060, column: 49, scope: !12384)
!12392 = !DILocation(line: 2060, column: 53, scope: !12384)
!12393 = !DILocation(line: 2061, column: 59, scope: !12384)
!12394 = !DILocation(line: 2062, column: 54, scope: !12384)
!12395 = !DILocation(line: 2063, column: 59, scope: !12384)
!12396 = !DILocation(line: 2064, column: 58, scope: !12384)
!12397 = !DILocation(line: 2064, column: 55, scope: !12384)
!12398 = !DILocation(line: 2064, column: 69, scope: !12384)
!12399 = !DILocation(line: 2064, column: 65, scope: !12384)
!12400 = !DILocation(line: 2060, column: 36, scope: !12384)
!12401 = !DILocation(line: 2060, column: 34, scope: !12384)
!12402 = !DILocation(line: 2066, column: 17, scope: !12384)
!12403 = !DILocation(line: 2066, column: 32, scope: !12384)
!12404 = !DILocation(line: 2066, column: 36, scope: !12384)
!12405 = !DILocation(line: 2066, column: 40, scope: !12384)
!12406 = !DILocation(line: 2066, column: 47, scope: !12384)
!12407 = !DILocation(line: 2066, column: 5, scope: !12384)
!12408 = !DILocation(line: 2067, column: 35, scope: !12384)
!12409 = !DILocation(line: 2067, column: 40, scope: !12384)
!12410 = !DILocation(line: 2067, column: 44, scope: !12384)
!12411 = !DILocation(line: 2067, column: 51, scope: !12384)
!12412 = !DILocation(line: 2067, column: 71, scope: !12384)
!12413 = !DILocation(line: 2067, column: 79, scope: !12384)
!12414 = !DILocation(line: 2067, column: 77, scope: !12384)
!12415 = !DILocation(line: 2067, column: 5, scope: !12384)
!12416 = !DILocation(line: 2068, column: 17, scope: !12384)
!12417 = !DILocation(line: 2068, column: 26, scope: !12384)
!12418 = !DILocation(line: 2068, column: 30, scope: !12384)
!12419 = !DILocation(line: 2068, column: 35, scope: !12384)
!12420 = !DILocation(line: 2068, column: 5, scope: !12384)
!12421 = !DILocation(line: 2069, column: 15, scope: !12384)
!12422 = !DILocation(line: 2069, column: 24, scope: !12384)
!12423 = !DILocation(line: 2069, column: 28, scope: !12384)
!12424 = !DILocation(line: 2069, column: 32, scope: !12384)
!12425 = !DILocation(line: 2069, column: 39, scope: !12384)
!12426 = !DILocation(line: 2069, column: 5, scope: !12384)
!12427 = !DILocation(line: 2070, column: 15, scope: !12384)
!12428 = !DILocation(line: 2070, column: 24, scope: !12384)
!12429 = !DILocation(line: 2070, column: 38, scope: !12384)
!12430 = !DILocation(line: 2070, column: 5, scope: !12384)
!12431 = !DILocation(line: 2072, column: 12, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 2072, column: 9)
!12433 = !DILocation(line: 2072, column: 9, scope: !12432)
!12434 = !DILocation(line: 2072, column: 9, scope: !12384)
!12435 = !DILocation(line: 2073, column: 9, scope: !12432)
!12436 = !DILocation(line: 2073, column: 16, scope: !12432)
!12437 = !DILocation(line: 2073, column: 21, scope: !12432)
!12438 = !DILocation(line: 2073, column: 6, scope: !12432)
!12439 = !DILocation(line: 2074, column: 4, scope: !12384)
!12440 = !DILocation(line: 2076, column: 3, scope: !12349)
!12441 = distinct !{!12441, !12342, !12442}
!12442 = !DILocation(line: 2076, column: 3, scope: !12343)
!12443 = !DILocation(line: 2076, column: 3, scope: !12344)
!12444 = distinct !{!12444, !12338, !12445}
!12445 = !DILocation(line: 2076, column: 3, scope: !12339)
!12446 = !DILocation(line: 2076, column: 3, scope: !12330)
!12447 = distinct !{!12447, !12324, !12448}
!12448 = !DILocation(line: 2076, column: 3, scope: !12325)
!12449 = !DILocation(line: 2077, column: 2, scope: !12302)
!12450 = !DILocation(line: 2042, column: 28, scope: !12297)
!12451 = !DILocation(line: 2042, column: 2, scope: !12297)
!12452 = distinct !{!12452, !12300, !12453}
!12453 = !DILocation(line: 2077, column: 2, scope: !12294)
!12454 = !DILocation(line: 2078, column: 1, scope: !2)
!12455 = distinct !DISubprogram(name: "do_snake_hook_brush", scope: !3, file: !3, line: 1930, type: !4, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!12456 = !DILocalVariable(name: "sd", arg: 1, scope: !12455, file: !3, line: 1930, type: !6)
!12457 = !DILocation(line: 1930, column: 41, scope: !12455)
!12458 = !DILocalVariable(name: "ob", arg: 2, scope: !12455, file: !3, line: 1930, type: !3739)
!12459 = !DILocation(line: 1930, column: 53, scope: !12455)
!12460 = !DILocalVariable(name: "nodes", arg: 3, scope: !12455, file: !3, line: 1930, type: !3741)
!12461 = !DILocation(line: 1930, column: 68, scope: !12455)
!12462 = !DILocalVariable(name: "totnode", arg: 4, scope: !12455, file: !3, line: 1930, type: !57)
!12463 = !DILocation(line: 1930, column: 79, scope: !12455)
!12464 = !DILocalVariable(name: "ss", scope: !12455, file: !3, line: 1932, type: !5374)
!12465 = !DILocation(line: 1932, column: 17, scope: !12455)
!12466 = !DILocation(line: 1932, column: 22, scope: !12455)
!12467 = !DILocation(line: 1932, column: 26, scope: !12455)
!12468 = !DILocalVariable(name: "brush", scope: !12455, file: !3, line: 1933, type: !2749)
!12469 = !DILocation(line: 1933, column: 9, scope: !12455)
!12470 = !DILocation(line: 1933, column: 34, scope: !12455)
!12471 = !DILocation(line: 1933, column: 38, scope: !12455)
!12472 = !DILocation(line: 1933, column: 17, scope: !12455)
!12473 = !DILocalVariable(name: "bstrength", scope: !12455, file: !3, line: 1934, type: !153)
!12474 = !DILocation(line: 1934, column: 8, scope: !12455)
!12475 = !DILocation(line: 1934, column: 20, scope: !12455)
!12476 = !DILocation(line: 1934, column: 24, scope: !12455)
!12477 = !DILocation(line: 1934, column: 31, scope: !12455)
!12478 = !DILocalVariable(name: "grab_delta", scope: !12455, file: !3, line: 1935, type: !233)
!12479 = !DILocation(line: 1935, column: 8, scope: !12455)
!12480 = !DILocalVariable(name: "n", scope: !12455, file: !3, line: 1936, type: !57)
!12481 = !DILocation(line: 1936, column: 6, scope: !12455)
!12482 = !DILocalVariable(name: "len", scope: !12455, file: !3, line: 1937, type: !153)
!12483 = !DILocation(line: 1937, column: 8, scope: !12455)
!12484 = !DILocation(line: 1939, column: 13, scope: !12455)
!12485 = !DILocation(line: 1939, column: 25, scope: !12455)
!12486 = !DILocation(line: 1939, column: 29, scope: !12455)
!12487 = !DILocation(line: 1939, column: 36, scope: !12455)
!12488 = !DILocation(line: 1939, column: 2, scope: !12455)
!12489 = !DILocation(line: 1941, column: 15, scope: !12455)
!12490 = !DILocation(line: 1941, column: 8, scope: !12455)
!12491 = !DILocation(line: 1941, column: 6, scope: !12455)
!12492 = !DILocation(line: 1943, column: 6, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 1943, column: 6)
!12494 = !DILocation(line: 1943, column: 16, scope: !12493)
!12495 = !DILocation(line: 1943, column: 6, scope: !12455)
!12496 = !DILocation(line: 1944, column: 13, scope: !12493)
!12497 = !DILocation(line: 1944, column: 3, scope: !12493)
!12498 = !DILocation(line: 1946, column: 6, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 1946, column: 6)
!12500 = !DILocation(line: 1946, column: 13, scope: !12499)
!12501 = !DILocation(line: 1946, column: 27, scope: !12499)
!12502 = !DILocation(line: 1946, column: 6, scope: !12455)
!12503 = !DILocation(line: 1947, column: 13, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 1946, column: 32)
!12505 = !DILocation(line: 1947, column: 17, scope: !12504)
!12506 = !DILocation(line: 1947, column: 24, scope: !12504)
!12507 = !DILocation(line: 1947, column: 44, scope: !12504)
!12508 = !DILocation(line: 1947, column: 50, scope: !12504)
!12509 = !DILocation(line: 1947, column: 57, scope: !12504)
!12510 = !DILocation(line: 1947, column: 48, scope: !12504)
!12511 = !DILocation(line: 1947, column: 3, scope: !12504)
!12512 = !DILocation(line: 1948, column: 13, scope: !12504)
!12513 = !DILocation(line: 1948, column: 32, scope: !12504)
!12514 = !DILocation(line: 1948, column: 39, scope: !12504)
!12515 = !DILocation(line: 1948, column: 30, scope: !12504)
!12516 = !DILocation(line: 1948, column: 3, scope: !12504)
!12517 = !DILocation(line: 1949, column: 13, scope: !12504)
!12518 = !DILocation(line: 1949, column: 25, scope: !12504)
!12519 = !DILocation(line: 1949, column: 29, scope: !12504)
!12520 = !DILocation(line: 1949, column: 36, scope: !12504)
!12521 = !DILocation(line: 1949, column: 3, scope: !12504)
!12522 = !DILocation(line: 1950, column: 2, scope: !12504)
!12523 = !DILocation(line: 1955, column: 9, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 1955, column: 2)
!12525 = !DILocation(line: 1955, column: 7, scope: !12524)
!12526 = !DILocation(line: 1955, column: 14, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12524, file: !3, line: 1955, column: 2)
!12528 = !DILocation(line: 1955, column: 18, scope: !12527)
!12529 = !DILocation(line: 1955, column: 16, scope: !12527)
!12530 = !DILocation(line: 1955, column: 2, scope: !12524)
!12531 = !DILocalVariable(name: "vd", scope: !12532, file: !3, line: 1956, type: !9184)
!12532 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 1955, column: 32)
!12533 = !DILocation(line: 1956, column: 18, scope: !12532)
!12534 = !DILocalVariable(name: "test", scope: !12532, file: !3, line: 1957, type: !11350)
!12535 = !DILocation(line: 1957, column: 19, scope: !12532)
!12536 = !DILocalVariable(name: "proxy", scope: !12532, file: !3, line: 1958, type: !2054)
!12537 = !DILocation(line: 1958, column: 11, scope: !12532)
!12538 = !DILocation(line: 1960, column: 35, scope: !12532)
!12539 = !DILocation(line: 1960, column: 39, scope: !12532)
!12540 = !DILocation(line: 1960, column: 45, scope: !12532)
!12541 = !DILocation(line: 1960, column: 51, scope: !12532)
!12542 = !DILocation(line: 1960, column: 11, scope: !12532)
!12543 = !DILocation(line: 1960, column: 56, scope: !12532)
!12544 = !DILocation(line: 1960, column: 9, scope: !12532)
!12545 = !DILocation(line: 1962, column: 26, scope: !12532)
!12546 = !DILocation(line: 1962, column: 3, scope: !12532)
!12547 = !DILocation(line: 1964, column: 3, scope: !12532)
!12548 = !DILocation(line: 1964, column: 3, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 1964, column: 3)
!12550 = !DILocation(line: 1964, column: 3, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 1964, column: 3)
!12552 = !DILocation(line: 1964, column: 3, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !3, line: 1964, column: 3)
!12554 = distinct !DILexicalBlock(scope: !12551, file: !3, line: 1964, column: 3)
!12555 = !DILocation(line: 1964, column: 3, scope: !12554)
!12556 = !DILocation(line: 1964, column: 3, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 1964, column: 3)
!12558 = !DILocation(line: 1964, column: 3, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1964, column: 3)
!12560 = !DILocation(line: 1964, column: 3, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 1964, column: 3)
!12562 = !DILocation(line: 1964, column: 3, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12554, file: !3, line: 1964, column: 3)
!12564 = !DILocation(line: 1964, column: 3, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 1964, column: 3)
!12566 = !DILocation(line: 1964, column: 3, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !3, line: 1964, column: 3)
!12568 = distinct !DILexicalBlock(scope: !12565, file: !3, line: 1964, column: 3)
!12569 = !DILocation(line: 1964, column: 3, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 1964, column: 3)
!12571 = !DILocation(line: 1964, column: 3, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 1964, column: 3)
!12573 = distinct !DILexicalBlock(scope: !12570, file: !3, line: 1964, column: 3)
!12574 = !DILocation(line: 1964, column: 3, scope: !12573)
!12575 = !DILocation(line: 1964, column: 3, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 1964, column: 3)
!12577 = !DILocation(line: 1964, column: 3, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 1964, column: 3)
!12579 = !DILocation(line: 1964, column: 3, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 1964, column: 3)
!12581 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 1964, column: 3)
!12582 = !DILocation(line: 1964, column: 3, scope: !12581)
!12583 = !DILocation(line: 1964, column: 3, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 1964, column: 3)
!12585 = !DILocation(line: 1964, column: 3, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 1964, column: 3)
!12587 = !DILocation(line: 1964, column: 3, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 1964, column: 3)
!12589 = !DILocation(line: 1964, column: 3, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 1964, column: 3)
!12591 = !DILocation(line: 1964, column: 3, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 1964, column: 3)
!12593 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 1964, column: 3)
!12594 = !DILocation(line: 1964, column: 3, scope: !12593)
!12595 = !DILocation(line: 1964, column: 3, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1964, column: 3)
!12597 = !DILocation(line: 1964, column: 3, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 1964, column: 3)
!12599 = !DILocation(line: 1964, column: 3, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 1964, column: 3)
!12601 = !DILocation(line: 1966, column: 36, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12603, file: !3, line: 1966, column: 8)
!12603 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 1965, column: 3)
!12604 = !DILocation(line: 1966, column: 8, scope: !12602)
!12605 = !DILocation(line: 1966, column: 8, scope: !12603)
!12606 = !DILocalVariable(name: "fade", scope: !12607, file: !3, line: 1967, type: !3072)
!12607 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 1966, column: 41)
!12608 = !DILocation(line: 1967, column: 17, scope: !12607)
!12609 = !DILocation(line: 1967, column: 24, scope: !12607)
!12610 = !DILocation(line: 1967, column: 49, scope: !12607)
!12611 = !DILocation(line: 1967, column: 53, scope: !12607)
!12612 = !DILocation(line: 1967, column: 63, scope: !12607)
!12613 = !DILocation(line: 1967, column: 72, scope: !12607)
!12614 = !DILocation(line: 1968, column: 52, scope: !12607)
!12615 = !DILocation(line: 1968, column: 59, scope: !12607)
!12616 = !DILocation(line: 1968, column: 67, scope: !12607)
!12617 = !DILocation(line: 1968, column: 64, scope: !12607)
!12618 = !DILocation(line: 1968, column: 78, scope: !12607)
!12619 = !DILocation(line: 1968, column: 74, scope: !12607)
!12620 = !DILocation(line: 1967, column: 36, scope: !12607)
!12621 = !DILocation(line: 1967, column: 34, scope: !12607)
!12622 = !DILocation(line: 1970, column: 17, scope: !12607)
!12623 = !DILocation(line: 1970, column: 26, scope: !12607)
!12624 = !DILocation(line: 1970, column: 30, scope: !12607)
!12625 = !DILocation(line: 1970, column: 42, scope: !12607)
!12626 = !DILocation(line: 1970, column: 5, scope: !12607)
!12627 = !DILocation(line: 1972, column: 12, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 1972, column: 9)
!12629 = !DILocation(line: 1972, column: 9, scope: !12628)
!12630 = !DILocation(line: 1972, column: 9, scope: !12607)
!12631 = !DILocation(line: 1973, column: 9, scope: !12628)
!12632 = !DILocation(line: 1973, column: 16, scope: !12628)
!12633 = !DILocation(line: 1973, column: 21, scope: !12628)
!12634 = !DILocation(line: 1973, column: 6, scope: !12628)
!12635 = !DILocation(line: 1974, column: 4, scope: !12607)
!12636 = !DILocation(line: 1976, column: 3, scope: !12573)
!12637 = distinct !{!12637, !12566, !12638}
!12638 = !DILocation(line: 1976, column: 3, scope: !12567)
!12639 = !DILocation(line: 1976, column: 3, scope: !12568)
!12640 = distinct !{!12640, !12562, !12641}
!12641 = !DILocation(line: 1976, column: 3, scope: !12563)
!12642 = !DILocation(line: 1976, column: 3, scope: !12554)
!12643 = distinct !{!12643, !12548, !12644}
!12644 = !DILocation(line: 1976, column: 3, scope: !12549)
!12645 = !DILocation(line: 1977, column: 2, scope: !12532)
!12646 = !DILocation(line: 1955, column: 28, scope: !12527)
!12647 = !DILocation(line: 1955, column: 2, scope: !12527)
!12648 = distinct !{!12648, !12530, !12649}
!12649 = !DILocation(line: 1977, column: 2, scope: !12524)
!12650 = !DILocation(line: 1978, column: 1, scope: !12455)
!12651 = distinct !DISubprogram(name: "do_nudge_brush", scope: !3, file: !3, line: 1888, type: !4, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!12652 = !DILocalVariable(name: "sd", arg: 1, scope: !12651, file: !3, line: 1888, type: !6)
!12653 = !DILocation(line: 1888, column: 36, scope: !12651)
!12654 = !DILocalVariable(name: "ob", arg: 2, scope: !12651, file: !3, line: 1888, type: !3739)
!12655 = !DILocation(line: 1888, column: 48, scope: !12651)
!12656 = !DILocalVariable(name: "nodes", arg: 3, scope: !12651, file: !3, line: 1888, type: !3741)
!12657 = !DILocation(line: 1888, column: 63, scope: !12651)
!12658 = !DILocalVariable(name: "totnode", arg: 4, scope: !12651, file: !3, line: 1888, type: !57)
!12659 = !DILocation(line: 1888, column: 74, scope: !12651)
!12660 = !DILocalVariable(name: "ss", scope: !12651, file: !3, line: 1890, type: !5374)
!12661 = !DILocation(line: 1890, column: 17, scope: !12651)
!12662 = !DILocation(line: 1890, column: 22, scope: !12651)
!12663 = !DILocation(line: 1890, column: 26, scope: !12651)
!12664 = !DILocalVariable(name: "brush", scope: !12651, file: !3, line: 1891, type: !2749)
!12665 = !DILocation(line: 1891, column: 9, scope: !12651)
!12666 = !DILocation(line: 1891, column: 34, scope: !12651)
!12667 = !DILocation(line: 1891, column: 38, scope: !12651)
!12668 = !DILocation(line: 1891, column: 17, scope: !12651)
!12669 = !DILocalVariable(name: "bstrength", scope: !12651, file: !3, line: 1892, type: !153)
!12670 = !DILocation(line: 1892, column: 8, scope: !12651)
!12671 = !DILocation(line: 1892, column: 20, scope: !12651)
!12672 = !DILocation(line: 1892, column: 24, scope: !12651)
!12673 = !DILocation(line: 1892, column: 31, scope: !12651)
!12674 = !DILocalVariable(name: "grab_delta", scope: !12651, file: !3, line: 1893, type: !233)
!12675 = !DILocation(line: 1893, column: 8, scope: !12651)
!12676 = !DILocalVariable(name: "tmp", scope: !12651, file: !3, line: 1894, type: !233)
!12677 = !DILocation(line: 1894, column: 8, scope: !12651)
!12678 = !DILocalVariable(name: "cono", scope: !12651, file: !3, line: 1894, type: !233)
!12679 = !DILocation(line: 1894, column: 16, scope: !12651)
!12680 = !DILocalVariable(name: "n", scope: !12651, file: !3, line: 1895, type: !57)
!12681 = !DILocation(line: 1895, column: 6, scope: !12651)
!12682 = !DILocation(line: 1897, column: 13, scope: !12651)
!12683 = !DILocation(line: 1897, column: 25, scope: !12651)
!12684 = !DILocation(line: 1897, column: 29, scope: !12651)
!12685 = !DILocation(line: 1897, column: 36, scope: !12651)
!12686 = !DILocation(line: 1897, column: 2, scope: !12651)
!12687 = !DILocation(line: 1899, column: 16, scope: !12651)
!12688 = !DILocation(line: 1899, column: 21, scope: !12651)
!12689 = !DILocation(line: 1899, column: 25, scope: !12651)
!12690 = !DILocation(line: 1899, column: 32, scope: !12651)
!12691 = !DILocation(line: 1899, column: 52, scope: !12651)
!12692 = !DILocation(line: 1899, column: 2, scope: !12651)
!12693 = !DILocation(line: 1900, column: 16, scope: !12651)
!12694 = !DILocation(line: 1900, column: 22, scope: !12651)
!12695 = !DILocation(line: 1900, column: 27, scope: !12651)
!12696 = !DILocation(line: 1900, column: 31, scope: !12651)
!12697 = !DILocation(line: 1900, column: 38, scope: !12651)
!12698 = !DILocation(line: 1900, column: 2, scope: !12651)
!12699 = !DILocation(line: 1905, column: 9, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12651, file: !3, line: 1905, column: 2)
!12701 = !DILocation(line: 1905, column: 7, scope: !12700)
!12702 = !DILocation(line: 1905, column: 14, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 1905, column: 2)
!12704 = !DILocation(line: 1905, column: 18, scope: !12703)
!12705 = !DILocation(line: 1905, column: 16, scope: !12703)
!12706 = !DILocation(line: 1905, column: 2, scope: !12700)
!12707 = !DILocalVariable(name: "vd", scope: !12708, file: !3, line: 1906, type: !9184)
!12708 = distinct !DILexicalBlock(scope: !12703, file: !3, line: 1905, column: 32)
!12709 = !DILocation(line: 1906, column: 18, scope: !12708)
!12710 = !DILocalVariable(name: "test", scope: !12708, file: !3, line: 1907, type: !11350)
!12711 = !DILocation(line: 1907, column: 19, scope: !12708)
!12712 = !DILocalVariable(name: "proxy", scope: !12708, file: !3, line: 1908, type: !2054)
!12713 = !DILocation(line: 1908, column: 11, scope: !12708)
!12714 = !DILocation(line: 1910, column: 35, scope: !12708)
!12715 = !DILocation(line: 1910, column: 39, scope: !12708)
!12716 = !DILocation(line: 1910, column: 45, scope: !12708)
!12717 = !DILocation(line: 1910, column: 51, scope: !12708)
!12718 = !DILocation(line: 1910, column: 11, scope: !12708)
!12719 = !DILocation(line: 1910, column: 56, scope: !12708)
!12720 = !DILocation(line: 1910, column: 9, scope: !12708)
!12721 = !DILocation(line: 1912, column: 26, scope: !12708)
!12722 = !DILocation(line: 1912, column: 3, scope: !12708)
!12723 = !DILocation(line: 1914, column: 3, scope: !12708)
!12724 = !DILocation(line: 1914, column: 3, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12708, file: !3, line: 1914, column: 3)
!12726 = !DILocation(line: 1914, column: 3, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 1914, column: 3)
!12728 = !DILocation(line: 1914, column: 3, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 1914, column: 3)
!12730 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 1914, column: 3)
!12731 = !DILocation(line: 1914, column: 3, scope: !12730)
!12732 = !DILocation(line: 1914, column: 3, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 1914, column: 3)
!12734 = !DILocation(line: 1914, column: 3, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 1914, column: 3)
!12736 = !DILocation(line: 1914, column: 3, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 1914, column: 3)
!12738 = !DILocation(line: 1914, column: 3, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 1914, column: 3)
!12740 = !DILocation(line: 1914, column: 3, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 1914, column: 3)
!12742 = !DILocation(line: 1914, column: 3, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 1914, column: 3)
!12744 = distinct !DILexicalBlock(scope: !12741, file: !3, line: 1914, column: 3)
!12745 = !DILocation(line: 1914, column: 3, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12743, file: !3, line: 1914, column: 3)
!12747 = !DILocation(line: 1914, column: 3, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 1914, column: 3)
!12749 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 1914, column: 3)
!12750 = !DILocation(line: 1914, column: 3, scope: !12749)
!12751 = !DILocation(line: 1914, column: 3, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !3, line: 1914, column: 3)
!12753 = !DILocation(line: 1914, column: 3, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 1914, column: 3)
!12755 = !DILocation(line: 1914, column: 3, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 1914, column: 3)
!12757 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 1914, column: 3)
!12758 = !DILocation(line: 1914, column: 3, scope: !12757)
!12759 = !DILocation(line: 1914, column: 3, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12748, file: !3, line: 1914, column: 3)
!12761 = !DILocation(line: 1914, column: 3, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 1914, column: 3)
!12763 = !DILocation(line: 1914, column: 3, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 1914, column: 3)
!12765 = !DILocation(line: 1914, column: 3, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 1914, column: 3)
!12767 = !DILocation(line: 1914, column: 3, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 1914, column: 3)
!12769 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 1914, column: 3)
!12770 = !DILocation(line: 1914, column: 3, scope: !12769)
!12771 = !DILocation(line: 1914, column: 3, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 1914, column: 3)
!12773 = !DILocation(line: 1914, column: 3, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 1914, column: 3)
!12775 = !DILocation(line: 1914, column: 3, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 1914, column: 3)
!12777 = !DILocation(line: 1916, column: 36, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12779, file: !3, line: 1916, column: 8)
!12779 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 1915, column: 3)
!12780 = !DILocation(line: 1916, column: 8, scope: !12778)
!12781 = !DILocation(line: 1916, column: 8, scope: !12779)
!12782 = !DILocalVariable(name: "fade", scope: !12783, file: !3, line: 1917, type: !3072)
!12783 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 1916, column: 41)
!12784 = !DILocation(line: 1917, column: 17, scope: !12783)
!12785 = !DILocation(line: 1917, column: 24, scope: !12783)
!12786 = !DILocation(line: 1917, column: 49, scope: !12783)
!12787 = !DILocation(line: 1917, column: 53, scope: !12783)
!12788 = !DILocation(line: 1917, column: 63, scope: !12783)
!12789 = !DILocation(line: 1917, column: 72, scope: !12783)
!12790 = !DILocation(line: 1918, column: 52, scope: !12783)
!12791 = !DILocation(line: 1918, column: 59, scope: !12783)
!12792 = !DILocation(line: 1918, column: 67, scope: !12783)
!12793 = !DILocation(line: 1918, column: 64, scope: !12783)
!12794 = !DILocation(line: 1918, column: 78, scope: !12783)
!12795 = !DILocation(line: 1918, column: 74, scope: !12783)
!12796 = !DILocation(line: 1917, column: 36, scope: !12783)
!12797 = !DILocation(line: 1917, column: 34, scope: !12783)
!12798 = !DILocation(line: 1920, column: 17, scope: !12783)
!12799 = !DILocation(line: 1920, column: 26, scope: !12783)
!12800 = !DILocation(line: 1920, column: 30, scope: !12783)
!12801 = !DILocation(line: 1920, column: 36, scope: !12783)
!12802 = !DILocation(line: 1920, column: 5, scope: !12783)
!12803 = !DILocation(line: 1922, column: 12, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 1922, column: 9)
!12805 = !DILocation(line: 1922, column: 9, scope: !12804)
!12806 = !DILocation(line: 1922, column: 9, scope: !12783)
!12807 = !DILocation(line: 1923, column: 9, scope: !12804)
!12808 = !DILocation(line: 1923, column: 16, scope: !12804)
!12809 = !DILocation(line: 1923, column: 21, scope: !12804)
!12810 = !DILocation(line: 1923, column: 6, scope: !12804)
!12811 = !DILocation(line: 1924, column: 4, scope: !12783)
!12812 = !DILocation(line: 1926, column: 3, scope: !12749)
!12813 = distinct !{!12813, !12742, !12814}
!12814 = !DILocation(line: 1926, column: 3, scope: !12743)
!12815 = !DILocation(line: 1926, column: 3, scope: !12744)
!12816 = distinct !{!12816, !12738, !12817}
!12817 = !DILocation(line: 1926, column: 3, scope: !12739)
!12818 = !DILocation(line: 1926, column: 3, scope: !12730)
!12819 = distinct !{!12819, !12724, !12820}
!12820 = !DILocation(line: 1926, column: 3, scope: !12725)
!12821 = !DILocation(line: 1927, column: 2, scope: !12708)
!12822 = !DILocation(line: 1905, column: 28, scope: !12703)
!12823 = !DILocation(line: 1905, column: 2, scope: !12703)
!12824 = distinct !{!12824, !12706, !12825}
!12825 = !DILocation(line: 1927, column: 2, scope: !12700)
!12826 = !DILocation(line: 1928, column: 1, scope: !12651)
!12827 = distinct !DISubprogram(name: "do_thumb_brush", scope: !3, file: !3, line: 1980, type: !4, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!12828 = !DILocalVariable(name: "sd", arg: 1, scope: !12827, file: !3, line: 1980, type: !6)
!12829 = !DILocation(line: 1980, column: 36, scope: !12827)
!12830 = !DILocalVariable(name: "ob", arg: 2, scope: !12827, file: !3, line: 1980, type: !3739)
!12831 = !DILocation(line: 1980, column: 48, scope: !12827)
!12832 = !DILocalVariable(name: "nodes", arg: 3, scope: !12827, file: !3, line: 1980, type: !3741)
!12833 = !DILocation(line: 1980, column: 63, scope: !12827)
!12834 = !DILocalVariable(name: "totnode", arg: 4, scope: !12827, file: !3, line: 1980, type: !57)
!12835 = !DILocation(line: 1980, column: 74, scope: !12827)
!12836 = !DILocalVariable(name: "ss", scope: !12827, file: !3, line: 1982, type: !5374)
!12837 = !DILocation(line: 1982, column: 17, scope: !12827)
!12838 = !DILocation(line: 1982, column: 22, scope: !12827)
!12839 = !DILocation(line: 1982, column: 26, scope: !12827)
!12840 = !DILocalVariable(name: "brush", scope: !12827, file: !3, line: 1983, type: !2749)
!12841 = !DILocation(line: 1983, column: 9, scope: !12827)
!12842 = !DILocation(line: 1983, column: 34, scope: !12827)
!12843 = !DILocation(line: 1983, column: 38, scope: !12827)
!12844 = !DILocation(line: 1983, column: 17, scope: !12827)
!12845 = !DILocalVariable(name: "bstrength", scope: !12827, file: !3, line: 1984, type: !153)
!12846 = !DILocation(line: 1984, column: 8, scope: !12827)
!12847 = !DILocation(line: 1984, column: 20, scope: !12827)
!12848 = !DILocation(line: 1984, column: 24, scope: !12827)
!12849 = !DILocation(line: 1984, column: 31, scope: !12827)
!12850 = !DILocalVariable(name: "grab_delta", scope: !12827, file: !3, line: 1985, type: !233)
!12851 = !DILocation(line: 1985, column: 8, scope: !12827)
!12852 = !DILocalVariable(name: "tmp", scope: !12827, file: !3, line: 1986, type: !233)
!12853 = !DILocation(line: 1986, column: 8, scope: !12827)
!12854 = !DILocalVariable(name: "cono", scope: !12827, file: !3, line: 1986, type: !233)
!12855 = !DILocation(line: 1986, column: 16, scope: !12827)
!12856 = !DILocalVariable(name: "n", scope: !12827, file: !3, line: 1987, type: !57)
!12857 = !DILocation(line: 1987, column: 6, scope: !12827)
!12858 = !DILocation(line: 1989, column: 13, scope: !12827)
!12859 = !DILocation(line: 1989, column: 25, scope: !12827)
!12860 = !DILocation(line: 1989, column: 29, scope: !12827)
!12861 = !DILocation(line: 1989, column: 36, scope: !12827)
!12862 = !DILocation(line: 1989, column: 2, scope: !12827)
!12863 = !DILocation(line: 1991, column: 16, scope: !12827)
!12864 = !DILocation(line: 1991, column: 21, scope: !12827)
!12865 = !DILocation(line: 1991, column: 25, scope: !12827)
!12866 = !DILocation(line: 1991, column: 32, scope: !12827)
!12867 = !DILocation(line: 1991, column: 52, scope: !12827)
!12868 = !DILocation(line: 1991, column: 2, scope: !12827)
!12869 = !DILocation(line: 1992, column: 16, scope: !12827)
!12870 = !DILocation(line: 1992, column: 22, scope: !12827)
!12871 = !DILocation(line: 1992, column: 27, scope: !12827)
!12872 = !DILocation(line: 1992, column: 31, scope: !12827)
!12873 = !DILocation(line: 1992, column: 38, scope: !12827)
!12874 = !DILocation(line: 1992, column: 2, scope: !12827)
!12875 = !DILocation(line: 1997, column: 9, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 1997, column: 2)
!12877 = !DILocation(line: 1997, column: 7, scope: !12876)
!12878 = !DILocation(line: 1997, column: 14, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 1997, column: 2)
!12880 = !DILocation(line: 1997, column: 18, scope: !12879)
!12881 = !DILocation(line: 1997, column: 16, scope: !12879)
!12882 = !DILocation(line: 1997, column: 2, scope: !12876)
!12883 = !DILocalVariable(name: "vd", scope: !12884, file: !3, line: 1998, type: !9184)
!12884 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 1997, column: 32)
!12885 = !DILocation(line: 1998, column: 18, scope: !12884)
!12886 = !DILocalVariable(name: "test", scope: !12884, file: !3, line: 1999, type: !11350)
!12887 = !DILocation(line: 1999, column: 19, scope: !12884)
!12888 = !DILocalVariable(name: "orig_data", scope: !12884, file: !3, line: 2000, type: !9995)
!12889 = !DILocation(line: 2000, column: 22, scope: !12884)
!12890 = !DILocalVariable(name: "proxy", scope: !12884, file: !3, line: 2001, type: !2054)
!12891 = !DILocation(line: 2001, column: 11, scope: !12884)
!12892 = !DILocation(line: 2003, column: 42, scope: !12884)
!12893 = !DILocation(line: 2003, column: 46, scope: !12884)
!12894 = !DILocation(line: 2003, column: 52, scope: !12884)
!12895 = !DILocation(line: 2003, column: 3, scope: !12884)
!12896 = !DILocation(line: 2005, column: 35, scope: !12884)
!12897 = !DILocation(line: 2005, column: 39, scope: !12884)
!12898 = !DILocation(line: 2005, column: 45, scope: !12884)
!12899 = !DILocation(line: 2005, column: 51, scope: !12884)
!12900 = !DILocation(line: 2005, column: 11, scope: !12884)
!12901 = !DILocation(line: 2005, column: 56, scope: !12884)
!12902 = !DILocation(line: 2005, column: 9, scope: !12884)
!12903 = !DILocation(line: 2007, column: 26, scope: !12884)
!12904 = !DILocation(line: 2007, column: 3, scope: !12884)
!12905 = !DILocation(line: 2009, column: 3, scope: !12884)
!12906 = !DILocation(line: 2009, column: 3, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12884, file: !3, line: 2009, column: 3)
!12908 = !DILocation(line: 2009, column: 3, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 2009, column: 3)
!12910 = !DILocation(line: 2009, column: 3, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2009, column: 3)
!12912 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 2009, column: 3)
!12913 = !DILocation(line: 2009, column: 3, scope: !12912)
!12914 = !DILocation(line: 2009, column: 3, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12911, file: !3, line: 2009, column: 3)
!12916 = !DILocation(line: 2009, column: 3, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 2009, column: 3)
!12918 = !DILocation(line: 2009, column: 3, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12911, file: !3, line: 2009, column: 3)
!12920 = !DILocation(line: 2009, column: 3, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2009, column: 3)
!12922 = !DILocation(line: 2009, column: 3, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2009, column: 3)
!12924 = !DILocation(line: 2009, column: 3, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 2009, column: 3)
!12926 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 2009, column: 3)
!12927 = !DILocation(line: 2009, column: 3, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2009, column: 3)
!12929 = !DILocation(line: 2009, column: 3, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 2009, column: 3)
!12931 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 2009, column: 3)
!12932 = !DILocation(line: 2009, column: 3, scope: !12931)
!12933 = !DILocation(line: 2009, column: 3, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 2009, column: 3)
!12935 = !DILocation(line: 2009, column: 3, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 2009, column: 3)
!12937 = !DILocation(line: 2009, column: 3, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 2009, column: 3)
!12939 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 2009, column: 3)
!12940 = !DILocation(line: 2009, column: 3, scope: !12939)
!12941 = !DILocation(line: 2009, column: 3, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 2009, column: 3)
!12943 = !DILocation(line: 2009, column: 3, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 2009, column: 3)
!12945 = !DILocation(line: 2009, column: 3, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 2009, column: 3)
!12947 = !DILocation(line: 2009, column: 3, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 2009, column: 3)
!12949 = !DILocation(line: 2009, column: 3, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 2009, column: 3)
!12951 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 2009, column: 3)
!12952 = !DILocation(line: 2009, column: 3, scope: !12951)
!12953 = !DILocation(line: 2009, column: 3, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 2009, column: 3)
!12955 = !DILocation(line: 2009, column: 3, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 2009, column: 3)
!12957 = !DILocation(line: 2009, column: 3, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 2009, column: 3)
!12959 = !DILocation(line: 2011, column: 4, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 2010, column: 3)
!12961 = !DILocation(line: 2013, column: 43, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 2013, column: 8)
!12963 = !DILocation(line: 2013, column: 8, scope: !12962)
!12964 = !DILocation(line: 2013, column: 8, scope: !12960)
!12965 = !DILocalVariable(name: "fade", scope: !12966, file: !3, line: 2014, type: !3072)
!12966 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 2013, column: 48)
!12967 = !DILocation(line: 2014, column: 17, scope: !12966)
!12968 = !DILocation(line: 2014, column: 24, scope: !12966)
!12969 = !DILocation(line: 2014, column: 49, scope: !12966)
!12970 = !DILocation(line: 2014, column: 53, scope: !12966)
!12971 = !DILocation(line: 2015, column: 59, scope: !12966)
!12972 = !DILocation(line: 2016, column: 54, scope: !12966)
!12973 = !DILocation(line: 2017, column: 59, scope: !12966)
!12974 = !DILocation(line: 2018, column: 58, scope: !12966)
!12975 = !DILocation(line: 2018, column: 55, scope: !12966)
!12976 = !DILocation(line: 2018, column: 69, scope: !12966)
!12977 = !DILocation(line: 2018, column: 65, scope: !12966)
!12978 = !DILocation(line: 2014, column: 36, scope: !12966)
!12979 = !DILocation(line: 2014, column: 34, scope: !12966)
!12980 = !DILocation(line: 2020, column: 17, scope: !12966)
!12981 = !DILocation(line: 2020, column: 26, scope: !12966)
!12982 = !DILocation(line: 2020, column: 30, scope: !12966)
!12983 = !DILocation(line: 2020, column: 36, scope: !12966)
!12984 = !DILocation(line: 2020, column: 5, scope: !12966)
!12985 = !DILocation(line: 2022, column: 12, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12966, file: !3, line: 2022, column: 9)
!12987 = !DILocation(line: 2022, column: 9, scope: !12986)
!12988 = !DILocation(line: 2022, column: 9, scope: !12966)
!12989 = !DILocation(line: 2023, column: 9, scope: !12986)
!12990 = !DILocation(line: 2023, column: 16, scope: !12986)
!12991 = !DILocation(line: 2023, column: 21, scope: !12986)
!12992 = !DILocation(line: 2023, column: 6, scope: !12986)
!12993 = !DILocation(line: 2024, column: 4, scope: !12966)
!12994 = !DILocation(line: 2026, column: 3, scope: !12931)
!12995 = distinct !{!12995, !12924, !12996}
!12996 = !DILocation(line: 2026, column: 3, scope: !12925)
!12997 = !DILocation(line: 2026, column: 3, scope: !12926)
!12998 = distinct !{!12998, !12920, !12999}
!12999 = !DILocation(line: 2026, column: 3, scope: !12921)
!13000 = !DILocation(line: 2026, column: 3, scope: !12912)
!13001 = distinct !{!13001, !12906, !13002}
!13002 = !DILocation(line: 2026, column: 3, scope: !12907)
!13003 = !DILocation(line: 2027, column: 2, scope: !12884)
!13004 = !DILocation(line: 1997, column: 28, scope: !12879)
!13005 = !DILocation(line: 1997, column: 2, scope: !12879)
!13006 = distinct !{!13006, !12882, !13007}
!13007 = !DILocation(line: 2027, column: 2, scope: !12876)
!13008 = !DILocation(line: 2028, column: 1, scope: !12827)
!13009 = distinct !DISubprogram(name: "do_layer_brush", scope: !3, file: !3, line: 2080, type: !4, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!13010 = !DILocalVariable(name: "sd", arg: 1, scope: !13009, file: !3, line: 2080, type: !6)
!13011 = !DILocation(line: 2080, column: 36, scope: !13009)
!13012 = !DILocalVariable(name: "ob", arg: 2, scope: !13009, file: !3, line: 2080, type: !3739)
!13013 = !DILocation(line: 2080, column: 48, scope: !13009)
!13014 = !DILocalVariable(name: "nodes", arg: 3, scope: !13009, file: !3, line: 2080, type: !3741)
!13015 = !DILocation(line: 2080, column: 63, scope: !13009)
!13016 = !DILocalVariable(name: "totnode", arg: 4, scope: !13009, file: !3, line: 2080, type: !57)
!13017 = !DILocation(line: 2080, column: 74, scope: !13009)
!13018 = !DILocalVariable(name: "ss", scope: !13009, file: !3, line: 2082, type: !5374)
!13019 = !DILocation(line: 2082, column: 17, scope: !13009)
!13020 = !DILocation(line: 2082, column: 22, scope: !13009)
!13021 = !DILocation(line: 2082, column: 26, scope: !13009)
!13022 = !DILocalVariable(name: "brush", scope: !13009, file: !3, line: 2083, type: !2749)
!13023 = !DILocation(line: 2083, column: 9, scope: !13009)
!13024 = !DILocation(line: 2083, column: 34, scope: !13009)
!13025 = !DILocation(line: 2083, column: 38, scope: !13009)
!13026 = !DILocation(line: 2083, column: 17, scope: !13009)
!13027 = !DILocalVariable(name: "bstrength", scope: !13009, file: !3, line: 2084, type: !153)
!13028 = !DILocation(line: 2084, column: 8, scope: !13009)
!13029 = !DILocation(line: 2084, column: 20, scope: !13009)
!13030 = !DILocation(line: 2084, column: 24, scope: !13009)
!13031 = !DILocation(line: 2084, column: 31, scope: !13009)
!13032 = !DILocalVariable(name: "offset", scope: !13009, file: !3, line: 2085, type: !233)
!13033 = !DILocation(line: 2085, column: 8, scope: !13009)
!13034 = !DILocalVariable(name: "lim", scope: !13009, file: !3, line: 2086, type: !153)
!13035 = !DILocation(line: 2086, column: 8, scope: !13009)
!13036 = !DILocation(line: 2086, column: 14, scope: !13009)
!13037 = !DILocation(line: 2086, column: 21, scope: !13009)
!13038 = !DILocalVariable(name: "n", scope: !13009, file: !3, line: 2087, type: !57)
!13039 = !DILocation(line: 2087, column: 6, scope: !13009)
!13040 = !DILocation(line: 2089, column: 6, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 2089, column: 6)
!13042 = !DILocation(line: 2089, column: 16, scope: !13041)
!13043 = !DILocation(line: 2089, column: 6, scope: !13009)
!13044 = !DILocation(line: 2090, column: 10, scope: !13041)
!13045 = !DILocation(line: 2090, column: 9, scope: !13041)
!13046 = !DILocation(line: 2090, column: 7, scope: !13041)
!13047 = !DILocation(line: 2090, column: 3, scope: !13041)
!13048 = !DILocation(line: 2092, column: 14, scope: !13009)
!13049 = !DILocation(line: 2092, column: 22, scope: !13009)
!13050 = !DILocation(line: 2092, column: 26, scope: !13009)
!13051 = !DILocation(line: 2092, column: 33, scope: !13009)
!13052 = !DILocation(line: 2092, column: 40, scope: !13009)
!13053 = !DILocation(line: 2092, column: 44, scope: !13009)
!13054 = !DILocation(line: 2092, column: 51, scope: !13009)
!13055 = !DILocation(line: 2092, column: 2, scope: !13009)
!13056 = !DILocation(line: 2097, column: 9, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 2097, column: 2)
!13058 = !DILocation(line: 2097, column: 7, scope: !13057)
!13059 = !DILocation(line: 2097, column: 14, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 2097, column: 2)
!13061 = !DILocation(line: 2097, column: 18, scope: !13060)
!13062 = !DILocation(line: 2097, column: 16, scope: !13060)
!13063 = !DILocation(line: 2097, column: 2, scope: !13057)
!13064 = !DILocalVariable(name: "vd", scope: !13065, file: !3, line: 2098, type: !9184)
!13065 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 2097, column: 32)
!13066 = !DILocation(line: 2098, column: 18, scope: !13065)
!13067 = !DILocalVariable(name: "test", scope: !13065, file: !3, line: 2099, type: !11350)
!13068 = !DILocation(line: 2099, column: 19, scope: !13065)
!13069 = !DILocalVariable(name: "orig_data", scope: !13065, file: !3, line: 2100, type: !9995)
!13070 = !DILocation(line: 2100, column: 22, scope: !13065)
!13071 = !DILocalVariable(name: "layer_disp", scope: !13065, file: !3, line: 2101, type: !359)
!13072 = !DILocation(line: 2101, column: 10, scope: !13065)
!13073 = !DILocation(line: 2105, column: 42, scope: !13065)
!13074 = !DILocation(line: 2105, column: 46, scope: !13065)
!13075 = !DILocation(line: 2105, column: 52, scope: !13065)
!13076 = !DILocation(line: 2105, column: 3, scope: !13065)
!13077 = !DILocation(line: 2111, column: 46, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 2110, column: 3)
!13079 = !DILocation(line: 2111, column: 50, scope: !13078)
!13080 = !DILocation(line: 2111, column: 56, scope: !13078)
!13081 = !DILocation(line: 2111, column: 62, scope: !13078)
!13082 = !DILocation(line: 2111, column: 17, scope: !13078)
!13083 = !DILocation(line: 2111, column: 15, scope: !13078)
!13084 = !DILocation(line: 2114, column: 26, scope: !13065)
!13085 = !DILocation(line: 2114, column: 3, scope: !13065)
!13086 = !DILocation(line: 2116, column: 3, scope: !13065)
!13087 = !DILocation(line: 2116, column: 3, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 2116, column: 3)
!13089 = !DILocation(line: 2116, column: 3, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 2116, column: 3)
!13091 = !DILocation(line: 2116, column: 3, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 2116, column: 3)
!13093 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 2116, column: 3)
!13094 = !DILocation(line: 2116, column: 3, scope: !13093)
!13095 = !DILocation(line: 2116, column: 3, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 2116, column: 3)
!13097 = !DILocation(line: 2116, column: 3, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 2116, column: 3)
!13099 = !DILocation(line: 2116, column: 3, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 2116, column: 3)
!13101 = !DILocation(line: 2116, column: 3, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 2116, column: 3)
!13103 = !DILocation(line: 2116, column: 3, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 2116, column: 3)
!13105 = !DILocation(line: 2116, column: 3, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 2116, column: 3)
!13107 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 2116, column: 3)
!13108 = !DILocation(line: 2116, column: 3, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13106, file: !3, line: 2116, column: 3)
!13110 = !DILocation(line: 2116, column: 3, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2116, column: 3)
!13112 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 2116, column: 3)
!13113 = !DILocation(line: 2116, column: 3, scope: !13112)
!13114 = !DILocation(line: 2116, column: 3, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 2116, column: 3)
!13116 = !DILocation(line: 2116, column: 3, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13115, file: !3, line: 2116, column: 3)
!13118 = !DILocation(line: 2116, column: 3, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 2116, column: 3)
!13120 = distinct !DILexicalBlock(scope: !13117, file: !3, line: 2116, column: 3)
!13121 = !DILocation(line: 2116, column: 3, scope: !13120)
!13122 = !DILocation(line: 2116, column: 3, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 2116, column: 3)
!13124 = !DILocation(line: 2116, column: 3, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2116, column: 3)
!13126 = !DILocation(line: 2116, column: 3, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 2116, column: 3)
!13128 = !DILocation(line: 2116, column: 3, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13125, file: !3, line: 2116, column: 3)
!13130 = !DILocation(line: 2116, column: 3, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 2116, column: 3)
!13132 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2116, column: 3)
!13133 = !DILocation(line: 2116, column: 3, scope: !13132)
!13134 = !DILocation(line: 2116, column: 3, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 2116, column: 3)
!13136 = !DILocation(line: 2116, column: 3, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 2116, column: 3)
!13138 = !DILocation(line: 2116, column: 3, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 2116, column: 3)
!13140 = !DILocation(line: 2118, column: 4, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2117, column: 3)
!13142 = !DILocation(line: 2120, column: 43, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2120, column: 8)
!13144 = !DILocation(line: 2120, column: 8, scope: !13143)
!13145 = !DILocation(line: 2120, column: 8, scope: !13141)
!13146 = !DILocalVariable(name: "fade", scope: !13147, file: !3, line: 2121, type: !3072)
!13147 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 2120, column: 48)
!13148 = !DILocation(line: 2121, column: 17, scope: !13147)
!13149 = !DILocation(line: 2121, column: 24, scope: !13147)
!13150 = !DILocation(line: 2121, column: 49, scope: !13147)
!13151 = !DILocation(line: 2121, column: 53, scope: !13147)
!13152 = !DILocation(line: 2121, column: 63, scope: !13147)
!13153 = !DILocation(line: 2121, column: 72, scope: !13147)
!13154 = !DILocation(line: 2122, column: 52, scope: !13147)
!13155 = !DILocation(line: 2122, column: 59, scope: !13147)
!13156 = !DILocation(line: 2122, column: 67, scope: !13147)
!13157 = !DILocation(line: 2122, column: 64, scope: !13147)
!13158 = !DILocation(line: 2122, column: 78, scope: !13147)
!13159 = !DILocation(line: 2122, column: 74, scope: !13147)
!13160 = !DILocation(line: 2121, column: 36, scope: !13147)
!13161 = !DILocation(line: 2121, column: 34, scope: !13147)
!13162 = !DILocalVariable(name: "disp", scope: !13147, file: !3, line: 2123, type: !359)
!13163 = !DILocation(line: 2123, column: 12, scope: !13147)
!13164 = !DILocation(line: 2123, column: 20, scope: !13147)
!13165 = !DILocation(line: 2123, column: 34, scope: !13147)
!13166 = !DILocalVariable(name: "val", scope: !13147, file: !3, line: 2124, type: !233)
!13167 = !DILocation(line: 2124, column: 11, scope: !13147)
!13168 = !DILocation(line: 2126, column: 14, scope: !13147)
!13169 = !DILocation(line: 2126, column: 6, scope: !13147)
!13170 = !DILocation(line: 2126, column: 11, scope: !13147)
!13171 = !DILocation(line: 2129, column: 10, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 2129, column: 9)
!13173 = !DILocation(line: 2129, column: 14, scope: !13172)
!13174 = !DILocation(line: 2129, column: 18, scope: !13172)
!13175 = !DILocation(line: 2129, column: 22, scope: !13172)
!13176 = !DILocation(line: 2129, column: 21, scope: !13172)
!13177 = !DILocation(line: 2129, column: 29, scope: !13172)
!13178 = !DILocation(line: 2129, column: 27, scope: !13172)
!13179 = !DILocation(line: 2129, column: 34, scope: !13172)
!13180 = !DILocation(line: 2129, column: 38, scope: !13172)
!13181 = !DILocation(line: 2129, column: 42, scope: !13172)
!13182 = !DILocation(line: 2129, column: 47, scope: !13172)
!13183 = !DILocation(line: 2129, column: 51, scope: !13172)
!13184 = !DILocation(line: 2129, column: 50, scope: !13172)
!13185 = !DILocation(line: 2129, column: 58, scope: !13172)
!13186 = !DILocation(line: 2129, column: 56, scope: !13172)
!13187 = !DILocation(line: 2129, column: 9, scope: !13147)
!13188 = !DILocation(line: 2130, column: 14, scope: !13172)
!13189 = !DILocation(line: 2130, column: 7, scope: !13172)
!13190 = !DILocation(line: 2130, column: 12, scope: !13172)
!13191 = !DILocation(line: 2130, column: 6, scope: !13172)
!13192 = !DILocation(line: 2132, column: 17, scope: !13147)
!13193 = !DILocation(line: 2132, column: 22, scope: !13147)
!13194 = !DILocation(line: 2132, column: 31, scope: !13147)
!13195 = !DILocation(line: 2132, column: 30, scope: !13147)
!13196 = !DILocation(line: 2132, column: 5, scope: !13147)
!13197 = !DILocation(line: 2134, column: 10, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 2134, column: 9)
!13199 = !DILocation(line: 2134, column: 14, scope: !13198)
!13200 = !DILocation(line: 2134, column: 23, scope: !13198)
!13201 = !DILocation(line: 2134, column: 27, scope: !13198)
!13202 = !DILocation(line: 2134, column: 31, scope: !13198)
!13203 = !DILocation(line: 2134, column: 34, scope: !13198)
!13204 = !DILocation(line: 2134, column: 37, scope: !13198)
!13205 = !DILocation(line: 2134, column: 41, scope: !13198)
!13206 = !DILocation(line: 2134, column: 50, scope: !13198)
!13207 = !DILocation(line: 2134, column: 54, scope: !13198)
!13208 = !DILocation(line: 2134, column: 61, scope: !13198)
!13209 = !DILocation(line: 2134, column: 66, scope: !13198)
!13210 = !DILocation(line: 2134, column: 9, scope: !13147)
!13211 = !DILocalVariable(name: "index", scope: !13212, file: !3, line: 2135, type: !57)
!13212 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 2134, column: 87)
!13213 = !DILocation(line: 2135, column: 10, scope: !13212)
!13214 = !DILocation(line: 2135, column: 21, scope: !13212)
!13215 = !DILocation(line: 2135, column: 37, scope: !13212)
!13216 = !DILocation(line: 2135, column: 18, scope: !13212)
!13217 = !DILocation(line: 2138, column: 16, scope: !13212)
!13218 = !DILocation(line: 2138, column: 21, scope: !13212)
!13219 = !DILocation(line: 2138, column: 25, scope: !13212)
!13220 = !DILocation(line: 2138, column: 34, scope: !13212)
!13221 = !DILocation(line: 2138, column: 6, scope: !13212)
!13222 = !DILocation(line: 2139, column: 5, scope: !13212)
!13223 = !DILocation(line: 2141, column: 16, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 2140, column: 10)
!13225 = !DILocation(line: 2141, column: 31, scope: !13224)
!13226 = !DILocation(line: 2141, column: 6, scope: !13224)
!13227 = !DILocation(line: 2144, column: 17, scope: !13147)
!13228 = !DILocation(line: 2144, column: 21, scope: !13147)
!13229 = !DILocation(line: 2144, column: 28, scope: !13147)
!13230 = !DILocation(line: 2144, column: 32, scope: !13147)
!13231 = !DILocation(line: 2144, column: 5, scope: !13147)
!13232 = !DILocation(line: 2146, column: 12, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13147, file: !3, line: 2146, column: 9)
!13234 = !DILocation(line: 2146, column: 9, scope: !13233)
!13235 = !DILocation(line: 2146, column: 9, scope: !13147)
!13236 = !DILocation(line: 2147, column: 9, scope: !13233)
!13237 = !DILocation(line: 2147, column: 16, scope: !13233)
!13238 = !DILocation(line: 2147, column: 21, scope: !13233)
!13239 = !DILocation(line: 2147, column: 6, scope: !13233)
!13240 = !DILocation(line: 2148, column: 4, scope: !13147)
!13241 = !DILocation(line: 2150, column: 3, scope: !13112)
!13242 = distinct !{!13242, !13105, !13243}
!13243 = !DILocation(line: 2150, column: 3, scope: !13106)
!13244 = !DILocation(line: 2150, column: 3, scope: !13107)
!13245 = distinct !{!13245, !13101, !13246}
!13246 = !DILocation(line: 2150, column: 3, scope: !13102)
!13247 = !DILocation(line: 2150, column: 3, scope: !13093)
!13248 = distinct !{!13248, !13087, !13249}
!13249 = !DILocation(line: 2150, column: 3, scope: !13088)
!13250 = !DILocation(line: 2151, column: 2, scope: !13065)
!13251 = !DILocation(line: 2097, column: 28, scope: !13060)
!13252 = !DILocation(line: 2097, column: 2, scope: !13060)
!13253 = distinct !{!13253, !13063, !13254}
!13254 = !DILocation(line: 2151, column: 2, scope: !13057)
!13255 = !DILocation(line: 2152, column: 1, scope: !13009)
!13256 = distinct !DISubprogram(name: "do_flatten_brush", scope: !3, file: !3, line: 2548, type: !4, scopeLine: 2549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!13257 = !DILocalVariable(name: "sd", arg: 1, scope: !13256, file: !3, line: 2548, type: !6)
!13258 = !DILocation(line: 2548, column: 38, scope: !13256)
!13259 = !DILocalVariable(name: "ob", arg: 2, scope: !13256, file: !3, line: 2548, type: !3739)
!13260 = !DILocation(line: 2548, column: 50, scope: !13256)
!13261 = !DILocalVariable(name: "nodes", arg: 3, scope: !13256, file: !3, line: 2548, type: !3741)
!13262 = !DILocation(line: 2548, column: 65, scope: !13256)
!13263 = !DILocalVariable(name: "totnode", arg: 4, scope: !13256, file: !3, line: 2548, type: !57)
!13264 = !DILocation(line: 2548, column: 76, scope: !13256)
!13265 = !DILocalVariable(name: "ss", scope: !13256, file: !3, line: 2550, type: !5374)
!13266 = !DILocation(line: 2550, column: 17, scope: !13256)
!13267 = !DILocation(line: 2550, column: 22, scope: !13256)
!13268 = !DILocation(line: 2550, column: 26, scope: !13256)
!13269 = !DILocalVariable(name: "brush", scope: !13256, file: !3, line: 2551, type: !2749)
!13270 = !DILocation(line: 2551, column: 9, scope: !13256)
!13271 = !DILocation(line: 2551, column: 34, scope: !13256)
!13272 = !DILocation(line: 2551, column: 38, scope: !13256)
!13273 = !DILocation(line: 2551, column: 17, scope: !13256)
!13274 = !DILocalVariable(name: "bstrength", scope: !13256, file: !3, line: 2553, type: !153)
!13275 = !DILocation(line: 2553, column: 8, scope: !13256)
!13276 = !DILocation(line: 2553, column: 20, scope: !13256)
!13277 = !DILocation(line: 2553, column: 24, scope: !13256)
!13278 = !DILocation(line: 2553, column: 31, scope: !13256)
!13279 = !DILocalVariable(name: "radius", scope: !13256, file: !3, line: 2554, type: !3072)
!13280 = !DILocation(line: 2554, column: 14, scope: !13256)
!13281 = !DILocation(line: 2554, column: 23, scope: !13256)
!13282 = !DILocation(line: 2554, column: 27, scope: !13256)
!13283 = !DILocation(line: 2554, column: 34, scope: !13256)
!13284 = !DILocalVariable(name: "an", scope: !13256, file: !3, line: 2556, type: !233)
!13285 = !DILocation(line: 2556, column: 8, scope: !13256)
!13286 = !DILocalVariable(name: "fc", scope: !13256, file: !3, line: 2557, type: !233)
!13287 = !DILocation(line: 2557, column: 8, scope: !13256)
!13288 = !DILocalVariable(name: "offset", scope: !13256, file: !3, line: 2559, type: !153)
!13289 = !DILocation(line: 2559, column: 8, scope: !13256)
!13290 = !DILocation(line: 2559, column: 28, scope: !13256)
!13291 = !DILocation(line: 2559, column: 32, scope: !13256)
!13292 = !DILocation(line: 2559, column: 17, scope: !13256)
!13293 = !DILocalVariable(name: "displace", scope: !13256, file: !3, line: 2561, type: !153)
!13294 = !DILocation(line: 2561, column: 8, scope: !13256)
!13295 = !DILocalVariable(name: "n", scope: !13256, file: !3, line: 2563, type: !57)
!13296 = !DILocation(line: 2563, column: 6, scope: !13256)
!13297 = !DILocalVariable(name: "temp", scope: !13256, file: !3, line: 2565, type: !233)
!13298 = !DILocation(line: 2565, column: 8, scope: !13256)
!13299 = !DILocation(line: 2567, column: 20, scope: !13256)
!13300 = !DILocation(line: 2567, column: 24, scope: !13256)
!13301 = !DILocation(line: 2567, column: 28, scope: !13256)
!13302 = !DILocation(line: 2567, column: 35, scope: !13256)
!13303 = !DILocation(line: 2567, column: 44, scope: !13256)
!13304 = !DILocation(line: 2567, column: 48, scope: !13256)
!13305 = !DILocation(line: 2567, column: 2, scope: !13256)
!13306 = !DILocation(line: 2569, column: 13, scope: !13256)
!13307 = !DILocation(line: 2569, column: 22, scope: !13256)
!13308 = !DILocation(line: 2569, column: 20, scope: !13256)
!13309 = !DILocation(line: 2569, column: 11, scope: !13256)
!13310 = !DILocation(line: 2571, column: 14, scope: !13256)
!13311 = !DILocation(line: 2571, column: 20, scope: !13256)
!13312 = !DILocation(line: 2571, column: 24, scope: !13256)
!13313 = !DILocation(line: 2571, column: 28, scope: !13256)
!13314 = !DILocation(line: 2571, column: 35, scope: !13256)
!13315 = !DILocation(line: 2571, column: 2, scope: !13256)
!13316 = !DILocation(line: 2572, column: 12, scope: !13256)
!13317 = !DILocation(line: 2572, column: 18, scope: !13256)
!13318 = !DILocation(line: 2572, column: 2, scope: !13256)
!13319 = !DILocation(line: 2573, column: 12, scope: !13256)
!13320 = !DILocation(line: 2573, column: 16, scope: !13256)
!13321 = !DILocation(line: 2573, column: 2, scope: !13256)
!13322 = !DILocation(line: 2578, column: 9, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13256, file: !3, line: 2578, column: 2)
!13324 = !DILocation(line: 2578, column: 7, scope: !13323)
!13325 = !DILocation(line: 2578, column: 14, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13323, file: !3, line: 2578, column: 2)
!13327 = !DILocation(line: 2578, column: 18, scope: !13326)
!13328 = !DILocation(line: 2578, column: 16, scope: !13326)
!13329 = !DILocation(line: 2578, column: 2, scope: !13323)
!13330 = !DILocalVariable(name: "vd", scope: !13331, file: !3, line: 2579, type: !9184)
!13331 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 2578, column: 32)
!13332 = !DILocation(line: 2579, column: 18, scope: !13331)
!13333 = !DILocalVariable(name: "test", scope: !13331, file: !3, line: 2580, type: !11350)
!13334 = !DILocation(line: 2580, column: 19, scope: !13331)
!13335 = !DILocalVariable(name: "proxy", scope: !13331, file: !3, line: 2581, type: !2054)
!13336 = !DILocation(line: 2581, column: 11, scope: !13331)
!13337 = !DILocation(line: 2583, column: 35, scope: !13331)
!13338 = !DILocation(line: 2583, column: 39, scope: !13331)
!13339 = !DILocation(line: 2583, column: 45, scope: !13331)
!13340 = !DILocation(line: 2583, column: 51, scope: !13331)
!13341 = !DILocation(line: 2583, column: 11, scope: !13331)
!13342 = !DILocation(line: 2583, column: 56, scope: !13331)
!13343 = !DILocation(line: 2583, column: 9, scope: !13331)
!13344 = !DILocation(line: 2585, column: 26, scope: !13331)
!13345 = !DILocation(line: 2585, column: 3, scope: !13331)
!13346 = !DILocation(line: 2587, column: 3, scope: !13331)
!13347 = !DILocation(line: 2587, column: 3, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13331, file: !3, line: 2587, column: 3)
!13349 = !DILocation(line: 2587, column: 3, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 2587, column: 3)
!13351 = !DILocation(line: 2587, column: 3, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 2587, column: 3)
!13353 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 2587, column: 3)
!13354 = !DILocation(line: 2587, column: 3, scope: !13353)
!13355 = !DILocation(line: 2587, column: 3, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13352, file: !3, line: 2587, column: 3)
!13357 = !DILocation(line: 2587, column: 3, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 2587, column: 3)
!13359 = !DILocation(line: 2587, column: 3, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13352, file: !3, line: 2587, column: 3)
!13361 = !DILocation(line: 2587, column: 3, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 2587, column: 3)
!13363 = !DILocation(line: 2587, column: 3, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13362, file: !3, line: 2587, column: 3)
!13365 = !DILocation(line: 2587, column: 3, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !3, line: 2587, column: 3)
!13367 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 2587, column: 3)
!13368 = !DILocation(line: 2587, column: 3, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 2587, column: 3)
!13370 = !DILocation(line: 2587, column: 3, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 2587, column: 3)
!13372 = distinct !DILexicalBlock(scope: !13369, file: !3, line: 2587, column: 3)
!13373 = !DILocation(line: 2587, column: 3, scope: !13372)
!13374 = !DILocation(line: 2587, column: 3, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2587, column: 3)
!13376 = !DILocation(line: 2587, column: 3, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 2587, column: 3)
!13378 = !DILocation(line: 2587, column: 3, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2587, column: 3)
!13380 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 2587, column: 3)
!13381 = !DILocation(line: 2587, column: 3, scope: !13380)
!13382 = !DILocation(line: 2587, column: 3, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2587, column: 3)
!13384 = !DILocation(line: 2587, column: 3, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 2587, column: 3)
!13386 = !DILocation(line: 2587, column: 3, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 2587, column: 3)
!13388 = !DILocation(line: 2587, column: 3, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 2587, column: 3)
!13390 = !DILocation(line: 2587, column: 3, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 2587, column: 3)
!13392 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 2587, column: 3)
!13393 = !DILocation(line: 2587, column: 3, scope: !13392)
!13394 = !DILocation(line: 2587, column: 3, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2587, column: 3)
!13396 = !DILocation(line: 2587, column: 3, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2587, column: 3)
!13398 = !DILocation(line: 2587, column: 3, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 2587, column: 3)
!13400 = !DILocation(line: 2589, column: 39, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 2589, column: 8)
!13402 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 2588, column: 3)
!13403 = !DILocation(line: 2589, column: 8, scope: !13401)
!13404 = !DILocation(line: 2589, column: 8, scope: !13402)
!13405 = !DILocalVariable(name: "intr", scope: !13406, file: !3, line: 2590, type: !233)
!13406 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 2589, column: 44)
!13407 = !DILocation(line: 2590, column: 11, scope: !13406)
!13408 = !DILocalVariable(name: "val", scope: !13406, file: !3, line: 2591, type: !233)
!13409 = !DILocation(line: 2591, column: 11, scope: !13406)
!13410 = !DILocation(line: 2593, column: 25, scope: !13406)
!13411 = !DILocation(line: 2593, column: 34, scope: !13406)
!13412 = !DILocation(line: 2593, column: 38, scope: !13406)
!13413 = !DILocation(line: 2593, column: 42, scope: !13406)
!13414 = !DILocation(line: 2593, column: 5, scope: !13406)
!13415 = !DILocation(line: 2595, column: 17, scope: !13406)
!13416 = !DILocation(line: 2595, column: 22, scope: !13406)
!13417 = !DILocation(line: 2595, column: 31, scope: !13406)
!13418 = !DILocation(line: 2595, column: 5, scope: !13406)
!13419 = !DILocation(line: 2597, column: 20, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13406, file: !3, line: 2597, column: 9)
!13421 = !DILocation(line: 2597, column: 24, scope: !13420)
!13422 = !DILocation(line: 2597, column: 31, scope: !13420)
!13423 = !DILocation(line: 2597, column: 38, scope: !13420)
!13424 = !DILocation(line: 2597, column: 9, scope: !13420)
!13425 = !DILocation(line: 2597, column: 9, scope: !13406)
!13426 = !DILocalVariable(name: "fade", scope: !13427, file: !3, line: 2598, type: !3072)
!13427 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 2597, column: 44)
!13428 = !DILocation(line: 2598, column: 18, scope: !13427)
!13429 = !DILocation(line: 2598, column: 25, scope: !13427)
!13430 = !DILocation(line: 2598, column: 50, scope: !13427)
!13431 = !DILocation(line: 2598, column: 54, scope: !13427)
!13432 = !DILocation(line: 2598, column: 64, scope: !13427)
!13433 = !DILocation(line: 2598, column: 79, scope: !13427)
!13434 = !DILocation(line: 2598, column: 68, scope: !13427)
!13435 = !DILocation(line: 2599, column: 53, scope: !13427)
!13436 = !DILocation(line: 2599, column: 60, scope: !13427)
!13437 = !DILocation(line: 2599, column: 68, scope: !13427)
!13438 = !DILocation(line: 2599, column: 65, scope: !13427)
!13439 = !DILocation(line: 2599, column: 79, scope: !13427)
!13440 = !DILocation(line: 2599, column: 75, scope: !13427)
!13441 = !DILocation(line: 2598, column: 37, scope: !13427)
!13442 = !DILocation(line: 2598, column: 35, scope: !13427)
!13443 = !DILocation(line: 2601, column: 18, scope: !13427)
!13444 = !DILocation(line: 2601, column: 27, scope: !13427)
!13445 = !DILocation(line: 2601, column: 31, scope: !13427)
!13446 = !DILocation(line: 2601, column: 36, scope: !13427)
!13447 = !DILocation(line: 2601, column: 6, scope: !13427)
!13448 = !DILocation(line: 2603, column: 13, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 2603, column: 10)
!13450 = !DILocation(line: 2603, column: 10, scope: !13449)
!13451 = !DILocation(line: 2603, column: 10, scope: !13427)
!13452 = !DILocation(line: 2604, column: 10, scope: !13449)
!13453 = !DILocation(line: 2604, column: 17, scope: !13449)
!13454 = !DILocation(line: 2604, column: 22, scope: !13449)
!13455 = !DILocation(line: 2604, column: 7, scope: !13449)
!13456 = !DILocation(line: 2605, column: 5, scope: !13427)
!13457 = !DILocation(line: 2606, column: 4, scope: !13406)
!13458 = !DILocation(line: 2608, column: 3, scope: !13372)
!13459 = distinct !{!13459, !13365, !13460}
!13460 = !DILocation(line: 2608, column: 3, scope: !13366)
!13461 = !DILocation(line: 2608, column: 3, scope: !13367)
!13462 = distinct !{!13462, !13361, !13463}
!13463 = !DILocation(line: 2608, column: 3, scope: !13362)
!13464 = !DILocation(line: 2608, column: 3, scope: !13353)
!13465 = distinct !{!13465, !13347, !13466}
!13466 = !DILocation(line: 2608, column: 3, scope: !13348)
!13467 = !DILocation(line: 2609, column: 2, scope: !13331)
!13468 = !DILocation(line: 2578, column: 28, scope: !13326)
!13469 = !DILocation(line: 2578, column: 2, scope: !13326)
!13470 = distinct !{!13470, !13329, !13471}
!13471 = !DILocation(line: 2609, column: 2, scope: !13323)
!13472 = !DILocation(line: 2610, column: 1, scope: !13256)
!13473 = distinct !DISubprogram(name: "do_clay_brush", scope: !3, file: !3, line: 2612, type: !4, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!13474 = !DILocalVariable(name: "sd", arg: 1, scope: !13473, file: !3, line: 2612, type: !6)
!13475 = !DILocation(line: 2612, column: 35, scope: !13473)
!13476 = !DILocalVariable(name: "ob", arg: 2, scope: !13473, file: !3, line: 2612, type: !3739)
!13477 = !DILocation(line: 2612, column: 47, scope: !13473)
!13478 = !DILocalVariable(name: "nodes", arg: 3, scope: !13473, file: !3, line: 2612, type: !3741)
!13479 = !DILocation(line: 2612, column: 62, scope: !13473)
!13480 = !DILocalVariable(name: "totnode", arg: 4, scope: !13473, file: !3, line: 2612, type: !57)
!13481 = !DILocation(line: 2612, column: 73, scope: !13473)
!13482 = !DILocalVariable(name: "ss", scope: !13473, file: !3, line: 2614, type: !5374)
!13483 = !DILocation(line: 2614, column: 17, scope: !13473)
!13484 = !DILocation(line: 2614, column: 22, scope: !13473)
!13485 = !DILocation(line: 2614, column: 26, scope: !13473)
!13486 = !DILocalVariable(name: "brush", scope: !13473, file: !3, line: 2615, type: !2749)
!13487 = !DILocation(line: 2615, column: 9, scope: !13473)
!13488 = !DILocation(line: 2615, column: 34, scope: !13473)
!13489 = !DILocation(line: 2615, column: 38, scope: !13473)
!13490 = !DILocation(line: 2615, column: 17, scope: !13473)
!13491 = !DILocalVariable(name: "bstrength", scope: !13473, file: !3, line: 2617, type: !153)
!13492 = !DILocation(line: 2617, column: 8, scope: !13473)
!13493 = !DILocation(line: 2617, column: 20, scope: !13473)
!13494 = !DILocation(line: 2617, column: 24, scope: !13473)
!13495 = !DILocation(line: 2617, column: 31, scope: !13473)
!13496 = !DILocalVariable(name: "radius", scope: !13473, file: !3, line: 2618, type: !153)
!13497 = !DILocation(line: 2618, column: 8, scope: !13473)
!13498 = !DILocation(line: 2618, column: 20, scope: !13473)
!13499 = !DILocation(line: 2618, column: 24, scope: !13473)
!13500 = !DILocation(line: 2618, column: 31, scope: !13473)
!13501 = !DILocalVariable(name: "offset", scope: !13473, file: !3, line: 2619, type: !153)
!13502 = !DILocation(line: 2619, column: 8, scope: !13473)
!13503 = !DILocation(line: 2619, column: 31, scope: !13473)
!13504 = !DILocation(line: 2619, column: 35, scope: !13473)
!13505 = !DILocation(line: 2619, column: 20, scope: !13473)
!13506 = !DILocalVariable(name: "displace", scope: !13473, file: !3, line: 2621, type: !153)
!13507 = !DILocation(line: 2621, column: 8, scope: !13473)
!13508 = !DILocalVariable(name: "an", scope: !13473, file: !3, line: 2623, type: !233)
!13509 = !DILocation(line: 2623, column: 8, scope: !13473)
!13510 = !DILocalVariable(name: "fc", scope: !13473, file: !3, line: 2624, type: !233)
!13511 = !DILocation(line: 2624, column: 8, scope: !13473)
!13512 = !DILocalVariable(name: "n", scope: !13473, file: !3, line: 2626, type: !57)
!13513 = !DILocation(line: 2626, column: 6, scope: !13473)
!13514 = !DILocalVariable(name: "temp", scope: !13473, file: !3, line: 2628, type: !233)
!13515 = !DILocation(line: 2628, column: 8, scope: !13473)
!13516 = !DILocalVariable(name: "flip", scope: !13473, file: !3, line: 2630, type: !57)
!13517 = !DILocation(line: 2630, column: 6, scope: !13473)
!13518 = !DILocation(line: 2632, column: 20, scope: !13473)
!13519 = !DILocation(line: 2632, column: 24, scope: !13473)
!13520 = !DILocation(line: 2632, column: 28, scope: !13473)
!13521 = !DILocation(line: 2632, column: 35, scope: !13473)
!13522 = !DILocation(line: 2632, column: 44, scope: !13473)
!13523 = !DILocation(line: 2632, column: 48, scope: !13473)
!13524 = !DILocation(line: 2632, column: 2, scope: !13473)
!13525 = !DILocation(line: 2634, column: 9, scope: !13473)
!13526 = !DILocation(line: 2634, column: 19, scope: !13473)
!13527 = !DILocation(line: 2634, column: 7, scope: !13473)
!13528 = !DILocation(line: 2636, column: 6, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 2636, column: 6)
!13530 = !DILocation(line: 2636, column: 6, scope: !13473)
!13531 = !DILocation(line: 2637, column: 16, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2636, column: 12)
!13533 = !DILocation(line: 2637, column: 15, scope: !13532)
!13534 = !DILocation(line: 2637, column: 13, scope: !13532)
!13535 = !DILocation(line: 2638, column: 16, scope: !13532)
!13536 = !DILocation(line: 2638, column: 15, scope: !13532)
!13537 = !DILocation(line: 2638, column: 13, scope: !13532)
!13538 = !DILocation(line: 2639, column: 2, scope: !13532)
!13539 = !DILocation(line: 2641, column: 13, scope: !13473)
!13540 = !DILocation(line: 2641, column: 31, scope: !13473)
!13541 = !DILocation(line: 2641, column: 29, scope: !13473)
!13542 = !DILocation(line: 2641, column: 20, scope: !13473)
!13543 = !DILocation(line: 2641, column: 11, scope: !13473)
!13544 = !DILocation(line: 2643, column: 14, scope: !13473)
!13545 = !DILocation(line: 2643, column: 20, scope: !13473)
!13546 = !DILocation(line: 2643, column: 24, scope: !13473)
!13547 = !DILocation(line: 2643, column: 28, scope: !13473)
!13548 = !DILocation(line: 2643, column: 35, scope: !13473)
!13549 = !DILocation(line: 2643, column: 2, scope: !13473)
!13550 = !DILocation(line: 2644, column: 12, scope: !13473)
!13551 = !DILocation(line: 2644, column: 18, scope: !13473)
!13552 = !DILocation(line: 2644, column: 2, scope: !13473)
!13553 = !DILocation(line: 2645, column: 12, scope: !13473)
!13554 = !DILocation(line: 2645, column: 16, scope: !13473)
!13555 = !DILocation(line: 2645, column: 2, scope: !13473)
!13556 = !DILocation(line: 2652, column: 9, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 2652, column: 2)
!13558 = !DILocation(line: 2652, column: 7, scope: !13557)
!13559 = !DILocation(line: 2652, column: 14, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13557, file: !3, line: 2652, column: 2)
!13561 = !DILocation(line: 2652, column: 18, scope: !13560)
!13562 = !DILocation(line: 2652, column: 16, scope: !13560)
!13563 = !DILocation(line: 2652, column: 2, scope: !13557)
!13564 = !DILocalVariable(name: "vd", scope: !13565, file: !3, line: 2653, type: !9184)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 2652, column: 32)
!13566 = !DILocation(line: 2653, column: 18, scope: !13565)
!13567 = !DILocalVariable(name: "test", scope: !13565, file: !3, line: 2654, type: !11350)
!13568 = !DILocation(line: 2654, column: 19, scope: !13565)
!13569 = !DILocalVariable(name: "proxy", scope: !13565, file: !3, line: 2655, type: !2054)
!13570 = !DILocation(line: 2655, column: 11, scope: !13565)
!13571 = !DILocation(line: 2657, column: 35, scope: !13565)
!13572 = !DILocation(line: 2657, column: 39, scope: !13565)
!13573 = !DILocation(line: 2657, column: 45, scope: !13565)
!13574 = !DILocation(line: 2657, column: 51, scope: !13565)
!13575 = !DILocation(line: 2657, column: 11, scope: !13565)
!13576 = !DILocation(line: 2657, column: 56, scope: !13565)
!13577 = !DILocation(line: 2657, column: 9, scope: !13565)
!13578 = !DILocation(line: 2659, column: 26, scope: !13565)
!13579 = !DILocation(line: 2659, column: 3, scope: !13565)
!13580 = !DILocation(line: 2661, column: 3, scope: !13565)
!13581 = !DILocation(line: 2661, column: 3, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 2661, column: 3)
!13583 = !DILocation(line: 2661, column: 3, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 2661, column: 3)
!13585 = !DILocation(line: 2661, column: 3, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !3, line: 2661, column: 3)
!13587 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 2661, column: 3)
!13588 = !DILocation(line: 2661, column: 3, scope: !13587)
!13589 = !DILocation(line: 2661, column: 3, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 2661, column: 3)
!13591 = !DILocation(line: 2661, column: 3, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 2661, column: 3)
!13593 = !DILocation(line: 2661, column: 3, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 2661, column: 3)
!13595 = !DILocation(line: 2661, column: 3, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13587, file: !3, line: 2661, column: 3)
!13597 = !DILocation(line: 2661, column: 3, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13596, file: !3, line: 2661, column: 3)
!13599 = !DILocation(line: 2661, column: 3, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !3, line: 2661, column: 3)
!13601 = distinct !DILexicalBlock(scope: !13598, file: !3, line: 2661, column: 3)
!13602 = !DILocation(line: 2661, column: 3, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13600, file: !3, line: 2661, column: 3)
!13604 = !DILocation(line: 2661, column: 3, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 2661, column: 3)
!13606 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 2661, column: 3)
!13607 = !DILocation(line: 2661, column: 3, scope: !13606)
!13608 = !DILocation(line: 2661, column: 3, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 2661, column: 3)
!13610 = !DILocation(line: 2661, column: 3, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13609, file: !3, line: 2661, column: 3)
!13612 = !DILocation(line: 2661, column: 3, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13614, file: !3, line: 2661, column: 3)
!13614 = distinct !DILexicalBlock(scope: !13611, file: !3, line: 2661, column: 3)
!13615 = !DILocation(line: 2661, column: 3, scope: !13614)
!13616 = !DILocation(line: 2661, column: 3, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 2661, column: 3)
!13618 = !DILocation(line: 2661, column: 3, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 2661, column: 3)
!13620 = !DILocation(line: 2661, column: 3, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 2661, column: 3)
!13622 = !DILocation(line: 2661, column: 3, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 2661, column: 3)
!13624 = !DILocation(line: 2661, column: 3, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !3, line: 2661, column: 3)
!13626 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 2661, column: 3)
!13627 = !DILocation(line: 2661, column: 3, scope: !13626)
!13628 = !DILocation(line: 2661, column: 3, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 2661, column: 3)
!13630 = !DILocation(line: 2661, column: 3, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 2661, column: 3)
!13632 = !DILocation(line: 2661, column: 3, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13626, file: !3, line: 2661, column: 3)
!13634 = !DILocation(line: 2663, column: 39, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 2663, column: 8)
!13636 = distinct !DILexicalBlock(scope: !13606, file: !3, line: 2662, column: 3)
!13637 = !DILocation(line: 2663, column: 8, scope: !13635)
!13638 = !DILocation(line: 2663, column: 8, scope: !13636)
!13639 = !DILocation(line: 2664, column: 34, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 2664, column: 9)
!13641 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 2663, column: 44)
!13642 = !DILocation(line: 2664, column: 38, scope: !13640)
!13643 = !DILocation(line: 2664, column: 42, scope: !13640)
!13644 = !DILocation(line: 2664, column: 46, scope: !13640)
!13645 = !DILocation(line: 2664, column: 9, scope: !13640)
!13646 = !DILocation(line: 2664, column: 9, scope: !13641)
!13647 = !DILocalVariable(name: "intr", scope: !13648, file: !3, line: 2665, type: !233)
!13648 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 2664, column: 53)
!13649 = !DILocation(line: 2665, column: 12, scope: !13648)
!13650 = !DILocalVariable(name: "val", scope: !13648, file: !3, line: 2666, type: !233)
!13651 = !DILocation(line: 2666, column: 12, scope: !13648)
!13652 = !DILocation(line: 2668, column: 26, scope: !13648)
!13653 = !DILocation(line: 2668, column: 35, scope: !13648)
!13654 = !DILocation(line: 2668, column: 39, scope: !13648)
!13655 = !DILocation(line: 2668, column: 43, scope: !13648)
!13656 = !DILocation(line: 2668, column: 6, scope: !13648)
!13657 = !DILocation(line: 2670, column: 18, scope: !13648)
!13658 = !DILocation(line: 2670, column: 23, scope: !13648)
!13659 = !DILocation(line: 2670, column: 32, scope: !13648)
!13660 = !DILocation(line: 2670, column: 6, scope: !13648)
!13661 = !DILocation(line: 2672, column: 21, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13648, file: !3, line: 2672, column: 10)
!13663 = !DILocation(line: 2672, column: 25, scope: !13662)
!13664 = !DILocation(line: 2672, column: 32, scope: !13662)
!13665 = !DILocation(line: 2672, column: 39, scope: !13662)
!13666 = !DILocation(line: 2672, column: 10, scope: !13662)
!13667 = !DILocation(line: 2672, column: 10, scope: !13648)
!13668 = !DILocalVariable(name: "fade", scope: !13669, file: !3, line: 2673, type: !3072)
!13669 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 2672, column: 45)
!13670 = !DILocation(line: 2673, column: 19, scope: !13669)
!13671 = !DILocation(line: 2673, column: 26, scope: !13669)
!13672 = !DILocation(line: 2673, column: 51, scope: !13669)
!13673 = !DILocation(line: 2673, column: 55, scope: !13669)
!13674 = !DILocation(line: 2673, column: 65, scope: !13669)
!13675 = !DILocation(line: 2673, column: 80, scope: !13669)
!13676 = !DILocation(line: 2673, column: 69, scope: !13669)
!13677 = !DILocation(line: 2674, column: 54, scope: !13669)
!13678 = !DILocation(line: 2674, column: 61, scope: !13669)
!13679 = !DILocation(line: 2674, column: 69, scope: !13669)
!13680 = !DILocation(line: 2674, column: 66, scope: !13669)
!13681 = !DILocation(line: 2674, column: 80, scope: !13669)
!13682 = !DILocation(line: 2674, column: 76, scope: !13669)
!13683 = !DILocation(line: 2673, column: 38, scope: !13669)
!13684 = !DILocation(line: 2673, column: 36, scope: !13669)
!13685 = !DILocation(line: 2676, column: 19, scope: !13669)
!13686 = !DILocation(line: 2676, column: 28, scope: !13669)
!13687 = !DILocation(line: 2676, column: 32, scope: !13669)
!13688 = !DILocation(line: 2676, column: 37, scope: !13669)
!13689 = !DILocation(line: 2676, column: 7, scope: !13669)
!13690 = !DILocation(line: 2678, column: 14, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13669, file: !3, line: 2678, column: 11)
!13692 = !DILocation(line: 2678, column: 11, scope: !13691)
!13693 = !DILocation(line: 2678, column: 11, scope: !13669)
!13694 = !DILocation(line: 2679, column: 11, scope: !13691)
!13695 = !DILocation(line: 2679, column: 18, scope: !13691)
!13696 = !DILocation(line: 2679, column: 23, scope: !13691)
!13697 = !DILocation(line: 2679, column: 8, scope: !13691)
!13698 = !DILocation(line: 2680, column: 6, scope: !13669)
!13699 = !DILocation(line: 2681, column: 5, scope: !13648)
!13700 = !DILocation(line: 2682, column: 4, scope: !13641)
!13701 = !DILocation(line: 2684, column: 3, scope: !13606)
!13702 = distinct !{!13702, !13599, !13703}
!13703 = !DILocation(line: 2684, column: 3, scope: !13600)
!13704 = !DILocation(line: 2684, column: 3, scope: !13601)
!13705 = distinct !{!13705, !13595, !13706}
!13706 = !DILocation(line: 2684, column: 3, scope: !13596)
!13707 = !DILocation(line: 2684, column: 3, scope: !13587)
!13708 = distinct !{!13708, !13581, !13709}
!13709 = !DILocation(line: 2684, column: 3, scope: !13582)
!13710 = !DILocation(line: 2685, column: 2, scope: !13565)
!13711 = !DILocation(line: 2652, column: 28, scope: !13560)
!13712 = !DILocation(line: 2652, column: 2, scope: !13560)
!13713 = distinct !{!13713, !13563, !13714}
!13714 = !DILocation(line: 2685, column: 2, scope: !13557)
!13715 = !DILocation(line: 2686, column: 1, scope: !13473)
!13716 = distinct !DISubprogram(name: "do_clay_strips_brush", scope: !3, file: !3, line: 2688, type: !4, scopeLine: 2689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!13717 = !DILocalVariable(name: "sd", arg: 1, scope: !13716, file: !3, line: 2688, type: !6)
!13718 = !DILocation(line: 2688, column: 42, scope: !13716)
!13719 = !DILocalVariable(name: "ob", arg: 2, scope: !13716, file: !3, line: 2688, type: !3739)
!13720 = !DILocation(line: 2688, column: 54, scope: !13716)
!13721 = !DILocalVariable(name: "nodes", arg: 3, scope: !13716, file: !3, line: 2688, type: !3741)
!13722 = !DILocation(line: 2688, column: 69, scope: !13716)
!13723 = !DILocalVariable(name: "totnode", arg: 4, scope: !13716, file: !3, line: 2688, type: !57)
!13724 = !DILocation(line: 2688, column: 80, scope: !13716)
!13725 = !DILocalVariable(name: "ss", scope: !13716, file: !3, line: 2690, type: !5374)
!13726 = !DILocation(line: 2690, column: 17, scope: !13716)
!13727 = !DILocation(line: 2690, column: 22, scope: !13716)
!13728 = !DILocation(line: 2690, column: 26, scope: !13716)
!13729 = !DILocalVariable(name: "brush", scope: !13716, file: !3, line: 2691, type: !2749)
!13730 = !DILocation(line: 2691, column: 9, scope: !13716)
!13731 = !DILocation(line: 2691, column: 34, scope: !13716)
!13732 = !DILocation(line: 2691, column: 38, scope: !13716)
!13733 = !DILocation(line: 2691, column: 17, scope: !13716)
!13734 = !DILocalVariable(name: "bstrength", scope: !13716, file: !3, line: 2693, type: !153)
!13735 = !DILocation(line: 2693, column: 8, scope: !13716)
!13736 = !DILocation(line: 2693, column: 20, scope: !13716)
!13737 = !DILocation(line: 2693, column: 24, scope: !13716)
!13738 = !DILocation(line: 2693, column: 31, scope: !13716)
!13739 = !DILocalVariable(name: "radius", scope: !13716, file: !3, line: 2694, type: !153)
!13740 = !DILocation(line: 2694, column: 8, scope: !13716)
!13741 = !DILocation(line: 2694, column: 20, scope: !13716)
!13742 = !DILocation(line: 2694, column: 24, scope: !13716)
!13743 = !DILocation(line: 2694, column: 31, scope: !13716)
!13744 = !DILocalVariable(name: "offset", scope: !13716, file: !3, line: 2695, type: !153)
!13745 = !DILocation(line: 2695, column: 8, scope: !13716)
!13746 = !DILocation(line: 2695, column: 31, scope: !13716)
!13747 = !DILocation(line: 2695, column: 35, scope: !13716)
!13748 = !DILocation(line: 2695, column: 20, scope: !13716)
!13749 = !DILocalVariable(name: "displace", scope: !13716, file: !3, line: 2697, type: !153)
!13750 = !DILocation(line: 2697, column: 8, scope: !13716)
!13751 = !DILocalVariable(name: "sn", scope: !13716, file: !3, line: 2699, type: !233)
!13752 = !DILocation(line: 2699, column: 8, scope: !13716)
!13753 = !DILocalVariable(name: "an", scope: !13716, file: !3, line: 2700, type: !233)
!13754 = !DILocation(line: 2700, column: 8, scope: !13716)
!13755 = !DILocalVariable(name: "fc", scope: !13716, file: !3, line: 2701, type: !233)
!13756 = !DILocation(line: 2701, column: 8, scope: !13716)
!13757 = !DILocalVariable(name: "n", scope: !13716, file: !3, line: 2703, type: !57)
!13758 = !DILocation(line: 2703, column: 6, scope: !13716)
!13759 = !DILocalVariable(name: "temp", scope: !13716, file: !3, line: 2705, type: !233)
!13760 = !DILocation(line: 2705, column: 8, scope: !13716)
!13761 = !DILocalVariable(name: "mat", scope: !13716, file: !3, line: 2706, type: !1294)
!13762 = !DILocation(line: 2706, column: 8, scope: !13716)
!13763 = !DILocalVariable(name: "scale", scope: !13716, file: !3, line: 2707, type: !1294)
!13764 = !DILocation(line: 2707, column: 8, scope: !13716)
!13765 = !DILocalVariable(name: "tmat", scope: !13716, file: !3, line: 2708, type: !1294)
!13766 = !DILocation(line: 2708, column: 8, scope: !13716)
!13767 = !DILocalVariable(name: "flip", scope: !13716, file: !3, line: 2710, type: !57)
!13768 = !DILocation(line: 2710, column: 6, scope: !13716)
!13769 = !DILocation(line: 2712, column: 20, scope: !13716)
!13770 = !DILocation(line: 2712, column: 24, scope: !13716)
!13771 = !DILocation(line: 2712, column: 28, scope: !13716)
!13772 = !DILocation(line: 2712, column: 35, scope: !13716)
!13773 = !DILocation(line: 2712, column: 44, scope: !13716)
!13774 = !DILocation(line: 2712, column: 48, scope: !13716)
!13775 = !DILocation(line: 2712, column: 2, scope: !13716)
!13776 = !DILocation(line: 2714, column: 6, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 2714, column: 6)
!13778 = !DILocation(line: 2714, column: 13, scope: !13777)
!13779 = !DILocation(line: 2714, column: 26, scope: !13777)
!13780 = !DILocation(line: 2714, column: 50, scope: !13777)
!13781 = !DILocation(line: 2714, column: 54, scope: !13777)
!13782 = !DILocation(line: 2714, column: 61, scope: !13777)
!13783 = !DILocation(line: 2714, column: 66, scope: !13777)
!13784 = !DILocation(line: 2714, column: 6, scope: !13716)
!13785 = !DILocation(line: 2715, column: 20, scope: !13777)
!13786 = !DILocation(line: 2715, column: 24, scope: !13777)
!13787 = !DILocation(line: 2715, column: 28, scope: !13777)
!13788 = !DILocation(line: 2715, column: 32, scope: !13777)
!13789 = !DILocation(line: 2715, column: 39, scope: !13777)
!13790 = !DILocation(line: 2715, column: 3, scope: !13777)
!13791 = !DILocation(line: 2717, column: 14, scope: !13777)
!13792 = !DILocation(line: 2717, column: 18, scope: !13777)
!13793 = !DILocation(line: 2717, column: 3, scope: !13777)
!13794 = !DILocation(line: 2720, column: 6, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 2720, column: 6)
!13796 = !DILocation(line: 2720, column: 10, scope: !13795)
!13797 = !DILocation(line: 2720, column: 17, scope: !13795)
!13798 = !DILocation(line: 2720, column: 6, scope: !13716)
!13799 = !DILocation(line: 2721, column: 3, scope: !13795)
!13800 = !DILocation(line: 2723, column: 9, scope: !13716)
!13801 = !DILocation(line: 2723, column: 19, scope: !13716)
!13802 = !DILocation(line: 2723, column: 7, scope: !13716)
!13803 = !DILocation(line: 2725, column: 6, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 2725, column: 6)
!13805 = !DILocation(line: 2725, column: 6, scope: !13716)
!13806 = !DILocation(line: 2726, column: 16, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 2725, column: 12)
!13808 = !DILocation(line: 2726, column: 15, scope: !13807)
!13809 = !DILocation(line: 2726, column: 13, scope: !13807)
!13810 = !DILocation(line: 2727, column: 16, scope: !13807)
!13811 = !DILocation(line: 2727, column: 15, scope: !13807)
!13812 = !DILocation(line: 2727, column: 13, scope: !13807)
!13813 = !DILocation(line: 2728, column: 2, scope: !13807)
!13814 = !DILocation(line: 2730, column: 13, scope: !13716)
!13815 = !DILocation(line: 2730, column: 31, scope: !13716)
!13816 = !DILocation(line: 2730, column: 29, scope: !13716)
!13817 = !DILocation(line: 2730, column: 20, scope: !13716)
!13818 = !DILocation(line: 2730, column: 11, scope: !13716)
!13819 = !DILocation(line: 2732, column: 14, scope: !13716)
!13820 = !DILocation(line: 2732, column: 20, scope: !13716)
!13821 = !DILocation(line: 2732, column: 24, scope: !13716)
!13822 = !DILocation(line: 2732, column: 28, scope: !13716)
!13823 = !DILocation(line: 2732, column: 35, scope: !13716)
!13824 = !DILocation(line: 2732, column: 2, scope: !13716)
!13825 = !DILocation(line: 2733, column: 12, scope: !13716)
!13826 = !DILocation(line: 2733, column: 18, scope: !13716)
!13827 = !DILocation(line: 2733, column: 2, scope: !13716)
!13828 = !DILocation(line: 2734, column: 12, scope: !13716)
!13829 = !DILocation(line: 2734, column: 16, scope: !13716)
!13830 = !DILocation(line: 2734, column: 2, scope: !13716)
!13831 = !DILocation(line: 2737, column: 16, scope: !13716)
!13832 = !DILocation(line: 2737, column: 24, scope: !13716)
!13833 = !DILocation(line: 2737, column: 28, scope: !13716)
!13834 = !DILocation(line: 2737, column: 32, scope: !13716)
!13835 = !DILocation(line: 2737, column: 39, scope: !13716)
!13836 = !DILocation(line: 2737, column: 2, scope: !13716)
!13837 = !DILocation(line: 2738, column: 2, scope: !13716)
!13838 = !DILocation(line: 2738, column: 12, scope: !13716)
!13839 = !DILocation(line: 2739, column: 16, scope: !13716)
!13840 = !DILocation(line: 2739, column: 24, scope: !13716)
!13841 = !DILocation(line: 2739, column: 28, scope: !13716)
!13842 = !DILocation(line: 2739, column: 2, scope: !13716)
!13843 = !DILocation(line: 2740, column: 2, scope: !13716)
!13844 = !DILocation(line: 2740, column: 12, scope: !13716)
!13845 = !DILocation(line: 2741, column: 13, scope: !13716)
!13846 = !DILocation(line: 2741, column: 21, scope: !13716)
!13847 = !DILocation(line: 2741, column: 2, scope: !13716)
!13848 = !DILocation(line: 2742, column: 2, scope: !13716)
!13849 = !DILocation(line: 2742, column: 12, scope: !13716)
!13850 = !DILocation(line: 2743, column: 13, scope: !13716)
!13851 = !DILocation(line: 2743, column: 21, scope: !13716)
!13852 = !DILocation(line: 2743, column: 25, scope: !13716)
!13853 = !DILocation(line: 2743, column: 32, scope: !13716)
!13854 = !DILocation(line: 2743, column: 2, scope: !13716)
!13855 = !DILocation(line: 2744, column: 2, scope: !13716)
!13856 = !DILocation(line: 2744, column: 12, scope: !13716)
!13857 = !DILocation(line: 2745, column: 15, scope: !13716)
!13858 = !DILocation(line: 2745, column: 2, scope: !13716)
!13859 = !DILocation(line: 2748, column: 14, scope: !13716)
!13860 = !DILocation(line: 2748, column: 21, scope: !13716)
!13861 = !DILocation(line: 2748, column: 25, scope: !13716)
!13862 = !DILocation(line: 2748, column: 32, scope: !13716)
!13863 = !DILocation(line: 2748, column: 2, scope: !13716)
!13864 = !DILocation(line: 2749, column: 14, scope: !13716)
!13865 = !DILocation(line: 2749, column: 20, scope: !13716)
!13866 = !DILocation(line: 2749, column: 25, scope: !13716)
!13867 = !DILocation(line: 2749, column: 2, scope: !13716)
!13868 = !DILocation(line: 2750, column: 15, scope: !13716)
!13869 = !DILocation(line: 2750, column: 20, scope: !13716)
!13870 = !DILocation(line: 2750, column: 2, scope: !13716)
!13871 = !DILocation(line: 2755, column: 9, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 2755, column: 2)
!13873 = !DILocation(line: 2755, column: 7, scope: !13872)
!13874 = !DILocation(line: 2755, column: 14, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 2755, column: 2)
!13876 = !DILocation(line: 2755, column: 18, scope: !13875)
!13877 = !DILocation(line: 2755, column: 16, scope: !13875)
!13878 = !DILocation(line: 2755, column: 2, scope: !13872)
!13879 = !DILocalVariable(name: "vd", scope: !13880, file: !3, line: 2756, type: !9184)
!13880 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 2755, column: 32)
!13881 = !DILocation(line: 2756, column: 18, scope: !13880)
!13882 = !DILocalVariable(name: "test", scope: !13880, file: !3, line: 2757, type: !11350)
!13883 = !DILocation(line: 2757, column: 19, scope: !13880)
!13884 = !DILocalVariable(name: "proxy", scope: !13880, file: !3, line: 2758, type: !2054)
!13885 = !DILocation(line: 2758, column: 11, scope: !13880)
!13886 = !DILocation(line: 2760, column: 35, scope: !13880)
!13887 = !DILocation(line: 2760, column: 39, scope: !13880)
!13888 = !DILocation(line: 2760, column: 45, scope: !13880)
!13889 = !DILocation(line: 2760, column: 51, scope: !13880)
!13890 = !DILocation(line: 2760, column: 11, scope: !13880)
!13891 = !DILocation(line: 2760, column: 56, scope: !13880)
!13892 = !DILocation(line: 2760, column: 9, scope: !13880)
!13893 = !DILocation(line: 2762, column: 26, scope: !13880)
!13894 = !DILocation(line: 2762, column: 3, scope: !13880)
!13895 = !DILocation(line: 2764, column: 3, scope: !13880)
!13896 = !DILocation(line: 2764, column: 3, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 2764, column: 3)
!13898 = !DILocation(line: 2764, column: 3, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13897, file: !3, line: 2764, column: 3)
!13900 = !DILocation(line: 2764, column: 3, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 2764, column: 3)
!13902 = distinct !DILexicalBlock(scope: !13899, file: !3, line: 2764, column: 3)
!13903 = !DILocation(line: 2764, column: 3, scope: !13902)
!13904 = !DILocation(line: 2764, column: 3, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 2764, column: 3)
!13906 = !DILocation(line: 2764, column: 3, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 2764, column: 3)
!13908 = !DILocation(line: 2764, column: 3, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 2764, column: 3)
!13910 = !DILocation(line: 2764, column: 3, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 2764, column: 3)
!13912 = !DILocation(line: 2764, column: 3, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13911, file: !3, line: 2764, column: 3)
!13914 = !DILocation(line: 2764, column: 3, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13916, file: !3, line: 2764, column: 3)
!13916 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 2764, column: 3)
!13917 = !DILocation(line: 2764, column: 3, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 2764, column: 3)
!13919 = !DILocation(line: 2764, column: 3, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 2764, column: 3)
!13921 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 2764, column: 3)
!13922 = !DILocation(line: 2764, column: 3, scope: !13921)
!13923 = !DILocation(line: 2764, column: 3, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13920, file: !3, line: 2764, column: 3)
!13925 = !DILocation(line: 2764, column: 3, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 2764, column: 3)
!13927 = !DILocation(line: 2764, column: 3, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !3, line: 2764, column: 3)
!13929 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 2764, column: 3)
!13930 = !DILocation(line: 2764, column: 3, scope: !13929)
!13931 = !DILocation(line: 2764, column: 3, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13920, file: !3, line: 2764, column: 3)
!13933 = !DILocation(line: 2764, column: 3, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 2764, column: 3)
!13935 = !DILocation(line: 2764, column: 3, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13934, file: !3, line: 2764, column: 3)
!13937 = !DILocation(line: 2764, column: 3, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13934, file: !3, line: 2764, column: 3)
!13939 = !DILocation(line: 2764, column: 3, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 2764, column: 3)
!13941 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 2764, column: 3)
!13942 = !DILocation(line: 2764, column: 3, scope: !13941)
!13943 = !DILocation(line: 2764, column: 3, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13940, file: !3, line: 2764, column: 3)
!13945 = !DILocation(line: 2764, column: 3, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13940, file: !3, line: 2764, column: 3)
!13947 = !DILocation(line: 2764, column: 3, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 2764, column: 3)
!13949 = !DILocation(line: 2766, column: 41, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 2766, column: 8)
!13951 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 2765, column: 3)
!13952 = !DILocation(line: 2766, column: 45, scope: !13950)
!13953 = !DILocation(line: 2766, column: 8, scope: !13950)
!13954 = !DILocation(line: 2766, column: 8, scope: !13951)
!13955 = !DILocation(line: 2767, column: 34, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !3, line: 2767, column: 9)
!13957 = distinct !DILexicalBlock(scope: !13950, file: !3, line: 2766, column: 51)
!13958 = !DILocation(line: 2767, column: 38, scope: !13956)
!13959 = !DILocation(line: 2767, column: 42, scope: !13956)
!13960 = !DILocation(line: 2767, column: 46, scope: !13956)
!13961 = !DILocation(line: 2767, column: 9, scope: !13956)
!13962 = !DILocation(line: 2767, column: 9, scope: !13957)
!13963 = !DILocalVariable(name: "intr", scope: !13964, file: !3, line: 2768, type: !233)
!13964 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 2767, column: 53)
!13965 = !DILocation(line: 2768, column: 12, scope: !13964)
!13966 = !DILocalVariable(name: "val", scope: !13964, file: !3, line: 2769, type: !233)
!13967 = !DILocation(line: 2769, column: 12, scope: !13964)
!13968 = !DILocation(line: 2771, column: 26, scope: !13964)
!13969 = !DILocation(line: 2771, column: 35, scope: !13964)
!13970 = !DILocation(line: 2771, column: 39, scope: !13964)
!13971 = !DILocation(line: 2771, column: 43, scope: !13964)
!13972 = !DILocation(line: 2771, column: 6, scope: !13964)
!13973 = !DILocation(line: 2773, column: 18, scope: !13964)
!13974 = !DILocation(line: 2773, column: 23, scope: !13964)
!13975 = !DILocation(line: 2773, column: 32, scope: !13964)
!13976 = !DILocation(line: 2773, column: 6, scope: !13964)
!13977 = !DILocation(line: 2775, column: 21, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13964, file: !3, line: 2775, column: 10)
!13979 = !DILocation(line: 2775, column: 25, scope: !13978)
!13980 = !DILocation(line: 2775, column: 32, scope: !13978)
!13981 = !DILocation(line: 2775, column: 39, scope: !13978)
!13982 = !DILocation(line: 2775, column: 10, scope: !13978)
!13983 = !DILocation(line: 2775, column: 10, scope: !13964)
!13984 = !DILocalVariable(name: "fade", scope: !13985, file: !3, line: 2776, type: !3072)
!13985 = distinct !DILexicalBlock(scope: !13978, file: !3, line: 2775, column: 45)
!13986 = !DILocation(line: 2776, column: 19, scope: !13985)
!13987 = !DILocation(line: 2776, column: 26, scope: !13985)
!13988 = !DILocation(line: 2776, column: 51, scope: !13985)
!13989 = !DILocation(line: 2776, column: 55, scope: !13985)
!13990 = !DILocation(line: 2776, column: 65, scope: !13985)
!13991 = !DILocation(line: 2777, column: 51, scope: !13985)
!13992 = !DILocation(line: 2777, column: 55, scope: !13985)
!13993 = !DILocation(line: 2777, column: 62, scope: !13985)
!13994 = !DILocation(line: 2777, column: 76, scope: !13985)
!13995 = !DILocation(line: 2777, column: 69, scope: !13985)
!13996 = !DILocation(line: 2778, column: 54, scope: !13985)
!13997 = !DILocation(line: 2778, column: 61, scope: !13985)
!13998 = !DILocation(line: 2778, column: 69, scope: !13985)
!13999 = !DILocation(line: 2778, column: 66, scope: !13985)
!14000 = !DILocation(line: 2778, column: 80, scope: !13985)
!14001 = !DILocation(line: 2778, column: 76, scope: !13985)
!14002 = !DILocation(line: 2776, column: 38, scope: !13985)
!14003 = !DILocation(line: 2776, column: 36, scope: !13985)
!14004 = !DILocation(line: 2780, column: 19, scope: !13985)
!14005 = !DILocation(line: 2780, column: 28, scope: !13985)
!14006 = !DILocation(line: 2780, column: 32, scope: !13985)
!14007 = !DILocation(line: 2780, column: 37, scope: !13985)
!14008 = !DILocation(line: 2780, column: 7, scope: !13985)
!14009 = !DILocation(line: 2782, column: 14, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 2782, column: 11)
!14011 = !DILocation(line: 2782, column: 11, scope: !14010)
!14012 = !DILocation(line: 2782, column: 11, scope: !13985)
!14013 = !DILocation(line: 2783, column: 11, scope: !14010)
!14014 = !DILocation(line: 2783, column: 18, scope: !14010)
!14015 = !DILocation(line: 2783, column: 23, scope: !14010)
!14016 = !DILocation(line: 2783, column: 8, scope: !14010)
!14017 = !DILocation(line: 2784, column: 6, scope: !13985)
!14018 = !DILocation(line: 2785, column: 5, scope: !13964)
!14019 = !DILocation(line: 2786, column: 4, scope: !13957)
!14020 = !DILocation(line: 2788, column: 3, scope: !13921)
!14021 = distinct !{!14021, !13914, !14022}
!14022 = !DILocation(line: 2788, column: 3, scope: !13915)
!14023 = !DILocation(line: 2788, column: 3, scope: !13916)
!14024 = distinct !{!14024, !13910, !14025}
!14025 = !DILocation(line: 2788, column: 3, scope: !13911)
!14026 = !DILocation(line: 2788, column: 3, scope: !13902)
!14027 = distinct !{!14027, !13896, !14028}
!14028 = !DILocation(line: 2788, column: 3, scope: !13897)
!14029 = !DILocation(line: 2789, column: 2, scope: !13880)
!14030 = !DILocation(line: 2755, column: 28, scope: !13875)
!14031 = !DILocation(line: 2755, column: 2, scope: !13875)
!14032 = distinct !{!14032, !13878, !14033}
!14033 = !DILocation(line: 2789, column: 2, scope: !13872)
!14034 = !DILocation(line: 2790, column: 1, scope: !13716)
!14035 = distinct !DISubprogram(name: "do_fill_brush", scope: !3, file: !3, line: 2792, type: !4, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14036 = !DILocalVariable(name: "sd", arg: 1, scope: !14035, file: !3, line: 2792, type: !6)
!14037 = !DILocation(line: 2792, column: 35, scope: !14035)
!14038 = !DILocalVariable(name: "ob", arg: 2, scope: !14035, file: !3, line: 2792, type: !3739)
!14039 = !DILocation(line: 2792, column: 47, scope: !14035)
!14040 = !DILocalVariable(name: "nodes", arg: 3, scope: !14035, file: !3, line: 2792, type: !3741)
!14041 = !DILocation(line: 2792, column: 62, scope: !14035)
!14042 = !DILocalVariable(name: "totnode", arg: 4, scope: !14035, file: !3, line: 2792, type: !57)
!14043 = !DILocation(line: 2792, column: 73, scope: !14035)
!14044 = !DILocalVariable(name: "ss", scope: !14035, file: !3, line: 2794, type: !5374)
!14045 = !DILocation(line: 2794, column: 17, scope: !14035)
!14046 = !DILocation(line: 2794, column: 22, scope: !14035)
!14047 = !DILocation(line: 2794, column: 26, scope: !14035)
!14048 = !DILocalVariable(name: "brush", scope: !14035, file: !3, line: 2795, type: !2749)
!14049 = !DILocation(line: 2795, column: 9, scope: !14035)
!14050 = !DILocation(line: 2795, column: 34, scope: !14035)
!14051 = !DILocation(line: 2795, column: 38, scope: !14035)
!14052 = !DILocation(line: 2795, column: 17, scope: !14035)
!14053 = !DILocalVariable(name: "bstrength", scope: !14035, file: !3, line: 2797, type: !153)
!14054 = !DILocation(line: 2797, column: 8, scope: !14035)
!14055 = !DILocation(line: 2797, column: 20, scope: !14035)
!14056 = !DILocation(line: 2797, column: 24, scope: !14035)
!14057 = !DILocation(line: 2797, column: 31, scope: !14035)
!14058 = !DILocalVariable(name: "radius", scope: !14035, file: !3, line: 2798, type: !3072)
!14059 = !DILocation(line: 2798, column: 14, scope: !14035)
!14060 = !DILocation(line: 2798, column: 23, scope: !14035)
!14061 = !DILocation(line: 2798, column: 27, scope: !14035)
!14062 = !DILocation(line: 2798, column: 34, scope: !14035)
!14063 = !DILocalVariable(name: "an", scope: !14035, file: !3, line: 2800, type: !233)
!14064 = !DILocation(line: 2800, column: 8, scope: !14035)
!14065 = !DILocalVariable(name: "fc", scope: !14035, file: !3, line: 2801, type: !233)
!14066 = !DILocation(line: 2801, column: 8, scope: !14035)
!14067 = !DILocalVariable(name: "offset", scope: !14035, file: !3, line: 2802, type: !153)
!14068 = !DILocation(line: 2802, column: 8, scope: !14035)
!14069 = !DILocation(line: 2802, column: 28, scope: !14035)
!14070 = !DILocation(line: 2802, column: 32, scope: !14035)
!14071 = !DILocation(line: 2802, column: 17, scope: !14035)
!14072 = !DILocalVariable(name: "displace", scope: !14035, file: !3, line: 2804, type: !153)
!14073 = !DILocation(line: 2804, column: 8, scope: !14035)
!14074 = !DILocalVariable(name: "n", scope: !14035, file: !3, line: 2806, type: !57)
!14075 = !DILocation(line: 2806, column: 6, scope: !14035)
!14076 = !DILocalVariable(name: "temp", scope: !14035, file: !3, line: 2808, type: !233)
!14077 = !DILocation(line: 2808, column: 8, scope: !14035)
!14078 = !DILocation(line: 2810, column: 20, scope: !14035)
!14079 = !DILocation(line: 2810, column: 24, scope: !14035)
!14080 = !DILocation(line: 2810, column: 28, scope: !14035)
!14081 = !DILocation(line: 2810, column: 35, scope: !14035)
!14082 = !DILocation(line: 2810, column: 44, scope: !14035)
!14083 = !DILocation(line: 2810, column: 48, scope: !14035)
!14084 = !DILocation(line: 2810, column: 2, scope: !14035)
!14085 = !DILocation(line: 2812, column: 13, scope: !14035)
!14086 = !DILocation(line: 2812, column: 22, scope: !14035)
!14087 = !DILocation(line: 2812, column: 20, scope: !14035)
!14088 = !DILocation(line: 2812, column: 11, scope: !14035)
!14089 = !DILocation(line: 2814, column: 14, scope: !14035)
!14090 = !DILocation(line: 2814, column: 20, scope: !14035)
!14091 = !DILocation(line: 2814, column: 24, scope: !14035)
!14092 = !DILocation(line: 2814, column: 28, scope: !14035)
!14093 = !DILocation(line: 2814, column: 35, scope: !14035)
!14094 = !DILocation(line: 2814, column: 2, scope: !14035)
!14095 = !DILocation(line: 2815, column: 12, scope: !14035)
!14096 = !DILocation(line: 2815, column: 18, scope: !14035)
!14097 = !DILocation(line: 2815, column: 2, scope: !14035)
!14098 = !DILocation(line: 2816, column: 12, scope: !14035)
!14099 = !DILocation(line: 2816, column: 16, scope: !14035)
!14100 = !DILocation(line: 2816, column: 2, scope: !14035)
!14101 = !DILocation(line: 2821, column: 9, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14035, file: !3, line: 2821, column: 2)
!14103 = !DILocation(line: 2821, column: 7, scope: !14102)
!14104 = !DILocation(line: 2821, column: 14, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14102, file: !3, line: 2821, column: 2)
!14106 = !DILocation(line: 2821, column: 18, scope: !14105)
!14107 = !DILocation(line: 2821, column: 16, scope: !14105)
!14108 = !DILocation(line: 2821, column: 2, scope: !14102)
!14109 = !DILocalVariable(name: "vd", scope: !14110, file: !3, line: 2822, type: !9184)
!14110 = distinct !DILexicalBlock(scope: !14105, file: !3, line: 2821, column: 32)
!14111 = !DILocation(line: 2822, column: 18, scope: !14110)
!14112 = !DILocalVariable(name: "test", scope: !14110, file: !3, line: 2823, type: !11350)
!14113 = !DILocation(line: 2823, column: 19, scope: !14110)
!14114 = !DILocalVariable(name: "proxy", scope: !14110, file: !3, line: 2824, type: !2054)
!14115 = !DILocation(line: 2824, column: 11, scope: !14110)
!14116 = !DILocation(line: 2826, column: 35, scope: !14110)
!14117 = !DILocation(line: 2826, column: 39, scope: !14110)
!14118 = !DILocation(line: 2826, column: 45, scope: !14110)
!14119 = !DILocation(line: 2826, column: 51, scope: !14110)
!14120 = !DILocation(line: 2826, column: 11, scope: !14110)
!14121 = !DILocation(line: 2826, column: 56, scope: !14110)
!14122 = !DILocation(line: 2826, column: 9, scope: !14110)
!14123 = !DILocation(line: 2828, column: 26, scope: !14110)
!14124 = !DILocation(line: 2828, column: 3, scope: !14110)
!14125 = !DILocation(line: 2830, column: 3, scope: !14110)
!14126 = !DILocation(line: 2830, column: 3, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14110, file: !3, line: 2830, column: 3)
!14128 = !DILocation(line: 2830, column: 3, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14127, file: !3, line: 2830, column: 3)
!14130 = !DILocation(line: 2830, column: 3, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 2830, column: 3)
!14132 = distinct !DILexicalBlock(scope: !14129, file: !3, line: 2830, column: 3)
!14133 = !DILocation(line: 2830, column: 3, scope: !14132)
!14134 = !DILocation(line: 2830, column: 3, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 2830, column: 3)
!14136 = !DILocation(line: 2830, column: 3, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 2830, column: 3)
!14138 = !DILocation(line: 2830, column: 3, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 2830, column: 3)
!14140 = !DILocation(line: 2830, column: 3, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 2830, column: 3)
!14142 = !DILocation(line: 2830, column: 3, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14141, file: !3, line: 2830, column: 3)
!14144 = !DILocation(line: 2830, column: 3, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 2830, column: 3)
!14146 = distinct !DILexicalBlock(scope: !14143, file: !3, line: 2830, column: 3)
!14147 = !DILocation(line: 2830, column: 3, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2830, column: 3)
!14149 = !DILocation(line: 2830, column: 3, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !3, line: 2830, column: 3)
!14151 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 2830, column: 3)
!14152 = !DILocation(line: 2830, column: 3, scope: !14151)
!14153 = !DILocation(line: 2830, column: 3, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14150, file: !3, line: 2830, column: 3)
!14155 = !DILocation(line: 2830, column: 3, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14154, file: !3, line: 2830, column: 3)
!14157 = !DILocation(line: 2830, column: 3, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 2830, column: 3)
!14159 = distinct !DILexicalBlock(scope: !14156, file: !3, line: 2830, column: 3)
!14160 = !DILocation(line: 2830, column: 3, scope: !14159)
!14161 = !DILocation(line: 2830, column: 3, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14150, file: !3, line: 2830, column: 3)
!14163 = !DILocation(line: 2830, column: 3, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14162, file: !3, line: 2830, column: 3)
!14165 = !DILocation(line: 2830, column: 3, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 2830, column: 3)
!14167 = !DILocation(line: 2830, column: 3, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 2830, column: 3)
!14169 = !DILocation(line: 2830, column: 3, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 2830, column: 3)
!14171 = distinct !DILexicalBlock(scope: !14162, file: !3, line: 2830, column: 3)
!14172 = !DILocation(line: 2830, column: 3, scope: !14171)
!14173 = !DILocation(line: 2830, column: 3, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 2830, column: 3)
!14175 = !DILocation(line: 2830, column: 3, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 2830, column: 3)
!14177 = !DILocation(line: 2830, column: 3, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 2830, column: 3)
!14179 = !DILocation(line: 2832, column: 39, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 2832, column: 8)
!14181 = distinct !DILexicalBlock(scope: !14151, file: !3, line: 2831, column: 3)
!14182 = !DILocation(line: 2832, column: 8, scope: !14180)
!14183 = !DILocation(line: 2832, column: 8, scope: !14181)
!14184 = !DILocation(line: 2833, column: 29, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !3, line: 2833, column: 9)
!14186 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 2832, column: 44)
!14187 = !DILocation(line: 2833, column: 33, scope: !14185)
!14188 = !DILocation(line: 2833, column: 37, scope: !14185)
!14189 = !DILocation(line: 2833, column: 9, scope: !14185)
!14190 = !DILocation(line: 2833, column: 9, scope: !14186)
!14191 = !DILocalVariable(name: "intr", scope: !14192, file: !3, line: 2834, type: !233)
!14192 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 2833, column: 42)
!14193 = !DILocation(line: 2834, column: 12, scope: !14192)
!14194 = !DILocalVariable(name: "val", scope: !14192, file: !3, line: 2835, type: !233)
!14195 = !DILocation(line: 2835, column: 12, scope: !14192)
!14196 = !DILocation(line: 2837, column: 26, scope: !14192)
!14197 = !DILocation(line: 2837, column: 35, scope: !14192)
!14198 = !DILocation(line: 2837, column: 39, scope: !14192)
!14199 = !DILocation(line: 2837, column: 43, scope: !14192)
!14200 = !DILocation(line: 2837, column: 6, scope: !14192)
!14201 = !DILocation(line: 2839, column: 18, scope: !14192)
!14202 = !DILocation(line: 2839, column: 23, scope: !14192)
!14203 = !DILocation(line: 2839, column: 32, scope: !14192)
!14204 = !DILocation(line: 2839, column: 6, scope: !14192)
!14205 = !DILocation(line: 2841, column: 21, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 2841, column: 10)
!14207 = !DILocation(line: 2841, column: 25, scope: !14206)
!14208 = !DILocation(line: 2841, column: 32, scope: !14206)
!14209 = !DILocation(line: 2841, column: 39, scope: !14206)
!14210 = !DILocation(line: 2841, column: 10, scope: !14206)
!14211 = !DILocation(line: 2841, column: 10, scope: !14192)
!14212 = !DILocalVariable(name: "fade", scope: !14213, file: !3, line: 2842, type: !3072)
!14213 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 2841, column: 45)
!14214 = !DILocation(line: 2842, column: 19, scope: !14213)
!14215 = !DILocation(line: 2842, column: 26, scope: !14213)
!14216 = !DILocation(line: 2842, column: 51, scope: !14213)
!14217 = !DILocation(line: 2842, column: 55, scope: !14213)
!14218 = !DILocation(line: 2842, column: 65, scope: !14213)
!14219 = !DILocation(line: 2843, column: 62, scope: !14213)
!14220 = !DILocation(line: 2843, column: 51, scope: !14213)
!14221 = !DILocation(line: 2844, column: 54, scope: !14213)
!14222 = !DILocation(line: 2844, column: 61, scope: !14213)
!14223 = !DILocation(line: 2844, column: 69, scope: !14213)
!14224 = !DILocation(line: 2844, column: 66, scope: !14213)
!14225 = !DILocation(line: 2844, column: 80, scope: !14213)
!14226 = !DILocation(line: 2844, column: 76, scope: !14213)
!14227 = !DILocation(line: 2842, column: 38, scope: !14213)
!14228 = !DILocation(line: 2842, column: 36, scope: !14213)
!14229 = !DILocation(line: 2846, column: 19, scope: !14213)
!14230 = !DILocation(line: 2846, column: 28, scope: !14213)
!14231 = !DILocation(line: 2846, column: 32, scope: !14213)
!14232 = !DILocation(line: 2846, column: 37, scope: !14213)
!14233 = !DILocation(line: 2846, column: 7, scope: !14213)
!14234 = !DILocation(line: 2848, column: 14, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14213, file: !3, line: 2848, column: 11)
!14236 = !DILocation(line: 2848, column: 11, scope: !14235)
!14237 = !DILocation(line: 2848, column: 11, scope: !14213)
!14238 = !DILocation(line: 2849, column: 11, scope: !14235)
!14239 = !DILocation(line: 2849, column: 18, scope: !14235)
!14240 = !DILocation(line: 2849, column: 23, scope: !14235)
!14241 = !DILocation(line: 2849, column: 8, scope: !14235)
!14242 = !DILocation(line: 2850, column: 6, scope: !14213)
!14243 = !DILocation(line: 2851, column: 5, scope: !14192)
!14244 = !DILocation(line: 2852, column: 4, scope: !14186)
!14245 = !DILocation(line: 2854, column: 3, scope: !14151)
!14246 = distinct !{!14246, !14144, !14247}
!14247 = !DILocation(line: 2854, column: 3, scope: !14145)
!14248 = !DILocation(line: 2854, column: 3, scope: !14146)
!14249 = distinct !{!14249, !14140, !14250}
!14250 = !DILocation(line: 2854, column: 3, scope: !14141)
!14251 = !DILocation(line: 2854, column: 3, scope: !14132)
!14252 = distinct !{!14252, !14126, !14253}
!14253 = !DILocation(line: 2854, column: 3, scope: !14127)
!14254 = !DILocation(line: 2855, column: 2, scope: !14110)
!14255 = !DILocation(line: 2821, column: 28, scope: !14105)
!14256 = !DILocation(line: 2821, column: 2, scope: !14105)
!14257 = distinct !{!14257, !14108, !14258}
!14258 = !DILocation(line: 2855, column: 2, scope: !14102)
!14259 = !DILocation(line: 2856, column: 1, scope: !14035)
!14260 = distinct !DISubprogram(name: "do_scrape_brush", scope: !3, file: !3, line: 2858, type: !4, scopeLine: 2859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14261 = !DILocalVariable(name: "sd", arg: 1, scope: !14260, file: !3, line: 2858, type: !6)
!14262 = !DILocation(line: 2858, column: 37, scope: !14260)
!14263 = !DILocalVariable(name: "ob", arg: 2, scope: !14260, file: !3, line: 2858, type: !3739)
!14264 = !DILocation(line: 2858, column: 49, scope: !14260)
!14265 = !DILocalVariable(name: "nodes", arg: 3, scope: !14260, file: !3, line: 2858, type: !3741)
!14266 = !DILocation(line: 2858, column: 64, scope: !14260)
!14267 = !DILocalVariable(name: "totnode", arg: 4, scope: !14260, file: !3, line: 2858, type: !57)
!14268 = !DILocation(line: 2858, column: 75, scope: !14260)
!14269 = !DILocalVariable(name: "ss", scope: !14260, file: !3, line: 2860, type: !5374)
!14270 = !DILocation(line: 2860, column: 17, scope: !14260)
!14271 = !DILocation(line: 2860, column: 22, scope: !14260)
!14272 = !DILocation(line: 2860, column: 26, scope: !14260)
!14273 = !DILocalVariable(name: "brush", scope: !14260, file: !3, line: 2861, type: !2749)
!14274 = !DILocation(line: 2861, column: 9, scope: !14260)
!14275 = !DILocation(line: 2861, column: 34, scope: !14260)
!14276 = !DILocation(line: 2861, column: 38, scope: !14260)
!14277 = !DILocation(line: 2861, column: 17, scope: !14260)
!14278 = !DILocalVariable(name: "bstrength", scope: !14260, file: !3, line: 2863, type: !153)
!14279 = !DILocation(line: 2863, column: 8, scope: !14260)
!14280 = !DILocation(line: 2863, column: 20, scope: !14260)
!14281 = !DILocation(line: 2863, column: 24, scope: !14260)
!14282 = !DILocation(line: 2863, column: 31, scope: !14260)
!14283 = !DILocalVariable(name: "radius", scope: !14260, file: !3, line: 2864, type: !3072)
!14284 = !DILocation(line: 2864, column: 14, scope: !14260)
!14285 = !DILocation(line: 2864, column: 23, scope: !14260)
!14286 = !DILocation(line: 2864, column: 27, scope: !14260)
!14287 = !DILocation(line: 2864, column: 34, scope: !14260)
!14288 = !DILocalVariable(name: "an", scope: !14260, file: !3, line: 2866, type: !233)
!14289 = !DILocation(line: 2866, column: 8, scope: !14260)
!14290 = !DILocalVariable(name: "fc", scope: !14260, file: !3, line: 2867, type: !233)
!14291 = !DILocation(line: 2867, column: 8, scope: !14260)
!14292 = !DILocalVariable(name: "offset", scope: !14260, file: !3, line: 2868, type: !153)
!14293 = !DILocation(line: 2868, column: 8, scope: !14260)
!14294 = !DILocation(line: 2868, column: 28, scope: !14260)
!14295 = !DILocation(line: 2868, column: 32, scope: !14260)
!14296 = !DILocation(line: 2868, column: 17, scope: !14260)
!14297 = !DILocalVariable(name: "displace", scope: !14260, file: !3, line: 2870, type: !153)
!14298 = !DILocation(line: 2870, column: 8, scope: !14260)
!14299 = !DILocalVariable(name: "n", scope: !14260, file: !3, line: 2872, type: !57)
!14300 = !DILocation(line: 2872, column: 6, scope: !14260)
!14301 = !DILocalVariable(name: "temp", scope: !14260, file: !3, line: 2874, type: !233)
!14302 = !DILocation(line: 2874, column: 8, scope: !14260)
!14303 = !DILocation(line: 2876, column: 20, scope: !14260)
!14304 = !DILocation(line: 2876, column: 24, scope: !14260)
!14305 = !DILocation(line: 2876, column: 28, scope: !14260)
!14306 = !DILocation(line: 2876, column: 35, scope: !14260)
!14307 = !DILocation(line: 2876, column: 44, scope: !14260)
!14308 = !DILocation(line: 2876, column: 48, scope: !14260)
!14309 = !DILocation(line: 2876, column: 2, scope: !14260)
!14310 = !DILocation(line: 2878, column: 14, scope: !14260)
!14311 = !DILocation(line: 2878, column: 13, scope: !14260)
!14312 = !DILocation(line: 2878, column: 23, scope: !14260)
!14313 = !DILocation(line: 2878, column: 21, scope: !14260)
!14314 = !DILocation(line: 2878, column: 11, scope: !14260)
!14315 = !DILocation(line: 2880, column: 14, scope: !14260)
!14316 = !DILocation(line: 2880, column: 20, scope: !14260)
!14317 = !DILocation(line: 2880, column: 24, scope: !14260)
!14318 = !DILocation(line: 2880, column: 28, scope: !14260)
!14319 = !DILocation(line: 2880, column: 35, scope: !14260)
!14320 = !DILocation(line: 2880, column: 2, scope: !14260)
!14321 = !DILocation(line: 2881, column: 12, scope: !14260)
!14322 = !DILocation(line: 2881, column: 18, scope: !14260)
!14323 = !DILocation(line: 2881, column: 2, scope: !14260)
!14324 = !DILocation(line: 2882, column: 12, scope: !14260)
!14325 = !DILocation(line: 2882, column: 16, scope: !14260)
!14326 = !DILocation(line: 2882, column: 2, scope: !14260)
!14327 = !DILocation(line: 2887, column: 9, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 2887, column: 2)
!14329 = !DILocation(line: 2887, column: 7, scope: !14328)
!14330 = !DILocation(line: 2887, column: 14, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 2887, column: 2)
!14332 = !DILocation(line: 2887, column: 18, scope: !14331)
!14333 = !DILocation(line: 2887, column: 16, scope: !14331)
!14334 = !DILocation(line: 2887, column: 2, scope: !14328)
!14335 = !DILocalVariable(name: "vd", scope: !14336, file: !3, line: 2888, type: !9184)
!14336 = distinct !DILexicalBlock(scope: !14331, file: !3, line: 2887, column: 32)
!14337 = !DILocation(line: 2888, column: 18, scope: !14336)
!14338 = !DILocalVariable(name: "test", scope: !14336, file: !3, line: 2889, type: !11350)
!14339 = !DILocation(line: 2889, column: 19, scope: !14336)
!14340 = !DILocalVariable(name: "proxy", scope: !14336, file: !3, line: 2890, type: !2054)
!14341 = !DILocation(line: 2890, column: 11, scope: !14336)
!14342 = !DILocation(line: 2892, column: 35, scope: !14336)
!14343 = !DILocation(line: 2892, column: 39, scope: !14336)
!14344 = !DILocation(line: 2892, column: 45, scope: !14336)
!14345 = !DILocation(line: 2892, column: 51, scope: !14336)
!14346 = !DILocation(line: 2892, column: 11, scope: !14336)
!14347 = !DILocation(line: 2892, column: 56, scope: !14336)
!14348 = !DILocation(line: 2892, column: 9, scope: !14336)
!14349 = !DILocation(line: 2894, column: 26, scope: !14336)
!14350 = !DILocation(line: 2894, column: 3, scope: !14336)
!14351 = !DILocation(line: 2896, column: 3, scope: !14336)
!14352 = !DILocation(line: 2896, column: 3, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14336, file: !3, line: 2896, column: 3)
!14354 = !DILocation(line: 2896, column: 3, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 2896, column: 3)
!14356 = !DILocation(line: 2896, column: 3, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14358, file: !3, line: 2896, column: 3)
!14358 = distinct !DILexicalBlock(scope: !14355, file: !3, line: 2896, column: 3)
!14359 = !DILocation(line: 2896, column: 3, scope: !14358)
!14360 = !DILocation(line: 2896, column: 3, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 2896, column: 3)
!14362 = !DILocation(line: 2896, column: 3, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 2896, column: 3)
!14364 = !DILocation(line: 2896, column: 3, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 2896, column: 3)
!14366 = !DILocation(line: 2896, column: 3, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14358, file: !3, line: 2896, column: 3)
!14368 = !DILocation(line: 2896, column: 3, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14367, file: !3, line: 2896, column: 3)
!14370 = !DILocation(line: 2896, column: 3, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14372, file: !3, line: 2896, column: 3)
!14372 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2896, column: 3)
!14373 = !DILocation(line: 2896, column: 3, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14371, file: !3, line: 2896, column: 3)
!14375 = !DILocation(line: 2896, column: 3, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 2896, column: 3)
!14377 = distinct !DILexicalBlock(scope: !14374, file: !3, line: 2896, column: 3)
!14378 = !DILocation(line: 2896, column: 3, scope: !14377)
!14379 = !DILocation(line: 2896, column: 3, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14376, file: !3, line: 2896, column: 3)
!14381 = !DILocation(line: 2896, column: 3, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14380, file: !3, line: 2896, column: 3)
!14383 = !DILocation(line: 2896, column: 3, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14385, file: !3, line: 2896, column: 3)
!14385 = distinct !DILexicalBlock(scope: !14382, file: !3, line: 2896, column: 3)
!14386 = !DILocation(line: 2896, column: 3, scope: !14385)
!14387 = !DILocation(line: 2896, column: 3, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14376, file: !3, line: 2896, column: 3)
!14389 = !DILocation(line: 2896, column: 3, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2896, column: 3)
!14391 = !DILocation(line: 2896, column: 3, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 2896, column: 3)
!14393 = !DILocation(line: 2896, column: 3, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 2896, column: 3)
!14395 = !DILocation(line: 2896, column: 3, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !3, line: 2896, column: 3)
!14397 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2896, column: 3)
!14398 = !DILocation(line: 2896, column: 3, scope: !14397)
!14399 = !DILocation(line: 2896, column: 3, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 2896, column: 3)
!14401 = !DILocation(line: 2896, column: 3, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 2896, column: 3)
!14403 = !DILocation(line: 2896, column: 3, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14397, file: !3, line: 2896, column: 3)
!14405 = !DILocation(line: 2898, column: 39, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14407, file: !3, line: 2898, column: 8)
!14407 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 2897, column: 3)
!14408 = !DILocation(line: 2898, column: 8, scope: !14406)
!14409 = !DILocation(line: 2898, column: 8, scope: !14407)
!14410 = !DILocation(line: 2899, column: 30, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !3, line: 2899, column: 9)
!14412 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 2898, column: 44)
!14413 = !DILocation(line: 2899, column: 34, scope: !14411)
!14414 = !DILocation(line: 2899, column: 38, scope: !14411)
!14415 = !DILocation(line: 2899, column: 10, scope: !14411)
!14416 = !DILocation(line: 2899, column: 9, scope: !14412)
!14417 = !DILocalVariable(name: "intr", scope: !14418, file: !3, line: 2900, type: !233)
!14418 = distinct !DILexicalBlock(scope: !14411, file: !3, line: 2899, column: 43)
!14419 = !DILocation(line: 2900, column: 12, scope: !14418)
!14420 = !DILocalVariable(name: "val", scope: !14418, file: !3, line: 2901, type: !233)
!14421 = !DILocation(line: 2901, column: 12, scope: !14418)
!14422 = !DILocation(line: 2903, column: 26, scope: !14418)
!14423 = !DILocation(line: 2903, column: 35, scope: !14418)
!14424 = !DILocation(line: 2903, column: 39, scope: !14418)
!14425 = !DILocation(line: 2903, column: 43, scope: !14418)
!14426 = !DILocation(line: 2903, column: 6, scope: !14418)
!14427 = !DILocation(line: 2905, column: 18, scope: !14418)
!14428 = !DILocation(line: 2905, column: 23, scope: !14418)
!14429 = !DILocation(line: 2905, column: 32, scope: !14418)
!14430 = !DILocation(line: 2905, column: 6, scope: !14418)
!14431 = !DILocation(line: 2907, column: 21, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 2907, column: 10)
!14433 = !DILocation(line: 2907, column: 25, scope: !14432)
!14434 = !DILocation(line: 2907, column: 32, scope: !14432)
!14435 = !DILocation(line: 2907, column: 39, scope: !14432)
!14436 = !DILocation(line: 2907, column: 10, scope: !14432)
!14437 = !DILocation(line: 2907, column: 10, scope: !14418)
!14438 = !DILocalVariable(name: "fade", scope: !14439, file: !3, line: 2908, type: !3072)
!14439 = distinct !DILexicalBlock(scope: !14432, file: !3, line: 2907, column: 45)
!14440 = !DILocation(line: 2908, column: 19, scope: !14439)
!14441 = !DILocation(line: 2908, column: 26, scope: !14439)
!14442 = !DILocation(line: 2908, column: 51, scope: !14439)
!14443 = !DILocation(line: 2908, column: 55, scope: !14439)
!14444 = !DILocation(line: 2908, column: 65, scope: !14439)
!14445 = !DILocation(line: 2909, column: 62, scope: !14439)
!14446 = !DILocation(line: 2909, column: 51, scope: !14439)
!14447 = !DILocation(line: 2910, column: 54, scope: !14439)
!14448 = !DILocation(line: 2910, column: 61, scope: !14439)
!14449 = !DILocation(line: 2910, column: 69, scope: !14439)
!14450 = !DILocation(line: 2910, column: 66, scope: !14439)
!14451 = !DILocation(line: 2910, column: 80, scope: !14439)
!14452 = !DILocation(line: 2910, column: 76, scope: !14439)
!14453 = !DILocation(line: 2908, column: 38, scope: !14439)
!14454 = !DILocation(line: 2908, column: 36, scope: !14439)
!14455 = !DILocation(line: 2912, column: 19, scope: !14439)
!14456 = !DILocation(line: 2912, column: 28, scope: !14439)
!14457 = !DILocation(line: 2912, column: 32, scope: !14439)
!14458 = !DILocation(line: 2912, column: 37, scope: !14439)
!14459 = !DILocation(line: 2912, column: 7, scope: !14439)
!14460 = !DILocation(line: 2914, column: 14, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 2914, column: 11)
!14462 = !DILocation(line: 2914, column: 11, scope: !14461)
!14463 = !DILocation(line: 2914, column: 11, scope: !14439)
!14464 = !DILocation(line: 2915, column: 11, scope: !14461)
!14465 = !DILocation(line: 2915, column: 18, scope: !14461)
!14466 = !DILocation(line: 2915, column: 23, scope: !14461)
!14467 = !DILocation(line: 2915, column: 8, scope: !14461)
!14468 = !DILocation(line: 2916, column: 6, scope: !14439)
!14469 = !DILocation(line: 2917, column: 5, scope: !14418)
!14470 = !DILocation(line: 2918, column: 4, scope: !14412)
!14471 = !DILocation(line: 2920, column: 3, scope: !14377)
!14472 = distinct !{!14472, !14370, !14473}
!14473 = !DILocation(line: 2920, column: 3, scope: !14371)
!14474 = !DILocation(line: 2920, column: 3, scope: !14372)
!14475 = distinct !{!14475, !14366, !14476}
!14476 = !DILocation(line: 2920, column: 3, scope: !14367)
!14477 = !DILocation(line: 2920, column: 3, scope: !14358)
!14478 = distinct !{!14478, !14352, !14479}
!14479 = !DILocation(line: 2920, column: 3, scope: !14353)
!14480 = !DILocation(line: 2921, column: 2, scope: !14336)
!14481 = !DILocation(line: 2887, column: 28, scope: !14331)
!14482 = !DILocation(line: 2887, column: 2, scope: !14331)
!14483 = distinct !{!14483, !14334, !14484}
!14484 = !DILocation(line: 2921, column: 2, scope: !14328)
!14485 = !DILocation(line: 2922, column: 1, scope: !14260)
!14486 = distinct !DISubprogram(name: "do_mask_brush", scope: !3, file: !3, line: 1672, type: !4, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14487 = !DILocalVariable(name: "sd", arg: 1, scope: !14486, file: !3, line: 1672, type: !6)
!14488 = !DILocation(line: 1672, column: 35, scope: !14486)
!14489 = !DILocalVariable(name: "ob", arg: 2, scope: !14486, file: !3, line: 1672, type: !3739)
!14490 = !DILocation(line: 1672, column: 47, scope: !14486)
!14491 = !DILocalVariable(name: "nodes", arg: 3, scope: !14486, file: !3, line: 1672, type: !3741)
!14492 = !DILocation(line: 1672, column: 62, scope: !14486)
!14493 = !DILocalVariable(name: "totnode", arg: 4, scope: !14486, file: !3, line: 1672, type: !57)
!14494 = !DILocation(line: 1672, column: 73, scope: !14486)
!14495 = !DILocalVariable(name: "ss", scope: !14486, file: !3, line: 1674, type: !5374)
!14496 = !DILocation(line: 1674, column: 17, scope: !14486)
!14497 = !DILocation(line: 1674, column: 22, scope: !14486)
!14498 = !DILocation(line: 1674, column: 26, scope: !14486)
!14499 = !DILocalVariable(name: "brush", scope: !14486, file: !3, line: 1675, type: !2749)
!14500 = !DILocation(line: 1675, column: 9, scope: !14486)
!14501 = !DILocation(line: 1675, column: 34, scope: !14486)
!14502 = !DILocation(line: 1675, column: 38, scope: !14486)
!14503 = !DILocation(line: 1675, column: 17, scope: !14486)
!14504 = !DILocation(line: 1677, column: 25, scope: !14486)
!14505 = !DILocation(line: 1677, column: 32, scope: !14486)
!14506 = !DILocation(line: 1677, column: 10, scope: !14486)
!14507 = !DILocation(line: 1677, column: 2, scope: !14486)
!14508 = !DILocation(line: 1679, column: 23, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 1677, column: 43)
!14510 = !DILocation(line: 1679, column: 27, scope: !14509)
!14511 = !DILocation(line: 1679, column: 31, scope: !14509)
!14512 = !DILocation(line: 1679, column: 38, scope: !14509)
!14513 = !DILocation(line: 1679, column: 4, scope: !14509)
!14514 = !DILocation(line: 1680, column: 4, scope: !14509)
!14515 = !DILocation(line: 1682, column: 11, scope: !14509)
!14516 = !DILocation(line: 1682, column: 15, scope: !14509)
!14517 = !DILocation(line: 1682, column: 19, scope: !14509)
!14518 = !DILocation(line: 1682, column: 26, scope: !14509)
!14519 = !DILocation(line: 1682, column: 35, scope: !14509)
!14520 = !DILocation(line: 1682, column: 39, scope: !14509)
!14521 = !DILocation(line: 1682, column: 46, scope: !14509)
!14522 = !DILocation(line: 1682, column: 4, scope: !14509)
!14523 = !DILocation(line: 1683, column: 4, scope: !14509)
!14524 = !DILocation(line: 1685, column: 1, scope: !14486)
!14525 = distinct !DISubprogram(name: "smooth", scope: !3, file: !3, line: 1585, type: !14526, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{null, !6, !3739, !3741, !57, !153, !57}
!14528 = !DILocalVariable(name: "sd", arg: 1, scope: !14525, file: !3, line: 1585, type: !6)
!14529 = !DILocation(line: 1585, column: 28, scope: !14525)
!14530 = !DILocalVariable(name: "ob", arg: 2, scope: !14525, file: !3, line: 1585, type: !3739)
!14531 = !DILocation(line: 1585, column: 40, scope: !14525)
!14532 = !DILocalVariable(name: "nodes", arg: 3, scope: !14525, file: !3, line: 1585, type: !3741)
!14533 = !DILocation(line: 1585, column: 55, scope: !14525)
!14534 = !DILocalVariable(name: "totnode", arg: 4, scope: !14525, file: !3, line: 1585, type: !57)
!14535 = !DILocation(line: 1585, column: 66, scope: !14525)
!14536 = !DILocalVariable(name: "bstrength", arg: 5, scope: !14525, file: !3, line: 1586, type: !153)
!14537 = !DILocation(line: 1586, column: 26, scope: !14525)
!14538 = !DILocalVariable(name: "smooth_mask", arg: 6, scope: !14525, file: !3, line: 1586, type: !57)
!14539 = !DILocation(line: 1586, column: 41, scope: !14525)
!14540 = !DILocalVariable(name: "ss", scope: !14525, file: !3, line: 1588, type: !5374)
!14541 = !DILocation(line: 1588, column: 17, scope: !14525)
!14542 = !DILocation(line: 1588, column: 22, scope: !14525)
!14543 = !DILocation(line: 1588, column: 26, scope: !14525)
!14544 = !DILocalVariable(name: "max_iterations", scope: !14525, file: !3, line: 1589, type: !5191)
!14545 = !DILocation(line: 1589, column: 12, scope: !14525)
!14546 = !DILocalVariable(name: "fract", scope: !14525, file: !3, line: 1590, type: !3072)
!14547 = !DILocation(line: 1590, column: 14, scope: !14525)
!14548 = !DILocalVariable(name: "type", scope: !14525, file: !3, line: 1591, type: !14549)
!14549 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHType", file: !2319, line: 122, baseType: !3878)
!14550 = !DILocation(line: 1591, column: 11, scope: !14525)
!14551 = !DILocation(line: 1591, column: 32, scope: !14525)
!14552 = !DILocation(line: 1591, column: 36, scope: !14525)
!14553 = !DILocation(line: 1591, column: 18, scope: !14525)
!14554 = !DILocalVariable(name: "iteration", scope: !14525, file: !3, line: 1592, type: !57)
!14555 = !DILocation(line: 1592, column: 6, scope: !14525)
!14556 = !DILocalVariable(name: "n", scope: !14525, file: !3, line: 1592, type: !57)
!14557 = !DILocation(line: 1592, column: 17, scope: !14525)
!14558 = !DILocalVariable(name: "count", scope: !14525, file: !3, line: 1592, type: !57)
!14559 = !DILocation(line: 1592, column: 20, scope: !14525)
!14560 = !DILocalVariable(name: "last", scope: !14525, file: !3, line: 1593, type: !153)
!14561 = !DILocation(line: 1593, column: 8, scope: !14525)
!14562 = !DILocation(line: 1595, column: 2, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14564, file: !3, line: 1595, column: 2)
!14564 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 1595, column: 2)
!14565 = !DILocation(line: 1595, column: 2, scope: !14564)
!14566 = !DILocation(line: 1595, column: 2, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14563, file: !3, line: 1595, column: 2)
!14568 = !DILocation(line: 1597, column: 16, scope: !14525)
!14569 = !DILocation(line: 1597, column: 26, scope: !14525)
!14570 = !DILocation(line: 1597, column: 10, scope: !14525)
!14571 = !DILocation(line: 1597, column: 8, scope: !14525)
!14572 = !DILocation(line: 1598, column: 28, scope: !14525)
!14573 = !DILocation(line: 1598, column: 40, scope: !14525)
!14574 = !DILocation(line: 1598, column: 46, scope: !14525)
!14575 = !DILocation(line: 1598, column: 38, scope: !14525)
!14576 = !DILocation(line: 1598, column: 25, scope: !14525)
!14577 = !DILocation(line: 1598, column: 8, scope: !14525)
!14578 = !DILocation(line: 1600, column: 6, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 1600, column: 6)
!14580 = !DILocation(line: 1600, column: 11, scope: !14579)
!14581 = !DILocation(line: 1600, column: 25, scope: !14579)
!14582 = !DILocation(line: 1600, column: 29, scope: !14579)
!14583 = !DILocation(line: 1600, column: 33, scope: !14579)
!14584 = !DILocation(line: 1600, column: 6, scope: !14525)
!14585 = !DILocation(line: 1602, column: 3, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 1600, column: 39)
!14587 = !DILocation(line: 1605, column: 17, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 1605, column: 2)
!14589 = !DILocation(line: 1605, column: 7, scope: !14588)
!14590 = !DILocation(line: 1605, column: 22, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 1605, column: 2)
!14592 = !DILocation(line: 1605, column: 35, scope: !14591)
!14593 = !DILocation(line: 1605, column: 32, scope: !14591)
!14594 = !DILocation(line: 1605, column: 2, scope: !14588)
!14595 = !DILocalVariable(name: "strength", scope: !14596, file: !3, line: 1606, type: !153)
!14596 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 1605, column: 55)
!14597 = !DILocation(line: 1606, column: 9, scope: !14596)
!14598 = !DILocation(line: 1606, column: 21, scope: !14596)
!14599 = !DILocation(line: 1606, column: 34, scope: !14596)
!14600 = !DILocation(line: 1606, column: 31, scope: !14596)
!14601 = !DILocation(line: 1606, column: 20, scope: !14596)
!14602 = !DILocation(line: 1606, column: 50, scope: !14596)
!14603 = !DILocation(line: 1611, column: 10, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 1611, column: 3)
!14605 = !DILocation(line: 1611, column: 8, scope: !14604)
!14606 = !DILocation(line: 1611, column: 15, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14604, file: !3, line: 1611, column: 3)
!14608 = !DILocation(line: 1611, column: 19, scope: !14607)
!14609 = !DILocation(line: 1611, column: 17, scope: !14607)
!14610 = !DILocation(line: 1611, column: 3, scope: !14604)
!14611 = !DILocation(line: 1612, column: 12, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14607, file: !3, line: 1611, column: 33)
!14613 = !DILocation(line: 1612, column: 4, scope: !14612)
!14614 = !DILocation(line: 1614, column: 31, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 1612, column: 18)
!14616 = !DILocation(line: 1614, column: 35, scope: !14615)
!14617 = !DILocation(line: 1614, column: 39, scope: !14615)
!14618 = !DILocation(line: 1614, column: 45, scope: !14615)
!14619 = !DILocation(line: 1614, column: 49, scope: !14615)
!14620 = !DILocation(line: 1615, column: 31, scope: !14615)
!14621 = !DILocation(line: 1614, column: 6, scope: !14615)
!14622 = !DILocation(line: 1616, column: 6, scope: !14615)
!14623 = !DILocation(line: 1618, column: 27, scope: !14615)
!14624 = !DILocation(line: 1618, column: 31, scope: !14615)
!14625 = !DILocation(line: 1618, column: 35, scope: !14615)
!14626 = !DILocation(line: 1618, column: 41, scope: !14615)
!14627 = !DILocation(line: 1618, column: 45, scope: !14615)
!14628 = !DILocation(line: 1619, column: 27, scope: !14615)
!14629 = !DILocation(line: 1618, column: 6, scope: !14615)
!14630 = !DILocation(line: 1620, column: 6, scope: !14615)
!14631 = !DILocation(line: 1622, column: 28, scope: !14615)
!14632 = !DILocation(line: 1622, column: 32, scope: !14615)
!14633 = !DILocation(line: 1622, column: 36, scope: !14615)
!14634 = !DILocation(line: 1622, column: 42, scope: !14615)
!14635 = !DILocation(line: 1622, column: 46, scope: !14615)
!14636 = !DILocation(line: 1622, column: 56, scope: !14615)
!14637 = !DILocation(line: 1622, column: 6, scope: !14615)
!14638 = !DILocation(line: 1623, column: 6, scope: !14615)
!14639 = !DILocation(line: 1625, column: 3, scope: !14612)
!14640 = !DILocation(line: 1611, column: 29, scope: !14607)
!14641 = !DILocation(line: 1611, column: 3, scope: !14607)
!14642 = distinct !{!14642, !14610, !14643}
!14643 = !DILocation(line: 1625, column: 3, scope: !14604)
!14644 = !DILocation(line: 1627, column: 7, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 1627, column: 7)
!14646 = !DILocation(line: 1627, column: 11, scope: !14645)
!14647 = !DILocation(line: 1627, column: 7, scope: !14596)
!14648 = !DILocation(line: 1628, column: 26, scope: !14645)
!14649 = !DILocation(line: 1628, column: 4, scope: !14645)
!14650 = !DILocation(line: 1629, column: 2, scope: !14596)
!14651 = !DILocation(line: 1605, column: 42, scope: !14591)
!14652 = !DILocation(line: 1605, column: 2, scope: !14591)
!14653 = distinct !{!14653, !14594, !14654}
!14654 = !DILocation(line: 1629, column: 2, scope: !14588)
!14655 = !DILocation(line: 1630, column: 1, scope: !14525)
!14656 = distinct !DISubprogram(name: "do_gravity", scope: !3, file: !3, line: 2924, type: !14657, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{null, !6, !3739, !3741, !57, !153}
!14659 = !DILocalVariable(name: "sd", arg: 1, scope: !14656, file: !3, line: 2924, type: !6)
!14660 = !DILocation(line: 2924, column: 32, scope: !14656)
!14661 = !DILocalVariable(name: "ob", arg: 2, scope: !14656, file: !3, line: 2924, type: !3739)
!14662 = !DILocation(line: 2924, column: 44, scope: !14656)
!14663 = !DILocalVariable(name: "nodes", arg: 3, scope: !14656, file: !3, line: 2924, type: !3741)
!14664 = !DILocation(line: 2924, column: 59, scope: !14656)
!14665 = !DILocalVariable(name: "totnode", arg: 4, scope: !14656, file: !3, line: 2924, type: !57)
!14666 = !DILocation(line: 2924, column: 70, scope: !14656)
!14667 = !DILocalVariable(name: "bstrength", arg: 5, scope: !14656, file: !3, line: 2924, type: !153)
!14668 = !DILocation(line: 2924, column: 85, scope: !14656)
!14669 = !DILocalVariable(name: "ss", scope: !14656, file: !3, line: 2926, type: !5374)
!14670 = !DILocation(line: 2926, column: 17, scope: !14656)
!14671 = !DILocation(line: 2926, column: 22, scope: !14656)
!14672 = !DILocation(line: 2926, column: 26, scope: !14656)
!14673 = !DILocalVariable(name: "brush", scope: !14656, file: !3, line: 2927, type: !2749)
!14674 = !DILocation(line: 2927, column: 9, scope: !14656)
!14675 = !DILocation(line: 2927, column: 34, scope: !14656)
!14676 = !DILocation(line: 2927, column: 38, scope: !14656)
!14677 = !DILocation(line: 2927, column: 17, scope: !14656)
!14678 = !DILocalVariable(name: "offset", scope: !14656, file: !3, line: 2929, type: !233)
!14679 = !DILocation(line: 2929, column: 8, scope: !14656)
!14680 = !DILocalVariable(name: "n", scope: !14656, file: !3, line: 2930, type: !57)
!14681 = !DILocation(line: 2930, column: 6, scope: !14656)
!14682 = !DILocalVariable(name: "gravity_vector", scope: !14656, file: !3, line: 2931, type: !233)
!14683 = !DILocation(line: 2931, column: 8, scope: !14656)
!14684 = !DILocation(line: 2933, column: 14, scope: !14656)
!14685 = !DILocation(line: 2933, column: 30, scope: !14656)
!14686 = !DILocation(line: 2933, column: 34, scope: !14656)
!14687 = !DILocation(line: 2933, column: 41, scope: !14656)
!14688 = !DILocation(line: 2933, column: 61, scope: !14656)
!14689 = !DILocation(line: 2933, column: 65, scope: !14656)
!14690 = !DILocation(line: 2933, column: 72, scope: !14656)
!14691 = !DILocation(line: 2933, column: 60, scope: !14656)
!14692 = !DILocation(line: 2933, column: 2, scope: !14656)
!14693 = !DILocation(line: 2936, column: 14, scope: !14656)
!14694 = !DILocation(line: 2936, column: 22, scope: !14656)
!14695 = !DILocation(line: 2936, column: 38, scope: !14656)
!14696 = !DILocation(line: 2936, column: 42, scope: !14656)
!14697 = !DILocation(line: 2936, column: 49, scope: !14656)
!14698 = !DILocation(line: 2936, column: 2, scope: !14656)
!14699 = !DILocation(line: 2937, column: 12, scope: !14656)
!14700 = !DILocation(line: 2937, column: 20, scope: !14656)
!14701 = !DILocation(line: 2937, column: 2, scope: !14656)
!14702 = !DILocation(line: 2943, column: 9, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 2943, column: 2)
!14704 = !DILocation(line: 2943, column: 7, scope: !14703)
!14705 = !DILocation(line: 2943, column: 14, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14703, file: !3, line: 2943, column: 2)
!14707 = !DILocation(line: 2943, column: 18, scope: !14706)
!14708 = !DILocation(line: 2943, column: 16, scope: !14706)
!14709 = !DILocation(line: 2943, column: 2, scope: !14703)
!14710 = !DILocalVariable(name: "vd", scope: !14711, file: !3, line: 2944, type: !9184)
!14711 = distinct !DILexicalBlock(scope: !14706, file: !3, line: 2943, column: 32)
!14712 = !DILocation(line: 2944, column: 18, scope: !14711)
!14713 = !DILocalVariable(name: "test", scope: !14711, file: !3, line: 2945, type: !11350)
!14714 = !DILocation(line: 2945, column: 19, scope: !14711)
!14715 = !DILocalVariable(name: "proxy", scope: !14711, file: !3, line: 2946, type: !2054)
!14716 = !DILocation(line: 2946, column: 11, scope: !14711)
!14717 = !DILocation(line: 2948, column: 35, scope: !14711)
!14718 = !DILocation(line: 2948, column: 39, scope: !14711)
!14719 = !DILocation(line: 2948, column: 45, scope: !14711)
!14720 = !DILocation(line: 2948, column: 51, scope: !14711)
!14721 = !DILocation(line: 2948, column: 11, scope: !14711)
!14722 = !DILocation(line: 2948, column: 56, scope: !14711)
!14723 = !DILocation(line: 2948, column: 9, scope: !14711)
!14724 = !DILocation(line: 2950, column: 26, scope: !14711)
!14725 = !DILocation(line: 2950, column: 3, scope: !14711)
!14726 = !DILocation(line: 2952, column: 3, scope: !14711)
!14727 = !DILocation(line: 2952, column: 3, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14711, file: !3, line: 2952, column: 3)
!14729 = !DILocation(line: 2952, column: 3, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14728, file: !3, line: 2952, column: 3)
!14731 = !DILocation(line: 2952, column: 3, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 2952, column: 3)
!14733 = distinct !DILexicalBlock(scope: !14730, file: !3, line: 2952, column: 3)
!14734 = !DILocation(line: 2952, column: 3, scope: !14733)
!14735 = !DILocation(line: 2952, column: 3, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 2952, column: 3)
!14737 = !DILocation(line: 2952, column: 3, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14736, file: !3, line: 2952, column: 3)
!14739 = !DILocation(line: 2952, column: 3, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 2952, column: 3)
!14741 = !DILocation(line: 2952, column: 3, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 2952, column: 3)
!14743 = !DILocation(line: 2952, column: 3, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 2952, column: 3)
!14745 = !DILocation(line: 2952, column: 3, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14747, file: !3, line: 2952, column: 3)
!14747 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 2952, column: 3)
!14748 = !DILocation(line: 2952, column: 3, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 2952, column: 3)
!14750 = !DILocation(line: 2952, column: 3, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 2952, column: 3)
!14752 = distinct !DILexicalBlock(scope: !14749, file: !3, line: 2952, column: 3)
!14753 = !DILocation(line: 2952, column: 3, scope: !14752)
!14754 = !DILocation(line: 2952, column: 3, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 2952, column: 3)
!14756 = !DILocation(line: 2952, column: 3, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 2952, column: 3)
!14758 = !DILocation(line: 2952, column: 3, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 2952, column: 3)
!14760 = distinct !DILexicalBlock(scope: !14757, file: !3, line: 2952, column: 3)
!14761 = !DILocation(line: 2952, column: 3, scope: !14760)
!14762 = !DILocation(line: 2952, column: 3, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 2952, column: 3)
!14764 = !DILocation(line: 2952, column: 3, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 2952, column: 3)
!14766 = !DILocation(line: 2952, column: 3, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 2952, column: 3)
!14768 = !DILocation(line: 2952, column: 3, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 2952, column: 3)
!14770 = !DILocation(line: 2952, column: 3, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14772, file: !3, line: 2952, column: 3)
!14772 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 2952, column: 3)
!14773 = !DILocation(line: 2952, column: 3, scope: !14772)
!14774 = !DILocation(line: 2952, column: 3, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 2952, column: 3)
!14776 = !DILocation(line: 2952, column: 3, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 2952, column: 3)
!14778 = !DILocation(line: 2952, column: 3, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14772, file: !3, line: 2952, column: 3)
!14780 = !DILocation(line: 2953, column: 39, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14782, file: !3, line: 2953, column: 8)
!14782 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 2952, column: 72)
!14783 = !DILocation(line: 2953, column: 8, scope: !14781)
!14784 = !DILocation(line: 2953, column: 8, scope: !14782)
!14785 = !DILocalVariable(name: "fade", scope: !14786, file: !3, line: 2954, type: !3072)
!14786 = distinct !DILexicalBlock(scope: !14781, file: !3, line: 2953, column: 44)
!14787 = !DILocation(line: 2954, column: 17, scope: !14786)
!14788 = !DILocation(line: 2954, column: 37, scope: !14786)
!14789 = !DILocation(line: 2954, column: 41, scope: !14786)
!14790 = !DILocation(line: 2954, column: 51, scope: !14786)
!14791 = !DILocation(line: 2954, column: 66, scope: !14786)
!14792 = !DILocation(line: 2954, column: 55, scope: !14786)
!14793 = !DILocation(line: 2954, column: 76, scope: !14786)
!14794 = !DILocation(line: 2955, column: 40, scope: !14786)
!14795 = !DILocation(line: 2955, column: 48, scope: !14786)
!14796 = !DILocation(line: 2955, column: 45, scope: !14786)
!14797 = !DILocation(line: 2955, column: 59, scope: !14786)
!14798 = !DILocation(line: 2955, column: 55, scope: !14786)
!14799 = !DILocation(line: 2954, column: 24, scope: !14786)
!14800 = !DILocation(line: 2957, column: 17, scope: !14786)
!14801 = !DILocation(line: 2957, column: 26, scope: !14786)
!14802 = !DILocation(line: 2957, column: 30, scope: !14786)
!14803 = !DILocation(line: 2957, column: 38, scope: !14786)
!14804 = !DILocation(line: 2957, column: 5, scope: !14786)
!14805 = !DILocation(line: 2959, column: 12, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 2959, column: 9)
!14807 = !DILocation(line: 2959, column: 9, scope: !14806)
!14808 = !DILocation(line: 2959, column: 9, scope: !14786)
!14809 = !DILocation(line: 2960, column: 9, scope: !14806)
!14810 = !DILocation(line: 2960, column: 16, scope: !14806)
!14811 = !DILocation(line: 2960, column: 21, scope: !14806)
!14812 = !DILocation(line: 2960, column: 6, scope: !14806)
!14813 = !DILocation(line: 2961, column: 4, scope: !14786)
!14814 = !DILocation(line: 2963, column: 3, scope: !14752)
!14815 = distinct !{!14815, !14745, !14816}
!14816 = !DILocation(line: 2963, column: 3, scope: !14746)
!14817 = !DILocation(line: 2963, column: 3, scope: !14747)
!14818 = distinct !{!14818, !14741, !14819}
!14819 = !DILocation(line: 2963, column: 3, scope: !14742)
!14820 = !DILocation(line: 2963, column: 3, scope: !14733)
!14821 = distinct !{!14821, !14727, !14822}
!14822 = !DILocation(line: 2963, column: 3, scope: !14728)
!14823 = !DILocation(line: 2964, column: 2, scope: !14711)
!14824 = !DILocation(line: 2943, column: 28, scope: !14706)
!14825 = !DILocation(line: 2943, column: 2, scope: !14706)
!14826 = distinct !{!14826, !14709, !14827}
!14827 = !DILocation(line: 2964, column: 2, scope: !14703)
!14828 = !DILocation(line: 2965, column: 1, scope: !14656)
!14829 = distinct !DISubprogram(name: "calc_sculpt_normal", scope: !3, file: !3, line: 1057, type: !14830, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14830 = !DISubroutineType(types: !14831)
!14831 = !{null, !6, !3739, !3741, !57, !359}
!14832 = !DILocalVariable(name: "sd", arg: 1, scope: !14829, file: !3, line: 1057, type: !6)
!14833 = !DILocation(line: 1057, column: 40, scope: !14829)
!14834 = !DILocalVariable(name: "ob", arg: 2, scope: !14829, file: !3, line: 1057, type: !3739)
!14835 = !DILocation(line: 1057, column: 52, scope: !14829)
!14836 = !DILocalVariable(name: "nodes", arg: 3, scope: !14829, file: !3, line: 1058, type: !3741)
!14837 = !DILocation(line: 1058, column: 43, scope: !14829)
!14838 = !DILocalVariable(name: "totnode", arg: 4, scope: !14829, file: !3, line: 1058, type: !57)
!14839 = !DILocation(line: 1058, column: 54, scope: !14829)
!14840 = !DILocalVariable(name: "an", arg: 5, scope: !14829, file: !3, line: 1059, type: !359)
!14841 = !DILocation(line: 1059, column: 38, scope: !14829)
!14842 = !DILocalVariable(name: "brush", scope: !14829, file: !3, line: 1061, type: !6733)
!14843 = !DILocation(line: 1061, column: 15, scope: !14829)
!14844 = !DILocation(line: 1061, column: 40, scope: !14829)
!14845 = !DILocation(line: 1061, column: 44, scope: !14829)
!14846 = !DILocation(line: 1061, column: 23, scope: !14829)
!14847 = !DILocalVariable(name: "ss", scope: !14829, file: !3, line: 1062, type: !8549)
!14848 = !DILocation(line: 1062, column: 23, scope: !14829)
!14849 = !DILocation(line: 1062, column: 28, scope: !14829)
!14850 = !DILocation(line: 1062, column: 32, scope: !14829)
!14851 = !DILocation(line: 1064, column: 10, scope: !14829)
!14852 = !DILocation(line: 1064, column: 17, scope: !14829)
!14853 = !DILocation(line: 1064, column: 2, scope: !14829)
!14854 = !DILocation(line: 1066, column: 15, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 1064, column: 31)
!14856 = !DILocation(line: 1066, column: 19, scope: !14855)
!14857 = !DILocation(line: 1066, column: 23, scope: !14855)
!14858 = !DILocation(line: 1066, column: 30, scope: !14855)
!14859 = !DILocation(line: 1066, column: 4, scope: !14855)
!14860 = !DILocation(line: 1067, column: 4, scope: !14855)
!14861 = !DILocation(line: 1070, column: 4, scope: !14855)
!14862 = !DILocation(line: 1070, column: 10, scope: !14855)
!14863 = !DILocation(line: 1071, column: 4, scope: !14855)
!14864 = !DILocation(line: 1071, column: 10, scope: !14855)
!14865 = !DILocation(line: 1072, column: 4, scope: !14855)
!14866 = !DILocation(line: 1072, column: 10, scope: !14855)
!14867 = !DILocation(line: 1073, column: 4, scope: !14855)
!14868 = !DILocation(line: 1076, column: 4, scope: !14855)
!14869 = !DILocation(line: 1076, column: 10, scope: !14855)
!14870 = !DILocation(line: 1077, column: 4, scope: !14855)
!14871 = !DILocation(line: 1077, column: 10, scope: !14855)
!14872 = !DILocation(line: 1078, column: 4, scope: !14855)
!14873 = !DILocation(line: 1078, column: 10, scope: !14855)
!14874 = !DILocation(line: 1079, column: 4, scope: !14855)
!14875 = !DILocation(line: 1082, column: 4, scope: !14855)
!14876 = !DILocation(line: 1082, column: 10, scope: !14855)
!14877 = !DILocation(line: 1083, column: 4, scope: !14855)
!14878 = !DILocation(line: 1083, column: 10, scope: !14855)
!14879 = !DILocation(line: 1084, column: 4, scope: !14855)
!14880 = !DILocation(line: 1084, column: 10, scope: !14855)
!14881 = !DILocation(line: 1085, column: 4, scope: !14855)
!14882 = !DILocation(line: 1088, column: 21, scope: !14855)
!14883 = !DILocation(line: 1088, column: 25, scope: !14855)
!14884 = !DILocation(line: 1088, column: 29, scope: !14855)
!14885 = !DILocation(line: 1088, column: 33, scope: !14855)
!14886 = !DILocation(line: 1088, column: 40, scope: !14855)
!14887 = !DILocation(line: 1088, column: 4, scope: !14855)
!14888 = !DILocation(line: 1089, column: 4, scope: !14855)
!14889 = !DILocation(line: 1092, column: 4, scope: !14855)
!14890 = !DILocation(line: 1094, column: 1, scope: !14829)
!14891 = distinct !DISubprogram(name: "flip_v3", scope: !3, file: !3, line: 665, type: !14892, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14892 = !DISubroutineType(types: !14893)
!14893 = !{null, !359, !487}
!14894 = !DILocalVariable(name: "v", arg: 1, scope: !14891, file: !3, line: 665, type: !359)
!14895 = !DILocation(line: 665, column: 27, scope: !14891)
!14896 = !DILocalVariable(name: "symm", arg: 2, scope: !14891, file: !3, line: 665, type: !487)
!14897 = !DILocation(line: 665, column: 44, scope: !14891)
!14898 = !DILocation(line: 667, column: 13, scope: !14891)
!14899 = !DILocation(line: 667, column: 16, scope: !14891)
!14900 = !DILocation(line: 667, column: 19, scope: !14891)
!14901 = !DILocation(line: 667, column: 2, scope: !14891)
!14902 = !DILocation(line: 668, column: 1, scope: !14891)
!14903 = distinct !DISubprogram(name: "calc_area_normal", scope: !3, file: !3, line: 969, type: !14904, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{null, !6, !3739, !359, !3741, !57}
!14906 = !DILocalVariable(name: "sd", arg: 1, scope: !14903, file: !3, line: 969, type: !6)
!14907 = !DILocation(line: 969, column: 38, scope: !14903)
!14908 = !DILocalVariable(name: "ob", arg: 2, scope: !14903, file: !3, line: 969, type: !3739)
!14909 = !DILocation(line: 969, column: 50, scope: !14903)
!14910 = !DILocalVariable(name: "an", arg: 3, scope: !14903, file: !3, line: 969, type: !359)
!14911 = !DILocation(line: 969, column: 60, scope: !14903)
!14912 = !DILocalVariable(name: "nodes", arg: 4, scope: !14903, file: !3, line: 969, type: !3741)
!14913 = !DILocation(line: 969, column: 78, scope: !14903)
!14914 = !DILocalVariable(name: "totnode", arg: 5, scope: !14903, file: !3, line: 969, type: !57)
!14915 = !DILocation(line: 969, column: 89, scope: !14903)
!14916 = !DILocalVariable(name: "out_flip", scope: !14903, file: !3, line: 971, type: !233)
!14917 = !DILocation(line: 971, column: 8, scope: !14903)
!14918 = !DILocalVariable(name: "ss", scope: !14903, file: !3, line: 973, type: !5374)
!14919 = !DILocation(line: 973, column: 17, scope: !14903)
!14920 = !DILocation(line: 973, column: 22, scope: !14903)
!14921 = !DILocation(line: 973, column: 26, scope: !14903)
!14922 = !DILocalVariable(name: "brush", scope: !14903, file: !3, line: 974, type: !6733)
!14923 = !DILocation(line: 974, column: 15, scope: !14903)
!14924 = !DILocation(line: 974, column: 40, scope: !14903)
!14925 = !DILocation(line: 974, column: 44, scope: !14903)
!14926 = !DILocation(line: 974, column: 23, scope: !14903)
!14927 = !DILocalVariable(name: "n", scope: !14903, file: !3, line: 975, type: !57)
!14928 = !DILocation(line: 975, column: 6, scope: !14903)
!14929 = !DILocalVariable(name: "original", scope: !14903, file: !3, line: 976, type: !2315)
!14930 = !DILocation(line: 976, column: 7, scope: !14903)
!14931 = !DILocation(line: 980, column: 31, scope: !14903)
!14932 = !DILocation(line: 980, column: 35, scope: !14903)
!14933 = !DILocation(line: 980, column: 14, scope: !14903)
!14934 = !DILocation(line: 980, column: 43, scope: !14903)
!14935 = !DILocation(line: 980, column: 55, scope: !14903)
!14936 = !DILocation(line: 981, column: 21, scope: !14903)
!14937 = !DILocation(line: 981, column: 25, scope: !14903)
!14938 = !DILocation(line: 981, column: 32, scope: !14903)
!14939 = !DILocation(line: 980, column: 13, scope: !14903)
!14940 = !DILocation(line: 980, column: 11, scope: !14903)
!14941 = !DILocation(line: 991, column: 6, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 991, column: 6)
!14943 = !DILocation(line: 991, column: 10, scope: !14942)
!14944 = !DILocation(line: 991, column: 13, scope: !14942)
!14945 = !DILocation(line: 991, column: 16, scope: !14942)
!14946 = !DILocation(line: 991, column: 23, scope: !14942)
!14947 = !DILocation(line: 991, column: 35, scope: !14942)
!14948 = !DILocation(line: 991, column: 6, scope: !14903)
!14949 = !DILocation(line: 992, column: 12, scope: !14942)
!14950 = !DILocation(line: 992, column: 3, scope: !14942)
!14951 = !DILocation(line: 994, column: 8, scope: !14903)
!14952 = !DILocation(line: 996, column: 10, scope: !14903)
!14953 = !DILocation(line: 996, column: 2, scope: !14903)
!14954 = !DILocation(line: 1001, column: 9, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 1001, column: 2)
!14956 = !DILocation(line: 1001, column: 7, scope: !14955)
!14957 = !DILocation(line: 1001, column: 14, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14955, file: !3, line: 1001, column: 2)
!14959 = !DILocation(line: 1001, column: 18, scope: !14958)
!14960 = !DILocation(line: 1001, column: 16, scope: !14958)
!14961 = !DILocation(line: 1001, column: 2, scope: !14955)
!14962 = !DILocalVariable(name: "vd", scope: !14963, file: !3, line: 1002, type: !9184)
!14963 = distinct !DILexicalBlock(scope: !14958, file: !3, line: 1001, column: 32)
!14964 = !DILocation(line: 1002, column: 18, scope: !14963)
!14965 = !DILocalVariable(name: "test", scope: !14963, file: !3, line: 1003, type: !11350)
!14966 = !DILocation(line: 1003, column: 19, scope: !14963)
!14967 = !DILocalVariable(name: "unode", scope: !14963, file: !3, line: 1004, type: !5893)
!14968 = !DILocation(line: 1004, column: 19, scope: !14963)
!14969 = !DILocalVariable(name: "private_an", scope: !14963, file: !3, line: 1005, type: !233)
!14970 = !DILocation(line: 1005, column: 9, scope: !14963)
!14971 = !DILocalVariable(name: "private_out_flip", scope: !14963, file: !3, line: 1006, type: !233)
!14972 = !DILocation(line: 1006, column: 9, scope: !14963)
!14973 = !DILocation(line: 1008, column: 33, scope: !14963)
!14974 = !DILocation(line: 1008, column: 37, scope: !14963)
!14975 = !DILocation(line: 1008, column: 43, scope: !14963)
!14976 = !DILocation(line: 1008, column: 11, scope: !14963)
!14977 = !DILocation(line: 1008, column: 9, scope: !14963)
!14978 = !DILocation(line: 1009, column: 26, scope: !14963)
!14979 = !DILocation(line: 1009, column: 3, scope: !14963)
!14980 = !DILocation(line: 1011, column: 7, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 1011, column: 7)
!14982 = !DILocation(line: 1011, column: 7, scope: !14963)
!14983 = !DILocation(line: 1012, column: 4, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14981, file: !3, line: 1011, column: 17)
!14985 = !DILocation(line: 1012, column: 4, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14984, file: !3, line: 1012, column: 4)
!14987 = !DILocation(line: 1012, column: 4, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14986, file: !3, line: 1012, column: 4)
!14989 = !DILocation(line: 1012, column: 4, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 1012, column: 4)
!14991 = distinct !DILexicalBlock(scope: !14988, file: !3, line: 1012, column: 4)
!14992 = !DILocation(line: 1012, column: 4, scope: !14991)
!14993 = !DILocation(line: 1012, column: 4, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 1012, column: 4)
!14995 = !DILocation(line: 1012, column: 4, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14994, file: !3, line: 1012, column: 4)
!14997 = !DILocation(line: 1012, column: 4, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 1012, column: 4)
!14999 = !DILocation(line: 1012, column: 4, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 1012, column: 4)
!15001 = !DILocation(line: 1012, column: 4, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !15000, file: !3, line: 1012, column: 4)
!15003 = !DILocation(line: 1012, column: 4, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 1012, column: 4)
!15005 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 1012, column: 4)
!15006 = !DILocation(line: 1012, column: 4, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !15004, file: !3, line: 1012, column: 4)
!15008 = !DILocation(line: 1012, column: 4, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 1012, column: 4)
!15010 = distinct !DILexicalBlock(scope: !15007, file: !3, line: 1012, column: 4)
!15011 = !DILocation(line: 1012, column: 4, scope: !15010)
!15012 = !DILocation(line: 1012, column: 4, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15009, file: !3, line: 1012, column: 4)
!15014 = !DILocation(line: 1012, column: 4, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15013, file: !3, line: 1012, column: 4)
!15016 = !DILocation(line: 1012, column: 4, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 1012, column: 4)
!15018 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 1012, column: 4)
!15019 = !DILocation(line: 1012, column: 4, scope: !15018)
!15020 = !DILocation(line: 1012, column: 4, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15009, file: !3, line: 1012, column: 4)
!15022 = !DILocation(line: 1012, column: 4, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 1012, column: 4)
!15024 = !DILocation(line: 1012, column: 4, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15023, file: !3, line: 1012, column: 4)
!15026 = !DILocation(line: 1012, column: 4, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15023, file: !3, line: 1012, column: 4)
!15028 = !DILocation(line: 1012, column: 4, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 1012, column: 4)
!15030 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 1012, column: 4)
!15031 = !DILocation(line: 1012, column: 4, scope: !15030)
!15032 = !DILocation(line: 1012, column: 4, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 1012, column: 4)
!15034 = !DILocation(line: 1012, column: 4, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 1012, column: 4)
!15036 = !DILocation(line: 1012, column: 4, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 1012, column: 4)
!15038 = !DILocation(line: 1014, column: 39, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15040, file: !3, line: 1014, column: 9)
!15040 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 1013, column: 4)
!15041 = !DILocation(line: 1014, column: 46, scope: !15039)
!15042 = !DILocation(line: 1014, column: 52, scope: !15039)
!15043 = !DILocation(line: 1014, column: 9, scope: !15039)
!15044 = !DILocation(line: 1014, column: 9, scope: !15040)
!15045 = !DILocalVariable(name: "fno", scope: !15046, file: !3, line: 1015, type: !233)
!15046 = distinct !DILexicalBlock(scope: !15039, file: !3, line: 1014, column: 57)
!15047 = !DILocation(line: 1015, column: 12, scope: !15046)
!15048 = !DILocation(line: 1017, column: 31, scope: !15046)
!15049 = !DILocation(line: 1017, column: 36, scope: !15046)
!15050 = !DILocation(line: 1017, column: 43, scope: !15046)
!15051 = !DILocation(line: 1017, column: 49, scope: !15046)
!15052 = !DILocation(line: 1017, column: 6, scope: !15046)
!15053 = !DILocation(line: 1018, column: 18, scope: !15046)
!15054 = !DILocation(line: 1018, column: 22, scope: !15046)
!15055 = !DILocation(line: 1018, column: 29, scope: !15046)
!15056 = !DILocation(line: 1018, column: 42, scope: !15046)
!15057 = !DILocation(line: 1018, column: 54, scope: !15046)
!15058 = !DILocation(line: 1018, column: 72, scope: !15046)
!15059 = !DILocation(line: 1018, column: 6, scope: !15046)
!15060 = !DILocation(line: 1019, column: 5, scope: !15046)
!15061 = !DILocation(line: 1021, column: 4, scope: !15010)
!15062 = distinct !{!15062, !15003, !15063}
!15063 = !DILocation(line: 1021, column: 4, scope: !15004)
!15064 = !DILocation(line: 1021, column: 4, scope: !15005)
!15065 = distinct !{!15065, !14999, !15066}
!15066 = !DILocation(line: 1021, column: 4, scope: !15000)
!15067 = !DILocation(line: 1021, column: 4, scope: !14991)
!15068 = distinct !{!15068, !14985, !15069}
!15069 = !DILocation(line: 1021, column: 4, scope: !14986)
!15070 = !DILocation(line: 1022, column: 3, scope: !14984)
!15071 = !DILocation(line: 1024, column: 4, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !14981, file: !3, line: 1023, column: 8)
!15073 = !DILocation(line: 1024, column: 4, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 1024, column: 4)
!15075 = !DILocation(line: 1024, column: 4, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15074, file: !3, line: 1024, column: 4)
!15077 = !DILocation(line: 1024, column: 4, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15079, file: !3, line: 1024, column: 4)
!15079 = distinct !DILexicalBlock(scope: !15076, file: !3, line: 1024, column: 4)
!15080 = !DILocation(line: 1024, column: 4, scope: !15079)
!15081 = !DILocation(line: 1024, column: 4, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15078, file: !3, line: 1024, column: 4)
!15083 = !DILocation(line: 1024, column: 4, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15082, file: !3, line: 1024, column: 4)
!15085 = !DILocation(line: 1024, column: 4, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15078, file: !3, line: 1024, column: 4)
!15087 = !DILocation(line: 1024, column: 4, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15079, file: !3, line: 1024, column: 4)
!15089 = !DILocation(line: 1024, column: 4, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15088, file: !3, line: 1024, column: 4)
!15091 = !DILocation(line: 1024, column: 4, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 1024, column: 4)
!15093 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 1024, column: 4)
!15094 = !DILocation(line: 1024, column: 4, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15092, file: !3, line: 1024, column: 4)
!15096 = !DILocation(line: 1024, column: 4, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15098, file: !3, line: 1024, column: 4)
!15098 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 1024, column: 4)
!15099 = !DILocation(line: 1024, column: 4, scope: !15098)
!15100 = !DILocation(line: 1024, column: 4, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 1024, column: 4)
!15102 = !DILocation(line: 1024, column: 4, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15101, file: !3, line: 1024, column: 4)
!15104 = !DILocation(line: 1024, column: 4, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15106, file: !3, line: 1024, column: 4)
!15106 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 1024, column: 4)
!15107 = !DILocation(line: 1024, column: 4, scope: !15106)
!15108 = !DILocation(line: 1024, column: 4, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 1024, column: 4)
!15110 = !DILocation(line: 1024, column: 4, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 1024, column: 4)
!15112 = !DILocation(line: 1024, column: 4, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 1024, column: 4)
!15114 = !DILocation(line: 1024, column: 4, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 1024, column: 4)
!15116 = !DILocation(line: 1024, column: 4, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15118, file: !3, line: 1024, column: 4)
!15118 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 1024, column: 4)
!15119 = !DILocation(line: 1024, column: 4, scope: !15118)
!15120 = !DILocation(line: 1024, column: 4, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 1024, column: 4)
!15122 = !DILocation(line: 1024, column: 4, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 1024, column: 4)
!15124 = !DILocation(line: 1024, column: 4, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15118, file: !3, line: 1024, column: 4)
!15126 = !DILocation(line: 1026, column: 42, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15128, file: !3, line: 1026, column: 9)
!15128 = distinct !DILexicalBlock(scope: !15098, file: !3, line: 1025, column: 4)
!15129 = !DILocation(line: 1026, column: 9, scope: !15127)
!15130 = !DILocation(line: 1026, column: 9, scope: !15128)
!15131 = !DILocation(line: 1027, column: 13, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 1027, column: 10)
!15133 = distinct !DILexicalBlock(scope: !15127, file: !3, line: 1026, column: 47)
!15134 = !DILocation(line: 1027, column: 10, scope: !15132)
!15135 = !DILocation(line: 1027, column: 10, scope: !15133)
!15136 = !DILocalVariable(name: "fno", scope: !15137, file: !3, line: 1028, type: !233)
!15137 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 1027, column: 17)
!15138 = !DILocation(line: 1028, column: 13, scope: !15137)
!15139 = !DILocation(line: 1030, column: 32, scope: !15137)
!15140 = !DILocation(line: 1030, column: 40, scope: !15137)
!15141 = !DILocation(line: 1030, column: 7, scope: !15137)
!15142 = !DILocation(line: 1031, column: 19, scope: !15137)
!15143 = !DILocation(line: 1031, column: 23, scope: !15137)
!15144 = !DILocation(line: 1031, column: 30, scope: !15137)
!15145 = !DILocation(line: 1031, column: 43, scope: !15137)
!15146 = !DILocation(line: 1031, column: 55, scope: !15137)
!15147 = !DILocation(line: 1031, column: 73, scope: !15137)
!15148 = !DILocation(line: 1031, column: 7, scope: !15137)
!15149 = !DILocation(line: 1032, column: 6, scope: !15137)
!15150 = !DILocation(line: 1034, column: 19, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 1033, column: 11)
!15152 = !DILocation(line: 1034, column: 23, scope: !15151)
!15153 = !DILocation(line: 1034, column: 30, scope: !15151)
!15154 = !DILocation(line: 1034, column: 43, scope: !15151)
!15155 = !DILocation(line: 1034, column: 55, scope: !15151)
!15156 = !DILocation(line: 1034, column: 76, scope: !15151)
!15157 = !DILocation(line: 1034, column: 7, scope: !15151)
!15158 = !DILocation(line: 1036, column: 5, scope: !15133)
!15159 = !DILocation(line: 1038, column: 4, scope: !15098)
!15160 = distinct !{!15160, !15091, !15161}
!15161 = !DILocation(line: 1038, column: 4, scope: !15092)
!15162 = !DILocation(line: 1038, column: 4, scope: !15093)
!15163 = distinct !{!15163, !15087, !15164}
!15164 = !DILocation(line: 1038, column: 4, scope: !15088)
!15165 = !DILocation(line: 1038, column: 4, scope: !15079)
!15166 = distinct !{!15166, !15073, !15167}
!15167 = !DILocation(line: 1038, column: 4, scope: !15074)
!15168 = !DILocation(line: 1045, column: 14, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 1044, column: 3)
!15170 = !DILocation(line: 1045, column: 18, scope: !15169)
!15171 = !DILocation(line: 1045, column: 4, scope: !15169)
!15172 = !DILocation(line: 1046, column: 14, scope: !15169)
!15173 = !DILocation(line: 1046, column: 24, scope: !15169)
!15174 = !DILocation(line: 1046, column: 4, scope: !15169)
!15175 = !DILocation(line: 1048, column: 2, scope: !14963)
!15176 = !DILocation(line: 1001, column: 28, scope: !14958)
!15177 = !DILocation(line: 1001, column: 2, scope: !14958)
!15178 = distinct !{!15178, !14961, !15179}
!15179 = !DILocation(line: 1048, column: 2, scope: !14955)
!15180 = !DILocation(line: 1050, column: 17, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !14903, file: !3, line: 1050, column: 6)
!15182 = !DILocation(line: 1050, column: 6, scope: !15181)
!15183 = !DILocation(line: 1050, column: 6, scope: !14903)
!15184 = !DILocation(line: 1051, column: 14, scope: !15181)
!15185 = !DILocation(line: 1051, column: 18, scope: !15181)
!15186 = !DILocation(line: 1051, column: 3, scope: !15181)
!15187 = !DILocation(line: 1053, column: 15, scope: !14903)
!15188 = !DILocation(line: 1053, column: 2, scope: !14903)
!15189 = !DILocation(line: 1054, column: 1, scope: !14903)
!15190 = distinct !DISubprogram(name: "sculpt_brush_test_init", scope: !3, file: !3, line: 524, type: !15191, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15191 = !DISubroutineType(types: !15192)
!15192 = !{null, !5374, !15193}
!15193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11350, size: 64)
!15194 = !DILocalVariable(name: "ss", arg: 1, scope: !15190, file: !3, line: 524, type: !5374)
!15195 = !DILocation(line: 524, column: 51, scope: !15190)
!15196 = !DILocalVariable(name: "test", arg: 2, scope: !15190, file: !3, line: 524, type: !15193)
!15197 = !DILocation(line: 524, column: 72, scope: !15190)
!15198 = !DILocalVariable(name: "rv3d", scope: !15190, file: !3, line: 526, type: !5321)
!15199 = !DILocation(line: 526, column: 16, scope: !15190)
!15200 = !DILocation(line: 526, column: 23, scope: !15190)
!15201 = !DILocation(line: 526, column: 27, scope: !15190)
!15202 = !DILocation(line: 526, column: 34, scope: !15190)
!15203 = !DILocation(line: 526, column: 38, scope: !15190)
!15204 = !DILocation(line: 528, column: 25, scope: !15190)
!15205 = !DILocation(line: 528, column: 29, scope: !15190)
!15206 = !DILocation(line: 528, column: 36, scope: !15190)
!15207 = !DILocation(line: 528, column: 2, scope: !15190)
!15208 = !DILocation(line: 528, column: 8, scope: !15190)
!15209 = !DILocation(line: 528, column: 23, scope: !15190)
!15210 = !DILocation(line: 529, column: 13, scope: !15190)
!15211 = !DILocation(line: 529, column: 19, scope: !15190)
!15212 = !DILocation(line: 529, column: 29, scope: !15190)
!15213 = !DILocation(line: 529, column: 33, scope: !15190)
!15214 = !DILocation(line: 529, column: 40, scope: !15190)
!15215 = !DILocation(line: 529, column: 2, scope: !15190)
!15216 = !DILocation(line: 530, column: 2, scope: !15190)
!15217 = !DILocation(line: 530, column: 8, scope: !15190)
!15218 = !DILocation(line: 530, column: 13, scope: !15190)
!15219 = !DILocation(line: 533, column: 6, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 533, column: 6)
!15221 = !DILocation(line: 533, column: 12, scope: !15220)
!15222 = !DILocation(line: 533, column: 18, scope: !15220)
!15223 = !DILocation(line: 533, column: 6, scope: !15190)
!15224 = !DILocation(line: 534, column: 21, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 533, column: 35)
!15226 = !DILocation(line: 534, column: 3, scope: !15225)
!15227 = !DILocation(line: 534, column: 9, scope: !15225)
!15228 = !DILocation(line: 534, column: 19, scope: !15225)
!15229 = !DILocation(line: 535, column: 2, scope: !15225)
!15230 = !DILocation(line: 537, column: 3, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 536, column: 7)
!15232 = !DILocation(line: 537, column: 9, scope: !15231)
!15233 = !DILocation(line: 537, column: 19, scope: !15231)
!15234 = !DILocation(line: 539, column: 1, scope: !15190)
!15235 = distinct !DISubprogram(name: "sculpt_brush_test_fast", scope: !3, file: !3, line: 579, type: !15236, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15236 = !DISubroutineType(types: !15237)
!15237 = !{!2315, !15193, !359}
!15238 = !DILocalVariable(name: "test", arg: 1, scope: !15235, file: !3, line: 579, type: !15193)
!15239 = !DILocation(line: 579, column: 53, scope: !15235)
!15240 = !DILocalVariable(name: "co", arg: 2, scope: !15235, file: !3, line: 579, type: !359)
!15241 = !DILocation(line: 579, column: 65, scope: !15235)
!15242 = !DILocation(line: 581, column: 33, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 581, column: 6)
!15244 = !DILocation(line: 581, column: 39, scope: !15243)
!15245 = !DILocation(line: 581, column: 6, scope: !15243)
!15246 = !DILocation(line: 581, column: 6, scope: !15235)
!15247 = !DILocation(line: 582, column: 3, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15243, file: !3, line: 581, column: 44)
!15249 = !DILocation(line: 584, column: 26, scope: !15235)
!15250 = !DILocation(line: 584, column: 30, scope: !15235)
!15251 = !DILocation(line: 584, column: 36, scope: !15235)
!15252 = !DILocation(line: 584, column: 9, scope: !15235)
!15253 = !DILocation(line: 584, column: 49, scope: !15235)
!15254 = !DILocation(line: 584, column: 55, scope: !15235)
!15255 = !DILocation(line: 584, column: 46, scope: !15235)
!15256 = !DILocation(line: 584, column: 2, scope: !15235)
!15257 = !DILocation(line: 585, column: 1, scope: !15235)
!15258 = distinct !DISubprogram(name: "add_norm_if", scope: !3, file: !3, line: 959, type: !15259, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15259 = !DISubroutineType(types: !15260)
!15260 = !{null, !359, !359, !359, !359}
!15261 = !DILocalVariable(name: "view_vec", arg: 1, scope: !15258, file: !3, line: 959, type: !359)
!15262 = !DILocation(line: 959, column: 31, scope: !15258)
!15263 = !DILocalVariable(name: "out", arg: 2, scope: !15258, file: !3, line: 959, type: !359)
!15264 = !DILocation(line: 959, column: 50, scope: !15258)
!15265 = !DILocalVariable(name: "out_flip", arg: 3, scope: !15258, file: !3, line: 959, type: !359)
!15266 = !DILocation(line: 959, column: 64, scope: !15258)
!15267 = !DILocalVariable(name: "fno", arg: 4, scope: !15258, file: !3, line: 959, type: !359)
!15268 = !DILocation(line: 959, column: 83, scope: !15258)
!15269 = !DILocation(line: 961, column: 16, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 961, column: 6)
!15271 = !DILocation(line: 961, column: 26, scope: !15270)
!15272 = !DILocation(line: 961, column: 7, scope: !15270)
!15273 = !DILocation(line: 961, column: 32, scope: !15270)
!15274 = !DILocation(line: 961, column: 6, scope: !15258)
!15275 = !DILocation(line: 962, column: 13, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15270, file: !3, line: 961, column: 37)
!15277 = !DILocation(line: 962, column: 18, scope: !15276)
!15278 = !DILocation(line: 962, column: 3, scope: !15276)
!15279 = !DILocation(line: 963, column: 2, scope: !15276)
!15280 = !DILocation(line: 965, column: 13, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15270, file: !3, line: 964, column: 7)
!15282 = !DILocation(line: 965, column: 23, scope: !15281)
!15283 = !DILocation(line: 965, column: 3, scope: !15281)
!15284 = !DILocation(line: 967, column: 1, scope: !15258)
!15285 = distinct !DISubprogram(name: "is_zero_v3", scope: !5234, file: !5234, line: 857, type: !15286, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15286 = !DISubroutineType(types: !15287)
!15287 = !{!2315, !3251}
!15288 = !DILocalVariable(name: "v", arg: 1, scope: !15285, file: !5234, line: 857, type: !3251)
!15289 = !DILocation(line: 857, column: 37, scope: !15285)
!15290 = !DILocation(line: 859, column: 10, scope: !15285)
!15291 = !DILocation(line: 859, column: 15, scope: !15285)
!15292 = !DILocation(line: 859, column: 23, scope: !15285)
!15293 = !DILocation(line: 859, column: 26, scope: !15285)
!15294 = !DILocation(line: 859, column: 31, scope: !15285)
!15295 = !DILocation(line: 859, column: 39, scope: !15285)
!15296 = !DILocation(line: 859, column: 42, scope: !15285)
!15297 = !DILocation(line: 859, column: 47, scope: !15285)
!15298 = !DILocation(line: 0, scope: !15285)
!15299 = !DILocation(line: 859, column: 9, scope: !15285)
!15300 = !DILocation(line: 859, column: 2, scope: !15285)
!15301 = distinct !DISubprogram(name: "sculpt_brush_test_clipping", scope: !3, file: !3, line: 541, type: !15302, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15302 = !DISubroutineType(types: !15303)
!15303 = !{!2315, !15193, !3251}
!15304 = !DILocalVariable(name: "test", arg: 1, scope: !15301, file: !3, line: 541, type: !15193)
!15305 = !DILocation(line: 541, column: 61, scope: !15301)
!15306 = !DILocalVariable(name: "co", arg: 2, scope: !15301, file: !3, line: 541, type: !3251)
!15307 = !DILocation(line: 541, column: 79, scope: !15301)
!15308 = !DILocalVariable(name: "rv3d", scope: !15301, file: !3, line: 543, type: !5321)
!15309 = !DILocation(line: 543, column: 16, scope: !15301)
!15310 = !DILocation(line: 543, column: 23, scope: !15301)
!15311 = !DILocation(line: 543, column: 29, scope: !15301)
!15312 = !DILocation(line: 544, column: 10, scope: !15301)
!15313 = !DILocation(line: 544, column: 15, scope: !15301)
!15314 = !DILocation(line: 544, column: 43, scope: !15301)
!15315 = !DILocation(line: 544, column: 49, scope: !15301)
!15316 = !DILocation(line: 544, column: 19, scope: !15301)
!15317 = !DILocation(line: 544, column: 18, scope: !15301)
!15318 = !DILocation(line: 0, scope: !15301)
!15319 = !DILocation(line: 544, column: 9, scope: !15301)
!15320 = !DILocation(line: 544, column: 2, scope: !15301)
!15321 = distinct !DISubprogram(name: "calc_brush_local_mat", scope: !3, file: !3, line: 1132, type: !15322, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{null, !6733, !3739, !3310}
!15324 = !DILocalVariable(name: "brush", arg: 1, scope: !15321, file: !3, line: 1132, type: !6733)
!15325 = !DILocation(line: 1132, column: 47, scope: !15321)
!15326 = !DILocalVariable(name: "ob", arg: 2, scope: !15321, file: !3, line: 1132, type: !3739)
!15327 = !DILocation(line: 1132, column: 62, scope: !15321)
!15328 = !DILocalVariable(name: "local_mat", arg: 3, scope: !15321, file: !3, line: 1133, type: !3310)
!15329 = !DILocation(line: 1133, column: 40, scope: !15321)
!15330 = !DILocalVariable(name: "cache", scope: !15321, file: !3, line: 1135, type: !15331)
!15331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15332, size: 64)
!15332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5643)
!15333 = !DILocation(line: 1135, column: 21, scope: !15321)
!15334 = !DILocation(line: 1135, column: 29, scope: !15321)
!15335 = !DILocation(line: 1135, column: 33, scope: !15321)
!15336 = !DILocation(line: 1135, column: 41, scope: !15321)
!15337 = !DILocalVariable(name: "tmat", scope: !15321, file: !3, line: 1136, type: !1294)
!15338 = !DILocation(line: 1136, column: 8, scope: !15321)
!15339 = !DILocalVariable(name: "mat", scope: !15321, file: !3, line: 1137, type: !1294)
!15340 = !DILocation(line: 1137, column: 8, scope: !15321)
!15341 = !DILocalVariable(name: "scale", scope: !15321, file: !3, line: 1138, type: !1294)
!15342 = !DILocation(line: 1138, column: 8, scope: !15321)
!15343 = !DILocalVariable(name: "angle", scope: !15321, file: !3, line: 1139, type: !153)
!15344 = !DILocation(line: 1139, column: 8, scope: !15321)
!15345 = !DILocalVariable(name: "v", scope: !15321, file: !3, line: 1139, type: !233)
!15346 = !DILocation(line: 1139, column: 15, scope: !15321)
!15347 = !DILocalVariable(name: "up", scope: !15321, file: !3, line: 1140, type: !233)
!15348 = !DILocation(line: 1140, column: 8, scope: !15321)
!15349 = !DILocation(line: 1143, column: 15, scope: !15321)
!15350 = !DILocation(line: 1143, column: 19, scope: !15321)
!15351 = !DILocation(line: 1143, column: 25, scope: !15321)
!15352 = !DILocation(line: 1143, column: 29, scope: !15321)
!15353 = !DILocation(line: 1143, column: 2, scope: !15321)
!15354 = !DILocation(line: 1146, column: 2, scope: !15321)
!15355 = !DILocation(line: 1146, column: 12, scope: !15321)
!15356 = !DILocation(line: 1147, column: 2, scope: !15321)
!15357 = !DILocation(line: 1147, column: 12, scope: !15321)
!15358 = !DILocation(line: 1148, column: 2, scope: !15321)
!15359 = !DILocation(line: 1148, column: 12, scope: !15321)
!15360 = !DILocation(line: 1149, column: 2, scope: !15321)
!15361 = !DILocation(line: 1149, column: 12, scope: !15321)
!15362 = !DILocation(line: 1152, column: 15, scope: !15321)
!15363 = !DILocation(line: 1152, column: 22, scope: !15321)
!15364 = !DILocation(line: 1152, column: 26, scope: !15321)
!15365 = !DILocation(line: 1152, column: 33, scope: !15321)
!15366 = !DILocation(line: 1152, column: 43, scope: !15321)
!15367 = !DILocation(line: 1152, column: 2, scope: !15321)
!15368 = !DILocation(line: 1155, column: 16, scope: !15321)
!15369 = !DILocation(line: 1155, column: 19, scope: !15321)
!15370 = !DILocation(line: 1155, column: 23, scope: !15321)
!15371 = !DILocation(line: 1155, column: 30, scope: !15321)
!15372 = !DILocation(line: 1155, column: 2, scope: !15321)
!15373 = !DILocation(line: 1157, column: 10, scope: !15321)
!15374 = !DILocation(line: 1157, column: 17, scope: !15321)
!15375 = !DILocation(line: 1157, column: 22, scope: !15321)
!15376 = !DILocation(line: 1157, column: 28, scope: !15321)
!15377 = !DILocation(line: 1157, column: 35, scope: !15321)
!15378 = !DILocation(line: 1157, column: 26, scope: !15321)
!15379 = !DILocation(line: 1157, column: 8, scope: !15321)
!15380 = !DILocation(line: 1158, column: 19, scope: !15321)
!15381 = !DILocation(line: 1158, column: 27, scope: !15321)
!15382 = !DILocation(line: 1158, column: 30, scope: !15321)
!15383 = !DILocation(line: 1158, column: 37, scope: !15321)
!15384 = !DILocation(line: 1158, column: 52, scope: !15321)
!15385 = !DILocation(line: 1158, column: 2, scope: !15321)
!15386 = !DILocation(line: 1161, column: 16, scope: !15321)
!15387 = !DILocation(line: 1161, column: 24, scope: !15321)
!15388 = !DILocation(line: 1161, column: 31, scope: !15321)
!15389 = !DILocation(line: 1161, column: 46, scope: !15321)
!15390 = !DILocation(line: 1161, column: 2, scope: !15321)
!15391 = !DILocation(line: 1162, column: 13, scope: !15321)
!15392 = !DILocation(line: 1162, column: 21, scope: !15321)
!15393 = !DILocation(line: 1162, column: 28, scope: !15321)
!15394 = !DILocation(line: 1162, column: 2, scope: !15321)
!15395 = !DILocation(line: 1165, column: 13, scope: !15321)
!15396 = !DILocation(line: 1165, column: 21, scope: !15321)
!15397 = !DILocation(line: 1165, column: 28, scope: !15321)
!15398 = !DILocation(line: 1165, column: 2, scope: !15321)
!15399 = !DILocation(line: 1168, column: 15, scope: !15321)
!15400 = !DILocation(line: 1168, column: 2, scope: !15321)
!15401 = !DILocation(line: 1169, column: 14, scope: !15321)
!15402 = !DILocation(line: 1169, column: 21, scope: !15321)
!15403 = !DILocation(line: 1169, column: 28, scope: !15321)
!15404 = !DILocation(line: 1169, column: 2, scope: !15321)
!15405 = !DILocation(line: 1170, column: 14, scope: !15321)
!15406 = !DILocation(line: 1170, column: 20, scope: !15321)
!15407 = !DILocation(line: 1170, column: 25, scope: !15321)
!15408 = !DILocation(line: 1170, column: 2, scope: !15321)
!15409 = !DILocation(line: 1174, column: 15, scope: !15321)
!15410 = !DILocation(line: 1174, column: 26, scope: !15321)
!15411 = !DILocation(line: 1174, column: 2, scope: !15321)
!15412 = !DILocation(line: 1175, column: 1, scope: !15321)
!15413 = distinct !DISubprogram(name: "calc_local_y", scope: !3, file: !3, line: 1116, type: !15414, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15414 = !DISubroutineType(types: !15415)
!15415 = !{null, !2372, !3251, !359}
!15416 = !DILocalVariable(name: "vc", arg: 1, scope: !15413, file: !3, line: 1116, type: !2372)
!15417 = !DILocation(line: 1116, column: 39, scope: !15413)
!15418 = !DILocalVariable(name: "center", arg: 2, scope: !15413, file: !3, line: 1116, type: !3251)
!15419 = !DILocation(line: 1116, column: 55, scope: !15413)
!15420 = !DILocalVariable(name: "y", arg: 3, scope: !15413, file: !3, line: 1116, type: !359)
!15421 = !DILocation(line: 1116, column: 72, scope: !15413)
!15422 = !DILocalVariable(name: "ob", scope: !15413, file: !3, line: 1118, type: !3739)
!15423 = !DILocation(line: 1118, column: 10, scope: !15413)
!15424 = !DILocation(line: 1118, column: 15, scope: !15413)
!15425 = !DILocation(line: 1118, column: 19, scope: !15413)
!15426 = !DILocalVariable(name: "loc", scope: !15413, file: !3, line: 1119, type: !233)
!15427 = !DILocation(line: 1119, column: 8, scope: !15413)
!15428 = !DILocalVariable(name: "mval_f", scope: !15413, file: !3, line: 1119, type: !186)
!15429 = !DILocation(line: 1119, column: 16, scope: !15413)
!15430 = !DILocalVariable(name: "zfac", scope: !15413, file: !3, line: 1120, type: !153)
!15431 = !DILocation(line: 1120, column: 8, scope: !15413)
!15432 = !DILocation(line: 1122, column: 14, scope: !15413)
!15433 = !DILocation(line: 1122, column: 19, scope: !15413)
!15434 = !DILocation(line: 1122, column: 23, scope: !15413)
!15435 = !DILocation(line: 1122, column: 29, scope: !15413)
!15436 = !DILocation(line: 1122, column: 2, scope: !15413)
!15437 = !DILocation(line: 1123, column: 29, scope: !15413)
!15438 = !DILocation(line: 1123, column: 33, scope: !15413)
!15439 = !DILocation(line: 1123, column: 39, scope: !15413)
!15440 = !DILocation(line: 1123, column: 9, scope: !15413)
!15441 = !DILocation(line: 1123, column: 7, scope: !15413)
!15442 = !DILocation(line: 1125, column: 25, scope: !15413)
!15443 = !DILocation(line: 1125, column: 29, scope: !15413)
!15444 = !DILocation(line: 1125, column: 33, scope: !15413)
!15445 = !DILocation(line: 1125, column: 41, scope: !15413)
!15446 = !DILocation(line: 1125, column: 44, scope: !15413)
!15447 = !DILocation(line: 1125, column: 2, scope: !15413)
!15448 = !DILocation(line: 1126, column: 15, scope: !15413)
!15449 = !DILocation(line: 1126, column: 2, scope: !15413)
!15450 = !DILocation(line: 1128, column: 12, scope: !15413)
!15451 = !DILocation(line: 1128, column: 15, scope: !15413)
!15452 = !DILocation(line: 1128, column: 19, scope: !15413)
!15453 = !DILocation(line: 1128, column: 2, scope: !15413)
!15454 = !DILocation(line: 1129, column: 12, scope: !15413)
!15455 = !DILocation(line: 1129, column: 16, scope: !15413)
!15456 = !DILocation(line: 1129, column: 22, scope: !15413)
!15457 = !DILocation(line: 1129, column: 2, scope: !15413)
!15458 = !DILocation(line: 1130, column: 1, scope: !15413)
!15459 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !5234, file: !5234, line: 634, type: !5558, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15460 = !DILocalVariable(name: "r", arg: 1, scope: !15459, file: !5234, line: 634, type: !359)
!15461 = !DILocation(line: 634, column: 34, scope: !15459)
!15462 = !DILocalVariable(name: "a", arg: 2, scope: !15459, file: !5234, line: 634, type: !3251)
!15463 = !DILocation(line: 634, column: 52, scope: !15459)
!15464 = !DILocalVariable(name: "b", arg: 3, scope: !15459, file: !5234, line: 634, type: !3251)
!15465 = !DILocation(line: 634, column: 70, scope: !15459)
!15466 = !DILocation(line: 637, column: 9, scope: !15459)
!15467 = !DILocation(line: 637, column: 16, scope: !15459)
!15468 = !DILocation(line: 637, column: 14, scope: !15459)
!15469 = !DILocation(line: 637, column: 23, scope: !15459)
!15470 = !DILocation(line: 637, column: 30, scope: !15459)
!15471 = !DILocation(line: 637, column: 28, scope: !15459)
!15472 = !DILocation(line: 637, column: 21, scope: !15459)
!15473 = !DILocation(line: 637, column: 2, scope: !15459)
!15474 = !DILocation(line: 637, column: 7, scope: !15459)
!15475 = !DILocation(line: 638, column: 9, scope: !15459)
!15476 = !DILocation(line: 638, column: 16, scope: !15459)
!15477 = !DILocation(line: 638, column: 14, scope: !15459)
!15478 = !DILocation(line: 638, column: 23, scope: !15459)
!15479 = !DILocation(line: 638, column: 30, scope: !15459)
!15480 = !DILocation(line: 638, column: 28, scope: !15459)
!15481 = !DILocation(line: 638, column: 21, scope: !15459)
!15482 = !DILocation(line: 638, column: 2, scope: !15459)
!15483 = !DILocation(line: 638, column: 7, scope: !15459)
!15484 = !DILocation(line: 639, column: 9, scope: !15459)
!15485 = !DILocation(line: 639, column: 16, scope: !15459)
!15486 = !DILocation(line: 639, column: 14, scope: !15459)
!15487 = !DILocation(line: 639, column: 23, scope: !15459)
!15488 = !DILocation(line: 639, column: 30, scope: !15459)
!15489 = !DILocation(line: 639, column: 28, scope: !15459)
!15490 = !DILocation(line: 639, column: 21, scope: !15459)
!15491 = !DILocation(line: 639, column: 2, scope: !15459)
!15492 = !DILocation(line: 639, column: 7, scope: !15459)
!15493 = !DILocation(line: 640, column: 1, scope: !15459)
!15494 = distinct !DISubprogram(name: "mul_v3_v3", scope: !5234, file: !5234, line: 412, type: !5260, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15495 = !DILocalVariable(name: "r", arg: 1, scope: !15494, file: !5234, line: 412, type: !359)
!15496 = !DILocation(line: 412, column: 30, scope: !15494)
!15497 = !DILocalVariable(name: "a", arg: 2, scope: !15494, file: !5234, line: 412, type: !3251)
!15498 = !DILocation(line: 412, column: 48, scope: !15494)
!15499 = !DILocation(line: 414, column: 10, scope: !15494)
!15500 = !DILocation(line: 414, column: 2, scope: !15494)
!15501 = !DILocation(line: 414, column: 7, scope: !15494)
!15502 = !DILocation(line: 415, column: 10, scope: !15494)
!15503 = !DILocation(line: 415, column: 2, scope: !15494)
!15504 = !DILocation(line: 415, column: 7, scope: !15494)
!15505 = !DILocation(line: 416, column: 10, scope: !15494)
!15506 = !DILocation(line: 416, column: 2, scope: !15494)
!15507 = !DILocation(line: 416, column: 7, scope: !15494)
!15508 = !DILocation(line: 417, column: 1, scope: !15494)
!15509 = distinct !DISubprogram(name: "sculpt_brush_test", scope: !3, file: !3, line: 547, type: !15302, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15510 = !DILocalVariable(name: "test", arg: 1, scope: !15509, file: !3, line: 547, type: !15193)
!15511 = !DILocation(line: 547, column: 48, scope: !15509)
!15512 = !DILocalVariable(name: "co", arg: 2, scope: !15509, file: !3, line: 547, type: !3251)
!15513 = !DILocation(line: 547, column: 66, scope: !15509)
!15514 = !DILocalVariable(name: "distsq", scope: !15509, file: !3, line: 549, type: !153)
!15515 = !DILocation(line: 549, column: 8, scope: !15509)
!15516 = !DILocation(line: 549, column: 34, scope: !15509)
!15517 = !DILocation(line: 549, column: 38, scope: !15509)
!15518 = !DILocation(line: 549, column: 44, scope: !15509)
!15519 = !DILocation(line: 549, column: 17, scope: !15509)
!15520 = !DILocation(line: 551, column: 6, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 551, column: 6)
!15522 = !DILocation(line: 551, column: 16, scope: !15521)
!15523 = !DILocation(line: 551, column: 22, scope: !15521)
!15524 = !DILocation(line: 551, column: 13, scope: !15521)
!15525 = !DILocation(line: 551, column: 6, scope: !15509)
!15526 = !DILocation(line: 552, column: 34, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 552, column: 7)
!15528 = distinct !DILexicalBlock(scope: !15521, file: !3, line: 551, column: 38)
!15529 = !DILocation(line: 552, column: 40, scope: !15527)
!15530 = !DILocation(line: 552, column: 7, scope: !15527)
!15531 = !DILocation(line: 552, column: 7, scope: !15528)
!15532 = !DILocation(line: 553, column: 4, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15527, file: !3, line: 552, column: 45)
!15534 = !DILocation(line: 555, column: 22, scope: !15528)
!15535 = !DILocation(line: 555, column: 16, scope: !15528)
!15536 = !DILocation(line: 555, column: 3, scope: !15528)
!15537 = !DILocation(line: 555, column: 9, scope: !15528)
!15538 = !DILocation(line: 555, column: 14, scope: !15528)
!15539 = !DILocation(line: 556, column: 3, scope: !15528)
!15540 = !DILocation(line: 559, column: 3, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15521, file: !3, line: 558, column: 7)
!15542 = !DILocation(line: 561, column: 1, scope: !15509)
!15543 = distinct !DISubprogram(name: "tex_strength", scope: !3, file: !3, line: 828, type: !15544, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{!153, !5374, !2749, !3251, !3072, !3252, !3251, !3072}
!15546 = !DILocalVariable(name: "ss", arg: 1, scope: !15543, file: !3, line: 828, type: !5374)
!15547 = !DILocation(line: 828, column: 42, scope: !15543)
!15548 = !DILocalVariable(name: "br", arg: 2, scope: !15543, file: !3, line: 828, type: !2749)
!15549 = !DILocation(line: 828, column: 53, scope: !15543)
!15550 = !DILocalVariable(name: "point", arg: 3, scope: !15543, file: !3, line: 829, type: !3251)
!15551 = !DILocation(line: 829, column: 39, scope: !15543)
!15552 = !DILocalVariable(name: "len", arg: 4, scope: !15543, file: !3, line: 830, type: !3072)
!15553 = !DILocation(line: 830, column: 39, scope: !15543)
!15554 = !DILocalVariable(name: "vno", arg: 5, scope: !15543, file: !3, line: 831, type: !3252)
!15555 = !DILocation(line: 831, column: 39, scope: !15543)
!15556 = !DILocalVariable(name: "fno", arg: 6, scope: !15543, file: !3, line: 832, type: !3251)
!15557 = !DILocation(line: 832, column: 39, scope: !15543)
!15558 = !DILocalVariable(name: "mask", arg: 7, scope: !15543, file: !3, line: 833, type: !3072)
!15559 = !DILocation(line: 833, column: 39, scope: !15543)
!15560 = !DILocalVariable(name: "cache", scope: !15543, file: !3, line: 835, type: !5642)
!15561 = !DILocation(line: 835, column: 15, scope: !15543)
!15562 = !DILocation(line: 835, column: 23, scope: !15543)
!15563 = !DILocation(line: 835, column: 27, scope: !15543)
!15564 = !DILocalVariable(name: "scene", scope: !15543, file: !3, line: 836, type: !7408)
!15565 = !DILocation(line: 836, column: 15, scope: !15543)
!15566 = !DILocation(line: 836, column: 23, scope: !15543)
!15567 = !DILocation(line: 836, column: 30, scope: !15543)
!15568 = !DILocation(line: 836, column: 34, scope: !15543)
!15569 = !DILocalVariable(name: "mtex", scope: !15543, file: !3, line: 837, type: !7422)
!15570 = !DILocation(line: 837, column: 8, scope: !15543)
!15571 = !DILocation(line: 837, column: 16, scope: !15543)
!15572 = !DILocation(line: 837, column: 20, scope: !15543)
!15573 = !DILocalVariable(name: "avg", scope: !15543, file: !3, line: 838, type: !153)
!15574 = !DILocation(line: 838, column: 8, scope: !15543)
!15575 = !DILocalVariable(name: "rgba", scope: !15543, file: !3, line: 839, type: !163)
!15576 = !DILocation(line: 839, column: 8, scope: !15543)
!15577 = !DILocalVariable(name: "thread_num", scope: !15543, file: !3, line: 840, type: !57)
!15578 = !DILocation(line: 840, column: 6, scope: !15543)
!15579 = !DILocation(line: 842, column: 7, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15543, file: !3, line: 842, column: 6)
!15581 = !DILocation(line: 842, column: 13, scope: !15580)
!15582 = !DILocation(line: 842, column: 6, scope: !15543)
!15583 = !DILocation(line: 843, column: 7, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 842, column: 18)
!15585 = !DILocation(line: 844, column: 2, scope: !15584)
!15586 = !DILocation(line: 845, column: 11, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 845, column: 11)
!15588 = !DILocation(line: 845, column: 17, scope: !15587)
!15589 = !DILocation(line: 845, column: 32, scope: !15587)
!15590 = !DILocation(line: 845, column: 11, scope: !15580)
!15591 = !DILocation(line: 848, column: 33, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 845, column: 53)
!15593 = !DILocation(line: 848, column: 40, scope: !15592)
!15594 = !DILocation(line: 848, column: 44, scope: !15592)
!15595 = !DILocation(line: 848, column: 51, scope: !15592)
!15596 = !DILocation(line: 848, column: 60, scope: !15592)
!15597 = !DILocation(line: 848, column: 64, scope: !15592)
!15598 = !DILocation(line: 848, column: 9, scope: !15592)
!15599 = !DILocation(line: 848, column: 7, scope: !15592)
!15600 = !DILocation(line: 849, column: 2, scope: !15592)
!15601 = !DILocation(line: 850, column: 11, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 850, column: 11)
!15603 = !DILocation(line: 850, column: 15, scope: !15602)
!15604 = !DILocation(line: 850, column: 11, scope: !15587)
!15605 = !DILocalVariable(name: "symm_point", scope: !15606, file: !3, line: 851, type: !233)
!15606 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 850, column: 25)
!15607 = !DILocation(line: 851, column: 9, scope: !15606)
!15608 = !DILocalVariable(name: "point_2d", scope: !15606, file: !3, line: 851, type: !186)
!15609 = !DILocation(line: 851, column: 24, scope: !15606)
!15610 = !DILocalVariable(name: "x", scope: !15606, file: !3, line: 852, type: !153)
!15611 = !DILocation(line: 852, column: 9, scope: !15606)
!15612 = !DILocalVariable(name: "y", scope: !15606, file: !3, line: 852, type: !153)
!15613 = !DILocation(line: 852, column: 19, scope: !15606)
!15614 = !DILocation(line: 859, column: 14, scope: !15606)
!15615 = !DILocation(line: 859, column: 26, scope: !15606)
!15616 = !DILocation(line: 859, column: 33, scope: !15606)
!15617 = !DILocation(line: 859, column: 40, scope: !15606)
!15618 = !DILocation(line: 859, column: 3, scope: !15606)
!15619 = !DILocation(line: 861, column: 7, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 861, column: 7)
!15621 = !DILocation(line: 861, column: 14, scope: !15620)
!15622 = !DILocation(line: 861, column: 7, scope: !15606)
!15623 = !DILocation(line: 862, column: 14, scope: !15620)
!15624 = !DILocation(line: 862, column: 21, scope: !15620)
!15625 = !DILocation(line: 862, column: 39, scope: !15620)
!15626 = !DILocation(line: 862, column: 4, scope: !15620)
!15627 = !DILocation(line: 864, column: 33, scope: !15606)
!15628 = !DILocation(line: 864, column: 40, scope: !15606)
!15629 = !DILocation(line: 864, column: 44, scope: !15606)
!15630 = !DILocation(line: 864, column: 48, scope: !15606)
!15631 = !DILocation(line: 864, column: 60, scope: !15606)
!15632 = !DILocation(line: 864, column: 70, scope: !15606)
!15633 = !DILocation(line: 864, column: 77, scope: !15606)
!15634 = !DILocation(line: 864, column: 3, scope: !15606)
!15635 = !DILocation(line: 868, column: 7, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 868, column: 7)
!15637 = !DILocation(line: 868, column: 13, scope: !15636)
!15638 = !DILocation(line: 868, column: 28, scope: !15636)
!15639 = !DILocation(line: 868, column: 7, scope: !15606)
!15640 = !DILocation(line: 872, column: 14, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 868, column: 51)
!15642 = !DILocation(line: 872, column: 21, scope: !15641)
!15643 = !DILocation(line: 872, column: 38, scope: !15641)
!15644 = !DILocation(line: 872, column: 4, scope: !15641)
!15645 = !DILocation(line: 874, column: 8, scope: !15641)
!15646 = !DILocation(line: 874, column: 6, scope: !15641)
!15647 = !DILocation(line: 875, column: 8, scope: !15641)
!15648 = !DILocation(line: 875, column: 6, scope: !15641)
!15649 = !DILocation(line: 877, column: 9, scope: !15641)
!15650 = !DILocation(line: 877, column: 13, scope: !15641)
!15651 = !DILocation(line: 877, column: 18, scope: !15641)
!15652 = !DILocation(line: 877, column: 6, scope: !15641)
!15653 = !DILocation(line: 878, column: 9, scope: !15641)
!15654 = !DILocation(line: 878, column: 13, scope: !15641)
!15655 = !DILocation(line: 878, column: 18, scope: !15641)
!15656 = !DILocation(line: 878, column: 6, scope: !15641)
!15657 = !DILocation(line: 880, column: 9, scope: !15641)
!15658 = !DILocation(line: 880, column: 13, scope: !15641)
!15659 = !DILocation(line: 880, column: 18, scope: !15641)
!15660 = !DILocation(line: 880, column: 6, scope: !15641)
!15661 = !DILocation(line: 881, column: 9, scope: !15641)
!15662 = !DILocation(line: 881, column: 13, scope: !15641)
!15663 = !DILocation(line: 881, column: 18, scope: !15641)
!15664 = !DILocation(line: 881, column: 6, scope: !15641)
!15665 = !DILocation(line: 886, column: 15, scope: !15641)
!15666 = !DILocation(line: 888, column: 31, scope: !15641)
!15667 = !DILocation(line: 888, column: 35, scope: !15641)
!15668 = !DILocation(line: 888, column: 41, scope: !15641)
!15669 = !DILocation(line: 888, column: 44, scope: !15641)
!15670 = !DILocation(line: 888, column: 47, scope: !15641)
!15671 = !DILocation(line: 888, column: 51, scope: !15641)
!15672 = !DILocation(line: 888, column: 61, scope: !15641)
!15673 = !DILocation(line: 888, column: 10, scope: !15641)
!15674 = !DILocation(line: 888, column: 8, scope: !15641)
!15675 = !DILocation(line: 890, column: 11, scope: !15641)
!15676 = !DILocation(line: 890, column: 15, scope: !15641)
!15677 = !DILocation(line: 890, column: 8, scope: !15641)
!15678 = !DILocation(line: 891, column: 3, scope: !15641)
!15679 = !DILocalVariable(name: "point_3d", scope: !15680, file: !3, line: 893, type: !15681)
!15680 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 892, column: 8)
!15681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3072, size: 96, elements: !234)
!15682 = !DILocation(line: 893, column: 16, scope: !15680)
!15683 = !DILocation(line: 893, column: 30, scope: !15680)
!15684 = !DILocation(line: 893, column: 31, scope: !15680)
!15685 = !DILocation(line: 893, column: 44, scope: !15680)
!15686 = !DILocation(line: 894, column: 34, scope: !15680)
!15687 = !DILocation(line: 894, column: 41, scope: !15680)
!15688 = !DILocation(line: 894, column: 45, scope: !15680)
!15689 = !DILocation(line: 894, column: 55, scope: !15680)
!15690 = !DILocation(line: 894, column: 64, scope: !15680)
!15691 = !DILocation(line: 894, column: 68, scope: !15680)
!15692 = !DILocation(line: 894, column: 10, scope: !15680)
!15693 = !DILocation(line: 894, column: 8, scope: !15680)
!15694 = !DILocation(line: 896, column: 2, scope: !15606)
!15695 = !DILocation(line: 899, column: 34, scope: !15543)
!15696 = !DILocation(line: 899, column: 38, scope: !15543)
!15697 = !DILocation(line: 899, column: 43, scope: !15543)
!15698 = !DILocation(line: 899, column: 50, scope: !15543)
!15699 = !DILocation(line: 899, column: 9, scope: !15543)
!15700 = !DILocation(line: 899, column: 6, scope: !15543)
!15701 = !DILocation(line: 901, column: 19, scope: !15543)
!15702 = !DILocation(line: 901, column: 23, scope: !15543)
!15703 = !DILocation(line: 901, column: 30, scope: !15543)
!15704 = !DILocation(line: 901, column: 43, scope: !15543)
!15705 = !DILocation(line: 901, column: 48, scope: !15543)
!15706 = !DILocation(line: 901, column: 9, scope: !15543)
!15707 = !DILocation(line: 901, column: 6, scope: !15543)
!15708 = !DILocation(line: 904, column: 16, scope: !15543)
!15709 = !DILocation(line: 904, column: 14, scope: !15543)
!15710 = !DILocation(line: 904, column: 6, scope: !15543)
!15711 = !DILocation(line: 906, column: 9, scope: !15543)
!15712 = !DILocation(line: 906, column: 2, scope: !15543)
!15713 = distinct !DISubprogram(name: "frontface", scope: !3, file: !3, line: 616, type: !15714, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{!153, !2749, !3251, !3252, !3251}
!15716 = !DILocalVariable(name: "br", arg: 1, scope: !15713, file: !3, line: 616, type: !2749)
!15717 = !DILocation(line: 616, column: 31, scope: !15713)
!15718 = !DILocalVariable(name: "sculpt_normal", arg: 2, scope: !15713, file: !3, line: 616, type: !3251)
!15719 = !DILocation(line: 616, column: 47, scope: !15713)
!15720 = !DILocalVariable(name: "no", arg: 3, scope: !15713, file: !3, line: 617, type: !3252)
!15721 = !DILocation(line: 617, column: 36, scope: !15713)
!15722 = !DILocalVariable(name: "fno", arg: 4, scope: !15713, file: !3, line: 617, type: !3251)
!15723 = !DILocation(line: 617, column: 55, scope: !15713)
!15724 = !DILocation(line: 619, column: 6, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 619, column: 6)
!15726 = !DILocation(line: 619, column: 10, scope: !15725)
!15727 = !DILocation(line: 619, column: 15, scope: !15725)
!15728 = !DILocation(line: 619, column: 6, scope: !15713)
!15729 = !DILocalVariable(name: "dot", scope: !15730, file: !3, line: 620, type: !153)
!15730 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 619, column: 34)
!15731 = !DILocation(line: 620, column: 9, scope: !15730)
!15732 = !DILocation(line: 622, column: 7, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 622, column: 7)
!15734 = !DILocation(line: 622, column: 7, scope: !15730)
!15735 = !DILocalVariable(name: "tmp", scope: !15736, file: !3, line: 623, type: !233)
!15736 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 622, column: 11)
!15737 = !DILocation(line: 623, column: 10, scope: !15736)
!15738 = !DILocation(line: 625, column: 29, scope: !15736)
!15739 = !DILocation(line: 625, column: 34, scope: !15736)
!15740 = !DILocation(line: 625, column: 4, scope: !15736)
!15741 = !DILocation(line: 626, column: 19, scope: !15736)
!15742 = !DILocation(line: 626, column: 24, scope: !15736)
!15743 = !DILocation(line: 626, column: 10, scope: !15736)
!15744 = !DILocation(line: 626, column: 8, scope: !15736)
!15745 = !DILocation(line: 627, column: 3, scope: !15736)
!15746 = !DILocation(line: 629, column: 19, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 628, column: 8)
!15748 = !DILocation(line: 629, column: 24, scope: !15747)
!15749 = !DILocation(line: 629, column: 10, scope: !15747)
!15750 = !DILocation(line: 629, column: 8, scope: !15747)
!15751 = !DILocation(line: 631, column: 10, scope: !15730)
!15752 = !DILocation(line: 631, column: 14, scope: !15730)
!15753 = !DILocation(line: 631, column: 20, scope: !15730)
!15754 = !DILocation(line: 631, column: 3, scope: !15730)
!15755 = !DILocation(line: 634, column: 3, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 633, column: 7)
!15757 = !DILocation(line: 636, column: 1, scope: !15713)
!15758 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !5234, file: !5234, line: 309, type: !5558, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15759 = !DILocalVariable(name: "r", arg: 1, scope: !15758, file: !5234, line: 309, type: !359)
!15760 = !DILocation(line: 309, column: 32, scope: !15758)
!15761 = !DILocalVariable(name: "a", arg: 2, scope: !15758, file: !5234, line: 309, type: !3251)
!15762 = !DILocation(line: 309, column: 50, scope: !15758)
!15763 = !DILocalVariable(name: "b", arg: 3, scope: !15758, file: !5234, line: 309, type: !3251)
!15764 = !DILocation(line: 309, column: 68, scope: !15758)
!15765 = !DILocation(line: 311, column: 9, scope: !15758)
!15766 = !DILocation(line: 311, column: 16, scope: !15758)
!15767 = !DILocation(line: 311, column: 14, scope: !15758)
!15768 = !DILocation(line: 311, column: 2, scope: !15758)
!15769 = !DILocation(line: 311, column: 7, scope: !15758)
!15770 = !DILocation(line: 312, column: 9, scope: !15758)
!15771 = !DILocation(line: 312, column: 16, scope: !15758)
!15772 = !DILocation(line: 312, column: 14, scope: !15758)
!15773 = !DILocation(line: 312, column: 2, scope: !15758)
!15774 = !DILocation(line: 312, column: 7, scope: !15758)
!15775 = !DILocation(line: 313, column: 9, scope: !15758)
!15776 = !DILocation(line: 313, column: 16, scope: !15758)
!15777 = !DILocation(line: 313, column: 14, scope: !15758)
!15778 = !DILocation(line: 313, column: 2, scope: !15758)
!15779 = !DILocation(line: 313, column: 7, scope: !15758)
!15780 = !DILocation(line: 314, column: 1, scope: !15758)
!15781 = distinct !DISubprogram(name: "mul_v3_v3v3", scope: !5234, file: !5234, line: 557, type: !5558, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15782 = !DILocalVariable(name: "r", arg: 1, scope: !15781, file: !5234, line: 557, type: !359)
!15783 = !DILocation(line: 557, column: 32, scope: !15781)
!15784 = !DILocalVariable(name: "v1", arg: 2, scope: !15781, file: !5234, line: 557, type: !3251)
!15785 = !DILocation(line: 557, column: 50, scope: !15781)
!15786 = !DILocalVariable(name: "v2", arg: 3, scope: !15781, file: !5234, line: 557, type: !3251)
!15787 = !DILocation(line: 557, column: 69, scope: !15781)
!15788 = !DILocation(line: 559, column: 9, scope: !15781)
!15789 = !DILocation(line: 559, column: 17, scope: !15781)
!15790 = !DILocation(line: 559, column: 15, scope: !15781)
!15791 = !DILocation(line: 559, column: 2, scope: !15781)
!15792 = !DILocation(line: 559, column: 7, scope: !15781)
!15793 = !DILocation(line: 560, column: 9, scope: !15781)
!15794 = !DILocation(line: 560, column: 17, scope: !15781)
!15795 = !DILocation(line: 560, column: 15, scope: !15781)
!15796 = !DILocation(line: 560, column: 2, scope: !15781)
!15797 = !DILocation(line: 560, column: 7, scope: !15781)
!15798 = !DILocation(line: 561, column: 9, scope: !15781)
!15799 = !DILocation(line: 561, column: 17, scope: !15781)
!15800 = !DILocation(line: 561, column: 15, scope: !15781)
!15801 = !DILocation(line: 561, column: 2, scope: !15781)
!15802 = !DILocation(line: 561, column: 7, scope: !15781)
!15803 = !DILocation(line: 562, column: 1, scope: !15781)
!15804 = distinct !DISubprogram(name: "len_v3", scope: !5234, file: !5234, line: 714, type: !11166, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15805 = !DILocalVariable(name: "a", arg: 1, scope: !15804, file: !5234, line: 714, type: !3251)
!15806 = !DILocation(line: 714, column: 34, scope: !15804)
!15807 = !DILocation(line: 716, column: 24, scope: !15804)
!15808 = !DILocation(line: 716, column: 27, scope: !15804)
!15809 = !DILocation(line: 716, column: 15, scope: !15804)
!15810 = !DILocation(line: 716, column: 9, scope: !15804)
!15811 = !DILocation(line: 716, column: 2, scope: !15804)
!15812 = distinct !DISubprogram(name: "sculpt_orig_vert_data_init", scope: !3, file: !3, line: 300, type: !15813, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15813 = !DISubroutineType(types: !15814)
!15814 = !{null, !10162, !3739, !3742}
!15815 = !DILocalVariable(name: "data", arg: 1, scope: !15812, file: !3, line: 300, type: !10162)
!15816 = !DILocation(line: 300, column: 60, scope: !15812)
!15817 = !DILocalVariable(name: "ob", arg: 2, scope: !15812, file: !3, line: 301, type: !3739)
!15818 = !DILocation(line: 301, column: 48, scope: !15812)
!15819 = !DILocalVariable(name: "node", arg: 3, scope: !15812, file: !3, line: 302, type: !3742)
!15820 = !DILocation(line: 302, column: 50, scope: !15812)
!15821 = !DILocalVariable(name: "unode", scope: !15812, file: !3, line: 304, type: !5893)
!15822 = !DILocation(line: 304, column: 18, scope: !15812)
!15823 = !DILocation(line: 305, column: 32, scope: !15812)
!15824 = !DILocation(line: 305, column: 36, scope: !15812)
!15825 = !DILocation(line: 305, column: 10, scope: !15812)
!15826 = !DILocation(line: 305, column: 8, scope: !15812)
!15827 = !DILocation(line: 306, column: 35, scope: !15812)
!15828 = !DILocation(line: 306, column: 41, scope: !15812)
!15829 = !DILocation(line: 306, column: 45, scope: !15812)
!15830 = !DILocation(line: 306, column: 2, scope: !15812)
!15831 = !DILocation(line: 307, column: 1, scope: !15812)
!15832 = distinct !DISubprogram(name: "sub_v3_v3", scope: !5234, file: !5234, line: 350, type: !5260, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15833 = !DILocalVariable(name: "r", arg: 1, scope: !15832, file: !5234, line: 350, type: !359)
!15834 = !DILocation(line: 350, column: 30, scope: !15832)
!15835 = !DILocalVariable(name: "a", arg: 2, scope: !15832, file: !5234, line: 350, type: !3251)
!15836 = !DILocation(line: 350, column: 48, scope: !15832)
!15837 = !DILocation(line: 352, column: 10, scope: !15832)
!15838 = !DILocation(line: 352, column: 2, scope: !15832)
!15839 = !DILocation(line: 352, column: 7, scope: !15832)
!15840 = !DILocation(line: 353, column: 10, scope: !15832)
!15841 = !DILocation(line: 353, column: 2, scope: !15832)
!15842 = !DILocation(line: 353, column: 7, scope: !15832)
!15843 = !DILocation(line: 354, column: 10, scope: !15832)
!15844 = !DILocation(line: 354, column: 2, scope: !15832)
!15845 = !DILocation(line: 354, column: 7, scope: !15832)
!15846 = !DILocation(line: 355, column: 1, scope: !15832)
!15847 = distinct !DISubprogram(name: "negate_v3", scope: !5234, file: !5234, line: 576, type: !6828, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15848 = !DILocalVariable(name: "r", arg: 1, scope: !15847, file: !5234, line: 576, type: !359)
!15849 = !DILocation(line: 576, column: 30, scope: !15847)
!15850 = !DILocation(line: 578, column: 10, scope: !15847)
!15851 = !DILocation(line: 578, column: 9, scope: !15847)
!15852 = !DILocation(line: 578, column: 2, scope: !15847)
!15853 = !DILocation(line: 578, column: 7, scope: !15847)
!15854 = !DILocation(line: 579, column: 10, scope: !15847)
!15855 = !DILocation(line: 579, column: 9, scope: !15847)
!15856 = !DILocation(line: 579, column: 2, scope: !15847)
!15857 = !DILocation(line: 579, column: 7, scope: !15847)
!15858 = !DILocation(line: 580, column: 10, scope: !15847)
!15859 = !DILocation(line: 580, column: 9, scope: !15847)
!15860 = !DILocation(line: 580, column: 2, scope: !15847)
!15861 = !DILocation(line: 580, column: 7, scope: !15847)
!15862 = !DILocation(line: 581, column: 1, scope: !15847)
!15863 = distinct !DISubprogram(name: "sculpt_clip", scope: !3, file: !3, line: 944, type: !15864, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15864 = !DISubroutineType(types: !15865)
!15865 = !{null, !6, !5374, !359, !3251}
!15866 = !DILocalVariable(name: "sd", arg: 1, scope: !15863, file: !3, line: 944, type: !6)
!15867 = !DILocation(line: 944, column: 33, scope: !15863)
!15868 = !DILocalVariable(name: "ss", arg: 2, scope: !15863, file: !3, line: 944, type: !5374)
!15869 = !DILocation(line: 944, column: 52, scope: !15863)
!15870 = !DILocalVariable(name: "co", arg: 3, scope: !15863, file: !3, line: 944, type: !359)
!15871 = !DILocation(line: 944, column: 62, scope: !15863)
!15872 = !DILocalVariable(name: "val", arg: 4, scope: !15863, file: !3, line: 944, type: !3251)
!15873 = !DILocation(line: 944, column: 81, scope: !15863)
!15874 = !DILocalVariable(name: "i", scope: !15863, file: !3, line: 946, type: !57)
!15875 = !DILocation(line: 946, column: 6, scope: !15863)
!15876 = !DILocation(line: 948, column: 9, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15863, file: !3, line: 948, column: 2)
!15878 = !DILocation(line: 948, column: 7, scope: !15877)
!15879 = !DILocation(line: 948, column: 14, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15877, file: !3, line: 948, column: 2)
!15881 = !DILocation(line: 948, column: 16, scope: !15880)
!15882 = !DILocation(line: 948, column: 2, scope: !15877)
!15883 = !DILocation(line: 949, column: 7, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 949, column: 7)
!15885 = distinct !DILexicalBlock(scope: !15880, file: !3, line: 948, column: 26)
!15886 = !DILocation(line: 949, column: 11, scope: !15884)
!15887 = !DILocation(line: 949, column: 37, scope: !15884)
!15888 = !DILocation(line: 949, column: 34, scope: !15884)
!15889 = !DILocation(line: 949, column: 17, scope: !15884)
!15890 = !DILocation(line: 949, column: 7, scope: !15885)
!15891 = !DILocation(line: 950, column: 4, scope: !15884)
!15892 = !DILocation(line: 952, column: 8, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 952, column: 7)
!15894 = !DILocation(line: 952, column: 12, scope: !15893)
!15895 = !DILocation(line: 952, column: 19, scope: !15893)
!15896 = !DILocation(line: 952, column: 37, scope: !15893)
!15897 = !DILocation(line: 952, column: 34, scope: !15893)
!15898 = !DILocation(line: 952, column: 24, scope: !15893)
!15899 = !DILocation(line: 952, column: 41, scope: !15893)
!15900 = !DILocation(line: 952, column: 51, scope: !15893)
!15901 = !DILocation(line: 952, column: 54, scope: !15893)
!15902 = !DILocation(line: 952, column: 45, scope: !15893)
!15903 = !DILocation(line: 952, column: 61, scope: !15893)
!15904 = !DILocation(line: 952, column: 65, scope: !15893)
!15905 = !DILocation(line: 952, column: 72, scope: !15893)
!15906 = !DILocation(line: 952, column: 87, scope: !15893)
!15907 = !DILocation(line: 952, column: 58, scope: !15893)
!15908 = !DILocation(line: 952, column: 7, scope: !15885)
!15909 = !DILocation(line: 953, column: 4, scope: !15893)
!15910 = !DILocation(line: 953, column: 7, scope: !15893)
!15911 = !DILocation(line: 953, column: 10, scope: !15893)
!15912 = !DILocation(line: 955, column: 12, scope: !15893)
!15913 = !DILocation(line: 955, column: 16, scope: !15893)
!15914 = !DILocation(line: 955, column: 4, scope: !15893)
!15915 = !DILocation(line: 955, column: 7, scope: !15893)
!15916 = !DILocation(line: 955, column: 10, scope: !15893)
!15917 = !DILocation(line: 956, column: 2, scope: !15885)
!15918 = !DILocation(line: 948, column: 21, scope: !15880)
!15919 = !DILocation(line: 948, column: 2, scope: !15880)
!15920 = distinct !{!15920, !15882, !15921}
!15921 = !DILocation(line: 956, column: 2, scope: !15877)
!15922 = !DILocation(line: 957, column: 1, scope: !15863)
!15923 = distinct !DISubprogram(name: "get_offset", scope: !3, file: !3, line: 2535, type: !15924, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15924 = !DISubroutineType(types: !15925)
!15925 = !{!153, !6, !5374}
!15926 = !DILocalVariable(name: "sd", arg: 1, scope: !15923, file: !3, line: 2535, type: !6)
!15927 = !DILocation(line: 2535, column: 33, scope: !15923)
!15928 = !DILocalVariable(name: "ss", arg: 2, scope: !15923, file: !3, line: 2535, type: !5374)
!15929 = !DILocation(line: 2535, column: 52, scope: !15923)
!15930 = !DILocalVariable(name: "brush", scope: !15923, file: !3, line: 2537, type: !2749)
!15931 = !DILocation(line: 2537, column: 9, scope: !15923)
!15932 = !DILocation(line: 2537, column: 34, scope: !15923)
!15933 = !DILocation(line: 2537, column: 38, scope: !15923)
!15934 = !DILocation(line: 2537, column: 17, scope: !15923)
!15935 = !DILocalVariable(name: "rv", scope: !15923, file: !3, line: 2539, type: !153)
!15936 = !DILocation(line: 2539, column: 8, scope: !15923)
!15937 = !DILocation(line: 2539, column: 13, scope: !15923)
!15938 = !DILocation(line: 2539, column: 20, scope: !15923)
!15939 = !DILocation(line: 2541, column: 6, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15923, file: !3, line: 2541, column: 6)
!15941 = !DILocation(line: 2541, column: 13, scope: !15940)
!15942 = !DILocation(line: 2541, column: 18, scope: !15940)
!15943 = !DILocation(line: 2541, column: 6, scope: !15923)
!15944 = !DILocation(line: 2542, column: 9, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15940, file: !3, line: 2541, column: 43)
!15946 = !DILocation(line: 2542, column: 13, scope: !15945)
!15947 = !DILocation(line: 2542, column: 20, scope: !15945)
!15948 = !DILocation(line: 2542, column: 6, scope: !15945)
!15949 = !DILocation(line: 2543, column: 2, scope: !15945)
!15950 = !DILocation(line: 2545, column: 9, scope: !15923)
!15951 = !DILocation(line: 2545, column: 2, scope: !15923)
!15952 = distinct !DISubprogram(name: "calc_sculpt_plane", scope: !3, file: !3, line: 2428, type: !15953, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!15953 = !DISubroutineType(types: !15954)
!15954 = !{null, !6, !3739, !3741, !57, !359, !359}
!15955 = !DILocalVariable(name: "sd", arg: 1, scope: !15952, file: !3, line: 2428, type: !6)
!15956 = !DILocation(line: 2428, column: 39, scope: !15952)
!15957 = !DILocalVariable(name: "ob", arg: 2, scope: !15952, file: !3, line: 2428, type: !3739)
!15958 = !DILocation(line: 2428, column: 51, scope: !15952)
!15959 = !DILocalVariable(name: "nodes", arg: 3, scope: !15952, file: !3, line: 2428, type: !3741)
!15960 = !DILocation(line: 2428, column: 66, scope: !15952)
!15961 = !DILocalVariable(name: "totnode", arg: 4, scope: !15952, file: !3, line: 2428, type: !57)
!15962 = !DILocation(line: 2428, column: 77, scope: !15952)
!15963 = !DILocalVariable(name: "an", arg: 5, scope: !15952, file: !3, line: 2428, type: !359)
!15964 = !DILocation(line: 2428, column: 92, scope: !15952)
!15965 = !DILocalVariable(name: "fc", arg: 6, scope: !15952, file: !3, line: 2428, type: !359)
!15966 = !DILocation(line: 2428, column: 105, scope: !15952)
!15967 = !DILocalVariable(name: "ss", scope: !15952, file: !3, line: 2430, type: !5374)
!15968 = !DILocation(line: 2430, column: 17, scope: !15952)
!15969 = !DILocation(line: 2430, column: 22, scope: !15952)
!15970 = !DILocation(line: 2430, column: 26, scope: !15952)
!15971 = !DILocalVariable(name: "brush", scope: !15952, file: !3, line: 2431, type: !2749)
!15972 = !DILocation(line: 2431, column: 9, scope: !15952)
!15973 = !DILocation(line: 2431, column: 34, scope: !15952)
!15974 = !DILocation(line: 2431, column: 38, scope: !15952)
!15975 = !DILocation(line: 2431, column: 17, scope: !15952)
!15976 = !DILocation(line: 2433, column: 6, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15952, file: !3, line: 2433, column: 6)
!15978 = !DILocation(line: 2433, column: 10, scope: !15977)
!15979 = !DILocation(line: 2433, column: 17, scope: !15977)
!15980 = !DILocation(line: 2433, column: 38, scope: !15977)
!15981 = !DILocation(line: 2433, column: 43, scope: !15977)
!15982 = !DILocation(line: 2434, column: 6, scope: !15977)
!15983 = !DILocation(line: 2434, column: 10, scope: !15977)
!15984 = !DILocation(line: 2434, column: 17, scope: !15977)
!15985 = !DILocation(line: 2434, column: 38, scope: !15977)
!15986 = !DILocation(line: 2434, column: 43, scope: !15977)
!15987 = !DILocation(line: 2435, column: 7, scope: !15977)
!15988 = !DILocation(line: 2435, column: 11, scope: !15977)
!15989 = !DILocation(line: 2435, column: 18, scope: !15977)
!15990 = !DILocation(line: 2435, column: 29, scope: !15977)
!15991 = !DILocation(line: 2435, column: 34, scope: !15977)
!15992 = !DILocation(line: 2435, column: 41, scope: !15977)
!15993 = !DILocation(line: 2435, column: 46, scope: !15977)
!15994 = !DILocation(line: 2433, column: 6, scope: !15952)
!15995 = !DILocation(line: 2437, column: 11, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 2436, column: 2)
!15997 = !DILocation(line: 2437, column: 18, scope: !15996)
!15998 = !DILocation(line: 2437, column: 3, scope: !15996)
!15999 = !DILocation(line: 2439, column: 16, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15996, file: !3, line: 2437, column: 32)
!16001 = !DILocation(line: 2439, column: 20, scope: !16000)
!16002 = !DILocation(line: 2439, column: 24, scope: !16000)
!16003 = !DILocation(line: 2439, column: 31, scope: !16000)
!16004 = !DILocation(line: 2439, column: 5, scope: !16000)
!16005 = !DILocation(line: 2440, column: 5, scope: !16000)
!16006 = !DILocation(line: 2443, column: 5, scope: !16000)
!16007 = !DILocation(line: 2443, column: 11, scope: !16000)
!16008 = !DILocation(line: 2444, column: 5, scope: !16000)
!16009 = !DILocation(line: 2444, column: 11, scope: !16000)
!16010 = !DILocation(line: 2445, column: 5, scope: !16000)
!16011 = !DILocation(line: 2445, column: 11, scope: !16000)
!16012 = !DILocation(line: 2446, column: 5, scope: !16000)
!16013 = !DILocation(line: 2449, column: 5, scope: !16000)
!16014 = !DILocation(line: 2449, column: 11, scope: !16000)
!16015 = !DILocation(line: 2450, column: 5, scope: !16000)
!16016 = !DILocation(line: 2450, column: 11, scope: !16000)
!16017 = !DILocation(line: 2451, column: 5, scope: !16000)
!16018 = !DILocation(line: 2451, column: 11, scope: !16000)
!16019 = !DILocation(line: 2452, column: 5, scope: !16000)
!16020 = !DILocation(line: 2455, column: 5, scope: !16000)
!16021 = !DILocation(line: 2455, column: 11, scope: !16000)
!16022 = !DILocation(line: 2456, column: 5, scope: !16000)
!16023 = !DILocation(line: 2456, column: 11, scope: !16000)
!16024 = !DILocation(line: 2457, column: 5, scope: !16000)
!16025 = !DILocation(line: 2457, column: 11, scope: !16000)
!16026 = !DILocation(line: 2458, column: 5, scope: !16000)
!16027 = !DILocation(line: 2461, column: 41, scope: !16000)
!16028 = !DILocation(line: 2461, column: 45, scope: !16000)
!16029 = !DILocation(line: 2461, column: 49, scope: !16000)
!16030 = !DILocation(line: 2461, column: 56, scope: !16000)
!16031 = !DILocation(line: 2461, column: 65, scope: !16000)
!16032 = !DILocation(line: 2461, column: 69, scope: !16000)
!16033 = !DILocation(line: 2461, column: 5, scope: !16000)
!16034 = !DILocation(line: 2462, column: 5, scope: !16000)
!16035 = !DILocation(line: 2465, column: 5, scope: !16000)
!16036 = !DILocation(line: 2470, column: 7, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !15996, file: !3, line: 2470, column: 7)
!16038 = !DILocation(line: 2470, column: 14, scope: !16037)
!16039 = !DILocation(line: 2470, column: 27, scope: !16037)
!16040 = !DILocation(line: 2470, column: 7, scope: !15996)
!16041 = !DILocation(line: 2471, column: 24, scope: !16037)
!16042 = !DILocation(line: 2471, column: 28, scope: !16037)
!16043 = !DILocation(line: 2471, column: 32, scope: !16037)
!16044 = !DILocation(line: 2471, column: 39, scope: !16037)
!16045 = !DILocation(line: 2471, column: 48, scope: !16037)
!16046 = !DILocation(line: 2471, column: 4, scope: !16037)
!16047 = !DILocation(line: 2474, column: 14, scope: !15996)
!16048 = !DILocation(line: 2474, column: 18, scope: !15996)
!16049 = !DILocation(line: 2474, column: 25, scope: !15996)
!16050 = !DILocation(line: 2474, column: 40, scope: !15996)
!16051 = !DILocation(line: 2474, column: 3, scope: !15996)
!16052 = !DILocation(line: 2477, column: 14, scope: !15996)
!16053 = !DILocation(line: 2477, column: 18, scope: !15996)
!16054 = !DILocation(line: 2477, column: 25, scope: !15996)
!16055 = !DILocation(line: 2477, column: 38, scope: !15996)
!16056 = !DILocation(line: 2477, column: 3, scope: !15996)
!16057 = !DILocation(line: 2478, column: 2, scope: !15996)
!16058 = !DILocation(line: 2481, column: 14, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 2479, column: 7)
!16060 = !DILocation(line: 2481, column: 18, scope: !16059)
!16061 = !DILocation(line: 2481, column: 22, scope: !16059)
!16062 = !DILocation(line: 2481, column: 29, scope: !16059)
!16063 = !DILocation(line: 2481, column: 3, scope: !16059)
!16064 = !DILocation(line: 2484, column: 14, scope: !16059)
!16065 = !DILocation(line: 2484, column: 18, scope: !16059)
!16066 = !DILocation(line: 2484, column: 22, scope: !16059)
!16067 = !DILocation(line: 2484, column: 29, scope: !16059)
!16068 = !DILocation(line: 2484, column: 3, scope: !16059)
!16069 = !DILocation(line: 2487, column: 11, scope: !16059)
!16070 = !DILocation(line: 2487, column: 15, scope: !16059)
!16071 = !DILocation(line: 2487, column: 19, scope: !16059)
!16072 = !DILocation(line: 2487, column: 26, scope: !16059)
!16073 = !DILocation(line: 2487, column: 3, scope: !16059)
!16074 = !DILocation(line: 2490, column: 11, scope: !16059)
!16075 = !DILocation(line: 2490, column: 15, scope: !16059)
!16076 = !DILocation(line: 2490, column: 19, scope: !16059)
!16077 = !DILocation(line: 2490, column: 26, scope: !16059)
!16078 = !DILocation(line: 2490, column: 3, scope: !16059)
!16079 = !DILocation(line: 2493, column: 13, scope: !16059)
!16080 = !DILocation(line: 2493, column: 17, scope: !16059)
!16081 = !DILocation(line: 2493, column: 24, scope: !16059)
!16082 = !DILocation(line: 2493, column: 38, scope: !16059)
!16083 = !DILocation(line: 2493, column: 3, scope: !16059)
!16084 = !DILocation(line: 2496, column: 13, scope: !16059)
!16085 = !DILocation(line: 2496, column: 17, scope: !16059)
!16086 = !DILocation(line: 2496, column: 24, scope: !16059)
!16087 = !DILocation(line: 2496, column: 38, scope: !16059)
!16088 = !DILocation(line: 2496, column: 3, scope: !16059)
!16089 = !DILocation(line: 2498, column: 1, scope: !15952)
!16090 = distinct !DISubprogram(name: "sculpt_brush_test_sq", scope: !3, file: !3, line: 563, type: !15302, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16091 = !DILocalVariable(name: "test", arg: 1, scope: !16090, file: !3, line: 563, type: !15193)
!16092 = !DILocation(line: 563, column: 51, scope: !16090)
!16093 = !DILocalVariable(name: "co", arg: 2, scope: !16090, file: !3, line: 563, type: !3251)
!16094 = !DILocation(line: 563, column: 69, scope: !16090)
!16095 = !DILocalVariable(name: "distsq", scope: !16090, file: !3, line: 565, type: !153)
!16096 = !DILocation(line: 565, column: 8, scope: !16090)
!16097 = !DILocation(line: 565, column: 34, scope: !16090)
!16098 = !DILocation(line: 565, column: 38, scope: !16090)
!16099 = !DILocation(line: 565, column: 44, scope: !16090)
!16100 = !DILocation(line: 565, column: 17, scope: !16090)
!16101 = !DILocation(line: 567, column: 6, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16090, file: !3, line: 567, column: 6)
!16103 = !DILocation(line: 567, column: 16, scope: !16102)
!16104 = !DILocation(line: 567, column: 22, scope: !16102)
!16105 = !DILocation(line: 567, column: 13, scope: !16102)
!16106 = !DILocation(line: 567, column: 6, scope: !16090)
!16107 = !DILocation(line: 568, column: 34, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 568, column: 7)
!16109 = distinct !DILexicalBlock(scope: !16102, file: !3, line: 567, column: 38)
!16110 = !DILocation(line: 568, column: 40, scope: !16108)
!16111 = !DILocation(line: 568, column: 7, scope: !16108)
!16112 = !DILocation(line: 568, column: 7, scope: !16109)
!16113 = !DILocation(line: 569, column: 4, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 568, column: 45)
!16115 = !DILocation(line: 571, column: 16, scope: !16109)
!16116 = !DILocation(line: 571, column: 3, scope: !16109)
!16117 = !DILocation(line: 571, column: 9, scope: !16109)
!16118 = !DILocation(line: 571, column: 14, scope: !16109)
!16119 = !DILocation(line: 572, column: 3, scope: !16109)
!16120 = !DILocation(line: 575, column: 3, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16102, file: !3, line: 574, column: 7)
!16122 = !DILocation(line: 577, column: 1, scope: !16090)
!16123 = distinct !DISubprogram(name: "point_plane_project", scope: !3, file: !3, line: 2501, type: !15259, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16124 = !DILocalVariable(name: "intr", arg: 1, scope: !16123, file: !3, line: 2501, type: !359)
!16125 = !DILocation(line: 2501, column: 39, scope: !16123)
!16126 = !DILocalVariable(name: "co", arg: 2, scope: !16123, file: !3, line: 2501, type: !359)
!16127 = !DILocation(line: 2501, column: 54, scope: !16123)
!16128 = !DILocalVariable(name: "plane_normal", arg: 3, scope: !16123, file: !3, line: 2501, type: !359)
!16129 = !DILocation(line: 2501, column: 67, scope: !16123)
!16130 = !DILocalVariable(name: "plane_center", arg: 4, scope: !16123, file: !3, line: 2501, type: !359)
!16131 = !DILocation(line: 2501, column: 90, scope: !16123)
!16132 = !DILocation(line: 2503, column: 14, scope: !16123)
!16133 = !DILocation(line: 2503, column: 20, scope: !16123)
!16134 = !DILocation(line: 2503, column: 24, scope: !16123)
!16135 = !DILocation(line: 2503, column: 2, scope: !16123)
!16136 = !DILocation(line: 2504, column: 14, scope: !16123)
!16137 = !DILocation(line: 2504, column: 20, scope: !16123)
!16138 = !DILocation(line: 2504, column: 43, scope: !16123)
!16139 = !DILocation(line: 2504, column: 57, scope: !16123)
!16140 = !DILocation(line: 2504, column: 34, scope: !16123)
!16141 = !DILocation(line: 2504, column: 2, scope: !16123)
!16142 = !DILocation(line: 2505, column: 14, scope: !16123)
!16143 = !DILocation(line: 2505, column: 20, scope: !16123)
!16144 = !DILocation(line: 2505, column: 24, scope: !16123)
!16145 = !DILocation(line: 2505, column: 2, scope: !16123)
!16146 = !DILocation(line: 2506, column: 1, scope: !16123)
!16147 = distinct !DISubprogram(name: "plane_trim", scope: !3, file: !3, line: 2508, type: !16148, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16148 = !DISubroutineType(types: !16149)
!16149 = !{!57, !5642, !2749, !359}
!16150 = !DILocalVariable(name: "cache", arg: 1, scope: !16147, file: !3, line: 2508, type: !5642)
!16151 = !DILocation(line: 2508, column: 36, scope: !16147)
!16152 = !DILocalVariable(name: "brush", arg: 2, scope: !16147, file: !3, line: 2508, type: !2749)
!16153 = !DILocation(line: 2508, column: 50, scope: !16147)
!16154 = !DILocalVariable(name: "val", arg: 3, scope: !16147, file: !3, line: 2508, type: !359)
!16155 = !DILocation(line: 2508, column: 63, scope: !16147)
!16156 = !DILocation(line: 2510, column: 12, scope: !16147)
!16157 = !DILocation(line: 2510, column: 19, scope: !16147)
!16158 = !DILocation(line: 2510, column: 24, scope: !16147)
!16159 = !DILocation(line: 2510, column: 44, scope: !16147)
!16160 = !DILocation(line: 2511, column: 21, scope: !16147)
!16161 = !DILocation(line: 2511, column: 26, scope: !16147)
!16162 = !DILocation(line: 2511, column: 12, scope: !16147)
!16163 = !DILocation(line: 2511, column: 34, scope: !16147)
!16164 = !DILocation(line: 2511, column: 41, scope: !16147)
!16165 = !DILocation(line: 2511, column: 58, scope: !16147)
!16166 = !DILocation(line: 2511, column: 65, scope: !16147)
!16167 = !DILocation(line: 2511, column: 56, scope: !16147)
!16168 = !DILocation(line: 2511, column: 31, scope: !16147)
!16169 = !DILocation(line: 2510, column: 2, scope: !16147)
!16170 = distinct !DISubprogram(name: "calc_area_normal_and_flatten_center", scope: !3, file: !3, line: 2296, type: !15953, scopeLine: 2299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16171 = !DILocalVariable(name: "sd", arg: 1, scope: !16170, file: !3, line: 2296, type: !6)
!16172 = !DILocation(line: 2296, column: 57, scope: !16170)
!16173 = !DILocalVariable(name: "ob", arg: 2, scope: !16170, file: !3, line: 2296, type: !3739)
!16174 = !DILocation(line: 2296, column: 69, scope: !16170)
!16175 = !DILocalVariable(name: "nodes", arg: 3, scope: !16170, file: !3, line: 2297, type: !3741)
!16176 = !DILocation(line: 2297, column: 60, scope: !16170)
!16177 = !DILocalVariable(name: "totnode", arg: 4, scope: !16170, file: !3, line: 2297, type: !57)
!16178 = !DILocation(line: 2297, column: 71, scope: !16170)
!16179 = !DILocalVariable(name: "an", arg: 5, scope: !16170, file: !3, line: 2298, type: !359)
!16180 = !DILocation(line: 2298, column: 55, scope: !16170)
!16181 = !DILocalVariable(name: "fc", arg: 6, scope: !16170, file: !3, line: 2298, type: !359)
!16182 = !DILocation(line: 2298, column: 68, scope: !16170)
!16183 = !DILocalVariable(name: "ss", scope: !16170, file: !3, line: 2300, type: !5374)
!16184 = !DILocation(line: 2300, column: 17, scope: !16170)
!16185 = !DILocation(line: 2300, column: 22, scope: !16170)
!16186 = !DILocation(line: 2300, column: 26, scope: !16170)
!16187 = !DILocalVariable(name: "n", scope: !16170, file: !3, line: 2301, type: !57)
!16188 = !DILocation(line: 2301, column: 6, scope: !16170)
!16189 = !DILocalVariable(name: "out_flip", scope: !16170, file: !3, line: 2304, type: !233)
!16190 = !DILocation(line: 2304, column: 8, scope: !16170)
!16191 = !DILocalVariable(name: "fc_flip", scope: !16170, file: !3, line: 2305, type: !233)
!16192 = !DILocation(line: 2305, column: 8, scope: !16170)
!16193 = !DILocalVariable(name: "count", scope: !16170, file: !3, line: 2308, type: !57)
!16194 = !DILocation(line: 2308, column: 6, scope: !16170)
!16195 = !DILocalVariable(name: "count_flipped", scope: !16170, file: !3, line: 2309, type: !57)
!16196 = !DILocation(line: 2309, column: 6, scope: !16170)
!16197 = !DILocation(line: 2311, column: 8, scope: !16170)
!16198 = !DILocation(line: 2314, column: 10, scope: !16170)
!16199 = !DILocation(line: 2314, column: 2, scope: !16170)
!16200 = !DILocation(line: 2317, column: 10, scope: !16170)
!16201 = !DILocation(line: 2317, column: 2, scope: !16170)
!16202 = !DILocation(line: 2322, column: 9, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 2322, column: 2)
!16204 = !DILocation(line: 2322, column: 7, scope: !16203)
!16205 = !DILocation(line: 2322, column: 14, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16203, file: !3, line: 2322, column: 2)
!16207 = !DILocation(line: 2322, column: 18, scope: !16206)
!16208 = !DILocation(line: 2322, column: 16, scope: !16206)
!16209 = !DILocation(line: 2322, column: 2, scope: !16203)
!16210 = !DILocalVariable(name: "vd", scope: !16211, file: !3, line: 2323, type: !9184)
!16211 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 2322, column: 32)
!16212 = !DILocation(line: 2323, column: 18, scope: !16211)
!16213 = !DILocalVariable(name: "test", scope: !16211, file: !3, line: 2324, type: !11350)
!16214 = !DILocation(line: 2324, column: 19, scope: !16211)
!16215 = !DILocalVariable(name: "unode", scope: !16211, file: !3, line: 2325, type: !5893)
!16216 = !DILocation(line: 2325, column: 19, scope: !16211)
!16217 = !DILocalVariable(name: "private_an", scope: !16211, file: !3, line: 2326, type: !233)
!16218 = !DILocation(line: 2326, column: 9, scope: !16211)
!16219 = !DILocalVariable(name: "private_out_flip", scope: !16211, file: !3, line: 2327, type: !233)
!16220 = !DILocation(line: 2327, column: 9, scope: !16211)
!16221 = !DILocalVariable(name: "private_fc", scope: !16211, file: !3, line: 2328, type: !233)
!16222 = !DILocation(line: 2328, column: 9, scope: !16211)
!16223 = !DILocalVariable(name: "private_fc_flip", scope: !16211, file: !3, line: 2329, type: !233)
!16224 = !DILocation(line: 2329, column: 9, scope: !16211)
!16225 = !DILocalVariable(name: "private_count", scope: !16211, file: !3, line: 2330, type: !57)
!16226 = !DILocation(line: 2330, column: 7, scope: !16211)
!16227 = !DILocalVariable(name: "private_count_flip", scope: !16211, file: !3, line: 2331, type: !57)
!16228 = !DILocation(line: 2331, column: 7, scope: !16211)
!16229 = !DILocation(line: 2333, column: 33, scope: !16211)
!16230 = !DILocation(line: 2333, column: 37, scope: !16211)
!16231 = !DILocation(line: 2333, column: 43, scope: !16211)
!16232 = !DILocation(line: 2333, column: 11, scope: !16211)
!16233 = !DILocation(line: 2333, column: 9, scope: !16211)
!16234 = !DILocation(line: 2334, column: 26, scope: !16211)
!16235 = !DILocation(line: 2334, column: 3, scope: !16211)
!16236 = !DILocation(line: 2336, column: 7, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16211, file: !3, line: 2336, column: 7)
!16238 = !DILocation(line: 2336, column: 11, scope: !16237)
!16239 = !DILocation(line: 2336, column: 18, scope: !16237)
!16240 = !DILocation(line: 2336, column: 27, scope: !16237)
!16241 = !DILocation(line: 2336, column: 30, scope: !16237)
!16242 = !DILocation(line: 2336, column: 37, scope: !16237)
!16243 = !DILocation(line: 2336, column: 7, scope: !16211)
!16244 = !DILocation(line: 2337, column: 4, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16237, file: !3, line: 2336, column: 41)
!16246 = !DILocation(line: 2337, column: 4, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16245, file: !3, line: 2337, column: 4)
!16248 = !DILocation(line: 2337, column: 4, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16247, file: !3, line: 2337, column: 4)
!16250 = !DILocation(line: 2337, column: 4, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16252, file: !3, line: 2337, column: 4)
!16252 = distinct !DILexicalBlock(scope: !16249, file: !3, line: 2337, column: 4)
!16253 = !DILocation(line: 2337, column: 4, scope: !16252)
!16254 = !DILocation(line: 2337, column: 4, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16251, file: !3, line: 2337, column: 4)
!16256 = !DILocation(line: 2337, column: 4, scope: !16257)
!16257 = distinct !DILexicalBlock(scope: !16255, file: !3, line: 2337, column: 4)
!16258 = !DILocation(line: 2337, column: 4, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16251, file: !3, line: 2337, column: 4)
!16260 = !DILocation(line: 2337, column: 4, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16252, file: !3, line: 2337, column: 4)
!16262 = !DILocation(line: 2337, column: 4, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16261, file: !3, line: 2337, column: 4)
!16264 = !DILocation(line: 2337, column: 4, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 2337, column: 4)
!16266 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 2337, column: 4)
!16267 = !DILocation(line: 2337, column: 4, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16265, file: !3, line: 2337, column: 4)
!16269 = !DILocation(line: 2337, column: 4, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 2337, column: 4)
!16271 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 2337, column: 4)
!16272 = !DILocation(line: 2337, column: 4, scope: !16271)
!16273 = !DILocation(line: 2337, column: 4, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 2337, column: 4)
!16275 = !DILocation(line: 2337, column: 4, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16274, file: !3, line: 2337, column: 4)
!16277 = !DILocation(line: 2337, column: 4, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16279, file: !3, line: 2337, column: 4)
!16279 = distinct !DILexicalBlock(scope: !16276, file: !3, line: 2337, column: 4)
!16280 = !DILocation(line: 2337, column: 4, scope: !16279)
!16281 = !DILocation(line: 2337, column: 4, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 2337, column: 4)
!16283 = !DILocation(line: 2337, column: 4, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 2337, column: 4)
!16285 = !DILocation(line: 2337, column: 4, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 2337, column: 4)
!16287 = !DILocation(line: 2337, column: 4, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 2337, column: 4)
!16289 = !DILocation(line: 2337, column: 4, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16291, file: !3, line: 2337, column: 4)
!16291 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 2337, column: 4)
!16292 = !DILocation(line: 2337, column: 4, scope: !16291)
!16293 = !DILocation(line: 2337, column: 4, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16290, file: !3, line: 2337, column: 4)
!16295 = !DILocation(line: 2337, column: 4, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16290, file: !3, line: 2337, column: 4)
!16297 = !DILocation(line: 2337, column: 4, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16291, file: !3, line: 2337, column: 4)
!16299 = !DILocation(line: 2339, column: 39, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16301, file: !3, line: 2339, column: 9)
!16301 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 2338, column: 4)
!16302 = !DILocation(line: 2339, column: 46, scope: !16300)
!16303 = !DILocation(line: 2339, column: 52, scope: !16300)
!16304 = !DILocation(line: 2339, column: 9, scope: !16300)
!16305 = !DILocation(line: 2339, column: 9, scope: !16301)
!16306 = !DILocalVariable(name: "fno", scope: !16307, file: !3, line: 2341, type: !233)
!16307 = distinct !DILexicalBlock(scope: !16300, file: !3, line: 2339, column: 57)
!16308 = !DILocation(line: 2341, column: 12, scope: !16307)
!16309 = !DILocation(line: 2343, column: 31, scope: !16307)
!16310 = !DILocation(line: 2343, column: 36, scope: !16307)
!16311 = !DILocation(line: 2343, column: 43, scope: !16307)
!16312 = !DILocation(line: 2343, column: 49, scope: !16307)
!16313 = !DILocation(line: 2343, column: 6, scope: !16307)
!16314 = !DILocation(line: 2345, column: 19, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 2345, column: 10)
!16316 = !DILocation(line: 2345, column: 23, scope: !16315)
!16317 = !DILocation(line: 2345, column: 30, scope: !16315)
!16318 = !DILocation(line: 2345, column: 43, scope: !16315)
!16319 = !DILocation(line: 2345, column: 10, scope: !16315)
!16320 = !DILocation(line: 2345, column: 48, scope: !16315)
!16321 = !DILocation(line: 2345, column: 10, scope: !16307)
!16322 = !DILocation(line: 2346, column: 17, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 2345, column: 53)
!16324 = !DILocation(line: 2346, column: 29, scope: !16323)
!16325 = !DILocation(line: 2346, column: 7, scope: !16323)
!16326 = !DILocation(line: 2347, column: 17, scope: !16323)
!16327 = !DILocation(line: 2347, column: 29, scope: !16323)
!16328 = !DILocation(line: 2347, column: 36, scope: !16323)
!16329 = !DILocation(line: 2347, column: 42, scope: !16323)
!16330 = !DILocation(line: 2347, column: 7, scope: !16323)
!16331 = !DILocation(line: 2348, column: 20, scope: !16323)
!16332 = !DILocation(line: 2349, column: 6, scope: !16323)
!16333 = !DILocation(line: 2351, column: 17, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 2350, column: 11)
!16335 = !DILocation(line: 2351, column: 35, scope: !16334)
!16336 = !DILocation(line: 2351, column: 7, scope: !16334)
!16337 = !DILocation(line: 2352, column: 17, scope: !16334)
!16338 = !DILocation(line: 2352, column: 34, scope: !16334)
!16339 = !DILocation(line: 2352, column: 41, scope: !16334)
!16340 = !DILocation(line: 2352, column: 47, scope: !16334)
!16341 = !DILocation(line: 2352, column: 7, scope: !16334)
!16342 = !DILocation(line: 2353, column: 25, scope: !16334)
!16343 = !DILocation(line: 2355, column: 5, scope: !16307)
!16344 = !DILocation(line: 2357, column: 4, scope: !16271)
!16345 = distinct !{!16345, !16264, !16346}
!16346 = !DILocation(line: 2357, column: 4, scope: !16265)
!16347 = !DILocation(line: 2357, column: 4, scope: !16266)
!16348 = distinct !{!16348, !16260, !16349}
!16349 = !DILocation(line: 2357, column: 4, scope: !16261)
!16350 = !DILocation(line: 2357, column: 4, scope: !16252)
!16351 = distinct !{!16351, !16246, !16352}
!16352 = !DILocation(line: 2357, column: 4, scope: !16247)
!16353 = !DILocation(line: 2358, column: 3, scope: !16245)
!16354 = !DILocation(line: 2360, column: 4, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16237, file: !3, line: 2359, column: 8)
!16356 = !DILocation(line: 2360, column: 4, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 2360, column: 4)
!16358 = !DILocation(line: 2360, column: 4, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16357, file: !3, line: 2360, column: 4)
!16360 = !DILocation(line: 2360, column: 4, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !3, line: 2360, column: 4)
!16362 = distinct !DILexicalBlock(scope: !16359, file: !3, line: 2360, column: 4)
!16363 = !DILocation(line: 2360, column: 4, scope: !16362)
!16364 = !DILocation(line: 2360, column: 4, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16361, file: !3, line: 2360, column: 4)
!16366 = !DILocation(line: 2360, column: 4, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16365, file: !3, line: 2360, column: 4)
!16368 = !DILocation(line: 2360, column: 4, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16361, file: !3, line: 2360, column: 4)
!16370 = !DILocation(line: 2360, column: 4, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16362, file: !3, line: 2360, column: 4)
!16372 = !DILocation(line: 2360, column: 4, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16371, file: !3, line: 2360, column: 4)
!16374 = !DILocation(line: 2360, column: 4, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !3, line: 2360, column: 4)
!16376 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 2360, column: 4)
!16377 = !DILocation(line: 2360, column: 4, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16375, file: !3, line: 2360, column: 4)
!16379 = !DILocation(line: 2360, column: 4, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !3, line: 2360, column: 4)
!16381 = distinct !DILexicalBlock(scope: !16378, file: !3, line: 2360, column: 4)
!16382 = !DILocation(line: 2360, column: 4, scope: !16381)
!16383 = !DILocation(line: 2360, column: 4, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 2360, column: 4)
!16385 = !DILocation(line: 2360, column: 4, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16384, file: !3, line: 2360, column: 4)
!16387 = !DILocation(line: 2360, column: 4, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 2360, column: 4)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !3, line: 2360, column: 4)
!16390 = !DILocation(line: 2360, column: 4, scope: !16389)
!16391 = !DILocation(line: 2360, column: 4, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 2360, column: 4)
!16393 = !DILocation(line: 2360, column: 4, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16392, file: !3, line: 2360, column: 4)
!16395 = !DILocation(line: 2360, column: 4, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2360, column: 4)
!16397 = !DILocation(line: 2360, column: 4, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2360, column: 4)
!16399 = !DILocation(line: 2360, column: 4, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16401, file: !3, line: 2360, column: 4)
!16401 = distinct !DILexicalBlock(scope: !16392, file: !3, line: 2360, column: 4)
!16402 = !DILocation(line: 2360, column: 4, scope: !16401)
!16403 = !DILocation(line: 2360, column: 4, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16400, file: !3, line: 2360, column: 4)
!16405 = !DILocation(line: 2360, column: 4, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16400, file: !3, line: 2360, column: 4)
!16407 = !DILocation(line: 2360, column: 4, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16401, file: !3, line: 2360, column: 4)
!16409 = !DILocation(line: 2362, column: 42, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !3, line: 2362, column: 9)
!16411 = distinct !DILexicalBlock(scope: !16381, file: !3, line: 2361, column: 4)
!16412 = !DILocation(line: 2362, column: 9, scope: !16410)
!16413 = !DILocation(line: 2362, column: 9, scope: !16411)
!16414 = !DILocation(line: 2364, column: 13, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16416, file: !3, line: 2364, column: 10)
!16416 = distinct !DILexicalBlock(scope: !16410, file: !3, line: 2362, column: 47)
!16417 = !DILocation(line: 2364, column: 10, scope: !16415)
!16418 = !DILocation(line: 2364, column: 10, scope: !16416)
!16419 = !DILocalVariable(name: "fno", scope: !16420, file: !3, line: 2365, type: !233)
!16420 = distinct !DILexicalBlock(scope: !16415, file: !3, line: 2364, column: 17)
!16421 = !DILocation(line: 2365, column: 13, scope: !16420)
!16422 = !DILocation(line: 2367, column: 32, scope: !16420)
!16423 = !DILocation(line: 2367, column: 40, scope: !16420)
!16424 = !DILocation(line: 2367, column: 7, scope: !16420)
!16425 = !DILocation(line: 2369, column: 20, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16420, file: !3, line: 2369, column: 11)
!16427 = !DILocation(line: 2369, column: 24, scope: !16426)
!16428 = !DILocation(line: 2369, column: 31, scope: !16426)
!16429 = !DILocation(line: 2369, column: 44, scope: !16426)
!16430 = !DILocation(line: 2369, column: 11, scope: !16426)
!16431 = !DILocation(line: 2369, column: 49, scope: !16426)
!16432 = !DILocation(line: 2369, column: 11, scope: !16420)
!16433 = !DILocation(line: 2370, column: 18, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 2369, column: 54)
!16435 = !DILocation(line: 2370, column: 30, scope: !16434)
!16436 = !DILocation(line: 2370, column: 8, scope: !16434)
!16437 = !DILocation(line: 2371, column: 18, scope: !16434)
!16438 = !DILocation(line: 2371, column: 33, scope: !16434)
!16439 = !DILocation(line: 2371, column: 8, scope: !16434)
!16440 = !DILocation(line: 2372, column: 21, scope: !16434)
!16441 = !DILocation(line: 2373, column: 7, scope: !16434)
!16442 = !DILocation(line: 2375, column: 18, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 2374, column: 12)
!16444 = !DILocation(line: 2375, column: 36, scope: !16443)
!16445 = !DILocation(line: 2375, column: 8, scope: !16443)
!16446 = !DILocation(line: 2376, column: 18, scope: !16443)
!16447 = !DILocation(line: 2376, column: 38, scope: !16443)
!16448 = !DILocation(line: 2376, column: 8, scope: !16443)
!16449 = !DILocation(line: 2377, column: 26, scope: !16443)
!16450 = !DILocation(line: 2379, column: 6, scope: !16420)
!16451 = !DILocation(line: 2381, column: 20, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16453, file: !3, line: 2381, column: 11)
!16453 = distinct !DILexicalBlock(scope: !16415, file: !3, line: 2380, column: 11)
!16454 = !DILocation(line: 2381, column: 24, scope: !16452)
!16455 = !DILocation(line: 2381, column: 31, scope: !16452)
!16456 = !DILocation(line: 2381, column: 47, scope: !16452)
!16457 = !DILocation(line: 2381, column: 11, scope: !16452)
!16458 = !DILocation(line: 2381, column: 52, scope: !16452)
!16459 = !DILocation(line: 2381, column: 11, scope: !16453)
!16460 = !DILocation(line: 2382, column: 18, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16452, file: !3, line: 2381, column: 57)
!16462 = !DILocation(line: 2382, column: 33, scope: !16461)
!16463 = !DILocation(line: 2382, column: 8, scope: !16461)
!16464 = !DILocation(line: 2383, column: 18, scope: !16461)
!16465 = !DILocation(line: 2383, column: 33, scope: !16461)
!16466 = !DILocation(line: 2383, column: 8, scope: !16461)
!16467 = !DILocation(line: 2384, column: 21, scope: !16461)
!16468 = !DILocation(line: 2385, column: 7, scope: !16461)
!16469 = !DILocation(line: 2387, column: 18, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16452, file: !3, line: 2386, column: 12)
!16471 = !DILocation(line: 2387, column: 39, scope: !16470)
!16472 = !DILocation(line: 2387, column: 8, scope: !16470)
!16473 = !DILocation(line: 2388, column: 18, scope: !16470)
!16474 = !DILocation(line: 2388, column: 38, scope: !16470)
!16475 = !DILocation(line: 2388, column: 8, scope: !16470)
!16476 = !DILocation(line: 2389, column: 26, scope: !16470)
!16477 = !DILocation(line: 2392, column: 5, scope: !16416)
!16478 = !DILocation(line: 2394, column: 4, scope: !16381)
!16479 = distinct !{!16479, !16374, !16480}
!16480 = !DILocation(line: 2394, column: 4, scope: !16375)
!16481 = !DILocation(line: 2394, column: 4, scope: !16376)
!16482 = distinct !{!16482, !16370, !16483}
!16483 = !DILocation(line: 2394, column: 4, scope: !16371)
!16484 = !DILocation(line: 2394, column: 4, scope: !16362)
!16485 = distinct !{!16485, !16356, !16486}
!16486 = !DILocation(line: 2394, column: 4, scope: !16357)
!16487 = !DILocation(line: 2402, column: 14, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16211, file: !3, line: 2400, column: 3)
!16489 = !DILocation(line: 2402, column: 18, scope: !16488)
!16490 = !DILocation(line: 2402, column: 4, scope: !16488)
!16491 = !DILocation(line: 2403, column: 14, scope: !16488)
!16492 = !DILocation(line: 2403, column: 24, scope: !16488)
!16493 = !DILocation(line: 2403, column: 4, scope: !16488)
!16494 = !DILocation(line: 2406, column: 14, scope: !16488)
!16495 = !DILocation(line: 2406, column: 18, scope: !16488)
!16496 = !DILocation(line: 2406, column: 4, scope: !16488)
!16497 = !DILocation(line: 2407, column: 14, scope: !16488)
!16498 = !DILocation(line: 2407, column: 23, scope: !16488)
!16499 = !DILocation(line: 2407, column: 4, scope: !16488)
!16500 = !DILocation(line: 2408, column: 13, scope: !16488)
!16501 = !DILocation(line: 2408, column: 10, scope: !16488)
!16502 = !DILocation(line: 2409, column: 21, scope: !16488)
!16503 = !DILocation(line: 2409, column: 18, scope: !16488)
!16504 = !DILocation(line: 2411, column: 2, scope: !16211)
!16505 = !DILocation(line: 2322, column: 28, scope: !16206)
!16506 = !DILocation(line: 2322, column: 2, scope: !16206)
!16507 = distinct !{!16507, !16209, !16508}
!16508 = !DILocation(line: 2411, column: 2, scope: !16203)
!16509 = !DILocation(line: 2414, column: 17, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 2414, column: 6)
!16511 = !DILocation(line: 2414, column: 6, scope: !16510)
!16512 = !DILocation(line: 2414, column: 6, scope: !16170)
!16513 = !DILocation(line: 2415, column: 14, scope: !16510)
!16514 = !DILocation(line: 2415, column: 18, scope: !16510)
!16515 = !DILocation(line: 2415, column: 3, scope: !16510)
!16516 = !DILocation(line: 2417, column: 15, scope: !16170)
!16517 = !DILocation(line: 2417, column: 2, scope: !16170)
!16518 = !DILocation(line: 2420, column: 6, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 2420, column: 6)
!16520 = !DILocation(line: 2420, column: 12, scope: !16519)
!16521 = !DILocation(line: 2420, column: 6, scope: !16170)
!16522 = !DILocation(line: 2421, column: 13, scope: !16519)
!16523 = !DILocation(line: 2421, column: 24, scope: !16519)
!16524 = !DILocation(line: 2421, column: 22, scope: !16519)
!16525 = !DILocation(line: 2421, column: 3, scope: !16519)
!16526 = !DILocation(line: 2422, column: 11, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 2422, column: 11)
!16528 = !DILocation(line: 2422, column: 25, scope: !16527)
!16529 = !DILocation(line: 2422, column: 11, scope: !16519)
!16530 = !DILocation(line: 2423, column: 15, scope: !16527)
!16531 = !DILocation(line: 2423, column: 19, scope: !16527)
!16532 = !DILocation(line: 2423, column: 35, scope: !16527)
!16533 = !DILocation(line: 2423, column: 33, scope: !16527)
!16534 = !DILocation(line: 2423, column: 3, scope: !16527)
!16535 = !DILocation(line: 2425, column: 11, scope: !16527)
!16536 = !DILocation(line: 2425, column: 3, scope: !16527)
!16537 = !DILocation(line: 2426, column: 1, scope: !16170)
!16538 = distinct !DISubprogram(name: "calc_flatten_center", scope: !3, file: !3, line: 2194, type: !14830, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16539 = !DILocalVariable(name: "sd", arg: 1, scope: !16538, file: !3, line: 2194, type: !6)
!16540 = !DILocation(line: 2194, column: 41, scope: !16538)
!16541 = !DILocalVariable(name: "ob", arg: 2, scope: !16538, file: !3, line: 2194, type: !3739)
!16542 = !DILocation(line: 2194, column: 53, scope: !16538)
!16543 = !DILocalVariable(name: "nodes", arg: 3, scope: !16538, file: !3, line: 2194, type: !3741)
!16544 = !DILocation(line: 2194, column: 68, scope: !16538)
!16545 = !DILocalVariable(name: "totnode", arg: 4, scope: !16538, file: !3, line: 2194, type: !57)
!16546 = !DILocation(line: 2194, column: 79, scope: !16538)
!16547 = !DILocalVariable(name: "fc", arg: 5, scope: !16538, file: !3, line: 2194, type: !359)
!16548 = !DILocation(line: 2194, column: 94, scope: !16538)
!16549 = !DILocalVariable(name: "ss", scope: !16538, file: !3, line: 2196, type: !5374)
!16550 = !DILocation(line: 2196, column: 17, scope: !16538)
!16551 = !DILocation(line: 2196, column: 22, scope: !16538)
!16552 = !DILocation(line: 2196, column: 26, scope: !16538)
!16553 = !DILocalVariable(name: "n", scope: !16538, file: !3, line: 2197, type: !57)
!16554 = !DILocation(line: 2197, column: 6, scope: !16538)
!16555 = !DILocalVariable(name: "count", scope: !16538, file: !3, line: 2199, type: !57)
!16556 = !DILocation(line: 2199, column: 6, scope: !16538)
!16557 = !DILocalVariable(name: "count_flip", scope: !16538, file: !3, line: 2200, type: !57)
!16558 = !DILocation(line: 2200, column: 6, scope: !16538)
!16559 = !DILocalVariable(name: "fc_flip", scope: !16538, file: !3, line: 2202, type: !233)
!16560 = !DILocation(line: 2202, column: 8, scope: !16538)
!16561 = !DILocation(line: 2204, column: 8, scope: !16538)
!16562 = !DILocation(line: 2206, column: 10, scope: !16538)
!16563 = !DILocation(line: 2206, column: 2, scope: !16538)
!16564 = !DILocation(line: 2211, column: 9, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 2211, column: 2)
!16566 = !DILocation(line: 2211, column: 7, scope: !16565)
!16567 = !DILocation(line: 2211, column: 14, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16565, file: !3, line: 2211, column: 2)
!16569 = !DILocation(line: 2211, column: 18, scope: !16568)
!16570 = !DILocation(line: 2211, column: 16, scope: !16568)
!16571 = !DILocation(line: 2211, column: 2, scope: !16565)
!16572 = !DILocalVariable(name: "vd", scope: !16573, file: !3, line: 2212, type: !9184)
!16573 = distinct !DILexicalBlock(scope: !16568, file: !3, line: 2211, column: 32)
!16574 = !DILocation(line: 2212, column: 18, scope: !16573)
!16575 = !DILocalVariable(name: "test", scope: !16573, file: !3, line: 2213, type: !11350)
!16576 = !DILocation(line: 2213, column: 19, scope: !16573)
!16577 = !DILocalVariable(name: "unode", scope: !16573, file: !3, line: 2214, type: !5893)
!16578 = !DILocation(line: 2214, column: 19, scope: !16573)
!16579 = !DILocalVariable(name: "private_fc", scope: !16573, file: !3, line: 2215, type: !233)
!16580 = !DILocation(line: 2215, column: 9, scope: !16573)
!16581 = !DILocalVariable(name: "private_fc_flip", scope: !16573, file: !3, line: 2216, type: !233)
!16582 = !DILocation(line: 2216, column: 9, scope: !16573)
!16583 = !DILocalVariable(name: "private_count", scope: !16573, file: !3, line: 2217, type: !57)
!16584 = !DILocation(line: 2217, column: 7, scope: !16573)
!16585 = !DILocalVariable(name: "private_count_flip", scope: !16573, file: !3, line: 2218, type: !57)
!16586 = !DILocation(line: 2218, column: 7, scope: !16573)
!16587 = !DILocation(line: 2220, column: 33, scope: !16573)
!16588 = !DILocation(line: 2220, column: 37, scope: !16573)
!16589 = !DILocation(line: 2220, column: 43, scope: !16573)
!16590 = !DILocation(line: 2220, column: 11, scope: !16573)
!16591 = !DILocation(line: 2220, column: 9, scope: !16573)
!16592 = !DILocation(line: 2221, column: 26, scope: !16573)
!16593 = !DILocation(line: 2221, column: 3, scope: !16573)
!16594 = !DILocation(line: 2223, column: 7, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16573, file: !3, line: 2223, column: 7)
!16596 = !DILocation(line: 2223, column: 11, scope: !16595)
!16597 = !DILocation(line: 2223, column: 18, scope: !16595)
!16598 = !DILocation(line: 2223, column: 27, scope: !16595)
!16599 = !DILocation(line: 2223, column: 30, scope: !16595)
!16600 = !DILocation(line: 2223, column: 37, scope: !16595)
!16601 = !DILocation(line: 2223, column: 7, scope: !16573)
!16602 = !DILocation(line: 2224, column: 4, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16595, file: !3, line: 2223, column: 41)
!16604 = !DILocation(line: 2224, column: 4, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16603, file: !3, line: 2224, column: 4)
!16606 = !DILocation(line: 2224, column: 4, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 2224, column: 4)
!16608 = !DILocation(line: 2224, column: 4, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 2224, column: 4)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2224, column: 4)
!16611 = !DILocation(line: 2224, column: 4, scope: !16610)
!16612 = !DILocation(line: 2224, column: 4, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16609, file: !3, line: 2224, column: 4)
!16614 = !DILocation(line: 2224, column: 4, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16613, file: !3, line: 2224, column: 4)
!16616 = !DILocation(line: 2224, column: 4, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16609, file: !3, line: 2224, column: 4)
!16618 = !DILocation(line: 2224, column: 4, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 2224, column: 4)
!16620 = !DILocation(line: 2224, column: 4, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 2224, column: 4)
!16622 = !DILocation(line: 2224, column: 4, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 2224, column: 4)
!16624 = distinct !DILexicalBlock(scope: !16621, file: !3, line: 2224, column: 4)
!16625 = !DILocation(line: 2224, column: 4, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16623, file: !3, line: 2224, column: 4)
!16627 = !DILocation(line: 2224, column: 4, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16629, file: !3, line: 2224, column: 4)
!16629 = distinct !DILexicalBlock(scope: !16626, file: !3, line: 2224, column: 4)
!16630 = !DILocation(line: 2224, column: 4, scope: !16629)
!16631 = !DILocation(line: 2224, column: 4, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16628, file: !3, line: 2224, column: 4)
!16633 = !DILocation(line: 2224, column: 4, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16632, file: !3, line: 2224, column: 4)
!16635 = !DILocation(line: 2224, column: 4, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !3, line: 2224, column: 4)
!16637 = distinct !DILexicalBlock(scope: !16634, file: !3, line: 2224, column: 4)
!16638 = !DILocation(line: 2224, column: 4, scope: !16637)
!16639 = !DILocation(line: 2224, column: 4, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16628, file: !3, line: 2224, column: 4)
!16641 = !DILocation(line: 2224, column: 4, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16640, file: !3, line: 2224, column: 4)
!16643 = !DILocation(line: 2224, column: 4, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16642, file: !3, line: 2224, column: 4)
!16645 = !DILocation(line: 2224, column: 4, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16642, file: !3, line: 2224, column: 4)
!16647 = !DILocation(line: 2224, column: 4, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !3, line: 2224, column: 4)
!16649 = distinct !DILexicalBlock(scope: !16640, file: !3, line: 2224, column: 4)
!16650 = !DILocation(line: 2224, column: 4, scope: !16649)
!16651 = !DILocation(line: 2224, column: 4, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 2224, column: 4)
!16653 = !DILocation(line: 2224, column: 4, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 2224, column: 4)
!16655 = !DILocation(line: 2224, column: 4, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16649, file: !3, line: 2224, column: 4)
!16657 = !DILocation(line: 2226, column: 39, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 2226, column: 9)
!16659 = distinct !DILexicalBlock(scope: !16629, file: !3, line: 2225, column: 4)
!16660 = !DILocation(line: 2226, column: 46, scope: !16658)
!16661 = !DILocation(line: 2226, column: 52, scope: !16658)
!16662 = !DILocation(line: 2226, column: 9, scope: !16658)
!16663 = !DILocation(line: 2226, column: 9, scope: !16659)
!16664 = !DILocalVariable(name: "fno", scope: !16665, file: !3, line: 2227, type: !233)
!16665 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 2226, column: 57)
!16666 = !DILocation(line: 2227, column: 12, scope: !16665)
!16667 = !DILocation(line: 2229, column: 31, scope: !16665)
!16668 = !DILocation(line: 2229, column: 36, scope: !16665)
!16669 = !DILocation(line: 2229, column: 43, scope: !16665)
!16670 = !DILocation(line: 2229, column: 49, scope: !16665)
!16671 = !DILocation(line: 2229, column: 6, scope: !16665)
!16672 = !DILocation(line: 2230, column: 19, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16665, file: !3, line: 2230, column: 10)
!16674 = !DILocation(line: 2230, column: 23, scope: !16673)
!16675 = !DILocation(line: 2230, column: 30, scope: !16673)
!16676 = !DILocation(line: 2230, column: 43, scope: !16673)
!16677 = !DILocation(line: 2230, column: 10, scope: !16673)
!16678 = !DILocation(line: 2230, column: 48, scope: !16673)
!16679 = !DILocation(line: 2230, column: 10, scope: !16665)
!16680 = !DILocation(line: 2231, column: 17, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 2230, column: 53)
!16682 = !DILocation(line: 2231, column: 29, scope: !16681)
!16683 = !DILocation(line: 2231, column: 36, scope: !16681)
!16684 = !DILocation(line: 2231, column: 42, scope: !16681)
!16685 = !DILocation(line: 2231, column: 7, scope: !16681)
!16686 = !DILocation(line: 2232, column: 20, scope: !16681)
!16687 = !DILocation(line: 2233, column: 6, scope: !16681)
!16688 = !DILocation(line: 2235, column: 17, scope: !16689)
!16689 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 2234, column: 11)
!16690 = !DILocation(line: 2235, column: 34, scope: !16689)
!16691 = !DILocation(line: 2235, column: 41, scope: !16689)
!16692 = !DILocation(line: 2235, column: 47, scope: !16689)
!16693 = !DILocation(line: 2235, column: 7, scope: !16689)
!16694 = !DILocation(line: 2236, column: 25, scope: !16689)
!16695 = !DILocation(line: 2238, column: 5, scope: !16665)
!16696 = !DILocation(line: 2240, column: 4, scope: !16629)
!16697 = distinct !{!16697, !16622, !16698}
!16698 = !DILocation(line: 2240, column: 4, scope: !16623)
!16699 = !DILocation(line: 2240, column: 4, scope: !16624)
!16700 = distinct !{!16700, !16618, !16701}
!16701 = !DILocation(line: 2240, column: 4, scope: !16619)
!16702 = !DILocation(line: 2240, column: 4, scope: !16610)
!16703 = distinct !{!16703, !16604, !16704}
!16704 = !DILocation(line: 2240, column: 4, scope: !16605)
!16705 = !DILocation(line: 2241, column: 3, scope: !16603)
!16706 = !DILocation(line: 2243, column: 4, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16595, file: !3, line: 2242, column: 8)
!16708 = !DILocation(line: 2243, column: 4, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16707, file: !3, line: 2243, column: 4)
!16710 = !DILocation(line: 2243, column: 4, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16709, file: !3, line: 2243, column: 4)
!16712 = !DILocation(line: 2243, column: 4, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !3, line: 2243, column: 4)
!16714 = distinct !DILexicalBlock(scope: !16711, file: !3, line: 2243, column: 4)
!16715 = !DILocation(line: 2243, column: 4, scope: !16714)
!16716 = !DILocation(line: 2243, column: 4, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !3, line: 2243, column: 4)
!16718 = !DILocation(line: 2243, column: 4, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 2243, column: 4)
!16720 = !DILocation(line: 2243, column: 4, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16713, file: !3, line: 2243, column: 4)
!16722 = !DILocation(line: 2243, column: 4, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16714, file: !3, line: 2243, column: 4)
!16724 = !DILocation(line: 2243, column: 4, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16723, file: !3, line: 2243, column: 4)
!16726 = !DILocation(line: 2243, column: 4, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16728, file: !3, line: 2243, column: 4)
!16728 = distinct !DILexicalBlock(scope: !16725, file: !3, line: 2243, column: 4)
!16729 = !DILocation(line: 2243, column: 4, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16727, file: !3, line: 2243, column: 4)
!16731 = !DILocation(line: 2243, column: 4, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16733, file: !3, line: 2243, column: 4)
!16733 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 2243, column: 4)
!16734 = !DILocation(line: 2243, column: 4, scope: !16733)
!16735 = !DILocation(line: 2243, column: 4, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16732, file: !3, line: 2243, column: 4)
!16737 = !DILocation(line: 2243, column: 4, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16736, file: !3, line: 2243, column: 4)
!16739 = !DILocation(line: 2243, column: 4, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !3, line: 2243, column: 4)
!16741 = distinct !DILexicalBlock(scope: !16738, file: !3, line: 2243, column: 4)
!16742 = !DILocation(line: 2243, column: 4, scope: !16741)
!16743 = !DILocation(line: 2243, column: 4, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16732, file: !3, line: 2243, column: 4)
!16745 = !DILocation(line: 2243, column: 4, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 2243, column: 4)
!16747 = !DILocation(line: 2243, column: 4, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16746, file: !3, line: 2243, column: 4)
!16749 = !DILocation(line: 2243, column: 4, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16746, file: !3, line: 2243, column: 4)
!16751 = !DILocation(line: 2243, column: 4, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 2243, column: 4)
!16753 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 2243, column: 4)
!16754 = !DILocation(line: 2243, column: 4, scope: !16753)
!16755 = !DILocation(line: 2243, column: 4, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16752, file: !3, line: 2243, column: 4)
!16757 = !DILocation(line: 2243, column: 4, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16752, file: !3, line: 2243, column: 4)
!16759 = !DILocation(line: 2243, column: 4, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 2243, column: 4)
!16761 = !DILocation(line: 2245, column: 42, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16763, file: !3, line: 2245, column: 9)
!16763 = distinct !DILexicalBlock(scope: !16733, file: !3, line: 2244, column: 4)
!16764 = !DILocation(line: 2245, column: 9, scope: !16762)
!16765 = !DILocation(line: 2245, column: 9, scope: !16763)
!16766 = !DILocation(line: 2247, column: 13, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 2247, column: 10)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !3, line: 2245, column: 47)
!16769 = !DILocation(line: 2247, column: 10, scope: !16767)
!16770 = !DILocation(line: 2247, column: 10, scope: !16768)
!16771 = !DILocalVariable(name: "fno", scope: !16772, file: !3, line: 2248, type: !233)
!16772 = distinct !DILexicalBlock(scope: !16767, file: !3, line: 2247, column: 17)
!16773 = !DILocation(line: 2248, column: 13, scope: !16772)
!16774 = !DILocation(line: 2250, column: 32, scope: !16772)
!16775 = !DILocation(line: 2250, column: 40, scope: !16772)
!16776 = !DILocation(line: 2250, column: 7, scope: !16772)
!16777 = !DILocation(line: 2252, column: 20, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16772, file: !3, line: 2252, column: 11)
!16779 = !DILocation(line: 2252, column: 24, scope: !16778)
!16780 = !DILocation(line: 2252, column: 31, scope: !16778)
!16781 = !DILocation(line: 2252, column: 44, scope: !16778)
!16782 = !DILocation(line: 2252, column: 11, scope: !16778)
!16783 = !DILocation(line: 2252, column: 49, scope: !16778)
!16784 = !DILocation(line: 2252, column: 11, scope: !16772)
!16785 = !DILocation(line: 2253, column: 18, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16778, file: !3, line: 2252, column: 54)
!16787 = !DILocation(line: 2253, column: 33, scope: !16786)
!16788 = !DILocation(line: 2253, column: 8, scope: !16786)
!16789 = !DILocation(line: 2254, column: 21, scope: !16786)
!16790 = !DILocation(line: 2255, column: 7, scope: !16786)
!16791 = !DILocation(line: 2257, column: 18, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16778, file: !3, line: 2256, column: 12)
!16793 = !DILocation(line: 2257, column: 38, scope: !16792)
!16794 = !DILocation(line: 2257, column: 8, scope: !16792)
!16795 = !DILocation(line: 2258, column: 26, scope: !16792)
!16796 = !DILocation(line: 2260, column: 6, scope: !16772)
!16797 = !DILocation(line: 2262, column: 20, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16799, file: !3, line: 2262, column: 11)
!16799 = distinct !DILexicalBlock(scope: !16767, file: !3, line: 2261, column: 11)
!16800 = !DILocation(line: 2262, column: 24, scope: !16798)
!16801 = !DILocation(line: 2262, column: 31, scope: !16798)
!16802 = !DILocation(line: 2262, column: 47, scope: !16798)
!16803 = !DILocation(line: 2262, column: 11, scope: !16798)
!16804 = !DILocation(line: 2262, column: 52, scope: !16798)
!16805 = !DILocation(line: 2262, column: 11, scope: !16799)
!16806 = !DILocation(line: 2263, column: 18, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 2262, column: 57)
!16808 = !DILocation(line: 2263, column: 33, scope: !16807)
!16809 = !DILocation(line: 2263, column: 8, scope: !16807)
!16810 = !DILocation(line: 2264, column: 21, scope: !16807)
!16811 = !DILocation(line: 2265, column: 7, scope: !16807)
!16812 = !DILocation(line: 2267, column: 18, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16798, file: !3, line: 2266, column: 12)
!16814 = !DILocation(line: 2267, column: 38, scope: !16813)
!16815 = !DILocation(line: 2267, column: 8, scope: !16813)
!16816 = !DILocation(line: 2268, column: 26, scope: !16813)
!16817 = !DILocation(line: 2271, column: 5, scope: !16768)
!16818 = !DILocation(line: 2273, column: 4, scope: !16733)
!16819 = distinct !{!16819, !16726, !16820}
!16820 = !DILocation(line: 2273, column: 4, scope: !16727)
!16821 = !DILocation(line: 2273, column: 4, scope: !16728)
!16822 = distinct !{!16822, !16722, !16823}
!16823 = !DILocation(line: 2273, column: 4, scope: !16723)
!16824 = !DILocation(line: 2273, column: 4, scope: !16714)
!16825 = distinct !{!16825, !16708, !16826}
!16826 = !DILocation(line: 2273, column: 4, scope: !16709)
!16827 = !DILocation(line: 2280, column: 14, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16573, file: !3, line: 2279, column: 3)
!16829 = !DILocation(line: 2280, column: 18, scope: !16828)
!16830 = !DILocation(line: 2280, column: 4, scope: !16828)
!16831 = !DILocation(line: 2281, column: 14, scope: !16828)
!16832 = !DILocation(line: 2281, column: 23, scope: !16828)
!16833 = !DILocation(line: 2281, column: 4, scope: !16828)
!16834 = !DILocation(line: 2282, column: 13, scope: !16828)
!16835 = !DILocation(line: 2282, column: 10, scope: !16828)
!16836 = !DILocation(line: 2283, column: 18, scope: !16828)
!16837 = !DILocation(line: 2283, column: 15, scope: !16828)
!16838 = !DILocation(line: 2285, column: 2, scope: !16573)
!16839 = !DILocation(line: 2211, column: 28, scope: !16568)
!16840 = !DILocation(line: 2211, column: 2, scope: !16568)
!16841 = distinct !{!16841, !16571, !16842}
!16842 = !DILocation(line: 2285, column: 2, scope: !16565)
!16843 = !DILocation(line: 2286, column: 6, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 2286, column: 6)
!16845 = !DILocation(line: 2286, column: 12, scope: !16844)
!16846 = !DILocation(line: 2286, column: 6, scope: !16538)
!16847 = !DILocation(line: 2287, column: 13, scope: !16844)
!16848 = !DILocation(line: 2287, column: 24, scope: !16844)
!16849 = !DILocation(line: 2287, column: 22, scope: !16844)
!16850 = !DILocation(line: 2287, column: 3, scope: !16844)
!16851 = !DILocation(line: 2288, column: 11, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16844, file: !3, line: 2288, column: 11)
!16853 = !DILocation(line: 2288, column: 22, scope: !16852)
!16854 = !DILocation(line: 2288, column: 11, scope: !16844)
!16855 = !DILocation(line: 2289, column: 15, scope: !16852)
!16856 = !DILocation(line: 2289, column: 19, scope: !16852)
!16857 = !DILocation(line: 2289, column: 35, scope: !16852)
!16858 = !DILocation(line: 2289, column: 33, scope: !16852)
!16859 = !DILocation(line: 2289, column: 3, scope: !16852)
!16860 = !DILocation(line: 2291, column: 11, scope: !16852)
!16861 = !DILocation(line: 2291, column: 3, scope: !16852)
!16862 = !DILocation(line: 2292, column: 1, scope: !16538)
!16863 = distinct !DISubprogram(name: "plane_point_side_flip", scope: !3, file: !3, line: 2514, type: !16864, scopeLine: 2515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16864 = !DISubroutineType(types: !16865)
!16865 = !{!57, !359, !359, !359, !57}
!16866 = !DILocalVariable(name: "co", arg: 1, scope: !16863, file: !3, line: 2514, type: !359)
!16867 = !DILocation(line: 2514, column: 40, scope: !16863)
!16868 = !DILocalVariable(name: "plane_normal", arg: 2, scope: !16863, file: !3, line: 2514, type: !359)
!16869 = !DILocation(line: 2514, column: 53, scope: !16863)
!16870 = !DILocalVariable(name: "plane_center", arg: 3, scope: !16863, file: !3, line: 2514, type: !359)
!16871 = !DILocation(line: 2514, column: 76, scope: !16863)
!16872 = !DILocalVariable(name: "flip", arg: 4, scope: !16863, file: !3, line: 2514, type: !57)
!16873 = !DILocation(line: 2514, column: 97, scope: !16863)
!16874 = !DILocalVariable(name: "delta", scope: !16863, file: !3, line: 2516, type: !233)
!16875 = !DILocation(line: 2516, column: 8, scope: !16863)
!16876 = !DILocalVariable(name: "d", scope: !16863, file: !3, line: 2517, type: !153)
!16877 = !DILocation(line: 2517, column: 8, scope: !16863)
!16878 = !DILocation(line: 2519, column: 14, scope: !16863)
!16879 = !DILocation(line: 2519, column: 21, scope: !16863)
!16880 = !DILocation(line: 2519, column: 25, scope: !16863)
!16881 = !DILocation(line: 2519, column: 2, scope: !16863)
!16882 = !DILocation(line: 2520, column: 15, scope: !16863)
!16883 = !DILocation(line: 2520, column: 29, scope: !16863)
!16884 = !DILocation(line: 2520, column: 6, scope: !16863)
!16885 = !DILocation(line: 2520, column: 4, scope: !16863)
!16886 = !DILocation(line: 2522, column: 6, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16863, file: !3, line: 2522, column: 6)
!16888 = !DILocation(line: 2522, column: 6, scope: !16863)
!16889 = !DILocation(line: 2522, column: 17, scope: !16887)
!16890 = !DILocation(line: 2522, column: 16, scope: !16887)
!16891 = !DILocation(line: 2522, column: 14, scope: !16887)
!16892 = !DILocation(line: 2522, column: 12, scope: !16887)
!16893 = !DILocation(line: 2524, column: 9, scope: !16863)
!16894 = !DILocation(line: 2524, column: 11, scope: !16863)
!16895 = !DILocation(line: 2524, column: 2, scope: !16863)
!16896 = distinct !DISubprogram(name: "sculpt_brush_test_cube", scope: !3, file: !3, line: 587, type: !16897, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{!2315, !15193, !359, !3310}
!16899 = !DILocalVariable(name: "test", arg: 1, scope: !16896, file: !3, line: 587, type: !15193)
!16900 = !DILocation(line: 587, column: 53, scope: !16896)
!16901 = !DILocalVariable(name: "co", arg: 2, scope: !16896, file: !3, line: 587, type: !359)
!16902 = !DILocation(line: 587, column: 65, scope: !16896)
!16903 = !DILocalVariable(name: "local", arg: 3, scope: !16896, file: !3, line: 587, type: !3310)
!16904 = !DILocation(line: 587, column: 78, scope: !16896)
!16905 = !DILocalVariable(name: "side", scope: !16896, file: !3, line: 589, type: !153)
!16906 = !DILocation(line: 589, column: 8, scope: !16896)
!16907 = !DILocalVariable(name: "local_co", scope: !16896, file: !3, line: 590, type: !233)
!16908 = !DILocation(line: 590, column: 8, scope: !16896)
!16909 = !DILocation(line: 592, column: 33, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16896, file: !3, line: 592, column: 6)
!16911 = !DILocation(line: 592, column: 39, scope: !16910)
!16912 = !DILocation(line: 592, column: 6, scope: !16910)
!16913 = !DILocation(line: 592, column: 6, scope: !16896)
!16914 = !DILocation(line: 593, column: 3, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16910, file: !3, line: 592, column: 44)
!16916 = !DILocation(line: 596, column: 14, scope: !16896)
!16917 = !DILocation(line: 596, column: 24, scope: !16896)
!16918 = !DILocation(line: 596, column: 31, scope: !16896)
!16919 = !DILocation(line: 596, column: 2, scope: !16896)
!16920 = !DILocation(line: 598, column: 22, scope: !16896)
!16921 = !DILocation(line: 598, column: 16, scope: !16896)
!16922 = !DILocation(line: 598, column: 2, scope: !16896)
!16923 = !DILocation(line: 598, column: 14, scope: !16896)
!16924 = !DILocation(line: 599, column: 22, scope: !16896)
!16925 = !DILocation(line: 599, column: 16, scope: !16896)
!16926 = !DILocation(line: 599, column: 2, scope: !16896)
!16927 = !DILocation(line: 599, column: 14, scope: !16896)
!16928 = !DILocation(line: 600, column: 22, scope: !16896)
!16929 = !DILocation(line: 600, column: 16, scope: !16896)
!16930 = !DILocation(line: 600, column: 2, scope: !16896)
!16931 = !DILocation(line: 600, column: 14, scope: !16896)
!16932 = !DILocation(line: 602, column: 6, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16896, file: !3, line: 602, column: 6)
!16934 = !DILocation(line: 602, column: 21, scope: !16933)
!16935 = !DILocation(line: 602, column: 18, scope: !16933)
!16936 = !DILocation(line: 602, column: 26, scope: !16933)
!16937 = !DILocation(line: 602, column: 29, scope: !16933)
!16938 = !DILocation(line: 602, column: 44, scope: !16933)
!16939 = !DILocation(line: 602, column: 41, scope: !16933)
!16940 = !DILocation(line: 602, column: 49, scope: !16933)
!16941 = !DILocation(line: 602, column: 52, scope: !16933)
!16942 = !DILocation(line: 602, column: 67, scope: !16933)
!16943 = !DILocation(line: 602, column: 64, scope: !16933)
!16944 = !DILocation(line: 602, column: 6, scope: !16896)
!16945 = !DILocalVariable(name: "p", scope: !16946, file: !3, line: 603, type: !153)
!16946 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 602, column: 73)
!16947 = !DILocation(line: 603, column: 9, scope: !16946)
!16948 = !DILocation(line: 605, column: 23, scope: !16946)
!16949 = !DILocation(line: 605, column: 36, scope: !16946)
!16950 = !DILocation(line: 605, column: 18, scope: !16946)
!16951 = !DILocation(line: 606, column: 23, scope: !16946)
!16952 = !DILocation(line: 606, column: 36, scope: !16946)
!16953 = !DILocation(line: 606, column: 18, scope: !16946)
!16954 = !DILocation(line: 605, column: 39, scope: !16946)
!16955 = !DILocation(line: 607, column: 23, scope: !16946)
!16956 = !DILocation(line: 607, column: 36, scope: !16946)
!16957 = !DILocation(line: 607, column: 18, scope: !16946)
!16958 = !DILocation(line: 606, column: 39, scope: !16946)
!16959 = !DILocation(line: 607, column: 47, scope: !16946)
!16960 = !DILocation(line: 607, column: 53, scope: !16946)
!16961 = !DILocation(line: 607, column: 42, scope: !16946)
!16962 = !DILocation(line: 607, column: 40, scope: !16946)
!16963 = !DILocation(line: 605, column: 3, scope: !16946)
!16964 = !DILocation(line: 605, column: 9, scope: !16946)
!16965 = !DILocation(line: 605, column: 14, scope: !16946)
!16966 = !DILocation(line: 609, column: 3, scope: !16946)
!16967 = !DILocation(line: 612, column: 3, scope: !16968)
!16968 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 611, column: 7)
!16969 = !DILocation(line: 614, column: 1, scope: !16896)
!16970 = distinct !DISubprogram(name: "plane_point_side", scope: !3, file: !3, line: 2527, type: !16971, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{!57, !359, !359, !359}
!16973 = !DILocalVariable(name: "co", arg: 1, scope: !16970, file: !3, line: 2527, type: !359)
!16974 = !DILocation(line: 2527, column: 35, scope: !16970)
!16975 = !DILocalVariable(name: "plane_normal", arg: 2, scope: !16970, file: !3, line: 2527, type: !359)
!16976 = !DILocation(line: 2527, column: 48, scope: !16970)
!16977 = !DILocalVariable(name: "plane_center", arg: 3, scope: !16970, file: !3, line: 2527, type: !359)
!16978 = !DILocation(line: 2527, column: 71, scope: !16970)
!16979 = !DILocalVariable(name: "delta", scope: !16970, file: !3, line: 2529, type: !233)
!16980 = !DILocation(line: 2529, column: 8, scope: !16970)
!16981 = !DILocation(line: 2531, column: 14, scope: !16970)
!16982 = !DILocation(line: 2531, column: 21, scope: !16970)
!16983 = !DILocation(line: 2531, column: 25, scope: !16970)
!16984 = !DILocation(line: 2531, column: 2, scope: !16970)
!16985 = !DILocation(line: 2532, column: 18, scope: !16970)
!16986 = !DILocation(line: 2532, column: 32, scope: !16970)
!16987 = !DILocation(line: 2532, column: 9, scope: !16970)
!16988 = !DILocation(line: 2532, column: 39, scope: !16970)
!16989 = !DILocation(line: 2532, column: 2, scope: !16970)
!16990 = distinct !DISubprogram(name: "do_mask_brush_draw", scope: !3, file: !3, line: 1638, type: !4, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!16991 = !DILocalVariable(name: "sd", arg: 1, scope: !16990, file: !3, line: 1638, type: !6)
!16992 = !DILocation(line: 1638, column: 40, scope: !16990)
!16993 = !DILocalVariable(name: "ob", arg: 2, scope: !16990, file: !3, line: 1638, type: !3739)
!16994 = !DILocation(line: 1638, column: 52, scope: !16990)
!16995 = !DILocalVariable(name: "nodes", arg: 3, scope: !16990, file: !3, line: 1638, type: !3741)
!16996 = !DILocation(line: 1638, column: 67, scope: !16990)
!16997 = !DILocalVariable(name: "totnode", arg: 4, scope: !16990, file: !3, line: 1638, type: !57)
!16998 = !DILocation(line: 1638, column: 78, scope: !16990)
!16999 = !DILocalVariable(name: "ss", scope: !16990, file: !3, line: 1640, type: !5374)
!17000 = !DILocation(line: 1640, column: 17, scope: !16990)
!17001 = !DILocation(line: 1640, column: 22, scope: !16990)
!17002 = !DILocation(line: 1640, column: 26, scope: !16990)
!17003 = !DILocalVariable(name: "brush", scope: !16990, file: !3, line: 1641, type: !2749)
!17004 = !DILocation(line: 1641, column: 9, scope: !16990)
!17005 = !DILocation(line: 1641, column: 34, scope: !16990)
!17006 = !DILocation(line: 1641, column: 38, scope: !16990)
!17007 = !DILocation(line: 1641, column: 17, scope: !16990)
!17008 = !DILocalVariable(name: "bstrength", scope: !16990, file: !3, line: 1642, type: !153)
!17009 = !DILocation(line: 1642, column: 8, scope: !16990)
!17010 = !DILocation(line: 1642, column: 20, scope: !16990)
!17011 = !DILocation(line: 1642, column: 24, scope: !16990)
!17012 = !DILocation(line: 1642, column: 31, scope: !16990)
!17013 = !DILocalVariable(name: "n", scope: !16990, file: !3, line: 1643, type: !57)
!17014 = !DILocation(line: 1643, column: 6, scope: !16990)
!17015 = !DILocation(line: 1649, column: 9, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1649, column: 2)
!17017 = !DILocation(line: 1649, column: 7, scope: !17016)
!17018 = !DILocation(line: 1649, column: 14, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17016, file: !3, line: 1649, column: 2)
!17020 = !DILocation(line: 1649, column: 18, scope: !17019)
!17021 = !DILocation(line: 1649, column: 16, scope: !17019)
!17022 = !DILocation(line: 1649, column: 2, scope: !17016)
!17023 = !DILocalVariable(name: "vd", scope: !17024, file: !3, line: 1650, type: !9184)
!17024 = distinct !DILexicalBlock(scope: !17019, file: !3, line: 1649, column: 32)
!17025 = !DILocation(line: 1650, column: 18, scope: !17024)
!17026 = !DILocalVariable(name: "test", scope: !17024, file: !3, line: 1651, type: !11350)
!17027 = !DILocation(line: 1651, column: 19, scope: !17024)
!17028 = !DILocation(line: 1653, column: 26, scope: !17024)
!17029 = !DILocation(line: 1653, column: 3, scope: !17024)
!17030 = !DILocation(line: 1655, column: 3, scope: !17024)
!17031 = !DILocation(line: 1655, column: 3, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17024, file: !3, line: 1655, column: 3)
!17033 = !DILocation(line: 1655, column: 3, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 1655, column: 3)
!17035 = !DILocation(line: 1655, column: 3, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1655, column: 3)
!17037 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 1655, column: 3)
!17038 = !DILocation(line: 1655, column: 3, scope: !17037)
!17039 = !DILocation(line: 1655, column: 3, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 1655, column: 3)
!17041 = !DILocation(line: 1655, column: 3, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17040, file: !3, line: 1655, column: 3)
!17043 = !DILocation(line: 1655, column: 3, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17036, file: !3, line: 1655, column: 3)
!17045 = !DILocation(line: 1655, column: 3, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17037, file: !3, line: 1655, column: 3)
!17047 = !DILocation(line: 1655, column: 3, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 1655, column: 3)
!17049 = !DILocation(line: 1655, column: 3, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 1655, column: 3)
!17051 = distinct !DILexicalBlock(scope: !17048, file: !3, line: 1655, column: 3)
!17052 = !DILocation(line: 1655, column: 3, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17050, file: !3, line: 1655, column: 3)
!17054 = !DILocation(line: 1655, column: 3, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 1655, column: 3)
!17056 = distinct !DILexicalBlock(scope: !17053, file: !3, line: 1655, column: 3)
!17057 = !DILocation(line: 1655, column: 3, scope: !17056)
!17058 = !DILocation(line: 1655, column: 3, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17055, file: !3, line: 1655, column: 3)
!17060 = !DILocation(line: 1655, column: 3, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17059, file: !3, line: 1655, column: 3)
!17062 = !DILocation(line: 1655, column: 3, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17064, file: !3, line: 1655, column: 3)
!17064 = distinct !DILexicalBlock(scope: !17061, file: !3, line: 1655, column: 3)
!17065 = !DILocation(line: 1655, column: 3, scope: !17064)
!17066 = !DILocation(line: 1655, column: 3, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17055, file: !3, line: 1655, column: 3)
!17068 = !DILocation(line: 1655, column: 3, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1655, column: 3)
!17070 = !DILocation(line: 1655, column: 3, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17069, file: !3, line: 1655, column: 3)
!17072 = !DILocation(line: 1655, column: 3, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17069, file: !3, line: 1655, column: 3)
!17074 = !DILocation(line: 1655, column: 3, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17076, file: !3, line: 1655, column: 3)
!17076 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1655, column: 3)
!17077 = !DILocation(line: 1655, column: 3, scope: !17076)
!17078 = !DILocation(line: 1655, column: 3, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 1655, column: 3)
!17080 = !DILocation(line: 1655, column: 3, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17075, file: !3, line: 1655, column: 3)
!17082 = !DILocation(line: 1655, column: 3, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17076, file: !3, line: 1655, column: 3)
!17084 = !DILocation(line: 1657, column: 36, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17086, file: !3, line: 1657, column: 8)
!17086 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 1656, column: 3)
!17087 = !DILocation(line: 1657, column: 8, scope: !17085)
!17088 = !DILocation(line: 1657, column: 8, scope: !17086)
!17089 = !DILocalVariable(name: "fade", scope: !17090, file: !3, line: 1658, type: !153)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !3, line: 1657, column: 41)
!17091 = !DILocation(line: 1658, column: 11, scope: !17090)
!17092 = !DILocation(line: 1658, column: 31, scope: !17090)
!17093 = !DILocation(line: 1658, column: 35, scope: !17090)
!17094 = !DILocation(line: 1658, column: 45, scope: !17090)
!17095 = !DILocation(line: 1658, column: 54, scope: !17090)
!17096 = !DILocation(line: 1659, column: 34, scope: !17090)
!17097 = !DILocation(line: 1659, column: 41, scope: !17090)
!17098 = !DILocation(line: 1658, column: 18, scope: !17090)
!17099 = !DILocation(line: 1661, column: 19, scope: !17090)
!17100 = !DILocation(line: 1661, column: 26, scope: !17090)
!17101 = !DILocation(line: 1661, column: 24, scope: !17090)
!17102 = !DILocation(line: 1661, column: 10, scope: !17090)
!17103 = !DILocation(line: 1661, column: 16, scope: !17090)
!17104 = !DILocation(line: 1662, column: 5, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 1662, column: 5)
!17106 = distinct !DILexicalBlock(scope: !17090, file: !3, line: 1662, column: 5)
!17107 = !DILocation(line: 1662, column: 5, scope: !17106)
!17108 = !DILocation(line: 1662, column: 5, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17105, file: !3, line: 1662, column: 5)
!17110 = !DILocation(line: 1664, column: 12, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17090, file: !3, line: 1664, column: 9)
!17112 = !DILocation(line: 1664, column: 9, scope: !17111)
!17113 = !DILocation(line: 1664, column: 9, scope: !17090)
!17114 = !DILocation(line: 1665, column: 9, scope: !17111)
!17115 = !DILocation(line: 1665, column: 16, scope: !17111)
!17116 = !DILocation(line: 1665, column: 21, scope: !17111)
!17117 = !DILocation(line: 1665, column: 6, scope: !17111)
!17118 = !DILocation(line: 1666, column: 4, scope: !17090)
!17119 = !DILocation(line: 1667, column: 4, scope: !17056)
!17120 = distinct !{!17120, !17049, !17121}
!17121 = !DILocation(line: 1667, column: 4, scope: !17050)
!17122 = !DILocation(line: 1667, column: 4, scope: !17051)
!17123 = distinct !{!17123, !17045, !17124}
!17124 = !DILocation(line: 1667, column: 4, scope: !17046)
!17125 = !DILocation(line: 1668, column: 3, scope: !17037)
!17126 = distinct !{!17126, !17031, !17127}
!17127 = !DILocation(line: 1668, column: 3, scope: !17032)
!17128 = !DILocation(line: 1669, column: 2, scope: !17024)
!17129 = !DILocation(line: 1649, column: 28, scope: !17019)
!17130 = !DILocation(line: 1649, column: 2, scope: !17019)
!17131 = distinct !{!17131, !17022, !17132}
!17132 = !DILocation(line: 1669, column: 2, scope: !17016)
!17133 = !DILocation(line: 1670, column: 1, scope: !16990)
!17134 = distinct !DISubprogram(name: "do_multires_smooth_brush", scope: !3, file: !3, line: 1428, type: !17135, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!17135 = !DISubroutineType(types: !17136)
!17136 = !{null, !6, !5374, !3742, !153, !57}
!17137 = !DILocalVariable(name: "sd", arg: 1, scope: !17134, file: !3, line: 1428, type: !6)
!17138 = !DILocation(line: 1428, column: 46, scope: !17134)
!17139 = !DILocalVariable(name: "ss", arg: 2, scope: !17134, file: !3, line: 1428, type: !5374)
!17140 = !DILocation(line: 1428, column: 65, scope: !17134)
!17141 = !DILocalVariable(name: "node", arg: 3, scope: !17134, file: !3, line: 1428, type: !3742)
!17142 = !DILocation(line: 1428, column: 79, scope: !17134)
!17143 = !DILocalVariable(name: "bstrength", arg: 4, scope: !17134, file: !3, line: 1429, type: !153)
!17144 = !DILocation(line: 1429, column: 44, scope: !17134)
!17145 = !DILocalVariable(name: "smooth_mask", arg: 5, scope: !17134, file: !3, line: 1429, type: !57)
!17146 = !DILocation(line: 1429, column: 59, scope: !17134)
!17147 = !DILocalVariable(name: "brush", scope: !17134, file: !3, line: 1431, type: !2749)
!17148 = !DILocation(line: 1431, column: 9, scope: !17134)
!17149 = !DILocation(line: 1431, column: 34, scope: !17134)
!17150 = !DILocation(line: 1431, column: 38, scope: !17134)
!17151 = !DILocation(line: 1431, column: 17, scope: !17134)
!17152 = !DILocalVariable(name: "test", scope: !17134, file: !3, line: 1432, type: !11350)
!17153 = !DILocation(line: 1432, column: 18, scope: !17134)
!17154 = !DILocalVariable(name: "griddata", scope: !17134, file: !3, line: 1433, type: !17155)
!17155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!17156 = !DILocation(line: 1433, column: 12, scope: !17134)
!17157 = !DILocalVariable(name: "data", scope: !17134, file: !3, line: 1433, type: !5164)
!17158 = !DILocation(line: 1433, column: 23, scope: !17134)
!17159 = !DILocalVariable(name: "key", scope: !17134, file: !3, line: 1434, type: !10218)
!17160 = !DILocation(line: 1434, column: 9, scope: !17134)
!17161 = !DILocalVariable(name: "gridadj", scope: !17134, file: !3, line: 1435, type: !3200)
!17162 = !DILocation(line: 1435, column: 19, scope: !17134)
!17163 = !DILocalVariable(name: "adj", scope: !17134, file: !3, line: 1435, type: !3200)
!17164 = !DILocation(line: 1435, column: 29, scope: !17134)
!17165 = !DILocalVariable(name: "tmpgrid_co", scope: !17134, file: !3, line: 1436, type: !2054)
!17166 = !DILocation(line: 1436, column: 10, scope: !17134)
!17167 = !DILocalVariable(name: "tmprow_co", scope: !17134, file: !3, line: 1436, type: !2054)
!17168 = !DILocation(line: 1436, column: 28, scope: !17134)
!17169 = !DILocalVariable(name: "tmpgrid_mask", scope: !17134, file: !3, line: 1437, type: !359)
!17170 = !DILocation(line: 1437, column: 9, scope: !17134)
!17171 = !DILocalVariable(name: "tmprow_mask", scope: !17134, file: !3, line: 1437, type: !359)
!17172 = !DILocation(line: 1437, column: 24, scope: !17134)
!17173 = !DILocalVariable(name: "v1", scope: !17134, file: !3, line: 1438, type: !57)
!17174 = !DILocation(line: 1438, column: 6, scope: !17134)
!17175 = !DILocalVariable(name: "v2", scope: !17134, file: !3, line: 1438, type: !57)
!17176 = !DILocation(line: 1438, column: 10, scope: !17134)
!17177 = !DILocalVariable(name: "v3", scope: !17134, file: !3, line: 1438, type: !57)
!17178 = !DILocation(line: 1438, column: 14, scope: !17134)
!17179 = !DILocalVariable(name: "v4", scope: !17134, file: !3, line: 1438, type: !57)
!17180 = !DILocation(line: 1438, column: 18, scope: !17134)
!17181 = !DILocalVariable(name: "thread_num", scope: !17134, file: !3, line: 1439, type: !57)
!17182 = !DILocation(line: 1439, column: 6, scope: !17134)
!17183 = !DILocalVariable(name: "grid_hidden", scope: !17134, file: !3, line: 1440, type: !5918)
!17184 = !DILocation(line: 1440, column: 15, scope: !17134)
!17185 = !DILocalVariable(name: "grid_indices", scope: !17134, file: !3, line: 1441, type: !2083)
!17186 = !DILocation(line: 1441, column: 7, scope: !17134)
!17187 = !DILocalVariable(name: "totgrid", scope: !17134, file: !3, line: 1441, type: !57)
!17188 = !DILocation(line: 1441, column: 21, scope: !17134)
!17189 = !DILocalVariable(name: "gridsize", scope: !17134, file: !3, line: 1441, type: !57)
!17190 = !DILocation(line: 1441, column: 30, scope: !17134)
!17191 = !DILocalVariable(name: "i", scope: !17134, file: !3, line: 1441, type: !57)
!17192 = !DILocation(line: 1441, column: 40, scope: !17134)
!17193 = !DILocalVariable(name: "x", scope: !17134, file: !3, line: 1441, type: !57)
!17194 = !DILocation(line: 1441, column: 43, scope: !17134)
!17195 = !DILocalVariable(name: "y", scope: !17134, file: !3, line: 1441, type: !57)
!17196 = !DILocation(line: 1441, column: 46, scope: !17134)
!17197 = !DILocation(line: 1443, column: 25, scope: !17134)
!17198 = !DILocation(line: 1443, column: 2, scope: !17134)
!17199 = !DILocation(line: 1445, column: 2, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17201, file: !3, line: 1445, column: 2)
!17201 = distinct !DILexicalBlock(scope: !17134, file: !3, line: 1445, column: 2)
!17202 = !DILocation(line: 1445, column: 2, scope: !17201)
!17203 = !DILocation(line: 1445, column: 2, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 1445, column: 2)
!17205 = !DILocation(line: 1447, column: 26, scope: !17134)
!17206 = !DILocation(line: 1447, column: 30, scope: !17134)
!17207 = !DILocation(line: 1447, column: 36, scope: !17134)
!17208 = !DILocation(line: 1447, column: 2, scope: !17134)
!17209 = !DILocation(line: 1449, column: 24, scope: !17134)
!17210 = !DILocation(line: 1449, column: 28, scope: !17134)
!17211 = !DILocation(line: 1449, column: 2, scope: !17134)
!17212 = !DILocation(line: 1451, column: 37, scope: !17134)
!17213 = !DILocation(line: 1451, column: 41, scope: !17134)
!17214 = !DILocation(line: 1451, column: 16, scope: !17134)
!17215 = !DILocation(line: 1451, column: 14, scope: !17134)
!17216 = !DILocation(line: 1456, column: 13, scope: !17134)
!17217 = !DILocation(line: 1458, column: 15, scope: !17134)
!17218 = !DILocation(line: 1458, column: 19, scope: !17134)
!17219 = !DILocation(line: 1458, column: 26, scope: !17134)
!17220 = !DILocation(line: 1458, column: 37, scope: !17134)
!17221 = !DILocation(line: 1458, column: 13, scope: !17134)
!17222 = !DILocation(line: 1459, column: 14, scope: !17134)
!17223 = !DILocation(line: 1459, column: 18, scope: !17134)
!17224 = !DILocation(line: 1459, column: 25, scope: !17134)
!17225 = !DILocation(line: 1459, column: 35, scope: !17134)
!17226 = !DILocation(line: 1459, column: 12, scope: !17134)
!17227 = !DILocation(line: 1460, column: 17, scope: !17134)
!17228 = !DILocation(line: 1460, column: 21, scope: !17134)
!17229 = !DILocation(line: 1460, column: 28, scope: !17134)
!17230 = !DILocation(line: 1460, column: 41, scope: !17134)
!17231 = !DILocation(line: 1460, column: 15, scope: !17134)
!17232 = !DILocation(line: 1461, column: 16, scope: !17134)
!17233 = !DILocation(line: 1461, column: 20, scope: !17134)
!17234 = !DILocation(line: 1461, column: 27, scope: !17134)
!17235 = !DILocation(line: 1461, column: 39, scope: !17134)
!17236 = !DILocation(line: 1461, column: 14, scope: !17134)
!17237 = !DILocation(line: 1463, column: 9, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17134, file: !3, line: 1463, column: 2)
!17239 = !DILocation(line: 1463, column: 7, scope: !17238)
!17240 = !DILocation(line: 1463, column: 14, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 1463, column: 2)
!17242 = !DILocation(line: 1463, column: 18, scope: !17241)
!17243 = !DILocation(line: 1463, column: 16, scope: !17241)
!17244 = !DILocation(line: 1463, column: 2, scope: !17238)
!17245 = !DILocalVariable(name: "gi", scope: !17246, file: !3, line: 1464, type: !57)
!17246 = distinct !DILexicalBlock(scope: !17241, file: !3, line: 1463, column: 32)
!17247 = !DILocation(line: 1464, column: 7, scope: !17246)
!17248 = !DILocation(line: 1464, column: 12, scope: !17246)
!17249 = !DILocation(line: 1464, column: 25, scope: !17246)
!17250 = !DILocalVariable(name: "gh", scope: !17246, file: !3, line: 1465, type: !5161)
!17251 = !DILocation(line: 1465, column: 15, scope: !17246)
!17252 = !DILocation(line: 1465, column: 20, scope: !17246)
!17253 = !DILocation(line: 1465, column: 32, scope: !17246)
!17254 = !DILocation(line: 1466, column: 10, scope: !17246)
!17255 = !DILocation(line: 1466, column: 19, scope: !17246)
!17256 = !DILocation(line: 1466, column: 8, scope: !17246)
!17257 = !DILocation(line: 1467, column: 10, scope: !17246)
!17258 = !DILocation(line: 1467, column: 18, scope: !17246)
!17259 = !DILocation(line: 1467, column: 7, scope: !17246)
!17260 = !DILocation(line: 1469, column: 7, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17246, file: !3, line: 1469, column: 7)
!17262 = !DILocation(line: 1469, column: 7, scope: !17246)
!17263 = !DILocation(line: 1470, column: 11, scope: !17261)
!17264 = !DILocation(line: 1470, column: 4, scope: !17261)
!17265 = !DILocation(line: 1470, column: 44, scope: !17261)
!17266 = !DILocation(line: 1470, column: 42, scope: !17261)
!17267 = !DILocation(line: 1470, column: 55, scope: !17261)
!17268 = !DILocation(line: 1470, column: 53, scope: !17261)
!17269 = !DILocation(line: 1472, column: 11, scope: !17261)
!17270 = !DILocation(line: 1472, column: 4, scope: !17261)
!17271 = !DILocation(line: 1472, column: 46, scope: !17261)
!17272 = !DILocation(line: 1472, column: 44, scope: !17261)
!17273 = !DILocation(line: 1472, column: 57, scope: !17261)
!17274 = !DILocation(line: 1472, column: 55, scope: !17261)
!17275 = !DILocation(line: 1474, column: 10, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17246, file: !3, line: 1474, column: 3)
!17277 = !DILocation(line: 1474, column: 8, scope: !17276)
!17278 = !DILocation(line: 1474, column: 15, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1474, column: 3)
!17280 = !DILocation(line: 1474, column: 19, scope: !17279)
!17281 = !DILocation(line: 1474, column: 28, scope: !17279)
!17282 = !DILocation(line: 1474, column: 17, scope: !17279)
!17283 = !DILocation(line: 1474, column: 3, scope: !17276)
!17284 = !DILocation(line: 1475, column: 9, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17279, file: !3, line: 1474, column: 38)
!17286 = !DILocation(line: 1475, column: 13, scope: !17285)
!17287 = !DILocation(line: 1475, column: 11, scope: !17285)
!17288 = !DILocation(line: 1475, column: 7, scope: !17285)
!17289 = !DILocation(line: 1476, column: 8, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17285, file: !3, line: 1476, column: 8)
!17291 = !DILocation(line: 1476, column: 8, scope: !17285)
!17292 = !DILocation(line: 1477, column: 51, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17290, file: !3, line: 1476, column: 21)
!17294 = !DILocation(line: 1477, column: 57, scope: !17293)
!17295 = !DILocation(line: 1477, column: 24, scope: !17293)
!17296 = !DILocation(line: 1477, column: 23, scope: !17293)
!17297 = !DILocation(line: 1478, column: 51, scope: !17293)
!17298 = !DILocation(line: 1478, column: 57, scope: !17293)
!17299 = !DILocation(line: 1478, column: 62, scope: !17293)
!17300 = !DILocation(line: 1478, column: 60, scope: !17293)
!17301 = !DILocation(line: 1478, column: 24, scope: !17293)
!17302 = !DILocation(line: 1478, column: 23, scope: !17293)
!17303 = !DILocation(line: 1477, column: 61, scope: !17293)
!17304 = !DILocation(line: 1477, column: 5, scope: !17293)
!17305 = !DILocation(line: 1477, column: 20, scope: !17293)
!17306 = !DILocation(line: 1479, column: 4, scope: !17293)
!17307 = !DILocation(line: 1481, column: 17, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17290, file: !3, line: 1480, column: 9)
!17309 = !DILocation(line: 1482, column: 42, scope: !17308)
!17310 = !DILocation(line: 1482, column: 48, scope: !17308)
!17311 = !DILocation(line: 1482, column: 17, scope: !17308)
!17312 = !DILocation(line: 1483, column: 42, scope: !17308)
!17313 = !DILocation(line: 1483, column: 48, scope: !17308)
!17314 = !DILocation(line: 1483, column: 53, scope: !17308)
!17315 = !DILocation(line: 1483, column: 51, scope: !17308)
!17316 = !DILocation(line: 1483, column: 17, scope: !17308)
!17317 = !DILocation(line: 1481, column: 5, scope: !17308)
!17318 = !DILocation(line: 1486, column: 11, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17285, file: !3, line: 1486, column: 4)
!17320 = !DILocation(line: 1486, column: 9, scope: !17319)
!17321 = !DILocation(line: 1486, column: 16, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17319, file: !3, line: 1486, column: 4)
!17323 = !DILocation(line: 1486, column: 20, scope: !17322)
!17324 = !DILocation(line: 1486, column: 29, scope: !17322)
!17325 = !DILocation(line: 1486, column: 18, scope: !17322)
!17326 = !DILocation(line: 1486, column: 4, scope: !17319)
!17327 = !DILocation(line: 1487, column: 10, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 1486, column: 39)
!17329 = !DILocation(line: 1487, column: 14, scope: !17328)
!17330 = !DILocation(line: 1487, column: 18, scope: !17328)
!17331 = !DILocation(line: 1487, column: 16, scope: !17328)
!17332 = !DILocation(line: 1487, column: 12, scope: !17328)
!17333 = !DILocation(line: 1487, column: 8, scope: !17328)
!17334 = !DILocation(line: 1488, column: 10, scope: !17328)
!17335 = !DILocation(line: 1488, column: 13, scope: !17328)
!17336 = !DILocation(line: 1488, column: 8, scope: !17328)
!17337 = !DILocation(line: 1489, column: 10, scope: !17328)
!17338 = !DILocation(line: 1489, column: 15, scope: !17328)
!17339 = !DILocation(line: 1489, column: 13, scope: !17328)
!17340 = !DILocation(line: 1489, column: 8, scope: !17328)
!17341 = !DILocation(line: 1490, column: 10, scope: !17328)
!17342 = !DILocation(line: 1490, column: 13, scope: !17328)
!17343 = !DILocation(line: 1490, column: 8, scope: !17328)
!17344 = !DILocation(line: 1492, column: 9, scope: !17345)
!17345 = distinct !DILexicalBlock(scope: !17328, file: !3, line: 1492, column: 9)
!17346 = !DILocation(line: 1492, column: 9, scope: !17328)
!17347 = !DILocalVariable(name: "tmp", scope: !17348, file: !3, line: 1493, type: !153)
!17348 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 1492, column: 22)
!17349 = !DILocation(line: 1493, column: 12, scope: !17348)
!17350 = !DILocation(line: 1495, column: 56, scope: !17348)
!17351 = !DILocation(line: 1495, column: 62, scope: !17348)
!17352 = !DILocation(line: 1495, column: 29, scope: !17348)
!17353 = !DILocation(line: 1495, column: 28, scope: !17348)
!17354 = !DILocation(line: 1496, column: 56, scope: !17348)
!17355 = !DILocation(line: 1496, column: 62, scope: !17348)
!17356 = !DILocation(line: 1496, column: 29, scope: !17348)
!17357 = !DILocation(line: 1496, column: 28, scope: !17348)
!17358 = !DILocation(line: 1495, column: 66, scope: !17348)
!17359 = !DILocation(line: 1495, column: 6, scope: !17348)
!17360 = !DILocation(line: 1495, column: 18, scope: !17348)
!17361 = !DILocation(line: 1495, column: 20, scope: !17348)
!17362 = !DILocation(line: 1495, column: 25, scope: !17348)
!17363 = !DILocation(line: 1497, column: 12, scope: !17348)
!17364 = !DILocation(line: 1497, column: 24, scope: !17348)
!17365 = !DILocation(line: 1497, column: 26, scope: !17348)
!17366 = !DILocation(line: 1497, column: 33, scope: !17348)
!17367 = !DILocation(line: 1497, column: 45, scope: !17348)
!17368 = !DILocation(line: 1497, column: 31, scope: !17348)
!17369 = !DILocation(line: 1497, column: 10, scope: !17348)
!17370 = !DILocation(line: 1499, column: 26, scope: !17348)
!17371 = !DILocation(line: 1499, column: 6, scope: !17348)
!17372 = !DILocation(line: 1499, column: 19, scope: !17348)
!17373 = !DILocation(line: 1499, column: 23, scope: !17348)
!17374 = !DILocation(line: 1500, column: 26, scope: !17348)
!17375 = !DILocation(line: 1500, column: 6, scope: !17348)
!17376 = !DILocation(line: 1500, column: 19, scope: !17348)
!17377 = !DILocation(line: 1500, column: 23, scope: !17348)
!17378 = !DILocation(line: 1501, column: 26, scope: !17348)
!17379 = !DILocation(line: 1501, column: 6, scope: !17348)
!17380 = !DILocation(line: 1501, column: 19, scope: !17348)
!17381 = !DILocation(line: 1501, column: 23, scope: !17348)
!17382 = !DILocation(line: 1502, column: 26, scope: !17348)
!17383 = !DILocation(line: 1502, column: 6, scope: !17348)
!17384 = !DILocation(line: 1502, column: 19, scope: !17348)
!17385 = !DILocation(line: 1502, column: 23, scope: !17348)
!17386 = !DILocation(line: 1503, column: 5, scope: !17348)
!17387 = !DILocalVariable(name: "tmp", scope: !17388, file: !3, line: 1505, type: !233)
!17388 = distinct !DILexicalBlock(scope: !17345, file: !3, line: 1504, column: 10)
!17389 = !DILocation(line: 1505, column: 12, scope: !17388)
!17390 = !DILocation(line: 1507, column: 18, scope: !17388)
!17391 = !DILocation(line: 1507, column: 28, scope: !17388)
!17392 = !DILocation(line: 1507, column: 30, scope: !17388)
!17393 = !DILocation(line: 1508, column: 43, scope: !17388)
!17394 = !DILocation(line: 1508, column: 49, scope: !17388)
!17395 = !DILocation(line: 1508, column: 18, scope: !17388)
!17396 = !DILocation(line: 1509, column: 43, scope: !17388)
!17397 = !DILocation(line: 1509, column: 49, scope: !17388)
!17398 = !DILocation(line: 1509, column: 18, scope: !17388)
!17399 = !DILocation(line: 1507, column: 6, scope: !17388)
!17400 = !DILocation(line: 1510, column: 18, scope: !17388)
!17401 = !DILocation(line: 1510, column: 23, scope: !17388)
!17402 = !DILocation(line: 1510, column: 33, scope: !17388)
!17403 = !DILocation(line: 1510, column: 35, scope: !17388)
!17404 = !DILocation(line: 1510, column: 41, scope: !17388)
!17405 = !DILocation(line: 1510, column: 51, scope: !17388)
!17406 = !DILocation(line: 1510, column: 6, scope: !17388)
!17407 = !DILocation(line: 1512, column: 16, scope: !17388)
!17408 = !DILocation(line: 1512, column: 27, scope: !17388)
!17409 = !DILocation(line: 1512, column: 32, scope: !17388)
!17410 = !DILocation(line: 1512, column: 6, scope: !17388)
!17411 = !DILocation(line: 1513, column: 16, scope: !17388)
!17412 = !DILocation(line: 1513, column: 27, scope: !17388)
!17413 = !DILocation(line: 1513, column: 32, scope: !17388)
!17414 = !DILocation(line: 1513, column: 6, scope: !17388)
!17415 = !DILocation(line: 1514, column: 16, scope: !17388)
!17416 = !DILocation(line: 1514, column: 27, scope: !17388)
!17417 = !DILocation(line: 1514, column: 32, scope: !17388)
!17418 = !DILocation(line: 1514, column: 6, scope: !17388)
!17419 = !DILocation(line: 1515, column: 16, scope: !17388)
!17420 = !DILocation(line: 1515, column: 27, scope: !17388)
!17421 = !DILocation(line: 1515, column: 32, scope: !17388)
!17422 = !DILocation(line: 1515, column: 6, scope: !17388)
!17423 = !DILocation(line: 1517, column: 4, scope: !17328)
!17424 = !DILocation(line: 1486, column: 35, scope: !17322)
!17425 = !DILocation(line: 1486, column: 4, scope: !17322)
!17426 = distinct !{!17426, !17326, !17427}
!17427 = !DILocation(line: 1517, column: 4, scope: !17319)
!17428 = !DILocation(line: 1518, column: 3, scope: !17285)
!17429 = !DILocation(line: 1474, column: 34, scope: !17279)
!17430 = !DILocation(line: 1474, column: 3, scope: !17279)
!17431 = distinct !{!17431, !17283, !17432}
!17432 = !DILocation(line: 1518, column: 3, scope: !17276)
!17433 = !DILocation(line: 1521, column: 10, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17246, file: !3, line: 1521, column: 3)
!17435 = !DILocation(line: 1521, column: 8, scope: !17434)
!17436 = !DILocation(line: 1521, column: 15, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1521, column: 3)
!17438 = !DILocation(line: 1521, column: 19, scope: !17437)
!17439 = !DILocation(line: 1521, column: 17, scope: !17437)
!17440 = !DILocation(line: 1521, column: 3, scope: !17434)
!17441 = !DILocation(line: 1522, column: 11, scope: !17442)
!17442 = distinct !DILexicalBlock(scope: !17443, file: !3, line: 1522, column: 4)
!17443 = distinct !DILexicalBlock(scope: !17437, file: !3, line: 1521, column: 34)
!17444 = !DILocation(line: 1522, column: 9, scope: !17442)
!17445 = !DILocation(line: 1522, column: 16, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17442, file: !3, line: 1522, column: 4)
!17447 = !DILocation(line: 1522, column: 20, scope: !17446)
!17448 = !DILocation(line: 1522, column: 18, scope: !17446)
!17449 = !DILocation(line: 1522, column: 4, scope: !17442)
!17450 = !DILocalVariable(name: "co", scope: !17451, file: !3, line: 1523, type: !359)
!17451 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 1522, column: 35)
!17452 = !DILocation(line: 1523, column: 12, scope: !17451)
!17453 = !DILocalVariable(name: "fno", scope: !17451, file: !3, line: 1524, type: !3251)
!17454 = !DILocation(line: 1524, column: 18, scope: !17451)
!17455 = !DILocalVariable(name: "mask", scope: !17451, file: !3, line: 1525, type: !359)
!17456 = !DILocation(line: 1525, column: 12, scope: !17451)
!17457 = !DILocalVariable(name: "index", scope: !17451, file: !3, line: 1526, type: !57)
!17458 = !DILocation(line: 1526, column: 9, scope: !17451)
!17459 = !DILocation(line: 1528, column: 9, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1528, column: 9)
!17461 = !DILocation(line: 1528, column: 9, scope: !17451)
!17462 = !DILocation(line: 1529, column: 10, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !3, line: 1529, column: 10)
!17464 = distinct !DILexicalBlock(scope: !17460, file: !3, line: 1528, column: 13)
!17465 = !DILocation(line: 1529, column: 10, scope: !17464)
!17466 = !DILocation(line: 1530, column: 7, scope: !17463)
!17467 = !DILocation(line: 1531, column: 5, scope: !17464)
!17468 = !DILocation(line: 1533, column: 9, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1533, column: 9)
!17470 = !DILocation(line: 1533, column: 11, scope: !17469)
!17471 = !DILocation(line: 1533, column: 16, scope: !17469)
!17472 = !DILocation(line: 1533, column: 19, scope: !17469)
!17473 = !DILocation(line: 1533, column: 24, scope: !17469)
!17474 = !DILocation(line: 1533, column: 33, scope: !17469)
!17475 = !DILocation(line: 1533, column: 9, scope: !17451)
!17476 = !DILocation(line: 1534, column: 6, scope: !17469)
!17477 = !DILocation(line: 1536, column: 9, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1536, column: 9)
!17479 = !DILocation(line: 1536, column: 14, scope: !17478)
!17480 = !DILocation(line: 1536, column: 23, scope: !17478)
!17481 = !DILocation(line: 1536, column: 11, scope: !17478)
!17482 = !DILocation(line: 1536, column: 27, scope: !17478)
!17483 = !DILocation(line: 1536, column: 30, scope: !17478)
!17484 = !DILocation(line: 1536, column: 35, scope: !17478)
!17485 = !DILocation(line: 1536, column: 44, scope: !17478)
!17486 = !DILocation(line: 1536, column: 9, scope: !17451)
!17487 = !DILocation(line: 1537, column: 6, scope: !17478)
!17488 = !DILocation(line: 1539, column: 9, scope: !17489)
!17489 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1539, column: 9)
!17490 = !DILocation(line: 1539, column: 11, scope: !17489)
!17491 = !DILocation(line: 1539, column: 16, scope: !17489)
!17492 = !DILocation(line: 1539, column: 19, scope: !17489)
!17493 = !DILocation(line: 1539, column: 24, scope: !17489)
!17494 = !DILocation(line: 1539, column: 33, scope: !17489)
!17495 = !DILocation(line: 1539, column: 9, scope: !17451)
!17496 = !DILocation(line: 1540, column: 6, scope: !17489)
!17497 = !DILocation(line: 1542, column: 9, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1542, column: 9)
!17499 = !DILocation(line: 1542, column: 14, scope: !17498)
!17500 = !DILocation(line: 1542, column: 23, scope: !17498)
!17501 = !DILocation(line: 1542, column: 11, scope: !17498)
!17502 = !DILocation(line: 1542, column: 27, scope: !17498)
!17503 = !DILocation(line: 1542, column: 30, scope: !17498)
!17504 = !DILocation(line: 1542, column: 35, scope: !17498)
!17505 = !DILocation(line: 1542, column: 44, scope: !17498)
!17506 = !DILocation(line: 1542, column: 9, scope: !17451)
!17507 = !DILocation(line: 1543, column: 6, scope: !17498)
!17508 = !DILocation(line: 1545, column: 13, scope: !17451)
!17509 = !DILocation(line: 1545, column: 17, scope: !17451)
!17510 = !DILocation(line: 1545, column: 21, scope: !17451)
!17511 = !DILocation(line: 1545, column: 19, scope: !17451)
!17512 = !DILocation(line: 1545, column: 15, scope: !17451)
!17513 = !DILocation(line: 1545, column: 11, scope: !17451)
!17514 = !DILocation(line: 1546, column: 35, scope: !17451)
!17515 = !DILocation(line: 1546, column: 41, scope: !17451)
!17516 = !DILocation(line: 1546, column: 10, scope: !17451)
!17517 = !DILocation(line: 1546, column: 8, scope: !17451)
!17518 = !DILocation(line: 1547, column: 36, scope: !17451)
!17519 = !DILocation(line: 1547, column: 42, scope: !17451)
!17520 = !DILocation(line: 1547, column: 11, scope: !17451)
!17521 = !DILocation(line: 1547, column: 9, scope: !17451)
!17522 = !DILocation(line: 1548, column: 39, scope: !17451)
!17523 = !DILocation(line: 1548, column: 45, scope: !17451)
!17524 = !DILocation(line: 1548, column: 12, scope: !17451)
!17525 = !DILocation(line: 1548, column: 10, scope: !17451)
!17526 = !DILocation(line: 1550, column: 34, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 1550, column: 9)
!17528 = !DILocation(line: 1550, column: 9, scope: !17527)
!17529 = !DILocation(line: 1550, column: 9, scope: !17451)
!17530 = !DILocalVariable(name: "strength_mask", scope: !17531, file: !3, line: 1551, type: !3072)
!17531 = distinct !DILexicalBlock(scope: !17527, file: !3, line: 1550, column: 39)
!17532 = !DILocation(line: 1551, column: 18, scope: !17531)
!17533 = !DILocation(line: 1551, column: 35, scope: !17531)
!17534 = !DILocation(line: 1551, column: 54, scope: !17531)
!17535 = !DILocation(line: 1551, column: 53, scope: !17531)
!17536 = !DILocalVariable(name: "fade", scope: !17531, file: !3, line: 1552, type: !3072)
!17537 = !DILocation(line: 1552, column: 18, scope: !17531)
!17538 = !DILocation(line: 1552, column: 25, scope: !17531)
!17539 = !DILocation(line: 1552, column: 50, scope: !17531)
!17540 = !DILocation(line: 1552, column: 54, scope: !17531)
!17541 = !DILocation(line: 1552, column: 61, scope: !17531)
!17542 = !DILocation(line: 1552, column: 70, scope: !17531)
!17543 = !DILocation(line: 1553, column: 56, scope: !17531)
!17544 = !DILocation(line: 1553, column: 61, scope: !17531)
!17545 = !DILocation(line: 1552, column: 37, scope: !17531)
!17546 = !DILocation(line: 1552, column: 35, scope: !17531)
!17547 = !DILocalVariable(name: "n", scope: !17531, file: !3, line: 1554, type: !153)
!17548 = !DILocation(line: 1554, column: 12, scope: !17531)
!17549 = !DILocation(line: 1556, column: 10, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17531, file: !3, line: 1556, column: 10)
!17551 = !DILocation(line: 1556, column: 12, scope: !17550)
!17552 = !DILocation(line: 1556, column: 17, scope: !17550)
!17553 = !DILocation(line: 1556, column: 20, scope: !17550)
!17554 = !DILocation(line: 1556, column: 25, scope: !17550)
!17555 = !DILocation(line: 1556, column: 34, scope: !17550)
!17556 = !DILocation(line: 1556, column: 22, scope: !17550)
!17557 = !DILocation(line: 1556, column: 10, scope: !17531)
!17558 = !DILocation(line: 1557, column: 9, scope: !17550)
!17559 = !DILocation(line: 1557, column: 7, scope: !17550)
!17560 = !DILocation(line: 1559, column: 10, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17531, file: !3, line: 1559, column: 10)
!17562 = !DILocation(line: 1559, column: 12, scope: !17561)
!17563 = !DILocation(line: 1559, column: 17, scope: !17561)
!17564 = !DILocation(line: 1559, column: 20, scope: !17561)
!17565 = !DILocation(line: 1559, column: 25, scope: !17561)
!17566 = !DILocation(line: 1559, column: 34, scope: !17561)
!17567 = !DILocation(line: 1559, column: 22, scope: !17561)
!17568 = !DILocation(line: 1559, column: 10, scope: !17531)
!17569 = !DILocation(line: 1560, column: 9, scope: !17561)
!17570 = !DILocation(line: 1560, column: 7, scope: !17561)
!17571 = !DILocation(line: 1562, column: 10, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17531, file: !3, line: 1562, column: 10)
!17573 = !DILocation(line: 1562, column: 10, scope: !17531)
!17574 = !DILocation(line: 1563, column: 18, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17572, file: !3, line: 1562, column: 23)
!17576 = !DILocation(line: 1563, column: 31, scope: !17575)
!17577 = !DILocation(line: 1563, column: 35, scope: !17575)
!17578 = !DILocation(line: 1563, column: 39, scope: !17575)
!17579 = !DILocation(line: 1563, column: 37, scope: !17575)
!17580 = !DILocation(line: 1563, column: 33, scope: !17575)
!17581 = !DILocation(line: 1563, column: 51, scope: !17575)
!17582 = !DILocation(line: 1563, column: 49, scope: !17575)
!17583 = !DILocation(line: 1563, column: 57, scope: !17575)
!17584 = !DILocation(line: 1563, column: 56, scope: !17575)
!17585 = !DILocation(line: 1563, column: 54, scope: !17575)
!17586 = !DILocation(line: 1563, column: 65, scope: !17575)
!17587 = !DILocation(line: 1563, column: 63, scope: !17575)
!17588 = !DILocation(line: 1563, column: 8, scope: !17575)
!17589 = !DILocation(line: 1563, column: 13, scope: !17575)
!17590 = !DILocation(line: 1564, column: 6, scope: !17575)
!17591 = !DILocalVariable(name: "avg", scope: !17592, file: !3, line: 1566, type: !359)
!17592 = distinct !DILexicalBlock(scope: !17572, file: !3, line: 1565, column: 11)
!17593 = !DILocation(line: 1566, column: 14, scope: !17592)
!17594 = !DILocalVariable(name: "val", scope: !17592, file: !3, line: 1566, type: !233)
!17595 = !DILocation(line: 1566, column: 19, scope: !17592)
!17596 = !DILocation(line: 1568, column: 13, scope: !17592)
!17597 = !DILocation(line: 1568, column: 24, scope: !17592)
!17598 = !DILocation(line: 1568, column: 28, scope: !17592)
!17599 = !DILocation(line: 1568, column: 32, scope: !17592)
!17600 = !DILocation(line: 1568, column: 30, scope: !17592)
!17601 = !DILocation(line: 1568, column: 26, scope: !17592)
!17602 = !DILocation(line: 1568, column: 11, scope: !17592)
!17603 = !DILocation(line: 1570, column: 17, scope: !17592)
!17604 = !DILocation(line: 1570, column: 22, scope: !17592)
!17605 = !DILocation(line: 1570, column: 7, scope: !17592)
!17606 = !DILocation(line: 1572, column: 19, scope: !17592)
!17607 = !DILocation(line: 1572, column: 24, scope: !17592)
!17608 = !DILocation(line: 1572, column: 29, scope: !17592)
!17609 = !DILocation(line: 1572, column: 7, scope: !17592)
!17610 = !DILocation(line: 1573, column: 17, scope: !17592)
!17611 = !DILocation(line: 1573, column: 22, scope: !17592)
!17612 = !DILocation(line: 1573, column: 7, scope: !17592)
!17613 = !DILocation(line: 1575, column: 17, scope: !17592)
!17614 = !DILocation(line: 1575, column: 22, scope: !17592)
!17615 = !DILocation(line: 1575, column: 7, scope: !17592)
!17616 = !DILocation(line: 1577, column: 19, scope: !17592)
!17617 = !DILocation(line: 1577, column: 23, scope: !17592)
!17618 = !DILocation(line: 1577, column: 27, scope: !17592)
!17619 = !DILocation(line: 1577, column: 31, scope: !17592)
!17620 = !DILocation(line: 1577, column: 7, scope: !17592)
!17621 = !DILocation(line: 1579, column: 5, scope: !17531)
!17622 = !DILocation(line: 1580, column: 4, scope: !17451)
!17623 = !DILocation(line: 1522, column: 30, scope: !17446)
!17624 = !DILocation(line: 1522, column: 4, scope: !17446)
!17625 = distinct !{!17625, !17449, !17626}
!17626 = !DILocation(line: 1580, column: 4, scope: !17442)
!17627 = !DILocation(line: 1581, column: 3, scope: !17443)
!17628 = !DILocation(line: 1521, column: 29, scope: !17437)
!17629 = !DILocation(line: 1521, column: 3, scope: !17437)
!17630 = distinct !{!17630, !17440, !17631}
!17631 = !DILocation(line: 1581, column: 3, scope: !17434)
!17632 = !DILocation(line: 1582, column: 2, scope: !17246)
!17633 = !DILocation(line: 1463, column: 27, scope: !17241)
!17634 = !DILocation(line: 1463, column: 2, scope: !17241)
!17635 = distinct !{!17635, !17244, !17636}
!17636 = !DILocation(line: 1582, column: 2, scope: !17238)
!17637 = !DILocation(line: 1583, column: 1, scope: !17134)
!17638 = distinct !DISubprogram(name: "do_mesh_smooth_brush", scope: !3, file: !3, line: 1346, type: !17135, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!17639 = !DILocalVariable(name: "sd", arg: 1, scope: !17638, file: !3, line: 1346, type: !6)
!17640 = !DILocation(line: 1346, column: 42, scope: !17638)
!17641 = !DILocalVariable(name: "ss", arg: 2, scope: !17638, file: !3, line: 1346, type: !5374)
!17642 = !DILocation(line: 1346, column: 61, scope: !17638)
!17643 = !DILocalVariable(name: "node", arg: 3, scope: !17638, file: !3, line: 1346, type: !3742)
!17644 = !DILocation(line: 1346, column: 75, scope: !17638)
!17645 = !DILocalVariable(name: "bstrength", arg: 4, scope: !17638, file: !3, line: 1346, type: !153)
!17646 = !DILocation(line: 1346, column: 87, scope: !17638)
!17647 = !DILocalVariable(name: "smooth_mask", arg: 5, scope: !17638, file: !3, line: 1346, type: !57)
!17648 = !DILocation(line: 1346, column: 102, scope: !17638)
!17649 = !DILocalVariable(name: "brush", scope: !17638, file: !3, line: 1348, type: !2749)
!17650 = !DILocation(line: 1348, column: 9, scope: !17638)
!17651 = !DILocation(line: 1348, column: 34, scope: !17638)
!17652 = !DILocation(line: 1348, column: 38, scope: !17638)
!17653 = !DILocation(line: 1348, column: 17, scope: !17638)
!17654 = !DILocalVariable(name: "vd", scope: !17638, file: !3, line: 1349, type: !9184)
!17655 = !DILocation(line: 1349, column: 17, scope: !17638)
!17656 = !DILocalVariable(name: "test", scope: !17638, file: !3, line: 1350, type: !11350)
!17657 = !DILocation(line: 1350, column: 18, scope: !17638)
!17658 = !DILocation(line: 1352, column: 2, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17660, file: !3, line: 1352, column: 2)
!17660 = distinct !DILexicalBlock(scope: !17638, file: !3, line: 1352, column: 2)
!17661 = !DILocation(line: 1352, column: 2, scope: !17660)
!17662 = !DILocation(line: 1352, column: 2, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17659, file: !3, line: 1352, column: 2)
!17664 = !DILocation(line: 1354, column: 25, scope: !17638)
!17665 = !DILocation(line: 1354, column: 2, scope: !17638)
!17666 = !DILocation(line: 1356, column: 2, scope: !17638)
!17667 = !DILocation(line: 1356, column: 2, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17638, file: !3, line: 1356, column: 2)
!17669 = !DILocation(line: 1356, column: 2, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17668, file: !3, line: 1356, column: 2)
!17671 = !DILocation(line: 1356, column: 2, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17673, file: !3, line: 1356, column: 2)
!17673 = distinct !DILexicalBlock(scope: !17670, file: !3, line: 1356, column: 2)
!17674 = !DILocation(line: 1356, column: 2, scope: !17673)
!17675 = !DILocation(line: 1356, column: 2, scope: !17676)
!17676 = distinct !DILexicalBlock(scope: !17672, file: !3, line: 1356, column: 2)
!17677 = !DILocation(line: 1356, column: 2, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17676, file: !3, line: 1356, column: 2)
!17679 = !DILocation(line: 1356, column: 2, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17672, file: !3, line: 1356, column: 2)
!17681 = !DILocation(line: 1356, column: 2, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17673, file: !3, line: 1356, column: 2)
!17683 = !DILocation(line: 1356, column: 2, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17682, file: !3, line: 1356, column: 2)
!17685 = !DILocation(line: 1356, column: 2, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17687, file: !3, line: 1356, column: 2)
!17687 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 1356, column: 2)
!17688 = !DILocation(line: 1356, column: 2, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1356, column: 2)
!17690 = !DILocation(line: 1356, column: 2, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17692, file: !3, line: 1356, column: 2)
!17692 = distinct !DILexicalBlock(scope: !17689, file: !3, line: 1356, column: 2)
!17693 = !DILocation(line: 1356, column: 2, scope: !17692)
!17694 = !DILocation(line: 1356, column: 2, scope: !17695)
!17695 = distinct !DILexicalBlock(scope: !17691, file: !3, line: 1356, column: 2)
!17696 = !DILocation(line: 1356, column: 2, scope: !17697)
!17697 = distinct !DILexicalBlock(scope: !17695, file: !3, line: 1356, column: 2)
!17698 = !DILocation(line: 1356, column: 2, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17700, file: !3, line: 1356, column: 2)
!17700 = distinct !DILexicalBlock(scope: !17697, file: !3, line: 1356, column: 2)
!17701 = !DILocation(line: 1356, column: 2, scope: !17700)
!17702 = !DILocation(line: 1356, column: 2, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17691, file: !3, line: 1356, column: 2)
!17704 = !DILocation(line: 1356, column: 2, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17703, file: !3, line: 1356, column: 2)
!17706 = !DILocation(line: 1356, column: 2, scope: !17707)
!17707 = distinct !DILexicalBlock(scope: !17705, file: !3, line: 1356, column: 2)
!17708 = !DILocation(line: 1356, column: 2, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17705, file: !3, line: 1356, column: 2)
!17710 = !DILocation(line: 1356, column: 2, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17712, file: !3, line: 1356, column: 2)
!17712 = distinct !DILexicalBlock(scope: !17703, file: !3, line: 1356, column: 2)
!17713 = !DILocation(line: 1356, column: 2, scope: !17712)
!17714 = !DILocation(line: 1356, column: 2, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17711, file: !3, line: 1356, column: 2)
!17716 = !DILocation(line: 1356, column: 2, scope: !17717)
!17717 = distinct !DILexicalBlock(scope: !17711, file: !3, line: 1356, column: 2)
!17718 = !DILocation(line: 1356, column: 2, scope: !17719)
!17719 = distinct !DILexicalBlock(scope: !17712, file: !3, line: 1356, column: 2)
!17720 = !DILocation(line: 1358, column: 35, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 1358, column: 7)
!17722 = distinct !DILexicalBlock(scope: !17692, file: !3, line: 1357, column: 2)
!17723 = !DILocation(line: 1358, column: 7, scope: !17721)
!17724 = !DILocation(line: 1358, column: 7, scope: !17722)
!17725 = !DILocalVariable(name: "fade", scope: !17726, file: !3, line: 1359, type: !3072)
!17726 = distinct !DILexicalBlock(scope: !17721, file: !3, line: 1358, column: 40)
!17727 = !DILocation(line: 1359, column: 16, scope: !17726)
!17728 = !DILocation(line: 1359, column: 23, scope: !17726)
!17729 = !DILocation(line: 1359, column: 48, scope: !17726)
!17730 = !DILocation(line: 1359, column: 52, scope: !17726)
!17731 = !DILocation(line: 1359, column: 62, scope: !17726)
!17732 = !DILocation(line: 1359, column: 71, scope: !17726)
!17733 = !DILocation(line: 1360, column: 51, scope: !17726)
!17734 = !DILocation(line: 1360, column: 58, scope: !17726)
!17735 = !DILocation(line: 1361, column: 48, scope: !17726)
!17736 = !DILocation(line: 1361, column: 70, scope: !17726)
!17737 = !DILocation(line: 1361, column: 67, scope: !17726)
!17738 = !DILocation(line: 1361, column: 81, scope: !17726)
!17739 = !DILocation(line: 1361, column: 77, scope: !17726)
!17740 = !DILocation(line: 1359, column: 35, scope: !17726)
!17741 = !DILocation(line: 1359, column: 33, scope: !17726)
!17742 = !DILocation(line: 1362, column: 8, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 1362, column: 8)
!17744 = !DILocation(line: 1362, column: 8, scope: !17726)
!17745 = !DILocalVariable(name: "val", scope: !17746, file: !3, line: 1363, type: !153)
!17746 = distinct !DILexicalBlock(scope: !17743, file: !3, line: 1362, column: 21)
!17747 = !DILocation(line: 1363, column: 11, scope: !17746)
!17748 = !DILocation(line: 1363, column: 39, scope: !17746)
!17749 = !DILocation(line: 1363, column: 46, scope: !17746)
!17750 = !DILocation(line: 1363, column: 62, scope: !17746)
!17751 = !DILocation(line: 1363, column: 43, scope: !17746)
!17752 = !DILocation(line: 1363, column: 17, scope: !17746)
!17753 = !DILocation(line: 1363, column: 72, scope: !17746)
!17754 = !DILocation(line: 1363, column: 68, scope: !17746)
!17755 = !DILocation(line: 1363, column: 66, scope: !17746)
!17756 = !DILocation(line: 1364, column: 12, scope: !17746)
!17757 = !DILocation(line: 1364, column: 19, scope: !17746)
!17758 = !DILocation(line: 1364, column: 17, scope: !17746)
!17759 = !DILocation(line: 1364, column: 9, scope: !17746)
!17760 = !DILocation(line: 1365, column: 17, scope: !17746)
!17761 = !DILocation(line: 1365, column: 9, scope: !17746)
!17762 = !DILocation(line: 1365, column: 14, scope: !17746)
!17763 = !DILocation(line: 1366, column: 5, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17765, file: !3, line: 1366, column: 5)
!17765 = distinct !DILexicalBlock(scope: !17746, file: !3, line: 1366, column: 5)
!17766 = !DILocation(line: 1366, column: 5, scope: !17765)
!17767 = !DILocation(line: 1366, column: 5, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17764, file: !3, line: 1366, column: 5)
!17769 = !DILocation(line: 1367, column: 4, scope: !17746)
!17770 = !DILocalVariable(name: "avg", scope: !17771, file: !3, line: 1369, type: !233)
!17771 = distinct !DILexicalBlock(scope: !17743, file: !3, line: 1368, column: 9)
!17772 = !DILocation(line: 1369, column: 11, scope: !17771)
!17773 = !DILocalVariable(name: "val", scope: !17771, file: !3, line: 1369, type: !233)
!17774 = !DILocation(line: 1369, column: 19, scope: !17771)
!17775 = !DILocation(line: 1371, column: 22, scope: !17771)
!17776 = !DILocation(line: 1371, column: 26, scope: !17771)
!17777 = !DILocation(line: 1371, column: 34, scope: !17771)
!17778 = !DILocation(line: 1371, column: 50, scope: !17771)
!17779 = !DILocation(line: 1371, column: 31, scope: !17771)
!17780 = !DILocation(line: 1371, column: 5, scope: !17771)
!17781 = !DILocation(line: 1372, column: 17, scope: !17771)
!17782 = !DILocation(line: 1372, column: 22, scope: !17771)
!17783 = !DILocation(line: 1372, column: 30, scope: !17771)
!17784 = !DILocation(line: 1372, column: 5, scope: !17771)
!17785 = !DILocation(line: 1373, column: 15, scope: !17771)
!17786 = !DILocation(line: 1373, column: 20, scope: !17771)
!17787 = !DILocation(line: 1373, column: 5, scope: !17771)
!17788 = !DILocation(line: 1375, column: 15, scope: !17771)
!17789 = !DILocation(line: 1375, column: 23, scope: !17771)
!17790 = !DILocation(line: 1375, column: 5, scope: !17771)
!17791 = !DILocation(line: 1377, column: 17, scope: !17771)
!17792 = !DILocation(line: 1377, column: 21, scope: !17771)
!17793 = !DILocation(line: 1377, column: 28, scope: !17771)
!17794 = !DILocation(line: 1377, column: 32, scope: !17771)
!17795 = !DILocation(line: 1377, column: 5, scope: !17771)
!17796 = !DILocation(line: 1380, column: 11, scope: !17797)
!17797 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 1380, column: 8)
!17798 = !DILocation(line: 1380, column: 8, scope: !17797)
!17799 = !DILocation(line: 1380, column: 8, scope: !17726)
!17800 = !DILocation(line: 1381, column: 8, scope: !17797)
!17801 = !DILocation(line: 1381, column: 15, scope: !17797)
!17802 = !DILocation(line: 1381, column: 20, scope: !17797)
!17803 = !DILocation(line: 1381, column: 5, scope: !17797)
!17804 = !DILocation(line: 1382, column: 3, scope: !17726)
!17805 = !DILocation(line: 1384, column: 2, scope: !17692)
!17806 = distinct !{!17806, !17685, !17807}
!17807 = !DILocation(line: 1384, column: 2, scope: !17686)
!17808 = !DILocation(line: 1384, column: 2, scope: !17687)
!17809 = distinct !{!17809, !17681, !17810}
!17810 = !DILocation(line: 1384, column: 2, scope: !17682)
!17811 = !DILocation(line: 1384, column: 2, scope: !17673)
!17812 = distinct !{!17812, !17667, !17813}
!17813 = !DILocation(line: 1384, column: 2, scope: !17668)
!17814 = !DILocation(line: 1385, column: 1, scope: !17638)
!17815 = distinct !DISubprogram(name: "do_bmesh_smooth_brush", scope: !3, file: !3, line: 1387, type: !17135, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!17816 = !DILocalVariable(name: "sd", arg: 1, scope: !17815, file: !3, line: 1387, type: !6)
!17817 = !DILocation(line: 1387, column: 43, scope: !17815)
!17818 = !DILocalVariable(name: "ss", arg: 2, scope: !17815, file: !3, line: 1387, type: !5374)
!17819 = !DILocation(line: 1387, column: 62, scope: !17815)
!17820 = !DILocalVariable(name: "node", arg: 3, scope: !17815, file: !3, line: 1387, type: !3742)
!17821 = !DILocation(line: 1387, column: 76, scope: !17815)
!17822 = !DILocalVariable(name: "bstrength", arg: 4, scope: !17815, file: !3, line: 1387, type: !153)
!17823 = !DILocation(line: 1387, column: 88, scope: !17815)
!17824 = !DILocalVariable(name: "smooth_mask", arg: 5, scope: !17815, file: !3, line: 1387, type: !57)
!17825 = !DILocation(line: 1387, column: 103, scope: !17815)
!17826 = !DILocalVariable(name: "brush", scope: !17815, file: !3, line: 1389, type: !2749)
!17827 = !DILocation(line: 1389, column: 9, scope: !17815)
!17828 = !DILocation(line: 1389, column: 34, scope: !17815)
!17829 = !DILocation(line: 1389, column: 38, scope: !17815)
!17830 = !DILocation(line: 1389, column: 17, scope: !17815)
!17831 = !DILocalVariable(name: "vd", scope: !17815, file: !3, line: 1390, type: !9184)
!17832 = !DILocation(line: 1390, column: 17, scope: !17815)
!17833 = !DILocalVariable(name: "test", scope: !17815, file: !3, line: 1391, type: !11350)
!17834 = !DILocation(line: 1391, column: 18, scope: !17815)
!17835 = !DILocation(line: 1393, column: 2, scope: !17836)
!17836 = distinct !DILexicalBlock(scope: !17837, file: !3, line: 1393, column: 2)
!17837 = distinct !DILexicalBlock(scope: !17815, file: !3, line: 1393, column: 2)
!17838 = !DILocation(line: 1393, column: 2, scope: !17837)
!17839 = !DILocation(line: 1393, column: 2, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17836, file: !3, line: 1393, column: 2)
!17841 = !DILocation(line: 1395, column: 25, scope: !17815)
!17842 = !DILocation(line: 1395, column: 2, scope: !17815)
!17843 = !DILocation(line: 1397, column: 2, scope: !17815)
!17844 = !DILocation(line: 1397, column: 2, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17815, file: !3, line: 1397, column: 2)
!17846 = !DILocation(line: 1397, column: 2, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17845, file: !3, line: 1397, column: 2)
!17848 = !DILocation(line: 1397, column: 2, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1397, column: 2)
!17850 = distinct !DILexicalBlock(scope: !17847, file: !3, line: 1397, column: 2)
!17851 = !DILocation(line: 1397, column: 2, scope: !17850)
!17852 = !DILocation(line: 1397, column: 2, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17849, file: !3, line: 1397, column: 2)
!17854 = !DILocation(line: 1397, column: 2, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17853, file: !3, line: 1397, column: 2)
!17856 = !DILocation(line: 1397, column: 2, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17849, file: !3, line: 1397, column: 2)
!17858 = !DILocation(line: 1397, column: 2, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 1397, column: 2)
!17860 = !DILocation(line: 1397, column: 2, scope: !17861)
!17861 = distinct !DILexicalBlock(scope: !17859, file: !3, line: 1397, column: 2)
!17862 = !DILocation(line: 1397, column: 2, scope: !17863)
!17863 = distinct !DILexicalBlock(scope: !17864, file: !3, line: 1397, column: 2)
!17864 = distinct !DILexicalBlock(scope: !17861, file: !3, line: 1397, column: 2)
!17865 = !DILocation(line: 1397, column: 2, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17863, file: !3, line: 1397, column: 2)
!17867 = !DILocation(line: 1397, column: 2, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 1397, column: 2)
!17869 = distinct !DILexicalBlock(scope: !17866, file: !3, line: 1397, column: 2)
!17870 = !DILocation(line: 1397, column: 2, scope: !17869)
!17871 = !DILocation(line: 1397, column: 2, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17868, file: !3, line: 1397, column: 2)
!17873 = !DILocation(line: 1397, column: 2, scope: !17874)
!17874 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 1397, column: 2)
!17875 = !DILocation(line: 1397, column: 2, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17877, file: !3, line: 1397, column: 2)
!17877 = distinct !DILexicalBlock(scope: !17874, file: !3, line: 1397, column: 2)
!17878 = !DILocation(line: 1397, column: 2, scope: !17877)
!17879 = !DILocation(line: 1397, column: 2, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17868, file: !3, line: 1397, column: 2)
!17881 = !DILocation(line: 1397, column: 2, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1397, column: 2)
!17883 = !DILocation(line: 1397, column: 2, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 1397, column: 2)
!17885 = !DILocation(line: 1397, column: 2, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 1397, column: 2)
!17887 = !DILocation(line: 1397, column: 2, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17889, file: !3, line: 1397, column: 2)
!17889 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 1397, column: 2)
!17890 = !DILocation(line: 1397, column: 2, scope: !17889)
!17891 = !DILocation(line: 1397, column: 2, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17888, file: !3, line: 1397, column: 2)
!17893 = !DILocation(line: 1397, column: 2, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17888, file: !3, line: 1397, column: 2)
!17895 = !DILocation(line: 1397, column: 2, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17889, file: !3, line: 1397, column: 2)
!17897 = !DILocation(line: 1399, column: 35, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17899, file: !3, line: 1399, column: 7)
!17899 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 1398, column: 2)
!17900 = !DILocation(line: 1399, column: 7, scope: !17898)
!17901 = !DILocation(line: 1399, column: 7, scope: !17899)
!17902 = !DILocalVariable(name: "fade", scope: !17903, file: !3, line: 1400, type: !3072)
!17903 = distinct !DILexicalBlock(scope: !17898, file: !3, line: 1399, column: 40)
!17904 = !DILocation(line: 1400, column: 16, scope: !17903)
!17905 = !DILocation(line: 1400, column: 23, scope: !17903)
!17906 = !DILocation(line: 1400, column: 48, scope: !17903)
!17907 = !DILocation(line: 1400, column: 52, scope: !17903)
!17908 = !DILocation(line: 1400, column: 62, scope: !17903)
!17909 = !DILocation(line: 1400, column: 71, scope: !17903)
!17910 = !DILocation(line: 1401, column: 51, scope: !17903)
!17911 = !DILocation(line: 1401, column: 58, scope: !17903)
!17912 = !DILocation(line: 1402, column: 48, scope: !17903)
!17913 = !DILocation(line: 1402, column: 70, scope: !17903)
!17914 = !DILocation(line: 1402, column: 66, scope: !17903)
!17915 = !DILocation(line: 1400, column: 35, scope: !17903)
!17916 = !DILocation(line: 1400, column: 33, scope: !17903)
!17917 = !DILocation(line: 1403, column: 8, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17903, file: !3, line: 1403, column: 8)
!17919 = !DILocation(line: 1403, column: 8, scope: !17903)
!17920 = !DILocalVariable(name: "val", scope: !17921, file: !3, line: 1404, type: !153)
!17921 = distinct !DILexicalBlock(scope: !17918, file: !3, line: 1403, column: 21)
!17922 = !DILocation(line: 1404, column: 11, scope: !17921)
!17923 = !DILocation(line: 1404, column: 45, scope: !17921)
!17924 = !DILocation(line: 1404, column: 49, scope: !17921)
!17925 = !DILocation(line: 1404, column: 56, scope: !17921)
!17926 = !DILocation(line: 1404, column: 17, scope: !17921)
!17927 = !DILocation(line: 1404, column: 71, scope: !17921)
!17928 = !DILocation(line: 1404, column: 67, scope: !17921)
!17929 = !DILocation(line: 1404, column: 65, scope: !17921)
!17930 = !DILocation(line: 1405, column: 12, scope: !17921)
!17931 = !DILocation(line: 1405, column: 19, scope: !17921)
!17932 = !DILocation(line: 1405, column: 17, scope: !17921)
!17933 = !DILocation(line: 1405, column: 9, scope: !17921)
!17934 = !DILocation(line: 1406, column: 17, scope: !17921)
!17935 = !DILocation(line: 1406, column: 9, scope: !17921)
!17936 = !DILocation(line: 1406, column: 14, scope: !17921)
!17937 = !DILocation(line: 1407, column: 5, scope: !17938)
!17938 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 1407, column: 5)
!17939 = distinct !DILexicalBlock(scope: !17921, file: !3, line: 1407, column: 5)
!17940 = !DILocation(line: 1407, column: 5, scope: !17939)
!17941 = !DILocation(line: 1407, column: 5, scope: !17942)
!17942 = distinct !DILexicalBlock(scope: !17938, file: !3, line: 1407, column: 5)
!17943 = !DILocation(line: 1408, column: 4, scope: !17921)
!17944 = !DILocalVariable(name: "avg", scope: !17945, file: !3, line: 1410, type: !233)
!17945 = distinct !DILexicalBlock(scope: !17918, file: !3, line: 1409, column: 9)
!17946 = !DILocation(line: 1410, column: 11, scope: !17945)
!17947 = !DILocalVariable(name: "val", scope: !17945, file: !3, line: 1410, type: !233)
!17948 = !DILocation(line: 1410, column: 19, scope: !17945)
!17949 = !DILocation(line: 1412, column: 28, scope: !17945)
!17950 = !DILocation(line: 1412, column: 36, scope: !17945)
!17951 = !DILocation(line: 1412, column: 5, scope: !17945)
!17952 = !DILocation(line: 1413, column: 17, scope: !17945)
!17953 = !DILocation(line: 1413, column: 22, scope: !17945)
!17954 = !DILocation(line: 1413, column: 30, scope: !17945)
!17955 = !DILocation(line: 1413, column: 5, scope: !17945)
!17956 = !DILocation(line: 1414, column: 15, scope: !17945)
!17957 = !DILocation(line: 1414, column: 20, scope: !17945)
!17958 = !DILocation(line: 1414, column: 5, scope: !17945)
!17959 = !DILocation(line: 1416, column: 15, scope: !17945)
!17960 = !DILocation(line: 1416, column: 23, scope: !17945)
!17961 = !DILocation(line: 1416, column: 5, scope: !17945)
!17962 = !DILocation(line: 1418, column: 17, scope: !17945)
!17963 = !DILocation(line: 1418, column: 21, scope: !17945)
!17964 = !DILocation(line: 1418, column: 28, scope: !17945)
!17965 = !DILocation(line: 1418, column: 32, scope: !17945)
!17966 = !DILocation(line: 1418, column: 5, scope: !17945)
!17967 = !DILocation(line: 1421, column: 11, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17903, file: !3, line: 1421, column: 8)
!17969 = !DILocation(line: 1421, column: 8, scope: !17968)
!17970 = !DILocation(line: 1421, column: 8, scope: !17903)
!17971 = !DILocation(line: 1422, column: 8, scope: !17968)
!17972 = !DILocation(line: 1422, column: 15, scope: !17968)
!17973 = !DILocation(line: 1422, column: 20, scope: !17968)
!17974 = !DILocation(line: 1422, column: 5, scope: !17968)
!17975 = !DILocation(line: 1423, column: 3, scope: !17903)
!17976 = !DILocation(line: 1425, column: 2, scope: !17869)
!17977 = distinct !{!17977, !17862, !17978}
!17978 = !DILocation(line: 1425, column: 2, scope: !17863)
!17979 = !DILocation(line: 1425, column: 2, scope: !17864)
!17980 = distinct !{!17980, !17858, !17981}
!17981 = !DILocation(line: 1425, column: 2, scope: !17859)
!17982 = !DILocation(line: 1425, column: 2, scope: !17850)
!17983 = distinct !{!17983, !17844, !17984}
!17984 = !DILocation(line: 1425, column: 2, scope: !17845)
!17985 = !DILocation(line: 1426, column: 1, scope: !17815)
!17986 = distinct !DISubprogram(name: "CCG_elem_offset_mask", scope: !3217, file: !3217, line: 162, type: !17987, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!17987 = !DISubroutineType(types: !17988)
!17988 = !{!359, !10216, !5164, !57}
!17989 = !DILocalVariable(name: "key", arg: 1, scope: !17986, file: !3217, line: 162, type: !10216)
!17990 = !DILocation(line: 162, column: 54, scope: !17986)
!17991 = !DILocalVariable(name: "elem", arg: 2, scope: !17986, file: !3217, line: 162, type: !5164)
!17992 = !DILocation(line: 162, column: 68, scope: !17986)
!17993 = !DILocalVariable(name: "offset", arg: 3, scope: !17986, file: !3217, line: 162, type: !57)
!17994 = !DILocation(line: 162, column: 78, scope: !17986)
!17995 = !DILocation(line: 164, column: 23, scope: !17986)
!17996 = !DILocation(line: 164, column: 44, scope: !17986)
!17997 = !DILocation(line: 164, column: 49, scope: !17986)
!17998 = !DILocation(line: 164, column: 55, scope: !17986)
!17999 = !DILocation(line: 164, column: 28, scope: !17986)
!18000 = !DILocation(line: 164, column: 9, scope: !17986)
!18001 = !DILocation(line: 164, column: 2, scope: !17986)
!18002 = distinct !DISubprogram(name: "CCG_elem_offset_co", scope: !3217, file: !3217, line: 152, type: !17987, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18003 = !DILocalVariable(name: "key", arg: 1, scope: !18002, file: !3217, line: 152, type: !10216)
!18004 = !DILocation(line: 152, column: 52, scope: !18002)
!18005 = !DILocalVariable(name: "elem", arg: 2, scope: !18002, file: !3217, line: 152, type: !5164)
!18006 = !DILocation(line: 152, column: 66, scope: !18002)
!18007 = !DILocalVariable(name: "offset", arg: 3, scope: !18002, file: !3217, line: 152, type: !57)
!18008 = !DILocation(line: 152, column: 76, scope: !18002)
!18009 = !DILocation(line: 154, column: 21, scope: !18002)
!18010 = !DILocation(line: 154, column: 42, scope: !18002)
!18011 = !DILocation(line: 154, column: 47, scope: !18002)
!18012 = !DILocation(line: 154, column: 53, scope: !18002)
!18013 = !DILocation(line: 154, column: 26, scope: !18002)
!18014 = !DILocation(line: 154, column: 9, scope: !18002)
!18015 = !DILocation(line: 154, column: 2, scope: !18002)
!18016 = distinct !DISubprogram(name: "CCG_elem_offset_no", scope: !3217, file: !3217, line: 157, type: !17987, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18017 = !DILocalVariable(name: "key", arg: 1, scope: !18016, file: !3217, line: 157, type: !10216)
!18018 = !DILocation(line: 157, column: 52, scope: !18016)
!18019 = !DILocalVariable(name: "elem", arg: 2, scope: !18016, file: !3217, line: 157, type: !5164)
!18020 = !DILocation(line: 157, column: 66, scope: !18016)
!18021 = !DILocalVariable(name: "offset", arg: 3, scope: !18016, file: !3217, line: 157, type: !57)
!18022 = !DILocation(line: 157, column: 76, scope: !18016)
!18023 = !DILocation(line: 159, column: 21, scope: !18016)
!18024 = !DILocation(line: 159, column: 42, scope: !18016)
!18025 = !DILocation(line: 159, column: 47, scope: !18016)
!18026 = !DILocation(line: 159, column: 53, scope: !18016)
!18027 = !DILocation(line: 159, column: 26, scope: !18016)
!18028 = !DILocation(line: 159, column: 9, scope: !18016)
!18029 = !DILocation(line: 159, column: 2, scope: !18016)
!18030 = distinct !DISubprogram(name: "neighbor_average_mask", scope: !3, file: !3, line: 1255, type: !18031, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18031 = !DISubroutineType(types: !18032)
!18032 = !{!153, !5374, !132}
!18033 = !DILocalVariable(name: "ss", arg: 1, scope: !18030, file: !3, line: 1255, type: !5374)
!18034 = !DILocation(line: 1255, column: 51, scope: !18030)
!18035 = !DILocalVariable(name: "vert", arg: 2, scope: !18030, file: !3, line: 1255, type: !132)
!18036 = !DILocation(line: 1255, column: 64, scope: !18030)
!18037 = !DILocalVariable(name: "vmask", scope: !18030, file: !3, line: 1257, type: !3251)
!18038 = !DILocation(line: 1257, column: 15, scope: !18030)
!18039 = !DILocation(line: 1257, column: 23, scope: !18030)
!18040 = !DILocation(line: 1257, column: 27, scope: !18030)
!18041 = !DILocalVariable(name: "avg", scope: !18030, file: !3, line: 1258, type: !153)
!18042 = !DILocation(line: 1258, column: 8, scope: !18030)
!18043 = !DILocalVariable(name: "i", scope: !18030, file: !3, line: 1259, type: !57)
!18044 = !DILocation(line: 1259, column: 6, scope: !18030)
!18045 = !DILocalVariable(name: "total", scope: !18030, file: !3, line: 1259, type: !57)
!18046 = !DILocation(line: 1259, column: 9, scope: !18030)
!18047 = !DILocation(line: 1261, column: 9, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 1261, column: 2)
!18049 = !DILocation(line: 1261, column: 7, scope: !18048)
!18050 = !DILocation(line: 1261, column: 14, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18048, file: !3, line: 1261, column: 2)
!18052 = !DILocation(line: 1261, column: 18, scope: !18051)
!18053 = !DILocation(line: 1261, column: 22, scope: !18051)
!18054 = !DILocation(line: 1261, column: 27, scope: !18051)
!18055 = !DILocation(line: 1261, column: 33, scope: !18051)
!18056 = !DILocation(line: 1261, column: 16, scope: !18051)
!18057 = !DILocation(line: 1261, column: 2, scope: !18048)
!18058 = !DILocalVariable(name: "p", scope: !18059, file: !3, line: 1262, type: !18060)
!18059 = distinct !DILexicalBlock(scope: !18051, file: !3, line: 1261, column: 45)
!18060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18061, size: 64)
!18061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18062)
!18062 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !1468, line: 85, baseType: !2038)
!18063 = !DILocation(line: 1262, column: 16, scope: !18059)
!18064 = !DILocation(line: 1262, column: 21, scope: !18059)
!18065 = !DILocation(line: 1262, column: 25, scope: !18059)
!18066 = !DILocation(line: 1262, column: 31, scope: !18059)
!18067 = !DILocation(line: 1262, column: 35, scope: !18059)
!18068 = !DILocation(line: 1262, column: 40, scope: !18059)
!18069 = !DILocation(line: 1262, column: 46, scope: !18059)
!18070 = !DILocation(line: 1262, column: 54, scope: !18059)
!18071 = !DILocalVariable(name: "f_adj_v", scope: !18059, file: !3, line: 1263, type: !18072)
!18072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 96, elements: !234)
!18073 = !DILocation(line: 1263, column: 12, scope: !18059)
!18074 = !DILocation(line: 1265, column: 36, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18059, file: !3, line: 1265, column: 7)
!18076 = !DILocation(line: 1265, column: 45, scope: !18075)
!18077 = !DILocation(line: 1265, column: 48, scope: !18075)
!18078 = !DILocation(line: 1265, column: 52, scope: !18075)
!18079 = !DILocation(line: 1265, column: 59, scope: !18075)
!18080 = !DILocation(line: 1265, column: 7, scope: !18075)
!18081 = !DILocation(line: 1265, column: 65, scope: !18075)
!18082 = !DILocation(line: 1265, column: 7, scope: !18059)
!18083 = !DILocalVariable(name: "j", scope: !18084, file: !3, line: 1266, type: !57)
!18084 = distinct !DILexicalBlock(scope: !18075, file: !3, line: 1265, column: 72)
!18085 = !DILocation(line: 1266, column: 8, scope: !18084)
!18086 = !DILocation(line: 1268, column: 11, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18084, file: !3, line: 1268, column: 4)
!18088 = !DILocation(line: 1268, column: 9, scope: !18087)
!18089 = !DILocation(line: 1268, column: 16, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18087, file: !3, line: 1268, column: 4)
!18091 = !DILocation(line: 1268, column: 18, scope: !18090)
!18092 = !DILocation(line: 1268, column: 4, scope: !18087)
!18093 = !DILocation(line: 1269, column: 12, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18090, file: !3, line: 1268, column: 28)
!18095 = !DILocation(line: 1269, column: 26, scope: !18094)
!18096 = !DILocation(line: 1269, column: 18, scope: !18094)
!18097 = !DILocation(line: 1269, column: 9, scope: !18094)
!18098 = !DILocation(line: 1270, column: 10, scope: !18094)
!18099 = !DILocation(line: 1271, column: 4, scope: !18094)
!18100 = !DILocation(line: 1268, column: 24, scope: !18090)
!18101 = !DILocation(line: 1268, column: 4, scope: !18090)
!18102 = distinct !{!18102, !18092, !18103}
!18103 = !DILocation(line: 1271, column: 4, scope: !18087)
!18104 = !DILocation(line: 1272, column: 3, scope: !18084)
!18105 = !DILocation(line: 1273, column: 2, scope: !18059)
!18106 = !DILocation(line: 1261, column: 41, scope: !18051)
!18107 = !DILocation(line: 1261, column: 2, scope: !18051)
!18108 = distinct !{!18108, !18057, !18109}
!18109 = !DILocation(line: 1273, column: 2, scope: !18048)
!18110 = !DILocation(line: 1275, column: 6, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 1275, column: 6)
!18112 = !DILocation(line: 1275, column: 12, scope: !18111)
!18113 = !DILocation(line: 1275, column: 6, scope: !18030)
!18114 = !DILocation(line: 1276, column: 10, scope: !18111)
!18115 = !DILocation(line: 1276, column: 23, scope: !18111)
!18116 = !DILocation(line: 1276, column: 16, scope: !18111)
!18117 = !DILocation(line: 1276, column: 14, scope: !18111)
!18118 = !DILocation(line: 1276, column: 3, scope: !18111)
!18119 = !DILocation(line: 1278, column: 10, scope: !18111)
!18120 = !DILocation(line: 1278, column: 16, scope: !18111)
!18121 = !DILocation(line: 1278, column: 3, scope: !18111)
!18122 = !DILocation(line: 1279, column: 1, scope: !18030)
!18123 = distinct !DISubprogram(name: "neighbor_average", scope: !3, file: !3, line: 1213, type: !18124, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18124 = !DISubroutineType(types: !18125)
!18125 = !{null, !5374, !359, !132}
!18126 = !DILocalVariable(name: "ss", arg: 1, scope: !18123, file: !3, line: 1213, type: !5374)
!18127 = !DILocation(line: 1213, column: 45, scope: !18123)
!18128 = !DILocalVariable(name: "avg", arg: 2, scope: !18123, file: !3, line: 1213, type: !359)
!18129 = !DILocation(line: 1213, column: 55, scope: !18123)
!18130 = !DILocalVariable(name: "vert", arg: 3, scope: !18123, file: !3, line: 1213, type: !132)
!18131 = !DILocation(line: 1213, column: 72, scope: !18123)
!18132 = !DILocalVariable(name: "vert_map", scope: !18123, file: !3, line: 1215, type: !18133)
!18133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18134, size: 64)
!18134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18135)
!18135 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !2080, line: 99, baseType: !2079)
!18136 = !DILocation(line: 1215, column: 21, scope: !18123)
!18137 = !DILocation(line: 1215, column: 33, scope: !18123)
!18138 = !DILocation(line: 1215, column: 37, scope: !18123)
!18139 = !DILocation(line: 1215, column: 42, scope: !18123)
!18140 = !DILocalVariable(name: "mvert", scope: !18123, file: !3, line: 1216, type: !18141)
!18141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18142, size: 64)
!18142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5137)
!18143 = !DILocation(line: 1216, column: 15, scope: !18123)
!18144 = !DILocation(line: 1216, column: 23, scope: !18123)
!18145 = !DILocation(line: 1216, column: 27, scope: !18123)
!18146 = !DILocalVariable(name: "deform_co", scope: !18123, file: !3, line: 1217, type: !2054)
!18147 = !DILocation(line: 1217, column: 10, scope: !18123)
!18148 = !DILocation(line: 1217, column: 26, scope: !18123)
!18149 = !DILocation(line: 1217, column: 30, scope: !18123)
!18150 = !DILocation(line: 1219, column: 10, scope: !18123)
!18151 = !DILocation(line: 1219, column: 2, scope: !18123)
!18152 = !DILocation(line: 1222, column: 6, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18123, file: !3, line: 1222, column: 6)
!18154 = !DILocation(line: 1222, column: 16, scope: !18153)
!18155 = !DILocation(line: 1222, column: 22, scope: !18153)
!18156 = !DILocation(line: 1222, column: 6, scope: !18123)
!18157 = !DILocalVariable(name: "i", scope: !18158, file: !3, line: 1223, type: !57)
!18158 = distinct !DILexicalBlock(scope: !18153, file: !3, line: 1222, column: 27)
!18159 = !DILocation(line: 1223, column: 7, scope: !18158)
!18160 = !DILocalVariable(name: "total", scope: !18158, file: !3, line: 1223, type: !57)
!18161 = !DILocation(line: 1223, column: 10, scope: !18158)
!18162 = !DILocation(line: 1225, column: 10, scope: !18163)
!18163 = distinct !DILexicalBlock(scope: !18158, file: !3, line: 1225, column: 3)
!18164 = !DILocation(line: 1225, column: 8, scope: !18163)
!18165 = !DILocation(line: 1225, column: 15, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18163, file: !3, line: 1225, column: 3)
!18167 = !DILocation(line: 1225, column: 19, scope: !18166)
!18168 = !DILocation(line: 1225, column: 29, scope: !18166)
!18169 = !DILocation(line: 1225, column: 17, scope: !18166)
!18170 = !DILocation(line: 1225, column: 3, scope: !18163)
!18171 = !DILocalVariable(name: "p", scope: !18172, file: !3, line: 1226, type: !18060)
!18172 = distinct !DILexicalBlock(scope: !18166, file: !3, line: 1225, column: 41)
!18173 = !DILocation(line: 1226, column: 17, scope: !18172)
!18174 = !DILocation(line: 1226, column: 22, scope: !18172)
!18175 = !DILocation(line: 1226, column: 26, scope: !18172)
!18176 = !DILocation(line: 1226, column: 32, scope: !18172)
!18177 = !DILocation(line: 1226, column: 42, scope: !18172)
!18178 = !DILocation(line: 1226, column: 50, scope: !18172)
!18179 = !DILocalVariable(name: "f_adj_v", scope: !18172, file: !3, line: 1227, type: !18072)
!18180 = !DILocation(line: 1227, column: 13, scope: !18172)
!18181 = !DILocation(line: 1229, column: 37, scope: !18182)
!18182 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 1229, column: 8)
!18183 = !DILocation(line: 1229, column: 46, scope: !18182)
!18184 = !DILocation(line: 1229, column: 49, scope: !18182)
!18185 = !DILocation(line: 1229, column: 53, scope: !18182)
!18186 = !DILocation(line: 1229, column: 60, scope: !18182)
!18187 = !DILocation(line: 1229, column: 8, scope: !18182)
!18188 = !DILocation(line: 1229, column: 66, scope: !18182)
!18189 = !DILocation(line: 1229, column: 8, scope: !18172)
!18190 = !DILocalVariable(name: "j", scope: !18191, file: !3, line: 1230, type: !57)
!18191 = distinct !DILexicalBlock(scope: !18182, file: !3, line: 1229, column: 73)
!18192 = !DILocation(line: 1230, column: 9, scope: !18191)
!18193 = !DILocation(line: 1232, column: 12, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18191, file: !3, line: 1232, column: 5)
!18195 = !DILocation(line: 1232, column: 10, scope: !18194)
!18196 = !DILocation(line: 1232, column: 17, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18194, file: !3, line: 1232, column: 5)
!18198 = !DILocation(line: 1232, column: 19, scope: !18197)
!18199 = !DILocation(line: 1232, column: 5, scope: !18194)
!18200 = !DILocation(line: 1233, column: 10, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18202, file: !3, line: 1233, column: 10)
!18202 = distinct !DILexicalBlock(scope: !18197, file: !3, line: 1232, column: 29)
!18203 = !DILocation(line: 1233, column: 20, scope: !18201)
!18204 = !DILocation(line: 1233, column: 26, scope: !18201)
!18205 = !DILocation(line: 1233, column: 31, scope: !18201)
!18206 = !DILocation(line: 1233, column: 34, scope: !18201)
!18207 = !DILocation(line: 1233, column: 38, scope: !18201)
!18208 = !DILocation(line: 1233, column: 51, scope: !18201)
!18209 = !DILocation(line: 1233, column: 43, scope: !18201)
!18210 = !DILocation(line: 1233, column: 55, scope: !18201)
!18211 = !DILocation(line: 1233, column: 61, scope: !18201)
!18212 = !DILocation(line: 1233, column: 10, scope: !18202)
!18213 = !DILocation(line: 1234, column: 17, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18201, file: !3, line: 1233, column: 67)
!18215 = !DILocation(line: 1234, column: 22, scope: !18214)
!18216 = !DILocation(line: 1234, column: 34, scope: !18214)
!18217 = !DILocation(line: 1234, column: 52, scope: !18214)
!18218 = !DILocation(line: 1234, column: 44, scope: !18214)
!18219 = !DILocation(line: 1235, column: 17, scope: !18214)
!18220 = !DILocation(line: 1235, column: 31, scope: !18214)
!18221 = !DILocation(line: 1235, column: 23, scope: !18214)
!18222 = !DILocation(line: 1235, column: 35, scope: !18214)
!18223 = !DILocation(line: 1234, column: 7, scope: !18214)
!18224 = !DILocation(line: 1237, column: 12, scope: !18214)
!18225 = !DILocation(line: 1238, column: 6, scope: !18214)
!18226 = !DILocation(line: 1239, column: 5, scope: !18202)
!18227 = !DILocation(line: 1232, column: 25, scope: !18197)
!18228 = !DILocation(line: 1232, column: 5, scope: !18197)
!18229 = distinct !{!18229, !18199, !18230}
!18230 = !DILocation(line: 1239, column: 5, scope: !18194)
!18231 = !DILocation(line: 1240, column: 4, scope: !18191)
!18232 = !DILocation(line: 1241, column: 3, scope: !18172)
!18233 = !DILocation(line: 1225, column: 37, scope: !18166)
!18234 = !DILocation(line: 1225, column: 3, scope: !18166)
!18235 = distinct !{!18235, !18170, !18236}
!18236 = !DILocation(line: 1241, column: 3, scope: !18163)
!18237 = !DILocation(line: 1243, column: 7, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18158, file: !3, line: 1243, column: 7)
!18239 = !DILocation(line: 1243, column: 13, scope: !18238)
!18240 = !DILocation(line: 1243, column: 7, scope: !18158)
!18241 = !DILocation(line: 1244, column: 14, scope: !18242)
!18242 = distinct !DILexicalBlock(scope: !18238, file: !3, line: 1243, column: 18)
!18243 = !DILocation(line: 1244, column: 26, scope: !18242)
!18244 = !DILocation(line: 1244, column: 24, scope: !18242)
!18245 = !DILocation(line: 1244, column: 4, scope: !18242)
!18246 = !DILocation(line: 1245, column: 4, scope: !18242)
!18247 = !DILocation(line: 1247, column: 2, scope: !18158)
!18248 = !DILocation(line: 1249, column: 13, scope: !18123)
!18249 = !DILocation(line: 1249, column: 18, scope: !18123)
!18250 = !DILocation(line: 1249, column: 30, scope: !18123)
!18251 = !DILocation(line: 1249, column: 40, scope: !18123)
!18252 = !DILocation(line: 1249, column: 48, scope: !18123)
!18253 = !DILocation(line: 1249, column: 54, scope: !18123)
!18254 = !DILocation(line: 1249, column: 60, scope: !18123)
!18255 = !DILocation(line: 1249, column: 2, scope: !18123)
!18256 = !DILocation(line: 1250, column: 1, scope: !18123)
!18257 = distinct !DISubprogram(name: "bmesh_neighbor_average_mask", scope: !3, file: !3, line: 1315, type: !18258, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18258 = !DISubroutineType(types: !18259)
!18259 = !{!153, !2252, !2108}
!18260 = !DILocalVariable(name: "bm", arg: 1, scope: !18257, file: !3, line: 1315, type: !2252)
!18261 = !DILocation(line: 1315, column: 49, scope: !18257)
!18262 = !DILocalVariable(name: "v", arg: 2, scope: !18257, file: !3, line: 1315, type: !2108)
!18263 = !DILocation(line: 1315, column: 61, scope: !18257)
!18264 = !DILocalVariable(name: "liter", scope: !18257, file: !3, line: 1317, type: !18265)
!18265 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !4053, line: 186, baseType: !18266)
!18266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !4053, line: 164, size: 512, elements: !18267)
!18267 = !{!18268, !18348, !18349, !18350, !18351}
!18268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !18266, file: !4053, line: 179, baseType: !18269, size: 320)
!18269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18266, file: !4053, line: 166, size: 320, elements: !18270)
!18270 = !{!18271, !18286, !18292, !18300, !18308, !18314, !18320, !18326, !18330, !18336, !18342}
!18271 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !18269, file: !4053, line: 167, baseType: !18272, size: 192)
!18272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !4053, line: 113, size: 192, elements: !18273)
!18273 = !{!18274}
!18274 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !18272, file: !4053, line: 114, baseType: !18275, size: 192)
!18275 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !18276, line: 80, baseType: !18277)
!18276 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !18276, line: 76, size: 192, elements: !18278)
!18278 = !{!18279, !18282, !18285}
!18279 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !18277, file: !18276, line: 77, baseType: !18280, size: 64)
!18280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18281, size: 64)
!18281 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !18276, line: 47, baseType: !2101)
!18282 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !18277, file: !18276, line: 78, baseType: !18283, size: 64, offset: 64)
!18283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18284, size: 64)
!18284 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !18276, line: 45, flags: DIFlagFwdDecl)
!18285 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !18277, file: !18276, line: 79, baseType: !132, size: 32, offset: 128)
!18286 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !18269, file: !4053, line: 169, baseType: !18287, size: 192)
!18287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !4053, line: 116, size: 192, elements: !18288)
!18288 = !{!18289, !18290, !18291}
!18289 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !18287, file: !4053, line: 117, baseType: !2108, size: 64)
!18290 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !18287, file: !4053, line: 118, baseType: !2169, size: 64, offset: 64)
!18291 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !18287, file: !4053, line: 118, baseType: !2169, size: 64, offset: 128)
!18292 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !18269, file: !4053, line: 170, baseType: !18293, size: 320)
!18293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !4053, line: 120, size: 320, elements: !18294)
!18294 = !{!18295, !18296, !18297, !18298, !18299}
!18295 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !18293, file: !4053, line: 121, baseType: !2108, size: 64)
!18296 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18293, file: !4053, line: 122, baseType: !2151, size: 64, offset: 64)
!18297 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18293, file: !4053, line: 122, baseType: !2151, size: 64, offset: 128)
!18298 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !18293, file: !4053, line: 123, baseType: !2169, size: 64, offset: 192)
!18299 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !18293, file: !4053, line: 123, baseType: !2169, size: 64, offset: 256)
!18300 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !18269, file: !4053, line: 171, baseType: !18301, size: 320)
!18301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !4053, line: 125, size: 320, elements: !18302)
!18302 = !{!18303, !18304, !18305, !18306, !18307}
!18303 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !18301, file: !4053, line: 126, baseType: !2108, size: 64)
!18304 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18301, file: !4053, line: 127, baseType: !2151, size: 64, offset: 64)
!18305 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18301, file: !4053, line: 127, baseType: !2151, size: 64, offset: 128)
!18306 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !18301, file: !4053, line: 128, baseType: !2169, size: 64, offset: 192)
!18307 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !18301, file: !4053, line: 128, baseType: !2169, size: 64, offset: 256)
!18308 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !18269, file: !4053, line: 172, baseType: !18309, size: 192)
!18309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !4053, line: 130, size: 192, elements: !18310)
!18310 = !{!18311, !18312, !18313}
!18311 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !18309, file: !4053, line: 131, baseType: !2169, size: 64)
!18312 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18309, file: !4053, line: 132, baseType: !2151, size: 64, offset: 64)
!18313 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18309, file: !4053, line: 132, baseType: !2151, size: 64, offset: 128)
!18314 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !18269, file: !4053, line: 173, baseType: !18315, size: 192)
!18315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !4053, line: 134, size: 192, elements: !18316)
!18316 = !{!18317, !18318, !18319}
!18317 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !18315, file: !4053, line: 135, baseType: !2151, size: 64)
!18318 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18315, file: !4053, line: 136, baseType: !2151, size: 64, offset: 64)
!18319 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18315, file: !4053, line: 136, baseType: !2151, size: 64, offset: 128)
!18320 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !18269, file: !4053, line: 174, baseType: !18321, size: 192)
!18321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !4053, line: 138, size: 192, elements: !18322)
!18322 = !{!18323, !18324, !18325}
!18323 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !18321, file: !4053, line: 139, baseType: !2169, size: 64)
!18324 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18321, file: !4053, line: 140, baseType: !2151, size: 64, offset: 64)
!18325 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18321, file: !4053, line: 140, baseType: !2151, size: 64, offset: 128)
!18326 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !18269, file: !4053, line: 175, baseType: !18327, size: 64)
!18327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !4053, line: 142, size: 64, elements: !18328)
!18328 = !{!18329}
!18329 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !18327, file: !4053, line: 143, baseType: !2169, size: 64)
!18330 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !18269, file: !4053, line: 176, baseType: !18331, size: 192)
!18331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !4053, line: 145, size: 192, elements: !18332)
!18332 = !{!18333, !18334, !18335}
!18333 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !18331, file: !4053, line: 146, baseType: !2173, size: 64)
!18334 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18331, file: !4053, line: 147, baseType: !2151, size: 64, offset: 64)
!18335 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18331, file: !4053, line: 147, baseType: !2151, size: 64, offset: 128)
!18336 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !18269, file: !4053, line: 177, baseType: !18337, size: 192)
!18337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !4053, line: 149, size: 192, elements: !18338)
!18338 = !{!18339, !18340, !18341}
!18339 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !18337, file: !4053, line: 150, baseType: !2173, size: 64)
!18340 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18337, file: !4053, line: 151, baseType: !2151, size: 64, offset: 64)
!18341 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18337, file: !4053, line: 151, baseType: !2151, size: 64, offset: 128)
!18342 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !18269, file: !4053, line: 178, baseType: !18343, size: 192)
!18343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !4053, line: 153, size: 192, elements: !18344)
!18344 = !{!18345, !18346, !18347}
!18345 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !18343, file: !4053, line: 154, baseType: !2173, size: 64)
!18346 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !18343, file: !4053, line: 155, baseType: !2151, size: 64, offset: 64)
!18347 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !18343, file: !4053, line: 155, baseType: !2151, size: 64, offset: 128)
!18348 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !18266, file: !4053, line: 181, baseType: !5183, size: 64, offset: 320)
!18349 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !18266, file: !4053, line: 182, baseType: !5184, size: 64, offset: 384)
!18350 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !18266, file: !4053, line: 184, baseType: !57, size: 32, offset: 448)
!18351 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !18266, file: !4053, line: 185, baseType: !42, size: 8, offset: 480)
!18352 = !DILocation(line: 1317, column: 9, scope: !18257)
!18353 = !DILocalVariable(name: "l", scope: !18257, file: !3, line: 1318, type: !2151)
!18354 = !DILocation(line: 1318, column: 10, scope: !18257)
!18355 = !DILocalVariable(name: "avg", scope: !18257, file: !3, line: 1319, type: !153)
!18356 = !DILocation(line: 1319, column: 8, scope: !18257)
!18357 = !DILocalVariable(name: "i", scope: !18257, file: !3, line: 1320, type: !57)
!18358 = !DILocation(line: 1320, column: 6, scope: !18257)
!18359 = !DILocalVariable(name: "total", scope: !18257, file: !3, line: 1320, type: !57)
!18360 = !DILocation(line: 1320, column: 9, scope: !18257)
!18361 = !DILocation(line: 1322, column: 2, scope: !18362)
!18362 = distinct !DILexicalBlock(scope: !18257, file: !3, line: 1322, column: 2)
!18363 = !DILocation(line: 1322, column: 2, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18362, file: !3, line: 1322, column: 2)
!18365 = !DILocalVariable(name: "adj_v", scope: !18366, file: !3, line: 1323, type: !18367)
!18366 = distinct !DILexicalBlock(scope: !18364, file: !3, line: 1322, column: 48)
!18367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 192, elements: !234)
!18368 = !DILocation(line: 1323, column: 11, scope: !18366)
!18369 = !DILocation(line: 1323, column: 22, scope: !18366)
!18370 = !DILocation(line: 1323, column: 23, scope: !18366)
!18371 = !DILocation(line: 1323, column: 26, scope: !18366)
!18372 = !DILocation(line: 1323, column: 32, scope: !18366)
!18373 = !DILocation(line: 1323, column: 35, scope: !18366)
!18374 = !DILocation(line: 1323, column: 38, scope: !18366)
!18375 = !DILocation(line: 1323, column: 41, scope: !18366)
!18376 = !DILocation(line: 1323, column: 47, scope: !18366)
!18377 = !DILocation(line: 1325, column: 10, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18366, file: !3, line: 1325, column: 3)
!18379 = !DILocation(line: 1325, column: 8, scope: !18378)
!18380 = !DILocation(line: 1325, column: 15, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18378, file: !3, line: 1325, column: 3)
!18382 = !DILocation(line: 1325, column: 17, scope: !18381)
!18383 = !DILocation(line: 1325, column: 3, scope: !18378)
!18384 = !DILocalVariable(name: "v2", scope: !18385, file: !3, line: 1326, type: !2108)
!18385 = distinct !DILexicalBlock(scope: !18381, file: !3, line: 1325, column: 27)
!18386 = !DILocation(line: 1326, column: 12, scope: !18385)
!18387 = !DILocation(line: 1326, column: 23, scope: !18385)
!18388 = !DILocation(line: 1326, column: 17, scope: !18385)
!18389 = !DILocalVariable(name: "vmask", scope: !18385, file: !3, line: 1327, type: !359)
!18390 = !DILocation(line: 1327, column: 11, scope: !18385)
!18391 = !DILocation(line: 1327, column: 41, scope: !18385)
!18392 = !DILocation(line: 1327, column: 45, scope: !18385)
!18393 = !DILocation(line: 1328, column: 40, scope: !18385)
!18394 = !DILocation(line: 1328, column: 44, scope: !18385)
!18395 = !DILocation(line: 1328, column: 49, scope: !18385)
!18396 = !DILocation(line: 1327, column: 19, scope: !18385)
!18397 = !DILocation(line: 1330, column: 13, scope: !18385)
!18398 = !DILocation(line: 1330, column: 12, scope: !18385)
!18399 = !DILocation(line: 1330, column: 8, scope: !18385)
!18400 = !DILocation(line: 1331, column: 9, scope: !18385)
!18401 = !DILocation(line: 1332, column: 3, scope: !18385)
!18402 = !DILocation(line: 1325, column: 23, scope: !18381)
!18403 = !DILocation(line: 1325, column: 3, scope: !18381)
!18404 = distinct !{!18404, !18383, !18405}
!18405 = !DILocation(line: 1332, column: 3, scope: !18378)
!18406 = !DILocation(line: 1333, column: 2, scope: !18366)
!18407 = distinct !{!18407, !18361, !18408}
!18408 = !DILocation(line: 1333, column: 2, scope: !18362)
!18409 = !DILocation(line: 1335, column: 6, scope: !18410)
!18410 = distinct !DILexicalBlock(scope: !18257, file: !3, line: 1335, column: 6)
!18411 = !DILocation(line: 1335, column: 12, scope: !18410)
!18412 = !DILocation(line: 1335, column: 6, scope: !18257)
!18413 = !DILocation(line: 1336, column: 10, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18410, file: !3, line: 1335, column: 17)
!18415 = !DILocation(line: 1336, column: 23, scope: !18414)
!18416 = !DILocation(line: 1336, column: 16, scope: !18414)
!18417 = !DILocation(line: 1336, column: 14, scope: !18414)
!18418 = !DILocation(line: 1336, column: 3, scope: !18414)
!18419 = !DILocalVariable(name: "vmask", scope: !18420, file: !3, line: 1339, type: !359)
!18420 = distinct !DILexicalBlock(scope: !18410, file: !3, line: 1338, column: 7)
!18421 = !DILocation(line: 1339, column: 10, scope: !18420)
!18422 = !DILocation(line: 1339, column: 40, scope: !18420)
!18423 = !DILocation(line: 1339, column: 44, scope: !18420)
!18424 = !DILocation(line: 1340, column: 36, scope: !18420)
!18425 = !DILocation(line: 1340, column: 39, scope: !18420)
!18426 = !DILocation(line: 1340, column: 44, scope: !18420)
!18427 = !DILocation(line: 1339, column: 18, scope: !18420)
!18428 = !DILocation(line: 1342, column: 12, scope: !18420)
!18429 = !DILocation(line: 1342, column: 11, scope: !18420)
!18430 = !DILocation(line: 1342, column: 3, scope: !18420)
!18431 = !DILocation(line: 1344, column: 1, scope: !18257)
!18432 = distinct !DISubprogram(name: "bmesh_neighbor_average", scope: !3, file: !3, line: 1282, type: !18433, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18433 = !DISubroutineType(types: !18434)
!18434 = !{null, !359, !2108}
!18435 = !DILocalVariable(name: "avg", arg: 1, scope: !18432, file: !3, line: 1282, type: !359)
!18436 = !DILocation(line: 1282, column: 42, scope: !18432)
!18437 = !DILocalVariable(name: "v", arg: 2, scope: !18432, file: !3, line: 1282, type: !2108)
!18438 = !DILocation(line: 1282, column: 58, scope: !18432)
!18439 = !DILocalVariable(name: "vfcount", scope: !18432, file: !3, line: 1284, type: !5191)
!18440 = !DILocation(line: 1284, column: 12, scope: !18432)
!18441 = !DILocation(line: 1284, column: 41, scope: !18432)
!18442 = !DILocation(line: 1284, column: 22, scope: !18432)
!18443 = !DILocation(line: 1286, column: 10, scope: !18432)
!18444 = !DILocation(line: 1286, column: 2, scope: !18432)
!18445 = !DILocation(line: 1289, column: 6, scope: !18446)
!18446 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 1289, column: 6)
!18447 = !DILocation(line: 1289, column: 14, scope: !18446)
!18448 = !DILocation(line: 1289, column: 6, scope: !18432)
!18449 = !DILocalVariable(name: "liter", scope: !18450, file: !3, line: 1290, type: !18265)
!18450 = distinct !DILexicalBlock(scope: !18446, file: !3, line: 1289, column: 19)
!18451 = !DILocation(line: 1290, column: 10, scope: !18450)
!18452 = !DILocalVariable(name: "l", scope: !18450, file: !3, line: 1291, type: !2151)
!18453 = !DILocation(line: 1291, column: 11, scope: !18450)
!18454 = !DILocalVariable(name: "i", scope: !18450, file: !3, line: 1292, type: !57)
!18455 = !DILocation(line: 1292, column: 7, scope: !18450)
!18456 = !DILocalVariable(name: "total", scope: !18450, file: !3, line: 1292, type: !57)
!18457 = !DILocation(line: 1292, column: 10, scope: !18450)
!18458 = !DILocation(line: 1294, column: 3, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18450, file: !3, line: 1294, column: 3)
!18460 = !DILocation(line: 1294, column: 3, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18459, file: !3, line: 1294, column: 3)
!18462 = !DILocalVariable(name: "adj_v", scope: !18463, file: !3, line: 1295, type: !18367)
!18463 = distinct !DILexicalBlock(scope: !18461, file: !3, line: 1294, column: 49)
!18464 = !DILocation(line: 1295, column: 12, scope: !18463)
!18465 = !DILocation(line: 1295, column: 23, scope: !18463)
!18466 = !DILocation(line: 1295, column: 24, scope: !18463)
!18467 = !DILocation(line: 1295, column: 27, scope: !18463)
!18468 = !DILocation(line: 1295, column: 33, scope: !18463)
!18469 = !DILocation(line: 1295, column: 36, scope: !18463)
!18470 = !DILocation(line: 1295, column: 39, scope: !18463)
!18471 = !DILocation(line: 1295, column: 42, scope: !18463)
!18472 = !DILocation(line: 1295, column: 48, scope: !18463)
!18473 = !DILocation(line: 1297, column: 11, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18463, file: !3, line: 1297, column: 4)
!18475 = !DILocation(line: 1297, column: 9, scope: !18474)
!18476 = !DILocation(line: 1297, column: 16, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18474, file: !3, line: 1297, column: 4)
!18478 = !DILocation(line: 1297, column: 18, scope: !18477)
!18479 = !DILocation(line: 1297, column: 4, scope: !18474)
!18480 = !DILocation(line: 1298, column: 9, scope: !18481)
!18481 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 1298, column: 9)
!18482 = distinct !DILexicalBlock(scope: !18477, file: !3, line: 1297, column: 28)
!18483 = !DILocation(line: 1298, column: 17, scope: !18481)
!18484 = !DILocation(line: 1298, column: 22, scope: !18481)
!18485 = !DILocation(line: 1298, column: 50, scope: !18481)
!18486 = !DILocation(line: 1298, column: 44, scope: !18481)
!18487 = !DILocation(line: 1298, column: 25, scope: !18481)
!18488 = !DILocation(line: 1298, column: 54, scope: !18481)
!18489 = !DILocation(line: 1298, column: 9, scope: !18482)
!18490 = !DILocation(line: 1299, column: 16, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 1298, column: 60)
!18492 = !DILocation(line: 1299, column: 27, scope: !18491)
!18493 = !DILocation(line: 1299, column: 21, scope: !18491)
!18494 = !DILocation(line: 1299, column: 31, scope: !18491)
!18495 = !DILocation(line: 1299, column: 6, scope: !18491)
!18496 = !DILocation(line: 1300, column: 11, scope: !18491)
!18497 = !DILocation(line: 1301, column: 5, scope: !18491)
!18498 = !DILocation(line: 1302, column: 4, scope: !18482)
!18499 = !DILocation(line: 1297, column: 24, scope: !18477)
!18500 = !DILocation(line: 1297, column: 4, scope: !18477)
!18501 = distinct !{!18501, !18479, !18502}
!18502 = !DILocation(line: 1302, column: 4, scope: !18474)
!18503 = !DILocation(line: 1303, column: 3, scope: !18463)
!18504 = distinct !{!18504, !18458, !18505}
!18505 = !DILocation(line: 1303, column: 3, scope: !18459)
!18506 = !DILocation(line: 1305, column: 7, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18450, file: !3, line: 1305, column: 7)
!18508 = !DILocation(line: 1305, column: 13, scope: !18507)
!18509 = !DILocation(line: 1305, column: 7, scope: !18450)
!18510 = !DILocation(line: 1306, column: 14, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18507, file: !3, line: 1305, column: 18)
!18512 = !DILocation(line: 1306, column: 26, scope: !18511)
!18513 = !DILocation(line: 1306, column: 24, scope: !18511)
!18514 = !DILocation(line: 1306, column: 4, scope: !18511)
!18515 = !DILocation(line: 1307, column: 4, scope: !18511)
!18516 = !DILocation(line: 1309, column: 2, scope: !18450)
!18517 = !DILocation(line: 1311, column: 13, scope: !18432)
!18518 = !DILocation(line: 1311, column: 18, scope: !18432)
!18519 = !DILocation(line: 1311, column: 21, scope: !18432)
!18520 = !DILocation(line: 1311, column: 2, scope: !18432)
!18521 = !DILocation(line: 1312, column: 1, scope: !18432)
!18522 = distinct !DISubprogram(name: "BM_iter_new", scope: !18523, file: !18523, line: 172, type: !18524, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18523 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18524 = !DISubroutineType(types: !18525)
!18525 = !{!26, !18526, !2252, !487, !26}
!18526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18265, size: 64)
!18527 = !DILocalVariable(name: "iter", arg: 1, scope: !18522, file: !18523, line: 172, type: !18526)
!18528 = !DILocation(line: 172, column: 38, scope: !18522)
!18529 = !DILocalVariable(name: "bm", arg: 2, scope: !18522, file: !18523, line: 172, type: !2252)
!18530 = !DILocation(line: 172, column: 51, scope: !18522)
!18531 = !DILocalVariable(name: "itype", arg: 3, scope: !18522, file: !18523, line: 172, type: !487)
!18532 = !DILocation(line: 172, column: 66, scope: !18522)
!18533 = !DILocalVariable(name: "data", arg: 4, scope: !18522, file: !18523, line: 172, type: !26)
!18534 = !DILocation(line: 172, column: 79, scope: !18522)
!18535 = !DILocation(line: 174, column: 6, scope: !18536)
!18536 = distinct !DILexicalBlock(scope: !18522, file: !18523, line: 174, column: 6)
!18537 = !DILocation(line: 174, column: 6, scope: !18522)
!18538 = !DILocation(line: 175, column: 23, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !18536, file: !18523, line: 174, column: 51)
!18540 = !DILocation(line: 175, column: 10, scope: !18539)
!18541 = !DILocation(line: 175, column: 3, scope: !18539)
!18542 = !DILocation(line: 178, column: 3, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18536, file: !18523, line: 177, column: 7)
!18544 = !DILocation(line: 180, column: 1, scope: !18522)
!18545 = distinct !DISubprogram(name: "BM_iter_step", scope: !18523, file: !18523, line: 40, type: !18546, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18546 = !DISubroutineType(types: !18547)
!18547 = !{!26, !18526}
!18548 = !DILocalVariable(name: "iter", arg: 1, scope: !18545, file: !18523, line: 40, type: !18526)
!18549 = !DILocation(line: 40, column: 39, scope: !18545)
!18550 = !DILocation(line: 42, column: 9, scope: !18545)
!18551 = !DILocation(line: 42, column: 15, scope: !18545)
!18552 = !DILocation(line: 42, column: 20, scope: !18545)
!18553 = !DILocation(line: 42, column: 2, scope: !18545)
!18554 = distinct !DISubprogram(name: "BM_iter_init", scope: !18523, file: !18523, line: 53, type: !18555, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18555 = !DISubroutineType(types: !18556)
!18556 = !{!2315, !18526, !2252, !487, !26}
!18557 = !DILocalVariable(name: "iter", arg: 1, scope: !18554, file: !18523, line: 53, type: !18526)
!18558 = !DILocation(line: 53, column: 38, scope: !18554)
!18559 = !DILocalVariable(name: "bm", arg: 2, scope: !18554, file: !18523, line: 53, type: !2252)
!18560 = !DILocation(line: 53, column: 51, scope: !18554)
!18561 = !DILocalVariable(name: "itype", arg: 3, scope: !18554, file: !18523, line: 53, type: !487)
!18562 = !DILocation(line: 53, column: 66, scope: !18554)
!18563 = !DILocalVariable(name: "data", arg: 4, scope: !18554, file: !18523, line: 53, type: !26)
!18564 = !DILocation(line: 53, column: 79, scope: !18554)
!18565 = !DILocation(line: 56, column: 16, scope: !18554)
!18566 = !DILocation(line: 56, column: 2, scope: !18554)
!18567 = !DILocation(line: 56, column: 8, scope: !18554)
!18568 = !DILocation(line: 56, column: 14, scope: !18554)
!18569 = !DILocation(line: 59, column: 22, scope: !18554)
!18570 = !DILocation(line: 59, column: 10, scope: !18554)
!18571 = !DILocation(line: 59, column: 2, scope: !18554)
!18572 = !DILocation(line: 63, column: 4, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18554, file: !18523, line: 59, column: 29)
!18574 = !DILocation(line: 63, column: 10, scope: !18573)
!18575 = !DILocation(line: 63, column: 16, scope: !18573)
!18576 = !DILocation(line: 64, column: 4, scope: !18573)
!18577 = !DILocation(line: 64, column: 10, scope: !18573)
!18578 = !DILocation(line: 64, column: 16, scope: !18573)
!18579 = !DILocation(line: 65, column: 44, scope: !18573)
!18580 = !DILocation(line: 65, column: 48, scope: !18573)
!18581 = !DILocation(line: 65, column: 4, scope: !18573)
!18582 = !DILocation(line: 65, column: 10, scope: !18573)
!18583 = !DILocation(line: 65, column: 15, scope: !18573)
!18584 = !DILocation(line: 65, column: 28, scope: !18573)
!18585 = !DILocation(line: 65, column: 37, scope: !18573)
!18586 = !DILocation(line: 65, column: 42, scope: !18573)
!18587 = !DILocation(line: 66, column: 4, scope: !18573)
!18588 = !DILocation(line: 70, column: 4, scope: !18573)
!18589 = !DILocation(line: 70, column: 10, scope: !18573)
!18590 = !DILocation(line: 70, column: 16, scope: !18573)
!18591 = !DILocation(line: 71, column: 4, scope: !18573)
!18592 = !DILocation(line: 71, column: 10, scope: !18573)
!18593 = !DILocation(line: 71, column: 16, scope: !18573)
!18594 = !DILocation(line: 72, column: 44, scope: !18573)
!18595 = !DILocation(line: 72, column: 48, scope: !18573)
!18596 = !DILocation(line: 72, column: 4, scope: !18573)
!18597 = !DILocation(line: 72, column: 10, scope: !18573)
!18598 = !DILocation(line: 72, column: 15, scope: !18573)
!18599 = !DILocation(line: 72, column: 28, scope: !18573)
!18600 = !DILocation(line: 72, column: 37, scope: !18573)
!18601 = !DILocation(line: 72, column: 42, scope: !18573)
!18602 = !DILocation(line: 73, column: 4, scope: !18573)
!18603 = !DILocation(line: 77, column: 4, scope: !18573)
!18604 = !DILocation(line: 77, column: 10, scope: !18573)
!18605 = !DILocation(line: 77, column: 16, scope: !18573)
!18606 = !DILocation(line: 78, column: 4, scope: !18573)
!18607 = !DILocation(line: 78, column: 10, scope: !18573)
!18608 = !DILocation(line: 78, column: 16, scope: !18573)
!18609 = !DILocation(line: 79, column: 44, scope: !18573)
!18610 = !DILocation(line: 79, column: 48, scope: !18573)
!18611 = !DILocation(line: 79, column: 4, scope: !18573)
!18612 = !DILocation(line: 79, column: 10, scope: !18573)
!18613 = !DILocation(line: 79, column: 15, scope: !18573)
!18614 = !DILocation(line: 79, column: 28, scope: !18573)
!18615 = !DILocation(line: 79, column: 37, scope: !18573)
!18616 = !DILocation(line: 79, column: 42, scope: !18573)
!18617 = !DILocation(line: 80, column: 4, scope: !18573)
!18618 = !DILocation(line: 84, column: 4, scope: !18573)
!18619 = !DILocation(line: 84, column: 10, scope: !18573)
!18620 = !DILocation(line: 84, column: 16, scope: !18573)
!18621 = !DILocation(line: 85, column: 4, scope: !18573)
!18622 = !DILocation(line: 85, column: 10, scope: !18573)
!18623 = !DILocation(line: 85, column: 16, scope: !18573)
!18624 = !DILocation(line: 86, column: 46, scope: !18573)
!18625 = !DILocation(line: 86, column: 36, scope: !18573)
!18626 = !DILocation(line: 86, column: 4, scope: !18573)
!18627 = !DILocation(line: 86, column: 10, scope: !18573)
!18628 = !DILocation(line: 86, column: 15, scope: !18573)
!18629 = !DILocation(line: 86, column: 28, scope: !18573)
!18630 = !DILocation(line: 86, column: 34, scope: !18573)
!18631 = !DILocation(line: 87, column: 4, scope: !18573)
!18632 = !DILocation(line: 91, column: 4, scope: !18573)
!18633 = !DILocation(line: 91, column: 10, scope: !18573)
!18634 = !DILocation(line: 91, column: 16, scope: !18573)
!18635 = !DILocation(line: 92, column: 4, scope: !18573)
!18636 = !DILocation(line: 92, column: 10, scope: !18573)
!18637 = !DILocation(line: 92, column: 16, scope: !18573)
!18638 = !DILocation(line: 93, column: 46, scope: !18573)
!18639 = !DILocation(line: 93, column: 36, scope: !18573)
!18640 = !DILocation(line: 93, column: 4, scope: !18573)
!18641 = !DILocation(line: 93, column: 10, scope: !18573)
!18642 = !DILocation(line: 93, column: 15, scope: !18573)
!18643 = !DILocation(line: 93, column: 28, scope: !18573)
!18644 = !DILocation(line: 93, column: 34, scope: !18573)
!18645 = !DILocation(line: 94, column: 4, scope: !18573)
!18646 = !DILocation(line: 98, column: 4, scope: !18573)
!18647 = !DILocation(line: 98, column: 10, scope: !18573)
!18648 = !DILocation(line: 98, column: 16, scope: !18573)
!18649 = !DILocation(line: 99, column: 4, scope: !18573)
!18650 = !DILocation(line: 99, column: 10, scope: !18573)
!18651 = !DILocation(line: 99, column: 16, scope: !18573)
!18652 = !DILocation(line: 100, column: 46, scope: !18573)
!18653 = !DILocation(line: 100, column: 36, scope: !18573)
!18654 = !DILocation(line: 100, column: 4, scope: !18573)
!18655 = !DILocation(line: 100, column: 10, scope: !18573)
!18656 = !DILocation(line: 100, column: 15, scope: !18573)
!18657 = !DILocation(line: 100, column: 28, scope: !18573)
!18658 = !DILocation(line: 100, column: 34, scope: !18573)
!18659 = !DILocation(line: 101, column: 4, scope: !18573)
!18660 = !DILocation(line: 105, column: 4, scope: !18573)
!18661 = !DILocation(line: 105, column: 10, scope: !18573)
!18662 = !DILocation(line: 105, column: 16, scope: !18573)
!18663 = !DILocation(line: 106, column: 4, scope: !18573)
!18664 = !DILocation(line: 106, column: 10, scope: !18573)
!18665 = !DILocation(line: 106, column: 16, scope: !18573)
!18666 = !DILocation(line: 107, column: 46, scope: !18573)
!18667 = !DILocation(line: 107, column: 36, scope: !18573)
!18668 = !DILocation(line: 107, column: 4, scope: !18573)
!18669 = !DILocation(line: 107, column: 10, scope: !18573)
!18670 = !DILocation(line: 107, column: 15, scope: !18573)
!18671 = !DILocation(line: 107, column: 28, scope: !18573)
!18672 = !DILocation(line: 107, column: 34, scope: !18573)
!18673 = !DILocation(line: 108, column: 4, scope: !18573)
!18674 = !DILocation(line: 112, column: 4, scope: !18573)
!18675 = !DILocation(line: 112, column: 10, scope: !18573)
!18676 = !DILocation(line: 112, column: 16, scope: !18573)
!18677 = !DILocation(line: 113, column: 4, scope: !18573)
!18678 = !DILocation(line: 113, column: 10, scope: !18573)
!18679 = !DILocation(line: 113, column: 16, scope: !18573)
!18680 = !DILocation(line: 114, column: 46, scope: !18573)
!18681 = !DILocation(line: 114, column: 36, scope: !18573)
!18682 = !DILocation(line: 114, column: 4, scope: !18573)
!18683 = !DILocation(line: 114, column: 10, scope: !18573)
!18684 = !DILocation(line: 114, column: 15, scope: !18573)
!18685 = !DILocation(line: 114, column: 28, scope: !18573)
!18686 = !DILocation(line: 114, column: 34, scope: !18573)
!18687 = !DILocation(line: 115, column: 4, scope: !18573)
!18688 = !DILocation(line: 119, column: 4, scope: !18573)
!18689 = !DILocation(line: 119, column: 10, scope: !18573)
!18690 = !DILocation(line: 119, column: 16, scope: !18573)
!18691 = !DILocation(line: 120, column: 4, scope: !18573)
!18692 = !DILocation(line: 120, column: 10, scope: !18573)
!18693 = !DILocation(line: 120, column: 16, scope: !18573)
!18694 = !DILocation(line: 121, column: 46, scope: !18573)
!18695 = !DILocation(line: 121, column: 36, scope: !18573)
!18696 = !DILocation(line: 121, column: 4, scope: !18573)
!18697 = !DILocation(line: 121, column: 10, scope: !18573)
!18698 = !DILocation(line: 121, column: 15, scope: !18573)
!18699 = !DILocation(line: 121, column: 28, scope: !18573)
!18700 = !DILocation(line: 121, column: 34, scope: !18573)
!18701 = !DILocation(line: 122, column: 4, scope: !18573)
!18702 = !DILocation(line: 126, column: 4, scope: !18573)
!18703 = !DILocation(line: 126, column: 10, scope: !18573)
!18704 = !DILocation(line: 126, column: 16, scope: !18573)
!18705 = !DILocation(line: 127, column: 4, scope: !18573)
!18706 = !DILocation(line: 127, column: 10, scope: !18573)
!18707 = !DILocation(line: 127, column: 16, scope: !18573)
!18708 = !DILocation(line: 128, column: 46, scope: !18573)
!18709 = !DILocation(line: 128, column: 36, scope: !18573)
!18710 = !DILocation(line: 128, column: 4, scope: !18573)
!18711 = !DILocation(line: 128, column: 10, scope: !18573)
!18712 = !DILocation(line: 128, column: 15, scope: !18573)
!18713 = !DILocation(line: 128, column: 28, scope: !18573)
!18714 = !DILocation(line: 128, column: 34, scope: !18573)
!18715 = !DILocation(line: 129, column: 4, scope: !18573)
!18716 = !DILocation(line: 133, column: 4, scope: !18573)
!18717 = !DILocation(line: 133, column: 10, scope: !18573)
!18718 = !DILocation(line: 133, column: 16, scope: !18573)
!18719 = !DILocation(line: 134, column: 4, scope: !18573)
!18720 = !DILocation(line: 134, column: 10, scope: !18573)
!18721 = !DILocation(line: 134, column: 16, scope: !18573)
!18722 = !DILocation(line: 135, column: 46, scope: !18573)
!18723 = !DILocation(line: 135, column: 36, scope: !18573)
!18724 = !DILocation(line: 135, column: 4, scope: !18573)
!18725 = !DILocation(line: 135, column: 10, scope: !18573)
!18726 = !DILocation(line: 135, column: 15, scope: !18573)
!18727 = !DILocation(line: 135, column: 28, scope: !18573)
!18728 = !DILocation(line: 135, column: 34, scope: !18573)
!18729 = !DILocation(line: 136, column: 4, scope: !18573)
!18730 = !DILocation(line: 140, column: 4, scope: !18573)
!18731 = !DILocation(line: 140, column: 10, scope: !18573)
!18732 = !DILocation(line: 140, column: 16, scope: !18573)
!18733 = !DILocation(line: 141, column: 4, scope: !18573)
!18734 = !DILocation(line: 141, column: 10, scope: !18573)
!18735 = !DILocation(line: 141, column: 16, scope: !18573)
!18736 = !DILocation(line: 142, column: 46, scope: !18573)
!18737 = !DILocation(line: 142, column: 36, scope: !18573)
!18738 = !DILocation(line: 142, column: 4, scope: !18573)
!18739 = !DILocation(line: 142, column: 10, scope: !18573)
!18740 = !DILocation(line: 142, column: 15, scope: !18573)
!18741 = !DILocation(line: 142, column: 28, scope: !18573)
!18742 = !DILocation(line: 142, column: 34, scope: !18573)
!18743 = !DILocation(line: 143, column: 4, scope: !18573)
!18744 = !DILocation(line: 147, column: 4, scope: !18573)
!18745 = !DILocation(line: 147, column: 10, scope: !18573)
!18746 = !DILocation(line: 147, column: 16, scope: !18573)
!18747 = !DILocation(line: 148, column: 4, scope: !18573)
!18748 = !DILocation(line: 148, column: 10, scope: !18573)
!18749 = !DILocation(line: 148, column: 16, scope: !18573)
!18750 = !DILocation(line: 149, column: 46, scope: !18573)
!18751 = !DILocation(line: 149, column: 36, scope: !18573)
!18752 = !DILocation(line: 149, column: 4, scope: !18573)
!18753 = !DILocation(line: 149, column: 10, scope: !18573)
!18754 = !DILocation(line: 149, column: 15, scope: !18573)
!18755 = !DILocation(line: 149, column: 28, scope: !18573)
!18756 = !DILocation(line: 149, column: 34, scope: !18573)
!18757 = !DILocation(line: 150, column: 4, scope: !18573)
!18758 = !DILocation(line: 154, column: 4, scope: !18573)
!18759 = !DILocation(line: 158, column: 2, scope: !18554)
!18760 = !DILocation(line: 158, column: 8, scope: !18554)
!18761 = !DILocation(line: 158, column: 14, scope: !18554)
!18762 = !DILocation(line: 160, column: 2, scope: !18554)
!18763 = !DILocation(line: 161, column: 1, scope: !18554)
!18764 = distinct !DISubprogram(name: "sculpt_flush_pbvhvert_deform", scope: !3, file: !3, line: 3211, type: !18765, scopeLine: 3212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18765 = !DISubroutineType(types: !18766)
!18766 = !{null, !3739, !10308}
!18767 = !DILocalVariable(name: "ob", arg: 1, scope: !18764, file: !3, line: 3211, type: !3739)
!18768 = !DILocation(line: 3211, column: 50, scope: !18764)
!18769 = !DILocalVariable(name: "vd", arg: 2, scope: !18764, file: !3, line: 3211, type: !10308)
!18770 = !DILocation(line: 3211, column: 70, scope: !18764)
!18771 = !DILocalVariable(name: "ss", scope: !18764, file: !3, line: 3213, type: !5374)
!18772 = !DILocation(line: 3213, column: 17, scope: !18764)
!18773 = !DILocation(line: 3213, column: 22, scope: !18764)
!18774 = !DILocation(line: 3213, column: 26, scope: !18764)
!18775 = !DILocalVariable(name: "me", scope: !18764, file: !3, line: 3214, type: !5012)
!18776 = !DILocation(line: 3214, column: 8, scope: !18764)
!18777 = !DILocation(line: 3214, column: 13, scope: !18764)
!18778 = !DILocation(line: 3214, column: 17, scope: !18764)
!18779 = !DILocalVariable(name: "disp", scope: !18764, file: !3, line: 3215, type: !233)
!18780 = !DILocation(line: 3215, column: 8, scope: !18764)
!18781 = !DILocalVariable(name: "newco", scope: !18764, file: !3, line: 3215, type: !233)
!18782 = !DILocation(line: 3215, column: 17, scope: !18764)
!18783 = !DILocalVariable(name: "index", scope: !18764, file: !3, line: 3216, type: !57)
!18784 = !DILocation(line: 3216, column: 6, scope: !18764)
!18785 = !DILocation(line: 3216, column: 14, scope: !18764)
!18786 = !DILocation(line: 3216, column: 18, scope: !18764)
!18787 = !DILocation(line: 3216, column: 31, scope: !18764)
!18788 = !DILocation(line: 3216, column: 35, scope: !18764)
!18789 = !DILocation(line: 3218, column: 14, scope: !18764)
!18790 = !DILocation(line: 3218, column: 20, scope: !18764)
!18791 = !DILocation(line: 3218, column: 24, scope: !18764)
!18792 = !DILocation(line: 3218, column: 28, scope: !18764)
!18793 = !DILocation(line: 3218, column: 32, scope: !18764)
!18794 = !DILocation(line: 3218, column: 43, scope: !18764)
!18795 = !DILocation(line: 3218, column: 2, scope: !18764)
!18796 = !DILocation(line: 3219, column: 12, scope: !18764)
!18797 = !DILocation(line: 3219, column: 16, scope: !18764)
!18798 = !DILocation(line: 3219, column: 29, scope: !18764)
!18799 = !DILocation(line: 3219, column: 37, scope: !18764)
!18800 = !DILocation(line: 3219, column: 2, scope: !18764)
!18801 = !DILocation(line: 3220, column: 14, scope: !18764)
!18802 = !DILocation(line: 3220, column: 21, scope: !18764)
!18803 = !DILocation(line: 3220, column: 27, scope: !18764)
!18804 = !DILocation(line: 3220, column: 31, scope: !18764)
!18805 = !DILocation(line: 3220, column: 40, scope: !18764)
!18806 = !DILocation(line: 3220, column: 2, scope: !18764)
!18807 = !DILocation(line: 3222, column: 13, scope: !18764)
!18808 = !DILocation(line: 3222, column: 17, scope: !18764)
!18809 = !DILocation(line: 3222, column: 28, scope: !18764)
!18810 = !DILocation(line: 3222, column: 36, scope: !18764)
!18811 = !DILocation(line: 3222, column: 40, scope: !18764)
!18812 = !DILocation(line: 3222, column: 2, scope: !18764)
!18813 = !DILocation(line: 3223, column: 13, scope: !18764)
!18814 = !DILocation(line: 3223, column: 17, scope: !18764)
!18815 = !DILocation(line: 3223, column: 26, scope: !18764)
!18816 = !DILocation(line: 3223, column: 34, scope: !18764)
!18817 = !DILocation(line: 3223, column: 2, scope: !18764)
!18818 = !DILocation(line: 3225, column: 7, scope: !18819)
!18819 = distinct !DILexicalBlock(scope: !18764, file: !3, line: 3225, column: 6)
!18820 = !DILocation(line: 3225, column: 11, scope: !18819)
!18821 = !DILocation(line: 3225, column: 6, scope: !18764)
!18822 = !DILocation(line: 3226, column: 14, scope: !18819)
!18823 = !DILocation(line: 3226, column: 18, scope: !18819)
!18824 = !DILocation(line: 3226, column: 24, scope: !18819)
!18825 = !DILocation(line: 3226, column: 31, scope: !18819)
!18826 = !DILocation(line: 3226, column: 35, scope: !18819)
!18827 = !DILocation(line: 3226, column: 3, scope: !18819)
!18828 = !DILocation(line: 3227, column: 1, scope: !18764)
!18829 = distinct !DISubprogram(name: "sculpt_get_redraw_rect", scope: !3, file: !3, line: 465, type: !18830, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18830 = !DISubroutineType(types: !18831)
!18831 = !{!2315, !5319, !5321, !3739, !5368}
!18832 = !DILocalVariable(name: "ar", arg: 1, scope: !18829, file: !3, line: 465, type: !5319)
!18833 = !DILocation(line: 465, column: 45, scope: !18829)
!18834 = !DILocalVariable(name: "rv3d", arg: 2, scope: !18829, file: !3, line: 465, type: !5321)
!18835 = !DILocation(line: 465, column: 63, scope: !18829)
!18836 = !DILocalVariable(name: "ob", arg: 3, scope: !18829, file: !3, line: 466, type: !3739)
!18837 = !DILocation(line: 466, column: 44, scope: !18829)
!18838 = !DILocalVariable(name: "rect", arg: 4, scope: !18829, file: !3, line: 466, type: !5368)
!18839 = !DILocation(line: 466, column: 54, scope: !18829)
!18840 = !DILocalVariable(name: "pbvh", scope: !18829, file: !3, line: 468, type: !5332)
!18841 = !DILocation(line: 468, column: 8, scope: !18829)
!18842 = !DILocation(line: 468, column: 15, scope: !18829)
!18843 = !DILocation(line: 468, column: 19, scope: !18829)
!18844 = !DILocation(line: 468, column: 27, scope: !18829)
!18845 = !DILocalVariable(name: "bb_min", scope: !18829, file: !3, line: 469, type: !233)
!18846 = !DILocation(line: 469, column: 8, scope: !18829)
!18847 = !DILocalVariable(name: "bb_max", scope: !18829, file: !3, line: 469, type: !233)
!18848 = !DILocation(line: 469, column: 19, scope: !18829)
!18849 = !DILocation(line: 471, column: 7, scope: !18850)
!18850 = distinct !DILexicalBlock(scope: !18829, file: !3, line: 471, column: 6)
!18851 = !DILocation(line: 471, column: 6, scope: !18829)
!18852 = !DILocation(line: 472, column: 3, scope: !18850)
!18853 = !DILocation(line: 474, column: 21, scope: !18829)
!18854 = !DILocation(line: 474, column: 27, scope: !18829)
!18855 = !DILocation(line: 474, column: 35, scope: !18829)
!18856 = !DILocation(line: 474, column: 2, scope: !18829)
!18857 = !DILocation(line: 477, column: 32, scope: !18858)
!18858 = distinct !DILexicalBlock(scope: !18829, file: !3, line: 477, column: 6)
!18859 = !DILocation(line: 478, column: 32, scope: !18858)
!18860 = !DILocation(line: 479, column: 32, scope: !18858)
!18861 = !DILocation(line: 480, column: 32, scope: !18858)
!18862 = !DILocation(line: 481, column: 32, scope: !18858)
!18863 = !DILocation(line: 482, column: 32, scope: !18858)
!18864 = !DILocation(line: 477, column: 7, scope: !18858)
!18865 = !DILocation(line: 477, column: 6, scope: !18829)
!18866 = !DILocation(line: 484, column: 3, scope: !18867)
!18867 = distinct !DILexicalBlock(scope: !18858, file: !3, line: 483, column: 2)
!18868 = !DILocation(line: 488, column: 2, scope: !18829)
!18869 = !DILocation(line: 489, column: 1, scope: !18829)
!18870 = distinct !DISubprogram(name: "sculpt_omp_done", scope: !3, file: !3, line: 3677, type: !6059, scopeLine: 3678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18871 = !DILocalVariable(name: "ss", arg: 1, scope: !18870, file: !3, line: 3677, type: !5374)
!18872 = !DILocation(line: 3677, column: 44, scope: !18870)
!18873 = !DILocation(line: 3683, column: 6, scope: !18874)
!18874 = distinct !DILexicalBlock(scope: !18870, file: !3, line: 3683, column: 6)
!18875 = !DILocation(line: 3683, column: 10, scope: !18874)
!18876 = !DILocation(line: 3683, column: 6, scope: !18870)
!18877 = !DILocalVariable(name: "i", scope: !18878, file: !3, line: 3684, type: !57)
!18878 = distinct !DILexicalBlock(scope: !18874, file: !3, line: 3683, column: 20)
!18879 = !DILocation(line: 3684, column: 7, scope: !18878)
!18880 = !DILocation(line: 3686, column: 10, scope: !18881)
!18881 = distinct !DILexicalBlock(scope: !18878, file: !3, line: 3686, column: 3)
!18882 = !DILocation(line: 3686, column: 8, scope: !18881)
!18883 = !DILocation(line: 3686, column: 15, scope: !18884)
!18884 = distinct !DILexicalBlock(scope: !18881, file: !3, line: 3686, column: 3)
!18885 = !DILocation(line: 3686, column: 19, scope: !18884)
!18886 = !DILocation(line: 3686, column: 23, scope: !18884)
!18887 = !DILocation(line: 3686, column: 30, scope: !18884)
!18888 = !DILocation(line: 3686, column: 17, scope: !18884)
!18889 = !DILocation(line: 3686, column: 3, scope: !18881)
!18890 = !DILocation(line: 3687, column: 4, scope: !18891)
!18891 = distinct !DILexicalBlock(scope: !18884, file: !3, line: 3686, column: 48)
!18892 = !DILocation(line: 3687, column: 14, scope: !18891)
!18893 = !DILocation(line: 3687, column: 18, scope: !18891)
!18894 = !DILocation(line: 3687, column: 25, scope: !18891)
!18895 = !DILocation(line: 3687, column: 36, scope: !18891)
!18896 = !DILocation(line: 3688, column: 4, scope: !18891)
!18897 = !DILocation(line: 3688, column: 14, scope: !18891)
!18898 = !DILocation(line: 3688, column: 18, scope: !18891)
!18899 = !DILocation(line: 3688, column: 25, scope: !18891)
!18900 = !DILocation(line: 3688, column: 35, scope: !18891)
!18901 = !DILocation(line: 3689, column: 4, scope: !18891)
!18902 = !DILocation(line: 3689, column: 14, scope: !18891)
!18903 = !DILocation(line: 3689, column: 18, scope: !18891)
!18904 = !DILocation(line: 3689, column: 25, scope: !18891)
!18905 = !DILocation(line: 3689, column: 38, scope: !18891)
!18906 = !DILocation(line: 3690, column: 4, scope: !18891)
!18907 = !DILocation(line: 3690, column: 14, scope: !18891)
!18908 = !DILocation(line: 3690, column: 18, scope: !18891)
!18909 = !DILocation(line: 3690, column: 25, scope: !18891)
!18910 = !DILocation(line: 3690, column: 37, scope: !18891)
!18911 = !DILocation(line: 3691, column: 3, scope: !18891)
!18912 = !DILocation(line: 3686, column: 44, scope: !18884)
!18913 = !DILocation(line: 3686, column: 3, scope: !18884)
!18914 = distinct !{!18914, !18889, !18915}
!18915 = !DILocation(line: 3691, column: 3, scope: !18881)
!18916 = !DILocation(line: 3693, column: 3, scope: !18878)
!18917 = !DILocation(line: 3693, column: 13, scope: !18878)
!18918 = !DILocation(line: 3693, column: 17, scope: !18878)
!18919 = !DILocation(line: 3693, column: 24, scope: !18878)
!18920 = !DILocation(line: 3694, column: 3, scope: !18878)
!18921 = !DILocation(line: 3694, column: 13, scope: !18878)
!18922 = !DILocation(line: 3694, column: 17, scope: !18878)
!18923 = !DILocation(line: 3694, column: 24, scope: !18878)
!18924 = !DILocation(line: 3695, column: 3, scope: !18878)
!18925 = !DILocation(line: 3695, column: 13, scope: !18878)
!18926 = !DILocation(line: 3695, column: 17, scope: !18878)
!18927 = !DILocation(line: 3695, column: 24, scope: !18878)
!18928 = !DILocation(line: 3696, column: 3, scope: !18878)
!18929 = !DILocation(line: 3696, column: 13, scope: !18878)
!18930 = !DILocation(line: 3696, column: 17, scope: !18878)
!18931 = !DILocation(line: 3696, column: 24, scope: !18878)
!18932 = !DILocation(line: 3697, column: 2, scope: !18878)
!18933 = !DILocation(line: 3698, column: 1, scope: !18870)
!18934 = distinct !DISubprogram(name: "sculpt_cache_free", scope: !3, file: !3, line: 3581, type: !18935, scopeLine: 3582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18935 = !DISubroutineType(types: !18936)
!18936 = !{null, !5642}
!18937 = !DILocalVariable(name: "cache", arg: 1, scope: !18934, file: !3, line: 3581, type: !5642)
!18938 = !DILocation(line: 3581, column: 44, scope: !18934)
!18939 = !DILocation(line: 3583, column: 6, scope: !18940)
!18940 = distinct !DILexicalBlock(scope: !18934, file: !3, line: 3583, column: 6)
!18941 = !DILocation(line: 3583, column: 13, scope: !18940)
!18942 = !DILocation(line: 3583, column: 6, scope: !18934)
!18943 = !DILocation(line: 3584, column: 3, scope: !18940)
!18944 = !DILocation(line: 3584, column: 13, scope: !18940)
!18945 = !DILocation(line: 3584, column: 20, scope: !18940)
!18946 = !DILocation(line: 3585, column: 6, scope: !18947)
!18947 = distinct !DILexicalBlock(scope: !18934, file: !3, line: 3585, column: 6)
!18948 = !DILocation(line: 3585, column: 13, scope: !18947)
!18949 = !DILocation(line: 3585, column: 6, scope: !18934)
!18950 = !DILocation(line: 3586, column: 3, scope: !18947)
!18951 = !DILocation(line: 3586, column: 13, scope: !18947)
!18952 = !DILocation(line: 3586, column: 20, scope: !18947)
!18953 = !DILocation(line: 3587, column: 2, scope: !18934)
!18954 = !DILocation(line: 3587, column: 12, scope: !18934)
!18955 = !DILocation(line: 3588, column: 1, scope: !18934)
!18956 = distinct !DISubprogram(name: "sculpt_brush_exit_tex", scope: !3, file: !3, line: 4395, type: !18957, scopeLine: 4396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18957 = !DISubroutineType(types: !18958)
!18958 = !{null, !6}
!18959 = !DILocalVariable(name: "sd", arg: 1, scope: !18956, file: !3, line: 4395, type: !6)
!18960 = !DILocation(line: 4395, column: 43, scope: !18956)
!18961 = !DILocalVariable(name: "brush", scope: !18956, file: !3, line: 4397, type: !2749)
!18962 = !DILocation(line: 4397, column: 9, scope: !18956)
!18963 = !DILocation(line: 4397, column: 34, scope: !18956)
!18964 = !DILocation(line: 4397, column: 38, scope: !18956)
!18965 = !DILocation(line: 4397, column: 17, scope: !18956)
!18966 = !DILocalVariable(name: "mtex", scope: !18956, file: !3, line: 4398, type: !7422)
!18967 = !DILocation(line: 4398, column: 8, scope: !18956)
!18968 = !DILocation(line: 4398, column: 16, scope: !18956)
!18969 = !DILocation(line: 4398, column: 23, scope: !18956)
!18970 = !DILocation(line: 4400, column: 6, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18956, file: !3, line: 4400, column: 6)
!18972 = !DILocation(line: 4400, column: 12, scope: !18971)
!18973 = !DILocation(line: 4400, column: 16, scope: !18971)
!18974 = !DILocation(line: 4400, column: 19, scope: !18971)
!18975 = !DILocation(line: 4400, column: 25, scope: !18971)
!18976 = !DILocation(line: 4400, column: 30, scope: !18971)
!18977 = !DILocation(line: 4400, column: 6, scope: !18956)
!18978 = !DILocation(line: 4401, column: 23, scope: !18971)
!18979 = !DILocation(line: 4401, column: 29, scope: !18971)
!18980 = !DILocation(line: 4401, column: 34, scope: !18971)
!18981 = !DILocation(line: 4401, column: 44, scope: !18971)
!18982 = !DILocation(line: 4401, column: 3, scope: !18971)
!18983 = !DILocation(line: 4402, column: 1, scope: !18956)
!18984 = distinct !DISubprogram(name: "sculpt_mode_toggle_exec", scope: !3, file: !3, line: 4957, type: !6917, scopeLine: 4958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!18985 = !DILocalVariable(name: "C", arg: 1, scope: !18984, file: !3, line: 4957, type: !5279)
!18986 = !DILocation(line: 4957, column: 46, scope: !18984)
!18987 = !DILocalVariable(name: "op", arg: 2, scope: !18984, file: !3, line: 4957, type: !6842)
!18988 = !DILocation(line: 4957, column: 61, scope: !18984)
!18989 = !DILocalVariable(name: "scene", scope: !18984, file: !3, line: 4959, type: !6167)
!18990 = !DILocation(line: 4959, column: 9, scope: !18984)
!18991 = !DILocation(line: 4959, column: 32, scope: !18984)
!18992 = !DILocation(line: 4959, column: 17, scope: !18984)
!18993 = !DILocalVariable(name: "ts", scope: !18984, file: !3, line: 4960, type: !18994)
!18994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18995, size: 64)
!18995 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !8, line: 1180, baseType: !1453)
!18996 = !DILocation(line: 4960, column: 16, scope: !18984)
!18997 = !DILocation(line: 4960, column: 44, scope: !18984)
!18998 = !DILocation(line: 4960, column: 21, scope: !18984)
!18999 = !DILocalVariable(name: "ob", scope: !18984, file: !3, line: 4961, type: !3739)
!19000 = !DILocation(line: 4961, column: 10, scope: !18984)
!19001 = !DILocation(line: 4961, column: 38, scope: !18984)
!19002 = !DILocation(line: 4961, column: 15, scope: !18984)
!19003 = !DILocalVariable(name: "mode_flag", scope: !18984, file: !3, line: 4962, type: !5191)
!19004 = !DILocation(line: 4962, column: 12, scope: !18984)
!19005 = !DILocalVariable(name: "is_mode_set", scope: !18984, file: !3, line: 4963, type: !3340)
!19006 = !DILocation(line: 4963, column: 13, scope: !18984)
!19007 = !DILocation(line: 4963, column: 28, scope: !18984)
!19008 = !DILocation(line: 4963, column: 32, scope: !18984)
!19009 = !DILocation(line: 4963, column: 37, scope: !18984)
!19010 = !DILocation(line: 4963, column: 50, scope: !18984)
!19011 = !DILocation(line: 4963, column: 27, scope: !18984)
!19012 = !DILocalVariable(name: "me", scope: !18984, file: !3, line: 4964, type: !5012)
!19013 = !DILocation(line: 4964, column: 8, scope: !18984)
!19014 = !DILocalVariable(name: "mmd", scope: !18984, file: !3, line: 4965, type: !9648)
!19015 = !DILocation(line: 4965, column: 24, scope: !18984)
!19016 = !DILocation(line: 4965, column: 57, scope: !18984)
!19017 = !DILocation(line: 4965, column: 64, scope: !18984)
!19018 = !DILocation(line: 4965, column: 30, scope: !18984)
!19019 = !DILocalVariable(name: "flush_recalc", scope: !18984, file: !3, line: 4966, type: !57)
!19020 = !DILocation(line: 4966, column: 6, scope: !18984)
!19021 = !DILocation(line: 4968, column: 7, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !18984, file: !3, line: 4968, column: 6)
!19023 = !DILocation(line: 4968, column: 6, scope: !18984)
!19024 = !DILocation(line: 4969, column: 34, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19026, file: !3, line: 4969, column: 7)
!19026 = distinct !DILexicalBlock(scope: !19022, file: !3, line: 4968, column: 20)
!19027 = !DILocation(line: 4969, column: 37, scope: !19025)
!19028 = !DILocation(line: 4969, column: 52, scope: !19025)
!19029 = !DILocation(line: 4969, column: 56, scope: !19025)
!19030 = !DILocation(line: 4969, column: 8, scope: !19025)
!19031 = !DILocation(line: 4969, column: 7, scope: !19026)
!19032 = !DILocation(line: 4970, column: 4, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !19025, file: !3, line: 4969, column: 66)
!19034 = !DILocation(line: 4972, column: 2, scope: !19026)
!19035 = !DILocation(line: 4974, column: 28, scope: !18984)
!19036 = !DILocation(line: 4974, column: 7, scope: !18984)
!19037 = !DILocation(line: 4974, column: 5, scope: !18984)
!19038 = !DILocation(line: 4977, column: 18, scope: !18984)
!19039 = !DILocation(line: 4977, column: 22, scope: !18984)
!19040 = !DILocation(line: 4977, column: 25, scope: !18984)
!19041 = !DILocation(line: 4977, column: 30, scope: !18984)
!19042 = !DILocation(line: 4977, column: 43, scope: !18984)
!19043 = !DILocation(line: 4977, column: 48, scope: !18984)
!19044 = !DILocation(line: 4977, column: 40, scope: !18984)
!19045 = !DILocation(line: 0, scope: !18984)
!19046 = !DILocation(line: 4977, column: 15, scope: !18984)
!19047 = !DILocation(line: 4979, column: 46, scope: !18984)
!19048 = !DILocation(line: 4979, column: 53, scope: !18984)
!19049 = !DILocation(line: 4979, column: 18, scope: !18984)
!19050 = !DILocation(line: 4979, column: 15, scope: !18984)
!19051 = !DILocation(line: 4981, column: 6, scope: !19052)
!19052 = distinct !DILexicalBlock(scope: !18984, file: !3, line: 4981, column: 6)
!19053 = !DILocation(line: 4981, column: 6, scope: !18984)
!19054 = !DILocation(line: 4982, column: 7, scope: !19055)
!19055 = distinct !DILexicalBlock(scope: !19056, file: !3, line: 4982, column: 7)
!19056 = distinct !DILexicalBlock(scope: !19052, file: !3, line: 4981, column: 19)
!19057 = !DILocation(line: 4982, column: 7, scope: !19056)
!19058 = !DILocation(line: 4983, column: 26, scope: !19055)
!19059 = !DILocation(line: 4983, column: 4, scope: !19055)
!19060 = !DILocation(line: 4985, column: 7, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !19056, file: !3, line: 4985, column: 7)
!19062 = !DILocation(line: 4985, column: 20, scope: !19061)
!19063 = !DILocation(line: 4985, column: 24, scope: !19061)
!19064 = !DILocation(line: 4985, column: 28, scope: !19061)
!19065 = !DILocation(line: 4985, column: 35, scope: !19061)
!19066 = !DILocation(line: 4985, column: 38, scope: !19061)
!19067 = !DILocation(line: 4985, column: 42, scope: !19061)
!19068 = !DILocation(line: 4985, column: 50, scope: !19061)
!19069 = !DILocation(line: 4985, column: 7, scope: !19056)
!19070 = !DILocation(line: 4986, column: 23, scope: !19061)
!19071 = !DILocation(line: 4986, column: 27, scope: !19061)
!19072 = !DILocation(line: 4986, column: 4, scope: !19061)
!19073 = !DILocation(line: 4988, column: 7, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19056, file: !3, line: 4988, column: 7)
!19075 = !DILocation(line: 4988, column: 11, scope: !19074)
!19076 = !DILocation(line: 4988, column: 16, scope: !19074)
!19077 = !DILocation(line: 4988, column: 7, scope: !19056)
!19078 = !DILocation(line: 4992, column: 40, scope: !19079)
!19079 = distinct !DILexicalBlock(scope: !19074, file: !3, line: 4988, column: 46)
!19080 = !DILocation(line: 4992, column: 4, scope: !19079)
!19081 = !DILocation(line: 4993, column: 3, scope: !19079)
!19082 = !DILocation(line: 4996, column: 3, scope: !19056)
!19083 = !DILocation(line: 4996, column: 7, scope: !19056)
!19084 = !DILocation(line: 4996, column: 12, scope: !19056)
!19085 = !DILocation(line: 4998, column: 26, scope: !19056)
!19086 = !DILocation(line: 4998, column: 3, scope: !19056)
!19087 = !DILocation(line: 5000, column: 3, scope: !19056)
!19088 = !DILocation(line: 5001, column: 2, scope: !19056)
!19089 = !DILocation(line: 5004, column: 3, scope: !19090)
!19090 = distinct !DILexicalBlock(scope: !19052, file: !3, line: 5002, column: 7)
!19091 = !DILocation(line: 5004, column: 7, scope: !19090)
!19092 = !DILocation(line: 5004, column: 12, scope: !19090)
!19093 = !DILocation(line: 5010, column: 3, scope: !19090)
!19094 = !DILocation(line: 5010, column: 7, scope: !19090)
!19095 = !DILocation(line: 5010, column: 12, scope: !19090)
!19096 = !DILocation(line: 5012, column: 7, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5012, column: 7)
!19098 = !DILocation(line: 5012, column: 7, scope: !19090)
!19099 = !DILocation(line: 5013, column: 23, scope: !19097)
!19100 = !DILocation(line: 5013, column: 27, scope: !19097)
!19101 = !DILocation(line: 5013, column: 4, scope: !19097)
!19102 = !DILocation(line: 5016, column: 8, scope: !19103)
!19103 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5016, column: 7)
!19104 = !DILocation(line: 5016, column: 12, scope: !19103)
!19105 = !DILocation(line: 5016, column: 7, scope: !19090)
!19106 = !DILocation(line: 5017, column: 17, scope: !19107)
!19107 = distinct !DILexicalBlock(scope: !19103, file: !3, line: 5016, column: 20)
!19108 = !DILocation(line: 5017, column: 4, scope: !19107)
!19109 = !DILocation(line: 5017, column: 8, scope: !19107)
!19110 = !DILocation(line: 5017, column: 15, scope: !19107)
!19111 = !DILocation(line: 5020, column: 4, scope: !19107)
!19112 = !DILocation(line: 5020, column: 8, scope: !19107)
!19113 = !DILocation(line: 5020, column: 16, scope: !19107)
!19114 = !DILocation(line: 5020, column: 22, scope: !19107)
!19115 = !DILocation(line: 5020, column: 37, scope: !19107)
!19116 = !DILocation(line: 5021, column: 4, scope: !19107)
!19117 = !DILocation(line: 5021, column: 8, scope: !19107)
!19118 = !DILocation(line: 5021, column: 16, scope: !19107)
!19119 = !DILocation(line: 5021, column: 22, scope: !19107)
!19120 = !DILocation(line: 5021, column: 28, scope: !19107)
!19121 = !DILocation(line: 5024, column: 4, scope: !19107)
!19122 = !DILocation(line: 5024, column: 8, scope: !19107)
!19123 = !DILocation(line: 5024, column: 16, scope: !19107)
!19124 = !DILocation(line: 5024, column: 22, scope: !19107)
!19125 = !DILocation(line: 5025, column: 3, scope: !19107)
!19126 = !DILocation(line: 5027, column: 8, scope: !19127)
!19127 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5027, column: 7)
!19128 = !DILocation(line: 5027, column: 12, scope: !19127)
!19129 = !DILocation(line: 5027, column: 20, scope: !19127)
!19130 = !DILocation(line: 5027, column: 7, scope: !19090)
!19131 = !DILocation(line: 5028, column: 4, scope: !19132)
!19132 = distinct !DILexicalBlock(scope: !19127, file: !3, line: 5027, column: 33)
!19133 = !DILocation(line: 5028, column: 8, scope: !19132)
!19134 = !DILocation(line: 5028, column: 16, scope: !19132)
!19135 = !DILocation(line: 5028, column: 28, scope: !19132)
!19136 = !DILocation(line: 5029, column: 3, scope: !19132)
!19137 = !DILocation(line: 5031, column: 7, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5031, column: 7)
!19139 = !DILocation(line: 5031, column: 11, scope: !19138)
!19140 = !DILocation(line: 5031, column: 19, scope: !19138)
!19141 = !DILocation(line: 5031, column: 35, scope: !19138)
!19142 = !DILocation(line: 5031, column: 7, scope: !19090)
!19143 = !DILocation(line: 5032, column: 4, scope: !19138)
!19144 = !DILocation(line: 5032, column: 8, scope: !19138)
!19145 = !DILocation(line: 5032, column: 16, scope: !19138)
!19146 = !DILocation(line: 5032, column: 32, scope: !19138)
!19147 = !DILocation(line: 5035, column: 7, scope: !19148)
!19148 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5035, column: 7)
!19149 = !DILocation(line: 5035, column: 11, scope: !19148)
!19150 = !DILocation(line: 5035, column: 7, scope: !19090)
!19151 = !DILocation(line: 5036, column: 27, scope: !19148)
!19152 = !DILocation(line: 5036, column: 4, scope: !19148)
!19153 = !DILocation(line: 5038, column: 23, scope: !19090)
!19154 = !DILocation(line: 5038, column: 30, scope: !19090)
!19155 = !DILocation(line: 5038, column: 3, scope: !19090)
!19156 = !DILocation(line: 5041, column: 7, scope: !19157)
!19157 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5041, column: 7)
!19158 = !DILocation(line: 5041, column: 7, scope: !19090)
!19159 = !DILocation(line: 5044, column: 34, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19157, file: !3, line: 5041, column: 12)
!19161 = !DILocation(line: 5044, column: 38, scope: !19160)
!19162 = !DILocation(line: 5044, column: 4, scope: !19160)
!19163 = !DILocation(line: 5045, column: 3, scope: !19160)
!19164 = !DILocation(line: 5047, column: 15, scope: !19165)
!19165 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 5047, column: 7)
!19166 = !DILocation(line: 5047, column: 19, scope: !19165)
!19167 = !DILocation(line: 5047, column: 29, scope: !19165)
!19168 = !DILocation(line: 5047, column: 33, scope: !19165)
!19169 = !DILocation(line: 5047, column: 27, scope: !19165)
!19170 = !DILocation(line: 5047, column: 9, scope: !19165)
!19171 = !DILocation(line: 5047, column: 42, scope: !19165)
!19172 = !DILocation(line: 5047, column: 50, scope: !19165)
!19173 = !DILocation(line: 5047, column: 59, scope: !19165)
!19174 = !DILocation(line: 5047, column: 63, scope: !19165)
!19175 = !DILocation(line: 5047, column: 73, scope: !19165)
!19176 = !DILocation(line: 5047, column: 77, scope: !19165)
!19177 = !DILocation(line: 5047, column: 71, scope: !19165)
!19178 = !DILocation(line: 5047, column: 53, scope: !19165)
!19179 = !DILocation(line: 5047, column: 86, scope: !19165)
!19180 = !DILocation(line: 5047, column: 7, scope: !19090)
!19181 = !DILocation(line: 5048, column: 15, scope: !19182)
!19182 = distinct !DILexicalBlock(scope: !19165, file: !3, line: 5047, column: 96)
!19183 = !DILocation(line: 5048, column: 19, scope: !19182)
!19184 = !DILocation(line: 5048, column: 4, scope: !19182)
!19185 = !DILocation(line: 5050, column: 3, scope: !19182)
!19186 = !DILocation(line: 5051, column: 27, scope: !19187)
!19187 = distinct !DILexicalBlock(scope: !19165, file: !3, line: 5051, column: 12)
!19188 = !DILocation(line: 5051, column: 31, scope: !19187)
!19189 = !DILocation(line: 5051, column: 12, scope: !19187)
!19190 = !DILocation(line: 5051, column: 12, scope: !19165)
!19191 = !DILocation(line: 5052, column: 15, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19187, file: !3, line: 5051, column: 39)
!19193 = !DILocation(line: 5052, column: 19, scope: !19192)
!19194 = !DILocation(line: 5052, column: 4, scope: !19192)
!19195 = !DILocation(line: 5054, column: 3, scope: !19192)
!19196 = !DILocation(line: 5056, column: 19, scope: !19090)
!19197 = !DILocation(line: 5056, column: 23, scope: !19090)
!19198 = !DILocation(line: 5056, column: 31, scope: !19090)
!19199 = !DILocation(line: 5056, column: 3, scope: !19090)
!19200 = !DILocation(line: 5058, column: 22, scope: !19090)
!19201 = !DILocation(line: 5058, column: 3, scope: !19090)
!19202 = !DILocation(line: 5061, column: 24, scope: !18984)
!19203 = !DILocation(line: 5061, column: 47, scope: !18984)
!19204 = !DILocation(line: 5061, column: 2, scope: !18984)
!19205 = !DILocation(line: 5063, column: 2, scope: !18984)
!19206 = !DILocation(line: 5064, column: 1, scope: !18984)
!19207 = distinct !DISubprogram(name: "sculpt_has_active_modifiers", scope: !3, file: !3, line: 147, type: !19208, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19208 = !DISubroutineType(types: !19209)
!19209 = !{!2315, !6167, !3739}
!19210 = !DILocalVariable(name: "scene", arg: 1, scope: !19207, file: !3, line: 147, type: !6167)
!19211 = !DILocation(line: 147, column: 48, scope: !19207)
!19212 = !DILocalVariable(name: "ob", arg: 2, scope: !19207, file: !3, line: 147, type: !3739)
!19213 = !DILocation(line: 147, column: 63, scope: !19207)
!19214 = !DILocalVariable(name: "md", scope: !19207, file: !3, line: 149, type: !8051)
!19215 = !DILocation(line: 149, column: 16, scope: !19207)
!19216 = !DILocalVariable(name: "virtualModifierData", scope: !19207, file: !3, line: 150, type: !19217)
!19217 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualModifierData", file: !4097, line: 391, baseType: !19218)
!19218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VirtualModifierData", file: !4097, line: 386, size: 5568, elements: !19219)
!19219 = !{!19220, !19231, !19240, !19249}
!19220 = !DIDerivedType(tag: DW_TAG_member, name: "amd", scope: !19218, file: !4097, line: 387, baseType: !19221, size: 1600)
!19221 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArmatureModifierData", file: !265, line: 535, baseType: !19222)
!19222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArmatureModifierData", file: !265, line: 527, size: 1600, elements: !19223)
!19223 = !{!19224, !19225, !19226, !19227, !19228, !19229, !19230}
!19224 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !19222, file: !265, line: 528, baseType: !268, size: 896)
!19225 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !19222, file: !265, line: 530, baseType: !55, size: 16, offset: 896)
!19226 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !19222, file: !265, line: 530, baseType: !55, size: 16, offset: 912)
!19227 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !19222, file: !265, line: 531, baseType: !57, size: 32, offset: 928)
!19228 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !19222, file: !265, line: 532, baseType: !248, size: 64, offset: 960)
!19229 = !DIDerivedType(tag: DW_TAG_member, name: "prevCos", scope: !19222, file: !265, line: 533, baseType: !359, size: 64, offset: 1024)
!19230 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !19222, file: !265, line: 534, baseType: !72, size: 512, offset: 1088)
!19231 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !19218, file: !4097, line: 388, baseType: !19232, size: 1536, offset: 1600)
!19232 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveModifierData", file: !265, line: 154, baseType: !19233)
!19233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveModifierData", file: !265, line: 147, size: 1536, elements: !19234)
!19234 = !{!19235, !19236, !19237, !19238, !19239}
!19235 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !19233, file: !265, line: 148, baseType: !268, size: 896)
!19236 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !19233, file: !265, line: 150, baseType: !248, size: 64, offset: 896)
!19237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19233, file: !265, line: 151, baseType: !72, size: 512, offset: 960)
!19238 = !DIDerivedType(tag: DW_TAG_member, name: "defaxis", scope: !19233, file: !265, line: 152, baseType: !55, size: 16, offset: 1472)
!19239 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !19233, file: !265, line: 153, baseType: !712, size: 48, offset: 1488)
!19240 = !DIDerivedType(tag: DW_TAG_member, name: "lmd", scope: !19218, file: !4097, line: 389, baseType: !19241, size: 1536, offset: 3136)
!19241 = !DIDerivedType(tag: DW_TAG_typedef, name: "LatticeModifierData", file: !265, line: 145, baseType: !19242)
!19242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeModifierData", file: !265, line: 138, size: 1536, elements: !19243)
!19243 = !{!19244, !19245, !19246, !19247, !19248}
!19244 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !19242, file: !265, line: 139, baseType: !268, size: 896)
!19245 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !19242, file: !265, line: 141, baseType: !248, size: 64, offset: 896)
!19246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19242, file: !265, line: 142, baseType: !72, size: 512, offset: 960)
!19247 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !19242, file: !265, line: 143, baseType: !153, size: 32, offset: 1472)
!19248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !19242, file: !265, line: 144, baseType: !3665, size: 32, offset: 1504)
!19249 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !19218, file: !4097, line: 390, baseType: !19250, size: 896, offset: 4672)
!19250 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShapeKeyModifierData", file: !265, line: 816, baseType: !19251)
!19251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShapeKeyModifierData", file: !265, line: 814, size: 896, elements: !19252)
!19252 = !{!19253}
!19253 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !19251, file: !265, line: 815, baseType: !268, size: 896)
!19254 = !DILocation(line: 150, column: 22, scope: !19207)
!19255 = !DILocation(line: 152, column: 40, scope: !19207)
!19256 = !DILocation(line: 152, column: 7, scope: !19207)
!19257 = !DILocation(line: 152, column: 5, scope: !19207)
!19258 = !DILocation(line: 155, column: 2, scope: !19207)
!19259 = !DILocation(line: 155, column: 9, scope: !19260)
!19260 = distinct !DILexicalBlock(scope: !19261, file: !3, line: 155, column: 2)
!19261 = distinct !DILexicalBlock(scope: !19207, file: !3, line: 155, column: 2)
!19262 = !DILocation(line: 155, column: 2, scope: !19261)
!19263 = !DILocation(line: 156, column: 26, scope: !19264)
!19264 = distinct !DILexicalBlock(scope: !19265, file: !3, line: 156, column: 7)
!19265 = distinct !DILexicalBlock(scope: !19260, file: !3, line: 155, column: 28)
!19266 = !DILocation(line: 156, column: 33, scope: !19264)
!19267 = !DILocation(line: 156, column: 7, scope: !19264)
!19268 = !DILocation(line: 156, column: 7, scope: !19265)
!19269 = !DILocation(line: 157, column: 4, scope: !19264)
!19270 = !DILocation(line: 158, column: 2, scope: !19265)
!19271 = !DILocation(line: 155, column: 18, scope: !19260)
!19272 = !DILocation(line: 155, column: 22, scope: !19260)
!19273 = !DILocation(line: 155, column: 16, scope: !19260)
!19274 = !DILocation(line: 155, column: 2, scope: !19260)
!19275 = distinct !{!19275, !19262, !19276}
!19276 = !DILocation(line: 158, column: 2, scope: !19261)
!19277 = !DILocation(line: 160, column: 2, scope: !19207)
!19278 = !DILocation(line: 161, column: 1, scope: !19207)
!19279 = distinct !DISubprogram(name: "sculpt_dynamic_topology_toggle_exec", scope: !3, file: !3, line: 4752, type: !6917, scopeLine: 4753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19280 = !DILocalVariable(name: "C", arg: 1, scope: !19279, file: !3, line: 4752, type: !5279)
!19281 = !DILocation(line: 4752, column: 58, scope: !19279)
!19282 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !19279, file: !3, line: 4752, type: !6842)
!19283 = !DILocation(line: 4752, column: 73, scope: !19279)
!19284 = !DILocalVariable(name: "ob", scope: !19279, file: !3, line: 4754, type: !3739)
!19285 = !DILocation(line: 4754, column: 10, scope: !19279)
!19286 = !DILocation(line: 4754, column: 38, scope: !19279)
!19287 = !DILocation(line: 4754, column: 15, scope: !19279)
!19288 = !DILocalVariable(name: "ss", scope: !19279, file: !3, line: 4755, type: !5374)
!19289 = !DILocation(line: 4755, column: 17, scope: !19279)
!19290 = !DILocation(line: 4755, column: 22, scope: !19279)
!19291 = !DILocation(line: 4755, column: 26, scope: !19279)
!19292 = !DILocation(line: 4757, column: 6, scope: !19293)
!19293 = distinct !DILexicalBlock(scope: !19279, file: !3, line: 4757, column: 6)
!19294 = !DILocation(line: 4757, column: 10, scope: !19293)
!19295 = !DILocation(line: 4757, column: 6, scope: !19279)
!19296 = !DILocation(line: 4758, column: 3, scope: !19297)
!19297 = distinct !DILexicalBlock(scope: !19293, file: !3, line: 4757, column: 14)
!19298 = !DILocation(line: 4759, column: 25, scope: !19297)
!19299 = !DILocation(line: 4759, column: 3, scope: !19297)
!19300 = !DILocation(line: 4760, column: 35, scope: !19297)
!19301 = !DILocation(line: 4760, column: 3, scope: !19297)
!19302 = !DILocation(line: 4761, column: 2, scope: !19297)
!19303 = !DILocation(line: 4763, column: 3, scope: !19304)
!19304 = distinct !DILexicalBlock(scope: !19293, file: !3, line: 4762, column: 7)
!19305 = !DILocation(line: 4764, column: 34, scope: !19304)
!19306 = !DILocation(line: 4764, column: 3, scope: !19304)
!19307 = !DILocation(line: 4765, column: 25, scope: !19304)
!19308 = !DILocation(line: 4765, column: 3, scope: !19304)
!19309 = !DILocation(line: 4767, column: 2, scope: !19279)
!19310 = !DILocation(line: 4769, column: 2, scope: !19279)
!19311 = distinct !DISubprogram(name: "sculpt_init_session", scope: !3, file: !3, line: 4949, type: !19312, scopeLine: 4950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19312 = !DISubroutineType(types: !19313)
!19313 = !{null, !6167, !3739}
!19314 = !DILocalVariable(name: "scene", arg: 1, scope: !19311, file: !3, line: 4949, type: !6167)
!19315 = !DILocation(line: 4949, column: 40, scope: !19311)
!19316 = !DILocalVariable(name: "ob", arg: 2, scope: !19311, file: !3, line: 4949, type: !3739)
!19317 = !DILocation(line: 4949, column: 55, scope: !19311)
!19318 = !DILocation(line: 4951, column: 15, scope: !19311)
!19319 = !DILocation(line: 4951, column: 2, scope: !19311)
!19320 = !DILocation(line: 4951, column: 6, scope: !19311)
!19321 = !DILocation(line: 4951, column: 13, scope: !19311)
!19322 = !DILocation(line: 4953, column: 34, scope: !19311)
!19323 = !DILocation(line: 4953, column: 41, scope: !19311)
!19324 = !DILocation(line: 4953, column: 48, scope: !19311)
!19325 = !DILocation(line: 4953, column: 62, scope: !19311)
!19326 = !DILocation(line: 4953, column: 70, scope: !19311)
!19327 = !DILocation(line: 4953, column: 2, scope: !19311)
!19328 = !DILocation(line: 4954, column: 1, scope: !19311)
!19329 = distinct !DISubprogram(name: "sculpt_set_persistent_base_exec", scope: !3, file: !3, line: 4566, type: !6917, scopeLine: 4567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19330 = !DILocalVariable(name: "C", arg: 1, scope: !19329, file: !3, line: 4566, type: !5279)
!19331 = !DILocation(line: 4566, column: 54, scope: !19329)
!19332 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !19329, file: !3, line: 4566, type: !6842)
!19333 = !DILocation(line: 4566, column: 69, scope: !19329)
!19334 = !DILocalVariable(name: "ss", scope: !19329, file: !3, line: 4568, type: !5374)
!19335 = !DILocation(line: 4568, column: 17, scope: !19329)
!19336 = !DILocation(line: 4568, column: 45, scope: !19329)
!19337 = !DILocation(line: 4568, column: 22, scope: !19329)
!19338 = !DILocation(line: 4568, column: 49, scope: !19329)
!19339 = !DILocation(line: 4570, column: 6, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19329, file: !3, line: 4570, column: 6)
!19341 = !DILocation(line: 4570, column: 6, scope: !19329)
!19342 = !DILocation(line: 4571, column: 7, scope: !19343)
!19343 = distinct !DILexicalBlock(scope: !19344, file: !3, line: 4571, column: 7)
!19344 = distinct !DILexicalBlock(scope: !19340, file: !3, line: 4570, column: 10)
!19345 = !DILocation(line: 4571, column: 11, scope: !19343)
!19346 = !DILocation(line: 4571, column: 7, scope: !19344)
!19347 = !DILocation(line: 4572, column: 4, scope: !19343)
!19348 = !DILocation(line: 4572, column: 14, scope: !19343)
!19349 = !DILocation(line: 4572, column: 18, scope: !19343)
!19350 = !DILocation(line: 4573, column: 3, scope: !19344)
!19351 = !DILocation(line: 4573, column: 7, scope: !19344)
!19352 = !DILocation(line: 4573, column: 16, scope: !19344)
!19353 = !DILocation(line: 4574, column: 2, scope: !19344)
!19354 = !DILocation(line: 4576, column: 2, scope: !19329)
!19355 = distinct !DISubprogram(name: "sculpt_dynamic_topology_toggle_invoke", scope: !3, file: !3, line: 4803, type: !6840, scopeLine: 4804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19356 = !DILocalVariable(name: "C", arg: 1, scope: !19355, file: !3, line: 4803, type: !5279)
!19357 = !DILocation(line: 4803, column: 60, scope: !19355)
!19358 = !DILocalVariable(name: "op", arg: 2, scope: !19355, file: !3, line: 4803, type: !6842)
!19359 = !DILocation(line: 4803, column: 75, scope: !19355)
!19360 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !19355, file: !3, line: 4803, type: !6844)
!19361 = !DILocation(line: 4803, column: 94, scope: !19355)
!19362 = !DILocalVariable(name: "ob", scope: !19355, file: !3, line: 4805, type: !3739)
!19363 = !DILocation(line: 4805, column: 10, scope: !19355)
!19364 = !DILocation(line: 4805, column: 38, scope: !19355)
!19365 = !DILocation(line: 4805, column: 15, scope: !19355)
!19366 = !DILocalVariable(name: "me", scope: !19355, file: !3, line: 4806, type: !5012)
!19367 = !DILocation(line: 4806, column: 8, scope: !19355)
!19368 = !DILocation(line: 4806, column: 13, scope: !19355)
!19369 = !DILocation(line: 4806, column: 17, scope: !19355)
!19370 = !DILocalVariable(name: "ss", scope: !19355, file: !3, line: 4807, type: !5374)
!19371 = !DILocation(line: 4807, column: 17, scope: !19355)
!19372 = !DILocation(line: 4807, column: 22, scope: !19355)
!19373 = !DILocation(line: 4807, column: 26, scope: !19355)
!19374 = !DILocation(line: 4809, column: 7, scope: !19375)
!19375 = distinct !DILexicalBlock(scope: !19355, file: !3, line: 4809, column: 6)
!19376 = !DILocation(line: 4809, column: 11, scope: !19375)
!19377 = !DILocation(line: 4809, column: 6, scope: !19355)
!19378 = !DILocalVariable(name: "scene", scope: !19379, file: !3, line: 4810, type: !6167)
!19379 = distinct !DILexicalBlock(scope: !19375, file: !3, line: 4809, column: 15)
!19380 = !DILocation(line: 4810, column: 10, scope: !19379)
!19381 = !DILocation(line: 4810, column: 33, scope: !19379)
!19382 = !DILocation(line: 4810, column: 18, scope: !19379)
!19383 = !DILocalVariable(name: "md", scope: !19379, file: !3, line: 4811, type: !8051)
!19384 = !DILocation(line: 4811, column: 17, scope: !19379)
!19385 = !DILocalVariable(name: "virtualModifierData", scope: !19379, file: !3, line: 4812, type: !19217)
!19386 = !DILocation(line: 4812, column: 23, scope: !19379)
!19387 = !DILocalVariable(name: "i", scope: !19379, file: !3, line: 4813, type: !57)
!19388 = !DILocation(line: 4813, column: 7, scope: !19379)
!19389 = !DILocalVariable(name: "vdata", scope: !19379, file: !3, line: 4814, type: !2315)
!19390 = !DILocation(line: 4814, column: 8, scope: !19379)
!19391 = !DILocalVariable(name: "modifiers", scope: !19379, file: !3, line: 4815, type: !2315)
!19392 = !DILocation(line: 4815, column: 8, scope: !19379)
!19393 = !DILocation(line: 4817, column: 10, scope: !19394)
!19394 = distinct !DILexicalBlock(scope: !19379, file: !3, line: 4817, column: 3)
!19395 = !DILocation(line: 4817, column: 8, scope: !19394)
!19396 = !DILocation(line: 4817, column: 15, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19394, file: !3, line: 4817, column: 3)
!19398 = !DILocation(line: 4817, column: 17, scope: !19397)
!19399 = !DILocation(line: 4817, column: 3, scope: !19394)
!19400 = !DILocation(line: 4818, column: 9, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19402, file: !3, line: 4818, column: 8)
!19402 = distinct !DILexicalBlock(scope: !19397, file: !3, line: 4817, column: 37)
!19403 = !DILocation(line: 4818, column: 96, scope: !19401)
!19404 = !DILocation(line: 4819, column: 31, scope: !19401)
!19405 = !DILocation(line: 4819, column: 35, scope: !19401)
!19406 = !DILocation(line: 4819, column: 42, scope: !19401)
!19407 = !DILocation(line: 4819, column: 9, scope: !19401)
!19408 = !DILocation(line: 4819, column: 45, scope: !19401)
!19409 = !DILocation(line: 4820, column: 31, scope: !19401)
!19410 = !DILocation(line: 4820, column: 35, scope: !19401)
!19411 = !DILocation(line: 4820, column: 42, scope: !19401)
!19412 = !DILocation(line: 4820, column: 9, scope: !19401)
!19413 = !DILocation(line: 4820, column: 45, scope: !19401)
!19414 = !DILocation(line: 4821, column: 31, scope: !19401)
!19415 = !DILocation(line: 4821, column: 35, scope: !19401)
!19416 = !DILocation(line: 4821, column: 42, scope: !19401)
!19417 = !DILocation(line: 4821, column: 9, scope: !19401)
!19418 = !DILocation(line: 4818, column: 8, scope: !19402)
!19419 = !DILocation(line: 4823, column: 11, scope: !19420)
!19420 = distinct !DILexicalBlock(scope: !19401, file: !3, line: 4822, column: 4)
!19421 = !DILocation(line: 4824, column: 5, scope: !19420)
!19422 = !DILocation(line: 4826, column: 3, scope: !19402)
!19423 = !DILocation(line: 4817, column: 33, scope: !19397)
!19424 = !DILocation(line: 4817, column: 3, scope: !19397)
!19425 = distinct !{!19425, !19399, !19426}
!19426 = !DILocation(line: 4826, column: 3, scope: !19394)
!19427 = !DILocation(line: 4828, column: 41, scope: !19379)
!19428 = !DILocation(line: 4828, column: 8, scope: !19379)
!19429 = !DILocation(line: 4828, column: 6, scope: !19379)
!19430 = !DILocation(line: 4831, column: 3, scope: !19379)
!19431 = !DILocation(line: 4831, column: 10, scope: !19432)
!19432 = distinct !DILexicalBlock(scope: !19433, file: !3, line: 4831, column: 3)
!19433 = distinct !DILexicalBlock(scope: !19379, file: !3, line: 4831, column: 3)
!19434 = !DILocation(line: 4831, column: 3, scope: !19433)
!19435 = !DILocalVariable(name: "mti", scope: !19436, file: !3, line: 4832, type: !19437)
!19436 = distinct !DILexicalBlock(scope: !19432, file: !3, line: 4831, column: 29)
!19437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19438, size: 64)
!19438 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !4097, line: 309, baseType: !19439)
!19439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !4097, line: 121, size: 1728, elements: !19440)
!19440 = !{!19441, !19442, !19443, !19444, !19446, !19448, !19452, !19457, !19461, !19465, !19469, !19473, !19477, !19481, !19487, !19488, !19492, !19498, !19502, !19503, !19512, !19520}
!19441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19439, file: !4097, line: 123, baseType: !1869, size: 256)
!19442 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !19439, file: !4097, line: 128, baseType: !1869, size: 256, offset: 256)
!19443 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !19439, file: !4097, line: 131, baseType: !57, size: 32, offset: 512)
!19444 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !19439, file: !4097, line: 133, baseType: !19445, size: 32, offset: 544)
!19445 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !4097, line: 71, baseType: !4096)
!19446 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19439, file: !4097, line: 134, baseType: !19447, size: 32, offset: 576)
!19447 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !4097, line: 104, baseType: !4105)
!19448 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !19439, file: !4097, line: 142, baseType: !19449, size: 64, offset: 640)
!19449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19450, size: 64)
!19450 = !DISubroutineType(types: !19451)
!19451 = !{null, !272, !272}
!19452 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !19439, file: !4097, line: 151, baseType: !19453, size: 64, offset: 704)
!19453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19454, size: 64)
!19454 = !DISubroutineType(types: !19455)
!19455 = !{null, !272, !248, !2985, !2054, !57, !19456}
!19456 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !4097, line: 118, baseType: !4117)
!19457 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !19439, file: !4097, line: 157, baseType: !19458, size: 64, offset: 768)
!19458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19459, size: 64)
!19459 = !DISubroutineType(types: !19460)
!19460 = !{null, !272, !248, !2985, !2054, !2328, !57}
!19461 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !19439, file: !4097, line: 163, baseType: !19462, size: 64, offset: 832)
!19462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19463, size: 64)
!19463 = !DISubroutineType(types: !19464)
!19464 = !{null, !272, !248, !2745, !2985, !2054, !57}
!19465 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !19439, file: !4097, line: 168, baseType: !19466, size: 64, offset: 896)
!19466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19467, size: 64)
!19467 = !DISubroutineType(types: !19468)
!19468 = !{null, !272, !248, !2745, !2985, !2054, !2328, !57}
!19469 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !19439, file: !4097, line: 193, baseType: !19470, size: 64, offset: 960)
!19470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19471, size: 64)
!19471 = !DISubroutineType(types: !19472)
!19472 = !{!2985, !272, !248, !2985, !19456}
!19473 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !19439, file: !4097, line: 204, baseType: !19474, size: 64, offset: 1024)
!19474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19475, size: 64)
!19475 = !DISubroutineType(types: !19476)
!19476 = !{!2985, !272, !248, !2745, !2985, !19456}
!19477 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !19439, file: !4097, line: 217, baseType: !19478, size: 64, offset: 1088)
!19478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19479, size: 64)
!19479 = !DISubroutineType(types: !19480)
!19480 = !{null, !272}
!19481 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !19439, file: !4097, line: 235, baseType: !19482, size: 64, offset: 1152)
!19482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19483, size: 64)
!19483 = !DISubroutineType(types: !19484)
!19484 = !{!19485, !248, !272}
!19485 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !19486, line: 48, baseType: !2008)
!19486 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19487 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !19439, file: !4097, line: 242, baseType: !19478, size: 64, offset: 1216)
!19488 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !19439, file: !4097, line: 252, baseType: !19489, size: 64, offset: 1280)
!19489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19490, size: 64)
!19490 = !DISubroutineType(types: !19491)
!19491 = !{!2315, !272, !57}
!19492 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !19439, file: !4097, line: 259, baseType: !19493, size: 64, offset: 1344)
!19493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19494, size: 64)
!19494 = !DISubroutineType(types: !19495)
!19495 = !{null, !272, !1910, !280, !248, !19496}
!19496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19497, size: 64)
!19497 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !4097, line: 38, flags: DIFlagFwdDecl)
!19498 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !19439, file: !4097, line: 267, baseType: !19499, size: 64, offset: 1408)
!19499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19500, size: 64)
!19500 = !DISubroutineType(types: !19501)
!19501 = !{!2315, !272}
!19502 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !19439, file: !4097, line: 277, baseType: !19499, size: 64, offset: 1472)
!19503 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !19439, file: !4097, line: 286, baseType: !19504, size: 64, offset: 1536)
!19504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19505, size: 64)
!19505 = !DISubroutineType(types: !19506)
!19506 = !{null, !272, !248, !19507, !26}
!19507 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !4097, line: 106, baseType: !19508)
!19508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19509, size: 64)
!19509 = !DISubroutineType(types: !19510)
!19510 = !{null, !26, !248, !19511}
!19511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!19512 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !19439, file: !4097, line: 297, baseType: !19513, size: 64, offset: 1600)
!19513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19514, size: 64)
!19514 = !DISubroutineType(types: !19515)
!19515 = !{null, !272, !248, !19516, !26}
!19516 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !4097, line: 107, baseType: !19517)
!19517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19518, size: 64)
!19518 = !DISubroutineType(types: !19519)
!19519 = !{null, !26, !248, !1009}
!19520 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !19439, file: !4097, line: 307, baseType: !19521, size: 64, offset: 1664)
!19521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19522, size: 64)
!19522 = !DISubroutineType(types: !19523)
!19523 = !{null, !272, !248, !19524, !26}
!19524 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !4097, line: 108, baseType: !19525)
!19525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19526, size: 64)
!19526 = !DISubroutineType(types: !19527)
!19527 = !{null, !26, !248, !272, !486}
!19528 = !DILocation(line: 4832, column: 22, scope: !19436)
!19529 = !DILocation(line: 4832, column: 49, scope: !19436)
!19530 = !DILocation(line: 4832, column: 53, scope: !19436)
!19531 = !DILocation(line: 4832, column: 28, scope: !19436)
!19532 = !DILocation(line: 4833, column: 28, scope: !19533)
!19533 = distinct !DILexicalBlock(scope: !19436, file: !3, line: 4833, column: 8)
!19534 = !DILocation(line: 4833, column: 35, scope: !19533)
!19535 = !DILocation(line: 4833, column: 9, scope: !19533)
!19536 = !DILocation(line: 4833, column: 8, scope: !19436)
!19537 = !DILocation(line: 4833, column: 64, scope: !19533)
!19538 = !DILocation(line: 4835, column: 8, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19436, file: !3, line: 4835, column: 8)
!19540 = !DILocation(line: 4835, column: 13, scope: !19539)
!19541 = !DILocation(line: 4835, column: 18, scope: !19539)
!19542 = !DILocation(line: 4835, column: 8, scope: !19436)
!19543 = !DILocation(line: 4836, column: 15, scope: !19544)
!19544 = distinct !DILexicalBlock(scope: !19539, file: !3, line: 4835, column: 53)
!19545 = !DILocation(line: 4837, column: 5, scope: !19544)
!19546 = !DILocation(line: 4839, column: 3, scope: !19436)
!19547 = !DILocation(line: 4831, column: 19, scope: !19432)
!19548 = !DILocation(line: 4831, column: 23, scope: !19432)
!19549 = !DILocation(line: 4831, column: 17, scope: !19432)
!19550 = !DILocation(line: 4831, column: 3, scope: !19432)
!19551 = distinct !{!19551, !19434, !19552}
!19552 = !DILocation(line: 4839, column: 3, scope: !19433)
!19553 = !DILocation(line: 4841, column: 7, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19379, file: !3, line: 4841, column: 7)
!19555 = !DILocation(line: 4841, column: 13, scope: !19554)
!19556 = !DILocation(line: 4841, column: 16, scope: !19554)
!19557 = !DILocation(line: 4841, column: 7, scope: !19379)
!19558 = !DILocation(line: 4843, column: 33, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19554, file: !3, line: 4841, column: 27)
!19560 = !DILocation(line: 4843, column: 36, scope: !19559)
!19561 = !DILocation(line: 4843, column: 40, scope: !19559)
!19562 = !DILocation(line: 4843, column: 46, scope: !19559)
!19563 = !DILocation(line: 4843, column: 53, scope: !19559)
!19564 = !DILocation(line: 4843, column: 11, scope: !19559)
!19565 = !DILocation(line: 4843, column: 4, scope: !19559)
!19566 = !DILocation(line: 4845, column: 2, scope: !19379)
!19567 = !DILocation(line: 4847, column: 45, scope: !19355)
!19568 = !DILocation(line: 4847, column: 48, scope: !19355)
!19569 = !DILocation(line: 4847, column: 9, scope: !19355)
!19570 = !DILocation(line: 4847, column: 2, scope: !19355)
!19571 = !DILocation(line: 4848, column: 1, scope: !19355)
!19572 = distinct !DISubprogram(name: "dyntopo_warning_popup", scope: !3, file: !3, line: 4773, type: !19573, scopeLine: 4774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19573 = !DISubroutineType(types: !19574)
!19574 = !{!57, !5279, !6444, !2315, !2315}
!19575 = !DILocalVariable(name: "C", arg: 1, scope: !19572, file: !3, line: 4773, type: !5279)
!19576 = !DILocation(line: 4773, column: 44, scope: !19572)
!19577 = !DILocalVariable(name: "ot", arg: 2, scope: !19572, file: !3, line: 4773, type: !6444)
!19578 = !DILocation(line: 4773, column: 63, scope: !19572)
!19579 = !DILocalVariable(name: "vdata", arg: 3, scope: !19572, file: !3, line: 4773, type: !2315)
!19580 = !DILocation(line: 4773, column: 72, scope: !19572)
!19581 = !DILocalVariable(name: "modifiers", arg: 4, scope: !19572, file: !3, line: 4773, type: !2315)
!19582 = !DILocation(line: 4773, column: 84, scope: !19572)
!19583 = !DILocalVariable(name: "pup", scope: !19572, file: !3, line: 4775, type: !19584)
!19584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19585, size: 64)
!19585 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !19586, line: 355, baseType: !19587)
!19586 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19587 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !19586, line: 355, flags: DIFlagFwdDecl)
!19588 = !DILocation(line: 4775, column: 15, scope: !19572)
!19589 = !DILocation(line: 4775, column: 36, scope: !19572)
!19590 = !DILocation(line: 4775, column: 21, scope: !19572)
!19591 = !DILocalVariable(name: "layout", scope: !19572, file: !3, line: 4776, type: !19592)
!19592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19593, size: 64)
!19593 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !19586, line: 85, baseType: !473)
!19594 = !DILocation(line: 4776, column: 12, scope: !19572)
!19595 = !DILocation(line: 4776, column: 37, scope: !19572)
!19596 = !DILocation(line: 4776, column: 21, scope: !19572)
!19597 = !DILocation(line: 4778, column: 6, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19572, file: !3, line: 4778, column: 6)
!19599 = !DILocation(line: 4778, column: 6, scope: !19572)
!19600 = !DILocalVariable(name: "msg_error", scope: !19601, file: !3, line: 4779, type: !486)
!19601 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 4778, column: 13)
!19602 = !DILocation(line: 4779, column: 15, scope: !19601)
!19603 = !DILocalVariable(name: "msg", scope: !19601, file: !3, line: 4780, type: !486)
!19604 = !DILocation(line: 4780, column: 15, scope: !19601)
!19605 = !DILocation(line: 4781, column: 11, scope: !19601)
!19606 = !DILocation(line: 4781, column: 19, scope: !19601)
!19607 = !DILocation(line: 4781, column: 3, scope: !19601)
!19608 = !DILocation(line: 4782, column: 11, scope: !19601)
!19609 = !DILocation(line: 4782, column: 19, scope: !19601)
!19610 = !DILocation(line: 4782, column: 3, scope: !19601)
!19611 = !DILocation(line: 4783, column: 11, scope: !19601)
!19612 = !DILocation(line: 4783, column: 3, scope: !19601)
!19613 = !DILocation(line: 4784, column: 2, scope: !19601)
!19614 = !DILocation(line: 4786, column: 6, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19572, file: !3, line: 4786, column: 6)
!19616 = !DILocation(line: 4786, column: 6, scope: !19572)
!19617 = !DILocalVariable(name: "msg_error", scope: !19618, file: !3, line: 4787, type: !486)
!19618 = distinct !DILexicalBlock(scope: !19615, file: !3, line: 4786, column: 17)
!19619 = !DILocation(line: 4787, column: 15, scope: !19618)
!19620 = !DILocalVariable(name: "msg", scope: !19618, file: !3, line: 4788, type: !486)
!19621 = !DILocation(line: 4788, column: 15, scope: !19618)
!19622 = !DILocation(line: 4790, column: 11, scope: !19618)
!19623 = !DILocation(line: 4790, column: 19, scope: !19618)
!19624 = !DILocation(line: 4790, column: 3, scope: !19618)
!19625 = !DILocation(line: 4791, column: 11, scope: !19618)
!19626 = !DILocation(line: 4791, column: 19, scope: !19618)
!19627 = !DILocation(line: 4791, column: 3, scope: !19618)
!19628 = !DILocation(line: 4792, column: 11, scope: !19618)
!19629 = !DILocation(line: 4792, column: 3, scope: !19618)
!19630 = !DILocation(line: 4793, column: 2, scope: !19618)
!19631 = !DILocation(line: 4795, column: 18, scope: !19572)
!19632 = !DILocation(line: 4795, column: 26, scope: !19572)
!19633 = !DILocation(line: 4795, column: 2, scope: !19572)
!19634 = !DILocation(line: 4797, column: 15, scope: !19572)
!19635 = !DILocation(line: 4797, column: 18, scope: !19572)
!19636 = !DILocation(line: 4797, column: 2, scope: !19572)
!19637 = !DILocation(line: 4799, column: 2, scope: !19572)
!19638 = distinct !DISubprogram(name: "sculpt_optimize_exec", scope: !3, file: !3, line: 4867, type: !6917, scopeLine: 4868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19639 = !DILocalVariable(name: "C", arg: 1, scope: !19638, file: !3, line: 4867, type: !5279)
!19640 = !DILocation(line: 4867, column: 43, scope: !19638)
!19641 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !19638, file: !3, line: 4867, type: !6842)
!19642 = !DILocation(line: 4867, column: 58, scope: !19638)
!19643 = !DILocalVariable(name: "ob", scope: !19638, file: !3, line: 4869, type: !3739)
!19644 = !DILocation(line: 4869, column: 10, scope: !19638)
!19645 = !DILocation(line: 4869, column: 38, scope: !19638)
!19646 = !DILocation(line: 4869, column: 15, scope: !19638)
!19647 = !DILocation(line: 4871, column: 20, scope: !19638)
!19648 = !DILocation(line: 4871, column: 2, scope: !19638)
!19649 = !DILocation(line: 4872, column: 24, scope: !19638)
!19650 = !DILocation(line: 4872, column: 48, scope: !19638)
!19651 = !DILocation(line: 4872, column: 2, scope: !19638)
!19652 = !DILocation(line: 4874, column: 2, scope: !19638)
!19653 = distinct !DISubprogram(name: "sculpt_and_dynamic_topology_poll", scope: !3, file: !3, line: 4877, type: !5583, scopeLine: 4878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19654 = !DILocalVariable(name: "C", arg: 1, scope: !19653, file: !3, line: 4877, type: !5279)
!19655 = !DILocation(line: 4877, column: 55, scope: !19653)
!19656 = !DILocalVariable(name: "ob", scope: !19653, file: !3, line: 4879, type: !3739)
!19657 = !DILocation(line: 4879, column: 10, scope: !19653)
!19658 = !DILocation(line: 4879, column: 38, scope: !19653)
!19659 = !DILocation(line: 4879, column: 15, scope: !19653)
!19660 = !DILocation(line: 4881, column: 26, scope: !19653)
!19661 = !DILocation(line: 4881, column: 9, scope: !19653)
!19662 = !DILocation(line: 4881, column: 29, scope: !19653)
!19663 = !DILocation(line: 4881, column: 32, scope: !19653)
!19664 = !DILocation(line: 4881, column: 36, scope: !19653)
!19665 = !DILocation(line: 4881, column: 44, scope: !19653)
!19666 = !DILocation(line: 0, scope: !19653)
!19667 = !DILocation(line: 4881, column: 2, scope: !19653)
!19668 = distinct !DISubprogram(name: "sculpt_symmetrize_exec", scope: !3, file: !3, line: 4904, type: !6917, scopeLine: 4905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19669 = !DILocalVariable(name: "C", arg: 1, scope: !19668, file: !3, line: 4904, type: !5279)
!19670 = !DILocation(line: 4904, column: 45, scope: !19668)
!19671 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !19668, file: !3, line: 4904, type: !6842)
!19672 = !DILocation(line: 4904, column: 60, scope: !19668)
!19673 = !DILocalVariable(name: "ob", scope: !19668, file: !3, line: 4906, type: !3739)
!19674 = !DILocation(line: 4906, column: 10, scope: !19668)
!19675 = !DILocation(line: 4906, column: 38, scope: !19668)
!19676 = !DILocation(line: 4906, column: 15, scope: !19668)
!19677 = !DILocalVariable(name: "sd", scope: !19668, file: !3, line: 4907, type: !19678)
!19678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19679, size: 64)
!19679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!19680 = !DILocation(line: 4907, column: 16, scope: !19668)
!19681 = !DILocation(line: 4907, column: 44, scope: !19668)
!19682 = !DILocation(line: 4907, column: 21, scope: !19668)
!19683 = !DILocation(line: 4907, column: 48, scope: !19668)
!19684 = !DILocalVariable(name: "ss", scope: !19668, file: !3, line: 4908, type: !5374)
!19685 = !DILocation(line: 4908, column: 17, scope: !19668)
!19686 = !DILocation(line: 4908, column: 22, scope: !19668)
!19687 = !DILocation(line: 4908, column: 26, scope: !19668)
!19688 = !DILocation(line: 4914, column: 2, scope: !19668)
!19689 = !DILocation(line: 4915, column: 24, scope: !19668)
!19690 = !DILocation(line: 4915, column: 2, scope: !19668)
!19691 = !DILocation(line: 4916, column: 28, scope: !19668)
!19692 = !DILocation(line: 4916, column: 32, scope: !19668)
!19693 = !DILocation(line: 4916, column: 36, scope: !19668)
!19694 = !DILocation(line: 4916, column: 40, scope: !19668)
!19695 = !DILocation(line: 4916, column: 2, scope: !19668)
!19696 = !DILocation(line: 4919, column: 15, scope: !19668)
!19697 = !DILocation(line: 4919, column: 19, scope: !19668)
!19698 = !DILocation(line: 4921, column: 15, scope: !19668)
!19699 = !DILocation(line: 4921, column: 19, scope: !19668)
!19700 = !DILocation(line: 4919, column: 2, scope: !19668)
!19701 = !DILocation(line: 4922, column: 38, scope: !19668)
!19702 = !DILocation(line: 4922, column: 42, scope: !19668)
!19703 = !DILocation(line: 4922, column: 2, scope: !19668)
!19704 = !DILocation(line: 4925, column: 19, scope: !19668)
!19705 = !DILocation(line: 4925, column: 23, scope: !19668)
!19706 = !DILocation(line: 4925, column: 27, scope: !19668)
!19707 = !DILocation(line: 4925, column: 31, scope: !19668)
!19708 = !DILocation(line: 4925, column: 2, scope: !19668)
!19709 = !DILocation(line: 4926, column: 2, scope: !19668)
!19710 = !DILocation(line: 4929, column: 20, scope: !19668)
!19711 = !DILocation(line: 4929, column: 2, scope: !19668)
!19712 = !DILocation(line: 4930, column: 24, scope: !19668)
!19713 = !DILocation(line: 4930, column: 48, scope: !19668)
!19714 = !DILocation(line: 4930, column: 2, scope: !19668)
!19715 = !DILocation(line: 4932, column: 2, scope: !19668)
!19716 = distinct !DISubprogram(name: "sculpt_detail_flood_fill_exec", scope: !3, file: !3, line: 5089, type: !6917, scopeLine: 5090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19717 = !DILocalVariable(name: "C", arg: 1, scope: !19716, file: !3, line: 5089, type: !5279)
!19718 = !DILocation(line: 5089, column: 52, scope: !19716)
!19719 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !19716, file: !3, line: 5089, type: !6842)
!19720 = !DILocation(line: 5089, column: 67, scope: !19716)
!19721 = !DILocalVariable(name: "sd", scope: !19716, file: !3, line: 5091, type: !6)
!19722 = !DILocation(line: 5091, column: 10, scope: !19716)
!19723 = !DILocation(line: 5091, column: 38, scope: !19716)
!19724 = !DILocation(line: 5091, column: 15, scope: !19716)
!19725 = !DILocation(line: 5091, column: 42, scope: !19716)
!19726 = !DILocalVariable(name: "ob", scope: !19716, file: !3, line: 5092, type: !3739)
!19727 = !DILocation(line: 5092, column: 10, scope: !19716)
!19728 = !DILocation(line: 5092, column: 38, scope: !19716)
!19729 = !DILocation(line: 5092, column: 15, scope: !19716)
!19730 = !DILocalVariable(name: "ss", scope: !19716, file: !3, line: 5093, type: !5374)
!19731 = !DILocation(line: 5093, column: 17, scope: !19716)
!19732 = !DILocation(line: 5093, column: 22, scope: !19716)
!19733 = !DILocation(line: 5093, column: 26, scope: !19716)
!19734 = !DILocalVariable(name: "size", scope: !19716, file: !3, line: 5094, type: !153)
!19735 = !DILocation(line: 5094, column: 8, scope: !19716)
!19736 = !DILocalVariable(name: "bb_min", scope: !19716, file: !3, line: 5095, type: !233)
!19737 = !DILocation(line: 5095, column: 8, scope: !19716)
!19738 = !DILocalVariable(name: "bb_max", scope: !19716, file: !3, line: 5095, type: !233)
!19739 = !DILocation(line: 5095, column: 19, scope: !19716)
!19740 = !DILocalVariable(name: "i", scope: !19716, file: !3, line: 5096, type: !57)
!19741 = !DILocation(line: 5096, column: 6, scope: !19716)
!19742 = !DILocalVariable(name: "totnodes", scope: !19716, file: !3, line: 5096, type: !57)
!19743 = !DILocation(line: 5096, column: 9, scope: !19716)
!19744 = !DILocalVariable(name: "nodes", scope: !19716, file: !3, line: 5097, type: !3741)
!19745 = !DILocation(line: 5097, column: 13, scope: !19716)
!19746 = !DILocation(line: 5099, column: 25, scope: !19716)
!19747 = !DILocation(line: 5099, column: 29, scope: !19716)
!19748 = !DILocation(line: 5099, column: 2, scope: !19716)
!19749 = !DILocation(line: 5101, column: 7, scope: !19750)
!19750 = distinct !DILexicalBlock(scope: !19716, file: !3, line: 5101, column: 6)
!19751 = !DILocation(line: 5101, column: 6, scope: !19716)
!19752 = !DILocation(line: 5102, column: 3, scope: !19750)
!19753 = !DILocation(line: 5104, column: 9, scope: !19754)
!19754 = distinct !DILexicalBlock(scope: !19716, file: !3, line: 5104, column: 2)
!19755 = !DILocation(line: 5104, column: 7, scope: !19754)
!19756 = !DILocation(line: 5104, column: 14, scope: !19757)
!19757 = distinct !DILexicalBlock(scope: !19754, file: !3, line: 5104, column: 2)
!19758 = !DILocation(line: 5104, column: 18, scope: !19757)
!19759 = !DILocation(line: 5104, column: 16, scope: !19757)
!19760 = !DILocation(line: 5104, column: 2, scope: !19754)
!19761 = !DILocation(line: 5105, column: 38, scope: !19762)
!19762 = distinct !DILexicalBlock(scope: !19757, file: !3, line: 5104, column: 33)
!19763 = !DILocation(line: 5105, column: 44, scope: !19762)
!19764 = !DILocation(line: 5105, column: 3, scope: !19762)
!19765 = !DILocation(line: 5106, column: 2, scope: !19762)
!19766 = !DILocation(line: 5104, column: 29, scope: !19757)
!19767 = !DILocation(line: 5104, column: 2, scope: !19757)
!19768 = distinct !{!19768, !19760, !19769}
!19769 = !DILocation(line: 5106, column: 2, scope: !19754)
!19770 = !DILocation(line: 5108, column: 24, scope: !19716)
!19771 = !DILocation(line: 5108, column: 28, scope: !19716)
!19772 = !DILocation(line: 5108, column: 36, scope: !19716)
!19773 = !DILocation(line: 5108, column: 42, scope: !19716)
!19774 = !DILocation(line: 5108, column: 50, scope: !19716)
!19775 = !DILocation(line: 5108, column: 2, scope: !19716)
!19776 = !DILocation(line: 5109, column: 12, scope: !19716)
!19777 = !DILocation(line: 5109, column: 20, scope: !19716)
!19778 = !DILocation(line: 5109, column: 2, scope: !19716)
!19779 = !DILocation(line: 5110, column: 10, scope: !19716)
!19780 = !DILocation(line: 5110, column: 2, scope: !19716)
!19781 = !DILocation(line: 5111, column: 17, scope: !19716)
!19782 = !DILocation(line: 5111, column: 28, scope: !19716)
!19783 = !DILocation(line: 5111, column: 39, scope: !19716)
!19784 = !DILocation(line: 5111, column: 9, scope: !19716)
!19785 = !DILocation(line: 5111, column: 7, scope: !19716)
!19786 = !DILocation(line: 5114, column: 33, scope: !19716)
!19787 = !DILocation(line: 5114, column: 37, scope: !19716)
!19788 = !DILocation(line: 5114, column: 43, scope: !19716)
!19789 = !DILocation(line: 5114, column: 47, scope: !19716)
!19790 = !DILocation(line: 5114, column: 63, scope: !19716)
!19791 = !DILocation(line: 5114, column: 2, scope: !19716)
!19792 = !DILocation(line: 5116, column: 2, scope: !19716)
!19793 = !DILocation(line: 5117, column: 24, scope: !19716)
!19794 = !DILocation(line: 5117, column: 2, scope: !19716)
!19795 = !DILocation(line: 5119, column: 2, scope: !19716)
!19796 = !DILocation(line: 5119, column: 40, scope: !19716)
!19797 = !DILocation(line: 5119, column: 44, scope: !19716)
!19798 = !DILocation(line: 5119, column: 82, scope: !19716)
!19799 = !DILocation(line: 5119, column: 90, scope: !19716)
!19800 = !DILocation(line: 5119, column: 9, scope: !19716)
!19801 = !DILocation(line: 5120, column: 10, scope: !19802)
!19802 = distinct !DILexicalBlock(scope: !19803, file: !3, line: 5120, column: 3)
!19803 = distinct !DILexicalBlock(scope: !19716, file: !3, line: 5119, column: 97)
!19804 = !DILocation(line: 5120, column: 8, scope: !19802)
!19805 = !DILocation(line: 5120, column: 15, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19802, file: !3, line: 5120, column: 3)
!19807 = !DILocation(line: 5120, column: 19, scope: !19806)
!19808 = !DILocation(line: 5120, column: 17, scope: !19806)
!19809 = !DILocation(line: 5120, column: 3, scope: !19802)
!19810 = !DILocation(line: 5121, column: 39, scope: !19806)
!19811 = !DILocation(line: 5121, column: 45, scope: !19806)
!19812 = !DILocation(line: 5121, column: 4, scope: !19806)
!19813 = !DILocation(line: 5120, column: 30, scope: !19806)
!19814 = !DILocation(line: 5120, column: 3, scope: !19806)
!19815 = distinct !{!19815, !19809, !19816}
!19816 = !DILocation(line: 5121, column: 47, scope: !19802)
!19817 = distinct !{!19817, !19795, !19818}
!19818 = !DILocation(line: 5122, column: 2, scope: !19716)
!19819 = !DILocation(line: 5124, column: 2, scope: !19716)
!19820 = !DILocation(line: 5124, column: 12, scope: !19716)
!19821 = !DILocation(line: 5125, column: 2, scope: !19716)
!19822 = !DILocation(line: 5128, column: 20, scope: !19716)
!19823 = !DILocation(line: 5128, column: 2, scope: !19716)
!19824 = !DILocation(line: 5130, column: 24, scope: !19716)
!19825 = !DILocation(line: 5130, column: 48, scope: !19716)
!19826 = !DILocation(line: 5130, column: 2, scope: !19716)
!19827 = !DILocation(line: 5132, column: 2, scope: !19716)
!19828 = !DILocation(line: 5133, column: 1, scope: !19716)
!19829 = distinct !DISubprogram(name: "sculpt_and_dynamic_topology_constant_detail_poll", scope: !3, file: !3, line: 5081, type: !5583, scopeLine: 5082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19830 = !DILocalVariable(name: "C", arg: 1, scope: !19829, file: !3, line: 5081, type: !5279)
!19831 = !DILocation(line: 5081, column: 71, scope: !19829)
!19832 = !DILocalVariable(name: "ob", scope: !19829, file: !3, line: 5083, type: !3739)
!19833 = !DILocation(line: 5083, column: 10, scope: !19829)
!19834 = !DILocation(line: 5083, column: 38, scope: !19829)
!19835 = !DILocation(line: 5083, column: 15, scope: !19829)
!19836 = !DILocalVariable(name: "sd", scope: !19829, file: !3, line: 5084, type: !6)
!19837 = !DILocation(line: 5084, column: 10, scope: !19829)
!19838 = !DILocation(line: 5084, column: 38, scope: !19829)
!19839 = !DILocation(line: 5084, column: 15, scope: !19829)
!19840 = !DILocation(line: 5084, column: 42, scope: !19829)
!19841 = !DILocation(line: 5086, column: 26, scope: !19829)
!19842 = !DILocation(line: 5086, column: 9, scope: !19829)
!19843 = !DILocation(line: 5086, column: 29, scope: !19829)
!19844 = !DILocation(line: 5086, column: 32, scope: !19829)
!19845 = !DILocation(line: 5086, column: 36, scope: !19829)
!19846 = !DILocation(line: 5086, column: 44, scope: !19829)
!19847 = !DILocation(line: 5086, column: 47, scope: !19829)
!19848 = !DILocation(line: 5086, column: 51, scope: !19829)
!19849 = !DILocation(line: 5086, column: 55, scope: !19829)
!19850 = !DILocation(line: 5086, column: 61, scope: !19829)
!19851 = !DILocation(line: 0, scope: !19829)
!19852 = !DILocation(line: 5086, column: 2, scope: !19829)
!19853 = distinct !DISubprogram(name: "max_fff", scope: !8029, file: !8029, line: 224, type: !19854, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19854 = !DISubroutineType(types: !19855)
!19855 = !{!153, !153, !153, !153}
!19856 = !DILocalVariable(name: "a", arg: 1, scope: !19853, file: !8029, line: 224, type: !153)
!19857 = !DILocation(line: 224, column: 29, scope: !19853)
!19858 = !DILocalVariable(name: "b", arg: 2, scope: !19853, file: !8029, line: 224, type: !153)
!19859 = !DILocation(line: 224, column: 38, scope: !19853)
!19860 = !DILocalVariable(name: "c", arg: 3, scope: !19853, file: !8029, line: 224, type: !153)
!19861 = !DILocation(line: 224, column: 47, scope: !19853)
!19862 = !DILocation(line: 226, column: 23, scope: !19853)
!19863 = !DILocation(line: 226, column: 26, scope: !19853)
!19864 = !DILocation(line: 226, column: 16, scope: !19853)
!19865 = !DILocation(line: 226, column: 30, scope: !19853)
!19866 = !DILocation(line: 226, column: 9, scope: !19853)
!19867 = !DILocation(line: 226, column: 2, scope: !19853)
!19868 = distinct !DISubprogram(name: "sculpt_sample_detail_size_invoke", scope: !3, file: !3, line: 5189, type: !6840, scopeLine: 5190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19869 = !DILocalVariable(name: "C", arg: 1, scope: !19868, file: !3, line: 5189, type: !5279)
!19870 = !DILocation(line: 5189, column: 55, scope: !19868)
!19871 = !DILocalVariable(name: "op", arg: 2, scope: !19868, file: !3, line: 5189, type: !6842)
!19872 = !DILocation(line: 5189, column: 70, scope: !19868)
!19873 = !DILocalVariable(name: "UNUSED_e", arg: 3, scope: !19868, file: !3, line: 5189, type: !6844)
!19874 = !DILocation(line: 5189, column: 89, scope: !19868)
!19875 = !DILocalVariable(name: "sa", scope: !19868, file: !3, line: 5191, type: !19876)
!19876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19877, size: 64)
!19877 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !598, line: 228, baseType: !19878)
!19878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !598, line: 203, size: 1280, elements: !19879)
!19879 = !{!19880, !19882, !19883, !19900, !19901, !19902, !19903, !19906, !19907, !19908, !19909, !19910, !19911, !19912, !19913, !19914, !19915, !19916, !19917, !19920, !19921, !19922, !19923}
!19880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !19878, file: !598, line: 204, baseType: !19881, size: 64)
!19881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19878, size: 64)
!19882 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !19878, file: !598, line: 204, baseType: !19881, size: 64, offset: 64)
!19883 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !19878, file: !598, line: 206, baseType: !19884, size: 64, offset: 128)
!19884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19885, size: 64)
!19885 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !598, line: 87, baseType: !19886)
!19886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !598, line: 82, size: 256, elements: !19887)
!19887 = !{!19888, !19890, !19891, !19892, !19898, !19899}
!19888 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !19886, file: !598, line: 83, baseType: !19889, size: 64)
!19889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19886, size: 64)
!19890 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !19886, file: !598, line: 83, baseType: !19889, size: 64, offset: 64)
!19891 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !19886, file: !598, line: 83, baseType: !19889, size: 64, offset: 128)
!19892 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !19886, file: !598, line: 84, baseType: !19893, size: 32, offset: 192)
!19893 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !199, line: 43, baseType: !19894)
!19894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !199, line: 41, size: 32, elements: !19895)
!19895 = !{!19896, !19897}
!19896 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !19894, file: !199, line: 42, baseType: !55, size: 16)
!19897 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !19894, file: !199, line: 42, baseType: !55, size: 16, offset: 16)
!19898 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !19886, file: !598, line: 86, baseType: !55, size: 16, offset: 224)
!19899 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !19886, file: !598, line: 86, baseType: !55, size: 16, offset: 240)
!19900 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !19878, file: !598, line: 206, baseType: !19884, size: 64, offset: 192)
!19901 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !19878, file: !598, line: 206, baseType: !19884, size: 64, offset: 256)
!19902 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !19878, file: !598, line: 206, baseType: !19884, size: 64, offset: 320)
!19903 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !19878, file: !598, line: 207, baseType: !19904, size: 64, offset: 384)
!19904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19905, size: 64)
!19905 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !598, line: 80, baseType: !657)
!19906 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !19878, file: !598, line: 209, baseType: !610, size: 128, offset: 448)
!19907 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !19878, file: !598, line: 211, baseType: !42, size: 8, offset: 576)
!19908 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !19878, file: !598, line: 211, baseType: !42, size: 8, offset: 584)
!19909 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !19878, file: !598, line: 212, baseType: !55, size: 16, offset: 592)
!19910 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !19878, file: !598, line: 212, baseType: !55, size: 16, offset: 608)
!19911 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !19878, file: !598, line: 214, baseType: !55, size: 16, offset: 624)
!19912 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !19878, file: !598, line: 215, baseType: !55, size: 16, offset: 640)
!19913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !19878, file: !598, line: 216, baseType: !55, size: 16, offset: 656)
!19914 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !19878, file: !598, line: 217, baseType: !55, size: 16, offset: 672)
!19915 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !19878, file: !598, line: 219, baseType: !42, size: 8, offset: 688)
!19916 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !19878, file: !598, line: 219, baseType: !42, size: 8, offset: 696)
!19917 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !19878, file: !598, line: 221, baseType: !19918, size: 64, offset: 704)
!19918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19919, size: 64)
!19919 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !598, line: 39, flags: DIFlagFwdDecl)
!19920 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !19878, file: !598, line: 223, baseType: !82, size: 128, offset: 768)
!19921 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !19878, file: !598, line: 224, baseType: !82, size: 128, offset: 896)
!19922 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !19878, file: !598, line: 225, baseType: !82, size: 128, offset: 1024)
!19923 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !19878, file: !598, line: 227, baseType: !82, size: 128, offset: 1152)
!19924 = !DILocation(line: 5191, column: 11, scope: !19868)
!19925 = !DILocation(line: 5191, column: 28, scope: !19868)
!19926 = !DILocation(line: 5191, column: 16, scope: !19868)
!19927 = !DILocation(line: 5192, column: 22, scope: !19868)
!19928 = !DILocation(line: 5192, column: 2, scope: !19868)
!19929 = !DILocation(line: 5193, column: 36, scope: !19868)
!19930 = !DILocation(line: 5193, column: 22, scope: !19868)
!19931 = !DILocation(line: 5193, column: 2, scope: !19868)
!19932 = !DILocation(line: 5194, column: 29, scope: !19868)
!19933 = !DILocation(line: 5194, column: 32, scope: !19868)
!19934 = !DILocation(line: 5194, column: 2, scope: !19868)
!19935 = !DILocation(line: 5195, column: 2, scope: !19868)
!19936 = distinct !DISubprogram(name: "sculpt_sample_detail_size_exec", scope: !3, file: !3, line: 5180, type: !6917, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19937 = !DILocalVariable(name: "C", arg: 1, scope: !19936, file: !3, line: 5180, type: !5279)
!19938 = !DILocation(line: 5180, column: 53, scope: !19936)
!19939 = !DILocalVariable(name: "op", arg: 2, scope: !19936, file: !3, line: 5180, type: !6842)
!19940 = !DILocation(line: 5180, column: 68, scope: !19936)
!19941 = !DILocalVariable(name: "ss_co", scope: !19936, file: !3, line: 5182, type: !710)
!19942 = !DILocation(line: 5182, column: 6, scope: !19936)
!19943 = !DILocation(line: 5183, column: 20, scope: !19936)
!19944 = !DILocation(line: 5183, column: 24, scope: !19936)
!19945 = !DILocation(line: 5183, column: 41, scope: !19936)
!19946 = !DILocation(line: 5183, column: 2, scope: !19936)
!19947 = !DILocation(line: 5184, column: 16, scope: !19936)
!19948 = !DILocation(line: 5184, column: 19, scope: !19936)
!19949 = !DILocation(line: 5184, column: 2, scope: !19936)
!19950 = !DILocation(line: 5185, column: 2, scope: !19936)
!19951 = distinct !DISubprogram(name: "sculpt_sample_detail_size_modal", scope: !3, file: !3, line: 5198, type: !6840, scopeLine: 5199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!19952 = !DILocalVariable(name: "C", arg: 1, scope: !19951, file: !3, line: 5198, type: !5279)
!19953 = !DILocation(line: 5198, column: 54, scope: !19951)
!19954 = !DILocalVariable(name: "op", arg: 2, scope: !19951, file: !3, line: 5198, type: !6842)
!19955 = !DILocation(line: 5198, column: 69, scope: !19951)
!19956 = !DILocalVariable(name: "e", arg: 3, scope: !19951, file: !3, line: 5198, type: !6844)
!19957 = !DILocation(line: 5198, column: 88, scope: !19951)
!19958 = !DILocation(line: 5200, column: 10, scope: !19951)
!19959 = !DILocation(line: 5200, column: 13, scope: !19951)
!19960 = !DILocation(line: 5200, column: 2, scope: !19951)
!19961 = !DILocation(line: 5202, column: 8, scope: !19962)
!19962 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 5202, column: 8)
!19963 = distinct !DILexicalBlock(scope: !19951, file: !3, line: 5200, column: 19)
!19964 = !DILocation(line: 5202, column: 11, scope: !19962)
!19965 = !DILocation(line: 5202, column: 15, scope: !19962)
!19966 = !DILocation(line: 5202, column: 8, scope: !19963)
!19967 = !DILocalVariable(name: "sa", scope: !19968, file: !3, line: 5203, type: !19876)
!19968 = distinct !DILexicalBlock(scope: !19962, file: !3, line: 5202, column: 28)
!19969 = !DILocation(line: 5203, column: 14, scope: !19968)
!19970 = !DILocation(line: 5203, column: 31, scope: !19968)
!19971 = !DILocation(line: 5203, column: 19, scope: !19968)
!19972 = !DILocalVariable(name: "ss_co", scope: !19968, file: !3, line: 5204, type: !710)
!19973 = !DILocation(line: 5204, column: 9, scope: !19968)
!19974 = !DILocation(line: 5204, column: 20, scope: !19968)
!19975 = !DILocation(line: 5204, column: 21, scope: !19968)
!19976 = !DILocation(line: 5204, column: 24, scope: !19968)
!19977 = !DILocation(line: 5204, column: 33, scope: !19968)
!19978 = !DILocation(line: 5204, column: 36, scope: !19968)
!19979 = !DILocation(line: 5206, column: 19, scope: !19968)
!19980 = !DILocation(line: 5206, column: 22, scope: !19968)
!19981 = !DILocation(line: 5206, column: 5, scope: !19968)
!19982 = !DILocation(line: 5208, column: 23, scope: !19968)
!19983 = !DILocation(line: 5208, column: 27, scope: !19968)
!19984 = !DILocation(line: 5208, column: 44, scope: !19968)
!19985 = !DILocation(line: 5208, column: 5, scope: !19968)
!19986 = !DILocation(line: 5209, column: 43, scope: !19968)
!19987 = !DILocation(line: 5209, column: 29, scope: !19968)
!19988 = !DILocation(line: 5209, column: 5, scope: !19968)
!19989 = !DILocation(line: 5210, column: 25, scope: !19968)
!19990 = !DILocation(line: 5210, column: 5, scope: !19968)
!19991 = !DILocation(line: 5211, column: 5, scope: !19968)
!19992 = !DILocation(line: 5213, column: 5, scope: !19968)
!19993 = !DILocation(line: 5215, column: 4, scope: !19963)
!19994 = !DILocalVariable(name: "sa", scope: !19995, file: !3, line: 5219, type: !19876)
!19995 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 5218, column: 3)
!19996 = !DILocation(line: 5219, column: 13, scope: !19995)
!19997 = !DILocation(line: 5219, column: 30, scope: !19995)
!19998 = !DILocation(line: 5219, column: 18, scope: !19995)
!19999 = !DILocation(line: 5220, column: 42, scope: !19995)
!20000 = !DILocation(line: 5220, column: 28, scope: !19995)
!20001 = !DILocation(line: 5220, column: 4, scope: !19995)
!20002 = !DILocation(line: 5221, column: 24, scope: !19995)
!20003 = !DILocation(line: 5221, column: 4, scope: !19995)
!20004 = !DILocation(line: 5223, column: 4, scope: !19995)
!20005 = !DILocation(line: 5227, column: 2, scope: !19951)
!20006 = !DILocation(line: 5228, column: 1, scope: !19951)
!20007 = distinct !DISubprogram(name: "sample_detail", scope: !3, file: !3, line: 5149, type: !20008, scopeLine: 5150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!20008 = !DISubroutineType(types: !20009)
!20009 = !{null, !5279, !2083}
!20010 = !DILocalVariable(name: "C", arg: 1, scope: !20007, file: !3, line: 5149, type: !5279)
!20011 = !DILocation(line: 5149, column: 37, scope: !20007)
!20012 = !DILocalVariable(name: "ss_co", arg: 2, scope: !20007, file: !3, line: 5149, type: !2083)
!20013 = !DILocation(line: 5149, column: 44, scope: !20007)
!20014 = !DILocalVariable(name: "vc", scope: !20007, file: !3, line: 5151, type: !2373)
!20015 = !DILocation(line: 5151, column: 14, scope: !20007)
!20016 = !DILocalVariable(name: "ob", scope: !20007, file: !3, line: 5152, type: !3739)
!20017 = !DILocation(line: 5152, column: 10, scope: !20007)
!20018 = !DILocalVariable(name: "sd", scope: !20007, file: !3, line: 5153, type: !6)
!20019 = !DILocation(line: 5153, column: 10, scope: !20007)
!20020 = !DILocalVariable(name: "ray_start", scope: !20007, file: !3, line: 5154, type: !233)
!20021 = !DILocation(line: 5154, column: 8, scope: !20007)
!20022 = !DILocalVariable(name: "ray_end", scope: !20007, file: !3, line: 5154, type: !233)
!20023 = !DILocation(line: 5154, column: 22, scope: !20007)
!20024 = !DILocalVariable(name: "ray_normal", scope: !20007, file: !3, line: 5154, type: !233)
!20025 = !DILocation(line: 5154, column: 34, scope: !20007)
!20026 = !DILocalVariable(name: "dist", scope: !20007, file: !3, line: 5154, type: !153)
!20027 = !DILocation(line: 5154, column: 49, scope: !20007)
!20028 = !DILocalVariable(name: "srd", scope: !20007, file: !3, line: 5155, type: !20029)
!20029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptDetailRaycastData", file: !3, line: 4077, baseType: !20030)
!20030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4072, size: 256, elements: !20031)
!20031 = !{!20032, !20033, !20034, !20035, !20036}
!20032 = !DIDerivedType(tag: DW_TAG_member, name: "ray_start", scope: !20030, file: !3, line: 4073, baseType: !3251, size: 64)
!20033 = !DIDerivedType(tag: DW_TAG_member, name: "ray_normal", scope: !20030, file: !3, line: 4073, baseType: !3251, size: 64, offset: 64)
!20034 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !20030, file: !3, line: 4074, baseType: !2315, size: 8, offset: 128)
!20035 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !20030, file: !3, line: 4075, baseType: !153, size: 32, offset: 160)
!20036 = !DIDerivedType(tag: DW_TAG_member, name: "detail", scope: !20030, file: !3, line: 4076, baseType: !153, size: 32, offset: 192)
!20037 = !DILocation(line: 5155, column: 26, scope: !20007)
!20038 = !DILocalVariable(name: "mouse", scope: !20007, file: !3, line: 5156, type: !186)
!20039 = !DILocation(line: 5156, column: 8, scope: !20007)
!20040 = !DILocation(line: 5156, column: 19, scope: !20007)
!20041 = !DILocation(line: 5156, column: 20, scope: !20007)
!20042 = !DILocation(line: 5156, column: 30, scope: !20007)
!20043 = !DILocation(line: 5157, column: 25, scope: !20007)
!20044 = !DILocation(line: 5157, column: 2, scope: !20007)
!20045 = !DILocation(line: 5159, column: 30, scope: !20007)
!20046 = !DILocation(line: 5159, column: 7, scope: !20007)
!20047 = !DILocation(line: 5159, column: 34, scope: !20007)
!20048 = !DILocation(line: 5159, column: 5, scope: !20007)
!20049 = !DILocation(line: 5160, column: 10, scope: !20007)
!20050 = !DILocation(line: 5160, column: 5, scope: !20007)
!20051 = !DILocation(line: 5162, column: 32, scope: !20007)
!20052 = !DILocation(line: 5162, column: 35, scope: !20007)
!20053 = !DILocation(line: 5162, column: 2, scope: !20007)
!20054 = !DILocation(line: 5164, column: 34, scope: !20007)
!20055 = !DILocation(line: 5164, column: 41, scope: !20007)
!20056 = !DILocation(line: 5164, column: 52, scope: !20007)
!20057 = !DILocation(line: 5164, column: 61, scope: !20007)
!20058 = !DILocation(line: 5164, column: 9, scope: !20007)
!20059 = !DILocation(line: 5164, column: 7, scope: !20007)
!20060 = !DILocation(line: 5166, column: 6, scope: !20007)
!20061 = !DILocation(line: 5166, column: 10, scope: !20007)
!20062 = !DILocation(line: 5167, column: 18, scope: !20007)
!20063 = !DILocation(line: 5167, column: 6, scope: !20007)
!20064 = !DILocation(line: 5167, column: 16, scope: !20007)
!20065 = !DILocation(line: 5168, column: 19, scope: !20007)
!20066 = !DILocation(line: 5168, column: 6, scope: !20007)
!20067 = !DILocation(line: 5168, column: 17, scope: !20007)
!20068 = !DILocation(line: 5169, column: 13, scope: !20007)
!20069 = !DILocation(line: 5169, column: 6, scope: !20007)
!20070 = !DILocation(line: 5169, column: 11, scope: !20007)
!20071 = !DILocation(line: 5170, column: 15, scope: !20007)
!20072 = !DILocation(line: 5170, column: 19, scope: !20007)
!20073 = !DILocation(line: 5170, column: 6, scope: !20007)
!20074 = !DILocation(line: 5170, column: 13, scope: !20007)
!20075 = !DILocation(line: 5172, column: 19, scope: !20007)
!20076 = !DILocation(line: 5172, column: 23, scope: !20007)
!20077 = !DILocation(line: 5172, column: 31, scope: !20007)
!20078 = !DILocation(line: 5172, column: 63, scope: !20007)
!20079 = !DILocation(line: 5173, column: 19, scope: !20007)
!20080 = !DILocation(line: 5173, column: 30, scope: !20007)
!20081 = !DILocation(line: 5172, column: 2, scope: !20007)
!20082 = !DILocation(line: 5175, column: 10, scope: !20083)
!20083 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 5175, column: 6)
!20084 = !DILocation(line: 5175, column: 6, scope: !20083)
!20085 = !DILocation(line: 5175, column: 6, scope: !20007)
!20086 = !DILocation(line: 5176, column: 29, scope: !20087)
!20087 = distinct !DILexicalBlock(scope: !20083, file: !3, line: 5175, column: 15)
!20088 = !DILocation(line: 5176, column: 36, scope: !20087)
!20089 = !DILocation(line: 5176, column: 3, scope: !20087)
!20090 = !DILocation(line: 5176, column: 7, scope: !20087)
!20091 = !DILocation(line: 5176, column: 23, scope: !20087)
!20092 = !DILocation(line: 5177, column: 2, scope: !20087)
!20093 = !DILocation(line: 5178, column: 1, scope: !20007)
!20094 = distinct !DISubprogram(name: "sculpt_raycast_detail_cb", scope: !3, file: !3, line: 4107, type: !5848, scopeLine: 4108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3745, retainedNodes: !5189)
!20095 = !DILocalVariable(name: "node", arg: 1, scope: !20094, file: !3, line: 4107, type: !3742)
!20096 = !DILocation(line: 4107, column: 48, scope: !20094)
!20097 = !DILocalVariable(name: "data_v", arg: 2, scope: !20094, file: !3, line: 4107, type: !26)
!20098 = !DILocation(line: 4107, column: 60, scope: !20094)
!20099 = !DILocalVariable(name: "tmin", arg: 3, scope: !20094, file: !3, line: 4107, type: !359)
!20100 = !DILocation(line: 4107, column: 75, scope: !20094)
!20101 = !DILocation(line: 4109, column: 29, scope: !20102)
!20102 = distinct !DILexicalBlock(scope: !20094, file: !3, line: 4109, column: 6)
!20103 = !DILocation(line: 4109, column: 6, scope: !20102)
!20104 = !DILocation(line: 4109, column: 38, scope: !20102)
!20105 = !DILocation(line: 4109, column: 37, scope: !20102)
!20106 = !DILocation(line: 4109, column: 35, scope: !20102)
!20107 = !DILocation(line: 4109, column: 6, scope: !20094)
!20108 = !DILocalVariable(name: "srd", scope: !20109, file: !3, line: 4110, type: !20110)
!20109 = distinct !DILexicalBlock(scope: !20102, file: !3, line: 4109, column: 44)
!20110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20029, size: 64)
!20111 = !DILocation(line: 4110, column: 28, scope: !20109)
!20112 = !DILocation(line: 4110, column: 34, scope: !20109)
!20113 = !DILocation(line: 4111, column: 42, scope: !20114)
!20114 = distinct !DILexicalBlock(scope: !20109, file: !3, line: 4111, column: 7)
!20115 = !DILocation(line: 4111, column: 48, scope: !20114)
!20116 = !DILocation(line: 4111, column: 53, scope: !20114)
!20117 = !DILocation(line: 4111, column: 64, scope: !20114)
!20118 = !DILocation(line: 4111, column: 69, scope: !20114)
!20119 = !DILocation(line: 4112, column: 43, scope: !20114)
!20120 = !DILocation(line: 4112, column: 48, scope: !20114)
!20121 = !DILocation(line: 4112, column: 57, scope: !20114)
!20122 = !DILocation(line: 4112, column: 62, scope: !20114)
!20123 = !DILocation(line: 4111, column: 7, scope: !20114)
!20124 = !DILocation(line: 4111, column: 7, scope: !20109)
!20125 = !DILocation(line: 4114, column: 4, scope: !20126)
!20126 = distinct !DILexicalBlock(scope: !20114, file: !3, line: 4113, column: 3)
!20127 = !DILocation(line: 4114, column: 9, scope: !20126)
!20128 = !DILocation(line: 4114, column: 13, scope: !20126)
!20129 = !DILocation(line: 4115, column: 12, scope: !20126)
!20130 = !DILocation(line: 4115, column: 17, scope: !20126)
!20131 = !DILocation(line: 4115, column: 5, scope: !20126)
!20132 = !DILocation(line: 4115, column: 10, scope: !20126)
!20133 = !DILocation(line: 4116, column: 3, scope: !20126)
!20134 = !DILocation(line: 4117, column: 2, scope: !20109)
!20135 = !DILocation(line: 4118, column: 1, scope: !20094)
