; ModuleID = 'blender/source/blender/render/intern/source/zbuf.c'
source_filename = "blender/source/blender/render/intern/source/zbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.ZSpan = type { i32, i32, i32, i32, i32, i32, float*, float*, float*, float*, float*, float*, float, float, float, float, i32*, i32*, i32*, i32*, i32*, i32*, %struct.APixstr*, %struct.APixstr*, %struct.APixstrand*, %struct.ListBase*, i32, float, i32, i32, i32, float, i8*, void (i8*, i32, i32, i32, i32, i32)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)* }
%struct.APixstr = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i16], %struct.APixstr* }
%struct.APixstrand = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x float], [4 x float], %struct.APixstrand* }
%struct.APixstrMain = type { %struct.APixstrMain*, %struct.APixstrMain*, i8* }
%struct.RenderPart = type { %struct.RenderPart*, %struct.RenderPart*, %struct.RenderResult*, %struct.ListBase, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, %struct.rcti, i32, i32, i32, i16, i16, i16, i16, i8* }
%struct.ZbufProjectCache = type { i32, i32, [4 x float] }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type { i16*, %struct.ISBShadfacA**, %struct.MemArena*, i32, i32, i32, i32 }
%struct.ISBShadfacA = type { %struct.ISBShadfacA*, i32, i32, float }
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.StrandSegment = type { [4 x %struct.StrandVert*], %struct.StrandRen*, %struct.StrandBuffer*, %struct.ObjectInstanceRen*, float, %struct.StrandPoint, %struct.StrandPoint, i32 }
%struct.StrandPoint = type { float, [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], i32, i32, [4 x float], float, float, float }
%struct.StrandPart = type opaque
%struct.NodeBlurData = type { i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, i16, i8, i8, i32, i32 }
%struct.DrawBufPixel = type { float*, float }
%struct.StrandShadeCache = type opaque
%struct.ShadeSample = type { i32, [16 x %struct.RenderLayer*], [16 x %struct.ShadeInput], [16 x %struct.ShadeResult] }
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.ZTranspRow = type { i32, i32, i32, i32, i32, float, float }
%struct.RenderPass = type { %struct.RenderPass*, %struct.RenderPass*, i32, i32, [64 x i8], [8 x i8], float*, i32, i32, i32 }
%struct.PixStr = type { %struct.PixStr*, i32, i32, i32, i32, i16, i16 }

@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [6 x i8] c"zspan\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@R = external dso_local global %struct.Render, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"recto\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"rectp\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"rectz\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"seconday z buffer\00", align 1
@RE_zbuf_accumulate_vecblur.jit = internal global [256 x [2 x float]] zeroinitializer, align 16, !dbg !0
@RE_zbuf_accumulate_vecblur.firsttime = internal global i32 1, align 4, !dbg !106
@MEM_mapallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"zbuf accum\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"rectmove\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"rect draw\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"rect weight\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"rect max\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"Found uninitialized speed in vector buffer... fixed.\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"minspeed buf\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"vertices\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"zbuffer_transp_shade: osa too large\0A\00", align 1
@G = external dso_local global %struct.Global, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.14 = private unnamed_addr constant [8 x i8] c"APixbuf\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"APixbufstrand\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"ztramask\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.17 = private unnamed_addr constant [7 x i8] c"Arectz\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"Arectmask\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"addpsmainA\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"pixstr\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuf_alloc_span(%struct.ZSpan* %zspan, i32 %rectx, i32 %recty, float %clipcrop) #0 !dbg !117 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %rectx.addr = alloca i32, align 4
  %recty.addr = alloca i32, align 4
  %clipcrop.addr = alloca float, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !207, metadata !DIExpression()), !dbg !208
  store i32 %rectx, i32* %rectx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rectx.addr, metadata !209, metadata !DIExpression()), !dbg !210
  store i32 %recty, i32* %recty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recty.addr, metadata !211, metadata !DIExpression()), !dbg !212
  store float %clipcrop, float* %clipcrop.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipcrop.addr, metadata !213, metadata !DIExpression()), !dbg !214
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !215
  %1 = bitcast %struct.ZSpan* %0 to i8*, !dbg !216
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 224, i1 false), !dbg !216
  %2 = load i32, i32* %rectx.addr, align 4, !dbg !217
  %3 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !218
  %rectx1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %3, i32 0, i32 0, !dbg !219
  store i32 %2, i32* %rectx1, align 8, !dbg !220
  %4 = load i32, i32* %recty.addr, align 4, !dbg !221
  %5 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !222
  %recty2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %5, i32 0, i32 1, !dbg !223
  store i32 %4, i32* %recty2, align 4, !dbg !224
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !225
  %7 = load i32, i32* %recty.addr, align 4, !dbg !226
  %conv = sext i32 %7 to i64, !dbg !226
  %mul = mul i64 %conv, 4, !dbg !227
  %call = call i8* %6(i64 %mul, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !225
  %8 = bitcast i8* %call to float*, !dbg !225
  %9 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !228
  %span1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %9, i32 0, i32 10, !dbg !229
  store float* %8, float** %span1, align 8, !dbg !230
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !231
  %11 = load i32, i32* %recty.addr, align 4, !dbg !232
  %conv3 = sext i32 %11 to i64, !dbg !232
  %mul4 = mul i64 %conv3, 4, !dbg !233
  %call5 = call i8* %10(i64 %mul4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !231
  %12 = bitcast i8* %call5 to float*, !dbg !231
  %13 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !234
  %span2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %13, i32 0, i32 11, !dbg !235
  store float* %12, float** %span2, align 8, !dbg !236
  %14 = load float, float* %clipcrop.addr, align 4, !dbg !237
  %15 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !238
  %clipcrop6 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %15, i32 0, i32 31, !dbg !239
  store float %14, float* %clipcrop6, align 4, !dbg !240
  ret void, !dbg !241
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuf_free_span(%struct.ZSpan* %zspan) #0 !dbg !242 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !245, metadata !DIExpression()), !dbg !246
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !247
  %tobool = icmp ne %struct.ZSpan* %0, null, !dbg !247
  br i1 %tobool, label %if.then, label %if.end10, !dbg !249

if.then:                                          ; preds = %entry
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !250
  %span1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %1, i32 0, i32 10, !dbg !253
  %2 = load float*, float** %span1, align 8, !dbg !253
  %tobool1 = icmp ne float* %2, null, !dbg !250
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !254

if.then2:                                         ; preds = %if.then
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !255
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !256
  %span13 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %4, i32 0, i32 10, !dbg !257
  %5 = load float*, float** %span13, align 8, !dbg !257
  %6 = bitcast float* %5 to i8*, !dbg !256
  call void %3(i8* %6), !dbg !255
  br label %if.end, !dbg !255

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !258
  %span2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %7, i32 0, i32 11, !dbg !260
  %8 = load float*, float** %span2, align 8, !dbg !260
  %tobool4 = icmp ne float* %8, null, !dbg !258
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !261

if.then5:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !262
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !263
  %span26 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %10, i32 0, i32 11, !dbg !264
  %11 = load float*, float** %span26, align 8, !dbg !264
  %12 = bitcast float* %11 to i8*, !dbg !263
  call void %9(i8* %12), !dbg !262
  br label %if.end7, !dbg !262

if.end7:                                          ; preds = %if.then5, %if.end
  %13 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !265
  %span28 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %13, i32 0, i32 11, !dbg !266
  store float* null, float** %span28, align 8, !dbg !267
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !268
  %span19 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %14, i32 0, i32 10, !dbg !269
  store float* null, float** %span19, align 8, !dbg !270
  br label %if.end10, !dbg !271

if.end10:                                         ; preds = %if.end7, %entry
  ret void, !dbg !272
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fillrect(i32* %rect, i32 %x, i32 %y, i32 %val) #0 !dbg !273 {
entry:
  %rect.addr = alloca i32*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %drect = alloca i32*, align 8
  store i32* %rect, i32** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rect.addr, metadata !276, metadata !DIExpression()), !dbg !277
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !278, metadata !DIExpression()), !dbg !279
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !280, metadata !DIExpression()), !dbg !281
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !282, metadata !DIExpression()), !dbg !283
  call void @llvm.dbg.declare(metadata i32* %len, metadata !284, metadata !DIExpression()), !dbg !285
  call void @llvm.dbg.declare(metadata i32** %drect, metadata !286, metadata !DIExpression()), !dbg !287
  %0 = load i32, i32* %x.addr, align 4, !dbg !288
  %1 = load i32, i32* %y.addr, align 4, !dbg !289
  %mul = mul nsw i32 %0, %1, !dbg !290
  store i32 %mul, i32* %len, align 4, !dbg !291
  %2 = load i32*, i32** %rect.addr, align 8, !dbg !292
  store i32* %2, i32** %drect, align 8, !dbg !293
  br label %while.cond, !dbg !294

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %len, align 4, !dbg !295
  %cmp = icmp sgt i32 %3, 0, !dbg !296
  br i1 %cmp, label %while.body, label %while.end, !dbg !294

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %len, align 4, !dbg !297
  %dec = add nsw i32 %4, -1, !dbg !297
  store i32 %dec, i32* %len, align 4, !dbg !297
  %5 = load i32, i32* %val.addr, align 4, !dbg !299
  %6 = load i32*, i32** %drect, align 8, !dbg !300
  store i32 %5, i32* %6, align 4, !dbg !301
  %7 = load i32*, i32** %drect, align 8, !dbg !302
  %incdec.ptr = getelementptr inbounds i32, i32* %7, i32 1, !dbg !302
  store i32* %incdec.ptr, i32** %drect, align 8, !dbg !302
  br label %while.cond, !dbg !294, !llvm.loop !303

while.end:                                        ; preds = %while.cond
  ret void, !dbg !305
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @testclip(float* %v) #0 !dbg !306 {
entry:
  %v.addr = alloca float*, align 8
  %abs4 = alloca float, align 4
  %c = alloca i16, align 2
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !309, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.declare(metadata float* %abs4, metadata !311, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.declare(metadata i16* %c, metadata !313, metadata !DIExpression()), !dbg !314
  store i16 0, i16* %c, align 2, !dbg !314
  %0 = load float*, float** %v.addr, align 8, !dbg !315
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !315
  %1 = load float, float* %arrayidx, align 4, !dbg !315
  %2 = call float @llvm.fabs.f32(float %1), !dbg !316
  %add = fadd float %2, 0x3E80000000000000, !dbg !317
  store float %add, float* %abs4, align 4, !dbg !318
  %3 = load float*, float** %v.addr, align 8, !dbg !319
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !319
  %4 = load float, float* %arrayidx1, align 4, !dbg !319
  %5 = load float, float* %abs4, align 4, !dbg !321
  %fneg = fneg float %5, !dbg !322
  %cmp = fcmp olt float %4, %fneg, !dbg !323
  br i1 %cmp, label %if.then, label %if.else, !dbg !324

if.then:                                          ; preds = %entry
  %6 = load i16, i16* %c, align 2, !dbg !325
  %conv = sext i16 %6 to i32, !dbg !325
  %add2 = add nsw i32 %conv, 1, !dbg !325
  %conv3 = trunc i32 %add2 to i16, !dbg !325
  store i16 %conv3, i16* %c, align 2, !dbg !325
  br label %if.end11, !dbg !326

if.else:                                          ; preds = %entry
  %7 = load float*, float** %v.addr, align 8, !dbg !327
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 0, !dbg !327
  %8 = load float, float* %arrayidx4, align 4, !dbg !327
  %9 = load float, float* %abs4, align 4, !dbg !329
  %cmp5 = fcmp ogt float %8, %9, !dbg !330
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !331

if.then7:                                         ; preds = %if.else
  %10 = load i16, i16* %c, align 2, !dbg !332
  %conv8 = sext i16 %10 to i32, !dbg !332
  %add9 = add nsw i32 %conv8, 2, !dbg !332
  %conv10 = trunc i32 %add9 to i16, !dbg !332
  store i16 %conv10, i16* %c, align 2, !dbg !332
  br label %if.end, !dbg !333

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %11 = load float*, float** %v.addr, align 8, !dbg !334
  %arrayidx12 = getelementptr inbounds float, float* %11, i64 1, !dbg !334
  %12 = load float, float* %arrayidx12, align 4, !dbg !334
  %13 = load float, float* %abs4, align 4, !dbg !336
  %cmp13 = fcmp ogt float %12, %13, !dbg !337
  br i1 %cmp13, label %if.then15, label %if.else19, !dbg !338

if.then15:                                        ; preds = %if.end11
  %14 = load i16, i16* %c, align 2, !dbg !339
  %conv16 = sext i16 %14 to i32, !dbg !339
  %add17 = add nsw i32 %conv16, 4, !dbg !339
  %conv18 = trunc i32 %add17 to i16, !dbg !339
  store i16 %conv18, i16* %c, align 2, !dbg !339
  br label %if.end29, !dbg !340

if.else19:                                        ; preds = %if.end11
  %15 = load float*, float** %v.addr, align 8, !dbg !341
  %arrayidx20 = getelementptr inbounds float, float* %15, i64 1, !dbg !341
  %16 = load float, float* %arrayidx20, align 4, !dbg !341
  %17 = load float, float* %abs4, align 4, !dbg !343
  %fneg21 = fneg float %17, !dbg !344
  %cmp22 = fcmp olt float %16, %fneg21, !dbg !345
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !346

if.then24:                                        ; preds = %if.else19
  %18 = load i16, i16* %c, align 2, !dbg !347
  %conv25 = sext i16 %18 to i32, !dbg !347
  %add26 = add nsw i32 %conv25, 8, !dbg !347
  %conv27 = trunc i32 %add26 to i16, !dbg !347
  store i16 %conv27, i16* %c, align 2, !dbg !347
  br label %if.end28, !dbg !348

if.end28:                                         ; preds = %if.then24, %if.else19
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then15
  %19 = load float*, float** %v.addr, align 8, !dbg !349
  %arrayidx30 = getelementptr inbounds float, float* %19, i64 2, !dbg !349
  %20 = load float, float* %arrayidx30, align 4, !dbg !349
  %21 = load float, float* %abs4, align 4, !dbg !351
  %fneg31 = fneg float %21, !dbg !352
  %cmp32 = fcmp olt float %20, %fneg31, !dbg !353
  br i1 %cmp32, label %if.then34, label %if.else38, !dbg !354

if.then34:                                        ; preds = %if.end29
  %22 = load i16, i16* %c, align 2, !dbg !355
  %conv35 = sext i16 %22 to i32, !dbg !355
  %add36 = add nsw i32 %conv35, 16, !dbg !355
  %conv37 = trunc i32 %add36 to i16, !dbg !355
  store i16 %conv37, i16* %c, align 2, !dbg !355
  br label %if.end47, !dbg !356

if.else38:                                        ; preds = %if.end29
  %23 = load float*, float** %v.addr, align 8, !dbg !357
  %arrayidx39 = getelementptr inbounds float, float* %23, i64 2, !dbg !357
  %24 = load float, float* %arrayidx39, align 4, !dbg !357
  %25 = load float, float* %abs4, align 4, !dbg !359
  %cmp40 = fcmp ogt float %24, %25, !dbg !360
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !361

if.then42:                                        ; preds = %if.else38
  %26 = load i16, i16* %c, align 2, !dbg !362
  %conv43 = sext i16 %26 to i32, !dbg !362
  %add44 = add nsw i32 %conv43, 32, !dbg !362
  %conv45 = trunc i32 %add44 to i16, !dbg !362
  store i16 %conv45, i16* %c, align 2, !dbg !362
  br label %if.end46, !dbg !363

if.end46:                                         ; preds = %if.then42, %if.else38
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then34
  %27 = load i16, i16* %c, align 2, !dbg !364
  %conv48 = sext i16 %27 to i32, !dbg !364
  ret i32 %conv48, !dbg !365
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @freepsA(%struct.ListBase* %lb) #0 !dbg !366 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %psm = alloca %struct.APixstrMain*, align 8
  %psmnext = alloca %struct.APixstrMain*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !371, metadata !DIExpression()), !dbg !372
  call void @llvm.dbg.declare(metadata %struct.APixstrMain** %psm, metadata !373, metadata !DIExpression()), !dbg !382
  call void @llvm.dbg.declare(metadata %struct.APixstrMain** %psmnext, metadata !383, metadata !DIExpression()), !dbg !384
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !385
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !387
  %1 = load i8*, i8** %first, align 8, !dbg !387
  %2 = bitcast i8* %1 to %struct.APixstrMain*, !dbg !385
  store %struct.APixstrMain* %2, %struct.APixstrMain** %psm, align 8, !dbg !388
  br label %for.cond, !dbg !389

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !390
  %tobool = icmp ne %struct.APixstrMain* %3, null, !dbg !392
  br i1 %tobool, label %for.body, label %for.end, !dbg !392

for.body:                                         ; preds = %for.cond
  %4 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !393
  %next = getelementptr inbounds %struct.APixstrMain, %struct.APixstrMain* %4, i32 0, i32 0, !dbg !395
  %5 = load %struct.APixstrMain*, %struct.APixstrMain** %next, align 8, !dbg !395
  store %struct.APixstrMain* %5, %struct.APixstrMain** %psmnext, align 8, !dbg !396
  %6 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !397
  %ps = getelementptr inbounds %struct.APixstrMain, %struct.APixstrMain* %6, i32 0, i32 2, !dbg !399
  %7 = load i8*, i8** %ps, align 8, !dbg !399
  %tobool1 = icmp ne i8* %7, null, !dbg !397
  br i1 %tobool1, label %if.then, label %if.end, !dbg !400

if.then:                                          ; preds = %for.body
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !401
  %9 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !402
  %ps2 = getelementptr inbounds %struct.APixstrMain, %struct.APixstrMain* %9, i32 0, i32 2, !dbg !403
  %10 = load i8*, i8** %ps2, align 8, !dbg !403
  call void %8(i8* %10), !dbg !401
  br label %if.end, !dbg !401

if.end:                                           ; preds = %if.then, %for.body
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !404
  %12 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !405
  %13 = bitcast %struct.APixstrMain* %12 to i8*, !dbg !405
  call void %11(i8* %13), !dbg !404
  br label %for.inc, !dbg !406

for.inc:                                          ; preds = %if.end
  %14 = load %struct.APixstrMain*, %struct.APixstrMain** %psmnext, align 8, !dbg !407
  store %struct.APixstrMain* %14, %struct.APixstrMain** %psm, align 8, !dbg !408
  br label %for.cond, !dbg !409, !llvm.loop !410

for.end:                                          ; preds = %for.cond
  ret void, !dbg !412
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @hoco_to_zco(%struct.ZSpan* %zspan, float* %zco, float* %hoco) #0 !dbg !413 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %zco.addr = alloca float*, align 8
  %hoco.addr = alloca float*, align 8
  %div = alloca float, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !416, metadata !DIExpression()), !dbg !417
  store float* %zco, float** %zco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %zco.addr, metadata !418, metadata !DIExpression()), !dbg !419
  store float* %hoco, float** %hoco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hoco.addr, metadata !420, metadata !DIExpression()), !dbg !421
  call void @llvm.dbg.declare(metadata float* %div, metadata !422, metadata !DIExpression()), !dbg !423
  %0 = load float*, float** %hoco.addr, align 8, !dbg !424
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !424
  %1 = load float, float* %arrayidx, align 4, !dbg !424
  %div1 = fdiv float 1.000000e+00, %1, !dbg !425
  store float %div1, float* %div, align 4, !dbg !426
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !427
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %2, i32 0, i32 12, !dbg !428
  %3 = load float, float* %zmulx, align 8, !dbg !428
  %4 = load float*, float** %hoco.addr, align 8, !dbg !429
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !429
  %5 = load float, float* %arrayidx2, align 4, !dbg !429
  %6 = load float, float* %div, align 4, !dbg !430
  %mul = fmul float %5, %6, !dbg !431
  %add = fadd float 1.000000e+00, %mul, !dbg !432
  %mul3 = fmul float %3, %add, !dbg !433
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !434
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %7, i32 0, i32 14, !dbg !435
  %8 = load float, float* %zofsx, align 8, !dbg !435
  %add4 = fadd float %mul3, %8, !dbg !436
  %9 = load float*, float** %zco.addr, align 8, !dbg !437
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 0, !dbg !437
  store float %add4, float* %arrayidx5, align 4, !dbg !438
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !439
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %10, i32 0, i32 13, !dbg !440
  %11 = load float, float* %zmuly, align 4, !dbg !440
  %12 = load float*, float** %hoco.addr, align 8, !dbg !441
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 1, !dbg !441
  %13 = load float, float* %arrayidx6, align 4, !dbg !441
  %14 = load float, float* %div, align 4, !dbg !442
  %mul7 = fmul float %13, %14, !dbg !443
  %add8 = fadd float 1.000000e+00, %mul7, !dbg !444
  %mul9 = fmul float %11, %add8, !dbg !445
  %15 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !446
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %15, i32 0, i32 15, !dbg !447
  %16 = load float, float* %zofsy, align 4, !dbg !447
  %add10 = fadd float %mul9, %16, !dbg !448
  %17 = load float*, float** %zco.addr, align 8, !dbg !449
  %arrayidx11 = getelementptr inbounds float, float* %17, i64 1, !dbg !449
  store float %add10, float* %arrayidx11, align 4, !dbg !450
  %18 = load float*, float** %hoco.addr, align 8, !dbg !451
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !451
  %19 = load float, float* %arrayidx12, align 4, !dbg !451
  %20 = load float, float* %div, align 4, !dbg !452
  %mul13 = fmul float %19, %20, !dbg !453
  %mul14 = fmul float 0x41E0000000000000, %mul13, !dbg !454
  %21 = load float*, float** %zco.addr, align 8, !dbg !455
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 2, !dbg !455
  store float %mul14, float* %arrayidx15, align 4, !dbg !456
  ret void, !dbg !457
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufclipwire(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, i32 %ec, float* %ho1, float* %ho2, float* %ho3, float* %ho4, i32 %c1, i32 %c2, i32 %c3, i32 %c4) #0 !dbg !458 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %ec.addr = alloca i32, align 4
  %ho1.addr = alloca float*, align 8
  %ho2.addr = alloca float*, align 8
  %ho3.addr = alloca float*, align 8
  %ho4.addr = alloca float*, align 8
  %c1.addr = alloca i32, align 4
  %c2.addr = alloca i32, align 4
  %c3.addr = alloca i32, align 4
  %c4.addr = alloca i32, align 4
  %vez = alloca [20 x float], align 16
  %and = alloca i32, align 4
  %or = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !462, metadata !DIExpression()), !dbg !463
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !464, metadata !DIExpression()), !dbg !465
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !466, metadata !DIExpression()), !dbg !467
  store i32 %ec, i32* %ec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ec.addr, metadata !468, metadata !DIExpression()), !dbg !469
  store float* %ho1, float** %ho1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho1.addr, metadata !470, metadata !DIExpression()), !dbg !471
  store float* %ho2, float** %ho2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho2.addr, metadata !472, metadata !DIExpression()), !dbg !473
  store float* %ho3, float** %ho3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho3.addr, metadata !474, metadata !DIExpression()), !dbg !475
  store float* %ho4, float** %ho4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho4.addr, metadata !476, metadata !DIExpression()), !dbg !477
  store i32 %c1, i32* %c1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c1.addr, metadata !478, metadata !DIExpression()), !dbg !479
  store i32 %c2, i32* %c2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c2.addr, metadata !480, metadata !DIExpression()), !dbg !481
  store i32 %c3, i32* %c3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c3.addr, metadata !482, metadata !DIExpression()), !dbg !483
  store i32 %c4, i32* %c4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c4.addr, metadata !484, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.declare(metadata [20 x float]* %vez, metadata !486, metadata !DIExpression()), !dbg !490
  call void @llvm.dbg.declare(metadata i32* %and, metadata !491, metadata !DIExpression()), !dbg !492
  call void @llvm.dbg.declare(metadata i32* %or, metadata !493, metadata !DIExpression()), !dbg !494
  %0 = load i32, i32* %ec.addr, align 4, !dbg !495
  %cmp = icmp eq i32 %0, 0, !dbg !497
  br i1 %cmp, label %if.then, label %if.end, !dbg !498

if.then:                                          ; preds = %entry
  br label %if.end191, !dbg !499

if.end:                                           ; preds = %entry
  %1 = load float*, float** %ho4.addr, align 8, !dbg !500
  %tobool = icmp ne float* %1, null, !dbg !500
  br i1 %tobool, label %if.then1, label %if.else, !dbg !502

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* %c1.addr, align 4, !dbg !503
  %3 = load i32, i32* %c2.addr, align 4, !dbg !505
  %and2 = and i32 %2, %3, !dbg !506
  %4 = load i32, i32* %c3.addr, align 4, !dbg !507
  %and3 = and i32 %and2, %4, !dbg !508
  %5 = load i32, i32* %c4.addr, align 4, !dbg !509
  %and4 = and i32 %and3, %5, !dbg !510
  store i32 %and4, i32* %and, align 4, !dbg !511
  %6 = load i32, i32* %c1.addr, align 4, !dbg !512
  %7 = load i32, i32* %c2.addr, align 4, !dbg !513
  %or5 = or i32 %6, %7, !dbg !514
  %8 = load i32, i32* %c3.addr, align 4, !dbg !515
  %or6 = or i32 %or5, %8, !dbg !516
  %9 = load i32, i32* %c4.addr, align 4, !dbg !517
  %or7 = or i32 %or6, %9, !dbg !518
  store i32 %or7, i32* %or, align 4, !dbg !519
  br label %if.end12, !dbg !520

if.else:                                          ; preds = %if.end
  %10 = load i32, i32* %c1.addr, align 4, !dbg !521
  %11 = load i32, i32* %c2.addr, align 4, !dbg !523
  %and8 = and i32 %10, %11, !dbg !524
  %12 = load i32, i32* %c3.addr, align 4, !dbg !525
  %and9 = and i32 %and8, %12, !dbg !526
  store i32 %and9, i32* %and, align 4, !dbg !527
  %13 = load i32, i32* %c1.addr, align 4, !dbg !528
  %14 = load i32, i32* %c2.addr, align 4, !dbg !529
  %or10 = or i32 %13, %14, !dbg !530
  %15 = load i32, i32* %c3.addr, align 4, !dbg !531
  %or11 = or i32 %or10, %15, !dbg !532
  store i32 %or11, i32* %or, align 4, !dbg !533
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then1
  %16 = load i32, i32* %or, align 4, !dbg !534
  %tobool13 = icmp ne i32 %16, 0, !dbg !534
  br i1 %tobool13, label %if.then14, label %if.end138, !dbg !536

if.then14:                                        ; preds = %if.end12
  %17 = load i32, i32* %and, align 4, !dbg !537
  %tobool15 = icmp ne i32 %17, 0, !dbg !537
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !540

if.then16:                                        ; preds = %if.then14
  br label %if.end191, !dbg !541

if.else17:                                        ; preds = %if.then14
  %18 = load i32, i32* %ec.addr, align 4, !dbg !543
  %and18 = and i32 %18, 1, !dbg !546
  %tobool19 = icmp ne i32 %and18, 0, !dbg !546
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !547

if.then20:                                        ; preds = %if.else17
  %arraydecay = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !548
  %19 = load float*, float** %ho1.addr, align 8, !dbg !550
  call void @copy_v4_v4(float* %arraydecay, float* %19), !dbg !551
  %arraydecay21 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !552
  %add.ptr = getelementptr inbounds float, float* %arraydecay21, i64 4, !dbg !553
  %20 = load float*, float** %ho2.addr, align 8, !dbg !554
  call void @copy_v4_v4(float* %add.ptr, float* %20), !dbg !555
  %arraydecay22 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !556
  %arraydecay23 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !558
  %add.ptr24 = getelementptr inbounds float, float* %arraydecay23, i64 4, !dbg !559
  %call = call i32 @clipline(float* %arraydecay22, float* %add.ptr24), !dbg !560
  %tobool25 = icmp ne i32 %call, 0, !dbg !560
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !561

if.then26:                                        ; preds = %if.then20
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !562
  %arraydecay27 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !564
  %arraydecay28 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !565
  call void @hoco_to_zco(%struct.ZSpan* %21, float* %arraydecay27, float* %arraydecay28), !dbg !566
  %22 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !567
  %arraydecay29 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !568
  %add.ptr30 = getelementptr inbounds float, float* %arraydecay29, i64 4, !dbg !569
  %arraydecay31 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !570
  %add.ptr32 = getelementptr inbounds float, float* %arraydecay31, i64 4, !dbg !571
  call void @hoco_to_zco(%struct.ZSpan* %22, float* %add.ptr30, float* %add.ptr32), !dbg !572
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !573
  %zbuflinefunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 35, !dbg !574
  %24 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc, align 8, !dbg !574
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !575
  %26 = load i32, i32* %obi.addr, align 4, !dbg !576
  %27 = load i32, i32* %zvlnr.addr, align 4, !dbg !577
  %arraydecay33 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !578
  %arraydecay34 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !579
  %add.ptr35 = getelementptr inbounds float, float* %arraydecay34, i64 4, !dbg !580
  call void %24(%struct.ZSpan* %25, i32 %26, i32 %27, float* %arraydecay33, float* %add.ptr35), !dbg !573
  br label %if.end36, !dbg !581

if.end36:                                         ; preds = %if.then26, %if.then20
  br label %if.end37, !dbg !582

if.end37:                                         ; preds = %if.end36, %if.else17
  %28 = load i32, i32* %ec.addr, align 4, !dbg !583
  %and38 = and i32 %28, 2, !dbg !585
  %tobool39 = icmp ne i32 %and38, 0, !dbg !585
  br i1 %tobool39, label %if.then40, label %if.end61, !dbg !586

if.then40:                                        ; preds = %if.end37
  %arraydecay41 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !587
  %29 = load float*, float** %ho2.addr, align 8, !dbg !589
  call void @copy_v4_v4(float* %arraydecay41, float* %29), !dbg !590
  %arraydecay42 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !591
  %add.ptr43 = getelementptr inbounds float, float* %arraydecay42, i64 4, !dbg !592
  %30 = load float*, float** %ho3.addr, align 8, !dbg !593
  call void @copy_v4_v4(float* %add.ptr43, float* %30), !dbg !594
  %arraydecay44 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !595
  %arraydecay45 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !597
  %add.ptr46 = getelementptr inbounds float, float* %arraydecay45, i64 4, !dbg !598
  %call47 = call i32 @clipline(float* %arraydecay44, float* %add.ptr46), !dbg !599
  %tobool48 = icmp ne i32 %call47, 0, !dbg !599
  br i1 %tobool48, label %if.then49, label %if.end60, !dbg !600

if.then49:                                        ; preds = %if.then40
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !601
  %arraydecay50 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !603
  %arraydecay51 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !604
  call void @hoco_to_zco(%struct.ZSpan* %31, float* %arraydecay50, float* %arraydecay51), !dbg !605
  %32 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !606
  %arraydecay52 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !607
  %add.ptr53 = getelementptr inbounds float, float* %arraydecay52, i64 4, !dbg !608
  %arraydecay54 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !609
  %add.ptr55 = getelementptr inbounds float, float* %arraydecay54, i64 4, !dbg !610
  call void @hoco_to_zco(%struct.ZSpan* %32, float* %add.ptr53, float* %add.ptr55), !dbg !611
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !612
  %zbuflinefunc56 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 35, !dbg !613
  %34 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc56, align 8, !dbg !613
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !614
  %36 = load i32, i32* %obi.addr, align 4, !dbg !615
  %37 = load i32, i32* %zvlnr.addr, align 4, !dbg !616
  %arraydecay57 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !617
  %arraydecay58 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !618
  %add.ptr59 = getelementptr inbounds float, float* %arraydecay58, i64 4, !dbg !619
  call void %34(%struct.ZSpan* %35, i32 %36, i32 %37, float* %arraydecay57, float* %add.ptr59), !dbg !612
  br label %if.end60, !dbg !620

if.end60:                                         ; preds = %if.then49, %if.then40
  br label %if.end61, !dbg !621

if.end61:                                         ; preds = %if.end60, %if.end37
  %38 = load float*, float** %ho4.addr, align 8, !dbg !622
  %tobool62 = icmp ne float* %38, null, !dbg !622
  br i1 %tobool62, label %if.then63, label %if.else112, !dbg !624

if.then63:                                        ; preds = %if.end61
  %39 = load i32, i32* %ec.addr, align 4, !dbg !625
  %and64 = and i32 %39, 4, !dbg !628
  %tobool65 = icmp ne i32 %and64, 0, !dbg !628
  br i1 %tobool65, label %if.then66, label %if.end87, !dbg !629

if.then66:                                        ; preds = %if.then63
  %arraydecay67 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !630
  %40 = load float*, float** %ho3.addr, align 8, !dbg !632
  call void @copy_v4_v4(float* %arraydecay67, float* %40), !dbg !633
  %arraydecay68 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !634
  %add.ptr69 = getelementptr inbounds float, float* %arraydecay68, i64 4, !dbg !635
  %41 = load float*, float** %ho4.addr, align 8, !dbg !636
  call void @copy_v4_v4(float* %add.ptr69, float* %41), !dbg !637
  %arraydecay70 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !638
  %arraydecay71 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !640
  %add.ptr72 = getelementptr inbounds float, float* %arraydecay71, i64 4, !dbg !641
  %call73 = call i32 @clipline(float* %arraydecay70, float* %add.ptr72), !dbg !642
  %tobool74 = icmp ne i32 %call73, 0, !dbg !642
  br i1 %tobool74, label %if.then75, label %if.end86, !dbg !643

if.then75:                                        ; preds = %if.then66
  %42 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !644
  %arraydecay76 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !646
  %arraydecay77 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !647
  call void @hoco_to_zco(%struct.ZSpan* %42, float* %arraydecay76, float* %arraydecay77), !dbg !648
  %43 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !649
  %arraydecay78 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !650
  %add.ptr79 = getelementptr inbounds float, float* %arraydecay78, i64 4, !dbg !651
  %arraydecay80 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !652
  %add.ptr81 = getelementptr inbounds float, float* %arraydecay80, i64 4, !dbg !653
  call void @hoco_to_zco(%struct.ZSpan* %43, float* %add.ptr79, float* %add.ptr81), !dbg !654
  %44 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !655
  %zbuflinefunc82 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %44, i32 0, i32 35, !dbg !656
  %45 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc82, align 8, !dbg !656
  %46 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !657
  %47 = load i32, i32* %obi.addr, align 4, !dbg !658
  %48 = load i32, i32* %zvlnr.addr, align 4, !dbg !659
  %arraydecay83 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !660
  %arraydecay84 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !661
  %add.ptr85 = getelementptr inbounds float, float* %arraydecay84, i64 4, !dbg !662
  call void %45(%struct.ZSpan* %46, i32 %47, i32 %48, float* %arraydecay83, float* %add.ptr85), !dbg !655
  br label %if.end86, !dbg !663

if.end86:                                         ; preds = %if.then75, %if.then66
  br label %if.end87, !dbg !664

if.end87:                                         ; preds = %if.end86, %if.then63
  %49 = load i32, i32* %ec.addr, align 4, !dbg !665
  %and88 = and i32 %49, 8, !dbg !667
  %tobool89 = icmp ne i32 %and88, 0, !dbg !667
  br i1 %tobool89, label %if.then90, label %if.end111, !dbg !668

if.then90:                                        ; preds = %if.end87
  %arraydecay91 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !669
  %50 = load float*, float** %ho4.addr, align 8, !dbg !671
  call void @copy_v4_v4(float* %arraydecay91, float* %50), !dbg !672
  %arraydecay92 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !673
  %add.ptr93 = getelementptr inbounds float, float* %arraydecay92, i64 4, !dbg !674
  %51 = load float*, float** %ho1.addr, align 8, !dbg !675
  call void @copy_v4_v4(float* %add.ptr93, float* %51), !dbg !676
  %arraydecay94 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !677
  %arraydecay95 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !679
  %add.ptr96 = getelementptr inbounds float, float* %arraydecay95, i64 4, !dbg !680
  %call97 = call i32 @clipline(float* %arraydecay94, float* %add.ptr96), !dbg !681
  %tobool98 = icmp ne i32 %call97, 0, !dbg !681
  br i1 %tobool98, label %if.then99, label %if.end110, !dbg !682

if.then99:                                        ; preds = %if.then90
  %52 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !683
  %arraydecay100 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !685
  %arraydecay101 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !686
  call void @hoco_to_zco(%struct.ZSpan* %52, float* %arraydecay100, float* %arraydecay101), !dbg !687
  %53 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !688
  %arraydecay102 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !689
  %add.ptr103 = getelementptr inbounds float, float* %arraydecay102, i64 4, !dbg !690
  %arraydecay104 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !691
  %add.ptr105 = getelementptr inbounds float, float* %arraydecay104, i64 4, !dbg !692
  call void @hoco_to_zco(%struct.ZSpan* %53, float* %add.ptr103, float* %add.ptr105), !dbg !693
  %54 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !694
  %zbuflinefunc106 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %54, i32 0, i32 35, !dbg !695
  %55 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc106, align 8, !dbg !695
  %56 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !696
  %57 = load i32, i32* %obi.addr, align 4, !dbg !697
  %58 = load i32, i32* %zvlnr.addr, align 4, !dbg !698
  %arraydecay107 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !699
  %arraydecay108 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !700
  %add.ptr109 = getelementptr inbounds float, float* %arraydecay108, i64 4, !dbg !701
  call void %55(%struct.ZSpan* %56, i32 %57, i32 %58, float* %arraydecay107, float* %add.ptr109), !dbg !694
  br label %if.end110, !dbg !702

if.end110:                                        ; preds = %if.then99, %if.then90
  br label %if.end111, !dbg !703

if.end111:                                        ; preds = %if.end110, %if.end87
  br label %if.end137, !dbg !704

if.else112:                                       ; preds = %if.end61
  %59 = load i32, i32* %ec.addr, align 4, !dbg !705
  %and113 = and i32 %59, 4, !dbg !708
  %tobool114 = icmp ne i32 %and113, 0, !dbg !708
  br i1 %tobool114, label %if.then115, label %if.end136, !dbg !709

if.then115:                                       ; preds = %if.else112
  %arraydecay116 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !710
  %60 = load float*, float** %ho3.addr, align 8, !dbg !712
  call void @copy_v4_v4(float* %arraydecay116, float* %60), !dbg !713
  %arraydecay117 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !714
  %add.ptr118 = getelementptr inbounds float, float* %arraydecay117, i64 4, !dbg !715
  %61 = load float*, float** %ho1.addr, align 8, !dbg !716
  call void @copy_v4_v4(float* %add.ptr118, float* %61), !dbg !717
  %arraydecay119 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !718
  %arraydecay120 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !720
  %add.ptr121 = getelementptr inbounds float, float* %arraydecay120, i64 4, !dbg !721
  %call122 = call i32 @clipline(float* %arraydecay119, float* %add.ptr121), !dbg !722
  %tobool123 = icmp ne i32 %call122, 0, !dbg !722
  br i1 %tobool123, label %if.then124, label %if.end135, !dbg !723

if.then124:                                       ; preds = %if.then115
  %62 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !724
  %arraydecay125 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !726
  %arraydecay126 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !727
  call void @hoco_to_zco(%struct.ZSpan* %62, float* %arraydecay125, float* %arraydecay126), !dbg !728
  %63 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !729
  %arraydecay127 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !730
  %add.ptr128 = getelementptr inbounds float, float* %arraydecay127, i64 4, !dbg !731
  %arraydecay129 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !732
  %add.ptr130 = getelementptr inbounds float, float* %arraydecay129, i64 4, !dbg !733
  call void @hoco_to_zco(%struct.ZSpan* %63, float* %add.ptr128, float* %add.ptr130), !dbg !734
  %64 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !735
  %zbuflinefunc131 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %64, i32 0, i32 35, !dbg !736
  %65 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc131, align 8, !dbg !736
  %66 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !737
  %67 = load i32, i32* %obi.addr, align 4, !dbg !738
  %68 = load i32, i32* %zvlnr.addr, align 4, !dbg !739
  %arraydecay132 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !740
  %arraydecay133 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !741
  %add.ptr134 = getelementptr inbounds float, float* %arraydecay133, i64 4, !dbg !742
  call void %65(%struct.ZSpan* %66, i32 %67, i32 %68, float* %arraydecay132, float* %add.ptr134), !dbg !735
  br label %if.end135, !dbg !743

if.end135:                                        ; preds = %if.then124, %if.then115
  br label %if.end136, !dbg !744

if.end136:                                        ; preds = %if.end135, %if.else112
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end111
  br label %if.end191, !dbg !745

if.end138:                                        ; preds = %if.end12
  %69 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !746
  %arraydecay139 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !747
  %70 = load float*, float** %ho1.addr, align 8, !dbg !748
  call void @hoco_to_zco(%struct.ZSpan* %69, float* %arraydecay139, float* %70), !dbg !749
  %71 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !750
  %arraydecay140 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !751
  %add.ptr141 = getelementptr inbounds float, float* %arraydecay140, i64 4, !dbg !752
  %72 = load float*, float** %ho2.addr, align 8, !dbg !753
  call void @hoco_to_zco(%struct.ZSpan* %71, float* %add.ptr141, float* %72), !dbg !754
  %73 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !755
  %arraydecay142 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !756
  %add.ptr143 = getelementptr inbounds float, float* %arraydecay142, i64 8, !dbg !757
  %74 = load float*, float** %ho3.addr, align 8, !dbg !758
  call void @hoco_to_zco(%struct.ZSpan* %73, float* %add.ptr143, float* %74), !dbg !759
  %75 = load float*, float** %ho4.addr, align 8, !dbg !760
  %tobool144 = icmp ne float* %75, null, !dbg !760
  br i1 %tobool144, label %if.then145, label %if.else165, !dbg !762

if.then145:                                       ; preds = %if.end138
  %76 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !763
  %arraydecay146 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !765
  %add.ptr147 = getelementptr inbounds float, float* %arraydecay146, i64 12, !dbg !766
  %77 = load float*, float** %ho4.addr, align 8, !dbg !767
  call void @hoco_to_zco(%struct.ZSpan* %76, float* %add.ptr147, float* %77), !dbg !768
  %78 = load i32, i32* %ec.addr, align 4, !dbg !769
  %and148 = and i32 %78, 4, !dbg !771
  %tobool149 = icmp ne i32 %and148, 0, !dbg !771
  br i1 %tobool149, label %if.then150, label %if.end156, !dbg !772

if.then150:                                       ; preds = %if.then145
  %79 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !773
  %zbuflinefunc151 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %79, i32 0, i32 35, !dbg !774
  %80 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc151, align 8, !dbg !774
  %81 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !775
  %82 = load i32, i32* %obi.addr, align 4, !dbg !776
  %83 = load i32, i32* %zvlnr.addr, align 4, !dbg !777
  %arraydecay152 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !778
  %add.ptr153 = getelementptr inbounds float, float* %arraydecay152, i64 8, !dbg !779
  %arraydecay154 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !780
  %add.ptr155 = getelementptr inbounds float, float* %arraydecay154, i64 12, !dbg !781
  call void %80(%struct.ZSpan* %81, i32 %82, i32 %83, float* %add.ptr153, float* %add.ptr155), !dbg !773
  br label %if.end156, !dbg !773

if.end156:                                        ; preds = %if.then150, %if.then145
  %84 = load i32, i32* %ec.addr, align 4, !dbg !782
  %and157 = and i32 %84, 8, !dbg !784
  %tobool158 = icmp ne i32 %and157, 0, !dbg !784
  br i1 %tobool158, label %if.then159, label %if.end164, !dbg !785

if.then159:                                       ; preds = %if.end156
  %85 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !786
  %zbuflinefunc160 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %85, i32 0, i32 35, !dbg !787
  %86 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc160, align 8, !dbg !787
  %87 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !788
  %88 = load i32, i32* %obi.addr, align 4, !dbg !789
  %89 = load i32, i32* %zvlnr.addr, align 4, !dbg !790
  %arraydecay161 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !791
  %add.ptr162 = getelementptr inbounds float, float* %arraydecay161, i64 12, !dbg !792
  %arraydecay163 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !793
  call void %86(%struct.ZSpan* %87, i32 %88, i32 %89, float* %add.ptr162, float* %arraydecay163), !dbg !786
  br label %if.end164, !dbg !786

if.end164:                                        ; preds = %if.then159, %if.end156
  br label %if.end174, !dbg !794

if.else165:                                       ; preds = %if.end138
  %90 = load i32, i32* %ec.addr, align 4, !dbg !795
  %and166 = and i32 %90, 4, !dbg !798
  %tobool167 = icmp ne i32 %and166, 0, !dbg !798
  br i1 %tobool167, label %if.then168, label %if.end173, !dbg !799

if.then168:                                       ; preds = %if.else165
  %91 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !800
  %zbuflinefunc169 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %91, i32 0, i32 35, !dbg !801
  %92 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc169, align 8, !dbg !801
  %93 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !802
  %94 = load i32, i32* %obi.addr, align 4, !dbg !803
  %95 = load i32, i32* %zvlnr.addr, align 4, !dbg !804
  %arraydecay170 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !805
  %add.ptr171 = getelementptr inbounds float, float* %arraydecay170, i64 8, !dbg !806
  %arraydecay172 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !807
  call void %92(%struct.ZSpan* %93, i32 %94, i32 %95, float* %add.ptr171, float* %arraydecay172), !dbg !800
  br label %if.end173, !dbg !800

if.end173:                                        ; preds = %if.then168, %if.else165
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end164
  %96 = load i32, i32* %ec.addr, align 4, !dbg !808
  %and175 = and i32 %96, 1, !dbg !810
  %tobool176 = icmp ne i32 %and175, 0, !dbg !810
  br i1 %tobool176, label %if.then177, label %if.end182, !dbg !811

if.then177:                                       ; preds = %if.end174
  %97 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !812
  %zbuflinefunc178 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %97, i32 0, i32 35, !dbg !813
  %98 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc178, align 8, !dbg !813
  %99 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !814
  %100 = load i32, i32* %obi.addr, align 4, !dbg !815
  %101 = load i32, i32* %zvlnr.addr, align 4, !dbg !816
  %arraydecay179 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !817
  %arraydecay180 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !818
  %add.ptr181 = getelementptr inbounds float, float* %arraydecay180, i64 4, !dbg !819
  call void %98(%struct.ZSpan* %99, i32 %100, i32 %101, float* %arraydecay179, float* %add.ptr181), !dbg !812
  br label %if.end182, !dbg !812

if.end182:                                        ; preds = %if.then177, %if.end174
  %102 = load i32, i32* %ec.addr, align 4, !dbg !820
  %and183 = and i32 %102, 2, !dbg !822
  %tobool184 = icmp ne i32 %and183, 0, !dbg !822
  br i1 %tobool184, label %if.then185, label %if.end191, !dbg !823

if.then185:                                       ; preds = %if.end182
  %103 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !824
  %zbuflinefunc186 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %103, i32 0, i32 35, !dbg !825
  %104 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc186, align 8, !dbg !825
  %105 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !826
  %106 = load i32, i32* %obi.addr, align 4, !dbg !827
  %107 = load i32, i32* %zvlnr.addr, align 4, !dbg !828
  %arraydecay187 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !829
  %add.ptr188 = getelementptr inbounds float, float* %arraydecay187, i64 4, !dbg !830
  %arraydecay189 = getelementptr inbounds [20 x float], [20 x float]* %vez, i64 0, i64 0, !dbg !831
  %add.ptr190 = getelementptr inbounds float, float* %arraydecay189, i64 8, !dbg !832
  call void %104(%struct.ZSpan* %105, i32 %106, i32 %107, float* %add.ptr188, float* %add.ptr190), !dbg !824
  br label %if.end191, !dbg !824

if.end191:                                        ; preds = %if.then, %if.then16, %if.end137, %if.then185, %if.end182
  ret void, !dbg !833
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !834 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !838, metadata !DIExpression()), !dbg !839
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !840, metadata !DIExpression()), !dbg !841
  %0 = load float*, float** %a.addr, align 8, !dbg !842
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !842
  %1 = load float, float* %arrayidx, align 4, !dbg !842
  %2 = load float*, float** %r.addr, align 8, !dbg !843
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !843
  store float %1, float* %arrayidx1, align 4, !dbg !844
  %3 = load float*, float** %a.addr, align 8, !dbg !845
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !845
  %4 = load float, float* %arrayidx2, align 4, !dbg !845
  %5 = load float*, float** %r.addr, align 8, !dbg !846
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !846
  store float %4, float* %arrayidx3, align 4, !dbg !847
  %6 = load float*, float** %a.addr, align 8, !dbg !848
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !848
  %7 = load float, float* %arrayidx4, align 4, !dbg !848
  %8 = load float*, float** %r.addr, align 8, !dbg !849
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !849
  store float %7, float* %arrayidx5, align 4, !dbg !850
  %9 = load float*, float** %a.addr, align 8, !dbg !851
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !851
  %10 = load float, float* %arrayidx6, align 4, !dbg !851
  %11 = load float*, float** %r.addr, align 8, !dbg !852
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !852
  store float %10, float* %arrayidx7, align 4, !dbg !853
  ret void, !dbg !854
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @clipline(float* %v1, float* %v2) #0 !dbg !855 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %dz = alloca float, align 4
  %dw = alloca float, align 4
  %u1 = alloca float, align 4
  %u2 = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %v13 = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !858, metadata !DIExpression()), !dbg !859
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !860, metadata !DIExpression()), !dbg !861
  call void @llvm.dbg.declare(metadata float* %dz, metadata !862, metadata !DIExpression()), !dbg !863
  call void @llvm.dbg.declare(metadata float* %dw, metadata !864, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.declare(metadata float* %u1, metadata !866, metadata !DIExpression()), !dbg !867
  store float 0.000000e+00, float* %u1, align 4, !dbg !867
  call void @llvm.dbg.declare(metadata float* %u2, metadata !868, metadata !DIExpression()), !dbg !869
  store float 1.000000e+00, float* %u2, align 4, !dbg !869
  call void @llvm.dbg.declare(metadata float* %dx, metadata !870, metadata !DIExpression()), !dbg !871
  call void @llvm.dbg.declare(metadata float* %dy, metadata !872, metadata !DIExpression()), !dbg !873
  call void @llvm.dbg.declare(metadata float* %v13, metadata !874, metadata !DIExpression()), !dbg !875
  %0 = load float*, float** %v2.addr, align 8, !dbg !876
  %arrayidx = getelementptr inbounds float, float* %0, i64 2, !dbg !876
  %1 = load float, float* %arrayidx, align 4, !dbg !876
  %2 = load float*, float** %v1.addr, align 8, !dbg !877
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !877
  %3 = load float, float* %arrayidx1, align 4, !dbg !877
  %sub = fsub float %1, %3, !dbg !878
  store float %sub, float* %dz, align 4, !dbg !879
  %4 = load float*, float** %v2.addr, align 8, !dbg !880
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 3, !dbg !880
  %5 = load float, float* %arrayidx2, align 4, !dbg !880
  %6 = load float*, float** %v1.addr, align 8, !dbg !881
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 3, !dbg !881
  %7 = load float, float* %arrayidx3, align 4, !dbg !881
  %sub4 = fsub float %5, %7, !dbg !882
  store float %sub4, float* %dw, align 4, !dbg !883
  %8 = load float, float* %dz, align 4, !dbg !884
  %fneg = fneg float %8, !dbg !886
  %9 = load float, float* %dw, align 4, !dbg !887
  %fneg5 = fneg float %9, !dbg !888
  %10 = load float*, float** %v1.addr, align 8, !dbg !889
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 3, !dbg !889
  %11 = load float, float* %arrayidx6, align 4, !dbg !889
  %12 = load float*, float** %v1.addr, align 8, !dbg !890
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 2, !dbg !890
  %13 = load float, float* %arrayidx7, align 4, !dbg !890
  %call = call signext i16 @cliptestf(float %fneg, float %fneg5, float %11, float %13, float* %u1, float* %u2), !dbg !891
  %tobool = icmp ne i16 %call, 0, !dbg !891
  br i1 %tobool, label %if.then, label %if.end90, !dbg !892

if.then:                                          ; preds = %entry
  %14 = load float, float* %dz, align 4, !dbg !893
  %15 = load float, float* %dw, align 4, !dbg !896
  %fneg8 = fneg float %15, !dbg !897
  %16 = load float*, float** %v1.addr, align 8, !dbg !898
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 3, !dbg !898
  %17 = load float, float* %arrayidx9, align 4, !dbg !898
  %18 = load float*, float** %v1.addr, align 8, !dbg !899
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 2, !dbg !899
  %19 = load float, float* %arrayidx10, align 4, !dbg !899
  %fneg11 = fneg float %19, !dbg !900
  %call12 = call signext i16 @cliptestf(float %14, float %fneg8, float %17, float %fneg11, float* %u1, float* %u2), !dbg !901
  %tobool13 = icmp ne i16 %call12, 0, !dbg !901
  br i1 %tobool13, label %if.then14, label %if.end89, !dbg !902

if.then14:                                        ; preds = %if.then
  %20 = load float*, float** %v2.addr, align 8, !dbg !903
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !903
  %21 = load float, float* %arrayidx15, align 4, !dbg !903
  %22 = load float*, float** %v1.addr, align 8, !dbg !905
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !905
  %23 = load float, float* %arrayidx16, align 4, !dbg !905
  %sub17 = fsub float %21, %23, !dbg !906
  store float %sub17, float* %dx, align 4, !dbg !907
  %24 = load float*, float** %v2.addr, align 8, !dbg !908
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 3, !dbg !908
  %25 = load float, float* %arrayidx18, align 4, !dbg !908
  %26 = load float*, float** %v1.addr, align 8, !dbg !909
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 3, !dbg !909
  %27 = load float, float* %arrayidx19, align 4, !dbg !909
  %sub20 = fsub float %25, %27, !dbg !910
  %mul = fmul float 0x3FF028F5C0000000, %sub20, !dbg !911
  store float %mul, float* %dz, align 4, !dbg !912
  %28 = load float*, float** %v1.addr, align 8, !dbg !913
  %arrayidx21 = getelementptr inbounds float, float* %28, i64 3, !dbg !913
  %29 = load float, float* %arrayidx21, align 4, !dbg !913
  %mul22 = fmul float 0x3FF028F5C0000000, %29, !dbg !914
  store float %mul22, float* %v13, align 4, !dbg !915
  %30 = load float, float* %dx, align 4, !dbg !916
  %fneg23 = fneg float %30, !dbg !918
  %31 = load float, float* %dz, align 4, !dbg !919
  %fneg24 = fneg float %31, !dbg !920
  %32 = load float*, float** %v1.addr, align 8, !dbg !921
  %arrayidx25 = getelementptr inbounds float, float* %32, i64 0, !dbg !921
  %33 = load float, float* %arrayidx25, align 4, !dbg !921
  %34 = load float, float* %v13, align 4, !dbg !922
  %call26 = call signext i16 @cliptestf(float %fneg23, float %fneg24, float %33, float %34, float* %u1, float* %u2), !dbg !923
  %tobool27 = icmp ne i16 %call26, 0, !dbg !923
  br i1 %tobool27, label %if.then28, label %if.end88, !dbg !924

if.then28:                                        ; preds = %if.then14
  %35 = load float, float* %dx, align 4, !dbg !925
  %36 = load float, float* %dz, align 4, !dbg !928
  %fneg29 = fneg float %36, !dbg !929
  %37 = load float, float* %v13, align 4, !dbg !930
  %38 = load float*, float** %v1.addr, align 8, !dbg !931
  %arrayidx30 = getelementptr inbounds float, float* %38, i64 0, !dbg !931
  %39 = load float, float* %arrayidx30, align 4, !dbg !931
  %fneg31 = fneg float %39, !dbg !932
  %call32 = call signext i16 @cliptestf(float %35, float %fneg29, float %37, float %fneg31, float* %u1, float* %u2), !dbg !933
  %tobool33 = icmp ne i16 %call32, 0, !dbg !933
  br i1 %tobool33, label %if.then34, label %if.end87, !dbg !934

if.then34:                                        ; preds = %if.then28
  %40 = load float*, float** %v2.addr, align 8, !dbg !935
  %arrayidx35 = getelementptr inbounds float, float* %40, i64 1, !dbg !935
  %41 = load float, float* %arrayidx35, align 4, !dbg !935
  %42 = load float*, float** %v1.addr, align 8, !dbg !937
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 1, !dbg !937
  %43 = load float, float* %arrayidx36, align 4, !dbg !937
  %sub37 = fsub float %41, %43, !dbg !938
  store float %sub37, float* %dy, align 4, !dbg !939
  %44 = load float, float* %dy, align 4, !dbg !940
  %fneg38 = fneg float %44, !dbg !942
  %45 = load float, float* %dz, align 4, !dbg !943
  %fneg39 = fneg float %45, !dbg !944
  %46 = load float*, float** %v1.addr, align 8, !dbg !945
  %arrayidx40 = getelementptr inbounds float, float* %46, i64 1, !dbg !945
  %47 = load float, float* %arrayidx40, align 4, !dbg !945
  %48 = load float, float* %v13, align 4, !dbg !946
  %call41 = call signext i16 @cliptestf(float %fneg38, float %fneg39, float %47, float %48, float* %u1, float* %u2), !dbg !947
  %tobool42 = icmp ne i16 %call41, 0, !dbg !947
  br i1 %tobool42, label %if.then43, label %if.end86, !dbg !948

if.then43:                                        ; preds = %if.then34
  %49 = load float, float* %dy, align 4, !dbg !949
  %50 = load float, float* %dz, align 4, !dbg !952
  %fneg44 = fneg float %50, !dbg !953
  %51 = load float, float* %v13, align 4, !dbg !954
  %52 = load float*, float** %v1.addr, align 8, !dbg !955
  %arrayidx45 = getelementptr inbounds float, float* %52, i64 1, !dbg !955
  %53 = load float, float* %arrayidx45, align 4, !dbg !955
  %fneg46 = fneg float %53, !dbg !956
  %call47 = call signext i16 @cliptestf(float %49, float %fneg44, float %51, float %fneg46, float* %u1, float* %u2), !dbg !957
  %tobool48 = icmp ne i16 %call47, 0, !dbg !957
  br i1 %tobool48, label %if.then49, label %if.end85, !dbg !958

if.then49:                                        ; preds = %if.then43
  %54 = load float, float* %u2, align 4, !dbg !959
  %cmp = fcmp olt float %54, 1.000000e+00, !dbg !962
  br i1 %cmp, label %if.then50, label %if.end, !dbg !963

if.then50:                                        ; preds = %if.then49
  %55 = load float*, float** %v1.addr, align 8, !dbg !964
  %arrayidx51 = getelementptr inbounds float, float* %55, i64 0, !dbg !964
  %56 = load float, float* %arrayidx51, align 4, !dbg !964
  %57 = load float, float* %u2, align 4, !dbg !966
  %58 = load float, float* %dx, align 4, !dbg !967
  %mul52 = fmul float %57, %58, !dbg !968
  %add = fadd float %56, %mul52, !dbg !969
  %59 = load float*, float** %v2.addr, align 8, !dbg !970
  %arrayidx53 = getelementptr inbounds float, float* %59, i64 0, !dbg !970
  store float %add, float* %arrayidx53, align 4, !dbg !971
  %60 = load float*, float** %v1.addr, align 8, !dbg !972
  %arrayidx54 = getelementptr inbounds float, float* %60, i64 1, !dbg !972
  %61 = load float, float* %arrayidx54, align 4, !dbg !972
  %62 = load float, float* %u2, align 4, !dbg !973
  %63 = load float, float* %dy, align 4, !dbg !974
  %mul55 = fmul float %62, %63, !dbg !975
  %add56 = fadd float %61, %mul55, !dbg !976
  %64 = load float*, float** %v2.addr, align 8, !dbg !977
  %arrayidx57 = getelementptr inbounds float, float* %64, i64 1, !dbg !977
  store float %add56, float* %arrayidx57, align 4, !dbg !978
  %65 = load float*, float** %v1.addr, align 8, !dbg !979
  %arrayidx58 = getelementptr inbounds float, float* %65, i64 2, !dbg !979
  %66 = load float, float* %arrayidx58, align 4, !dbg !979
  %67 = load float, float* %u2, align 4, !dbg !980
  %68 = load float, float* %dz, align 4, !dbg !981
  %mul59 = fmul float %67, %68, !dbg !982
  %add60 = fadd float %66, %mul59, !dbg !983
  %69 = load float*, float** %v2.addr, align 8, !dbg !984
  %arrayidx61 = getelementptr inbounds float, float* %69, i64 2, !dbg !984
  store float %add60, float* %arrayidx61, align 4, !dbg !985
  %70 = load float*, float** %v1.addr, align 8, !dbg !986
  %arrayidx62 = getelementptr inbounds float, float* %70, i64 3, !dbg !986
  %71 = load float, float* %arrayidx62, align 4, !dbg !986
  %72 = load float, float* %u2, align 4, !dbg !987
  %73 = load float, float* %dw, align 4, !dbg !988
  %mul63 = fmul float %72, %73, !dbg !989
  %add64 = fadd float %71, %mul63, !dbg !990
  %74 = load float*, float** %v2.addr, align 8, !dbg !991
  %arrayidx65 = getelementptr inbounds float, float* %74, i64 3, !dbg !991
  store float %add64, float* %arrayidx65, align 4, !dbg !992
  br label %if.end, !dbg !993

if.end:                                           ; preds = %if.then50, %if.then49
  %75 = load float, float* %u1, align 4, !dbg !994
  %cmp66 = fcmp ogt float %75, 0.000000e+00, !dbg !996
  br i1 %cmp66, label %if.then67, label %if.end84, !dbg !997

if.then67:                                        ; preds = %if.end
  %76 = load float*, float** %v1.addr, align 8, !dbg !998
  %arrayidx68 = getelementptr inbounds float, float* %76, i64 0, !dbg !998
  %77 = load float, float* %arrayidx68, align 4, !dbg !998
  %78 = load float, float* %u1, align 4, !dbg !1000
  %79 = load float, float* %dx, align 4, !dbg !1001
  %mul69 = fmul float %78, %79, !dbg !1002
  %add70 = fadd float %77, %mul69, !dbg !1003
  %80 = load float*, float** %v1.addr, align 8, !dbg !1004
  %arrayidx71 = getelementptr inbounds float, float* %80, i64 0, !dbg !1004
  store float %add70, float* %arrayidx71, align 4, !dbg !1005
  %81 = load float*, float** %v1.addr, align 8, !dbg !1006
  %arrayidx72 = getelementptr inbounds float, float* %81, i64 1, !dbg !1006
  %82 = load float, float* %arrayidx72, align 4, !dbg !1006
  %83 = load float, float* %u1, align 4, !dbg !1007
  %84 = load float, float* %dy, align 4, !dbg !1008
  %mul73 = fmul float %83, %84, !dbg !1009
  %add74 = fadd float %82, %mul73, !dbg !1010
  %85 = load float*, float** %v1.addr, align 8, !dbg !1011
  %arrayidx75 = getelementptr inbounds float, float* %85, i64 1, !dbg !1011
  store float %add74, float* %arrayidx75, align 4, !dbg !1012
  %86 = load float*, float** %v1.addr, align 8, !dbg !1013
  %arrayidx76 = getelementptr inbounds float, float* %86, i64 2, !dbg !1013
  %87 = load float, float* %arrayidx76, align 4, !dbg !1013
  %88 = load float, float* %u1, align 4, !dbg !1014
  %89 = load float, float* %dz, align 4, !dbg !1015
  %mul77 = fmul float %88, %89, !dbg !1016
  %add78 = fadd float %87, %mul77, !dbg !1017
  %90 = load float*, float** %v1.addr, align 8, !dbg !1018
  %arrayidx79 = getelementptr inbounds float, float* %90, i64 2, !dbg !1018
  store float %add78, float* %arrayidx79, align 4, !dbg !1019
  %91 = load float*, float** %v1.addr, align 8, !dbg !1020
  %arrayidx80 = getelementptr inbounds float, float* %91, i64 3, !dbg !1020
  %92 = load float, float* %arrayidx80, align 4, !dbg !1020
  %93 = load float, float* %u1, align 4, !dbg !1021
  %94 = load float, float* %dw, align 4, !dbg !1022
  %mul81 = fmul float %93, %94, !dbg !1023
  %add82 = fadd float %92, %mul81, !dbg !1024
  %95 = load float*, float** %v1.addr, align 8, !dbg !1025
  %arrayidx83 = getelementptr inbounds float, float* %95, i64 3, !dbg !1025
  store float %add82, float* %arrayidx83, align 4, !dbg !1026
  br label %if.end84, !dbg !1027

if.end84:                                         ; preds = %if.then67, %if.end
  store i32 1, i32* %retval, align 4, !dbg !1028
  br label %return, !dbg !1028

if.end85:                                         ; preds = %if.then43
  br label %if.end86, !dbg !1029

if.end86:                                         ; preds = %if.end85, %if.then34
  br label %if.end87, !dbg !1030

if.end87:                                         ; preds = %if.end86, %if.then28
  br label %if.end88, !dbg !1031

if.end88:                                         ; preds = %if.end87, %if.then14
  br label %if.end89, !dbg !1032

if.end89:                                         ; preds = %if.end88, %if.then
  br label %if.end90, !dbg !1033

if.end90:                                         ; preds = %if.end89, %entry
  store i32 0, i32* %retval, align 4, !dbg !1034
  br label %return, !dbg !1034

return:                                           ; preds = %if.end90, %if.end84
  %96 = load i32, i32* %retval, align 4, !dbg !1035
  ret i32 %96, !dbg !1035
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufsinglewire(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %ho1, float* %ho2) #0 !dbg !1036 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %ho1.addr = alloca float*, align 8
  %ho2.addr = alloca float*, align 8
  %f1 = alloca [4 x float], align 16
  %f2 = alloca [4 x float], align 16
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !1039, metadata !DIExpression()), !dbg !1040
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !1041, metadata !DIExpression()), !dbg !1042
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !1043, metadata !DIExpression()), !dbg !1044
  store float* %ho1, float** %ho1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho1.addr, metadata !1045, metadata !DIExpression()), !dbg !1046
  store float* %ho2, float** %ho2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho2.addr, metadata !1047, metadata !DIExpression()), !dbg !1048
  call void @llvm.dbg.declare(metadata [4 x float]* %f1, metadata !1049, metadata !DIExpression()), !dbg !1050
  call void @llvm.dbg.declare(metadata [4 x float]* %f2, metadata !1051, metadata !DIExpression()), !dbg !1052
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !1053, metadata !DIExpression()), !dbg !1054
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !1055, metadata !DIExpression()), !dbg !1056
  %0 = load float*, float** %ho1.addr, align 8, !dbg !1057
  %call = call i32 @testclip(float* %0), !dbg !1058
  store i32 %call, i32* %c1, align 4, !dbg !1059
  %1 = load float*, float** %ho2.addr, align 8, !dbg !1060
  %call1 = call i32 @testclip(float* %1), !dbg !1061
  store i32 %call1, i32* %c2, align 4, !dbg !1062
  %2 = load i32, i32* %c1, align 4, !dbg !1063
  %3 = load i32, i32* %c2, align 4, !dbg !1065
  %or = or i32 %2, %3, !dbg !1066
  %tobool = icmp ne i32 %or, 0, !dbg !1066
  br i1 %tobool, label %if.then, label %if.else, !dbg !1067

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %c1, align 4, !dbg !1068
  %5 = load i32, i32* %c2, align 4, !dbg !1071
  %and = and i32 %4, %5, !dbg !1072
  %tobool2 = icmp ne i32 %and, 0, !dbg !1072
  br i1 %tobool2, label %if.end16, label %if.then3, !dbg !1073

if.then3:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1074
  %6 = load float*, float** %ho1.addr, align 8, !dbg !1076
  call void @copy_v4_v4(float* %arraydecay, float* %6), !dbg !1077
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1078
  %7 = load float*, float** %ho2.addr, align 8, !dbg !1079
  call void @copy_v4_v4(float* %arraydecay4, float* %7), !dbg !1080
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1081
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1083
  %call7 = call i32 @clipline(float* %arraydecay5, float* %arraydecay6), !dbg !1084
  %tobool8 = icmp ne i32 %call7, 0, !dbg !1084
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !1085

if.then9:                                         ; preds = %if.then3
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1086
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1088
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1089
  call void @hoco_to_zco(%struct.ZSpan* %8, float* %arraydecay10, float* %arraydecay11), !dbg !1090
  %9 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1091
  %arraydecay12 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1092
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1093
  call void @hoco_to_zco(%struct.ZSpan* %9, float* %arraydecay12, float* %arraydecay13), !dbg !1094
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1095
  %zbuflinefunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %10, i32 0, i32 35, !dbg !1096
  %11 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc, align 8, !dbg !1096
  %12 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1097
  %13 = load i32, i32* %obi.addr, align 4, !dbg !1098
  %14 = load i32, i32* %zvlnr.addr, align 4, !dbg !1099
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1100
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1101
  call void %11(%struct.ZSpan* %12, i32 %13, i32 %14, float* %arraydecay14, float* %arraydecay15), !dbg !1095
  br label %if.end, !dbg !1102

if.end:                                           ; preds = %if.then9, %if.then3
  br label %if.end16, !dbg !1103

if.end16:                                         ; preds = %if.end, %if.then
  br label %if.end22, !dbg !1104

if.else:                                          ; preds = %entry
  %15 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1105
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1107
  %16 = load float*, float** %ho1.addr, align 8, !dbg !1108
  call void @hoco_to_zco(%struct.ZSpan* %15, float* %arraydecay17, float* %16), !dbg !1109
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1110
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1111
  %18 = load float*, float** %ho2.addr, align 8, !dbg !1112
  call void @hoco_to_zco(%struct.ZSpan* %17, float* %arraydecay18, float* %18), !dbg !1113
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1114
  %zbuflinefunc19 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 35, !dbg !1115
  %20 = load void (%struct.ZSpan*, i32, i32, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc19, align 8, !dbg !1115
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1116
  %22 = load i32, i32* %obi.addr, align 4, !dbg !1117
  %23 = load i32, i32* %zvlnr.addr, align 4, !dbg !1118
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %f1, i64 0, i64 0, !dbg !1119
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %f2, i64 0, i64 0, !dbg !1120
  call void %20(%struct.ZSpan* %21, i32 %22, i32 %23, float* %arraydecay20, float* %arraydecay21), !dbg !1114
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end16
  ret void, !dbg !1121
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zspan_scanconvert_strand(%struct.ZSpan* %zspan, i8* %handle, float* %v1, float* %v2, float* %v3, void (i8*, i32, i32, float, float, float)* %func) #0 !dbg !1122 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %handle.addr = alloca i8*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %func.addr = alloca void (i8*, i32, i32, float, float, float)*, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z0 = alloca float, align 4
  %z1 = alloca float, align 4
  %z2 = alloca float, align 4
  %z = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %uxd = alloca float, align 4
  %uyd = alloca float, align 4
  %vxd = alloca float, align 4
  %vyd = alloca float, align 4
  %uy0 = alloca float, align 4
  %vy0 = alloca float, align 4
  %zxd = alloca float, align 4
  %zyd = alloca float, align 4
  %zy0 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !1128, metadata !DIExpression()), !dbg !1129
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !1130, metadata !DIExpression()), !dbg !1131
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1132, metadata !DIExpression()), !dbg !1133
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !1134, metadata !DIExpression()), !dbg !1135
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !1136, metadata !DIExpression()), !dbg !1137
  store void (i8*, i32, i32, float, float, float)* %func, void (i8*, i32, i32, float, float, float)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, float, float, float)** %func.addr, metadata !1138, metadata !DIExpression()), !dbg !1139
  call void @llvm.dbg.declare(metadata float* %x0, metadata !1140, metadata !DIExpression()), !dbg !1141
  call void @llvm.dbg.declare(metadata float* %y0, metadata !1142, metadata !DIExpression()), !dbg !1143
  call void @llvm.dbg.declare(metadata float* %x1, metadata !1144, metadata !DIExpression()), !dbg !1145
  call void @llvm.dbg.declare(metadata float* %y1, metadata !1146, metadata !DIExpression()), !dbg !1147
  call void @llvm.dbg.declare(metadata float* %x2, metadata !1148, metadata !DIExpression()), !dbg !1149
  call void @llvm.dbg.declare(metadata float* %y2, metadata !1150, metadata !DIExpression()), !dbg !1151
  call void @llvm.dbg.declare(metadata float* %z0, metadata !1152, metadata !DIExpression()), !dbg !1153
  call void @llvm.dbg.declare(metadata float* %z1, metadata !1154, metadata !DIExpression()), !dbg !1155
  call void @llvm.dbg.declare(metadata float* %z2, metadata !1156, metadata !DIExpression()), !dbg !1157
  call void @llvm.dbg.declare(metadata float* %z, metadata !1158, metadata !DIExpression()), !dbg !1159
  call void @llvm.dbg.declare(metadata float* %u, metadata !1160, metadata !DIExpression()), !dbg !1161
  call void @llvm.dbg.declare(metadata float* %v, metadata !1162, metadata !DIExpression()), !dbg !1163
  call void @llvm.dbg.declare(metadata float* %uxd, metadata !1164, metadata !DIExpression()), !dbg !1165
  call void @llvm.dbg.declare(metadata float* %uyd, metadata !1166, metadata !DIExpression()), !dbg !1167
  call void @llvm.dbg.declare(metadata float* %vxd, metadata !1168, metadata !DIExpression()), !dbg !1169
  call void @llvm.dbg.declare(metadata float* %vyd, metadata !1170, metadata !DIExpression()), !dbg !1171
  call void @llvm.dbg.declare(metadata float* %uy0, metadata !1172, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.declare(metadata float* %vy0, metadata !1174, metadata !DIExpression()), !dbg !1175
  call void @llvm.dbg.declare(metadata float* %zxd, metadata !1176, metadata !DIExpression()), !dbg !1177
  call void @llvm.dbg.declare(metadata float* %zyd, metadata !1178, metadata !DIExpression()), !dbg !1179
  call void @llvm.dbg.declare(metadata float* %zy0, metadata !1180, metadata !DIExpression()), !dbg !1181
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !1182, metadata !DIExpression()), !dbg !1183
  call void @llvm.dbg.declare(metadata float** %span1, metadata !1184, metadata !DIExpression()), !dbg !1185
  call void @llvm.dbg.declare(metadata float** %span2, metadata !1186, metadata !DIExpression()), !dbg !1187
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1188, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1190, metadata !DIExpression()), !dbg !1191
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !1192, metadata !DIExpression()), !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !1194, metadata !DIExpression()), !dbg !1195
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !1196, metadata !DIExpression()), !dbg !1197
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1198
  %rectx1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %0, i32 0, i32 0, !dbg !1199
  %1 = load i32, i32* %rectx1, align 8, !dbg !1199
  store i32 %1, i32* %rectx, align 4, !dbg !1197
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !1200, metadata !DIExpression()), !dbg !1201
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !1202, metadata !DIExpression()), !dbg !1203
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1204
  call void @zbuf_init_span(%struct.ZSpan* %2), !dbg !1205
  %3 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1206
  %4 = load float*, float** %v1.addr, align 8, !dbg !1207
  %5 = load float*, float** %v2.addr, align 8, !dbg !1208
  call void @zbuf_add_to_span(%struct.ZSpan* %3, float* %4, float* %5), !dbg !1209
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1210
  %7 = load float*, float** %v2.addr, align 8, !dbg !1211
  %8 = load float*, float** %v3.addr, align 8, !dbg !1212
  call void @zbuf_add_to_span(%struct.ZSpan* %6, float* %7, float* %8), !dbg !1213
  %9 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1214
  %10 = load float*, float** %v3.addr, align 8, !dbg !1215
  %11 = load float*, float** %v1.addr, align 8, !dbg !1216
  call void @zbuf_add_to_span(%struct.ZSpan* %9, float* %10, float* %11), !dbg !1217
  %12 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1218
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %12, i32 0, i32 8, !dbg !1220
  %13 = load float*, float** %minp2, align 8, !dbg !1220
  %cmp = icmp eq float* %13, null, !dbg !1221
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1222

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1223
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %14, i32 0, i32 9, !dbg !1224
  %15 = load float*, float** %maxp2, align 8, !dbg !1224
  %cmp2 = icmp eq float* %15, null, !dbg !1225
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1226

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end189, !dbg !1227

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1228
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %16, i32 0, i32 2, !dbg !1230
  %17 = load i32, i32* %miny1, align 8, !dbg !1230
  %18 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1231
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %18, i32 0, i32 4, !dbg !1232
  %19 = load i32, i32* %miny2, align 8, !dbg !1232
  %cmp3 = icmp slt i32 %17, %19, !dbg !1233
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !1234

if.then4:                                         ; preds = %if.end
  %20 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1235
  %miny25 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %20, i32 0, i32 4, !dbg !1236
  %21 = load i32, i32* %miny25, align 8, !dbg !1236
  store i32 %21, i32* %my0, align 4, !dbg !1237
  br label %if.end7, !dbg !1238

if.else:                                          ; preds = %if.end
  %22 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1239
  %miny16 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %22, i32 0, i32 2, !dbg !1240
  %23 = load i32, i32* %miny16, align 8, !dbg !1240
  store i32 %23, i32* %my0, align 4, !dbg !1241
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %24 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1242
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %24, i32 0, i32 3, !dbg !1244
  %25 = load i32, i32* %maxy1, align 4, !dbg !1244
  %26 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1245
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %26, i32 0, i32 5, !dbg !1246
  %27 = load i32, i32* %maxy2, align 4, !dbg !1246
  %cmp8 = icmp sgt i32 %25, %27, !dbg !1247
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !1248

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1249
  %maxy210 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %28, i32 0, i32 5, !dbg !1250
  %29 = load i32, i32* %maxy210, align 4, !dbg !1250
  store i32 %29, i32* %my2, align 4, !dbg !1251
  br label %if.end13, !dbg !1252

if.else11:                                        ; preds = %if.end7
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1253
  %maxy112 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %30, i32 0, i32 3, !dbg !1254
  %31 = load i32, i32* %maxy112, align 4, !dbg !1254
  store i32 %31, i32* %my2, align 4, !dbg !1255
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9
  %32 = load i32, i32* %my2, align 4, !dbg !1256
  %33 = load i32, i32* %my0, align 4, !dbg !1258
  %cmp14 = icmp slt i32 %32, %33, !dbg !1259
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !1260

if.then15:                                        ; preds = %if.end13
  br label %for.end189, !dbg !1261

if.end16:                                         ; preds = %if.end13
  %34 = load float*, float** %v1.addr, align 8, !dbg !1262
  %arrayidx = getelementptr inbounds float, float* %34, i64 0, !dbg !1262
  %35 = load float, float* %arrayidx, align 4, !dbg !1262
  %36 = load float*, float** %v2.addr, align 8, !dbg !1263
  %arrayidx17 = getelementptr inbounds float, float* %36, i64 0, !dbg !1263
  %37 = load float, float* %arrayidx17, align 4, !dbg !1263
  %sub = fsub float %35, %37, !dbg !1264
  store float %sub, float* %x1, align 4, !dbg !1265
  %38 = load float*, float** %v2.addr, align 8, !dbg !1266
  %arrayidx18 = getelementptr inbounds float, float* %38, i64 0, !dbg !1266
  %39 = load float, float* %arrayidx18, align 4, !dbg !1266
  %40 = load float*, float** %v3.addr, align 8, !dbg !1267
  %arrayidx19 = getelementptr inbounds float, float* %40, i64 0, !dbg !1267
  %41 = load float, float* %arrayidx19, align 4, !dbg !1267
  %sub20 = fsub float %39, %41, !dbg !1268
  store float %sub20, float* %x2, align 4, !dbg !1269
  %42 = load float*, float** %v1.addr, align 8, !dbg !1270
  %arrayidx21 = getelementptr inbounds float, float* %42, i64 1, !dbg !1270
  %43 = load float, float* %arrayidx21, align 4, !dbg !1270
  %44 = load float*, float** %v2.addr, align 8, !dbg !1271
  %arrayidx22 = getelementptr inbounds float, float* %44, i64 1, !dbg !1271
  %45 = load float, float* %arrayidx22, align 4, !dbg !1271
  %sub23 = fsub float %43, %45, !dbg !1272
  store float %sub23, float* %y1, align 4, !dbg !1273
  %46 = load float*, float** %v2.addr, align 8, !dbg !1274
  %arrayidx24 = getelementptr inbounds float, float* %46, i64 1, !dbg !1274
  %47 = load float, float* %arrayidx24, align 4, !dbg !1274
  %48 = load float*, float** %v3.addr, align 8, !dbg !1275
  %arrayidx25 = getelementptr inbounds float, float* %48, i64 1, !dbg !1275
  %49 = load float, float* %arrayidx25, align 4, !dbg !1275
  %sub26 = fsub float %47, %49, !dbg !1276
  store float %sub26, float* %y2, align 4, !dbg !1277
  %50 = load float*, float** %v1.addr, align 8, !dbg !1278
  %arrayidx27 = getelementptr inbounds float, float* %50, i64 2, !dbg !1278
  %51 = load float, float* %arrayidx27, align 4, !dbg !1278
  %52 = load float*, float** %v2.addr, align 8, !dbg !1279
  %arrayidx28 = getelementptr inbounds float, float* %52, i64 2, !dbg !1279
  %53 = load float, float* %arrayidx28, align 4, !dbg !1279
  %sub29 = fsub float %51, %53, !dbg !1280
  store float %sub29, float* %z1, align 4, !dbg !1281
  %54 = load float*, float** %v2.addr, align 8, !dbg !1282
  %arrayidx30 = getelementptr inbounds float, float* %54, i64 2, !dbg !1282
  %55 = load float, float* %arrayidx30, align 4, !dbg !1282
  %56 = load float*, float** %v3.addr, align 8, !dbg !1283
  %arrayidx31 = getelementptr inbounds float, float* %56, i64 2, !dbg !1283
  %57 = load float, float* %arrayidx31, align 4, !dbg !1283
  %sub32 = fsub float %55, %57, !dbg !1284
  store float %sub32, float* %z2, align 4, !dbg !1285
  %58 = load float, float* %y1, align 4, !dbg !1286
  %59 = load float, float* %z2, align 4, !dbg !1287
  %mul = fmul float %58, %59, !dbg !1288
  %60 = load float, float* %z1, align 4, !dbg !1289
  %61 = load float, float* %y2, align 4, !dbg !1290
  %mul33 = fmul float %60, %61, !dbg !1291
  %sub34 = fsub float %mul, %mul33, !dbg !1292
  store float %sub34, float* %x0, align 4, !dbg !1293
  %62 = load float, float* %z1, align 4, !dbg !1294
  %63 = load float, float* %x2, align 4, !dbg !1295
  %mul35 = fmul float %62, %63, !dbg !1296
  %64 = load float, float* %x1, align 4, !dbg !1297
  %65 = load float, float* %z2, align 4, !dbg !1298
  %mul36 = fmul float %64, %65, !dbg !1299
  %sub37 = fsub float %mul35, %mul36, !dbg !1300
  store float %sub37, float* %y0, align 4, !dbg !1301
  %66 = load float, float* %x1, align 4, !dbg !1302
  %67 = load float, float* %y2, align 4, !dbg !1303
  %mul38 = fmul float %66, %67, !dbg !1304
  %68 = load float, float* %y1, align 4, !dbg !1305
  %69 = load float, float* %x2, align 4, !dbg !1306
  %mul39 = fmul float %68, %69, !dbg !1307
  %sub40 = fsub float %mul38, %mul39, !dbg !1308
  store float %sub40, float* %z0, align 4, !dbg !1309
  %70 = load float, float* %z0, align 4, !dbg !1310
  %cmp41 = fcmp oeq float %70, 0.000000e+00, !dbg !1312
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !1313

if.then42:                                        ; preds = %if.end16
  br label %for.end189, !dbg !1314

if.end43:                                         ; preds = %if.end16
  %71 = load float, float* %x0, align 4, !dbg !1315
  %72 = load float*, float** %v1.addr, align 8, !dbg !1316
  %arrayidx44 = getelementptr inbounds float, float* %72, i64 0, !dbg !1316
  %73 = load float, float* %arrayidx44, align 4, !dbg !1316
  %mul45 = fmul float %71, %73, !dbg !1317
  %74 = load float, float* %y0, align 4, !dbg !1318
  %75 = load float*, float** %v1.addr, align 8, !dbg !1319
  %arrayidx46 = getelementptr inbounds float, float* %75, i64 1, !dbg !1319
  %76 = load float, float* %arrayidx46, align 4, !dbg !1319
  %mul47 = fmul float %74, %76, !dbg !1320
  %add = fadd float %mul45, %mul47, !dbg !1321
  %77 = load float, float* %z0, align 4, !dbg !1322
  %div = fdiv float %add, %77, !dbg !1323
  %78 = load float*, float** %v1.addr, align 8, !dbg !1324
  %arrayidx48 = getelementptr inbounds float, float* %78, i64 2, !dbg !1324
  %79 = load float, float* %arrayidx48, align 4, !dbg !1324
  %add49 = fadd float %div, %79, !dbg !1325
  store float %add49, float* %xx1, align 4, !dbg !1326
  %80 = load float, float* %x0, align 4, !dbg !1327
  %conv = fpext float %80 to double, !dbg !1328
  %fneg = fneg double %conv, !dbg !1329
  %81 = load float, float* %z0, align 4, !dbg !1330
  %conv50 = fpext float %81 to double, !dbg !1331
  %div51 = fdiv double %fneg, %conv50, !dbg !1332
  %conv52 = fptrunc double %div51 to float, !dbg !1329
  store float %conv52, float* %zxd, align 4, !dbg !1333
  %82 = load float, float* %y0, align 4, !dbg !1334
  %conv53 = fpext float %82 to double, !dbg !1335
  %fneg54 = fneg double %conv53, !dbg !1336
  %83 = load float, float* %z0, align 4, !dbg !1337
  %conv55 = fpext float %83 to double, !dbg !1338
  %div56 = fdiv double %fneg54, %conv55, !dbg !1339
  %conv57 = fptrunc double %div56 to float, !dbg !1336
  store float %conv57, float* %zyd, align 4, !dbg !1340
  %84 = load i32, i32* %my2, align 4, !dbg !1341
  %conv58 = sitofp i32 %84 to double, !dbg !1342
  %85 = load float, float* %zyd, align 4, !dbg !1343
  %conv59 = fpext float %85 to double, !dbg !1343
  %mul60 = fmul double %conv58, %conv59, !dbg !1344
  %86 = load float, float* %xx1, align 4, !dbg !1345
  %conv61 = fpext float %86 to double, !dbg !1346
  %add62 = fadd double %mul60, %conv61, !dbg !1347
  %conv63 = fptrunc double %add62 to float, !dbg !1348
  store float %conv63, float* %zy0, align 4, !dbg !1349
  store float 1.000000e+00, float* %z1, align 4, !dbg !1350
  store float 0.000000e+00, float* %z2, align 4, !dbg !1351
  %87 = load float, float* %y1, align 4, !dbg !1352
  %88 = load float, float* %z2, align 4, !dbg !1353
  %mul64 = fmul float %87, %88, !dbg !1354
  %89 = load float, float* %z1, align 4, !dbg !1355
  %90 = load float, float* %y2, align 4, !dbg !1356
  %mul65 = fmul float %89, %90, !dbg !1357
  %sub66 = fsub float %mul64, %mul65, !dbg !1358
  store float %sub66, float* %x0, align 4, !dbg !1359
  %91 = load float, float* %z1, align 4, !dbg !1360
  %92 = load float, float* %x2, align 4, !dbg !1361
  %mul67 = fmul float %91, %92, !dbg !1362
  %93 = load float, float* %x1, align 4, !dbg !1363
  %94 = load float, float* %z2, align 4, !dbg !1364
  %mul68 = fmul float %93, %94, !dbg !1365
  %sub69 = fsub float %mul67, %mul68, !dbg !1366
  store float %sub69, float* %y0, align 4, !dbg !1367
  %95 = load float, float* %x0, align 4, !dbg !1368
  %96 = load float*, float** %v1.addr, align 8, !dbg !1369
  %arrayidx70 = getelementptr inbounds float, float* %96, i64 0, !dbg !1369
  %97 = load float, float* %arrayidx70, align 4, !dbg !1369
  %mul71 = fmul float %95, %97, !dbg !1370
  %98 = load float, float* %y0, align 4, !dbg !1371
  %99 = load float*, float** %v1.addr, align 8, !dbg !1372
  %arrayidx72 = getelementptr inbounds float, float* %99, i64 1, !dbg !1372
  %100 = load float, float* %arrayidx72, align 4, !dbg !1372
  %mul73 = fmul float %98, %100, !dbg !1373
  %add74 = fadd float %mul71, %mul73, !dbg !1374
  %101 = load float, float* %z0, align 4, !dbg !1375
  %div75 = fdiv float %add74, %101, !dbg !1376
  %add76 = fadd float %div75, 1.000000e+00, !dbg !1377
  store float %add76, float* %xx1, align 4, !dbg !1378
  %102 = load float, float* %x0, align 4, !dbg !1379
  %conv77 = fpext float %102 to double, !dbg !1380
  %fneg78 = fneg double %conv77, !dbg !1381
  %103 = load float, float* %z0, align 4, !dbg !1382
  %conv79 = fpext float %103 to double, !dbg !1383
  %div80 = fdiv double %fneg78, %conv79, !dbg !1384
  %conv81 = fptrunc double %div80 to float, !dbg !1381
  store float %conv81, float* %uxd, align 4, !dbg !1385
  %104 = load float, float* %y0, align 4, !dbg !1386
  %conv82 = fpext float %104 to double, !dbg !1387
  %fneg83 = fneg double %conv82, !dbg !1388
  %105 = load float, float* %z0, align 4, !dbg !1389
  %conv84 = fpext float %105 to double, !dbg !1390
  %div85 = fdiv double %fneg83, %conv84, !dbg !1391
  %conv86 = fptrunc double %div85 to float, !dbg !1388
  store float %conv86, float* %uyd, align 4, !dbg !1392
  %106 = load i32, i32* %my2, align 4, !dbg !1393
  %conv87 = sitofp i32 %106 to double, !dbg !1394
  %107 = load float, float* %uyd, align 4, !dbg !1395
  %conv88 = fpext float %107 to double, !dbg !1395
  %mul89 = fmul double %conv87, %conv88, !dbg !1396
  %108 = load float, float* %xx1, align 4, !dbg !1397
  %conv90 = fpext float %108 to double, !dbg !1398
  %add91 = fadd double %mul89, %conv90, !dbg !1399
  %conv92 = fptrunc double %add91 to float, !dbg !1400
  store float %conv92, float* %uy0, align 4, !dbg !1401
  store float -1.000000e+00, float* %z1, align 4, !dbg !1402
  store float 1.000000e+00, float* %z2, align 4, !dbg !1403
  %109 = load float, float* %y1, align 4, !dbg !1404
  %110 = load float, float* %z2, align 4, !dbg !1405
  %mul93 = fmul float %109, %110, !dbg !1406
  %111 = load float, float* %z1, align 4, !dbg !1407
  %112 = load float, float* %y2, align 4, !dbg !1408
  %mul94 = fmul float %111, %112, !dbg !1409
  %sub95 = fsub float %mul93, %mul94, !dbg !1410
  store float %sub95, float* %x0, align 4, !dbg !1411
  %113 = load float, float* %z1, align 4, !dbg !1412
  %114 = load float, float* %x2, align 4, !dbg !1413
  %mul96 = fmul float %113, %114, !dbg !1414
  %115 = load float, float* %x1, align 4, !dbg !1415
  %116 = load float, float* %z2, align 4, !dbg !1416
  %mul97 = fmul float %115, %116, !dbg !1417
  %sub98 = fsub float %mul96, %mul97, !dbg !1418
  store float %sub98, float* %y0, align 4, !dbg !1419
  %117 = load float, float* %x0, align 4, !dbg !1420
  %118 = load float*, float** %v1.addr, align 8, !dbg !1421
  %arrayidx99 = getelementptr inbounds float, float* %118, i64 0, !dbg !1421
  %119 = load float, float* %arrayidx99, align 4, !dbg !1421
  %mul100 = fmul float %117, %119, !dbg !1422
  %120 = load float, float* %y0, align 4, !dbg !1423
  %121 = load float*, float** %v1.addr, align 8, !dbg !1424
  %arrayidx101 = getelementptr inbounds float, float* %121, i64 1, !dbg !1424
  %122 = load float, float* %arrayidx101, align 4, !dbg !1424
  %mul102 = fmul float %120, %122, !dbg !1425
  %add103 = fadd float %mul100, %mul102, !dbg !1426
  %123 = load float, float* %z0, align 4, !dbg !1427
  %div104 = fdiv float %add103, %123, !dbg !1428
  store float %div104, float* %xx1, align 4, !dbg !1429
  %124 = load float, float* %x0, align 4, !dbg !1430
  %conv105 = fpext float %124 to double, !dbg !1431
  %fneg106 = fneg double %conv105, !dbg !1432
  %125 = load float, float* %z0, align 4, !dbg !1433
  %conv107 = fpext float %125 to double, !dbg !1434
  %div108 = fdiv double %fneg106, %conv107, !dbg !1435
  %conv109 = fptrunc double %div108 to float, !dbg !1432
  store float %conv109, float* %vxd, align 4, !dbg !1436
  %126 = load float, float* %y0, align 4, !dbg !1437
  %conv110 = fpext float %126 to double, !dbg !1438
  %fneg111 = fneg double %conv110, !dbg !1439
  %127 = load float, float* %z0, align 4, !dbg !1440
  %conv112 = fpext float %127 to double, !dbg !1441
  %div113 = fdiv double %fneg111, %conv112, !dbg !1442
  %conv114 = fptrunc double %div113 to float, !dbg !1439
  store float %conv114, float* %vyd, align 4, !dbg !1443
  %128 = load i32, i32* %my2, align 4, !dbg !1444
  %conv115 = sitofp i32 %128 to double, !dbg !1445
  %129 = load float, float* %vyd, align 4, !dbg !1446
  %conv116 = fpext float %129 to double, !dbg !1446
  %mul117 = fmul double %conv115, %conv116, !dbg !1447
  %130 = load float, float* %xx1, align 4, !dbg !1448
  %conv118 = fpext float %130 to double, !dbg !1449
  %add119 = fadd double %mul117, %conv118, !dbg !1450
  %conv120 = fptrunc double %add119 to float, !dbg !1451
  store float %conv120, float* %vy0, align 4, !dbg !1452
  %131 = load i32, i32* %my0, align 4, !dbg !1453
  %132 = load i32, i32* %my2, align 4, !dbg !1454
  %add121 = add nsw i32 %131, %132, !dbg !1455
  %div122 = sdiv i32 %add121, 2, !dbg !1456
  store i32 %div122, i32* %sn1, align 4, !dbg !1457
  %133 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1458
  %span1123 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %133, i32 0, i32 10, !dbg !1460
  %134 = load float*, float** %span1123, align 8, !dbg !1460
  %135 = load i32, i32* %sn1, align 4, !dbg !1461
  %idxprom = sext i32 %135 to i64, !dbg !1458
  %arrayidx124 = getelementptr inbounds float, float* %134, i64 %idxprom, !dbg !1458
  %136 = load float, float* %arrayidx124, align 4, !dbg !1458
  %137 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1462
  %span2125 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %137, i32 0, i32 11, !dbg !1463
  %138 = load float*, float** %span2125, align 8, !dbg !1463
  %139 = load i32, i32* %sn1, align 4, !dbg !1464
  %idxprom126 = sext i32 %139 to i64, !dbg !1462
  %arrayidx127 = getelementptr inbounds float, float* %138, i64 %idxprom126, !dbg !1462
  %140 = load float, float* %arrayidx127, align 4, !dbg !1462
  %cmp128 = fcmp olt float %136, %140, !dbg !1465
  br i1 %cmp128, label %if.then130, label %if.else135, !dbg !1466

if.then130:                                       ; preds = %if.end43
  %141 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1467
  %span1131 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %141, i32 0, i32 10, !dbg !1469
  %142 = load float*, float** %span1131, align 8, !dbg !1469
  %143 = load i32, i32* %my2, align 4, !dbg !1470
  %idx.ext = sext i32 %143 to i64, !dbg !1471
  %add.ptr = getelementptr inbounds float, float* %142, i64 %idx.ext, !dbg !1471
  store float* %add.ptr, float** %span1, align 8, !dbg !1472
  %144 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1473
  %span2132 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %144, i32 0, i32 11, !dbg !1474
  %145 = load float*, float** %span2132, align 8, !dbg !1474
  %146 = load i32, i32* %my2, align 4, !dbg !1475
  %idx.ext133 = sext i32 %146 to i64, !dbg !1476
  %add.ptr134 = getelementptr inbounds float, float* %145, i64 %idx.ext133, !dbg !1476
  store float* %add.ptr134, float** %span2, align 8, !dbg !1477
  br label %if.end142, !dbg !1478

if.else135:                                       ; preds = %if.end43
  %147 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1479
  %span2136 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %147, i32 0, i32 11, !dbg !1481
  %148 = load float*, float** %span2136, align 8, !dbg !1481
  %149 = load i32, i32* %my2, align 4, !dbg !1482
  %idx.ext137 = sext i32 %149 to i64, !dbg !1483
  %add.ptr138 = getelementptr inbounds float, float* %148, i64 %idx.ext137, !dbg !1483
  store float* %add.ptr138, float** %span1, align 8, !dbg !1484
  %150 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1485
  %span1139 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %150, i32 0, i32 10, !dbg !1486
  %151 = load float*, float** %span1139, align 8, !dbg !1486
  %152 = load i32, i32* %my2, align 4, !dbg !1487
  %idx.ext140 = sext i32 %152 to i64, !dbg !1488
  %add.ptr141 = getelementptr inbounds float, float* %151, i64 %idx.ext140, !dbg !1488
  store float* %add.ptr141, float** %span2, align 8, !dbg !1489
  br label %if.end142

if.end142:                                        ; preds = %if.else135, %if.then130
  %153 = load i32, i32* %my2, align 4, !dbg !1490
  store i32 %153, i32* %y, align 4, !dbg !1492
  br label %for.cond, !dbg !1493

for.cond:                                         ; preds = %for.inc187, %if.end142
  %154 = load i32, i32* %y, align 4, !dbg !1494
  %155 = load i32, i32* %my0, align 4, !dbg !1496
  %cmp143 = icmp sge i32 %154, %155, !dbg !1497
  br i1 %cmp143, label %for.body, label %for.end189, !dbg !1498

for.body:                                         ; preds = %for.cond
  %156 = load float*, float** %span1, align 8, !dbg !1499
  %157 = load float, float* %156, align 4, !dbg !1501
  %conv145 = fpext float %157 to double, !dbg !1501
  %158 = call double @llvm.floor.f64(double %conv145), !dbg !1502
  %conv146 = fptosi double %158 to i32, !dbg !1502
  store i32 %conv146, i32* %sn1, align 4, !dbg !1503
  %159 = load float*, float** %span2, align 8, !dbg !1504
  %160 = load float, float* %159, align 4, !dbg !1505
  %conv147 = fpext float %160 to double, !dbg !1505
  %161 = call double @llvm.floor.f64(double %conv147), !dbg !1506
  %conv148 = fptosi double %161 to i32, !dbg !1506
  store i32 %conv148, i32* %sn2, align 4, !dbg !1507
  %162 = load i32, i32* %sn1, align 4, !dbg !1508
  %inc = add nsw i32 %162, 1, !dbg !1508
  store i32 %inc, i32* %sn1, align 4, !dbg !1508
  %163 = load i32, i32* %sn2, align 4, !dbg !1509
  %164 = load i32, i32* %rectx, align 4, !dbg !1511
  %cmp149 = icmp sge i32 %163, %164, !dbg !1512
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !1513

if.then151:                                       ; preds = %for.body
  %165 = load i32, i32* %rectx, align 4, !dbg !1514
  %sub152 = sub nsw i32 %165, 1, !dbg !1515
  store i32 %sub152, i32* %sn2, align 4, !dbg !1516
  br label %if.end153, !dbg !1517

if.end153:                                        ; preds = %if.then151, %for.body
  %166 = load i32, i32* %sn1, align 4, !dbg !1518
  %cmp154 = icmp slt i32 %166, 0, !dbg !1520
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !1521

if.then156:                                       ; preds = %if.end153
  store i32 0, i32* %sn1, align 4, !dbg !1522
  br label %if.end157, !dbg !1523

if.end157:                                        ; preds = %if.then156, %if.end153
  %167 = load i32, i32* %sn1, align 4, !dbg !1524
  %conv158 = sitofp i32 %167 to double, !dbg !1525
  %168 = load float, float* %uxd, align 4, !dbg !1526
  %conv159 = fpext float %168 to double, !dbg !1526
  %mul160 = fmul double %conv158, %conv159, !dbg !1527
  %169 = load float, float* %uy0, align 4, !dbg !1528
  %conv161 = fpext float %169 to double, !dbg !1528
  %add162 = fadd double %mul160, %conv161, !dbg !1529
  %conv163 = fptrunc double %add162 to float, !dbg !1525
  store float %conv163, float* %u, align 4, !dbg !1530
  %170 = load i32, i32* %sn1, align 4, !dbg !1531
  %conv164 = sitofp i32 %170 to double, !dbg !1532
  %171 = load float, float* %vxd, align 4, !dbg !1533
  %conv165 = fpext float %171 to double, !dbg !1533
  %mul166 = fmul double %conv164, %conv165, !dbg !1534
  %172 = load float, float* %vy0, align 4, !dbg !1535
  %conv167 = fpext float %172 to double, !dbg !1535
  %add168 = fadd double %mul166, %conv167, !dbg !1536
  %conv169 = fptrunc double %add168 to float, !dbg !1532
  store float %conv169, float* %v, align 4, !dbg !1537
  %173 = load i32, i32* %sn1, align 4, !dbg !1538
  %conv170 = sitofp i32 %173 to double, !dbg !1539
  %174 = load float, float* %zxd, align 4, !dbg !1540
  %conv171 = fpext float %174 to double, !dbg !1540
  %mul172 = fmul double %conv170, %conv171, !dbg !1541
  %175 = load float, float* %zy0, align 4, !dbg !1542
  %conv173 = fpext float %175 to double, !dbg !1542
  %add174 = fadd double %mul172, %conv173, !dbg !1543
  %conv175 = fptrunc double %add174 to float, !dbg !1539
  store float %conv175, float* %z, align 4, !dbg !1544
  %176 = load i32, i32* %sn1, align 4, !dbg !1545
  store i32 %176, i32* %x, align 4, !dbg !1547
  br label %for.cond176, !dbg !1548

for.cond176:                                      ; preds = %for.inc, %if.end157
  %177 = load i32, i32* %x, align 4, !dbg !1549
  %178 = load i32, i32* %sn2, align 4, !dbg !1551
  %cmp177 = icmp sle i32 %177, %178, !dbg !1552
  br i1 %cmp177, label %for.body179, label %for.end, !dbg !1553

for.body179:                                      ; preds = %for.cond176
  %179 = load void (i8*, i32, i32, float, float, float)*, void (i8*, i32, i32, float, float, float)** %func.addr, align 8, !dbg !1554
  %180 = load i8*, i8** %handle.addr, align 8, !dbg !1555
  %181 = load i32, i32* %x, align 4, !dbg !1556
  %182 = load i32, i32* %y, align 4, !dbg !1557
  %183 = load float, float* %u, align 4, !dbg !1558
  %184 = load float, float* %v, align 4, !dbg !1559
  %185 = load float, float* %z, align 4, !dbg !1560
  call void %179(i8* %180, i32 %181, i32 %182, float %183, float %184, float %185), !dbg !1554
  br label %for.inc, !dbg !1554

for.inc:                                          ; preds = %for.body179
  %186 = load i32, i32* %x, align 4, !dbg !1561
  %inc180 = add nsw i32 %186, 1, !dbg !1561
  store i32 %inc180, i32* %x, align 4, !dbg !1561
  %187 = load float, float* %uxd, align 4, !dbg !1562
  %188 = load float, float* %u, align 4, !dbg !1563
  %add181 = fadd float %188, %187, !dbg !1563
  store float %add181, float* %u, align 4, !dbg !1563
  %189 = load float, float* %vxd, align 4, !dbg !1564
  %190 = load float, float* %v, align 4, !dbg !1565
  %add182 = fadd float %190, %189, !dbg !1565
  store float %add182, float* %v, align 4, !dbg !1565
  %191 = load float, float* %zxd, align 4, !dbg !1566
  %192 = load float, float* %z, align 4, !dbg !1567
  %add183 = fadd float %192, %191, !dbg !1567
  store float %add183, float* %z, align 4, !dbg !1567
  br label %for.cond176, !dbg !1568, !llvm.loop !1569

for.end:                                          ; preds = %for.cond176
  %193 = load float, float* %uyd, align 4, !dbg !1571
  %194 = load float, float* %uy0, align 4, !dbg !1572
  %sub184 = fsub float %194, %193, !dbg !1572
  store float %sub184, float* %uy0, align 4, !dbg !1572
  %195 = load float, float* %vyd, align 4, !dbg !1573
  %196 = load float, float* %vy0, align 4, !dbg !1574
  %sub185 = fsub float %196, %195, !dbg !1574
  store float %sub185, float* %vy0, align 4, !dbg !1574
  %197 = load float, float* %zyd, align 4, !dbg !1575
  %198 = load float, float* %zy0, align 4, !dbg !1576
  %sub186 = fsub float %198, %197, !dbg !1576
  store float %sub186, float* %zy0, align 4, !dbg !1576
  br label %for.inc187, !dbg !1577

for.inc187:                                       ; preds = %for.end
  %199 = load i32, i32* %y, align 4, !dbg !1578
  %dec = add nsw i32 %199, -1, !dbg !1578
  store i32 %dec, i32* %y, align 4, !dbg !1578
  %200 = load float*, float** %span1, align 8, !dbg !1579
  %incdec.ptr = getelementptr inbounds float, float* %200, i32 -1, !dbg !1579
  store float* %incdec.ptr, float** %span1, align 8, !dbg !1579
  %201 = load float*, float** %span2, align 8, !dbg !1580
  %incdec.ptr188 = getelementptr inbounds float, float* %201, i32 -1, !dbg !1580
  store float* %incdec.ptr188, float** %span2, align 8, !dbg !1580
  br label %for.cond, !dbg !1581, !llvm.loop !1582

for.end189:                                       ; preds = %if.then, %if.then15, %if.then42, %for.cond
  ret void, !dbg !1584
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuf_init_span(%struct.ZSpan* %zspan) #0 !dbg !1585 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !1586, metadata !DIExpression()), !dbg !1587
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1588
  %recty = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %0, i32 0, i32 1, !dbg !1589
  %1 = load i32, i32* %recty, align 4, !dbg !1589
  %add = add nsw i32 %1, 1, !dbg !1590
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1591
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %2, i32 0, i32 4, !dbg !1592
  store i32 %add, i32* %miny2, align 8, !dbg !1593
  %3 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1594
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %3, i32 0, i32 2, !dbg !1595
  store i32 %add, i32* %miny1, align 8, !dbg !1596
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1597
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %4, i32 0, i32 5, !dbg !1598
  store i32 -1, i32* %maxy2, align 4, !dbg !1599
  %5 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1600
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %5, i32 0, i32 3, !dbg !1601
  store i32 -1, i32* %maxy1, align 4, !dbg !1602
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1603
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %6, i32 0, i32 9, !dbg !1604
  store float* null, float** %maxp2, align 8, !dbg !1605
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1606
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %7, i32 0, i32 8, !dbg !1607
  store float* null, float** %minp2, align 8, !dbg !1608
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1609
  %maxp1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %8, i32 0, i32 7, !dbg !1610
  store float* null, float** %maxp1, align 8, !dbg !1611
  %9 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1612
  %minp1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %9, i32 0, i32 6, !dbg !1613
  store float* null, float** %minp1, align 8, !dbg !1614
  ret void, !dbg !1615
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuf_add_to_span(%struct.ZSpan* %zspan, float* %v1, float* %v2) #0 !dbg !1616 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %minv = alloca float*, align 8
  %maxv = alloca float*, align 8
  %span = alloca float*, align 8
  %xx1 = alloca float, align 4
  %dx0 = alloca float, align 4
  %xs0 = alloca float, align 4
  %y = alloca i32, align 4
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !1619, metadata !DIExpression()), !dbg !1620
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1621, metadata !DIExpression()), !dbg !1622
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !1623, metadata !DIExpression()), !dbg !1624
  call void @llvm.dbg.declare(metadata float** %minv, metadata !1625, metadata !DIExpression()), !dbg !1626
  call void @llvm.dbg.declare(metadata float** %maxv, metadata !1627, metadata !DIExpression()), !dbg !1628
  call void @llvm.dbg.declare(metadata float** %span, metadata !1629, metadata !DIExpression()), !dbg !1630
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !1631, metadata !DIExpression()), !dbg !1632
  call void @llvm.dbg.declare(metadata float* %dx0, metadata !1633, metadata !DIExpression()), !dbg !1634
  call void @llvm.dbg.declare(metadata float* %xs0, metadata !1635, metadata !DIExpression()), !dbg !1636
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !1639, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !1641, metadata !DIExpression()), !dbg !1642
  %0 = load float*, float** %v1.addr, align 8, !dbg !1643
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !1643
  %1 = load float, float* %arrayidx, align 4, !dbg !1643
  %2 = load float*, float** %v2.addr, align 8, !dbg !1645
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !1645
  %3 = load float, float* %arrayidx1, align 4, !dbg !1645
  %cmp = fcmp olt float %1, %3, !dbg !1646
  br i1 %cmp, label %if.then, label %if.else, !dbg !1647

if.then:                                          ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !1648
  store float* %4, float** %minv, align 8, !dbg !1650
  %5 = load float*, float** %v2.addr, align 8, !dbg !1651
  store float* %5, float** %maxv, align 8, !dbg !1652
  br label %if.end, !dbg !1653

if.else:                                          ; preds = %entry
  %6 = load float*, float** %v2.addr, align 8, !dbg !1654
  store float* %6, float** %minv, align 8, !dbg !1656
  %7 = load float*, float** %v1.addr, align 8, !dbg !1657
  store float* %7, float** %maxv, align 8, !dbg !1658
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float*, float** %minv, align 8, !dbg !1659
  %arrayidx2 = getelementptr inbounds float, float* %8, i64 1, !dbg !1659
  %9 = load float, float* %arrayidx2, align 4, !dbg !1659
  %conv = fpext float %9 to double, !dbg !1659
  %10 = call double @llvm.ceil.f64(double %conv), !dbg !1660
  %conv3 = fptosi double %10 to i32, !dbg !1660
  store i32 %conv3, i32* %my0, align 4, !dbg !1661
  %11 = load float*, float** %maxv, align 8, !dbg !1662
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 1, !dbg !1662
  %12 = load float, float* %arrayidx4, align 4, !dbg !1662
  %conv5 = fpext float %12 to double, !dbg !1662
  %13 = call double @llvm.floor.f64(double %conv5), !dbg !1663
  %conv6 = fptosi double %13 to i32, !dbg !1663
  store i32 %conv6, i32* %my2, align 4, !dbg !1664
  %14 = load i32, i32* %my2, align 4, !dbg !1665
  %cmp7 = icmp slt i32 %14, 0, !dbg !1667
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !1668

lor.lhs.false:                                    ; preds = %if.end
  %15 = load i32, i32* %my0, align 4, !dbg !1669
  %16 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1670
  %recty = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %16, i32 0, i32 1, !dbg !1671
  %17 = load i32, i32* %recty, align 4, !dbg !1671
  %cmp9 = icmp sge i32 %15, %17, !dbg !1672
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !1673

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !1674

if.end12:                                         ; preds = %lor.lhs.false
  %18 = load i32, i32* %my2, align 4, !dbg !1675
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1677
  %recty13 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 1, !dbg !1678
  %20 = load i32, i32* %recty13, align 4, !dbg !1678
  %cmp14 = icmp sge i32 %18, %20, !dbg !1679
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !1680

if.then16:                                        ; preds = %if.end12
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1681
  %recty17 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 1, !dbg !1682
  %22 = load i32, i32* %recty17, align 4, !dbg !1682
  %sub = sub nsw i32 %22, 1, !dbg !1683
  store i32 %sub, i32* %my2, align 4, !dbg !1684
  br label %if.end18, !dbg !1685

if.end18:                                         ; preds = %if.then16, %if.end12
  %23 = load i32, i32* %my0, align 4, !dbg !1686
  %cmp19 = icmp slt i32 %23, 0, !dbg !1688
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !1689

if.then21:                                        ; preds = %if.end18
  store i32 0, i32* %my0, align 4, !dbg !1690
  br label %if.end22, !dbg !1691

if.end22:                                         ; preds = %if.then21, %if.end18
  %24 = load i32, i32* %my0, align 4, !dbg !1692
  %25 = load i32, i32* %my2, align 4, !dbg !1694
  %cmp23 = icmp sgt i32 %24, %25, !dbg !1695
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !1696

if.then25:                                        ; preds = %if.end22
  br label %for.end, !dbg !1697

if.end26:                                         ; preds = %if.end22
  %26 = load float*, float** %maxv, align 8, !dbg !1698
  %arrayidx27 = getelementptr inbounds float, float* %26, i64 1, !dbg !1698
  %27 = load float, float* %arrayidx27, align 4, !dbg !1698
  %28 = load float*, float** %minv, align 8, !dbg !1699
  %arrayidx28 = getelementptr inbounds float, float* %28, i64 1, !dbg !1699
  %29 = load float, float* %arrayidx28, align 4, !dbg !1699
  %sub29 = fsub float %27, %29, !dbg !1700
  store float %sub29, float* %xx1, align 4, !dbg !1701
  %30 = load float, float* %xx1, align 4, !dbg !1702
  %cmp30 = fcmp ogt float %30, 0x3E80000000000000, !dbg !1704
  br i1 %cmp30, label %if.then32, label %if.else40, !dbg !1705

if.then32:                                        ; preds = %if.end26
  %31 = load float*, float** %minv, align 8, !dbg !1706
  %arrayidx33 = getelementptr inbounds float, float* %31, i64 0, !dbg !1706
  %32 = load float, float* %arrayidx33, align 4, !dbg !1706
  %33 = load float*, float** %maxv, align 8, !dbg !1708
  %arrayidx34 = getelementptr inbounds float, float* %33, i64 0, !dbg !1708
  %34 = load float, float* %arrayidx34, align 4, !dbg !1708
  %sub35 = fsub float %32, %34, !dbg !1709
  %35 = load float, float* %xx1, align 4, !dbg !1710
  %div = fdiv float %sub35, %35, !dbg !1711
  store float %div, float* %dx0, align 4, !dbg !1712
  %36 = load float, float* %dx0, align 4, !dbg !1713
  %37 = load float*, float** %minv, align 8, !dbg !1714
  %arrayidx36 = getelementptr inbounds float, float* %37, i64 1, !dbg !1714
  %38 = load float, float* %arrayidx36, align 4, !dbg !1714
  %39 = load i32, i32* %my2, align 4, !dbg !1715
  %conv37 = sitofp i32 %39 to float, !dbg !1715
  %sub38 = fsub float %38, %conv37, !dbg !1716
  %mul = fmul float %36, %sub38, !dbg !1717
  %40 = load float*, float** %minv, align 8, !dbg !1718
  %arrayidx39 = getelementptr inbounds float, float* %40, i64 0, !dbg !1718
  %41 = load float, float* %arrayidx39, align 4, !dbg !1718
  %add = fadd float %mul, %41, !dbg !1719
  store float %add, float* %xs0, align 4, !dbg !1720
  br label %if.end43, !dbg !1721

if.else40:                                        ; preds = %if.end26
  store float 0.000000e+00, float* %dx0, align 4, !dbg !1722
  %42 = load float*, float** %minv, align 8, !dbg !1724
  %arrayidx41 = getelementptr inbounds float, float* %42, i64 0, !dbg !1724
  %43 = load float, float* %arrayidx41, align 4, !dbg !1724
  %44 = load float*, float** %maxv, align 8, !dbg !1725
  %arrayidx42 = getelementptr inbounds float, float* %44, i64 0, !dbg !1725
  %45 = load float, float* %arrayidx42, align 4, !dbg !1725
  %call = call float @min_ff(float %43, float %45), !dbg !1726
  store float %call, float* %xs0, align 4, !dbg !1727
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then32
  %46 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1728
  %maxp1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %46, i32 0, i32 7, !dbg !1730
  %47 = load float*, float** %maxp1, align 8, !dbg !1730
  %cmp44 = icmp eq float* %47, null, !dbg !1731
  br i1 %cmp44, label %if.then46, label %if.else47, !dbg !1732

if.then46:                                        ; preds = %if.end43
  %48 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1733
  %span1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %48, i32 0, i32 10, !dbg !1735
  %49 = load float*, float** %span1, align 8, !dbg !1735
  store float* %49, float** %span, align 8, !dbg !1736
  br label %if.end58, !dbg !1737

if.else47:                                        ; preds = %if.end43
  %50 = load float*, float** %maxv, align 8, !dbg !1738
  %51 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1741
  %minp1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %51, i32 0, i32 6, !dbg !1742
  %52 = load float*, float** %minp1, align 8, !dbg !1742
  %cmp48 = icmp eq float* %50, %52, !dbg !1743
  br i1 %cmp48, label %if.then54, label %lor.lhs.false50, !dbg !1744

lor.lhs.false50:                                  ; preds = %if.else47
  %53 = load float*, float** %minv, align 8, !dbg !1745
  %54 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1746
  %maxp151 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %54, i32 0, i32 7, !dbg !1747
  %55 = load float*, float** %maxp151, align 8, !dbg !1747
  %cmp52 = icmp eq float* %53, %55, !dbg !1748
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !1749

if.then54:                                        ; preds = %lor.lhs.false50, %if.else47
  %56 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1750
  %span155 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %56, i32 0, i32 10, !dbg !1752
  %57 = load float*, float** %span155, align 8, !dbg !1752
  store float* %57, float** %span, align 8, !dbg !1753
  br label %if.end57, !dbg !1754

if.else56:                                        ; preds = %lor.lhs.false50
  %58 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1755
  %span2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %58, i32 0, i32 11, !dbg !1757
  %59 = load float*, float** %span2, align 8, !dbg !1757
  store float* %59, float** %span, align 8, !dbg !1758
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.then54
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then46
  %60 = load float*, float** %span, align 8, !dbg !1759
  %61 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1761
  %span159 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %61, i32 0, i32 10, !dbg !1762
  %62 = load float*, float** %span159, align 8, !dbg !1762
  %cmp60 = icmp eq float* %60, %62, !dbg !1763
  br i1 %cmp60, label %if.then62, label %if.else97, !dbg !1764

if.then62:                                        ; preds = %if.end58
  %63 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1765
  %minp163 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %63, i32 0, i32 6, !dbg !1768
  %64 = load float*, float** %minp163, align 8, !dbg !1768
  %cmp64 = icmp eq float* %64, null, !dbg !1769
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66, !dbg !1770

lor.lhs.false66:                                  ; preds = %if.then62
  %65 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1771
  %minp167 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %65, i32 0, i32 6, !dbg !1772
  %66 = load float*, float** %minp167, align 8, !dbg !1772
  %arrayidx68 = getelementptr inbounds float, float* %66, i64 1, !dbg !1771
  %67 = load float, float* %arrayidx68, align 4, !dbg !1771
  %68 = load float*, float** %minv, align 8, !dbg !1773
  %arrayidx69 = getelementptr inbounds float, float* %68, i64 1, !dbg !1773
  %69 = load float, float* %arrayidx69, align 4, !dbg !1773
  %cmp70 = fcmp ogt float %67, %69, !dbg !1774
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !1775

if.then72:                                        ; preds = %lor.lhs.false66, %if.then62
  %70 = load float*, float** %minv, align 8, !dbg !1776
  %71 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1778
  %minp173 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %71, i32 0, i32 6, !dbg !1779
  store float* %70, float** %minp173, align 8, !dbg !1780
  br label %if.end74, !dbg !1781

if.end74:                                         ; preds = %if.then72, %lor.lhs.false66
  %72 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1782
  %maxp175 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %72, i32 0, i32 7, !dbg !1784
  %73 = load float*, float** %maxp175, align 8, !dbg !1784
  %cmp76 = icmp eq float* %73, null, !dbg !1785
  br i1 %cmp76, label %if.then84, label %lor.lhs.false78, !dbg !1786

lor.lhs.false78:                                  ; preds = %if.end74
  %74 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1787
  %maxp179 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %74, i32 0, i32 7, !dbg !1788
  %75 = load float*, float** %maxp179, align 8, !dbg !1788
  %arrayidx80 = getelementptr inbounds float, float* %75, i64 1, !dbg !1787
  %76 = load float, float* %arrayidx80, align 4, !dbg !1787
  %77 = load float*, float** %maxv, align 8, !dbg !1789
  %arrayidx81 = getelementptr inbounds float, float* %77, i64 1, !dbg !1789
  %78 = load float, float* %arrayidx81, align 4, !dbg !1789
  %cmp82 = fcmp olt float %76, %78, !dbg !1790
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !1791

if.then84:                                        ; preds = %lor.lhs.false78, %if.end74
  %79 = load float*, float** %maxv, align 8, !dbg !1792
  %80 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1794
  %maxp185 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %80, i32 0, i32 7, !dbg !1795
  store float* %79, float** %maxp185, align 8, !dbg !1796
  br label %if.end86, !dbg !1797

if.end86:                                         ; preds = %if.then84, %lor.lhs.false78
  %81 = load i32, i32* %my0, align 4, !dbg !1798
  %82 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1800
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %82, i32 0, i32 2, !dbg !1801
  %83 = load i32, i32* %miny1, align 8, !dbg !1801
  %cmp87 = icmp slt i32 %81, %83, !dbg !1802
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !1803

if.then89:                                        ; preds = %if.end86
  %84 = load i32, i32* %my0, align 4, !dbg !1804
  %85 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1805
  %miny190 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %85, i32 0, i32 2, !dbg !1806
  store i32 %84, i32* %miny190, align 8, !dbg !1807
  br label %if.end91, !dbg !1805

if.end91:                                         ; preds = %if.then89, %if.end86
  %86 = load i32, i32* %my2, align 4, !dbg !1808
  %87 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1810
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %87, i32 0, i32 3, !dbg !1811
  %88 = load i32, i32* %maxy1, align 4, !dbg !1811
  %cmp92 = icmp sgt i32 %86, %88, !dbg !1812
  br i1 %cmp92, label %if.then94, label %if.end96, !dbg !1813

if.then94:                                        ; preds = %if.end91
  %89 = load i32, i32* %my2, align 4, !dbg !1814
  %90 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1815
  %maxy195 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %90, i32 0, i32 3, !dbg !1816
  store i32 %89, i32* %maxy195, align 4, !dbg !1817
  br label %if.end96, !dbg !1815

if.end96:                                         ; preds = %if.then94, %if.end91
  br label %if.end130, !dbg !1818

if.else97:                                        ; preds = %if.end58
  %91 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1819
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %91, i32 0, i32 8, !dbg !1822
  %92 = load float*, float** %minp2, align 8, !dbg !1822
  %cmp98 = icmp eq float* %92, null, !dbg !1823
  br i1 %cmp98, label %if.then106, label %lor.lhs.false100, !dbg !1824

lor.lhs.false100:                                 ; preds = %if.else97
  %93 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1825
  %minp2101 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %93, i32 0, i32 8, !dbg !1826
  %94 = load float*, float** %minp2101, align 8, !dbg !1826
  %arrayidx102 = getelementptr inbounds float, float* %94, i64 1, !dbg !1825
  %95 = load float, float* %arrayidx102, align 4, !dbg !1825
  %96 = load float*, float** %minv, align 8, !dbg !1827
  %arrayidx103 = getelementptr inbounds float, float* %96, i64 1, !dbg !1827
  %97 = load float, float* %arrayidx103, align 4, !dbg !1827
  %cmp104 = fcmp ogt float %95, %97, !dbg !1828
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !1829

if.then106:                                       ; preds = %lor.lhs.false100, %if.else97
  %98 = load float*, float** %minv, align 8, !dbg !1830
  %99 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1832
  %minp2107 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %99, i32 0, i32 8, !dbg !1833
  store float* %98, float** %minp2107, align 8, !dbg !1834
  br label %if.end108, !dbg !1835

if.end108:                                        ; preds = %if.then106, %lor.lhs.false100
  %100 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1836
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %100, i32 0, i32 9, !dbg !1838
  %101 = load float*, float** %maxp2, align 8, !dbg !1838
  %cmp109 = icmp eq float* %101, null, !dbg !1839
  br i1 %cmp109, label %if.then117, label %lor.lhs.false111, !dbg !1840

lor.lhs.false111:                                 ; preds = %if.end108
  %102 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1841
  %maxp2112 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %102, i32 0, i32 9, !dbg !1842
  %103 = load float*, float** %maxp2112, align 8, !dbg !1842
  %arrayidx113 = getelementptr inbounds float, float* %103, i64 1, !dbg !1841
  %104 = load float, float* %arrayidx113, align 4, !dbg !1841
  %105 = load float*, float** %maxv, align 8, !dbg !1843
  %arrayidx114 = getelementptr inbounds float, float* %105, i64 1, !dbg !1843
  %106 = load float, float* %arrayidx114, align 4, !dbg !1843
  %cmp115 = fcmp olt float %104, %106, !dbg !1844
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !1845

if.then117:                                       ; preds = %lor.lhs.false111, %if.end108
  %107 = load float*, float** %maxv, align 8, !dbg !1846
  %108 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1848
  %maxp2118 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %108, i32 0, i32 9, !dbg !1849
  store float* %107, float** %maxp2118, align 8, !dbg !1850
  br label %if.end119, !dbg !1851

if.end119:                                        ; preds = %if.then117, %lor.lhs.false111
  %109 = load i32, i32* %my0, align 4, !dbg !1852
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1854
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 4, !dbg !1855
  %111 = load i32, i32* %miny2, align 8, !dbg !1855
  %cmp120 = icmp slt i32 %109, %111, !dbg !1856
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !1857

if.then122:                                       ; preds = %if.end119
  %112 = load i32, i32* %my0, align 4, !dbg !1858
  %113 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1859
  %miny2123 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %113, i32 0, i32 4, !dbg !1860
  store i32 %112, i32* %miny2123, align 8, !dbg !1861
  br label %if.end124, !dbg !1859

if.end124:                                        ; preds = %if.then122, %if.end119
  %114 = load i32, i32* %my2, align 4, !dbg !1862
  %115 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1864
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %115, i32 0, i32 5, !dbg !1865
  %116 = load i32, i32* %maxy2, align 4, !dbg !1865
  %cmp125 = icmp sgt i32 %114, %116, !dbg !1866
  br i1 %cmp125, label %if.then127, label %if.end129, !dbg !1867

if.then127:                                       ; preds = %if.end124
  %117 = load i32, i32* %my2, align 4, !dbg !1868
  %118 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1869
  %maxy2128 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %118, i32 0, i32 5, !dbg !1870
  store i32 %117, i32* %maxy2128, align 4, !dbg !1871
  br label %if.end129, !dbg !1869

if.end129:                                        ; preds = %if.then127, %if.end124
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end96
  %119 = load i32, i32* %my2, align 4, !dbg !1872
  store i32 %119, i32* %y, align 4, !dbg !1874
  br label %for.cond, !dbg !1875

for.cond:                                         ; preds = %for.inc, %if.end130
  %120 = load i32, i32* %y, align 4, !dbg !1876
  %121 = load i32, i32* %my0, align 4, !dbg !1878
  %cmp131 = icmp sge i32 %120, %121, !dbg !1879
  br i1 %cmp131, label %for.body, label %for.end, !dbg !1880

for.body:                                         ; preds = %for.cond
  %122 = load float, float* %xs0, align 4, !dbg !1881
  %123 = load float*, float** %span, align 8, !dbg !1883
  %124 = load i32, i32* %y, align 4, !dbg !1884
  %idxprom = sext i32 %124 to i64, !dbg !1883
  %arrayidx133 = getelementptr inbounds float, float* %123, i64 %idxprom, !dbg !1883
  store float %122, float* %arrayidx133, align 4, !dbg !1885
  br label %for.inc, !dbg !1886

for.inc:                                          ; preds = %for.body
  %125 = load i32, i32* %y, align 4, !dbg !1887
  %dec = add nsw i32 %125, -1, !dbg !1887
  store i32 %dec, i32* %y, align 4, !dbg !1887
  %126 = load float, float* %dx0, align 4, !dbg !1888
  %127 = load float, float* %xs0, align 4, !dbg !1889
  %add134 = fadd float %127, %126, !dbg !1889
  store float %add134, float* %xs0, align 4, !dbg !1889
  br label %for.cond, !dbg !1890, !llvm.loop !1891

for.end:                                          ; preds = %if.then11, %if.then25, %for.cond
  ret void, !dbg !1893
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @zspan_scanconvert(%struct.ZSpan* %zspan, i8* %handle, float* %v1, float* %v2, float* %v3, void (i8*, i32, i32, float, float)* %func) #0 !dbg !1894 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %handle.addr = alloca i8*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %func.addr = alloca void (i8*, i32, i32, float, float)*, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z0 = alloca float, align 4
  %z1 = alloca float, align 4
  %z2 = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %uxd = alloca float, align 4
  %uyd = alloca float, align 4
  %vxd = alloca float, align 4
  %vyd = alloca float, align 4
  %uy0 = alloca float, align 4
  %vy0 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !1900, metadata !DIExpression()), !dbg !1901
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !1902, metadata !DIExpression()), !dbg !1903
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !1904, metadata !DIExpression()), !dbg !1905
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !1906, metadata !DIExpression()), !dbg !1907
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !1908, metadata !DIExpression()), !dbg !1909
  store void (i8*, i32, i32, float, float)* %func, void (i8*, i32, i32, float, float)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, float, float)** %func.addr, metadata !1910, metadata !DIExpression()), !dbg !1911
  call void @llvm.dbg.declare(metadata float* %x0, metadata !1912, metadata !DIExpression()), !dbg !1913
  call void @llvm.dbg.declare(metadata float* %y0, metadata !1914, metadata !DIExpression()), !dbg !1915
  call void @llvm.dbg.declare(metadata float* %x1, metadata !1916, metadata !DIExpression()), !dbg !1917
  call void @llvm.dbg.declare(metadata float* %y1, metadata !1918, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.declare(metadata float* %x2, metadata !1920, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.declare(metadata float* %y2, metadata !1922, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.declare(metadata float* %z0, metadata !1924, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.declare(metadata float* %z1, metadata !1926, metadata !DIExpression()), !dbg !1927
  call void @llvm.dbg.declare(metadata float* %z2, metadata !1928, metadata !DIExpression()), !dbg !1929
  call void @llvm.dbg.declare(metadata float* %u, metadata !1930, metadata !DIExpression()), !dbg !1931
  call void @llvm.dbg.declare(metadata float* %v, metadata !1932, metadata !DIExpression()), !dbg !1933
  call void @llvm.dbg.declare(metadata float* %uxd, metadata !1934, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.declare(metadata float* %uyd, metadata !1936, metadata !DIExpression()), !dbg !1937
  call void @llvm.dbg.declare(metadata float* %vxd, metadata !1938, metadata !DIExpression()), !dbg !1939
  call void @llvm.dbg.declare(metadata float* %vyd, metadata !1940, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.declare(metadata float* %uy0, metadata !1942, metadata !DIExpression()), !dbg !1943
  call void @llvm.dbg.declare(metadata float* %vy0, metadata !1944, metadata !DIExpression()), !dbg !1945
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !1946, metadata !DIExpression()), !dbg !1947
  call void @llvm.dbg.declare(metadata float** %span1, metadata !1948, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.declare(metadata float** %span2, metadata !1950, metadata !DIExpression()), !dbg !1951
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1952, metadata !DIExpression()), !dbg !1953
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1954, metadata !DIExpression()), !dbg !1955
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !1956, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !1958, metadata !DIExpression()), !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !1960, metadata !DIExpression()), !dbg !1961
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1962
  %rectx1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %0, i32 0, i32 0, !dbg !1963
  %1 = load i32, i32* %rectx1, align 8, !dbg !1963
  store i32 %1, i32* %rectx, align 4, !dbg !1961
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !1964, metadata !DIExpression()), !dbg !1965
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !1966, metadata !DIExpression()), !dbg !1967
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1968
  call void @zbuf_init_span(%struct.ZSpan* %2), !dbg !1969
  %3 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1970
  %4 = load float*, float** %v1.addr, align 8, !dbg !1971
  %5 = load float*, float** %v2.addr, align 8, !dbg !1972
  call void @zbuf_add_to_span(%struct.ZSpan* %3, float* %4, float* %5), !dbg !1973
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1974
  %7 = load float*, float** %v2.addr, align 8, !dbg !1975
  %8 = load float*, float** %v3.addr, align 8, !dbg !1976
  call void @zbuf_add_to_span(%struct.ZSpan* %6, float* %7, float* %8), !dbg !1977
  %9 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1978
  %10 = load float*, float** %v3.addr, align 8, !dbg !1979
  %11 = load float*, float** %v1.addr, align 8, !dbg !1980
  call void @zbuf_add_to_span(%struct.ZSpan* %9, float* %10, float* %11), !dbg !1981
  %12 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1982
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %12, i32 0, i32 8, !dbg !1984
  %13 = load float*, float** %minp2, align 8, !dbg !1984
  %cmp = icmp eq float* %13, null, !dbg !1985
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1986

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1987
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %14, i32 0, i32 9, !dbg !1988
  %15 = load float*, float** %maxp2, align 8, !dbg !1988
  %cmp2 = icmp eq float* %15, null, !dbg !1989
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1990

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end145, !dbg !1991

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1992
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %16, i32 0, i32 2, !dbg !1994
  %17 = load i32, i32* %miny1, align 8, !dbg !1994
  %18 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1995
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %18, i32 0, i32 4, !dbg !1996
  %19 = load i32, i32* %miny2, align 8, !dbg !1996
  %cmp3 = icmp slt i32 %17, %19, !dbg !1997
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !1998

if.then4:                                         ; preds = %if.end
  %20 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !1999
  %miny25 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %20, i32 0, i32 4, !dbg !2000
  %21 = load i32, i32* %miny25, align 8, !dbg !2000
  store i32 %21, i32* %my0, align 4, !dbg !2001
  br label %if.end7, !dbg !2002

if.else:                                          ; preds = %if.end
  %22 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2003
  %miny16 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %22, i32 0, i32 2, !dbg !2004
  %23 = load i32, i32* %miny16, align 8, !dbg !2004
  store i32 %23, i32* %my0, align 4, !dbg !2005
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %24 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2006
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %24, i32 0, i32 3, !dbg !2008
  %25 = load i32, i32* %maxy1, align 4, !dbg !2008
  %26 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2009
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %26, i32 0, i32 5, !dbg !2010
  %27 = load i32, i32* %maxy2, align 4, !dbg !2010
  %cmp8 = icmp sgt i32 %25, %27, !dbg !2011
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !2012

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2013
  %maxy210 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %28, i32 0, i32 5, !dbg !2014
  %29 = load i32, i32* %maxy210, align 4, !dbg !2014
  store i32 %29, i32* %my2, align 4, !dbg !2015
  br label %if.end13, !dbg !2016

if.else11:                                        ; preds = %if.end7
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2017
  %maxy112 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %30, i32 0, i32 3, !dbg !2018
  %31 = load i32, i32* %maxy112, align 4, !dbg !2018
  store i32 %31, i32* %my2, align 4, !dbg !2019
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9
  %32 = load i32, i32* %my2, align 4, !dbg !2020
  %33 = load i32, i32* %my0, align 4, !dbg !2022
  %cmp14 = icmp slt i32 %32, %33, !dbg !2023
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2024

if.then15:                                        ; preds = %if.end13
  br label %for.end145, !dbg !2025

if.end16:                                         ; preds = %if.end13
  %34 = load float*, float** %v1.addr, align 8, !dbg !2026
  %arrayidx = getelementptr inbounds float, float* %34, i64 0, !dbg !2026
  %35 = load float, float* %arrayidx, align 4, !dbg !2026
  %36 = load float*, float** %v2.addr, align 8, !dbg !2027
  %arrayidx17 = getelementptr inbounds float, float* %36, i64 0, !dbg !2027
  %37 = load float, float* %arrayidx17, align 4, !dbg !2027
  %sub = fsub float %35, %37, !dbg !2028
  store float %sub, float* %x1, align 4, !dbg !2029
  %38 = load float*, float** %v2.addr, align 8, !dbg !2030
  %arrayidx18 = getelementptr inbounds float, float* %38, i64 0, !dbg !2030
  %39 = load float, float* %arrayidx18, align 4, !dbg !2030
  %40 = load float*, float** %v3.addr, align 8, !dbg !2031
  %arrayidx19 = getelementptr inbounds float, float* %40, i64 0, !dbg !2031
  %41 = load float, float* %arrayidx19, align 4, !dbg !2031
  %sub20 = fsub float %39, %41, !dbg !2032
  store float %sub20, float* %x2, align 4, !dbg !2033
  %42 = load float*, float** %v1.addr, align 8, !dbg !2034
  %arrayidx21 = getelementptr inbounds float, float* %42, i64 1, !dbg !2034
  %43 = load float, float* %arrayidx21, align 4, !dbg !2034
  %44 = load float*, float** %v2.addr, align 8, !dbg !2035
  %arrayidx22 = getelementptr inbounds float, float* %44, i64 1, !dbg !2035
  %45 = load float, float* %arrayidx22, align 4, !dbg !2035
  %sub23 = fsub float %43, %45, !dbg !2036
  store float %sub23, float* %y1, align 4, !dbg !2037
  %46 = load float*, float** %v2.addr, align 8, !dbg !2038
  %arrayidx24 = getelementptr inbounds float, float* %46, i64 1, !dbg !2038
  %47 = load float, float* %arrayidx24, align 4, !dbg !2038
  %48 = load float*, float** %v3.addr, align 8, !dbg !2039
  %arrayidx25 = getelementptr inbounds float, float* %48, i64 1, !dbg !2039
  %49 = load float, float* %arrayidx25, align 4, !dbg !2039
  %sub26 = fsub float %47, %49, !dbg !2040
  store float %sub26, float* %y2, align 4, !dbg !2041
  store float 1.000000e+00, float* %z1, align 4, !dbg !2042
  store float 0.000000e+00, float* %z2, align 4, !dbg !2043
  %50 = load float, float* %y1, align 4, !dbg !2044
  %51 = load float, float* %z2, align 4, !dbg !2045
  %mul = fmul float %50, %51, !dbg !2046
  %52 = load float, float* %z1, align 4, !dbg !2047
  %53 = load float, float* %y2, align 4, !dbg !2048
  %mul27 = fmul float %52, %53, !dbg !2049
  %sub28 = fsub float %mul, %mul27, !dbg !2050
  store float %sub28, float* %x0, align 4, !dbg !2051
  %54 = load float, float* %z1, align 4, !dbg !2052
  %55 = load float, float* %x2, align 4, !dbg !2053
  %mul29 = fmul float %54, %55, !dbg !2054
  %56 = load float, float* %x1, align 4, !dbg !2055
  %57 = load float, float* %z2, align 4, !dbg !2056
  %mul30 = fmul float %56, %57, !dbg !2057
  %sub31 = fsub float %mul29, %mul30, !dbg !2058
  store float %sub31, float* %y0, align 4, !dbg !2059
  %58 = load float, float* %x1, align 4, !dbg !2060
  %59 = load float, float* %y2, align 4, !dbg !2061
  %mul32 = fmul float %58, %59, !dbg !2062
  %60 = load float, float* %y1, align 4, !dbg !2063
  %61 = load float, float* %x2, align 4, !dbg !2064
  %mul33 = fmul float %60, %61, !dbg !2065
  %sub34 = fsub float %mul32, %mul33, !dbg !2066
  store float %sub34, float* %z0, align 4, !dbg !2067
  %62 = load float, float* %z0, align 4, !dbg !2068
  %cmp35 = fcmp oeq float %62, 0.000000e+00, !dbg !2070
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !2071

if.then36:                                        ; preds = %if.end16
  br label %for.end145, !dbg !2072

if.end37:                                         ; preds = %if.end16
  %63 = load float, float* %x0, align 4, !dbg !2073
  %64 = load float*, float** %v1.addr, align 8, !dbg !2074
  %arrayidx38 = getelementptr inbounds float, float* %64, i64 0, !dbg !2074
  %65 = load float, float* %arrayidx38, align 4, !dbg !2074
  %mul39 = fmul float %63, %65, !dbg !2075
  %66 = load float, float* %y0, align 4, !dbg !2076
  %67 = load float*, float** %v1.addr, align 8, !dbg !2077
  %arrayidx40 = getelementptr inbounds float, float* %67, i64 1, !dbg !2077
  %68 = load float, float* %arrayidx40, align 4, !dbg !2077
  %mul41 = fmul float %66, %68, !dbg !2078
  %add = fadd float %mul39, %mul41, !dbg !2079
  %69 = load float, float* %z0, align 4, !dbg !2080
  %div = fdiv float %add, %69, !dbg !2081
  %add42 = fadd float %div, 1.000000e+00, !dbg !2082
  store float %add42, float* %xx1, align 4, !dbg !2083
  %70 = load float, float* %x0, align 4, !dbg !2084
  %conv = fpext float %70 to double, !dbg !2085
  %fneg = fneg double %conv, !dbg !2086
  %71 = load float, float* %z0, align 4, !dbg !2087
  %conv43 = fpext float %71 to double, !dbg !2088
  %div44 = fdiv double %fneg, %conv43, !dbg !2089
  %conv45 = fptrunc double %div44 to float, !dbg !2086
  store float %conv45, float* %uxd, align 4, !dbg !2090
  %72 = load float, float* %y0, align 4, !dbg !2091
  %conv46 = fpext float %72 to double, !dbg !2092
  %fneg47 = fneg double %conv46, !dbg !2093
  %73 = load float, float* %z0, align 4, !dbg !2094
  %conv48 = fpext float %73 to double, !dbg !2095
  %div49 = fdiv double %fneg47, %conv48, !dbg !2096
  %conv50 = fptrunc double %div49 to float, !dbg !2093
  store float %conv50, float* %uyd, align 4, !dbg !2097
  %74 = load i32, i32* %my2, align 4, !dbg !2098
  %conv51 = sitofp i32 %74 to double, !dbg !2099
  %75 = load float, float* %uyd, align 4, !dbg !2100
  %conv52 = fpext float %75 to double, !dbg !2100
  %mul53 = fmul double %conv51, %conv52, !dbg !2101
  %76 = load float, float* %xx1, align 4, !dbg !2102
  %conv54 = fpext float %76 to double, !dbg !2103
  %add55 = fadd double %mul53, %conv54, !dbg !2104
  %conv56 = fptrunc double %add55 to float, !dbg !2105
  store float %conv56, float* %uy0, align 4, !dbg !2106
  store float -1.000000e+00, float* %z1, align 4, !dbg !2107
  store float 1.000000e+00, float* %z2, align 4, !dbg !2108
  %77 = load float, float* %y1, align 4, !dbg !2109
  %78 = load float, float* %z2, align 4, !dbg !2110
  %mul57 = fmul float %77, %78, !dbg !2111
  %79 = load float, float* %z1, align 4, !dbg !2112
  %80 = load float, float* %y2, align 4, !dbg !2113
  %mul58 = fmul float %79, %80, !dbg !2114
  %sub59 = fsub float %mul57, %mul58, !dbg !2115
  store float %sub59, float* %x0, align 4, !dbg !2116
  %81 = load float, float* %z1, align 4, !dbg !2117
  %82 = load float, float* %x2, align 4, !dbg !2118
  %mul60 = fmul float %81, %82, !dbg !2119
  %83 = load float, float* %x1, align 4, !dbg !2120
  %84 = load float, float* %z2, align 4, !dbg !2121
  %mul61 = fmul float %83, %84, !dbg !2122
  %sub62 = fsub float %mul60, %mul61, !dbg !2123
  store float %sub62, float* %y0, align 4, !dbg !2124
  %85 = load float, float* %x0, align 4, !dbg !2125
  %86 = load float*, float** %v1.addr, align 8, !dbg !2126
  %arrayidx63 = getelementptr inbounds float, float* %86, i64 0, !dbg !2126
  %87 = load float, float* %arrayidx63, align 4, !dbg !2126
  %mul64 = fmul float %85, %87, !dbg !2127
  %88 = load float, float* %y0, align 4, !dbg !2128
  %89 = load float*, float** %v1.addr, align 8, !dbg !2129
  %arrayidx65 = getelementptr inbounds float, float* %89, i64 1, !dbg !2129
  %90 = load float, float* %arrayidx65, align 4, !dbg !2129
  %mul66 = fmul float %88, %90, !dbg !2130
  %add67 = fadd float %mul64, %mul66, !dbg !2131
  %91 = load float, float* %z0, align 4, !dbg !2132
  %div68 = fdiv float %add67, %91, !dbg !2133
  store float %div68, float* %xx1, align 4, !dbg !2134
  %92 = load float, float* %x0, align 4, !dbg !2135
  %conv69 = fpext float %92 to double, !dbg !2136
  %fneg70 = fneg double %conv69, !dbg !2137
  %93 = load float, float* %z0, align 4, !dbg !2138
  %conv71 = fpext float %93 to double, !dbg !2139
  %div72 = fdiv double %fneg70, %conv71, !dbg !2140
  %conv73 = fptrunc double %div72 to float, !dbg !2137
  store float %conv73, float* %vxd, align 4, !dbg !2141
  %94 = load float, float* %y0, align 4, !dbg !2142
  %conv74 = fpext float %94 to double, !dbg !2143
  %fneg75 = fneg double %conv74, !dbg !2144
  %95 = load float, float* %z0, align 4, !dbg !2145
  %conv76 = fpext float %95 to double, !dbg !2146
  %div77 = fdiv double %fneg75, %conv76, !dbg !2147
  %conv78 = fptrunc double %div77 to float, !dbg !2144
  store float %conv78, float* %vyd, align 4, !dbg !2148
  %96 = load i32, i32* %my2, align 4, !dbg !2149
  %conv79 = sitofp i32 %96 to double, !dbg !2150
  %97 = load float, float* %vyd, align 4, !dbg !2151
  %conv80 = fpext float %97 to double, !dbg !2151
  %mul81 = fmul double %conv79, %conv80, !dbg !2152
  %98 = load float, float* %xx1, align 4, !dbg !2153
  %conv82 = fpext float %98 to double, !dbg !2154
  %add83 = fadd double %mul81, %conv82, !dbg !2155
  %conv84 = fptrunc double %add83 to float, !dbg !2156
  store float %conv84, float* %vy0, align 4, !dbg !2157
  %99 = load i32, i32* %my0, align 4, !dbg !2158
  %100 = load i32, i32* %my2, align 4, !dbg !2159
  %add85 = add nsw i32 %99, %100, !dbg !2160
  %div86 = sdiv i32 %add85, 2, !dbg !2161
  store i32 %div86, i32* %sn1, align 4, !dbg !2162
  %101 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2163
  %span187 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %101, i32 0, i32 10, !dbg !2165
  %102 = load float*, float** %span187, align 8, !dbg !2165
  %103 = load i32, i32* %sn1, align 4, !dbg !2166
  %idxprom = sext i32 %103 to i64, !dbg !2163
  %arrayidx88 = getelementptr inbounds float, float* %102, i64 %idxprom, !dbg !2163
  %104 = load float, float* %arrayidx88, align 4, !dbg !2163
  %105 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2167
  %span289 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %105, i32 0, i32 11, !dbg !2168
  %106 = load float*, float** %span289, align 8, !dbg !2168
  %107 = load i32, i32* %sn1, align 4, !dbg !2169
  %idxprom90 = sext i32 %107 to i64, !dbg !2167
  %arrayidx91 = getelementptr inbounds float, float* %106, i64 %idxprom90, !dbg !2167
  %108 = load float, float* %arrayidx91, align 4, !dbg !2167
  %cmp92 = fcmp olt float %104, %108, !dbg !2170
  br i1 %cmp92, label %if.then94, label %if.else99, !dbg !2171

if.then94:                                        ; preds = %if.end37
  %109 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2172
  %span195 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %109, i32 0, i32 10, !dbg !2174
  %110 = load float*, float** %span195, align 8, !dbg !2174
  %111 = load i32, i32* %my2, align 4, !dbg !2175
  %idx.ext = sext i32 %111 to i64, !dbg !2176
  %add.ptr = getelementptr inbounds float, float* %110, i64 %idx.ext, !dbg !2176
  store float* %add.ptr, float** %span1, align 8, !dbg !2177
  %112 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2178
  %span296 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %112, i32 0, i32 11, !dbg !2179
  %113 = load float*, float** %span296, align 8, !dbg !2179
  %114 = load i32, i32* %my2, align 4, !dbg !2180
  %idx.ext97 = sext i32 %114 to i64, !dbg !2181
  %add.ptr98 = getelementptr inbounds float, float* %113, i64 %idx.ext97, !dbg !2181
  store float* %add.ptr98, float** %span2, align 8, !dbg !2182
  br label %if.end106, !dbg !2183

if.else99:                                        ; preds = %if.end37
  %115 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2184
  %span2100 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %115, i32 0, i32 11, !dbg !2186
  %116 = load float*, float** %span2100, align 8, !dbg !2186
  %117 = load i32, i32* %my2, align 4, !dbg !2187
  %idx.ext101 = sext i32 %117 to i64, !dbg !2188
  %add.ptr102 = getelementptr inbounds float, float* %116, i64 %idx.ext101, !dbg !2188
  store float* %add.ptr102, float** %span1, align 8, !dbg !2189
  %118 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2190
  %span1103 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %118, i32 0, i32 10, !dbg !2191
  %119 = load float*, float** %span1103, align 8, !dbg !2191
  %120 = load i32, i32* %my2, align 4, !dbg !2192
  %idx.ext104 = sext i32 %120 to i64, !dbg !2193
  %add.ptr105 = getelementptr inbounds float, float* %119, i64 %idx.ext104, !dbg !2193
  store float* %add.ptr105, float** %span2, align 8, !dbg !2194
  br label %if.end106

if.end106:                                        ; preds = %if.else99, %if.then94
  %121 = load i32, i32* %my2, align 4, !dbg !2195
  store i32 %121, i32* %y, align 4, !dbg !2197
  br label %for.cond, !dbg !2198

for.cond:                                         ; preds = %for.inc143, %if.end106
  %122 = load i32, i32* %y, align 4, !dbg !2199
  %123 = load i32, i32* %my0, align 4, !dbg !2201
  %cmp107 = icmp sge i32 %122, %123, !dbg !2202
  br i1 %cmp107, label %for.body, label %for.end145, !dbg !2203

for.body:                                         ; preds = %for.cond
  %124 = load float*, float** %span1, align 8, !dbg !2204
  %125 = load float, float* %124, align 4, !dbg !2206
  %conv109 = fpext float %125 to double, !dbg !2206
  %126 = call double @llvm.floor.f64(double %conv109), !dbg !2207
  %conv110 = fptosi double %126 to i32, !dbg !2207
  store i32 %conv110, i32* %sn1, align 4, !dbg !2208
  %127 = load float*, float** %span2, align 8, !dbg !2209
  %128 = load float, float* %127, align 4, !dbg !2210
  %conv111 = fpext float %128 to double, !dbg !2210
  %129 = call double @llvm.floor.f64(double %conv111), !dbg !2211
  %conv112 = fptosi double %129 to i32, !dbg !2211
  store i32 %conv112, i32* %sn2, align 4, !dbg !2212
  %130 = load i32, i32* %sn1, align 4, !dbg !2213
  %inc = add nsw i32 %130, 1, !dbg !2213
  store i32 %inc, i32* %sn1, align 4, !dbg !2213
  %131 = load i32, i32* %sn2, align 4, !dbg !2214
  %132 = load i32, i32* %rectx, align 4, !dbg !2216
  %cmp113 = icmp sge i32 %131, %132, !dbg !2217
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !2218

if.then115:                                       ; preds = %for.body
  %133 = load i32, i32* %rectx, align 4, !dbg !2219
  %sub116 = sub nsw i32 %133, 1, !dbg !2220
  store i32 %sub116, i32* %sn2, align 4, !dbg !2221
  br label %if.end117, !dbg !2222

if.end117:                                        ; preds = %if.then115, %for.body
  %134 = load i32, i32* %sn1, align 4, !dbg !2223
  %cmp118 = icmp slt i32 %134, 0, !dbg !2225
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !2226

if.then120:                                       ; preds = %if.end117
  store i32 0, i32* %sn1, align 4, !dbg !2227
  br label %if.end121, !dbg !2228

if.end121:                                        ; preds = %if.then120, %if.end117
  %135 = load i32, i32* %sn1, align 4, !dbg !2229
  %conv122 = sitofp i32 %135 to double, !dbg !2230
  %136 = load float, float* %uxd, align 4, !dbg !2231
  %conv123 = fpext float %136 to double, !dbg !2231
  %mul124 = fmul double %conv122, %conv123, !dbg !2232
  %137 = load float, float* %uy0, align 4, !dbg !2233
  %conv125 = fpext float %137 to double, !dbg !2233
  %add126 = fadd double %mul124, %conv125, !dbg !2234
  %conv127 = fptrunc double %add126 to float, !dbg !2230
  store float %conv127, float* %u, align 4, !dbg !2235
  %138 = load i32, i32* %sn1, align 4, !dbg !2236
  %conv128 = sitofp i32 %138 to double, !dbg !2237
  %139 = load float, float* %vxd, align 4, !dbg !2238
  %conv129 = fpext float %139 to double, !dbg !2238
  %mul130 = fmul double %conv128, %conv129, !dbg !2239
  %140 = load float, float* %vy0, align 4, !dbg !2240
  %conv131 = fpext float %140 to double, !dbg !2240
  %add132 = fadd double %mul130, %conv131, !dbg !2241
  %conv133 = fptrunc double %add132 to float, !dbg !2237
  store float %conv133, float* %v, align 4, !dbg !2242
  %141 = load i32, i32* %sn1, align 4, !dbg !2243
  store i32 %141, i32* %x, align 4, !dbg !2245
  br label %for.cond134, !dbg !2246

for.cond134:                                      ; preds = %for.inc, %if.end121
  %142 = load i32, i32* %x, align 4, !dbg !2247
  %143 = load i32, i32* %sn2, align 4, !dbg !2249
  %cmp135 = icmp sle i32 %142, %143, !dbg !2250
  br i1 %cmp135, label %for.body137, label %for.end, !dbg !2251

for.body137:                                      ; preds = %for.cond134
  %144 = load void (i8*, i32, i32, float, float)*, void (i8*, i32, i32, float, float)** %func.addr, align 8, !dbg !2252
  %145 = load i8*, i8** %handle.addr, align 8, !dbg !2253
  %146 = load i32, i32* %x, align 4, !dbg !2254
  %147 = load i32, i32* %y, align 4, !dbg !2255
  %148 = load float, float* %u, align 4, !dbg !2256
  %149 = load float, float* %v, align 4, !dbg !2257
  call void %144(i8* %145, i32 %146, i32 %147, float %148, float %149), !dbg !2252
  br label %for.inc, !dbg !2252

for.inc:                                          ; preds = %for.body137
  %150 = load i32, i32* %x, align 4, !dbg !2258
  %inc138 = add nsw i32 %150, 1, !dbg !2258
  store i32 %inc138, i32* %x, align 4, !dbg !2258
  %151 = load float, float* %uxd, align 4, !dbg !2259
  %152 = load float, float* %u, align 4, !dbg !2260
  %add139 = fadd float %152, %151, !dbg !2260
  store float %add139, float* %u, align 4, !dbg !2260
  %153 = load float, float* %vxd, align 4, !dbg !2261
  %154 = load float, float* %v, align 4, !dbg !2262
  %add140 = fadd float %154, %153, !dbg !2262
  store float %add140, float* %v, align 4, !dbg !2262
  br label %for.cond134, !dbg !2263, !llvm.loop !2264

for.end:                                          ; preds = %for.cond134
  %155 = load float, float* %uyd, align 4, !dbg !2266
  %156 = load float, float* %uy0, align 4, !dbg !2267
  %sub141 = fsub float %156, %155, !dbg !2267
  store float %sub141, float* %uy0, align 4, !dbg !2267
  %157 = load float, float* %vyd, align 4, !dbg !2268
  %158 = load float, float* %vy0, align 4, !dbg !2269
  %sub142 = fsub float %158, %157, !dbg !2269
  store float %sub142, float* %vy0, align 4, !dbg !2269
  br label %for.inc143, !dbg !2270

for.inc143:                                       ; preds = %for.end
  %159 = load i32, i32* %y, align 4, !dbg !2271
  %dec = add nsw i32 %159, -1, !dbg !2271
  store i32 %dec, i32* %y, align 4, !dbg !2271
  %160 = load float*, float** %span1, align 8, !dbg !2272
  %incdec.ptr = getelementptr inbounds float, float* %160, i32 -1, !dbg !2272
  store float* %incdec.ptr, float** %span1, align 8, !dbg !2272
  %161 = load float*, float** %span2, align 8, !dbg !2273
  %incdec.ptr144 = getelementptr inbounds float, float* %161, i32 -1, !dbg !2273
  store float* %incdec.ptr144, float** %span2, align 8, !dbg !2273
  br label %for.cond, !dbg !2274, !llvm.loop !2275

for.end145:                                       ; preds = %if.then, %if.then15, %if.then36, %for.cond
  ret void, !dbg !2277
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectverto(float* %v1, [4 x float]* %winmat, float* %adr) #0 !dbg !2278 {
entry:
  %v1.addr = alloca float*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %adr.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2282, metadata !DIExpression()), !dbg !2283
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !2284, metadata !DIExpression()), !dbg !2285
  store float* %adr, float** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr.addr, metadata !2286, metadata !DIExpression()), !dbg !2287
  call void @llvm.dbg.declare(metadata float* %x, metadata !2288, metadata !DIExpression()), !dbg !2289
  call void @llvm.dbg.declare(metadata float* %y, metadata !2290, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.declare(metadata float* %z, metadata !2292, metadata !DIExpression()), !dbg !2293
  %0 = load float*, float** %v1.addr, align 8, !dbg !2294
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2294
  %1 = load float, float* %arrayidx, align 4, !dbg !2294
  store float %1, float* %x, align 4, !dbg !2295
  %2 = load float*, float** %v1.addr, align 8, !dbg !2296
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2296
  %3 = load float, float* %arrayidx1, align 4, !dbg !2296
  store float %3, float* %y, align 4, !dbg !2297
  %4 = load float*, float** %v1.addr, align 8, !dbg !2298
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !2298
  %5 = load float, float* %arrayidx2, align 4, !dbg !2298
  store float %5, float* %z, align 4, !dbg !2299
  %6 = load float, float* %x, align 4, !dbg !2300
  %7 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2301
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, !dbg !2301
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 0, !dbg !2301
  %8 = load float, float* %arrayidx4, align 4, !dbg !2301
  %mul = fmul float %6, %8, !dbg !2302
  %9 = load float, float* %z, align 4, !dbg !2303
  %10 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2304
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %10, i64 2, !dbg !2304
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !2304
  %11 = load float, float* %arrayidx6, align 4, !dbg !2304
  %mul7 = fmul float %9, %11, !dbg !2305
  %add = fadd float %mul, %mul7, !dbg !2306
  %12 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2307
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 3, !dbg !2307
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 0, !dbg !2307
  %13 = load float, float* %arrayidx9, align 4, !dbg !2307
  %add10 = fadd float %add, %13, !dbg !2308
  %14 = load float*, float** %adr.addr, align 8, !dbg !2309
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 0, !dbg !2309
  store float %add10, float* %arrayidx11, align 4, !dbg !2310
  %15 = load float, float* %y, align 4, !dbg !2311
  %16 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2312
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %16, i64 1, !dbg !2312
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i64 0, i64 1, !dbg !2312
  %17 = load float, float* %arrayidx13, align 4, !dbg !2312
  %mul14 = fmul float %15, %17, !dbg !2313
  %18 = load float, float* %z, align 4, !dbg !2314
  %19 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2315
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %19, i64 2, !dbg !2315
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i64 0, i64 1, !dbg !2315
  %20 = load float, float* %arrayidx16, align 4, !dbg !2315
  %mul17 = fmul float %18, %20, !dbg !2316
  %add18 = fadd float %mul14, %mul17, !dbg !2317
  %21 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2318
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %21, i64 3, !dbg !2318
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 1, !dbg !2318
  %22 = load float, float* %arrayidx20, align 4, !dbg !2318
  %add21 = fadd float %add18, %22, !dbg !2319
  %23 = load float*, float** %adr.addr, align 8, !dbg !2320
  %arrayidx22 = getelementptr inbounds float, float* %23, i64 1, !dbg !2320
  store float %add21, float* %arrayidx22, align 4, !dbg !2321
  %24 = load float, float* %z, align 4, !dbg !2322
  %25 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2323
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %25, i64 2, !dbg !2323
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 2, !dbg !2323
  %26 = load float, float* %arrayidx24, align 4, !dbg !2323
  %mul25 = fmul float %24, %26, !dbg !2324
  %27 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2325
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 3, !dbg !2325
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx26, i64 0, i64 2, !dbg !2325
  %28 = load float, float* %arrayidx27, align 4, !dbg !2325
  %add28 = fadd float %mul25, %28, !dbg !2326
  %29 = load float*, float** %adr.addr, align 8, !dbg !2327
  %arrayidx29 = getelementptr inbounds float, float* %29, i64 2, !dbg !2327
  store float %add28, float* %arrayidx29, align 4, !dbg !2328
  %30 = load float, float* %z, align 4, !dbg !2329
  %31 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2330
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 2, !dbg !2330
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 3, !dbg !2330
  %32 = load float, float* %arrayidx31, align 4, !dbg !2330
  %mul32 = fmul float %30, %32, !dbg !2331
  %33 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2332
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %33, i64 3, !dbg !2332
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx33, i64 0, i64 3, !dbg !2332
  %34 = load float, float* %arrayidx34, align 4, !dbg !2332
  %add35 = fadd float %mul32, %34, !dbg !2333
  %35 = load float*, float** %adr.addr, align 8, !dbg !2334
  %arrayidx36 = getelementptr inbounds float, float* %35, i64 3, !dbg !2334
  store float %add35, float* %arrayidx36, align 4, !dbg !2335
  ret void, !dbg !2336
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @projectvert(float* %v1, [4 x float]* %winmat, float* %adr) #0 !dbg !2337 {
entry:
  %v1.addr = alloca float*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %adr.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !2338, metadata !DIExpression()), !dbg !2339
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !2340, metadata !DIExpression()), !dbg !2341
  store float* %adr, float** %adr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %adr.addr, metadata !2342, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.declare(metadata float* %x, metadata !2344, metadata !DIExpression()), !dbg !2345
  call void @llvm.dbg.declare(metadata float* %y, metadata !2346, metadata !DIExpression()), !dbg !2347
  call void @llvm.dbg.declare(metadata float* %z, metadata !2348, metadata !DIExpression()), !dbg !2349
  %0 = load float*, float** %v1.addr, align 8, !dbg !2350
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2350
  %1 = load float, float* %arrayidx, align 4, !dbg !2350
  store float %1, float* %x, align 4, !dbg !2351
  %2 = load float*, float** %v1.addr, align 8, !dbg !2352
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !2352
  %3 = load float, float* %arrayidx1, align 4, !dbg !2352
  store float %3, float* %y, align 4, !dbg !2353
  %4 = load float*, float** %v1.addr, align 8, !dbg !2354
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !2354
  %5 = load float, float* %arrayidx2, align 4, !dbg !2354
  store float %5, float* %z, align 4, !dbg !2355
  %6 = load float, float* %x, align 4, !dbg !2356
  %7 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2357
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 0, !dbg !2357
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 0, !dbg !2357
  %8 = load float, float* %arrayidx4, align 4, !dbg !2357
  %mul = fmul float %6, %8, !dbg !2358
  %9 = load float, float* %y, align 4, !dbg !2359
  %10 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2360
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %10, i64 1, !dbg !2360
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !2360
  %11 = load float, float* %arrayidx6, align 4, !dbg !2360
  %mul7 = fmul float %9, %11, !dbg !2361
  %add = fadd float %mul, %mul7, !dbg !2362
  %12 = load float, float* %z, align 4, !dbg !2363
  %13 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2364
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %13, i64 2, !dbg !2364
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 0, !dbg !2364
  %14 = load float, float* %arrayidx9, align 4, !dbg !2364
  %mul10 = fmul float %12, %14, !dbg !2365
  %add11 = fadd float %add, %mul10, !dbg !2366
  %15 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2367
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 3, !dbg !2367
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i64 0, i64 0, !dbg !2367
  %16 = load float, float* %arrayidx13, align 4, !dbg !2367
  %add14 = fadd float %add11, %16, !dbg !2368
  %17 = load float*, float** %adr.addr, align 8, !dbg !2369
  %arrayidx15 = getelementptr inbounds float, float* %17, i64 0, !dbg !2369
  store float %add14, float* %arrayidx15, align 4, !dbg !2370
  %18 = load float, float* %x, align 4, !dbg !2371
  %19 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2372
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %19, i64 0, !dbg !2372
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx16, i64 0, i64 1, !dbg !2372
  %20 = load float, float* %arrayidx17, align 4, !dbg !2372
  %mul18 = fmul float %18, %20, !dbg !2373
  %21 = load float, float* %y, align 4, !dbg !2374
  %22 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2375
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 1, !dbg !2375
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 1, !dbg !2375
  %23 = load float, float* %arrayidx20, align 4, !dbg !2375
  %mul21 = fmul float %21, %23, !dbg !2376
  %add22 = fadd float %mul18, %mul21, !dbg !2377
  %24 = load float, float* %z, align 4, !dbg !2378
  %25 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2379
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %25, i64 2, !dbg !2379
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 1, !dbg !2379
  %26 = load float, float* %arrayidx24, align 4, !dbg !2379
  %mul25 = fmul float %24, %26, !dbg !2380
  %add26 = fadd float %add22, %mul25, !dbg !2381
  %27 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2382
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %27, i64 3, !dbg !2382
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 1, !dbg !2382
  %28 = load float, float* %arrayidx28, align 4, !dbg !2382
  %add29 = fadd float %add26, %28, !dbg !2383
  %29 = load float*, float** %adr.addr, align 8, !dbg !2384
  %arrayidx30 = getelementptr inbounds float, float* %29, i64 1, !dbg !2384
  store float %add29, float* %arrayidx30, align 4, !dbg !2385
  %30 = load float, float* %x, align 4, !dbg !2386
  %31 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2387
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %31, i64 0, !dbg !2387
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx31, i64 0, i64 2, !dbg !2387
  %32 = load float, float* %arrayidx32, align 4, !dbg !2387
  %mul33 = fmul float %30, %32, !dbg !2388
  %33 = load float, float* %y, align 4, !dbg !2389
  %34 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2390
  %arrayidx34 = getelementptr inbounds [4 x float], [4 x float]* %34, i64 1, !dbg !2390
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx34, i64 0, i64 2, !dbg !2390
  %35 = load float, float* %arrayidx35, align 4, !dbg !2390
  %mul36 = fmul float %33, %35, !dbg !2391
  %add37 = fadd float %mul33, %mul36, !dbg !2392
  %36 = load float, float* %z, align 4, !dbg !2393
  %37 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2394
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %37, i64 2, !dbg !2394
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx38, i64 0, i64 2, !dbg !2394
  %38 = load float, float* %arrayidx39, align 4, !dbg !2394
  %mul40 = fmul float %36, %38, !dbg !2395
  %add41 = fadd float %add37, %mul40, !dbg !2396
  %39 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2397
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %39, i64 3, !dbg !2397
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 2, !dbg !2397
  %40 = load float, float* %arrayidx43, align 4, !dbg !2397
  %add44 = fadd float %add41, %40, !dbg !2398
  %41 = load float*, float** %adr.addr, align 8, !dbg !2399
  %arrayidx45 = getelementptr inbounds float, float* %41, i64 2, !dbg !2399
  store float %add44, float* %arrayidx45, align 4, !dbg !2400
  %42 = load float, float* %x, align 4, !dbg !2401
  %43 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2402
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %43, i64 0, !dbg !2402
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx46, i64 0, i64 3, !dbg !2402
  %44 = load float, float* %arrayidx47, align 4, !dbg !2402
  %mul48 = fmul float %42, %44, !dbg !2403
  %45 = load float, float* %y, align 4, !dbg !2404
  %46 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2405
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %46, i64 1, !dbg !2405
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx49, i64 0, i64 3, !dbg !2405
  %47 = load float, float* %arrayidx50, align 4, !dbg !2405
  %mul51 = fmul float %45, %47, !dbg !2406
  %add52 = fadd float %mul48, %mul51, !dbg !2407
  %48 = load float, float* %z, align 4, !dbg !2408
  %49 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2409
  %arrayidx53 = getelementptr inbounds [4 x float], [4 x float]* %49, i64 2, !dbg !2409
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx53, i64 0, i64 3, !dbg !2409
  %50 = load float, float* %arrayidx54, align 4, !dbg !2409
  %mul55 = fmul float %48, %50, !dbg !2410
  %add56 = fadd float %add52, %mul55, !dbg !2411
  %51 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2412
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %51, i64 3, !dbg !2412
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx57, i64 0, i64 3, !dbg !2412
  %52 = load float, float* %arrayidx58, align 4, !dbg !2412
  %add59 = fadd float %add56, %52, !dbg !2413
  %53 = load float*, float** %adr.addr, align 8, !dbg !2414
  %arrayidx60 = getelementptr inbounds float, float* %53, i64 3, !dbg !2414
  store float %add59, float* %arrayidx60, align 4, !dbg !2415
  ret void, !dbg !2416
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuf_render_project([4 x float]* %winmat, float* %co, float* %ho) #0 !dbg !2417 {
entry:
  %winmat.addr = alloca [4 x float]*, align 8
  %co.addr = alloca float*, align 8
  %ho.addr = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !2426, metadata !DIExpression()), !dbg !2430
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2431
  %0 = load float*, float** %co.addr, align 8, !dbg !2432
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !2433
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2434
  %1 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !2435
  %2 = load float*, float** %ho.addr, align 8, !dbg !2436
  call void @projectvert(float* %arraydecay1, [4 x float]* %1, float* %2), !dbg !2437
  ret void, !dbg !2438
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !2439 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2440, metadata !DIExpression()), !dbg !2441
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2442, metadata !DIExpression()), !dbg !2443
  %0 = load float*, float** %a.addr, align 8, !dbg !2444
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2444
  %1 = load float, float* %arrayidx, align 4, !dbg !2444
  %2 = load float*, float** %r.addr, align 8, !dbg !2445
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2445
  store float %1, float* %arrayidx1, align 4, !dbg !2446
  %3 = load float*, float** %a.addr, align 8, !dbg !2447
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !2447
  %4 = load float, float* %arrayidx2, align 4, !dbg !2447
  %5 = load float*, float** %r.addr, align 8, !dbg !2448
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2448
  store float %4, float* %arrayidx3, align 4, !dbg !2449
  %6 = load float*, float** %a.addr, align 8, !dbg !2450
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !2450
  %7 = load float, float* %arrayidx4, align 4, !dbg !2450
  %8 = load float*, float** %r.addr, align 8, !dbg !2451
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !2451
  store float %7, float* %arrayidx5, align 4, !dbg !2452
  ret void, !dbg !2453
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuf_make_winmat(%struct.Render* %re, [4 x float]* %winmat) #0 !dbg !2454 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %panomat = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4694, metadata !DIExpression()), !dbg !4695
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !4696, metadata !DIExpression()), !dbg !4697
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4698
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !4700
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !4701
  %1 = load i32, i32* %mode, align 8, !dbg !4701
  %and = and i32 %1, 1024, !dbg !4702
  %tobool = icmp ne i32 %and, 0, !dbg !4702
  br i1 %tobool, label %if.then, label %if.else, !dbg !4703

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %panomat, metadata !4704, metadata !DIExpression()), !dbg !4706
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 0, !dbg !4707
  call void @unit_m4([4 x float]* %arraydecay), !dbg !4708
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4709
  %panoco = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 27, !dbg !4710
  %3 = load float, float* %panoco, align 4, !dbg !4710
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 0, !dbg !4711
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !4711
  store float %3, float* %arrayidx1, align 16, !dbg !4712
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4713
  %panosi = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 26, !dbg !4714
  %5 = load float, float* %panosi, align 8, !dbg !4714
  %arrayidx2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 0, !dbg !4715
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx2, i64 0, i64 2, !dbg !4715
  store float %5, float* %arrayidx3, align 8, !dbg !4716
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4717
  %panosi4 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 26, !dbg !4718
  %7 = load float, float* %panosi4, align 8, !dbg !4718
  %fneg = fneg float %7, !dbg !4719
  %arrayidx5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 2, !dbg !4720
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 0, !dbg !4720
  store float %fneg, float* %arrayidx6, align 16, !dbg !4721
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4722
  %panoco7 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 27, !dbg !4723
  %9 = load float, float* %panoco7, align 4, !dbg !4723
  %arrayidx8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 2, !dbg !4724
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx8, i64 0, i64 2, !dbg !4724
  store float %9, float* %arrayidx9, align 8, !dbg !4725
  %10 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !4726
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4727
  %winmat10 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 35, !dbg !4728
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat10, i64 0, i64 0, !dbg !4727
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %panomat, i64 0, i64 0, !dbg !4729
  call void @mul_m4_m4m4([4 x float]* %10, [4 x float]* %arraydecay11, [4 x float]* %arraydecay12), !dbg !4730
  br label %if.end, !dbg !4731

if.else:                                          ; preds = %entry
  %12 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !4732
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4733
  %winmat13 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 35, !dbg !4734
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat13, i64 0, i64 0, !dbg !4733
  call void @copy_m4_m4([4 x float]* %12, [4 x float]* %arraydecay14), !dbg !4735
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4736
}

declare dso_local void @unit_m4([4 x float]*) #3

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #3

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufclip(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %f1, float* %f2, float* %f3, i32 %c1, i32 %c2, i32 %c3) #0 !dbg !4737 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %f1.addr = alloca float*, align 8
  %f2.addr = alloca float*, align 8
  %f3.addr = alloca float*, align 8
  %c1.addr = alloca i32, align 4
  %c2.addr = alloca i32, align 4
  %c3.addr = alloca i32, align 4
  %vlzp = alloca [32 x [3 x float*]], align 16
  %lambda = alloca [3 x [2 x float]], align 16
  %vez = alloca [400 x float], align 16
  %trias = alloca [40 x float*], align 16
  %arg = alloca i32, align 4
  %v = alloca i32, align 4
  %b = alloca i32, align 4
  %clipflag = alloca [3 x i32], align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %clve = alloca i32, align 4
  %clvlo = alloca i32, align 4
  %clvl = alloca i32, align 4
  %fp = alloca float*, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !4740, metadata !DIExpression()), !dbg !4741
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !4744, metadata !DIExpression()), !dbg !4745
  store float* %f1, float** %f1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f1.addr, metadata !4746, metadata !DIExpression()), !dbg !4747
  store float* %f2, float** %f2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f2.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  store float* %f3, float** %f3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f3.addr, metadata !4750, metadata !DIExpression()), !dbg !4751
  store i32 %c1, i32* %c1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c1.addr, metadata !4752, metadata !DIExpression()), !dbg !4753
  store i32 %c2, i32* %c2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c2.addr, metadata !4754, metadata !DIExpression()), !dbg !4755
  store i32 %c3, i32* %c3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c3.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.declare(metadata [32 x [3 x float*]]* %vlzp, metadata !4758, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata [3 x [2 x float]]* %lambda, metadata !4762, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata [400 x float]* %vez, metadata !4766, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.declare(metadata [40 x float*]* %trias, metadata !4771, metadata !DIExpression()), !dbg !4775
  %0 = load i32, i32* %c1.addr, align 4, !dbg !4776
  %1 = load i32, i32* %c2.addr, align 4, !dbg !4778
  %or = or i32 %0, %1, !dbg !4779
  %2 = load i32, i32* %c3.addr, align 4, !dbg !4780
  %or1 = or i32 %or, %2, !dbg !4781
  %tobool = icmp ne i32 %or1, 0, !dbg !4781
  br i1 %tobool, label %if.then, label %if.end251, !dbg !4782

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %c1.addr, align 4, !dbg !4783
  %4 = load i32, i32* %c2.addr, align 4, !dbg !4786
  %and = and i32 %3, %4, !dbg !4787
  %5 = load i32, i32* %c3.addr, align 4, !dbg !4788
  %and2 = and i32 %and, %5, !dbg !4789
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4789
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4790

if.then4:                                         ; preds = %if.then
  br label %return, !dbg !4791

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !4793, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4796, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4798, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.declare(metadata [3 x i32]* %clipflag, metadata !4800, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !4802, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata i32* %b3, metadata !4806, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !4808, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata i32* %clve, metadata !4810, metadata !DIExpression()), !dbg !4811
  store i32 3, i32* %clve, align 4, !dbg !4811
  call void @llvm.dbg.declare(metadata i32* %clvlo, metadata !4812, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.declare(metadata i32* %clvl, metadata !4814, metadata !DIExpression()), !dbg !4815
  store i32 1, i32* %clvl, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4816, metadata !DIExpression()), !dbg !4817
  %6 = load float*, float** %f1.addr, align 8, !dbg !4818
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !4818
  %7 = load float, float* %arrayidx, align 4, !dbg !4818
  %arrayidx5 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !4819
  store float %7, float* %arrayidx5, align 16, !dbg !4820
  %8 = load float*, float** %f1.addr, align 8, !dbg !4821
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 1, !dbg !4821
  %9 = load float, float* %arrayidx6, align 4, !dbg !4821
  %arrayidx7 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 1, !dbg !4822
  store float %9, float* %arrayidx7, align 4, !dbg !4823
  %10 = load float*, float** %f1.addr, align 8, !dbg !4824
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 2, !dbg !4824
  %11 = load float, float* %arrayidx8, align 4, !dbg !4824
  %arrayidx9 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 2, !dbg !4825
  store float %11, float* %arrayidx9, align 8, !dbg !4826
  %12 = load float*, float** %f1.addr, align 8, !dbg !4827
  %arrayidx10 = getelementptr inbounds float, float* %12, i64 3, !dbg !4827
  %13 = load float, float* %arrayidx10, align 4, !dbg !4827
  %arrayidx11 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 3, !dbg !4828
  store float %13, float* %arrayidx11, align 4, !dbg !4829
  %14 = load float*, float** %f2.addr, align 8, !dbg !4830
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 0, !dbg !4830
  %15 = load float, float* %arrayidx12, align 4, !dbg !4830
  %arrayidx13 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 4, !dbg !4831
  store float %15, float* %arrayidx13, align 16, !dbg !4832
  %16 = load float*, float** %f2.addr, align 8, !dbg !4833
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 1, !dbg !4833
  %17 = load float, float* %arrayidx14, align 4, !dbg !4833
  %arrayidx15 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 5, !dbg !4834
  store float %17, float* %arrayidx15, align 4, !dbg !4835
  %18 = load float*, float** %f2.addr, align 8, !dbg !4836
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 2, !dbg !4836
  %19 = load float, float* %arrayidx16, align 4, !dbg !4836
  %arrayidx17 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 6, !dbg !4837
  store float %19, float* %arrayidx17, align 8, !dbg !4838
  %20 = load float*, float** %f2.addr, align 8, !dbg !4839
  %arrayidx18 = getelementptr inbounds float, float* %20, i64 3, !dbg !4839
  %21 = load float, float* %arrayidx18, align 4, !dbg !4839
  %arrayidx19 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 7, !dbg !4840
  store float %21, float* %arrayidx19, align 4, !dbg !4841
  %22 = load float*, float** %f3.addr, align 8, !dbg !4842
  %arrayidx20 = getelementptr inbounds float, float* %22, i64 0, !dbg !4842
  %23 = load float, float* %arrayidx20, align 4, !dbg !4842
  %arrayidx21 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 8, !dbg !4843
  store float %23, float* %arrayidx21, align 16, !dbg !4844
  %24 = load float*, float** %f3.addr, align 8, !dbg !4845
  %arrayidx22 = getelementptr inbounds float, float* %24, i64 1, !dbg !4845
  %25 = load float, float* %arrayidx22, align 4, !dbg !4845
  %arrayidx23 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 9, !dbg !4846
  store float %25, float* %arrayidx23, align 4, !dbg !4847
  %26 = load float*, float** %f3.addr, align 8, !dbg !4848
  %arrayidx24 = getelementptr inbounds float, float* %26, i64 2, !dbg !4848
  %27 = load float, float* %arrayidx24, align 4, !dbg !4848
  %arrayidx25 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 10, !dbg !4849
  store float %27, float* %arrayidx25, align 8, !dbg !4850
  %28 = load float*, float** %f3.addr, align 8, !dbg !4851
  %arrayidx26 = getelementptr inbounds float, float* %28, i64 3, !dbg !4851
  %29 = load float, float* %arrayidx26, align 4, !dbg !4851
  %arrayidx27 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 11, !dbg !4852
  store float %29, float* %arrayidx27, align 4, !dbg !4853
  %arraydecay = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !4854
  %arrayidx28 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 0, !dbg !4855
  %arrayidx29 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx28, i64 0, i64 0, !dbg !4855
  store float* %arraydecay, float** %arrayidx29, align 16, !dbg !4856
  %arraydecay30 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !4857
  %add.ptr = getelementptr inbounds float, float* %arraydecay30, i64 4, !dbg !4858
  %arrayidx31 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 0, !dbg !4859
  %arrayidx32 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx31, i64 0, i64 1, !dbg !4859
  store float* %add.ptr, float** %arrayidx32, align 8, !dbg !4860
  %arraydecay33 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !4861
  %add.ptr34 = getelementptr inbounds float, float* %arraydecay33, i64 8, !dbg !4862
  %arrayidx35 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 0, !dbg !4863
  %arrayidx36 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx35, i64 0, i64 2, !dbg !4863
  store float* %add.ptr34, float** %arrayidx36, align 16, !dbg !4864
  %30 = load i32, i32* %c1.addr, align 4, !dbg !4865
  %and37 = and i32 %30, 48, !dbg !4866
  %31 = load i32, i32* %c2.addr, align 4, !dbg !4867
  %and38 = and i32 %31, 48, !dbg !4868
  %or39 = or i32 %and37, %and38, !dbg !4869
  %32 = load i32, i32* %c3.addr, align 4, !dbg !4870
  %and40 = and i32 %32, 48, !dbg !4871
  %or41 = or i32 %or39, %and40, !dbg !4872
  %arrayidx42 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 0, !dbg !4873
  store i32 %or41, i32* %arrayidx42, align 4, !dbg !4874
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 0, !dbg !4875
  %33 = load i32, i32* %arrayidx43, align 4, !dbg !4875
  %cmp = icmp eq i32 %33, 0, !dbg !4877
  br i1 %cmp, label %if.then44, label %if.else57, !dbg !4878

if.then44:                                        ; preds = %if.else
  %34 = load i32, i32* %c1.addr, align 4, !dbg !4879
  %and45 = and i32 %34, 3, !dbg !4881
  %35 = load i32, i32* %c2.addr, align 4, !dbg !4882
  %and46 = and i32 %35, 3, !dbg !4883
  %or47 = or i32 %and45, %and46, !dbg !4884
  %36 = load i32, i32* %c3.addr, align 4, !dbg !4885
  %and48 = and i32 %36, 3, !dbg !4886
  %or49 = or i32 %or47, %and48, !dbg !4887
  %arrayidx50 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 1, !dbg !4888
  store i32 %or49, i32* %arrayidx50, align 4, !dbg !4889
  %37 = load i32, i32* %c1.addr, align 4, !dbg !4890
  %and51 = and i32 %37, 12, !dbg !4891
  %38 = load i32, i32* %c2.addr, align 4, !dbg !4892
  %and52 = and i32 %38, 12, !dbg !4893
  %or53 = or i32 %and51, %and52, !dbg !4894
  %39 = load i32, i32* %c3.addr, align 4, !dbg !4895
  %and54 = and i32 %39, 12, !dbg !4896
  %or55 = or i32 %or53, %and54, !dbg !4897
  %arrayidx56 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 2, !dbg !4898
  store i32 %or55, i32* %arrayidx56, align 4, !dbg !4899
  br label %if.end, !dbg !4900

if.else57:                                        ; preds = %if.else
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 2, !dbg !4901
  store i32 0, i32* %arrayidx58, align 4, !dbg !4902
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 1, !dbg !4903
  store i32 0, i32* %arrayidx59, align 4, !dbg !4904
  br label %if.end

if.end:                                           ; preds = %if.else57, %if.then44
  store i32 0, i32* %b, align 4, !dbg !4905
  br label %for.cond, !dbg !4907

for.cond:                                         ; preds = %for.inc219, %if.end
  %40 = load i32, i32* %b, align 4, !dbg !4908
  %cmp60 = icmp slt i32 %40, 3, !dbg !4910
  br i1 %cmp60, label %for.body, label %for.end221, !dbg !4911

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %b, align 4, !dbg !4912
  %idxprom = sext i32 %41 to i64, !dbg !4915
  %arrayidx61 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 %idxprom, !dbg !4915
  %42 = load i32, i32* %arrayidx61, align 4, !dbg !4915
  %tobool62 = icmp ne i32 %42, 0, !dbg !4915
  br i1 %tobool62, label %if.then63, label %if.end218, !dbg !4916

if.then63:                                        ; preds = %for.body
  %43 = load i32, i32* %clvl, align 4, !dbg !4917
  store i32 %43, i32* %clvlo, align 4, !dbg !4919
  store i32 0, i32* %v, align 4, !dbg !4920
  br label %for.cond64, !dbg !4922

for.cond64:                                       ; preds = %for.inc215, %if.then63
  %44 = load i32, i32* %v, align 4, !dbg !4923
  %45 = load i32, i32* %clvlo, align 4, !dbg !4925
  %cmp65 = icmp slt i32 %44, %45, !dbg !4926
  br i1 %cmp65, label %for.body66, label %for.end217, !dbg !4927

for.body66:                                       ; preds = %for.cond64
  %46 = load i32, i32* %v, align 4, !dbg !4928
  %idxprom67 = sext i32 %46 to i64, !dbg !4931
  %arrayidx68 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom67, !dbg !4931
  %arrayidx69 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx68, i64 0, i64 0, !dbg !4931
  %47 = load float*, float** %arrayidx69, align 8, !dbg !4931
  %cmp70 = icmp ne float* %47, null, !dbg !4932
  br i1 %cmp70, label %if.then71, label %if.end214, !dbg !4933

if.then71:                                        ; preds = %for.body66
  store i32 0, i32* %b3, align 4, !dbg !4934
  store i32 0, i32* %b2, align 4, !dbg !4936
  %48 = load i32, i32* %b, align 4, !dbg !4937
  %cmp72 = icmp eq i32 %48, 0, !dbg !4939
  br i1 %cmp72, label %if.then73, label %if.else74, !dbg !4940

if.then73:                                        ; preds = %if.then71
  store i32 2, i32* %arg, align 4, !dbg !4941
  br label %if.end79, !dbg !4942

if.else74:                                        ; preds = %if.then71
  %49 = load i32, i32* %b, align 4, !dbg !4943
  %cmp75 = icmp eq i32 %49, 1, !dbg !4945
  br i1 %cmp75, label %if.then76, label %if.else77, !dbg !4946

if.then76:                                        ; preds = %if.else74
  store i32 0, i32* %arg, align 4, !dbg !4947
  br label %if.end78, !dbg !4948

if.else77:                                        ; preds = %if.else74
  store i32 1, i32* %arg, align 4, !dbg !4949
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then73
  %arrayidx80 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 0, !dbg !4950
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 0, !dbg !4950
  %50 = load i32, i32* %v, align 4, !dbg !4951
  %idxprom82 = sext i32 %50 to i64, !dbg !4952
  %arrayidx83 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom82, !dbg !4952
  %arrayidx84 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx83, i64 0, i64 0, !dbg !4952
  %51 = load float*, float** %arrayidx84, align 8, !dbg !4952
  %52 = load i32, i32* %v, align 4, !dbg !4953
  %idxprom85 = sext i32 %52 to i64, !dbg !4954
  %arrayidx86 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom85, !dbg !4954
  %arrayidx87 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx86, i64 0, i64 1, !dbg !4954
  %53 = load float*, float** %arrayidx87, align 8, !dbg !4954
  %54 = load i32, i32* %arg, align 4, !dbg !4955
  %55 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !4956
  %clipcrop = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %55, i32 0, i32 31, !dbg !4957
  %56 = load float, float* %clipcrop, align 4, !dbg !4957
  call void @clippyra(float* %arraydecay81, float* %51, float* %53, i32* %b2, i32* %b3, i32 %54, float %56), !dbg !4958
  %arrayidx88 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 1, !dbg !4959
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !4959
  %57 = load i32, i32* %v, align 4, !dbg !4960
  %idxprom90 = sext i32 %57 to i64, !dbg !4961
  %arrayidx91 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom90, !dbg !4961
  %arrayidx92 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx91, i64 0, i64 1, !dbg !4961
  %58 = load float*, float** %arrayidx92, align 8, !dbg !4961
  %59 = load i32, i32* %v, align 4, !dbg !4962
  %idxprom93 = sext i32 %59 to i64, !dbg !4963
  %arrayidx94 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom93, !dbg !4963
  %arrayidx95 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx94, i64 0, i64 2, !dbg !4963
  %60 = load float*, float** %arrayidx95, align 8, !dbg !4963
  %61 = load i32, i32* %arg, align 4, !dbg !4964
  %62 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !4965
  %clipcrop96 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %62, i32 0, i32 31, !dbg !4966
  %63 = load float, float* %clipcrop96, align 4, !dbg !4966
  call void @clippyra(float* %arraydecay89, float* %58, float* %60, i32* %b2, i32* %b3, i32 %61, float %63), !dbg !4967
  %arrayidx97 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 2, !dbg !4968
  %arraydecay98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !4968
  %64 = load i32, i32* %v, align 4, !dbg !4969
  %idxprom99 = sext i32 %64 to i64, !dbg !4970
  %arrayidx100 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom99, !dbg !4970
  %arrayidx101 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx100, i64 0, i64 2, !dbg !4970
  %65 = load float*, float** %arrayidx101, align 8, !dbg !4970
  %66 = load i32, i32* %v, align 4, !dbg !4971
  %idxprom102 = sext i32 %66 to i64, !dbg !4972
  %arrayidx103 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom102, !dbg !4972
  %arrayidx104 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx103, i64 0, i64 0, !dbg !4972
  %67 = load float*, float** %arrayidx104, align 8, !dbg !4972
  %68 = load i32, i32* %arg, align 4, !dbg !4973
  %69 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !4974
  %clipcrop105 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %69, i32 0, i32 31, !dbg !4975
  %70 = load float, float* %clipcrop105, align 4, !dbg !4975
  call void @clippyra(float* %arraydecay98, float* %65, float* %67, i32* %b2, i32* %b3, i32 %68, float %70), !dbg !4976
  %71 = load i32, i32* %b2, align 4, !dbg !4977
  %cmp106 = icmp eq i32 %71, 0, !dbg !4979
  br i1 %cmp106, label %land.lhs.true, label %if.else130, !dbg !4980

land.lhs.true:                                    ; preds = %if.end79
  %72 = load i32, i32* %b3, align 4, !dbg !4981
  %cmp107 = icmp eq i32 %72, 1, !dbg !4982
  br i1 %cmp107, label %if.then108, label %if.else130, !dbg !4983

if.then108:                                       ; preds = %land.lhs.true
  %73 = load i32, i32* %v, align 4, !dbg !4984
  %idxprom109 = sext i32 %73 to i64, !dbg !4986
  %arrayidx110 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom109, !dbg !4986
  %arrayidx111 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx110, i64 0, i64 0, !dbg !4986
  %74 = load float*, float** %arrayidx111, align 8, !dbg !4986
  %75 = load i32, i32* %clvl, align 4, !dbg !4987
  %idxprom112 = sext i32 %75 to i64, !dbg !4988
  %arrayidx113 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom112, !dbg !4988
  %arrayidx114 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx113, i64 0, i64 0, !dbg !4988
  store float* %74, float** %arrayidx114, align 8, !dbg !4989
  %76 = load i32, i32* %v, align 4, !dbg !4990
  %idxprom115 = sext i32 %76 to i64, !dbg !4991
  %arrayidx116 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom115, !dbg !4991
  %arrayidx117 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx116, i64 0, i64 1, !dbg !4991
  %77 = load float*, float** %arrayidx117, align 8, !dbg !4991
  %78 = load i32, i32* %clvl, align 4, !dbg !4992
  %idxprom118 = sext i32 %78 to i64, !dbg !4993
  %arrayidx119 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom118, !dbg !4993
  %arrayidx120 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx119, i64 0, i64 1, !dbg !4993
  store float* %77, float** %arrayidx120, align 8, !dbg !4994
  %79 = load i32, i32* %v, align 4, !dbg !4995
  %idxprom121 = sext i32 %79 to i64, !dbg !4996
  %arrayidx122 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom121, !dbg !4996
  %arrayidx123 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx122, i64 0, i64 2, !dbg !4996
  %80 = load float*, float** %arrayidx123, align 8, !dbg !4996
  %81 = load i32, i32* %clvl, align 4, !dbg !4997
  %idxprom124 = sext i32 %81 to i64, !dbg !4998
  %arrayidx125 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom124, !dbg !4998
  %arrayidx126 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx125, i64 0, i64 2, !dbg !4998
  store float* %80, float** %arrayidx126, align 8, !dbg !4999
  %82 = load i32, i32* %v, align 4, !dbg !5000
  %idxprom127 = sext i32 %82 to i64, !dbg !5001
  %arrayidx128 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom127, !dbg !5001
  %arrayidx129 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx128, i64 0, i64 0, !dbg !5001
  store float* null, float** %arrayidx129, align 8, !dbg !5002
  %83 = load i32, i32* %clvl, align 4, !dbg !5003
  %inc = add nsw i32 %83, 1, !dbg !5003
  store i32 %inc, i32* %clvl, align 4, !dbg !5003
  br label %if.end213, !dbg !5004

if.else130:                                       ; preds = %land.lhs.true, %if.end79
  %84 = load i32, i32* %b3, align 4, !dbg !5005
  %cmp131 = icmp eq i32 %84, 0, !dbg !5007
  br i1 %cmp131, label %if.then132, label %if.else136, !dbg !5008

if.then132:                                       ; preds = %if.else130
  %85 = load i32, i32* %v, align 4, !dbg !5009
  %idxprom133 = sext i32 %85 to i64, !dbg !5011
  %arrayidx134 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom133, !dbg !5011
  %arrayidx135 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx134, i64 0, i64 0, !dbg !5011
  store float* null, float** %arrayidx135, align 8, !dbg !5012
  br label %if.end212, !dbg !5013

if.else136:                                       ; preds = %if.else130
  store i32 0, i32* %b1, align 4, !dbg !5014
  %arraydecay137 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5016
  %arrayidx138 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 0, !dbg !5017
  %arraydecay139 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx138, i64 0, i64 0, !dbg !5017
  %arraydecay140 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 0, !dbg !5018
  %86 = load i32, i32* %v, align 4, !dbg !5019
  %idxprom141 = sext i32 %86 to i64, !dbg !5020
  %arrayidx142 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom141, !dbg !5020
  %arrayidx143 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx142, i64 0, i64 0, !dbg !5020
  %87 = load float*, float** %arrayidx143, align 8, !dbg !5020
  %88 = load i32, i32* %v, align 4, !dbg !5021
  %idxprom144 = sext i32 %88 to i64, !dbg !5022
  %arrayidx145 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom144, !dbg !5022
  %arrayidx146 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx145, i64 0, i64 1, !dbg !5022
  %89 = load float*, float** %arrayidx146, align 8, !dbg !5022
  call void @makevertpyra(float* %arraydecay137, float* %arraydecay139, float** %arraydecay140, float* %87, float* %89, i32* %b1, i32* %clve), !dbg !5023
  %arraydecay147 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5024
  %arrayidx148 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 1, !dbg !5025
  %arraydecay149 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx148, i64 0, i64 0, !dbg !5025
  %arraydecay150 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 0, !dbg !5026
  %90 = load i32, i32* %v, align 4, !dbg !5027
  %idxprom151 = sext i32 %90 to i64, !dbg !5028
  %arrayidx152 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom151, !dbg !5028
  %arrayidx153 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx152, i64 0, i64 1, !dbg !5028
  %91 = load float*, float** %arrayidx153, align 8, !dbg !5028
  %92 = load i32, i32* %v, align 4, !dbg !5029
  %idxprom154 = sext i32 %92 to i64, !dbg !5030
  %arrayidx155 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom154, !dbg !5030
  %arrayidx156 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx155, i64 0, i64 2, !dbg !5030
  %93 = load float*, float** %arrayidx156, align 8, !dbg !5030
  call void @makevertpyra(float* %arraydecay147, float* %arraydecay149, float** %arraydecay150, float* %91, float* %93, i32* %b1, i32* %clve), !dbg !5031
  %arraydecay157 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5032
  %arrayidx158 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %lambda, i64 0, i64 2, !dbg !5033
  %arraydecay159 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx158, i64 0, i64 0, !dbg !5033
  %arraydecay160 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 0, !dbg !5034
  %94 = load i32, i32* %v, align 4, !dbg !5035
  %idxprom161 = sext i32 %94 to i64, !dbg !5036
  %arrayidx162 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom161, !dbg !5036
  %arrayidx163 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx162, i64 0, i64 2, !dbg !5036
  %95 = load float*, float** %arrayidx163, align 8, !dbg !5036
  %96 = load i32, i32* %v, align 4, !dbg !5037
  %idxprom164 = sext i32 %96 to i64, !dbg !5038
  %arrayidx165 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom164, !dbg !5038
  %arrayidx166 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx165, i64 0, i64 0, !dbg !5038
  %97 = load float*, float** %arrayidx166, align 8, !dbg !5038
  call void @makevertpyra(float* %arraydecay157, float* %arraydecay159, float** %arraydecay160, float* %95, float* %97, i32* %b1, i32* %clve), !dbg !5039
  %98 = load i32, i32* %b, align 4, !dbg !5040
  %cmp167 = icmp eq i32 %98, 0, !dbg !5042
  br i1 %cmp167, label %if.then168, label %if.end183, !dbg !5043

if.then168:                                       ; preds = %if.else136
  %arrayidx169 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 2, !dbg !5044
  store i32 0, i32* %arrayidx169, align 4, !dbg !5046
  %arrayidx170 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 1, !dbg !5047
  store i32 0, i32* %arrayidx170, align 4, !dbg !5048
  %arraydecay171 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5049
  store float* %arraydecay171, float** %f1.addr, align 8, !dbg !5050
  store i32 0, i32* %b3, align 4, !dbg !5051
  br label %for.cond172, !dbg !5053

for.cond172:                                      ; preds = %for.inc, %if.then168
  %99 = load i32, i32* %b3, align 4, !dbg !5054
  %100 = load i32, i32* %clve, align 4, !dbg !5056
  %cmp173 = icmp slt i32 %99, %100, !dbg !5057
  br i1 %cmp173, label %for.body174, label %for.end, !dbg !5058

for.body174:                                      ; preds = %for.cond172
  %101 = load float*, float** %f1.addr, align 8, !dbg !5059
  %call = call i32 @testclip(float* %101), !dbg !5061
  store i32 %call, i32* %c4, align 4, !dbg !5062
  %102 = load i32, i32* %c4, align 4, !dbg !5063
  %and175 = and i32 %102, 3, !dbg !5064
  %arrayidx176 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 1, !dbg !5065
  %103 = load i32, i32* %arrayidx176, align 4, !dbg !5066
  %or177 = or i32 %103, %and175, !dbg !5066
  store i32 %or177, i32* %arrayidx176, align 4, !dbg !5066
  %104 = load i32, i32* %c4, align 4, !dbg !5067
  %and178 = and i32 %104, 12, !dbg !5068
  %arrayidx179 = getelementptr inbounds [3 x i32], [3 x i32]* %clipflag, i64 0, i64 2, !dbg !5069
  %105 = load i32, i32* %arrayidx179, align 4, !dbg !5070
  %or180 = or i32 %105, %and178, !dbg !5070
  store i32 %or180, i32* %arrayidx179, align 4, !dbg !5070
  %106 = load float*, float** %f1.addr, align 8, !dbg !5071
  %add.ptr181 = getelementptr inbounds float, float* %106, i64 4, !dbg !5071
  store float* %add.ptr181, float** %f1.addr, align 8, !dbg !5071
  br label %for.inc, !dbg !5072

for.inc:                                          ; preds = %for.body174
  %107 = load i32, i32* %b3, align 4, !dbg !5073
  %inc182 = add nsw i32 %107, 1, !dbg !5073
  store i32 %inc182, i32* %b3, align 4, !dbg !5073
  br label %for.cond172, !dbg !5074, !llvm.loop !5075

for.end:                                          ; preds = %for.cond172
  br label %if.end183, !dbg !5077

if.end183:                                        ; preds = %for.end, %if.else136
  %108 = load i32, i32* %v, align 4, !dbg !5078
  %idxprom184 = sext i32 %108 to i64, !dbg !5079
  %arrayidx185 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom184, !dbg !5079
  %arrayidx186 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx185, i64 0, i64 0, !dbg !5079
  store float* null, float** %arrayidx186, align 8, !dbg !5080
  %109 = load i32, i32* %b1, align 4, !dbg !5081
  %cmp187 = icmp sgt i32 %109, 2, !dbg !5083
  br i1 %cmp187, label %if.then188, label %if.end211, !dbg !5084

if.then188:                                       ; preds = %if.end183
  store i32 3, i32* %b3, align 4, !dbg !5085
  br label %for.cond189, !dbg !5088

for.cond189:                                      ; preds = %for.inc208, %if.then188
  %110 = load i32, i32* %b3, align 4, !dbg !5089
  %111 = load i32, i32* %b1, align 4, !dbg !5091
  %cmp190 = icmp sle i32 %110, %111, !dbg !5092
  br i1 %cmp190, label %for.body191, label %for.end210, !dbg !5093

for.body191:                                      ; preds = %for.cond189
  %arrayidx192 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 0, !dbg !5094
  %112 = load float*, float** %arrayidx192, align 16, !dbg !5094
  %113 = load i32, i32* %clvl, align 4, !dbg !5096
  %idxprom193 = sext i32 %113 to i64, !dbg !5097
  %arrayidx194 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom193, !dbg !5097
  %arrayidx195 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx194, i64 0, i64 0, !dbg !5097
  store float* %112, float** %arrayidx195, align 8, !dbg !5098
  %114 = load i32, i32* %b3, align 4, !dbg !5099
  %sub = sub nsw i32 %114, 2, !dbg !5100
  %idxprom196 = sext i32 %sub to i64, !dbg !5101
  %arrayidx197 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 %idxprom196, !dbg !5101
  %115 = load float*, float** %arrayidx197, align 8, !dbg !5101
  %116 = load i32, i32* %clvl, align 4, !dbg !5102
  %idxprom198 = sext i32 %116 to i64, !dbg !5103
  %arrayidx199 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom198, !dbg !5103
  %arrayidx200 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx199, i64 0, i64 1, !dbg !5103
  store float* %115, float** %arrayidx200, align 8, !dbg !5104
  %117 = load i32, i32* %b3, align 4, !dbg !5105
  %sub201 = sub nsw i32 %117, 1, !dbg !5106
  %idxprom202 = sext i32 %sub201 to i64, !dbg !5107
  %arrayidx203 = getelementptr inbounds [40 x float*], [40 x float*]* %trias, i64 0, i64 %idxprom202, !dbg !5107
  %118 = load float*, float** %arrayidx203, align 8, !dbg !5107
  %119 = load i32, i32* %clvl, align 4, !dbg !5108
  %idxprom204 = sext i32 %119 to i64, !dbg !5109
  %arrayidx205 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom204, !dbg !5109
  %arrayidx206 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx205, i64 0, i64 2, !dbg !5109
  store float* %118, float** %arrayidx206, align 8, !dbg !5110
  %120 = load i32, i32* %clvl, align 4, !dbg !5111
  %inc207 = add nsw i32 %120, 1, !dbg !5111
  store i32 %inc207, i32* %clvl, align 4, !dbg !5111
  br label %for.inc208, !dbg !5112

for.inc208:                                       ; preds = %for.body191
  %121 = load i32, i32* %b3, align 4, !dbg !5113
  %inc209 = add nsw i32 %121, 1, !dbg !5113
  store i32 %inc209, i32* %b3, align 4, !dbg !5113
  br label %for.cond189, !dbg !5114, !llvm.loop !5115

for.end210:                                       ; preds = %for.cond189
  br label %if.end211, !dbg !5117

if.end211:                                        ; preds = %for.end210, %if.end183
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then132
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then108
  br label %if.end214, !dbg !5118

if.end214:                                        ; preds = %if.end213, %for.body66
  br label %for.inc215, !dbg !5119

for.inc215:                                       ; preds = %if.end214
  %122 = load i32, i32* %v, align 4, !dbg !5120
  %inc216 = add nsw i32 %122, 1, !dbg !5120
  store i32 %inc216, i32* %v, align 4, !dbg !5120
  br label %for.cond64, !dbg !5121, !llvm.loop !5122

for.end217:                                       ; preds = %for.cond64
  br label %if.end218, !dbg !5124

if.end218:                                        ; preds = %for.end217, %for.body
  br label %for.inc219, !dbg !5125

for.inc219:                                       ; preds = %if.end218
  %123 = load i32, i32* %b, align 4, !dbg !5126
  %inc220 = add nsw i32 %123, 1, !dbg !5126
  store i32 %inc220, i32* %b, align 4, !dbg !5126
  br label %for.cond, !dbg !5127, !llvm.loop !5128

for.end221:                                       ; preds = %for.cond
  %arraydecay222 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5130
  store float* %arraydecay222, float** %fp, align 8, !dbg !5131
  store i32 0, i32* %b, align 4, !dbg !5132
  br label %for.cond223, !dbg !5134

for.cond223:                                      ; preds = %for.inc227, %for.end221
  %124 = load i32, i32* %b, align 4, !dbg !5135
  %125 = load i32, i32* %clve, align 4, !dbg !5137
  %cmp224 = icmp slt i32 %124, %125, !dbg !5138
  br i1 %cmp224, label %for.body225, label %for.end229, !dbg !5139

for.body225:                                      ; preds = %for.cond223
  %126 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5140
  %127 = load float*, float** %fp, align 8, !dbg !5142
  %128 = load float*, float** %fp, align 8, !dbg !5143
  call void @hoco_to_zco(%struct.ZSpan* %126, float* %127, float* %128), !dbg !5144
  %129 = load float*, float** %fp, align 8, !dbg !5145
  %add.ptr226 = getelementptr inbounds float, float* %129, i64 4, !dbg !5145
  store float* %add.ptr226, float** %fp, align 8, !dbg !5145
  br label %for.inc227, !dbg !5146

for.inc227:                                       ; preds = %for.body225
  %130 = load i32, i32* %b, align 4, !dbg !5147
  %inc228 = add nsw i32 %130, 1, !dbg !5147
  store i32 %inc228, i32* %b, align 4, !dbg !5147
  br label %for.cond223, !dbg !5148, !llvm.loop !5149

for.end229:                                       ; preds = %for.cond223
  store i32 1, i32* %b, align 4, !dbg !5151
  br label %for.cond230, !dbg !5153

for.cond230:                                      ; preds = %for.inc248, %for.end229
  %131 = load i32, i32* %b, align 4, !dbg !5154
  %132 = load i32, i32* %clvl, align 4, !dbg !5156
  %cmp231 = icmp slt i32 %131, %132, !dbg !5157
  br i1 %cmp231, label %for.body232, label %for.end250, !dbg !5158

for.body232:                                      ; preds = %for.cond230
  %133 = load i32, i32* %b, align 4, !dbg !5159
  %idxprom233 = sext i32 %133 to i64, !dbg !5162
  %arrayidx234 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom233, !dbg !5162
  %arrayidx235 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx234, i64 0, i64 0, !dbg !5162
  %134 = load float*, float** %arrayidx235, align 8, !dbg !5162
  %tobool236 = icmp ne float* %134, null, !dbg !5162
  br i1 %tobool236, label %if.then237, label %if.end247, !dbg !5163

if.then237:                                       ; preds = %for.body232
  %135 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5164
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %135, i32 0, i32 34, !dbg !5166
  %136 = load void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !5166
  %137 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5167
  %138 = load i32, i32* %obi.addr, align 4, !dbg !5168
  %139 = load i32, i32* %zvlnr.addr, align 4, !dbg !5169
  %140 = load i32, i32* %b, align 4, !dbg !5170
  %idxprom238 = sext i32 %140 to i64, !dbg !5171
  %arrayidx239 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom238, !dbg !5171
  %arrayidx240 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx239, i64 0, i64 0, !dbg !5171
  %141 = load float*, float** %arrayidx240, align 8, !dbg !5171
  %142 = load i32, i32* %b, align 4, !dbg !5172
  %idxprom241 = sext i32 %142 to i64, !dbg !5173
  %arrayidx242 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom241, !dbg !5173
  %arrayidx243 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx242, i64 0, i64 1, !dbg !5173
  %143 = load float*, float** %arrayidx243, align 8, !dbg !5173
  %144 = load i32, i32* %b, align 4, !dbg !5174
  %idxprom244 = sext i32 %144 to i64, !dbg !5175
  %arrayidx245 = getelementptr inbounds [32 x [3 x float*]], [32 x [3 x float*]]* %vlzp, i64 0, i64 %idxprom244, !dbg !5175
  %arrayidx246 = getelementptr inbounds [3 x float*], [3 x float*]* %arrayidx245, i64 0, i64 2, !dbg !5175
  %145 = load float*, float** %arrayidx246, align 8, !dbg !5175
  call void %136(%struct.ZSpan* %137, i32 %138, i32 %139, float* %141, float* %143, float* %145, float* null), !dbg !5164
  br label %if.end247, !dbg !5176

if.end247:                                        ; preds = %if.then237, %for.body232
  br label %for.inc248, !dbg !5177

for.inc248:                                       ; preds = %if.end247
  %146 = load i32, i32* %b, align 4, !dbg !5178
  %inc249 = add nsw i32 %146, 1, !dbg !5178
  store i32 %inc249, i32* %b, align 4, !dbg !5178
  br label %for.cond230, !dbg !5179, !llvm.loop !5180

for.end250:                                       ; preds = %for.cond230
  br label %return, !dbg !5182

if.end251:                                        ; preds = %entry
  %147 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5183
  %arraydecay252 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5184
  %148 = load float*, float** %f1.addr, align 8, !dbg !5185
  call void @hoco_to_zco(%struct.ZSpan* %147, float* %arraydecay252, float* %148), !dbg !5186
  %149 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5187
  %arraydecay253 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5188
  %add.ptr254 = getelementptr inbounds float, float* %arraydecay253, i64 4, !dbg !5189
  %150 = load float*, float** %f2.addr, align 8, !dbg !5190
  call void @hoco_to_zco(%struct.ZSpan* %149, float* %add.ptr254, float* %150), !dbg !5191
  %151 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5192
  %arraydecay255 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5193
  %add.ptr256 = getelementptr inbounds float, float* %arraydecay255, i64 8, !dbg !5194
  %152 = load float*, float** %f3.addr, align 8, !dbg !5195
  call void @hoco_to_zco(%struct.ZSpan* %151, float* %add.ptr256, float* %152), !dbg !5196
  %153 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5197
  %zbuffunc257 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %153, i32 0, i32 34, !dbg !5198
  %154 = load void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc257, align 8, !dbg !5198
  %155 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5199
  %156 = load i32, i32* %obi.addr, align 4, !dbg !5200
  %157 = load i32, i32* %zvlnr.addr, align 4, !dbg !5201
  %arraydecay258 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5202
  %arraydecay259 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5203
  %add.ptr260 = getelementptr inbounds float, float* %arraydecay259, i64 4, !dbg !5204
  %arraydecay261 = getelementptr inbounds [400 x float], [400 x float]* %vez, i64 0, i64 0, !dbg !5205
  %add.ptr262 = getelementptr inbounds float, float* %arraydecay261, i64 8, !dbg !5206
  call void %154(%struct.ZSpan* %155, i32 %156, i32 %157, float* %arraydecay258, float* %add.ptr260, float* %add.ptr262, float* null), !dbg !5197
  br label %return, !dbg !5207

return:                                           ; preds = %if.end251, %for.end250, %if.then4
  ret void, !dbg !5207
}

; Function Attrs: noinline nounwind uwtable
define internal void @clippyra(float* %lambda, float* %v1, float* %v2, i32* %b2, i32* %b3, i32 %a, float %clipcrop) #0 !dbg !5208 {
entry:
  %lambda.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %b2.addr = alloca i32*, align 8
  %b3.addr = alloca i32*, align 8
  %a.addr = alloca i32, align 4
  %clipcrop.addr = alloca float, align 4
  %da = alloca float, align 4
  %dw = alloca float, align 4
  %u1 = alloca float, align 4
  %u2 = alloca float, align 4
  %v13 = alloca float, align 4
  store float* %lambda, float** %lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lambda.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5215, metadata !DIExpression()), !dbg !5216
  store i32* %b2, i32** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %b2.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  store i32* %b3, i32** %b3.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %b3.addr, metadata !5219, metadata !DIExpression()), !dbg !5220
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5221, metadata !DIExpression()), !dbg !5222
  store float %clipcrop, float* %clipcrop.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipcrop.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.declare(metadata float* %da, metadata !5225, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.declare(metadata float* %dw, metadata !5227, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.declare(metadata float* %u1, metadata !5229, metadata !DIExpression()), !dbg !5230
  store float 0.000000e+00, float* %u1, align 4, !dbg !5230
  call void @llvm.dbg.declare(metadata float* %u2, metadata !5231, metadata !DIExpression()), !dbg !5232
  store float 1.000000e+00, float* %u2, align 4, !dbg !5232
  call void @llvm.dbg.declare(metadata float* %v13, metadata !5233, metadata !DIExpression()), !dbg !5234
  %0 = load float*, float** %lambda.addr, align 8, !dbg !5235
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5235
  store float -1.000000e+00, float* %arrayidx, align 4, !dbg !5236
  %1 = load float*, float** %lambda.addr, align 8, !dbg !5237
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5237
  store float -1.000000e+00, float* %arrayidx1, align 4, !dbg !5238
  %2 = load float*, float** %v2.addr, align 8, !dbg !5239
  %3 = load i32, i32* %a.addr, align 4, !dbg !5240
  %idxprom = sext i32 %3 to i64, !dbg !5239
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !5239
  %4 = load float, float* %arrayidx2, align 4, !dbg !5239
  %5 = load float*, float** %v1.addr, align 8, !dbg !5241
  %6 = load i32, i32* %a.addr, align 4, !dbg !5242
  %idxprom3 = sext i32 %6 to i64, !dbg !5241
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 %idxprom3, !dbg !5241
  %7 = load float, float* %arrayidx4, align 4, !dbg !5241
  %sub = fsub float %4, %7, !dbg !5243
  store float %sub, float* %da, align 4, !dbg !5244
  %8 = load i32, i32* %a.addr, align 4, !dbg !5245
  %cmp = icmp eq i32 %8, 2, !dbg !5247
  br i1 %cmp, label %if.then, label %if.else, !dbg !5248

if.then:                                          ; preds = %entry
  %9 = load float*, float** %v2.addr, align 8, !dbg !5249
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 3, !dbg !5249
  %10 = load float, float* %arrayidx5, align 4, !dbg !5249
  %11 = load float*, float** %v1.addr, align 8, !dbg !5251
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 3, !dbg !5251
  %12 = load float, float* %arrayidx6, align 4, !dbg !5251
  %sub7 = fsub float %10, %12, !dbg !5252
  store float %sub7, float* %dw, align 4, !dbg !5253
  %13 = load float*, float** %v1.addr, align 8, !dbg !5254
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 3, !dbg !5254
  %14 = load float, float* %arrayidx8, align 4, !dbg !5254
  store float %14, float* %v13, align 4, !dbg !5255
  br label %if.end, !dbg !5256

if.else:                                          ; preds = %entry
  %15 = load float, float* %clipcrop.addr, align 4, !dbg !5257
  %16 = load float*, float** %v2.addr, align 8, !dbg !5259
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 3, !dbg !5259
  %17 = load float, float* %arrayidx9, align 4, !dbg !5259
  %18 = load float*, float** %v1.addr, align 8, !dbg !5260
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 3, !dbg !5260
  %19 = load float, float* %arrayidx10, align 4, !dbg !5260
  %sub11 = fsub float %17, %19, !dbg !5261
  %mul = fmul float %15, %sub11, !dbg !5262
  store float %mul, float* %dw, align 4, !dbg !5263
  %20 = load float, float* %clipcrop.addr, align 4, !dbg !5264
  %21 = load float*, float** %v1.addr, align 8, !dbg !5265
  %arrayidx12 = getelementptr inbounds float, float* %21, i64 3, !dbg !5265
  %22 = load float, float* %arrayidx12, align 4, !dbg !5265
  %mul13 = fmul float %20, %22, !dbg !5266
  store float %mul13, float* %v13, align 4, !dbg !5267
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load float, float* %da, align 4, !dbg !5268
  %fneg = fneg float %23, !dbg !5270
  %24 = load float, float* %dw, align 4, !dbg !5271
  %fneg14 = fneg float %24, !dbg !5272
  %25 = load float, float* %v13, align 4, !dbg !5273
  %26 = load float*, float** %v1.addr, align 8, !dbg !5274
  %27 = load i32, i32* %a.addr, align 4, !dbg !5275
  %idxprom15 = sext i32 %27 to i64, !dbg !5274
  %arrayidx16 = getelementptr inbounds float, float* %26, i64 %idxprom15, !dbg !5274
  %28 = load float, float* %arrayidx16, align 4, !dbg !5274
  %call = call signext i16 @cliptestf(float %fneg, float %fneg14, float %25, float %28, float* %u1, float* %u2), !dbg !5276
  %tobool = icmp ne i16 %call, 0, !dbg !5276
  br i1 %tobool, label %if.then17, label %if.end38, !dbg !5277

if.then17:                                        ; preds = %if.end
  %29 = load float, float* %da, align 4, !dbg !5278
  %30 = load float, float* %dw, align 4, !dbg !5281
  %fneg18 = fneg float %30, !dbg !5282
  %31 = load float, float* %v13, align 4, !dbg !5283
  %32 = load float*, float** %v1.addr, align 8, !dbg !5284
  %33 = load i32, i32* %a.addr, align 4, !dbg !5285
  %idxprom19 = sext i32 %33 to i64, !dbg !5284
  %arrayidx20 = getelementptr inbounds float, float* %32, i64 %idxprom19, !dbg !5284
  %34 = load float, float* %arrayidx20, align 4, !dbg !5284
  %fneg21 = fneg float %34, !dbg !5286
  %call22 = call signext i16 @cliptestf(float %29, float %fneg18, float %31, float %fneg21, float* %u1, float* %u2), !dbg !5287
  %tobool23 = icmp ne i16 %call22, 0, !dbg !5287
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !5288

if.then24:                                        ; preds = %if.then17
  %35 = load i32*, i32** %b3.addr, align 8, !dbg !5289
  store i32 1, i32* %35, align 4, !dbg !5291
  %36 = load float, float* %u2, align 4, !dbg !5292
  %cmp25 = fcmp olt float %36, 1.000000e+00, !dbg !5294
  br i1 %cmp25, label %if.then26, label %if.else28, !dbg !5295

if.then26:                                        ; preds = %if.then24
  %37 = load float, float* %u2, align 4, !dbg !5296
  %38 = load float*, float** %lambda.addr, align 8, !dbg !5298
  %arrayidx27 = getelementptr inbounds float, float* %38, i64 1, !dbg !5298
  store float %37, float* %arrayidx27, align 4, !dbg !5299
  %39 = load i32*, i32** %b2.addr, align 8, !dbg !5300
  store i32 1, i32* %39, align 4, !dbg !5301
  br label %if.end30, !dbg !5302

if.else28:                                        ; preds = %if.then24
  %40 = load float*, float** %lambda.addr, align 8, !dbg !5303
  %arrayidx29 = getelementptr inbounds float, float* %40, i64 1, !dbg !5303
  store float 1.000000e+00, float* %arrayidx29, align 4, !dbg !5304
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then26
  %41 = load float, float* %u1, align 4, !dbg !5305
  %cmp31 = fcmp ogt float %41, 0.000000e+00, !dbg !5307
  br i1 %cmp31, label %if.then32, label %if.else34, !dbg !5308

if.then32:                                        ; preds = %if.end30
  %42 = load float, float* %u1, align 4, !dbg !5309
  %43 = load float*, float** %lambda.addr, align 8, !dbg !5311
  %arrayidx33 = getelementptr inbounds float, float* %43, i64 0, !dbg !5311
  store float %42, float* %arrayidx33, align 4, !dbg !5312
  %44 = load i32*, i32** %b2.addr, align 8, !dbg !5313
  store i32 1, i32* %44, align 4, !dbg !5314
  br label %if.end36, !dbg !5315

if.else34:                                        ; preds = %if.end30
  %45 = load float*, float** %lambda.addr, align 8, !dbg !5316
  %arrayidx35 = getelementptr inbounds float, float* %45, i64 0, !dbg !5316
  store float 0.000000e+00, float* %arrayidx35, align 4, !dbg !5318
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then32
  br label %if.end37, !dbg !5319

if.end37:                                         ; preds = %if.end36, %if.then17
  br label %if.end38, !dbg !5320

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !5321
}

; Function Attrs: noinline nounwind uwtable
define internal void @makevertpyra(float* %vez, float* %lambda, float** %trias, float* %v1, float* %v2, i32* %b1, i32* %clve) #0 !dbg !5322 {
entry:
  %vez.addr = alloca float*, align 8
  %lambda.addr = alloca float*, align 8
  %trias.addr = alloca float**, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %b1.addr = alloca i32*, align 8
  %clve.addr = alloca i32*, align 8
  %l1 = alloca float, align 4
  %l2 = alloca float, align 4
  %adr = alloca float*, align 8
  store float* %vez, float** %vez.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vez.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  store float* %lambda, float** %lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lambda.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  store float** %trias, float*** %trias.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %trias.addr, metadata !5330, metadata !DIExpression()), !dbg !5331
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !5332, metadata !DIExpression()), !dbg !5333
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !5334, metadata !DIExpression()), !dbg !5335
  store i32* %b1, i32** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %b1.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store i32* %clve, i32** %clve.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %clve.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata float* %l1, metadata !5340, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.declare(metadata float* %l2, metadata !5342, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.declare(metadata float** %adr, metadata !5344, metadata !DIExpression()), !dbg !5345
  %0 = load float*, float** %lambda.addr, align 8, !dbg !5346
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5346
  %1 = load float, float* %arrayidx, align 4, !dbg !5346
  store float %1, float* %l1, align 4, !dbg !5347
  %2 = load float*, float** %lambda.addr, align 8, !dbg !5348
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !5348
  %3 = load float, float* %arrayidx1, align 4, !dbg !5348
  store float %3, float* %l2, align 4, !dbg !5349
  %4 = load float, float* %l1, align 4, !dbg !5350
  %cmp = fcmp une float %4, -1.000000e+00, !dbg !5352
  br i1 %cmp, label %if.then, label %if.end34, !dbg !5353

if.then:                                          ; preds = %entry
  %5 = load float, float* %l1, align 4, !dbg !5354
  %cmp2 = fcmp une float %5, 0.000000e+00, !dbg !5357
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !5358

if.then3:                                         ; preds = %if.then
  %6 = load float*, float** %vez.addr, align 8, !dbg !5359
  %7 = load i32*, i32** %clve.addr, align 8, !dbg !5361
  %8 = load i32, i32* %7, align 4, !dbg !5362
  %mul = mul nsw i32 4, %8, !dbg !5363
  %idx.ext = sext i32 %mul to i64, !dbg !5364
  %add.ptr = getelementptr inbounds float, float* %6, i64 %idx.ext, !dbg !5364
  store float* %add.ptr, float** %adr, align 8, !dbg !5365
  %9 = load float*, float** %adr, align 8, !dbg !5366
  %10 = load float**, float*** %trias.addr, align 8, !dbg !5367
  %11 = load i32*, i32** %b1.addr, align 8, !dbg !5368
  %12 = load i32, i32* %11, align 4, !dbg !5369
  %idxprom = sext i32 %12 to i64, !dbg !5367
  %arrayidx4 = getelementptr inbounds float*, float** %10, i64 %idxprom, !dbg !5367
  store float* %9, float** %arrayidx4, align 8, !dbg !5370
  %13 = load i32*, i32** %clve.addr, align 8, !dbg !5371
  %14 = load i32, i32* %13, align 4, !dbg !5372
  %inc = add nsw i32 %14, 1, !dbg !5372
  store i32 %inc, i32* %13, align 4, !dbg !5372
  %15 = load float*, float** %v1.addr, align 8, !dbg !5373
  %arrayidx5 = getelementptr inbounds float, float* %15, i64 0, !dbg !5373
  %16 = load float, float* %arrayidx5, align 4, !dbg !5373
  %17 = load float, float* %l1, align 4, !dbg !5374
  %18 = load float*, float** %v2.addr, align 8, !dbg !5375
  %arrayidx6 = getelementptr inbounds float, float* %18, i64 0, !dbg !5375
  %19 = load float, float* %arrayidx6, align 4, !dbg !5375
  %20 = load float*, float** %v1.addr, align 8, !dbg !5376
  %arrayidx7 = getelementptr inbounds float, float* %20, i64 0, !dbg !5376
  %21 = load float, float* %arrayidx7, align 4, !dbg !5376
  %sub = fsub float %19, %21, !dbg !5377
  %mul8 = fmul float %17, %sub, !dbg !5378
  %add = fadd float %16, %mul8, !dbg !5379
  %22 = load float*, float** %adr, align 8, !dbg !5380
  %arrayidx9 = getelementptr inbounds float, float* %22, i64 0, !dbg !5380
  store float %add, float* %arrayidx9, align 4, !dbg !5381
  %23 = load float*, float** %v1.addr, align 8, !dbg !5382
  %arrayidx10 = getelementptr inbounds float, float* %23, i64 1, !dbg !5382
  %24 = load float, float* %arrayidx10, align 4, !dbg !5382
  %25 = load float, float* %l1, align 4, !dbg !5383
  %26 = load float*, float** %v2.addr, align 8, !dbg !5384
  %arrayidx11 = getelementptr inbounds float, float* %26, i64 1, !dbg !5384
  %27 = load float, float* %arrayidx11, align 4, !dbg !5384
  %28 = load float*, float** %v1.addr, align 8, !dbg !5385
  %arrayidx12 = getelementptr inbounds float, float* %28, i64 1, !dbg !5385
  %29 = load float, float* %arrayidx12, align 4, !dbg !5385
  %sub13 = fsub float %27, %29, !dbg !5386
  %mul14 = fmul float %25, %sub13, !dbg !5387
  %add15 = fadd float %24, %mul14, !dbg !5388
  %30 = load float*, float** %adr, align 8, !dbg !5389
  %arrayidx16 = getelementptr inbounds float, float* %30, i64 1, !dbg !5389
  store float %add15, float* %arrayidx16, align 4, !dbg !5390
  %31 = load float*, float** %v1.addr, align 8, !dbg !5391
  %arrayidx17 = getelementptr inbounds float, float* %31, i64 2, !dbg !5391
  %32 = load float, float* %arrayidx17, align 4, !dbg !5391
  %33 = load float, float* %l1, align 4, !dbg !5392
  %34 = load float*, float** %v2.addr, align 8, !dbg !5393
  %arrayidx18 = getelementptr inbounds float, float* %34, i64 2, !dbg !5393
  %35 = load float, float* %arrayidx18, align 4, !dbg !5393
  %36 = load float*, float** %v1.addr, align 8, !dbg !5394
  %arrayidx19 = getelementptr inbounds float, float* %36, i64 2, !dbg !5394
  %37 = load float, float* %arrayidx19, align 4, !dbg !5394
  %sub20 = fsub float %35, %37, !dbg !5395
  %mul21 = fmul float %33, %sub20, !dbg !5396
  %add22 = fadd float %32, %mul21, !dbg !5397
  %38 = load float*, float** %adr, align 8, !dbg !5398
  %arrayidx23 = getelementptr inbounds float, float* %38, i64 2, !dbg !5398
  store float %add22, float* %arrayidx23, align 4, !dbg !5399
  %39 = load float*, float** %v1.addr, align 8, !dbg !5400
  %arrayidx24 = getelementptr inbounds float, float* %39, i64 3, !dbg !5400
  %40 = load float, float* %arrayidx24, align 4, !dbg !5400
  %41 = load float, float* %l1, align 4, !dbg !5401
  %42 = load float*, float** %v2.addr, align 8, !dbg !5402
  %arrayidx25 = getelementptr inbounds float, float* %42, i64 3, !dbg !5402
  %43 = load float, float* %arrayidx25, align 4, !dbg !5402
  %44 = load float*, float** %v1.addr, align 8, !dbg !5403
  %arrayidx26 = getelementptr inbounds float, float* %44, i64 3, !dbg !5403
  %45 = load float, float* %arrayidx26, align 4, !dbg !5403
  %sub27 = fsub float %43, %45, !dbg !5404
  %mul28 = fmul float %41, %sub27, !dbg !5405
  %add29 = fadd float %40, %mul28, !dbg !5406
  %46 = load float*, float** %adr, align 8, !dbg !5407
  %arrayidx30 = getelementptr inbounds float, float* %46, i64 3, !dbg !5407
  store float %add29, float* %arrayidx30, align 4, !dbg !5408
  br label %if.end, !dbg !5409

if.else:                                          ; preds = %if.then
  %47 = load float*, float** %v1.addr, align 8, !dbg !5410
  %48 = load float**, float*** %trias.addr, align 8, !dbg !5411
  %49 = load i32*, i32** %b1.addr, align 8, !dbg !5412
  %50 = load i32, i32* %49, align 4, !dbg !5413
  %idxprom31 = sext i32 %50 to i64, !dbg !5411
  %arrayidx32 = getelementptr inbounds float*, float** %48, i64 %idxprom31, !dbg !5411
  store float* %47, float** %arrayidx32, align 8, !dbg !5414
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %51 = load i32*, i32** %b1.addr, align 8, !dbg !5415
  %52 = load i32, i32* %51, align 4, !dbg !5416
  %inc33 = add nsw i32 %52, 1, !dbg !5416
  store i32 %inc33, i32* %51, align 4, !dbg !5416
  br label %if.end34, !dbg !5417

if.end34:                                         ; preds = %if.end, %entry
  %53 = load float, float* %l2, align 4, !dbg !5418
  %cmp35 = fcmp une float %53, -1.000000e+00, !dbg !5420
  br i1 %cmp35, label %if.then36, label %if.end75, !dbg !5421

if.then36:                                        ; preds = %if.end34
  %54 = load float, float* %l2, align 4, !dbg !5422
  %cmp37 = fcmp une float %54, 1.000000e+00, !dbg !5425
  br i1 %cmp37, label %if.then38, label %if.end74, !dbg !5426

if.then38:                                        ; preds = %if.then36
  %55 = load float*, float** %vez.addr, align 8, !dbg !5427
  %56 = load i32*, i32** %clve.addr, align 8, !dbg !5429
  %57 = load i32, i32* %56, align 4, !dbg !5430
  %mul39 = mul nsw i32 4, %57, !dbg !5431
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !5432
  %add.ptr41 = getelementptr inbounds float, float* %55, i64 %idx.ext40, !dbg !5432
  store float* %add.ptr41, float** %adr, align 8, !dbg !5433
  %58 = load float*, float** %adr, align 8, !dbg !5434
  %59 = load float**, float*** %trias.addr, align 8, !dbg !5435
  %60 = load i32*, i32** %b1.addr, align 8, !dbg !5436
  %61 = load i32, i32* %60, align 4, !dbg !5437
  %idxprom42 = sext i32 %61 to i64, !dbg !5435
  %arrayidx43 = getelementptr inbounds float*, float** %59, i64 %idxprom42, !dbg !5435
  store float* %58, float** %arrayidx43, align 8, !dbg !5438
  %62 = load i32*, i32** %clve.addr, align 8, !dbg !5439
  %63 = load i32, i32* %62, align 4, !dbg !5440
  %inc44 = add nsw i32 %63, 1, !dbg !5440
  store i32 %inc44, i32* %62, align 4, !dbg !5440
  %64 = load float*, float** %v1.addr, align 8, !dbg !5441
  %arrayidx45 = getelementptr inbounds float, float* %64, i64 0, !dbg !5441
  %65 = load float, float* %arrayidx45, align 4, !dbg !5441
  %66 = load float, float* %l2, align 4, !dbg !5442
  %67 = load float*, float** %v2.addr, align 8, !dbg !5443
  %arrayidx46 = getelementptr inbounds float, float* %67, i64 0, !dbg !5443
  %68 = load float, float* %arrayidx46, align 4, !dbg !5443
  %69 = load float*, float** %v1.addr, align 8, !dbg !5444
  %arrayidx47 = getelementptr inbounds float, float* %69, i64 0, !dbg !5444
  %70 = load float, float* %arrayidx47, align 4, !dbg !5444
  %sub48 = fsub float %68, %70, !dbg !5445
  %mul49 = fmul float %66, %sub48, !dbg !5446
  %add50 = fadd float %65, %mul49, !dbg !5447
  %71 = load float*, float** %adr, align 8, !dbg !5448
  %arrayidx51 = getelementptr inbounds float, float* %71, i64 0, !dbg !5448
  store float %add50, float* %arrayidx51, align 4, !dbg !5449
  %72 = load float*, float** %v1.addr, align 8, !dbg !5450
  %arrayidx52 = getelementptr inbounds float, float* %72, i64 1, !dbg !5450
  %73 = load float, float* %arrayidx52, align 4, !dbg !5450
  %74 = load float, float* %l2, align 4, !dbg !5451
  %75 = load float*, float** %v2.addr, align 8, !dbg !5452
  %arrayidx53 = getelementptr inbounds float, float* %75, i64 1, !dbg !5452
  %76 = load float, float* %arrayidx53, align 4, !dbg !5452
  %77 = load float*, float** %v1.addr, align 8, !dbg !5453
  %arrayidx54 = getelementptr inbounds float, float* %77, i64 1, !dbg !5453
  %78 = load float, float* %arrayidx54, align 4, !dbg !5453
  %sub55 = fsub float %76, %78, !dbg !5454
  %mul56 = fmul float %74, %sub55, !dbg !5455
  %add57 = fadd float %73, %mul56, !dbg !5456
  %79 = load float*, float** %adr, align 8, !dbg !5457
  %arrayidx58 = getelementptr inbounds float, float* %79, i64 1, !dbg !5457
  store float %add57, float* %arrayidx58, align 4, !dbg !5458
  %80 = load float*, float** %v1.addr, align 8, !dbg !5459
  %arrayidx59 = getelementptr inbounds float, float* %80, i64 2, !dbg !5459
  %81 = load float, float* %arrayidx59, align 4, !dbg !5459
  %82 = load float, float* %l2, align 4, !dbg !5460
  %83 = load float*, float** %v2.addr, align 8, !dbg !5461
  %arrayidx60 = getelementptr inbounds float, float* %83, i64 2, !dbg !5461
  %84 = load float, float* %arrayidx60, align 4, !dbg !5461
  %85 = load float*, float** %v1.addr, align 8, !dbg !5462
  %arrayidx61 = getelementptr inbounds float, float* %85, i64 2, !dbg !5462
  %86 = load float, float* %arrayidx61, align 4, !dbg !5462
  %sub62 = fsub float %84, %86, !dbg !5463
  %mul63 = fmul float %82, %sub62, !dbg !5464
  %add64 = fadd float %81, %mul63, !dbg !5465
  %87 = load float*, float** %adr, align 8, !dbg !5466
  %arrayidx65 = getelementptr inbounds float, float* %87, i64 2, !dbg !5466
  store float %add64, float* %arrayidx65, align 4, !dbg !5467
  %88 = load float*, float** %v1.addr, align 8, !dbg !5468
  %arrayidx66 = getelementptr inbounds float, float* %88, i64 3, !dbg !5468
  %89 = load float, float* %arrayidx66, align 4, !dbg !5468
  %90 = load float, float* %l2, align 4, !dbg !5469
  %91 = load float*, float** %v2.addr, align 8, !dbg !5470
  %arrayidx67 = getelementptr inbounds float, float* %91, i64 3, !dbg !5470
  %92 = load float, float* %arrayidx67, align 4, !dbg !5470
  %93 = load float*, float** %v1.addr, align 8, !dbg !5471
  %arrayidx68 = getelementptr inbounds float, float* %93, i64 3, !dbg !5471
  %94 = load float, float* %arrayidx68, align 4, !dbg !5471
  %sub69 = fsub float %92, %94, !dbg !5472
  %mul70 = fmul float %90, %sub69, !dbg !5473
  %add71 = fadd float %89, %mul70, !dbg !5474
  %95 = load float*, float** %adr, align 8, !dbg !5475
  %arrayidx72 = getelementptr inbounds float, float* %95, i64 3, !dbg !5475
  store float %add71, float* %arrayidx72, align 4, !dbg !5476
  %96 = load i32*, i32** %b1.addr, align 8, !dbg !5477
  %97 = load i32, i32* %96, align 4, !dbg !5478
  %inc73 = add nsw i32 %97, 1, !dbg !5478
  store i32 %inc73, i32* %96, align 4, !dbg !5478
  br label %if.end74, !dbg !5479

if.end74:                                         ; preds = %if.then38, %if.then36
  br label %if.end75, !dbg !5480

if.end75:                                         ; preds = %if.end74, %if.end34
  ret void, !dbg !5481
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufclip4(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %f1, float* %f2, float* %f3, float* %f4, i32 %c1, i32 %c2, i32 %c3, i32 %c4) #0 !dbg !5482 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %f1.addr = alloca float*, align 8
  %f2.addr = alloca float*, align 8
  %f3.addr = alloca float*, align 8
  %f4.addr = alloca float*, align 8
  %c1.addr = alloca i32, align 4
  %c2.addr = alloca i32, align 4
  %c3.addr = alloca i32, align 4
  %c4.addr = alloca i32, align 4
  %vez = alloca [16 x float], align 16
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !5489, metadata !DIExpression()), !dbg !5490
  store float* %f1, float** %f1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f1.addr, metadata !5491, metadata !DIExpression()), !dbg !5492
  store float* %f2, float** %f2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f2.addr, metadata !5493, metadata !DIExpression()), !dbg !5494
  store float* %f3, float** %f3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f3.addr, metadata !5495, metadata !DIExpression()), !dbg !5496
  store float* %f4, float** %f4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %f4.addr, metadata !5497, metadata !DIExpression()), !dbg !5498
  store i32 %c1, i32* %c1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c1.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  store i32 %c2, i32* %c2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c2.addr, metadata !5501, metadata !DIExpression()), !dbg !5502
  store i32 %c3, i32* %c3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c3.addr, metadata !5503, metadata !DIExpression()), !dbg !5504
  store i32 %c4, i32* %c4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c4.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata [16 x float]* %vez, metadata !5507, metadata !DIExpression()), !dbg !5508
  %0 = load i32, i32* %c1.addr, align 4, !dbg !5509
  %1 = load i32, i32* %c2.addr, align 4, !dbg !5511
  %or = or i32 %0, %1, !dbg !5512
  %2 = load i32, i32* %c3.addr, align 4, !dbg !5513
  %or1 = or i32 %or, %2, !dbg !5514
  %3 = load i32, i32* %c4.addr, align 4, !dbg !5515
  %or2 = or i32 %or1, %3, !dbg !5516
  %tobool = icmp ne i32 %or2, 0, !dbg !5516
  br i1 %tobool, label %if.then, label %if.end7, !dbg !5517

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %c1.addr, align 4, !dbg !5518
  %5 = load i32, i32* %c2.addr, align 4, !dbg !5521
  %and = and i32 %4, %5, !dbg !5522
  %6 = load i32, i32* %c3.addr, align 4, !dbg !5523
  %and3 = and i32 %and, %6, !dbg !5524
  %7 = load i32, i32* %c4.addr, align 4, !dbg !5525
  %and4 = and i32 %and3, %7, !dbg !5526
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5526
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !5527

if.then6:                                         ; preds = %if.then
  br label %return, !dbg !5528

if.else:                                          ; preds = %if.then
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5530
  %9 = load i32, i32* %obi.addr, align 4, !dbg !5532
  %10 = load i32, i32* %zvlnr.addr, align 4, !dbg !5533
  %11 = load float*, float** %f1.addr, align 8, !dbg !5534
  %12 = load float*, float** %f2.addr, align 8, !dbg !5535
  %13 = load float*, float** %f3.addr, align 8, !dbg !5536
  %14 = load i32, i32* %c1.addr, align 4, !dbg !5537
  %15 = load i32, i32* %c2.addr, align 4, !dbg !5538
  %16 = load i32, i32* %c3.addr, align 4, !dbg !5539
  call void @zbufclip(%struct.ZSpan* %8, i32 %9, i32 %10, float* %11, float* %12, float* %13, i32 %14, i32 %15, i32 %16), !dbg !5540
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5541
  %18 = load i32, i32* %obi.addr, align 4, !dbg !5542
  %19 = load i32, i32* %zvlnr.addr, align 4, !dbg !5543
  %20 = load float*, float** %f1.addr, align 8, !dbg !5544
  %21 = load float*, float** %f3.addr, align 8, !dbg !5545
  %22 = load float*, float** %f4.addr, align 8, !dbg !5546
  %23 = load i32, i32* %c1.addr, align 4, !dbg !5547
  %24 = load i32, i32* %c3.addr, align 4, !dbg !5548
  %25 = load i32, i32* %c4.addr, align 4, !dbg !5549
  call void @zbufclip(%struct.ZSpan* %17, i32 %18, i32 %19, float* %20, float* %21, float* %22, i32 %23, i32 %24, i32 %25), !dbg !5550
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %return, !dbg !5551

if.end7:                                          ; preds = %entry
  %26 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5552
  %arraydecay = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5553
  %27 = load float*, float** %f1.addr, align 8, !dbg !5554
  call void @hoco_to_zco(%struct.ZSpan* %26, float* %arraydecay, float* %27), !dbg !5555
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5556
  %arraydecay8 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5557
  %add.ptr = getelementptr inbounds float, float* %arraydecay8, i64 4, !dbg !5558
  %29 = load float*, float** %f2.addr, align 8, !dbg !5559
  call void @hoco_to_zco(%struct.ZSpan* %28, float* %add.ptr, float* %29), !dbg !5560
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5561
  %arraydecay9 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5562
  %add.ptr10 = getelementptr inbounds float, float* %arraydecay9, i64 8, !dbg !5563
  %31 = load float*, float** %f3.addr, align 8, !dbg !5564
  call void @hoco_to_zco(%struct.ZSpan* %30, float* %add.ptr10, float* %31), !dbg !5565
  %32 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5566
  %arraydecay11 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5567
  %add.ptr12 = getelementptr inbounds float, float* %arraydecay11, i64 12, !dbg !5568
  %33 = load float*, float** %f4.addr, align 8, !dbg !5569
  call void @hoco_to_zco(%struct.ZSpan* %32, float* %add.ptr12, float* %33), !dbg !5570
  %34 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5571
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %34, i32 0, i32 34, !dbg !5572
  %35 = load void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !5572
  %36 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !5573
  %37 = load i32, i32* %obi.addr, align 4, !dbg !5574
  %38 = load i32, i32* %zvlnr.addr, align 4, !dbg !5575
  %arraydecay13 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5576
  %arraydecay14 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5577
  %add.ptr15 = getelementptr inbounds float, float* %arraydecay14, i64 4, !dbg !5578
  %arraydecay16 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5579
  %add.ptr17 = getelementptr inbounds float, float* %arraydecay16, i64 8, !dbg !5580
  %arraydecay18 = getelementptr inbounds [16 x float], [16 x float]* %vez, i64 0, i64 0, !dbg !5581
  %add.ptr19 = getelementptr inbounds float, float* %arraydecay18, i64 12, !dbg !5582
  call void %35(%struct.ZSpan* %36, i32 %37, i32 %38, float* %arraydecay13, float* %add.ptr15, float* %add.ptr17, float* %add.ptr19), !dbg !5571
  br label %return, !dbg !5583

return:                                           ; preds = %if.end7, %if.end, %if.then6
  ret void, !dbg !5583
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuffer_solid(%struct.RenderPart* %pa, %struct.RenderLayer* %rl, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)* %fillfunc, i8* %data) #0 !dbg !5584 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %fillfunc.addr = alloca void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %cache = alloca [256 x %struct.ZbufProjectCache], align 16
  %zspans = alloca [16 x %struct.ZSpan], align 16
  %zspan = alloca %struct.ZSpan*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %obwinmat = alloca [4 x [4 x float]], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %bounds = alloca [4 x float], align 16
  %ho1 = alloca [4 x float], align 16
  %ho2 = alloca [4 x float], align 16
  %ho3 = alloca [4 x float], align 16
  %ho4 = alloca [4 x float], align 16
  %lay = alloca i32, align 4
  %lay_zmask = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %zvlnr = alloca i32, align 4
  %zsample = alloca i32, align 4
  %samples = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %nofill = alloca i16, align 2
  %env = alloca i16, align 2
  %wire = alloca i16, align 2
  %zmaskpass = alloca i16, align 2
  %all_z = alloca i16, align 2
  %neg_zmask = alloca i16, align 2
  %partclip = alloca i16, align 2
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5622, metadata !DIExpression()), !dbg !5623
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !5624, metadata !DIExpression()), !dbg !5625
  store void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)* %fillfunc, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)** %fillfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)** %fillfunc.addr, metadata !5626, metadata !DIExpression()), !dbg !5627
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5628, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.declare(metadata [256 x %struct.ZbufProjectCache]* %cache, metadata !5630, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata [16 x %struct.ZSpan]* %zspans, metadata !5639, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !5644, metadata !DIExpression()), !dbg !5647
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !5647
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !5648, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !5652, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !5654, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !5656, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !5658, metadata !DIExpression()), !dbg !5661
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !5661
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !5662, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !5666, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obwinmat, metadata !5668, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !5670, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.declare(metadata [4 x float]* %bounds, metadata !5672, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.declare(metadata [4 x float]* %ho1, metadata !5674, metadata !DIExpression()), !dbg !5675
  call void @llvm.dbg.declare(metadata [4 x float]* %ho2, metadata !5676, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.declare(metadata [4 x float]* %ho3, metadata !5678, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.declare(metadata [4 x float]* %ho4, metadata !5680, metadata !DIExpression()), !dbg !5681
  %0 = bitcast [4 x float]* %ho4 to i8*, !dbg !5681
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !5681
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !5682, metadata !DIExpression()), !dbg !5683
  %1 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5684
  %lay1 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %1, i32 0, i32 3, !dbg !5685
  %2 = load i32, i32* %lay1, align 4, !dbg !5685
  store i32 %2, i32* %lay, align 4, !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %lay_zmask, metadata !5686, metadata !DIExpression()), !dbg !5687
  %3 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5688
  %lay_zmask2 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %3, i32 0, i32 4, !dbg !5689
  %4 = load i32, i32* %lay_zmask2, align 8, !dbg !5689
  store i32 %4, i32* %lay_zmask, align 4, !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata i32* %zvlnr, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %zsample, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !5700, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !5702, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.declare(metadata i32* %c3, metadata !5704, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !5706, metadata !DIExpression()), !dbg !5707
  store i32 0, i32* %c4, align 4, !dbg !5707
  call void @llvm.dbg.declare(metadata i16* %nofill, metadata !5708, metadata !DIExpression()), !dbg !5709
  store i16 0, i16* %nofill, align 2, !dbg !5709
  call void @llvm.dbg.declare(metadata i16* %env, metadata !5710, metadata !DIExpression()), !dbg !5711
  store i16 0, i16* %env, align 2, !dbg !5711
  call void @llvm.dbg.declare(metadata i16* %wire, metadata !5712, metadata !DIExpression()), !dbg !5713
  store i16 0, i16* %wire, align 2, !dbg !5713
  call void @llvm.dbg.declare(metadata i16* %zmaskpass, metadata !5714, metadata !DIExpression()), !dbg !5715
  store i16 0, i16* %zmaskpass, align 2, !dbg !5715
  call void @llvm.dbg.declare(metadata i16* %all_z, metadata !5716, metadata !DIExpression()), !dbg !5717
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5718
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %5, i32 0, i32 6, !dbg !5719
  %6 = load i32, i32* %layflag, align 8, !dbg !5719
  %and = and i32 %6, 32768, !dbg !5720
  %tobool = icmp ne i32 %and, 0, !dbg !5720
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5721

land.rhs:                                         ; preds = %entry
  %7 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5722
  %layflag3 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %7, i32 0, i32 6, !dbg !5723
  %8 = load i32, i32* %layflag3, align 8, !dbg !5723
  %and4 = and i32 %8, 262144, !dbg !5724
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5725
  %lnot = xor i1 %tobool5, true, !dbg !5725
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5726
  %land.ext = zext i1 %9 to i32, !dbg !5721
  %conv = trunc i32 %land.ext to i16, !dbg !5727
  store i16 %conv, i16* %all_z, align 2, !dbg !5717
  call void @llvm.dbg.declare(metadata i16* %neg_zmask, metadata !5728, metadata !DIExpression()), !dbg !5729
  %10 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5730
  %layflag6 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %10, i32 0, i32 6, !dbg !5731
  %11 = load i32, i32* %layflag6, align 8, !dbg !5731
  %and7 = and i32 %11, 262144, !dbg !5732
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5732
  br i1 %tobool8, label %land.rhs9, label %land.end13, !dbg !5733

land.rhs9:                                        ; preds = %land.end
  %12 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5734
  %layflag10 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %12, i32 0, i32 6, !dbg !5735
  %13 = load i32, i32* %layflag10, align 8, !dbg !5735
  %and11 = and i32 %13, 524288, !dbg !5736
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5733
  br label %land.end13

land.end13:                                       ; preds = %land.rhs9, %land.end
  %14 = phi i1 [ false, %land.end ], [ %tobool12, %land.rhs9 ], !dbg !5726
  %land.ext14 = zext i1 %14 to i32, !dbg !5733
  %conv15 = trunc i32 %land.ext14 to i16, !dbg !5737
  store i16 %conv15, i16* %neg_zmask, align 2, !dbg !5729
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5738
  call void @zbuf_make_winmat(%struct.Render* @R, [4 x float]* %arraydecay), !dbg !5739
  %15 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5740
  %conv16 = sext i16 %15 to i32, !dbg !5741
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !5741
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !5741

cond.true:                                        ; preds = %land.end13
  %16 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5742
  %conv18 = sext i16 %16 to i32, !dbg !5743
  br label %cond.end, !dbg !5741

cond.false:                                       ; preds = %land.end13
  br label %cond.end, !dbg !5741

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv18, %cond.true ], [ 1, %cond.false ], !dbg !5741
  store i32 %cond, i32* %samples, align 4, !dbg !5744
  %17 = load i32, i32* %samples, align 4, !dbg !5745
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5745
  %sample = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 19, !dbg !5745
  %19 = load i16, i16* %sample, align 8, !dbg !5745
  %conv19 = sext i16 %19 to i32, !dbg !5745
  %sub = sub nsw i32 %17, %conv19, !dbg !5745
  %cmp = icmp slt i32 4, %sub, !dbg !5745
  br i1 %cmp, label %cond.true21, label %cond.false22, !dbg !5745

cond.true21:                                      ; preds = %cond.end
  br label %cond.end26, !dbg !5745

cond.false22:                                     ; preds = %cond.end
  %20 = load i32, i32* %samples, align 4, !dbg !5745
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5745
  %sample23 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 19, !dbg !5745
  %22 = load i16, i16* %sample23, align 8, !dbg !5745
  %conv24 = sext i16 %22 to i32, !dbg !5745
  %sub25 = sub nsw i32 %20, %conv24, !dbg !5745
  br label %cond.end26, !dbg !5745

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi i32 [ 4, %cond.true21 ], [ %sub25, %cond.false22 ], !dbg !5745
  store i32 %cond27, i32* %samples, align 4, !dbg !5746
  store i32 0, i32* %zsample, align 4, !dbg !5747
  br label %for.cond, !dbg !5749

for.cond:                                         ; preds = %for.inc, %cond.end26
  %23 = load i32, i32* %zsample, align 4, !dbg !5750
  %24 = load i32, i32* %samples, align 4, !dbg !5752
  %cmp28 = icmp slt i32 %23, %24, !dbg !5753
  br i1 %cmp28, label %for.body, label %for.end, !dbg !5754

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %zsample, align 4, !dbg !5755
  %idxprom = sext i32 %25 to i64, !dbg !5757
  %arrayidx = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom, !dbg !5757
  store %struct.ZSpan* %arrayidx, %struct.ZSpan** %zspan, align 8, !dbg !5758
  %26 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !5759
  %27 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !5760
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5761
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !5762
  call void @zbuffer_part_bounds(i32 %26, i32 %27, %struct.RenderPart* %28, float* %arraydecay30), !dbg !5763
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5764
  %30 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5765
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %30, i32 0, i32 14, !dbg !5766
  %31 = load i32, i32* %rectx, align 8, !dbg !5766
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5767
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 15, !dbg !5768
  %33 = load i32, i32* %recty, align 4, !dbg !5768
  %34 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 19), align 4, !dbg !5769
  call void @zbuf_alloc_span(%struct.ZSpan* %29, i32 %31, i32 %33, float %34), !dbg !5770
  %35 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !5771
  %conv31 = sitofp i32 %35 to float, !dbg !5772
  %div = fdiv float %conv31, 2.000000e+00, !dbg !5773
  %36 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5774
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %36, i32 0, i32 12, !dbg !5775
  store float %div, float* %zmulx, align 8, !dbg !5776
  %37 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !5777
  %conv32 = sitofp i32 %37 to float, !dbg !5778
  %div33 = fdiv float %conv32, 2.000000e+00, !dbg !5779
  %38 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5780
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %38, i32 0, i32 13, !dbg !5781
  store float %div33, float* %zmuly, align 4, !dbg !5782
  %39 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !5783
  %tobool34 = icmp ne i16 %39, 0, !dbg !5785
  br i1 %tobool34, label %if.then, label %if.else, !dbg !5786

if.then:                                          ; preds = %for.body
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5787
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %40, i32 0, i32 13, !dbg !5789
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !5790
  %41 = load i32, i32* %xmin, align 8, !dbg !5790
  %sub35 = sub nsw i32 0, %41, !dbg !5791
  %conv36 = sitofp i32 %sub35 to float, !dbg !5791
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5792
  %sample37 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 19, !dbg !5793
  %43 = load i16, i16* %sample37, align 8, !dbg !5793
  %conv38 = sext i16 %43 to i32, !dbg !5792
  %44 = load i32, i32* %zsample, align 4, !dbg !5794
  %add = add nsw i32 %conv38, %44, !dbg !5795
  %idxprom39 = sext i32 %add to i64, !dbg !5796
  %arrayidx40 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom39, !dbg !5796
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx40, i64 0, i64 0, !dbg !5796
  %45 = load float, float* %arrayidx41, align 8, !dbg !5796
  %sub42 = fsub float %conv36, %45, !dbg !5797
  %46 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5798
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %46, i32 0, i32 14, !dbg !5799
  store float %sub42, float* %zofsx, align 8, !dbg !5800
  %47 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5801
  %disprect43 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %47, i32 0, i32 13, !dbg !5802
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect43, i32 0, i32 2, !dbg !5803
  %48 = load i32, i32* %ymin, align 8, !dbg !5803
  %sub44 = sub nsw i32 0, %48, !dbg !5804
  %conv45 = sitofp i32 %sub44 to float, !dbg !5804
  %49 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5805
  %sample46 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %49, i32 0, i32 19, !dbg !5806
  %50 = load i16, i16* %sample46, align 8, !dbg !5806
  %conv47 = sext i16 %50 to i32, !dbg !5805
  %51 = load i32, i32* %zsample, align 4, !dbg !5807
  %add48 = add nsw i32 %conv47, %51, !dbg !5808
  %idxprom49 = sext i32 %add48 to i64, !dbg !5809
  %arrayidx50 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom49, !dbg !5809
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx50, i64 0, i64 1, !dbg !5809
  %52 = load float, float* %arrayidx51, align 4, !dbg !5809
  %sub52 = fsub float %conv45, %52, !dbg !5810
  %53 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5811
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %53, i32 0, i32 15, !dbg !5812
  store float %sub52, float* %zofsy, align 4, !dbg !5813
  br label %if.end88, !dbg !5814

if.else:                                          ; preds = %for.body
  %54 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !5815
  %tobool53 = icmp ne i16 %54, 0, !dbg !5817
  br i1 %tobool53, label %if.then54, label %if.else77, !dbg !5818

if.then54:                                        ; preds = %if.else
  %55 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5819
  %disprect55 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %55, i32 0, i32 13, !dbg !5821
  %xmin56 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect55, i32 0, i32 0, !dbg !5822
  %56 = load i32, i32* %xmin56, align 8, !dbg !5822
  %sub57 = sub nsw i32 0, %56, !dbg !5823
  %conv58 = sitofp i32 %sub57 to float, !dbg !5823
  %57 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !5824
  %conv59 = sext i16 %57 to i32, !dbg !5825
  %sub60 = sub nsw i32 %conv59, 1, !dbg !5826
  %idxprom61 = sext i32 %sub60 to i64, !dbg !5827
  %arrayidx62 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 40), i64 0, i64 %idxprom61, !dbg !5827
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx62, i64 0, i64 0, !dbg !5827
  %58 = load float, float* %arrayidx63, align 8, !dbg !5827
  %sub64 = fsub float %conv58, %58, !dbg !5828
  %59 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5829
  %zofsx65 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %59, i32 0, i32 14, !dbg !5830
  store float %sub64, float* %zofsx65, align 8, !dbg !5831
  %60 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5832
  %disprect66 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %60, i32 0, i32 13, !dbg !5833
  %ymin67 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect66, i32 0, i32 2, !dbg !5834
  %61 = load i32, i32* %ymin67, align 8, !dbg !5834
  %sub68 = sub nsw i32 0, %61, !dbg !5835
  %conv69 = sitofp i32 %sub68 to float, !dbg !5835
  %62 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !5836
  %conv70 = sext i16 %62 to i32, !dbg !5837
  %sub71 = sub nsw i32 %conv70, 1, !dbg !5838
  %idxprom72 = sext i32 %sub71 to i64, !dbg !5839
  %arrayidx73 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 40), i64 0, i64 %idxprom72, !dbg !5839
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 1, !dbg !5839
  %63 = load float, float* %arrayidx74, align 4, !dbg !5839
  %sub75 = fsub float %conv69, %63, !dbg !5840
  %64 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5841
  %zofsy76 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %64, i32 0, i32 15, !dbg !5842
  store float %sub75, float* %zofsy76, align 4, !dbg !5843
  br label %if.end, !dbg !5844

if.else77:                                        ; preds = %if.else
  %65 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5845
  %disprect78 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %65, i32 0, i32 13, !dbg !5847
  %xmin79 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect78, i32 0, i32 0, !dbg !5848
  %66 = load i32, i32* %xmin79, align 8, !dbg !5848
  %sub80 = sub nsw i32 0, %66, !dbg !5849
  %conv81 = sitofp i32 %sub80 to float, !dbg !5849
  %67 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5850
  %zofsx82 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %67, i32 0, i32 14, !dbg !5851
  store float %conv81, float* %zofsx82, align 8, !dbg !5852
  %68 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5853
  %disprect83 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %68, i32 0, i32 13, !dbg !5854
  %ymin84 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect83, i32 0, i32 2, !dbg !5855
  %69 = load i32, i32* %ymin84, align 8, !dbg !5855
  %sub85 = sub nsw i32 0, %69, !dbg !5856
  %conv86 = sitofp i32 %sub85 to float, !dbg !5856
  %70 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5857
  %zofsy87 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %70, i32 0, i32 15, !dbg !5858
  store float %conv86, float* %zofsy87, align 4, !dbg !5859
  br label %if.end

if.end:                                           ; preds = %if.else77, %if.then54
  br label %if.end88

if.end88:                                         ; preds = %if.end, %if.then
  %71 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5860
  %zofsx89 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %71, i32 0, i32 14, !dbg !5861
  %72 = load float, float* %zofsx89, align 8, !dbg !5862
  %sub90 = fsub float %72, 5.000000e-01, !dbg !5862
  store float %sub90, float* %zofsx89, align 8, !dbg !5862
  %73 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5863
  %zofsy91 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %73, i32 0, i32 15, !dbg !5864
  %74 = load float, float* %zofsy91, align 4, !dbg !5865
  %sub92 = fsub float %74, 5.000000e-01, !dbg !5865
  store float %sub92, float* %zofsy91, align 4, !dbg !5865
  %75 = load i32, i32* %zsample, align 4, !dbg !5866
  %76 = load i32, i32* %samples, align 4, !dbg !5868
  %sub93 = sub nsw i32 %76, 1, !dbg !5869
  %cmp94 = icmp eq i32 %75, %sub93, !dbg !5870
  br i1 %cmp94, label %if.then96, label %if.else105, !dbg !5871

if.then96:                                        ; preds = %if.end88
  %77 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5872
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %77, i32 0, i32 5, !dbg !5874
  %78 = load i32*, i32** %rectp, align 8, !dbg !5874
  %79 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5875
  %rectp97 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %79, i32 0, i32 19, !dbg !5876
  store i32* %78, i32** %rectp97, align 8, !dbg !5877
  %80 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5878
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %80, i32 0, i32 4, !dbg !5879
  %81 = load i32*, i32** %recto, align 8, !dbg !5879
  %82 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5880
  %recto98 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %82, i32 0, i32 20, !dbg !5881
  store i32* %81, i32** %recto98, align 8, !dbg !5882
  %83 = load i16, i16* %neg_zmask, align 2, !dbg !5883
  %tobool99 = icmp ne i16 %83, 0, !dbg !5883
  br i1 %tobool99, label %if.then100, label %if.else101, !dbg !5885

if.then100:                                       ; preds = %if.then96
  %84 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5886
  %rectmask = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %84, i32 0, i32 7, !dbg !5887
  %85 = load i32*, i32** %rectmask, align 8, !dbg !5887
  %86 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5888
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %86, i32 0, i32 16, !dbg !5889
  store i32* %85, i32** %rectz, align 8, !dbg !5890
  br label %if.end104, !dbg !5888

if.else101:                                       ; preds = %if.then96
  %87 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5891
  %rectz102 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %87, i32 0, i32 6, !dbg !5892
  %88 = load i32*, i32** %rectz102, align 8, !dbg !5892
  %89 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5893
  %rectz103 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %89, i32 0, i32 16, !dbg !5894
  store i32* %88, i32** %rectz103, align 8, !dbg !5895
  br label %if.end104

if.end104:                                        ; preds = %if.else101, %if.then100
  br label %if.end128, !dbg !5896

if.else105:                                       ; preds = %if.end88
  %90 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5897
  %91 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5899
  %rectx106 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %91, i32 0, i32 14, !dbg !5900
  %92 = load i32, i32* %rectx106, align 8, !dbg !5900
  %conv107 = sext i32 %92 to i64, !dbg !5899
  %mul = mul i64 4, %conv107, !dbg !5901
  %93 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5902
  %recty108 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %93, i32 0, i32 15, !dbg !5903
  %94 = load i32, i32* %recty108, align 4, !dbg !5903
  %conv109 = sext i32 %94 to i64, !dbg !5902
  %mul110 = mul i64 %mul, %conv109, !dbg !5904
  %call = call i8* %90(i64 %mul110, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !5897
  %95 = bitcast i8* %call to i32*, !dbg !5897
  %96 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5905
  %recto111 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %96, i32 0, i32 20, !dbg !5906
  store i32* %95, i32** %recto111, align 8, !dbg !5907
  %97 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5908
  %98 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5909
  %rectx112 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %98, i32 0, i32 14, !dbg !5910
  %99 = load i32, i32* %rectx112, align 8, !dbg !5910
  %conv113 = sext i32 %99 to i64, !dbg !5909
  %mul114 = mul i64 4, %conv113, !dbg !5911
  %100 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5912
  %recty115 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %100, i32 0, i32 15, !dbg !5913
  %101 = load i32, i32* %recty115, align 4, !dbg !5913
  %conv116 = sext i32 %101 to i64, !dbg !5912
  %mul117 = mul i64 %mul114, %conv116, !dbg !5914
  %call118 = call i8* %97(i64 %mul117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !5908
  %102 = bitcast i8* %call118 to i32*, !dbg !5908
  %103 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5915
  %rectp119 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %103, i32 0, i32 19, !dbg !5916
  store i32* %102, i32** %rectp119, align 8, !dbg !5917
  %104 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5918
  %105 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5919
  %rectx120 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %105, i32 0, i32 14, !dbg !5920
  %106 = load i32, i32* %rectx120, align 8, !dbg !5920
  %conv121 = sext i32 %106 to i64, !dbg !5919
  %mul122 = mul i64 4, %conv121, !dbg !5921
  %107 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5922
  %recty123 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %107, i32 0, i32 15, !dbg !5923
  %108 = load i32, i32* %recty123, align 4, !dbg !5923
  %conv124 = sext i32 %108 to i64, !dbg !5922
  %mul125 = mul i64 %mul122, %conv124, !dbg !5924
  %call126 = call i8* %104(i64 %mul125, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !5918
  %109 = bitcast i8* %call126 to i32*, !dbg !5918
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5925
  %rectz127 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 16, !dbg !5926
  store i32* %109, i32** %rectz127, align 8, !dbg !5927
  br label %if.end128

if.end128:                                        ; preds = %if.else105, %if.end104
  %111 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5928
  %rectz129 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %111, i32 0, i32 16, !dbg !5929
  %112 = load i32*, i32** %rectz129, align 8, !dbg !5929
  %113 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5930
  %rectx130 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %113, i32 0, i32 14, !dbg !5931
  %114 = load i32, i32* %rectx130, align 8, !dbg !5931
  %115 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5932
  %recty131 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %115, i32 0, i32 15, !dbg !5933
  %116 = load i32, i32* %recty131, align 4, !dbg !5933
  call void @fillrect(i32* %112, i32 %114, i32 %116, i32 2147483647), !dbg !5934
  %117 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5935
  %rectp132 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %117, i32 0, i32 19, !dbg !5936
  %118 = load i32*, i32** %rectp132, align 8, !dbg !5936
  %119 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5937
  %rectx133 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %119, i32 0, i32 14, !dbg !5938
  %120 = load i32, i32* %rectx133, align 8, !dbg !5938
  %121 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5939
  %recty134 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %121, i32 0, i32 15, !dbg !5940
  %122 = load i32, i32* %recty134, align 4, !dbg !5940
  call void @fillrect(i32* %118, i32 %120, i32 %122, i32 0), !dbg !5941
  %123 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5942
  %recto135 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %123, i32 0, i32 20, !dbg !5943
  %124 = load i32*, i32** %recto135, align 8, !dbg !5943
  %125 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5944
  %rectx136 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %125, i32 0, i32 14, !dbg !5945
  %126 = load i32, i32* %rectx136, align 8, !dbg !5945
  %127 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5946
  %recty137 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %127, i32 0, i32 15, !dbg !5947
  %128 = load i32, i32* %recty137, align 4, !dbg !5947
  call void @fillrect(i32* %124, i32 %126, i32 %128, i32 0), !dbg !5948
  br label %for.inc, !dbg !5949

for.inc:                                          ; preds = %if.end128
  %129 = load i32, i32* %zsample, align 4, !dbg !5950
  %inc = add nsw i32 %129, 1, !dbg !5950
  store i32 %inc, i32* %zsample, align 4, !dbg !5950
  br label %for.cond, !dbg !5951, !llvm.loop !5952

for.end:                                          ; preds = %for.cond
  %130 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5954
  %layflag138 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %130, i32 0, i32 6, !dbg !5956
  %131 = load i32, i32* %layflag138, align 8, !dbg !5956
  %and139 = and i32 %131, 262144, !dbg !5957
  %tobool140 = icmp ne i32 %and139, 0, !dbg !5957
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !5958

if.then141:                                       ; preds = %for.end
  store i16 1, i16* %zmaskpass, align 2, !dbg !5959
  br label %if.end142, !dbg !5960

if.end142:                                        ; preds = %if.then141, %for.end
  br label %for.cond143, !dbg !5961

for.cond143:                                      ; preds = %for.inc463, %if.end142
  %132 = load i16, i16* %zmaskpass, align 2, !dbg !5962
  %conv144 = sext i16 %132 to i32, !dbg !5962
  %cmp145 = icmp sge i32 %conv144, 0, !dbg !5965
  br i1 %cmp145, label %for.body147, label %for.end464, !dbg !5966

for.body147:                                      ; preds = %for.cond143
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !5967
  store i32 0, i32* %zsample, align 4, !dbg !5969
  br label %for.cond148, !dbg !5971

for.cond148:                                      ; preds = %for.inc162, %for.body147
  %133 = load i32, i32* %zsample, align 4, !dbg !5972
  %134 = load i32, i32* %samples, align 4, !dbg !5974
  %cmp149 = icmp slt i32 %133, %134, !dbg !5975
  br i1 %cmp149, label %for.body151, label %for.end164, !dbg !5976

for.body151:                                      ; preds = %for.cond148
  %135 = load i32, i32* %zsample, align 4, !dbg !5977
  %idxprom152 = sext i32 %135 to i64, !dbg !5979
  %arrayidx153 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom152, !dbg !5979
  store %struct.ZSpan* %arrayidx153, %struct.ZSpan** %zspan, align 8, !dbg !5980
  %136 = load i16, i16* %zmaskpass, align 2, !dbg !5981
  %conv154 = sext i16 %136 to i32, !dbg !5981
  %tobool155 = icmp ne i32 %conv154, 0, !dbg !5981
  br i1 %tobool155, label %land.lhs.true, label %if.else159, !dbg !5983

land.lhs.true:                                    ; preds = %for.body151
  %137 = load i16, i16* %neg_zmask, align 2, !dbg !5984
  %conv156 = sext i16 %137 to i32, !dbg !5984
  %tobool157 = icmp ne i32 %conv156, 0, !dbg !5984
  br i1 %tobool157, label %if.then158, label %if.else159, !dbg !5985

if.then158:                                       ; preds = %land.lhs.true
  %138 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5986
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %138, i32 0, i32 34, !dbg !5987
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillGLinv4, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !5988
  br label %if.end161, !dbg !5986

if.else159:                                       ; preds = %land.lhs.true, %for.body151
  %139 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5989
  %zbuffunc160 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %139, i32 0, i32 34, !dbg !5990
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillGL4, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc160, align 8, !dbg !5991
  br label %if.end161

if.end161:                                        ; preds = %if.else159, %if.then158
  %140 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !5992
  %zbuflinefunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %140, i32 0, i32 35, !dbg !5993
  store void (%struct.ZSpan*, i32, i32, float*, float*)* @zbufline, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc, align 8, !dbg !5994
  br label %for.inc162, !dbg !5995

for.inc162:                                       ; preds = %if.end161
  %141 = load i32, i32* %zsample, align 4, !dbg !5996
  %inc163 = add nsw i32 %141, 1, !dbg !5996
  store i32 %inc163, i32* %zsample, align 4, !dbg !5996
  br label %for.cond148, !dbg !5997, !llvm.loop !5998

for.end164:                                       ; preds = %for.cond148
  store i32 0, i32* %i, align 4, !dbg !6000
  %142 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 70, i32 0), align 8, !dbg !6002
  %143 = bitcast i8* %142 to %struct.ObjectInstanceRen*, !dbg !6003
  store %struct.ObjectInstanceRen* %143, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6004
  br label %for.cond165, !dbg !6005

for.cond165:                                      ; preds = %for.inc415, %for.end164
  %144 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6006
  %tobool166 = icmp ne %struct.ObjectInstanceRen* %144, null, !dbg !6008
  br i1 %tobool166, label %for.body167, label %for.end417, !dbg !6008

for.body167:                                      ; preds = %for.cond165
  %145 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6009
  %obr168 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %145, i32 0, i32 2, !dbg !6011
  %146 = load %struct.ObjectRen*, %struct.ObjectRen** %obr168, align 8, !dbg !6011
  store %struct.ObjectRen* %146, %struct.ObjectRen** %obr, align 8, !dbg !6012
  %147 = load i16, i16* %zmaskpass, align 2, !dbg !6013
  %tobool169 = icmp ne i16 %147, 0, !dbg !6013
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !6015

if.then170:                                       ; preds = %for.body167
  %148 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6016
  %lay171 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %148, i32 0, i32 7, !dbg !6019
  %149 = load i32, i32* %lay171, align 8, !dbg !6019
  %150 = load i32, i32* %lay_zmask, align 4, !dbg !6020
  %and172 = and i32 %149, %150, !dbg !6021
  %cmp173 = icmp eq i32 %and172, 0, !dbg !6022
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !6023

if.then175:                                       ; preds = %if.then170
  br label %for.inc415, !dbg !6024

if.end176:                                        ; preds = %if.then170
  br label %if.end185, !dbg !6025

if.else177:                                       ; preds = %for.body167
  %151 = load i16, i16* %all_z, align 2, !dbg !6026
  %tobool178 = icmp ne i16 %151, 0, !dbg !6026
  br i1 %tobool178, label %if.end184, label %land.lhs.true179, !dbg !6028

land.lhs.true179:                                 ; preds = %if.else177
  %152 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6029
  %lay180 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %152, i32 0, i32 7, !dbg !6030
  %153 = load i32, i32* %lay180, align 8, !dbg !6030
  %154 = load i32, i32* %lay, align 4, !dbg !6031
  %155 = load i32, i32* %lay_zmask, align 4, !dbg !6032
  %or = or i32 %154, %155, !dbg !6033
  %and181 = and i32 %153, %or, !dbg !6034
  %tobool182 = icmp ne i32 %and181, 0, !dbg !6034
  br i1 %tobool182, label %if.end184, label %if.then183, !dbg !6035

if.then183:                                       ; preds = %land.lhs.true179
  br label %for.inc415, !dbg !6036

if.end184:                                        ; preds = %land.lhs.true179, %if.else177
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end176
  %156 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6037
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %156, i32 0, i32 11, !dbg !6039
  %157 = load i16, i16* %flag, align 8, !dbg !6039
  %conv186 = sext i16 %157 to i32, !dbg !6037
  %and187 = and i32 %conv186, 3, !dbg !6040
  %tobool188 = icmp ne i32 %and187, 0, !dbg !6040
  br i1 %tobool188, label %if.then189, label %if.else193, !dbg !6041

if.then189:                                       ; preds = %if.end185
  %arraydecay190 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6042
  %arraydecay191 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !6043
  %158 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6044
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %158, i32 0, i32 8, !dbg !6045
  %arraydecay192 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !6044
  call void @mul_m4_m4m4([4 x float]* %arraydecay190, [4 x float]* %arraydecay191, [4 x float]* %arraydecay192), !dbg !6046
  br label %if.end196, !dbg !6046

if.else193:                                       ; preds = %if.end185
  %arraydecay194 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6047
  %arraydecay195 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !6048
  call void @copy_m4_m4([4 x float]* %arraydecay194, [4 x float]* %arraydecay195), !dbg !6049
  br label %if.end196

if.end196:                                        ; preds = %if.else193, %if.then189
  %159 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6050
  %obr197 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %159, i32 0, i32 2, !dbg !6052
  %160 = load %struct.ObjectRen*, %struct.ObjectRen** %obr197, align 8, !dbg !6052
  %boundbox = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %160, i32 0, i32 9, !dbg !6053
  %arraydecay198 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox, i64 0, i64 0, !dbg !6050
  %arraydecay199 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !6054
  %arraydecay200 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6055
  %call201 = call i32 @clip_render_object([3 x float]* %arraydecay198, float* %arraydecay199, [4 x float]* %arraydecay200), !dbg !6056
  %tobool202 = icmp ne i32 %call201, 0, !dbg !6056
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !6057

if.then203:                                       ; preds = %if.end196
  br label %for.inc415, !dbg !6058

if.end204:                                        ; preds = %if.end196
  %arraydecay205 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !6059
  %161 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6060
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %161, i32 0, i32 10, !dbg !6061
  %162 = load i32, i32* %totvert, align 8, !dbg !6061
  call void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %arraydecay205, i32 %162), !dbg !6062
  store i32 0, i32* %v, align 4, !dbg !6063
  br label %for.cond206, !dbg !6065

for.cond206:                                      ; preds = %for.inc412, %if.end204
  %163 = load i32, i32* %v, align 4, !dbg !6066
  %164 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6068
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %164, i32 0, i32 11, !dbg !6069
  %165 = load i32, i32* %totvlak, align 4, !dbg !6069
  %cmp207 = icmp slt i32 %163, %165, !dbg !6070
  br i1 %cmp207, label %for.body209, label %for.end414, !dbg !6071

for.body209:                                      ; preds = %for.cond206
  %166 = load i32, i32* %v, align 4, !dbg !6072
  %and210 = and i32 %166, 255, !dbg !6075
  %cmp211 = icmp eq i32 %and210, 0, !dbg !6076
  br i1 %cmp211, label %if.then213, label %if.else216, !dbg !6077

if.then213:                                       ; preds = %for.body209
  %167 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6078
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %167, i32 0, i32 19, !dbg !6079
  %168 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !6079
  %169 = load i32, i32* %v, align 4, !dbg !6080
  %shr = ashr i32 %169, 8, !dbg !6081
  %idxprom214 = sext i32 %shr to i64, !dbg !6078
  %arrayidx215 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %168, i64 %idxprom214, !dbg !6078
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx215, i32 0, i32 0, !dbg !6082
  %170 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !6082
  store %struct.VlakRen* %170, %struct.VlakRen** %vlr, align 8, !dbg !6083
  br label %if.end217, !dbg !6084

if.else216:                                       ; preds = %for.body209
  %171 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6085
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %171, i32 1, !dbg !6085
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !6085
  br label %if.end217

if.end217:                                        ; preds = %if.else216, %if.then213
  %172 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6086
  %lay218 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %172, i32 0, i32 7, !dbg !6088
  %173 = load i32, i32* %lay218, align 8, !dbg !6088
  %174 = load i32, i32* %lay, align 4, !dbg !6089
  %and219 = and i32 %173, %174, !dbg !6090
  %tobool220 = icmp ne i32 %and219, 0, !dbg !6090
  br i1 %tobool220, label %if.then221, label %if.else271, !dbg !6091

if.then221:                                       ; preds = %if.end217
  %175 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6092
  %mat222 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %175, i32 0, i32 5, !dbg !6095
  %176 = load %struct.Material*, %struct.Material** %mat222, align 8, !dbg !6095
  %177 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6096
  %cmp223 = icmp ne %struct.Material* %176, %177, !dbg !6097
  br i1 %cmp223, label %if.then225, label %if.end270, !dbg !6098

if.then225:                                       ; preds = %if.then221
  %178 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6099
  %mat226 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %178, i32 0, i32 5, !dbg !6101
  %179 = load %struct.Material*, %struct.Material** %mat226, align 8, !dbg !6101
  store %struct.Material* %179, %struct.Material** %ma, align 8, !dbg !6102
  %180 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6103
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %180, i32 0, i32 51, !dbg !6104
  %181 = load i32, i32* %mode, align 4, !dbg !6104
  %and227 = and i32 %181, 8192, !dbg !6105
  %tobool228 = icmp ne i32 %and227, 0, !dbg !6105
  br i1 %tobool228, label %lor.end, label %lor.rhs, !dbg !6106

lor.rhs:                                          ; preds = %if.then225
  %182 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6107
  %mode229 = getelementptr inbounds %struct.Material, %struct.Material* %182, i32 0, i32 51, !dbg !6108
  %183 = load i32, i32* %mode229, align 4, !dbg !6108
  %and230 = and i32 %183, 65536, !dbg !6109
  %tobool231 = icmp ne i32 %and230, 0, !dbg !6109
  br i1 %tobool231, label %land.rhs232, label %land.end236, !dbg !6110

land.rhs232:                                      ; preds = %lor.rhs
  %184 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6111
  %mode233 = getelementptr inbounds %struct.Material, %struct.Material* %184, i32 0, i32 51, !dbg !6112
  %185 = load i32, i32* %mode233, align 4, !dbg !6112
  %and234 = and i32 %185, 64, !dbg !6113
  %tobool235 = icmp ne i32 %and234, 0, !dbg !6110
  br label %land.end236

land.end236:                                      ; preds = %land.rhs232, %lor.rhs
  %186 = phi i1 [ false, %lor.rhs ], [ %tobool235, %land.rhs232 ], !dbg !6114
  br label %lor.end, !dbg !6106

lor.end:                                          ; preds = %land.end236, %if.then225
  %187 = phi i1 [ true, %if.then225 ], [ %186, %land.end236 ]
  %lor.ext = zext i1 %187 to i32, !dbg !6106
  %conv238 = trunc i32 %lor.ext to i16, !dbg !6115
  store i16 %conv238, i16* %nofill, align 2, !dbg !6116
  %188 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6117
  %mode239 = getelementptr inbounds %struct.Material, %struct.Material* %188, i32 0, i32 51, !dbg !6118
  %189 = load i32, i32* %mode239, align 4, !dbg !6118
  %and240 = and i32 %189, 512, !dbg !6119
  %conv241 = trunc i32 %and240 to i16, !dbg !6120
  store i16 %conv241, i16* %env, align 2, !dbg !6121
  %190 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6122
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %190, i32 0, i32 2, !dbg !6123
  %191 = load i16, i16* %material_type, align 8, !dbg !6123
  %conv242 = sext i16 %191 to i32, !dbg !6122
  %cmp243 = icmp eq i32 %conv242, 3, !dbg !6124
  %conv244 = zext i1 %cmp243 to i32, !dbg !6124
  %conv245 = trunc i32 %conv244 to i16, !dbg !6125
  store i16 %conv245, i16* %wire, align 2, !dbg !6126
  store i32 0, i32* %zsample, align 4, !dbg !6127
  br label %for.cond246, !dbg !6129

for.cond246:                                      ; preds = %for.inc267, %lor.end
  %192 = load i32, i32* %zsample, align 4, !dbg !6130
  %193 = load i32, i32* %samples, align 4, !dbg !6132
  %cmp247 = icmp slt i32 %192, %193, !dbg !6133
  br i1 %cmp247, label %for.body249, label %for.end269, !dbg !6134

for.body249:                                      ; preds = %for.cond246
  %194 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6135
  %mode250 = getelementptr inbounds %struct.Material, %struct.Material* %194, i32 0, i32 51, !dbg !6138
  %195 = load i32, i32* %mode250, align 4, !dbg !6138
  %and251 = and i32 %195, 256, !dbg !6139
  %tobool252 = icmp ne i32 %and251, 0, !dbg !6139
  br i1 %tobool252, label %if.then258, label %lor.lhs.false, !dbg !6140

lor.lhs.false:                                    ; preds = %for.body249
  %196 = load i16, i16* %zmaskpass, align 2, !dbg !6141
  %conv253 = sext i16 %196 to i32, !dbg !6141
  %tobool254 = icmp ne i32 %conv253, 0, !dbg !6141
  br i1 %tobool254, label %land.lhs.true255, label %if.else262, !dbg !6142

land.lhs.true255:                                 ; preds = %lor.lhs.false
  %197 = load i16, i16* %neg_zmask, align 2, !dbg !6143
  %conv256 = sext i16 %197 to i32, !dbg !6143
  %tobool257 = icmp ne i32 %conv256, 0, !dbg !6143
  br i1 %tobool257, label %if.then258, label %if.else262, !dbg !6144

if.then258:                                       ; preds = %land.lhs.true255, %for.body249
  %198 = load i32, i32* %zsample, align 4, !dbg !6145
  %idxprom259 = sext i32 %198 to i64, !dbg !6146
  %arrayidx260 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom259, !dbg !6146
  %zbuffunc261 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %arrayidx260, i32 0, i32 34, !dbg !6147
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillGLinv4, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc261, align 16, !dbg !6148
  br label %if.end266, !dbg !6146

if.else262:                                       ; preds = %land.lhs.true255, %lor.lhs.false
  %199 = load i32, i32* %zsample, align 4, !dbg !6149
  %idxprom263 = sext i32 %199 to i64, !dbg !6150
  %arrayidx264 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom263, !dbg !6150
  %zbuffunc265 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %arrayidx264, i32 0, i32 34, !dbg !6151
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillGL4, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc265, align 16, !dbg !6152
  br label %if.end266

if.end266:                                        ; preds = %if.else262, %if.then258
  br label %for.inc267, !dbg !6153

for.inc267:                                       ; preds = %if.end266
  %200 = load i32, i32* %zsample, align 4, !dbg !6154
  %inc268 = add nsw i32 %200, 1, !dbg !6154
  store i32 %inc268, i32* %zsample, align 4, !dbg !6154
  br label %for.cond246, !dbg !6155, !llvm.loop !6156

for.end269:                                       ; preds = %for.cond246
  br label %if.end270, !dbg !6158

if.end270:                                        ; preds = %for.end269, %if.then221
  br label %if.end281, !dbg !6159

if.else271:                                       ; preds = %if.end217
  %201 = load i16, i16* %all_z, align 2, !dbg !6160
  %conv272 = sext i16 %201 to i32, !dbg !6160
  %tobool273 = icmp ne i32 %conv272, 0, !dbg !6160
  br i1 %tobool273, label %if.then278, label %lor.lhs.false274, !dbg !6162

lor.lhs.false274:                                 ; preds = %if.else271
  %202 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6163
  %lay275 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %202, i32 0, i32 7, !dbg !6164
  %203 = load i32, i32* %lay275, align 8, !dbg !6164
  %204 = load i32, i32* %lay_zmask, align 4, !dbg !6165
  %and276 = and i32 %203, %204, !dbg !6166
  %tobool277 = icmp ne i32 %and276, 0, !dbg !6166
  br i1 %tobool277, label %if.then278, label %if.else279, !dbg !6167

if.then278:                                       ; preds = %lor.lhs.false274, %if.else271
  store i16 1, i16* %env, align 2, !dbg !6168
  store i16 0, i16* %nofill, align 2, !dbg !6170
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !6171
  br label %if.end280, !dbg !6172

if.else279:                                       ; preds = %lor.lhs.false274
  store i16 1, i16* %nofill, align 2, !dbg !6173
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !6175
  br label %if.end280

if.end280:                                        ; preds = %if.else279, %if.then278
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.end270
  %205 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6176
  %flag282 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %205, i32 0, i32 7, !dbg !6178
  %206 = load i8, i8* %flag282, align 1, !dbg !6178
  %conv283 = zext i8 %206 to i32, !dbg !6176
  %and284 = and i32 %conv283, 2, !dbg !6179
  %tobool285 = icmp ne i32 %and284, 0, !dbg !6179
  br i1 %tobool285, label %if.end411, label %land.lhs.true286, !dbg !6180

land.lhs.true286:                                 ; preds = %if.end281
  %207 = load i16, i16* %nofill, align 2, !dbg !6181
  %conv287 = sext i16 %207 to i32, !dbg !6181
  %cmp288 = icmp eq i32 %conv287, 0, !dbg !6182
  br i1 %cmp288, label %if.then290, label %if.end411, !dbg !6183

if.then290:                                       ; preds = %land.lhs.true286
  call void @llvm.dbg.declare(metadata i16* %partclip, metadata !6184, metadata !DIExpression()), !dbg !6186
  %208 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6187
  %v1291 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %208, i32 0, i32 0, !dbg !6188
  %209 = load %struct.VertRen*, %struct.VertRen** %v1291, align 8, !dbg !6188
  store %struct.VertRen* %209, %struct.VertRen** %v1, align 8, !dbg !6189
  %210 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6190
  %v2292 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %210, i32 0, i32 1, !dbg !6191
  %211 = load %struct.VertRen*, %struct.VertRen** %v2292, align 8, !dbg !6191
  store %struct.VertRen* %211, %struct.VertRen** %v2, align 8, !dbg !6192
  %212 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6193
  %v3293 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %212, i32 0, i32 2, !dbg !6194
  %213 = load %struct.VertRen*, %struct.VertRen** %v3293, align 8, !dbg !6194
  store %struct.VertRen* %213, %struct.VertRen** %v3, align 8, !dbg !6195
  %214 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6196
  %v4294 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %214, i32 0, i32 3, !dbg !6197
  %215 = load %struct.VertRen*, %struct.VertRen** %v4294, align 8, !dbg !6197
  store %struct.VertRen* %215, %struct.VertRen** %v4, align 8, !dbg !6198
  %arraydecay295 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !6199
  %216 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !6200
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %216, i32 0, i32 5, !dbg !6201
  %217 = load i32, i32* %index, align 8, !dbg !6201
  %arraydecay296 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6202
  %arraydecay297 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !6203
  %218 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !6204
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %218, i32 0, i32 0, !dbg !6205
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6204
  %arraydecay299 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6206
  %call300 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay295, i32 %217, [4 x float]* %arraydecay296, float* %arraydecay297, float* %arraydecay298, float* %arraydecay299), !dbg !6207
  store i32 %call300, i32* %c1, align 4, !dbg !6208
  %arraydecay301 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !6209
  %219 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !6210
  %index302 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %219, i32 0, i32 5, !dbg !6211
  %220 = load i32, i32* %index302, align 8, !dbg !6211
  %arraydecay303 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6212
  %arraydecay304 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !6213
  %221 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !6214
  %co305 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %221, i32 0, i32 0, !dbg !6215
  %arraydecay306 = getelementptr inbounds [3 x float], [3 x float]* %co305, i64 0, i64 0, !dbg !6214
  %arraydecay307 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6216
  %call308 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay301, i32 %220, [4 x float]* %arraydecay303, float* %arraydecay304, float* %arraydecay306, float* %arraydecay307), !dbg !6217
  store i32 %call308, i32* %c2, align 4, !dbg !6218
  %arraydecay309 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !6219
  %222 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !6220
  %index310 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %222, i32 0, i32 5, !dbg !6221
  %223 = load i32, i32* %index310, align 8, !dbg !6221
  %arraydecay311 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6222
  %arraydecay312 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !6223
  %224 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !6224
  %co313 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %224, i32 0, i32 0, !dbg !6225
  %arraydecay314 = getelementptr inbounds [3 x float], [3 x float]* %co313, i64 0, i64 0, !dbg !6224
  %arraydecay315 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6226
  %call316 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay309, i32 %223, [4 x float]* %arraydecay311, float* %arraydecay312, float* %arraydecay314, float* %arraydecay315), !dbg !6227
  store i32 %call316, i32* %c3, align 4, !dbg !6228
  %225 = load i32, i32* %c1, align 4, !dbg !6229
  %226 = load i32, i32* %c2, align 4, !dbg !6230
  %and317 = and i32 %225, %226, !dbg !6231
  %227 = load i32, i32* %c3, align 4, !dbg !6232
  %and318 = and i32 %and317, %227, !dbg !6233
  %conv319 = trunc i32 %and318 to i16, !dbg !6229
  store i16 %conv319, i16* %partclip, align 2, !dbg !6234
  %228 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6235
  %tobool320 = icmp ne %struct.VertRen* %228, null, !dbg !6235
  br i1 %tobool320, label %if.then321, label %if.end333, !dbg !6237

if.then321:                                       ; preds = %if.then290
  %arraydecay322 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !6238
  %229 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6240
  %index323 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %229, i32 0, i32 5, !dbg !6241
  %230 = load i32, i32* %index323, align 8, !dbg !6241
  %arraydecay324 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !6242
  %arraydecay325 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !6243
  %231 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6244
  %co326 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %231, i32 0, i32 0, !dbg !6245
  %arraydecay327 = getelementptr inbounds [3 x float], [3 x float]* %co326, i64 0, i64 0, !dbg !6244
  %arraydecay328 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !6246
  %call329 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay322, i32 %230, [4 x float]* %arraydecay324, float* %arraydecay325, float* %arraydecay327, float* %arraydecay328), !dbg !6247
  store i32 %call329, i32* %c4, align 4, !dbg !6248
  %232 = load i32, i32* %c4, align 4, !dbg !6249
  %233 = load i16, i16* %partclip, align 2, !dbg !6250
  %conv330 = zext i16 %233 to i32, !dbg !6250
  %and331 = and i32 %conv330, %232, !dbg !6250
  %conv332 = trunc i32 %and331 to i16, !dbg !6250
  store i16 %conv332, i16* %partclip, align 2, !dbg !6250
  br label %if.end333, !dbg !6251

if.end333:                                        ; preds = %if.then321, %if.then290
  %234 = load i16, i16* %partclip, align 2, !dbg !6252
  %conv334 = zext i16 %234 to i32, !dbg !6252
  %cmp335 = icmp eq i32 %conv334, 0, !dbg !6254
  br i1 %cmp335, label %if.then337, label %if.end410, !dbg !6255

if.then337:                                       ; preds = %if.end333
  %235 = load i16, i16* %env, align 2, !dbg !6256
  %tobool338 = icmp ne i16 %235, 0, !dbg !6256
  br i1 %tobool338, label %if.then339, label %if.else340, !dbg !6259

if.then339:                                       ; preds = %if.then337
  store i32 -1, i32* %zvlnr, align 4, !dbg !6260
  br label %if.end342, !dbg !6261

if.else340:                                       ; preds = %if.then337
  %236 = load i32, i32* %v, align 4, !dbg !6262
  %add341 = add nsw i32 %236, 1, !dbg !6263
  store i32 %add341, i32* %zvlnr, align 4, !dbg !6264
  br label %if.end342

if.end342:                                        ; preds = %if.else340, %if.then339
  %arraydecay343 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6265
  %call344 = call i32 @testclip(float* %arraydecay343), !dbg !6266
  store i32 %call344, i32* %c1, align 4, !dbg !6267
  %arraydecay345 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6268
  %call346 = call i32 @testclip(float* %arraydecay345), !dbg !6269
  store i32 %call346, i32* %c2, align 4, !dbg !6270
  %arraydecay347 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6271
  %call348 = call i32 @testclip(float* %arraydecay347), !dbg !6272
  store i32 %call348, i32* %c3, align 4, !dbg !6273
  %237 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6274
  %tobool349 = icmp ne %struct.VertRen* %237, null, !dbg !6274
  br i1 %tobool349, label %if.then350, label %if.end353, !dbg !6276

if.then350:                                       ; preds = %if.end342
  %arraydecay351 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !6277
  %call352 = call i32 @testclip(float* %arraydecay351), !dbg !6278
  store i32 %call352, i32* %c4, align 4, !dbg !6279
  br label %if.end353, !dbg !6280

if.end353:                                        ; preds = %if.then350, %if.end342
  store i32 0, i32* %zsample, align 4, !dbg !6281
  br label %for.cond354, !dbg !6283

for.cond354:                                      ; preds = %for.inc407, %if.end353
  %238 = load i32, i32* %zsample, align 4, !dbg !6284
  %239 = load i32, i32* %samples, align 4, !dbg !6286
  %cmp355 = icmp slt i32 %238, %239, !dbg !6287
  br i1 %cmp355, label %for.body357, label %for.end409, !dbg !6288

for.body357:                                      ; preds = %for.cond354
  %240 = load i32, i32* %zsample, align 4, !dbg !6289
  %idxprom358 = sext i32 %240 to i64, !dbg !6291
  %arrayidx359 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom358, !dbg !6291
  store %struct.ZSpan* %arrayidx359, %struct.ZSpan** %zspan, align 8, !dbg !6292
  %241 = load i16, i16* %wire, align 2, !dbg !6293
  %tobool360 = icmp ne i16 %241, 0, !dbg !6293
  br i1 %tobool360, label %if.then361, label %if.else376, !dbg !6295

if.then361:                                       ; preds = %for.body357
  %242 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6296
  %tobool362 = icmp ne %struct.VertRen* %242, null, !dbg !6296
  br i1 %tobool362, label %if.then363, label %if.else369, !dbg !6299

if.then363:                                       ; preds = %if.then361
  %243 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6300
  %244 = load i32, i32* %i, align 4, !dbg !6301
  %245 = load i32, i32* %zvlnr, align 4, !dbg !6302
  %246 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6303
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %246, i32 0, i32 8, !dbg !6304
  %247 = load i8, i8* %ec, align 2, !dbg !6304
  %conv364 = zext i8 %247 to i32, !dbg !6303
  %arraydecay365 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6305
  %arraydecay366 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6306
  %arraydecay367 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6307
  %arraydecay368 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !6308
  %248 = load i32, i32* %c1, align 4, !dbg !6309
  %249 = load i32, i32* %c2, align 4, !dbg !6310
  %250 = load i32, i32* %c3, align 4, !dbg !6311
  %251 = load i32, i32* %c4, align 4, !dbg !6312
  call void @zbufclipwire(%struct.ZSpan* %243, i32 %244, i32 %245, i32 %conv364, float* %arraydecay365, float* %arraydecay366, float* %arraydecay367, float* %arraydecay368, i32 %248, i32 %249, i32 %250, i32 %251), !dbg !6313
  br label %if.end375, !dbg !6313

if.else369:                                       ; preds = %if.then361
  %252 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6314
  %253 = load i32, i32* %i, align 4, !dbg !6315
  %254 = load i32, i32* %zvlnr, align 4, !dbg !6316
  %255 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6317
  %ec370 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %255, i32 0, i32 8, !dbg !6318
  %256 = load i8, i8* %ec370, align 2, !dbg !6318
  %conv371 = zext i8 %256 to i32, !dbg !6317
  %arraydecay372 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6319
  %arraydecay373 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6320
  %arraydecay374 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6321
  %257 = load i32, i32* %c1, align 4, !dbg !6322
  %258 = load i32, i32* %c2, align 4, !dbg !6323
  %259 = load i32, i32* %c3, align 4, !dbg !6324
  call void @zbufclipwire(%struct.ZSpan* %252, i32 %253, i32 %254, i32 %conv371, float* %arraydecay372, float* %arraydecay373, float* %arraydecay374, float* null, i32 %257, i32 %258, i32 %259, i32 0), !dbg !6325
  br label %if.end375

if.end375:                                        ; preds = %if.else369, %if.then363
  br label %if.end406, !dbg !6326

if.else376:                                       ; preds = %for.body357
  %260 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6327
  %tobool377 = icmp ne %struct.VertRen* %260, null, !dbg !6327
  br i1 %tobool377, label %land.lhs.true378, label %if.else388, !dbg !6330

land.lhs.true378:                                 ; preds = %if.else376
  %261 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6331
  %flag379 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %261, i32 0, i32 7, !dbg !6332
  %262 = load i8, i8* %flag379, align 1, !dbg !6332
  %conv380 = zext i8 %262 to i32, !dbg !6331
  %and381 = and i32 %conv380, 4, !dbg !6333
  %tobool382 = icmp ne i32 %and381, 0, !dbg !6333
  br i1 %tobool382, label %if.then383, label %if.else388, !dbg !6334

if.then383:                                       ; preds = %land.lhs.true378
  %263 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6335
  %264 = load i32, i32* %i, align 4, !dbg !6337
  %265 = load i32, i32* %zvlnr, align 4, !dbg !6338
  %arraydecay384 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6339
  %arraydecay385 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6340
  %arraydecay386 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6341
  %arraydecay387 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !6342
  %266 = load i32, i32* %c1, align 4, !dbg !6343
  %267 = load i32, i32* %c2, align 4, !dbg !6344
  %268 = load i32, i32* %c3, align 4, !dbg !6345
  %269 = load i32, i32* %c4, align 4, !dbg !6346
  call void @zbufclip4(%struct.ZSpan* %263, i32 %264, i32 %265, float* %arraydecay384, float* %arraydecay385, float* %arraydecay386, float* %arraydecay387, i32 %266, i32 %267, i32 %268, i32 %269), !dbg !6347
  br label %if.end405, !dbg !6348

if.else388:                                       ; preds = %land.lhs.true378, %if.else376
  %270 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6349
  %271 = load i32, i32* %i, align 4, !dbg !6351
  %272 = load i32, i32* %zvlnr, align 4, !dbg !6352
  %arraydecay389 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6353
  %arraydecay390 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !6354
  %arraydecay391 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6355
  %273 = load i32, i32* %c1, align 4, !dbg !6356
  %274 = load i32, i32* %c2, align 4, !dbg !6357
  %275 = load i32, i32* %c3, align 4, !dbg !6358
  call void @zbufclip(%struct.ZSpan* %270, i32 %271, i32 %272, float* %arraydecay389, float* %arraydecay390, float* %arraydecay391, i32 %273, i32 %274, i32 %275), !dbg !6359
  %276 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !6360
  %tobool392 = icmp ne %struct.VertRen* %276, null, !dbg !6360
  br i1 %tobool392, label %if.then393, label %if.end404, !dbg !6362

if.then393:                                       ; preds = %if.else388
  %277 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6363
  %278 = load i32, i32* %i, align 4, !dbg !6364
  %279 = load i16, i16* %env, align 2, !dbg !6365
  %conv394 = sext i16 %279 to i32, !dbg !6366
  %tobool395 = icmp ne i32 %conv394, 0, !dbg !6366
  br i1 %tobool395, label %cond.true396, label %cond.false397, !dbg !6366

cond.true396:                                     ; preds = %if.then393
  %280 = load i32, i32* %zvlnr, align 4, !dbg !6367
  br label %cond.end399, !dbg !6366

cond.false397:                                    ; preds = %if.then393
  %281 = load i32, i32* %zvlnr, align 4, !dbg !6368
  %add398 = add nsw i32 %281, 134217728, !dbg !6369
  br label %cond.end399, !dbg !6366

cond.end399:                                      ; preds = %cond.false397, %cond.true396
  %cond400 = phi i32 [ %280, %cond.true396 ], [ %add398, %cond.false397 ], !dbg !6366
  %arraydecay401 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !6370
  %arraydecay402 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !6371
  %arraydecay403 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !6372
  %282 = load i32, i32* %c1, align 4, !dbg !6373
  %283 = load i32, i32* %c3, align 4, !dbg !6374
  %284 = load i32, i32* %c4, align 4, !dbg !6375
  call void @zbufclip(%struct.ZSpan* %277, i32 %278, i32 %cond400, float* %arraydecay401, float* %arraydecay402, float* %arraydecay403, i32 %282, i32 %283, i32 %284), !dbg !6376
  br label %if.end404, !dbg !6376

if.end404:                                        ; preds = %cond.end399, %if.else388
  br label %if.end405

if.end405:                                        ; preds = %if.end404, %if.then383
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.end375
  br label %for.inc407, !dbg !6377

for.inc407:                                       ; preds = %if.end406
  %285 = load i32, i32* %zsample, align 4, !dbg !6378
  %inc408 = add nsw i32 %285, 1, !dbg !6378
  store i32 %inc408, i32* %zsample, align 4, !dbg !6378
  br label %for.cond354, !dbg !6379, !llvm.loop !6380

for.end409:                                       ; preds = %for.cond354
  br label %if.end410, !dbg !6382

if.end410:                                        ; preds = %for.end409, %if.end333
  br label %if.end411, !dbg !6383

if.end411:                                        ; preds = %if.end410, %land.lhs.true286, %if.end281
  br label %for.inc412, !dbg !6384

for.inc412:                                       ; preds = %if.end411
  %286 = load i32, i32* %v, align 4, !dbg !6385
  %inc413 = add nsw i32 %286, 1, !dbg !6385
  store i32 %inc413, i32* %v, align 4, !dbg !6385
  br label %for.cond206, !dbg !6386, !llvm.loop !6387

for.end414:                                       ; preds = %for.cond206
  br label %for.inc415, !dbg !6389

for.inc415:                                       ; preds = %for.end414, %if.then203, %if.then183, %if.then175
  %287 = load i32, i32* %i, align 4, !dbg !6390
  %inc416 = add nsw i32 %287, 1, !dbg !6390
  store i32 %inc416, i32* %i, align 4, !dbg !6390
  %288 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6391
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %288, i32 0, i32 0, !dbg !6392
  %289 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !6392
  store %struct.ObjectInstanceRen* %289, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6393
  br label %for.cond165, !dbg !6394, !llvm.loop !6395

for.end417:                                       ; preds = %for.cond165
  %290 = load i16, i16* %zmaskpass, align 2, !dbg !6397
  %tobool418 = icmp ne i16 %290, 0, !dbg !6397
  br i1 %tobool418, label %if.then419, label %if.end462, !dbg !6399

if.then419:                                       ; preds = %for.end417
  store i32 0, i32* %zsample, align 4, !dbg !6400
  br label %for.cond420, !dbg !6403

for.cond420:                                      ; preds = %for.inc459, %if.then419
  %291 = load i32, i32* %zsample, align 4, !dbg !6404
  %292 = load i32, i32* %samples, align 4, !dbg !6406
  %cmp421 = icmp slt i32 %291, %292, !dbg !6407
  br i1 %cmp421, label %for.body423, label %for.end461, !dbg !6408

for.body423:                                      ; preds = %for.cond420
  %293 = load i32, i32* %zsample, align 4, !dbg !6409
  %idxprom424 = sext i32 %293 to i64, !dbg !6411
  %arrayidx425 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom424, !dbg !6411
  store %struct.ZSpan* %arrayidx425, %struct.ZSpan** %zspan, align 8, !dbg !6412
  %294 = load i16, i16* %neg_zmask, align 2, !dbg !6413
  %tobool426 = icmp ne i16 %294, 0, !dbg !6413
  br i1 %tobool426, label %if.then427, label %if.else453, !dbg !6415

if.then427:                                       ; preds = %for.body423
  %295 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6416
  %rectz428 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %295, i32 0, i32 16, !dbg !6418
  %296 = load i32*, i32** %rectz428, align 8, !dbg !6418
  %297 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6419
  %rectmask429 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %297, i32 0, i32 21, !dbg !6420
  store i32* %296, i32** %rectmask429, align 8, !dbg !6421
  %298 = load i32, i32* %zsample, align 4, !dbg !6422
  %299 = load i32, i32* %samples, align 4, !dbg !6424
  %sub430 = sub nsw i32 %299, 1, !dbg !6425
  %cmp431 = icmp eq i32 %298, %sub430, !dbg !6426
  br i1 %cmp431, label %if.then433, label %if.else436, !dbg !6427

if.then433:                                       ; preds = %if.then427
  %300 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6428
  %rectz434 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %300, i32 0, i32 6, !dbg !6429
  %301 = load i32*, i32** %rectz434, align 8, !dbg !6429
  %302 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6430
  %rectz435 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %302, i32 0, i32 16, !dbg !6431
  store i32* %301, i32** %rectz435, align 8, !dbg !6432
  br label %if.end445, !dbg !6430

if.else436:                                       ; preds = %if.then427
  %303 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6433
  %304 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6434
  %rectx437 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %304, i32 0, i32 14, !dbg !6435
  %305 = load i32, i32* %rectx437, align 8, !dbg !6435
  %conv438 = sext i32 %305 to i64, !dbg !6434
  %mul439 = mul i64 4, %conv438, !dbg !6436
  %306 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6437
  %recty440 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %306, i32 0, i32 15, !dbg !6438
  %307 = load i32, i32* %recty440, align 4, !dbg !6438
  %conv441 = sext i32 %307 to i64, !dbg !6437
  %mul442 = mul i64 %mul439, %conv441, !dbg !6439
  %call443 = call i8* %303(i64 %mul442, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !6433
  %308 = bitcast i8* %call443 to i32*, !dbg !6433
  %309 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6440
  %rectz444 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %309, i32 0, i32 16, !dbg !6441
  store i32* %308, i32** %rectz444, align 8, !dbg !6442
  br label %if.end445

if.end445:                                        ; preds = %if.else436, %if.then433
  %310 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6443
  %rectz446 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %310, i32 0, i32 16, !dbg !6444
  %311 = load i32*, i32** %rectz446, align 8, !dbg !6444
  %312 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6445
  %rectx447 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %312, i32 0, i32 14, !dbg !6446
  %313 = load i32, i32* %rectx447, align 8, !dbg !6446
  %314 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6447
  %recty448 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %314, i32 0, i32 15, !dbg !6448
  %315 = load i32, i32* %recty448, align 4, !dbg !6448
  call void @fillrect(i32* %311, i32 %313, i32 %315, i32 2147483647), !dbg !6449
  %316 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6450
  %rectmask449 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %316, i32 0, i32 21, !dbg !6451
  %317 = load i32*, i32** %rectmask449, align 8, !dbg !6451
  %318 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6452
  %rectp450 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %318, i32 0, i32 19, !dbg !6453
  %319 = load i32*, i32** %rectp450, align 8, !dbg !6453
  %320 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6454
  %rectx451 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %320, i32 0, i32 14, !dbg !6455
  %321 = load i32, i32* %rectx451, align 8, !dbg !6455
  %322 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6456
  %recty452 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %322, i32 0, i32 15, !dbg !6457
  %323 = load i32, i32* %recty452, align 4, !dbg !6457
  call void @zmask_rect(i32* %317, i32* %319, i32 %321, i32 %323, i32 1), !dbg !6458
  br label %if.end458, !dbg !6459

if.else453:                                       ; preds = %for.body423
  %324 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6460
  %rectz454 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %324, i32 0, i32 16, !dbg !6461
  %325 = load i32*, i32** %rectz454, align 8, !dbg !6461
  %326 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6462
  %rectp455 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %326, i32 0, i32 19, !dbg !6463
  %327 = load i32*, i32** %rectp455, align 8, !dbg !6463
  %328 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6464
  %rectx456 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %328, i32 0, i32 14, !dbg !6465
  %329 = load i32, i32* %rectx456, align 8, !dbg !6465
  %330 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6466
  %recty457 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %330, i32 0, i32 15, !dbg !6467
  %331 = load i32, i32* %recty457, align 4, !dbg !6467
  call void @zmask_rect(i32* %325, i32* %327, i32 %329, i32 %331, i32 0), !dbg !6468
  br label %if.end458

if.end458:                                        ; preds = %if.else453, %if.end445
  br label %for.inc459, !dbg !6469

for.inc459:                                       ; preds = %if.end458
  %332 = load i32, i32* %zsample, align 4, !dbg !6470
  %inc460 = add nsw i32 %332, 1, !dbg !6470
  store i32 %inc460, i32* %zsample, align 4, !dbg !6470
  br label %for.cond420, !dbg !6471, !llvm.loop !6472

for.end461:                                       ; preds = %for.cond420
  br label %if.end462, !dbg !6474

if.end462:                                        ; preds = %for.end461, %for.end417
  br label %for.inc463, !dbg !6475

for.inc463:                                       ; preds = %if.end462
  %333 = load i16, i16* %zmaskpass, align 2, !dbg !6476
  %dec = add i16 %333, -1, !dbg !6476
  store i16 %dec, i16* %zmaskpass, align 2, !dbg !6476
  br label %for.cond143, !dbg !6477, !llvm.loop !6478

for.end464:                                       ; preds = %for.cond143
  store i32 0, i32* %zsample, align 4, !dbg !6480
  br label %for.cond465, !dbg !6482

for.cond465:                                      ; preds = %for.inc490, %for.end464
  %334 = load i32, i32* %zsample, align 4, !dbg !6483
  %335 = load i32, i32* %samples, align 4, !dbg !6485
  %cmp466 = icmp slt i32 %334, %335, !dbg !6486
  br i1 %cmp466, label %for.body468, label %for.end492, !dbg !6487

for.body468:                                      ; preds = %for.cond465
  %336 = load i32, i32* %zsample, align 4, !dbg !6488
  %idxprom469 = sext i32 %336 to i64, !dbg !6490
  %arrayidx470 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom469, !dbg !6490
  store %struct.ZSpan* %arrayidx470, %struct.ZSpan** %zspan, align 8, !dbg !6491
  %337 = load void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)*, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)** %fillfunc.addr, align 8, !dbg !6492
  %tobool471 = icmp ne void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)* %337, null, !dbg !6492
  br i1 %tobool471, label %if.then472, label %if.end476, !dbg !6494

if.then472:                                       ; preds = %for.body468
  %338 = load void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)*, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)** %fillfunc.addr, align 8, !dbg !6495
  %339 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6496
  %340 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6497
  %341 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6498
  %sample473 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %341, i32 0, i32 19, !dbg !6499
  %342 = load i16, i16* %sample473, align 8, !dbg !6499
  %conv474 = sext i16 %342 to i32, !dbg !6498
  %343 = load i32, i32* %zsample, align 4, !dbg !6500
  %add475 = add nsw i32 %conv474, %343, !dbg !6501
  %344 = load i8*, i8** %data.addr, align 8, !dbg !6502
  call void %338(%struct.RenderPart* %339, %struct.ZSpan* %340, i32 %add475, i8* %344), !dbg !6495
  br label %if.end476, !dbg !6495

if.end476:                                        ; preds = %if.then472, %for.body468
  %345 = load i32, i32* %zsample, align 4, !dbg !6503
  %346 = load i32, i32* %samples, align 4, !dbg !6505
  %sub477 = sub nsw i32 %346, 1, !dbg !6506
  %cmp478 = icmp ne i32 %345, %sub477, !dbg !6507
  br i1 %cmp478, label %if.then480, label %if.end489, !dbg !6508

if.then480:                                       ; preds = %if.end476
  %347 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6509
  %348 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6511
  %rectz481 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %348, i32 0, i32 16, !dbg !6512
  %349 = load i32*, i32** %rectz481, align 8, !dbg !6512
  %350 = bitcast i32* %349 to i8*, !dbg !6511
  call void %347(i8* %350), !dbg !6509
  %351 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6513
  %352 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6514
  %rectp482 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %352, i32 0, i32 19, !dbg !6515
  %353 = load i32*, i32** %rectp482, align 8, !dbg !6515
  %354 = bitcast i32* %353 to i8*, !dbg !6514
  call void %351(i8* %354), !dbg !6513
  %355 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6516
  %356 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6517
  %recto483 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %356, i32 0, i32 20, !dbg !6518
  %357 = load i32*, i32** %recto483, align 8, !dbg !6518
  %358 = bitcast i32* %357 to i8*, !dbg !6517
  call void %355(i8* %358), !dbg !6516
  %359 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6519
  %rectmask484 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %359, i32 0, i32 21, !dbg !6521
  %360 = load i32*, i32** %rectmask484, align 8, !dbg !6521
  %tobool485 = icmp ne i32* %360, null, !dbg !6519
  br i1 %tobool485, label %if.then486, label %if.end488, !dbg !6522

if.then486:                                       ; preds = %if.then480
  %361 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6523
  %362 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6524
  %rectmask487 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %362, i32 0, i32 21, !dbg !6525
  %363 = load i32*, i32** %rectmask487, align 8, !dbg !6525
  %364 = bitcast i32* %363 to i8*, !dbg !6524
  call void %361(i8* %364), !dbg !6523
  br label %if.end488, !dbg !6523

if.end488:                                        ; preds = %if.then486, %if.then480
  br label %if.end489, !dbg !6526

if.end489:                                        ; preds = %if.end488, %if.end476
  %365 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !6527
  call void @zbuf_free_span(%struct.ZSpan* %365), !dbg !6528
  br label %for.inc490, !dbg !6529

for.inc490:                                       ; preds = %if.end489
  %366 = load i32, i32* %zsample, align 4, !dbg !6530
  %inc491 = add nsw i32 %366, 1, !dbg !6530
  store i32 %inc491, i32* %zsample, align 4, !dbg !6530
  br label %for.cond465, !dbg !6531, !llvm.loop !6532

for.end492:                                       ; preds = %for.cond465
  ret void, !dbg !6534
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffer_part_bounds(i32 %winx, i32 %winy, %struct.RenderPart* %pa, float* %bounds) #0 !dbg !6535 {
entry:
  %winx.addr = alloca i32, align 4
  %winy.addr = alloca i32, align 4
  %pa.addr = alloca %struct.RenderPart*, align 8
  %bounds.addr = alloca float*, align 8
  store i32 %winx, i32* %winx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winx.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  store i32 %winy, i32* %winy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winy.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  store float* %bounds, float** %bounds.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bounds.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6546
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 13, !dbg !6547
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !6548
  %1 = load i32, i32* %xmin, align 8, !dbg !6548
  %mul = mul nsw i32 2, %1, !dbg !6549
  %2 = load i32, i32* %winx.addr, align 4, !dbg !6550
  %sub = sub nsw i32 %mul, %2, !dbg !6551
  %sub1 = sub nsw i32 %sub, 1, !dbg !6552
  %conv = sitofp i32 %sub1 to float, !dbg !6553
  %3 = load i32, i32* %winx.addr, align 4, !dbg !6554
  %conv2 = sitofp i32 %3 to float, !dbg !6555
  %div = fdiv float %conv, %conv2, !dbg !6556
  %4 = load float*, float** %bounds.addr, align 8, !dbg !6557
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !6557
  store float %div, float* %arrayidx, align 4, !dbg !6558
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6559
  %disprect3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 13, !dbg !6560
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect3, i32 0, i32 1, !dbg !6561
  %6 = load i32, i32* %xmax, align 4, !dbg !6561
  %mul4 = mul nsw i32 2, %6, !dbg !6562
  %7 = load i32, i32* %winx.addr, align 4, !dbg !6563
  %sub5 = sub nsw i32 %mul4, %7, !dbg !6564
  %add = add nsw i32 %sub5, 1, !dbg !6565
  %conv6 = sitofp i32 %add to float, !dbg !6566
  %8 = load i32, i32* %winx.addr, align 4, !dbg !6567
  %conv7 = sitofp i32 %8 to float, !dbg !6568
  %div8 = fdiv float %conv6, %conv7, !dbg !6569
  %9 = load float*, float** %bounds.addr, align 8, !dbg !6570
  %arrayidx9 = getelementptr inbounds float, float* %9, i64 1, !dbg !6570
  store float %div8, float* %arrayidx9, align 4, !dbg !6571
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6572
  %disprect10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 13, !dbg !6573
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect10, i32 0, i32 2, !dbg !6574
  %11 = load i32, i32* %ymin, align 8, !dbg !6574
  %mul11 = mul nsw i32 2, %11, !dbg !6575
  %12 = load i32, i32* %winy.addr, align 4, !dbg !6576
  %sub12 = sub nsw i32 %mul11, %12, !dbg !6577
  %sub13 = sub nsw i32 %sub12, 1, !dbg !6578
  %conv14 = sitofp i32 %sub13 to float, !dbg !6579
  %13 = load i32, i32* %winy.addr, align 4, !dbg !6580
  %conv15 = sitofp i32 %13 to float, !dbg !6581
  %div16 = fdiv float %conv14, %conv15, !dbg !6582
  %14 = load float*, float** %bounds.addr, align 8, !dbg !6583
  %arrayidx17 = getelementptr inbounds float, float* %14, i64 2, !dbg !6583
  store float %div16, float* %arrayidx17, align 4, !dbg !6584
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6585
  %disprect18 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 13, !dbg !6586
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect18, i32 0, i32 3, !dbg !6587
  %16 = load i32, i32* %ymax, align 4, !dbg !6587
  %mul19 = mul nsw i32 2, %16, !dbg !6588
  %17 = load i32, i32* %winy.addr, align 4, !dbg !6589
  %sub20 = sub nsw i32 %mul19, %17, !dbg !6590
  %add21 = add nsw i32 %sub20, 1, !dbg !6591
  %conv22 = sitofp i32 %add21 to float, !dbg !6592
  %18 = load i32, i32* %winy.addr, align 4, !dbg !6593
  %conv23 = sitofp i32 %18 to float, !dbg !6594
  %div24 = fdiv float %conv22, %conv23, !dbg !6595
  %19 = load float*, float** %bounds.addr, align 8, !dbg !6596
  %arrayidx25 = getelementptr inbounds float, float* %19, i64 3, !dbg !6596
  store float %div24, float* %arrayidx25, align 4, !dbg !6597
  ret void, !dbg !6598
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffillGLinv4(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !6599 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %zverg = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %z0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %rectoofs = alloca i32*, align 8
  %ro = alloca i32*, align 8
  %rectpofs = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rectmaskofs = alloca i32*, align 8
  %rm = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %rectzofs = alloca i32*, align 8
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  %intzverg = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !6606, metadata !DIExpression()), !dbg !6607
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6608, metadata !DIExpression()), !dbg !6609
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !6616, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !6618, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !6620, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.declare(metadata double* %zverg, metadata !6622, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.declare(metadata float* %x0, metadata !6624, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.declare(metadata float* %y0, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata float* %z0, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata float* %x1, metadata !6630, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.declare(metadata float* %y1, metadata !6632, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.declare(metadata float* %z1, metadata !6634, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.declare(metadata float* %x2, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.declare(metadata float* %y2, metadata !6638, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.declare(metadata float* %z2, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.declare(metadata float** %span1, metadata !6644, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.declare(metadata float** %span2, metadata !6646, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.declare(metadata i32** %rectoofs, metadata !6648, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.declare(metadata i32** %rectpofs, metadata !6652, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !6654, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.declare(metadata i32** %rectmaskofs, metadata !6656, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.declare(metadata i32** %rm, metadata !6659, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6663, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i32** %rectzofs, metadata !6673, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !6675, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !6677, metadata !DIExpression()), !dbg !6678
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6679
  call void @zbuf_init_span(%struct.ZSpan* %0), !dbg !6680
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6681
  %2 = load float*, float** %v1.addr, align 8, !dbg !6682
  %3 = load float*, float** %v2.addr, align 8, !dbg !6683
  call void @zbuf_add_to_span(%struct.ZSpan* %1, float* %2, float* %3), !dbg !6684
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6685
  %5 = load float*, float** %v2.addr, align 8, !dbg !6686
  %6 = load float*, float** %v3.addr, align 8, !dbg !6687
  call void @zbuf_add_to_span(%struct.ZSpan* %4, float* %5, float* %6), !dbg !6688
  %7 = load float*, float** %v4.addr, align 8, !dbg !6689
  %tobool = icmp ne float* %7, null, !dbg !6689
  br i1 %tobool, label %if.then, label %if.else, !dbg !6691

if.then:                                          ; preds = %entry
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6692
  %9 = load float*, float** %v3.addr, align 8, !dbg !6694
  %10 = load float*, float** %v4.addr, align 8, !dbg !6695
  call void @zbuf_add_to_span(%struct.ZSpan* %8, float* %9, float* %10), !dbg !6696
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6697
  %12 = load float*, float** %v4.addr, align 8, !dbg !6698
  %13 = load float*, float** %v1.addr, align 8, !dbg !6699
  call void @zbuf_add_to_span(%struct.ZSpan* %11, float* %12, float* %13), !dbg !6700
  br label %if.end, !dbg !6701

if.else:                                          ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6702
  %15 = load float*, float** %v3.addr, align 8, !dbg !6703
  %16 = load float*, float** %v1.addr, align 8, !dbg !6704
  call void @zbuf_add_to_span(%struct.ZSpan* %14, float* %15, float* %16), !dbg !6705
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6706
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 8, !dbg !6708
  %18 = load float*, float** %minp2, align 8, !dbg !6708
  %cmp = icmp eq float* %18, null, !dbg !6709
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !6710

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6711
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 9, !dbg !6712
  %20 = load float*, float** %maxp2, align 8, !dbg !6712
  %cmp1 = icmp eq float* %20, null, !dbg !6713
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6714

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !6715

if.end3:                                          ; preds = %lor.lhs.false
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6716
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 2, !dbg !6718
  %22 = load i32, i32* %miny1, align 8, !dbg !6718
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6719
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 4, !dbg !6720
  %24 = load i32, i32* %miny2, align 8, !dbg !6720
  %cmp4 = icmp slt i32 %22, %24, !dbg !6721
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !6722

if.then5:                                         ; preds = %if.end3
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6723
  %miny26 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 4, !dbg !6724
  %26 = load i32, i32* %miny26, align 8, !dbg !6724
  store i32 %26, i32* %my0, align 4, !dbg !6725
  br label %if.end9, !dbg !6726

if.else7:                                         ; preds = %if.end3
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6727
  %miny18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 2, !dbg !6728
  %28 = load i32, i32* %miny18, align 8, !dbg !6728
  store i32 %28, i32* %my0, align 4, !dbg !6729
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6730
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 3, !dbg !6732
  %30 = load i32, i32* %maxy1, align 4, !dbg !6732
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6733
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 5, !dbg !6734
  %32 = load i32, i32* %maxy2, align 4, !dbg !6734
  %cmp10 = icmp sgt i32 %30, %32, !dbg !6735
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !6736

if.then11:                                        ; preds = %if.end9
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6737
  %maxy212 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 5, !dbg !6738
  %34 = load i32, i32* %maxy212, align 4, !dbg !6738
  store i32 %34, i32* %my2, align 4, !dbg !6739
  br label %if.end15, !dbg !6740

if.else13:                                        ; preds = %if.end9
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6741
  %maxy114 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %35, i32 0, i32 3, !dbg !6742
  %36 = load i32, i32* %maxy114, align 4, !dbg !6742
  store i32 %36, i32* %my2, align 4, !dbg !6743
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %37 = load i32, i32* %my2, align 4, !dbg !6744
  %38 = load i32, i32* %my0, align 4, !dbg !6746
  %cmp16 = icmp slt i32 %37, %38, !dbg !6747
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6748

if.then17:                                        ; preds = %if.end15
  br label %for.end, !dbg !6749

if.end18:                                         ; preds = %if.end15
  %39 = load float*, float** %v1.addr, align 8, !dbg !6750
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !6750
  %40 = load float, float* %arrayidx, align 4, !dbg !6750
  %41 = load float*, float** %v2.addr, align 8, !dbg !6751
  %arrayidx19 = getelementptr inbounds float, float* %41, i64 0, !dbg !6751
  %42 = load float, float* %arrayidx19, align 4, !dbg !6751
  %sub = fsub float %40, %42, !dbg !6752
  store float %sub, float* %x1, align 4, !dbg !6753
  %43 = load float*, float** %v2.addr, align 8, !dbg !6754
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !6754
  %44 = load float, float* %arrayidx20, align 4, !dbg !6754
  %45 = load float*, float** %v3.addr, align 8, !dbg !6755
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 0, !dbg !6755
  %46 = load float, float* %arrayidx21, align 4, !dbg !6755
  %sub22 = fsub float %44, %46, !dbg !6756
  store float %sub22, float* %x2, align 4, !dbg !6757
  %47 = load float*, float** %v1.addr, align 8, !dbg !6758
  %arrayidx23 = getelementptr inbounds float, float* %47, i64 1, !dbg !6758
  %48 = load float, float* %arrayidx23, align 4, !dbg !6758
  %49 = load float*, float** %v2.addr, align 8, !dbg !6759
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !6759
  %50 = load float, float* %arrayidx24, align 4, !dbg !6759
  %sub25 = fsub float %48, %50, !dbg !6760
  store float %sub25, float* %y1, align 4, !dbg !6761
  %51 = load float*, float** %v2.addr, align 8, !dbg !6762
  %arrayidx26 = getelementptr inbounds float, float* %51, i64 1, !dbg !6762
  %52 = load float, float* %arrayidx26, align 4, !dbg !6762
  %53 = load float*, float** %v3.addr, align 8, !dbg !6763
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 1, !dbg !6763
  %54 = load float, float* %arrayidx27, align 4, !dbg !6763
  %sub28 = fsub float %52, %54, !dbg !6764
  store float %sub28, float* %y2, align 4, !dbg !6765
  %55 = load float*, float** %v1.addr, align 8, !dbg !6766
  %arrayidx29 = getelementptr inbounds float, float* %55, i64 2, !dbg !6766
  %56 = load float, float* %arrayidx29, align 4, !dbg !6766
  %57 = load float*, float** %v2.addr, align 8, !dbg !6767
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !6767
  %58 = load float, float* %arrayidx30, align 4, !dbg !6767
  %sub31 = fsub float %56, %58, !dbg !6768
  store float %sub31, float* %z1, align 4, !dbg !6769
  %59 = load float*, float** %v2.addr, align 8, !dbg !6770
  %arrayidx32 = getelementptr inbounds float, float* %59, i64 2, !dbg !6770
  %60 = load float, float* %arrayidx32, align 4, !dbg !6770
  %61 = load float*, float** %v3.addr, align 8, !dbg !6771
  %arrayidx33 = getelementptr inbounds float, float* %61, i64 2, !dbg !6771
  %62 = load float, float* %arrayidx33, align 4, !dbg !6771
  %sub34 = fsub float %60, %62, !dbg !6772
  store float %sub34, float* %z2, align 4, !dbg !6773
  %63 = load float, float* %y1, align 4, !dbg !6774
  %64 = load float, float* %z2, align 4, !dbg !6775
  %mul = fmul float %63, %64, !dbg !6776
  %65 = load float, float* %z1, align 4, !dbg !6777
  %66 = load float, float* %y2, align 4, !dbg !6778
  %mul35 = fmul float %65, %66, !dbg !6779
  %sub36 = fsub float %mul, %mul35, !dbg !6780
  store float %sub36, float* %x0, align 4, !dbg !6781
  %67 = load float, float* %z1, align 4, !dbg !6782
  %68 = load float, float* %x2, align 4, !dbg !6783
  %mul37 = fmul float %67, %68, !dbg !6784
  %69 = load float, float* %x1, align 4, !dbg !6785
  %70 = load float, float* %z2, align 4, !dbg !6786
  %mul38 = fmul float %69, %70, !dbg !6787
  %sub39 = fsub float %mul37, %mul38, !dbg !6788
  store float %sub39, float* %y0, align 4, !dbg !6789
  %71 = load float, float* %x1, align 4, !dbg !6790
  %72 = load float, float* %y2, align 4, !dbg !6791
  %mul40 = fmul float %71, %72, !dbg !6792
  %73 = load float, float* %y1, align 4, !dbg !6793
  %74 = load float, float* %x2, align 4, !dbg !6794
  %mul41 = fmul float %73, %74, !dbg !6795
  %sub42 = fsub float %mul40, %mul41, !dbg !6796
  store float %sub42, float* %z0, align 4, !dbg !6797
  %75 = load float, float* %z0, align 4, !dbg !6798
  %cmp43 = fcmp oeq float %75, 0.000000e+00, !dbg !6800
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !6801

if.then44:                                        ; preds = %if.end18
  br label %for.end, !dbg !6802

if.end45:                                         ; preds = %if.end18
  %76 = load float, float* %x0, align 4, !dbg !6803
  %77 = load float*, float** %v1.addr, align 8, !dbg !6804
  %arrayidx46 = getelementptr inbounds float, float* %77, i64 0, !dbg !6804
  %78 = load float, float* %arrayidx46, align 4, !dbg !6804
  %mul47 = fmul float %76, %78, !dbg !6805
  %79 = load float, float* %y0, align 4, !dbg !6806
  %80 = load float*, float** %v1.addr, align 8, !dbg !6807
  %arrayidx48 = getelementptr inbounds float, float* %80, i64 1, !dbg !6807
  %81 = load float, float* %arrayidx48, align 4, !dbg !6807
  %mul49 = fmul float %79, %81, !dbg !6808
  %add = fadd float %mul47, %mul49, !dbg !6809
  %82 = load float, float* %z0, align 4, !dbg !6810
  %div = fdiv float %add, %82, !dbg !6811
  %83 = load float*, float** %v1.addr, align 8, !dbg !6812
  %arrayidx50 = getelementptr inbounds float, float* %83, i64 2, !dbg !6812
  %84 = load float, float* %arrayidx50, align 4, !dbg !6812
  %add51 = fadd float %div, %84, !dbg !6813
  store float %add51, float* %xx1, align 4, !dbg !6814
  %85 = load float, float* %x0, align 4, !dbg !6815
  %conv = fpext float %85 to double, !dbg !6816
  %fneg = fneg double %conv, !dbg !6817
  %86 = load float, float* %z0, align 4, !dbg !6818
  %conv52 = fpext float %86 to double, !dbg !6819
  %div53 = fdiv double %fneg, %conv52, !dbg !6820
  store double %div53, double* %zxd, align 8, !dbg !6821
  %87 = load float, float* %y0, align 4, !dbg !6822
  %conv54 = fpext float %87 to double, !dbg !6823
  %fneg55 = fneg double %conv54, !dbg !6824
  %88 = load float, float* %z0, align 4, !dbg !6825
  %conv56 = fpext float %88 to double, !dbg !6826
  %div57 = fdiv double %fneg55, %conv56, !dbg !6827
  store double %div57, double* %zyd, align 8, !dbg !6828
  %89 = load i32, i32* %my2, align 4, !dbg !6829
  %conv58 = sitofp i32 %89 to double, !dbg !6830
  %90 = load double, double* %zyd, align 8, !dbg !6831
  %mul59 = fmul double %conv58, %90, !dbg !6832
  %91 = load float, float* %xx1, align 4, !dbg !6833
  %conv60 = fpext float %91 to double, !dbg !6834
  %add61 = fadd double %mul59, %conv60, !dbg !6835
  store double %add61, double* %zy0, align 8, !dbg !6836
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6837
  %rectx62 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 0, !dbg !6838
  %93 = load i32, i32* %rectx62, align 8, !dbg !6838
  store i32 %93, i32* %rectx, align 4, !dbg !6839
  %94 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6840
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %94, i32 0, i32 16, !dbg !6841
  %95 = load i32*, i32** %rectz, align 8, !dbg !6841
  %96 = load i32, i32* %rectx, align 4, !dbg !6842
  %97 = load i32, i32* %my2, align 4, !dbg !6843
  %mul63 = mul nsw i32 %96, %97, !dbg !6844
  %idx.ext = sext i32 %mul63 to i64, !dbg !6845
  %add.ptr = getelementptr inbounds i32, i32* %95, i64 %idx.ext, !dbg !6845
  store i32* %add.ptr, i32** %rectzofs, align 8, !dbg !6846
  %98 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6847
  %rectp = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %98, i32 0, i32 19, !dbg !6848
  %99 = load i32*, i32** %rectp, align 8, !dbg !6848
  %100 = load i32, i32* %rectx, align 4, !dbg !6849
  %101 = load i32, i32* %my2, align 4, !dbg !6850
  %mul64 = mul nsw i32 %100, %101, !dbg !6851
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !6852
  %add.ptr66 = getelementptr inbounds i32, i32* %99, i64 %idx.ext65, !dbg !6852
  store i32* %add.ptr66, i32** %rectpofs, align 8, !dbg !6853
  %102 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6854
  %recto = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %102, i32 0, i32 20, !dbg !6855
  %103 = load i32*, i32** %recto, align 8, !dbg !6855
  %104 = load i32, i32* %rectx, align 4, !dbg !6856
  %105 = load i32, i32* %my2, align 4, !dbg !6857
  %mul67 = mul nsw i32 %104, %105, !dbg !6858
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !6859
  %add.ptr69 = getelementptr inbounds i32, i32* %103, i64 %idx.ext68, !dbg !6859
  store i32* %add.ptr69, i32** %rectoofs, align 8, !dbg !6860
  %106 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6861
  %rectmask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %106, i32 0, i32 21, !dbg !6862
  %107 = load i32*, i32** %rectmask, align 8, !dbg !6862
  %108 = load i32, i32* %rectx, align 4, !dbg !6863
  %109 = load i32, i32* %my2, align 4, !dbg !6864
  %mul70 = mul nsw i32 %108, %109, !dbg !6865
  %idx.ext71 = sext i32 %mul70 to i64, !dbg !6866
  %add.ptr72 = getelementptr inbounds i32, i32* %107, i64 %idx.ext71, !dbg !6866
  store i32* %add.ptr72, i32** %rectmaskofs, align 8, !dbg !6867
  %110 = load i32, i32* %my0, align 4, !dbg !6868
  %111 = load i32, i32* %my2, align 4, !dbg !6869
  %add73 = add nsw i32 %110, %111, !dbg !6870
  %div74 = sdiv i32 %add73, 2, !dbg !6871
  store i32 %div74, i32* %sn1, align 4, !dbg !6872
  %112 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6873
  %span175 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %112, i32 0, i32 10, !dbg !6875
  %113 = load float*, float** %span175, align 8, !dbg !6875
  %114 = load i32, i32* %sn1, align 4, !dbg !6876
  %idxprom = sext i32 %114 to i64, !dbg !6873
  %arrayidx76 = getelementptr inbounds float, float* %113, i64 %idxprom, !dbg !6873
  %115 = load float, float* %arrayidx76, align 4, !dbg !6873
  %116 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6877
  %span277 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %116, i32 0, i32 11, !dbg !6878
  %117 = load float*, float** %span277, align 8, !dbg !6878
  %118 = load i32, i32* %sn1, align 4, !dbg !6879
  %idxprom78 = sext i32 %118 to i64, !dbg !6877
  %arrayidx79 = getelementptr inbounds float, float* %117, i64 %idxprom78, !dbg !6877
  %119 = load float, float* %arrayidx79, align 4, !dbg !6877
  %cmp80 = fcmp olt float %115, %119, !dbg !6880
  br i1 %cmp80, label %if.then82, label %if.else89, !dbg !6881

if.then82:                                        ; preds = %if.end45
  %120 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6882
  %span183 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %120, i32 0, i32 10, !dbg !6884
  %121 = load float*, float** %span183, align 8, !dbg !6884
  %122 = load i32, i32* %my2, align 4, !dbg !6885
  %idx.ext84 = sext i32 %122 to i64, !dbg !6886
  %add.ptr85 = getelementptr inbounds float, float* %121, i64 %idx.ext84, !dbg !6886
  store float* %add.ptr85, float** %span1, align 8, !dbg !6887
  %123 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6888
  %span286 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %123, i32 0, i32 11, !dbg !6889
  %124 = load float*, float** %span286, align 8, !dbg !6889
  %125 = load i32, i32* %my2, align 4, !dbg !6890
  %idx.ext87 = sext i32 %125 to i64, !dbg !6891
  %add.ptr88 = getelementptr inbounds float, float* %124, i64 %idx.ext87, !dbg !6891
  store float* %add.ptr88, float** %span2, align 8, !dbg !6892
  br label %if.end96, !dbg !6893

if.else89:                                        ; preds = %if.end45
  %126 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6894
  %span290 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %126, i32 0, i32 11, !dbg !6896
  %127 = load float*, float** %span290, align 8, !dbg !6896
  %128 = load i32, i32* %my2, align 4, !dbg !6897
  %idx.ext91 = sext i32 %128 to i64, !dbg !6898
  %add.ptr92 = getelementptr inbounds float, float* %127, i64 %idx.ext91, !dbg !6898
  store float* %add.ptr92, float** %span1, align 8, !dbg !6899
  %129 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6900
  %span193 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %129, i32 0, i32 10, !dbg !6901
  %130 = load float*, float** %span193, align 8, !dbg !6901
  %131 = load i32, i32* %my2, align 4, !dbg !6902
  %idx.ext94 = sext i32 %131 to i64, !dbg !6903
  %add.ptr95 = getelementptr inbounds float, float* %130, i64 %idx.ext94, !dbg !6903
  store float* %add.ptr95, float** %span2, align 8, !dbg !6904
  br label %if.end96

if.end96:                                         ; preds = %if.else89, %if.then82
  %132 = load i32, i32* %my2, align 4, !dbg !6905
  store i32 %132, i32* %y, align 4, !dbg !6907
  br label %for.cond, !dbg !6908

for.cond:                                         ; preds = %for.inc, %if.end96
  %133 = load i32, i32* %y, align 4, !dbg !6909
  %134 = load i32, i32* %my0, align 4, !dbg !6911
  %cmp97 = icmp sge i32 %133, %134, !dbg !6912
  br i1 %cmp97, label %for.body, label %for.end, !dbg !6913

for.body:                                         ; preds = %for.cond
  %135 = load float*, float** %span1, align 8, !dbg !6914
  %136 = load float, float* %135, align 4, !dbg !6916
  %conv99 = fpext float %136 to double, !dbg !6916
  %137 = call double @llvm.floor.f64(double %conv99), !dbg !6917
  %conv100 = fptosi double %137 to i32, !dbg !6917
  store i32 %conv100, i32* %sn1, align 4, !dbg !6918
  %138 = load float*, float** %span2, align 8, !dbg !6919
  %139 = load float, float* %138, align 4, !dbg !6920
  %conv101 = fpext float %139 to double, !dbg !6920
  %140 = call double @llvm.floor.f64(double %conv101), !dbg !6921
  %conv102 = fptosi double %140 to i32, !dbg !6921
  store i32 %conv102, i32* %sn2, align 4, !dbg !6922
  %141 = load i32, i32* %sn1, align 4, !dbg !6923
  %inc = add nsw i32 %141, 1, !dbg !6923
  store i32 %inc, i32* %sn1, align 4, !dbg !6923
  %142 = load i32, i32* %sn2, align 4, !dbg !6924
  %143 = load i32, i32* %rectx, align 4, !dbg !6926
  %cmp103 = icmp sge i32 %142, %143, !dbg !6927
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !6928

if.then105:                                       ; preds = %for.body
  %144 = load i32, i32* %rectx, align 4, !dbg !6929
  %sub106 = sub nsw i32 %144, 1, !dbg !6930
  store i32 %sub106, i32* %sn2, align 4, !dbg !6931
  br label %if.end107, !dbg !6932

if.end107:                                        ; preds = %if.then105, %for.body
  %145 = load i32, i32* %sn1, align 4, !dbg !6933
  %cmp108 = icmp slt i32 %145, 0, !dbg !6935
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6936

if.then110:                                       ; preds = %if.end107
  store i32 0, i32* %sn1, align 4, !dbg !6937
  br label %if.end111, !dbg !6938

if.end111:                                        ; preds = %if.then110, %if.end107
  %146 = load i32, i32* %sn2, align 4, !dbg !6939
  %147 = load i32, i32* %sn1, align 4, !dbg !6941
  %cmp112 = icmp sge i32 %146, %147, !dbg !6942
  br i1 %cmp112, label %if.then114, label %if.end156, !dbg !6943

if.then114:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata i32* %intzverg, metadata !6944, metadata !DIExpression()), !dbg !6946
  %148 = load i32, i32* %sn1, align 4, !dbg !6947
  %conv115 = sitofp i32 %148 to double, !dbg !6948
  %149 = load double, double* %zxd, align 8, !dbg !6949
  %mul116 = fmul double %conv115, %149, !dbg !6950
  %150 = load double, double* %zy0, align 8, !dbg !6951
  %add117 = fadd double %mul116, %150, !dbg !6952
  store double %add117, double* %zverg, align 8, !dbg !6953
  %151 = load i32*, i32** %rectzofs, align 8, !dbg !6954
  %152 = load i32, i32* %sn1, align 4, !dbg !6955
  %idx.ext118 = sext i32 %152 to i64, !dbg !6956
  %add.ptr119 = getelementptr inbounds i32, i32* %151, i64 %idx.ext118, !dbg !6956
  store i32* %add.ptr119, i32** %rz, align 8, !dbg !6957
  %153 = load i32*, i32** %rectpofs, align 8, !dbg !6958
  %154 = load i32, i32* %sn1, align 4, !dbg !6959
  %idx.ext120 = sext i32 %154 to i64, !dbg !6960
  %add.ptr121 = getelementptr inbounds i32, i32* %153, i64 %idx.ext120, !dbg !6960
  store i32* %add.ptr121, i32** %rp, align 8, !dbg !6961
  %155 = load i32*, i32** %rectoofs, align 8, !dbg !6962
  %156 = load i32, i32* %sn1, align 4, !dbg !6963
  %idx.ext122 = sext i32 %156 to i64, !dbg !6964
  %add.ptr123 = getelementptr inbounds i32, i32* %155, i64 %idx.ext122, !dbg !6964
  store i32* %add.ptr123, i32** %ro, align 8, !dbg !6965
  %157 = load i32*, i32** %rectmaskofs, align 8, !dbg !6966
  %158 = load i32, i32* %sn1, align 4, !dbg !6967
  %idx.ext124 = sext i32 %158 to i64, !dbg !6968
  %add.ptr125 = getelementptr inbounds i32, i32* %157, i64 %idx.ext124, !dbg !6968
  store i32* %add.ptr125, i32** %rm, align 8, !dbg !6969
  %159 = load i32, i32* %sn2, align 4, !dbg !6970
  %160 = load i32, i32* %sn1, align 4, !dbg !6971
  %sub126 = sub nsw i32 %159, %160, !dbg !6972
  store i32 %sub126, i32* %x, align 4, !dbg !6973
  br label %while.cond, !dbg !6974

while.cond:                                       ; preds = %if.end151, %if.then114
  %161 = load i32, i32* %x, align 4, !dbg !6975
  %cmp127 = icmp sge i32 %161, 0, !dbg !6976
  br i1 %cmp127, label %while.body, label %while.end, !dbg !6974

while.body:                                       ; preds = %while.cond
  %162 = load double, double* %zverg, align 8, !dbg !6977
  %cmp129 = fcmp olt double %162, 0xC1E0000000000000, !dbg !6977
  br i1 %cmp129, label %cond.true, label %cond.false, !dbg !6977

cond.true:                                        ; preds = %while.body
  br label %cond.end135, !dbg !6977

cond.false:                                       ; preds = %while.body
  %163 = load double, double* %zverg, align 8, !dbg !6977
  %cmp131 = fcmp ogt double %163, 0x41DFFFFFFFC00000, !dbg !6977
  br i1 %cmp131, label %cond.true133, label %cond.false134, !dbg !6977

cond.true133:                                     ; preds = %cond.false
  br label %cond.end, !dbg !6977

cond.false134:                                    ; preds = %cond.false
  %164 = load double, double* %zverg, align 8, !dbg !6977
  br label %cond.end, !dbg !6977

cond.end:                                         ; preds = %cond.false134, %cond.true133
  %cond = phi double [ 0x41DFFFFFFFC00000, %cond.true133 ], [ %164, %cond.false134 ], !dbg !6977
  br label %cond.end135, !dbg !6977

cond.end135:                                      ; preds = %cond.end, %cond.true
  %cond136 = phi double [ 0xC1E0000000000000, %cond.true ], [ %cond, %cond.end ], !dbg !6977
  %conv137 = fptosi double %cond136 to i32, !dbg !6979
  store i32 %conv137, i32* %intzverg, align 4, !dbg !6980
  %165 = load i32, i32* %intzverg, align 4, !dbg !6981
  %166 = load i32*, i32** %rz, align 8, !dbg !6983
  %167 = load i32, i32* %166, align 4, !dbg !6984
  %cmp138 = icmp sgt i32 %165, %167, !dbg !6985
  br i1 %cmp138, label %if.then143, label %lor.lhs.false140, !dbg !6986

lor.lhs.false140:                                 ; preds = %cond.end135
  %168 = load i32*, i32** %rz, align 8, !dbg !6987
  %169 = load i32, i32* %168, align 4, !dbg !6988
  %cmp141 = icmp eq i32 %169, 2147483647, !dbg !6989
  br i1 %cmp141, label %if.then143, label %if.end151, !dbg !6990

if.then143:                                       ; preds = %lor.lhs.false140, %cond.end135
  %170 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !6991
  %rectmask144 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %170, i32 0, i32 21, !dbg !6994
  %171 = load i32*, i32** %rectmask144, align 8, !dbg !6994
  %tobool145 = icmp ne i32* %171, null, !dbg !6991
  br i1 %tobool145, label %lor.lhs.false146, label %if.then149, !dbg !6995

lor.lhs.false146:                                 ; preds = %if.then143
  %172 = load i32, i32* %intzverg, align 4, !dbg !6996
  %173 = load i32*, i32** %rm, align 8, !dbg !6997
  %174 = load i32, i32* %173, align 4, !dbg !6998
  %cmp147 = icmp sgt i32 %172, %174, !dbg !6999
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !7000

if.then149:                                       ; preds = %lor.lhs.false146, %if.then143
  %175 = load i32, i32* %obi.addr, align 4, !dbg !7001
  %176 = load i32*, i32** %ro, align 8, !dbg !7003
  store i32 %175, i32* %176, align 4, !dbg !7004
  %177 = load i32, i32* %intzverg, align 4, !dbg !7005
  %178 = load i32*, i32** %rz, align 8, !dbg !7006
  store i32 %177, i32* %178, align 4, !dbg !7007
  %179 = load i32, i32* %zvlnr.addr, align 4, !dbg !7008
  %180 = load i32*, i32** %rp, align 8, !dbg !7009
  store i32 %179, i32* %180, align 4, !dbg !7010
  br label %if.end150, !dbg !7011

if.end150:                                        ; preds = %if.then149, %lor.lhs.false146
  br label %if.end151, !dbg !7012

if.end151:                                        ; preds = %if.end150, %lor.lhs.false140
  %181 = load double, double* %zxd, align 8, !dbg !7013
  %182 = load double, double* %zverg, align 8, !dbg !7014
  %add152 = fadd double %182, %181, !dbg !7014
  store double %add152, double* %zverg, align 8, !dbg !7014
  %183 = load i32*, i32** %rz, align 8, !dbg !7015
  %incdec.ptr = getelementptr inbounds i32, i32* %183, i32 1, !dbg !7015
  store i32* %incdec.ptr, i32** %rz, align 8, !dbg !7015
  %184 = load i32*, i32** %rp, align 8, !dbg !7016
  %incdec.ptr153 = getelementptr inbounds i32, i32* %184, i32 1, !dbg !7016
  store i32* %incdec.ptr153, i32** %rp, align 8, !dbg !7016
  %185 = load i32*, i32** %ro, align 8, !dbg !7017
  %incdec.ptr154 = getelementptr inbounds i32, i32* %185, i32 1, !dbg !7017
  store i32* %incdec.ptr154, i32** %ro, align 8, !dbg !7017
  %186 = load i32*, i32** %rm, align 8, !dbg !7018
  %incdec.ptr155 = getelementptr inbounds i32, i32* %186, i32 1, !dbg !7018
  store i32* %incdec.ptr155, i32** %rm, align 8, !dbg !7018
  %187 = load i32, i32* %x, align 4, !dbg !7019
  %dec = add nsw i32 %187, -1, !dbg !7019
  store i32 %dec, i32* %x, align 4, !dbg !7019
  br label %while.cond, !dbg !6974, !llvm.loop !7020

while.end:                                        ; preds = %while.cond
  br label %if.end156, !dbg !7022

if.end156:                                        ; preds = %while.end, %if.end111
  %188 = load double, double* %zyd, align 8, !dbg !7023
  %189 = load double, double* %zy0, align 8, !dbg !7024
  %sub157 = fsub double %189, %188, !dbg !7024
  store double %sub157, double* %zy0, align 8, !dbg !7024
  %190 = load i32, i32* %rectx, align 4, !dbg !7025
  %191 = load i32*, i32** %rectzofs, align 8, !dbg !7026
  %idx.ext158 = sext i32 %190 to i64, !dbg !7026
  %idx.neg = sub i64 0, %idx.ext158, !dbg !7026
  %add.ptr159 = getelementptr inbounds i32, i32* %191, i64 %idx.neg, !dbg !7026
  store i32* %add.ptr159, i32** %rectzofs, align 8, !dbg !7026
  %192 = load i32, i32* %rectx, align 4, !dbg !7027
  %193 = load i32*, i32** %rectpofs, align 8, !dbg !7028
  %idx.ext160 = sext i32 %192 to i64, !dbg !7028
  %idx.neg161 = sub i64 0, %idx.ext160, !dbg !7028
  %add.ptr162 = getelementptr inbounds i32, i32* %193, i64 %idx.neg161, !dbg !7028
  store i32* %add.ptr162, i32** %rectpofs, align 8, !dbg !7028
  %194 = load i32, i32* %rectx, align 4, !dbg !7029
  %195 = load i32*, i32** %rectoofs, align 8, !dbg !7030
  %idx.ext163 = sext i32 %194 to i64, !dbg !7030
  %idx.neg164 = sub i64 0, %idx.ext163, !dbg !7030
  %add.ptr165 = getelementptr inbounds i32, i32* %195, i64 %idx.neg164, !dbg !7030
  store i32* %add.ptr165, i32** %rectoofs, align 8, !dbg !7030
  %196 = load i32, i32* %rectx, align 4, !dbg !7031
  %197 = load i32*, i32** %rectmaskofs, align 8, !dbg !7032
  %idx.ext166 = sext i32 %196 to i64, !dbg !7032
  %idx.neg167 = sub i64 0, %idx.ext166, !dbg !7032
  %add.ptr168 = getelementptr inbounds i32, i32* %197, i64 %idx.neg167, !dbg !7032
  store i32* %add.ptr168, i32** %rectmaskofs, align 8, !dbg !7032
  br label %for.inc, !dbg !7033

for.inc:                                          ; preds = %if.end156
  %198 = load i32, i32* %y, align 4, !dbg !7034
  %dec169 = add nsw i32 %198, -1, !dbg !7034
  store i32 %dec169, i32* %y, align 4, !dbg !7034
  %199 = load float*, float** %span1, align 8, !dbg !7035
  %incdec.ptr170 = getelementptr inbounds float, float* %199, i32 -1, !dbg !7035
  store float* %incdec.ptr170, float** %span1, align 8, !dbg !7035
  %200 = load float*, float** %span2, align 8, !dbg !7036
  %incdec.ptr171 = getelementptr inbounds float, float* %200, i32 -1, !dbg !7036
  store float* %incdec.ptr171, float** %span2, align 8, !dbg !7036
  br label %for.cond, !dbg !7037, !llvm.loop !7038

for.end:                                          ; preds = %if.then2, %if.then17, %if.then44, %for.cond
  ret void, !dbg !7040
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffillGL4(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !7041 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %zverg = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %z0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %rectoofs = alloca i32*, align 8
  %ro = alloca i32*, align 8
  %rectpofs = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rectmaskofs = alloca i32*, align 8
  %rm = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %rectzofs = alloca i32*, align 8
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  %intzverg = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7048, metadata !DIExpression()), !dbg !7049
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7050, metadata !DIExpression()), !dbg !7051
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !7052, metadata !DIExpression()), !dbg !7053
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !7058, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata double* %zverg, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata float* %x0, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata float* %y0, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata float* %z0, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata float* %x1, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata float* %y1, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata float* %z1, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata float* %x2, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata float* %y2, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata float* %z2, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.declare(metadata float** %span1, metadata !7084, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.declare(metadata float** %span2, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.declare(metadata i32** %rectoofs, metadata !7088, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !7090, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.declare(metadata i32** %rectpofs, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata i32** %rectmaskofs, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.declare(metadata i32** %rm, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !7106, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !7110, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.declare(metadata i32** %rectzofs, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !7114, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !7116, metadata !DIExpression()), !dbg !7117
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7118
  call void @zbuf_init_span(%struct.ZSpan* %0), !dbg !7119
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7120
  %2 = load float*, float** %v1.addr, align 8, !dbg !7121
  %3 = load float*, float** %v2.addr, align 8, !dbg !7122
  call void @zbuf_add_to_span(%struct.ZSpan* %1, float* %2, float* %3), !dbg !7123
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7124
  %5 = load float*, float** %v2.addr, align 8, !dbg !7125
  %6 = load float*, float** %v3.addr, align 8, !dbg !7126
  call void @zbuf_add_to_span(%struct.ZSpan* %4, float* %5, float* %6), !dbg !7127
  %7 = load float*, float** %v4.addr, align 8, !dbg !7128
  %tobool = icmp ne float* %7, null, !dbg !7128
  br i1 %tobool, label %if.then, label %if.else, !dbg !7130

if.then:                                          ; preds = %entry
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7131
  %9 = load float*, float** %v3.addr, align 8, !dbg !7133
  %10 = load float*, float** %v4.addr, align 8, !dbg !7134
  call void @zbuf_add_to_span(%struct.ZSpan* %8, float* %9, float* %10), !dbg !7135
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7136
  %12 = load float*, float** %v4.addr, align 8, !dbg !7137
  %13 = load float*, float** %v1.addr, align 8, !dbg !7138
  call void @zbuf_add_to_span(%struct.ZSpan* %11, float* %12, float* %13), !dbg !7139
  br label %if.end, !dbg !7140

if.else:                                          ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7141
  %15 = load float*, float** %v3.addr, align 8, !dbg !7142
  %16 = load float*, float** %v1.addr, align 8, !dbg !7143
  call void @zbuf_add_to_span(%struct.ZSpan* %14, float* %15, float* %16), !dbg !7144
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7145
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 8, !dbg !7147
  %18 = load float*, float** %minp2, align 8, !dbg !7147
  %cmp = icmp eq float* %18, null, !dbg !7148
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !7149

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7150
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 9, !dbg !7151
  %20 = load float*, float** %maxp2, align 8, !dbg !7151
  %cmp1 = icmp eq float* %20, null, !dbg !7152
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7153

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !7154

if.end3:                                          ; preds = %lor.lhs.false
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7155
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 2, !dbg !7157
  %22 = load i32, i32* %miny1, align 8, !dbg !7157
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7158
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 4, !dbg !7159
  %24 = load i32, i32* %miny2, align 8, !dbg !7159
  %cmp4 = icmp slt i32 %22, %24, !dbg !7160
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !7161

if.then5:                                         ; preds = %if.end3
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7162
  %miny26 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 4, !dbg !7163
  %26 = load i32, i32* %miny26, align 8, !dbg !7163
  store i32 %26, i32* %my0, align 4, !dbg !7164
  br label %if.end9, !dbg !7165

if.else7:                                         ; preds = %if.end3
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7166
  %miny18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 2, !dbg !7167
  %28 = load i32, i32* %miny18, align 8, !dbg !7167
  store i32 %28, i32* %my0, align 4, !dbg !7168
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7169
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 3, !dbg !7171
  %30 = load i32, i32* %maxy1, align 4, !dbg !7171
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7172
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 5, !dbg !7173
  %32 = load i32, i32* %maxy2, align 4, !dbg !7173
  %cmp10 = icmp sgt i32 %30, %32, !dbg !7174
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !7175

if.then11:                                        ; preds = %if.end9
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7176
  %maxy212 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 5, !dbg !7177
  %34 = load i32, i32* %maxy212, align 4, !dbg !7177
  store i32 %34, i32* %my2, align 4, !dbg !7178
  br label %if.end15, !dbg !7179

if.else13:                                        ; preds = %if.end9
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7180
  %maxy114 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %35, i32 0, i32 3, !dbg !7181
  %36 = load i32, i32* %maxy114, align 4, !dbg !7181
  store i32 %36, i32* %my2, align 4, !dbg !7182
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %37 = load i32, i32* %my2, align 4, !dbg !7183
  %38 = load i32, i32* %my0, align 4, !dbg !7185
  %cmp16 = icmp slt i32 %37, %38, !dbg !7186
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7187

if.then17:                                        ; preds = %if.end15
  br label %for.end, !dbg !7188

if.end18:                                         ; preds = %if.end15
  %39 = load float*, float** %v1.addr, align 8, !dbg !7189
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !7189
  %40 = load float, float* %arrayidx, align 4, !dbg !7189
  %41 = load float*, float** %v2.addr, align 8, !dbg !7190
  %arrayidx19 = getelementptr inbounds float, float* %41, i64 0, !dbg !7190
  %42 = load float, float* %arrayidx19, align 4, !dbg !7190
  %sub = fsub float %40, %42, !dbg !7191
  store float %sub, float* %x1, align 4, !dbg !7192
  %43 = load float*, float** %v2.addr, align 8, !dbg !7193
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !7193
  %44 = load float, float* %arrayidx20, align 4, !dbg !7193
  %45 = load float*, float** %v3.addr, align 8, !dbg !7194
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 0, !dbg !7194
  %46 = load float, float* %arrayidx21, align 4, !dbg !7194
  %sub22 = fsub float %44, %46, !dbg !7195
  store float %sub22, float* %x2, align 4, !dbg !7196
  %47 = load float*, float** %v1.addr, align 8, !dbg !7197
  %arrayidx23 = getelementptr inbounds float, float* %47, i64 1, !dbg !7197
  %48 = load float, float* %arrayidx23, align 4, !dbg !7197
  %49 = load float*, float** %v2.addr, align 8, !dbg !7198
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !7198
  %50 = load float, float* %arrayidx24, align 4, !dbg !7198
  %sub25 = fsub float %48, %50, !dbg !7199
  store float %sub25, float* %y1, align 4, !dbg !7200
  %51 = load float*, float** %v2.addr, align 8, !dbg !7201
  %arrayidx26 = getelementptr inbounds float, float* %51, i64 1, !dbg !7201
  %52 = load float, float* %arrayidx26, align 4, !dbg !7201
  %53 = load float*, float** %v3.addr, align 8, !dbg !7202
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 1, !dbg !7202
  %54 = load float, float* %arrayidx27, align 4, !dbg !7202
  %sub28 = fsub float %52, %54, !dbg !7203
  store float %sub28, float* %y2, align 4, !dbg !7204
  %55 = load float*, float** %v1.addr, align 8, !dbg !7205
  %arrayidx29 = getelementptr inbounds float, float* %55, i64 2, !dbg !7205
  %56 = load float, float* %arrayidx29, align 4, !dbg !7205
  %57 = load float*, float** %v2.addr, align 8, !dbg !7206
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !7206
  %58 = load float, float* %arrayidx30, align 4, !dbg !7206
  %sub31 = fsub float %56, %58, !dbg !7207
  store float %sub31, float* %z1, align 4, !dbg !7208
  %59 = load float*, float** %v2.addr, align 8, !dbg !7209
  %arrayidx32 = getelementptr inbounds float, float* %59, i64 2, !dbg !7209
  %60 = load float, float* %arrayidx32, align 4, !dbg !7209
  %61 = load float*, float** %v3.addr, align 8, !dbg !7210
  %arrayidx33 = getelementptr inbounds float, float* %61, i64 2, !dbg !7210
  %62 = load float, float* %arrayidx33, align 4, !dbg !7210
  %sub34 = fsub float %60, %62, !dbg !7211
  store float %sub34, float* %z2, align 4, !dbg !7212
  %63 = load float, float* %y1, align 4, !dbg !7213
  %64 = load float, float* %z2, align 4, !dbg !7214
  %mul = fmul float %63, %64, !dbg !7215
  %65 = load float, float* %z1, align 4, !dbg !7216
  %66 = load float, float* %y2, align 4, !dbg !7217
  %mul35 = fmul float %65, %66, !dbg !7218
  %sub36 = fsub float %mul, %mul35, !dbg !7219
  store float %sub36, float* %x0, align 4, !dbg !7220
  %67 = load float, float* %z1, align 4, !dbg !7221
  %68 = load float, float* %x2, align 4, !dbg !7222
  %mul37 = fmul float %67, %68, !dbg !7223
  %69 = load float, float* %x1, align 4, !dbg !7224
  %70 = load float, float* %z2, align 4, !dbg !7225
  %mul38 = fmul float %69, %70, !dbg !7226
  %sub39 = fsub float %mul37, %mul38, !dbg !7227
  store float %sub39, float* %y0, align 4, !dbg !7228
  %71 = load float, float* %x1, align 4, !dbg !7229
  %72 = load float, float* %y2, align 4, !dbg !7230
  %mul40 = fmul float %71, %72, !dbg !7231
  %73 = load float, float* %y1, align 4, !dbg !7232
  %74 = load float, float* %x2, align 4, !dbg !7233
  %mul41 = fmul float %73, %74, !dbg !7234
  %sub42 = fsub float %mul40, %mul41, !dbg !7235
  store float %sub42, float* %z0, align 4, !dbg !7236
  %75 = load float, float* %z0, align 4, !dbg !7237
  %cmp43 = fcmp oeq float %75, 0.000000e+00, !dbg !7239
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !7240

if.then44:                                        ; preds = %if.end18
  br label %for.end, !dbg !7241

if.end45:                                         ; preds = %if.end18
  %76 = load float, float* %x0, align 4, !dbg !7242
  %77 = load float*, float** %v1.addr, align 8, !dbg !7243
  %arrayidx46 = getelementptr inbounds float, float* %77, i64 0, !dbg !7243
  %78 = load float, float* %arrayidx46, align 4, !dbg !7243
  %mul47 = fmul float %76, %78, !dbg !7244
  %79 = load float, float* %y0, align 4, !dbg !7245
  %80 = load float*, float** %v1.addr, align 8, !dbg !7246
  %arrayidx48 = getelementptr inbounds float, float* %80, i64 1, !dbg !7246
  %81 = load float, float* %arrayidx48, align 4, !dbg !7246
  %mul49 = fmul float %79, %81, !dbg !7247
  %add = fadd float %mul47, %mul49, !dbg !7248
  %82 = load float, float* %z0, align 4, !dbg !7249
  %div = fdiv float %add, %82, !dbg !7250
  %83 = load float*, float** %v1.addr, align 8, !dbg !7251
  %arrayidx50 = getelementptr inbounds float, float* %83, i64 2, !dbg !7251
  %84 = load float, float* %arrayidx50, align 4, !dbg !7251
  %add51 = fadd float %div, %84, !dbg !7252
  store float %add51, float* %xx1, align 4, !dbg !7253
  %85 = load float, float* %x0, align 4, !dbg !7254
  %conv = fpext float %85 to double, !dbg !7255
  %fneg = fneg double %conv, !dbg !7256
  %86 = load float, float* %z0, align 4, !dbg !7257
  %conv52 = fpext float %86 to double, !dbg !7258
  %div53 = fdiv double %fneg, %conv52, !dbg !7259
  store double %div53, double* %zxd, align 8, !dbg !7260
  %87 = load float, float* %y0, align 4, !dbg !7261
  %conv54 = fpext float %87 to double, !dbg !7262
  %fneg55 = fneg double %conv54, !dbg !7263
  %88 = load float, float* %z0, align 4, !dbg !7264
  %conv56 = fpext float %88 to double, !dbg !7265
  %div57 = fdiv double %fneg55, %conv56, !dbg !7266
  store double %div57, double* %zyd, align 8, !dbg !7267
  %89 = load i32, i32* %my2, align 4, !dbg !7268
  %conv58 = sitofp i32 %89 to double, !dbg !7269
  %90 = load double, double* %zyd, align 8, !dbg !7270
  %mul59 = fmul double %conv58, %90, !dbg !7271
  %91 = load float, float* %xx1, align 4, !dbg !7272
  %conv60 = fpext float %91 to double, !dbg !7273
  %add61 = fadd double %mul59, %conv60, !dbg !7274
  store double %add61, double* %zy0, align 8, !dbg !7275
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7276
  %rectx62 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 0, !dbg !7277
  %93 = load i32, i32* %rectx62, align 8, !dbg !7277
  store i32 %93, i32* %rectx, align 4, !dbg !7278
  %94 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7279
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %94, i32 0, i32 16, !dbg !7280
  %95 = load i32*, i32** %rectz, align 8, !dbg !7280
  %96 = load i32, i32* %rectx, align 4, !dbg !7281
  %97 = load i32, i32* %my2, align 4, !dbg !7282
  %mul63 = mul nsw i32 %96, %97, !dbg !7283
  %idx.ext = sext i32 %mul63 to i64, !dbg !7284
  %add.ptr = getelementptr inbounds i32, i32* %95, i64 %idx.ext, !dbg !7284
  store i32* %add.ptr, i32** %rectzofs, align 8, !dbg !7285
  %98 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7286
  %rectp = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %98, i32 0, i32 19, !dbg !7287
  %99 = load i32*, i32** %rectp, align 8, !dbg !7287
  %100 = load i32, i32* %rectx, align 4, !dbg !7288
  %101 = load i32, i32* %my2, align 4, !dbg !7289
  %mul64 = mul nsw i32 %100, %101, !dbg !7290
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !7291
  %add.ptr66 = getelementptr inbounds i32, i32* %99, i64 %idx.ext65, !dbg !7291
  store i32* %add.ptr66, i32** %rectpofs, align 8, !dbg !7292
  %102 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7293
  %recto = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %102, i32 0, i32 20, !dbg !7294
  %103 = load i32*, i32** %recto, align 8, !dbg !7294
  %104 = load i32, i32* %rectx, align 4, !dbg !7295
  %105 = load i32, i32* %my2, align 4, !dbg !7296
  %mul67 = mul nsw i32 %104, %105, !dbg !7297
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !7298
  %add.ptr69 = getelementptr inbounds i32, i32* %103, i64 %idx.ext68, !dbg !7298
  store i32* %add.ptr69, i32** %rectoofs, align 8, !dbg !7299
  %106 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7300
  %rectmask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %106, i32 0, i32 21, !dbg !7301
  %107 = load i32*, i32** %rectmask, align 8, !dbg !7301
  %108 = load i32, i32* %rectx, align 4, !dbg !7302
  %109 = load i32, i32* %my2, align 4, !dbg !7303
  %mul70 = mul nsw i32 %108, %109, !dbg !7304
  %idx.ext71 = sext i32 %mul70 to i64, !dbg !7305
  %add.ptr72 = getelementptr inbounds i32, i32* %107, i64 %idx.ext71, !dbg !7305
  store i32* %add.ptr72, i32** %rectmaskofs, align 8, !dbg !7306
  %110 = load i32, i32* %my0, align 4, !dbg !7307
  %111 = load i32, i32* %my2, align 4, !dbg !7308
  %add73 = add nsw i32 %110, %111, !dbg !7309
  %div74 = sdiv i32 %add73, 2, !dbg !7310
  store i32 %div74, i32* %sn1, align 4, !dbg !7311
  %112 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7312
  %span175 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %112, i32 0, i32 10, !dbg !7314
  %113 = load float*, float** %span175, align 8, !dbg !7314
  %114 = load i32, i32* %sn1, align 4, !dbg !7315
  %idxprom = sext i32 %114 to i64, !dbg !7312
  %arrayidx76 = getelementptr inbounds float, float* %113, i64 %idxprom, !dbg !7312
  %115 = load float, float* %arrayidx76, align 4, !dbg !7312
  %116 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7316
  %span277 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %116, i32 0, i32 11, !dbg !7317
  %117 = load float*, float** %span277, align 8, !dbg !7317
  %118 = load i32, i32* %sn1, align 4, !dbg !7318
  %idxprom78 = sext i32 %118 to i64, !dbg !7316
  %arrayidx79 = getelementptr inbounds float, float* %117, i64 %idxprom78, !dbg !7316
  %119 = load float, float* %arrayidx79, align 4, !dbg !7316
  %cmp80 = fcmp olt float %115, %119, !dbg !7319
  br i1 %cmp80, label %if.then82, label %if.else89, !dbg !7320

if.then82:                                        ; preds = %if.end45
  %120 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7321
  %span183 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %120, i32 0, i32 10, !dbg !7323
  %121 = load float*, float** %span183, align 8, !dbg !7323
  %122 = load i32, i32* %my2, align 4, !dbg !7324
  %idx.ext84 = sext i32 %122 to i64, !dbg !7325
  %add.ptr85 = getelementptr inbounds float, float* %121, i64 %idx.ext84, !dbg !7325
  store float* %add.ptr85, float** %span1, align 8, !dbg !7326
  %123 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7327
  %span286 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %123, i32 0, i32 11, !dbg !7328
  %124 = load float*, float** %span286, align 8, !dbg !7328
  %125 = load i32, i32* %my2, align 4, !dbg !7329
  %idx.ext87 = sext i32 %125 to i64, !dbg !7330
  %add.ptr88 = getelementptr inbounds float, float* %124, i64 %idx.ext87, !dbg !7330
  store float* %add.ptr88, float** %span2, align 8, !dbg !7331
  br label %if.end96, !dbg !7332

if.else89:                                        ; preds = %if.end45
  %126 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7333
  %span290 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %126, i32 0, i32 11, !dbg !7335
  %127 = load float*, float** %span290, align 8, !dbg !7335
  %128 = load i32, i32* %my2, align 4, !dbg !7336
  %idx.ext91 = sext i32 %128 to i64, !dbg !7337
  %add.ptr92 = getelementptr inbounds float, float* %127, i64 %idx.ext91, !dbg !7337
  store float* %add.ptr92, float** %span1, align 8, !dbg !7338
  %129 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7339
  %span193 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %129, i32 0, i32 10, !dbg !7340
  %130 = load float*, float** %span193, align 8, !dbg !7340
  %131 = load i32, i32* %my2, align 4, !dbg !7341
  %idx.ext94 = sext i32 %131 to i64, !dbg !7342
  %add.ptr95 = getelementptr inbounds float, float* %130, i64 %idx.ext94, !dbg !7342
  store float* %add.ptr95, float** %span2, align 8, !dbg !7343
  br label %if.end96

if.end96:                                         ; preds = %if.else89, %if.then82
  %132 = load i32, i32* %my2, align 4, !dbg !7344
  store i32 %132, i32* %y, align 4, !dbg !7346
  br label %for.cond, !dbg !7347

for.cond:                                         ; preds = %for.inc, %if.end96
  %133 = load i32, i32* %y, align 4, !dbg !7348
  %134 = load i32, i32* %my0, align 4, !dbg !7350
  %cmp97 = icmp sge i32 %133, %134, !dbg !7351
  br i1 %cmp97, label %for.body, label %for.end, !dbg !7352

for.body:                                         ; preds = %for.cond
  %135 = load float*, float** %span1, align 8, !dbg !7353
  %136 = load float, float* %135, align 4, !dbg !7355
  %conv99 = fpext float %136 to double, !dbg !7355
  %137 = call double @llvm.floor.f64(double %conv99), !dbg !7356
  %conv100 = fptosi double %137 to i32, !dbg !7356
  store i32 %conv100, i32* %sn1, align 4, !dbg !7357
  %138 = load float*, float** %span2, align 8, !dbg !7358
  %139 = load float, float* %138, align 4, !dbg !7359
  %conv101 = fpext float %139 to double, !dbg !7359
  %140 = call double @llvm.floor.f64(double %conv101), !dbg !7360
  %conv102 = fptosi double %140 to i32, !dbg !7360
  store i32 %conv102, i32* %sn2, align 4, !dbg !7361
  %141 = load i32, i32* %sn1, align 4, !dbg !7362
  %inc = add nsw i32 %141, 1, !dbg !7362
  store i32 %inc, i32* %sn1, align 4, !dbg !7362
  %142 = load i32, i32* %sn2, align 4, !dbg !7363
  %143 = load i32, i32* %rectx, align 4, !dbg !7365
  %cmp103 = icmp sge i32 %142, %143, !dbg !7366
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !7367

if.then105:                                       ; preds = %for.body
  %144 = load i32, i32* %rectx, align 4, !dbg !7368
  %sub106 = sub nsw i32 %144, 1, !dbg !7369
  store i32 %sub106, i32* %sn2, align 4, !dbg !7370
  br label %if.end107, !dbg !7371

if.end107:                                        ; preds = %if.then105, %for.body
  %145 = load i32, i32* %sn1, align 4, !dbg !7372
  %cmp108 = icmp slt i32 %145, 0, !dbg !7374
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7375

if.then110:                                       ; preds = %if.end107
  store i32 0, i32* %sn1, align 4, !dbg !7376
  br label %if.end111, !dbg !7377

if.end111:                                        ; preds = %if.then110, %if.end107
  %146 = load i32, i32* %sn2, align 4, !dbg !7378
  %147 = load i32, i32* %sn1, align 4, !dbg !7380
  %cmp112 = icmp sge i32 %146, %147, !dbg !7381
  br i1 %cmp112, label %if.then114, label %if.end153, !dbg !7382

if.then114:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata i32* %intzverg, metadata !7383, metadata !DIExpression()), !dbg !7385
  %148 = load i32, i32* %sn1, align 4, !dbg !7386
  %conv115 = sitofp i32 %148 to double, !dbg !7387
  %149 = load double, double* %zxd, align 8, !dbg !7388
  %mul116 = fmul double %conv115, %149, !dbg !7389
  %150 = load double, double* %zy0, align 8, !dbg !7390
  %add117 = fadd double %mul116, %150, !dbg !7391
  store double %add117, double* %zverg, align 8, !dbg !7392
  %151 = load i32*, i32** %rectzofs, align 8, !dbg !7393
  %152 = load i32, i32* %sn1, align 4, !dbg !7394
  %idx.ext118 = sext i32 %152 to i64, !dbg !7395
  %add.ptr119 = getelementptr inbounds i32, i32* %151, i64 %idx.ext118, !dbg !7395
  store i32* %add.ptr119, i32** %rz, align 8, !dbg !7396
  %153 = load i32*, i32** %rectpofs, align 8, !dbg !7397
  %154 = load i32, i32* %sn1, align 4, !dbg !7398
  %idx.ext120 = sext i32 %154 to i64, !dbg !7399
  %add.ptr121 = getelementptr inbounds i32, i32* %153, i64 %idx.ext120, !dbg !7399
  store i32* %add.ptr121, i32** %rp, align 8, !dbg !7400
  %155 = load i32*, i32** %rectoofs, align 8, !dbg !7401
  %156 = load i32, i32* %sn1, align 4, !dbg !7402
  %idx.ext122 = sext i32 %156 to i64, !dbg !7403
  %add.ptr123 = getelementptr inbounds i32, i32* %155, i64 %idx.ext122, !dbg !7403
  store i32* %add.ptr123, i32** %ro, align 8, !dbg !7404
  %157 = load i32*, i32** %rectmaskofs, align 8, !dbg !7405
  %158 = load i32, i32* %sn1, align 4, !dbg !7406
  %idx.ext124 = sext i32 %158 to i64, !dbg !7407
  %add.ptr125 = getelementptr inbounds i32, i32* %157, i64 %idx.ext124, !dbg !7407
  store i32* %add.ptr125, i32** %rm, align 8, !dbg !7408
  %159 = load i32, i32* %sn2, align 4, !dbg !7409
  %160 = load i32, i32* %sn1, align 4, !dbg !7410
  %sub126 = sub nsw i32 %159, %160, !dbg !7411
  store i32 %sub126, i32* %x, align 4, !dbg !7412
  br label %while.cond, !dbg !7413

while.cond:                                       ; preds = %if.end148, %if.then114
  %161 = load i32, i32* %x, align 4, !dbg !7414
  %cmp127 = icmp sge i32 %161, 0, !dbg !7415
  br i1 %cmp127, label %while.body, label %while.end, !dbg !7413

while.body:                                       ; preds = %while.cond
  %162 = load double, double* %zverg, align 8, !dbg !7416
  %cmp129 = fcmp olt double %162, 0xC1E0000000000000, !dbg !7416
  br i1 %cmp129, label %cond.true, label %cond.false, !dbg !7416

cond.true:                                        ; preds = %while.body
  br label %cond.end135, !dbg !7416

cond.false:                                       ; preds = %while.body
  %163 = load double, double* %zverg, align 8, !dbg !7416
  %cmp131 = fcmp ogt double %163, 0x41DFFFFFFFC00000, !dbg !7416
  br i1 %cmp131, label %cond.true133, label %cond.false134, !dbg !7416

cond.true133:                                     ; preds = %cond.false
  br label %cond.end, !dbg !7416

cond.false134:                                    ; preds = %cond.false
  %164 = load double, double* %zverg, align 8, !dbg !7416
  br label %cond.end, !dbg !7416

cond.end:                                         ; preds = %cond.false134, %cond.true133
  %cond = phi double [ 0x41DFFFFFFFC00000, %cond.true133 ], [ %164, %cond.false134 ], !dbg !7416
  br label %cond.end135, !dbg !7416

cond.end135:                                      ; preds = %cond.end, %cond.true
  %cond136 = phi double [ 0xC1E0000000000000, %cond.true ], [ %cond, %cond.end ], !dbg !7416
  %conv137 = fptosi double %cond136 to i32, !dbg !7418
  store i32 %conv137, i32* %intzverg, align 4, !dbg !7419
  %165 = load i32, i32* %intzverg, align 4, !dbg !7420
  %166 = load i32*, i32** %rz, align 8, !dbg !7422
  %167 = load i32, i32* %166, align 4, !dbg !7423
  %cmp138 = icmp slt i32 %165, %167, !dbg !7424
  br i1 %cmp138, label %if.then140, label %if.end148, !dbg !7425

if.then140:                                       ; preds = %cond.end135
  %168 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7426
  %rectmask141 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %168, i32 0, i32 21, !dbg !7429
  %169 = load i32*, i32** %rectmask141, align 8, !dbg !7429
  %tobool142 = icmp ne i32* %169, null, !dbg !7426
  br i1 %tobool142, label %lor.lhs.false143, label %if.then146, !dbg !7430

lor.lhs.false143:                                 ; preds = %if.then140
  %170 = load i32, i32* %intzverg, align 4, !dbg !7431
  %171 = load i32*, i32** %rm, align 8, !dbg !7432
  %172 = load i32, i32* %171, align 4, !dbg !7433
  %cmp144 = icmp sgt i32 %170, %172, !dbg !7434
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !7435

if.then146:                                       ; preds = %lor.lhs.false143, %if.then140
  %173 = load i32, i32* %intzverg, align 4, !dbg !7436
  %174 = load i32*, i32** %rz, align 8, !dbg !7438
  store i32 %173, i32* %174, align 4, !dbg !7439
  %175 = load i32, i32* %zvlnr.addr, align 4, !dbg !7440
  %176 = load i32*, i32** %rp, align 8, !dbg !7441
  store i32 %175, i32* %176, align 4, !dbg !7442
  %177 = load i32, i32* %obi.addr, align 4, !dbg !7443
  %178 = load i32*, i32** %ro, align 8, !dbg !7444
  store i32 %177, i32* %178, align 4, !dbg !7445
  br label %if.end147, !dbg !7446

if.end147:                                        ; preds = %if.then146, %lor.lhs.false143
  br label %if.end148, !dbg !7447

if.end148:                                        ; preds = %if.end147, %cond.end135
  %179 = load double, double* %zxd, align 8, !dbg !7448
  %180 = load double, double* %zverg, align 8, !dbg !7449
  %add149 = fadd double %180, %179, !dbg !7449
  store double %add149, double* %zverg, align 8, !dbg !7449
  %181 = load i32*, i32** %rz, align 8, !dbg !7450
  %incdec.ptr = getelementptr inbounds i32, i32* %181, i32 1, !dbg !7450
  store i32* %incdec.ptr, i32** %rz, align 8, !dbg !7450
  %182 = load i32*, i32** %rp, align 8, !dbg !7451
  %incdec.ptr150 = getelementptr inbounds i32, i32* %182, i32 1, !dbg !7451
  store i32* %incdec.ptr150, i32** %rp, align 8, !dbg !7451
  %183 = load i32*, i32** %ro, align 8, !dbg !7452
  %incdec.ptr151 = getelementptr inbounds i32, i32* %183, i32 1, !dbg !7452
  store i32* %incdec.ptr151, i32** %ro, align 8, !dbg !7452
  %184 = load i32*, i32** %rm, align 8, !dbg !7453
  %incdec.ptr152 = getelementptr inbounds i32, i32* %184, i32 1, !dbg !7453
  store i32* %incdec.ptr152, i32** %rm, align 8, !dbg !7453
  %185 = load i32, i32* %x, align 4, !dbg !7454
  %dec = add nsw i32 %185, -1, !dbg !7454
  store i32 %dec, i32* %x, align 4, !dbg !7454
  br label %while.cond, !dbg !7413, !llvm.loop !7455

while.end:                                        ; preds = %while.cond
  br label %if.end153, !dbg !7457

if.end153:                                        ; preds = %while.end, %if.end111
  %186 = load double, double* %zyd, align 8, !dbg !7458
  %187 = load double, double* %zy0, align 8, !dbg !7459
  %sub154 = fsub double %187, %186, !dbg !7459
  store double %sub154, double* %zy0, align 8, !dbg !7459
  %188 = load i32, i32* %rectx, align 4, !dbg !7460
  %189 = load i32*, i32** %rectzofs, align 8, !dbg !7461
  %idx.ext155 = sext i32 %188 to i64, !dbg !7461
  %idx.neg = sub i64 0, %idx.ext155, !dbg !7461
  %add.ptr156 = getelementptr inbounds i32, i32* %189, i64 %idx.neg, !dbg !7461
  store i32* %add.ptr156, i32** %rectzofs, align 8, !dbg !7461
  %190 = load i32, i32* %rectx, align 4, !dbg !7462
  %191 = load i32*, i32** %rectpofs, align 8, !dbg !7463
  %idx.ext157 = sext i32 %190 to i64, !dbg !7463
  %idx.neg158 = sub i64 0, %idx.ext157, !dbg !7463
  %add.ptr159 = getelementptr inbounds i32, i32* %191, i64 %idx.neg158, !dbg !7463
  store i32* %add.ptr159, i32** %rectpofs, align 8, !dbg !7463
  %192 = load i32, i32* %rectx, align 4, !dbg !7464
  %193 = load i32*, i32** %rectoofs, align 8, !dbg !7465
  %idx.ext160 = sext i32 %192 to i64, !dbg !7465
  %idx.neg161 = sub i64 0, %idx.ext160, !dbg !7465
  %add.ptr162 = getelementptr inbounds i32, i32* %193, i64 %idx.neg161, !dbg !7465
  store i32* %add.ptr162, i32** %rectoofs, align 8, !dbg !7465
  %194 = load i32, i32* %rectx, align 4, !dbg !7466
  %195 = load i32*, i32** %rectmaskofs, align 8, !dbg !7467
  %idx.ext163 = sext i32 %194 to i64, !dbg !7467
  %idx.neg164 = sub i64 0, %idx.ext163, !dbg !7467
  %add.ptr165 = getelementptr inbounds i32, i32* %195, i64 %idx.neg164, !dbg !7467
  store i32* %add.ptr165, i32** %rectmaskofs, align 8, !dbg !7467
  br label %for.inc, !dbg !7468

for.inc:                                          ; preds = %if.end153
  %196 = load i32, i32* %y, align 4, !dbg !7469
  %dec166 = add nsw i32 %196, -1, !dbg !7469
  store i32 %dec166, i32* %y, align 4, !dbg !7469
  %197 = load float*, float** %span1, align 8, !dbg !7470
  %incdec.ptr167 = getelementptr inbounds float, float* %197, i32 -1, !dbg !7470
  store float* %incdec.ptr167, float** %span1, align 8, !dbg !7470
  %198 = load float*, float** %span2, align 8, !dbg !7471
  %incdec.ptr168 = getelementptr inbounds float, float* %198, i32 -1, !dbg !7471
  store float* %incdec.ptr168, float** %span2, align 8, !dbg !7471
  br label %for.cond, !dbg !7472, !llvm.loop !7473

for.end:                                          ; preds = %if.then2, %if.then17, %if.then44, %for.cond
  ret void, !dbg !7475
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbufline(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %vec1, float* %vec2) #0 !dbg !7476 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %vec1.addr = alloca float*, align 8
  %vec2.addr = alloca float*, align 8
  %rectz = alloca i32*, align 8
  %rectp = alloca i32*, align 8
  %recto = alloca i32*, align 8
  %rectmask = alloca i32*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %oldx = alloca i32, align 4
  %oldy = alloca i32, align 4
  %ofs = alloca i32, align 4
  %dz = alloca i32, align 4
  %vergz = alloca i32, align 4
  %maxtest = alloca i32, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !7477, metadata !DIExpression()), !dbg !7478
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !7479, metadata !DIExpression()), !dbg !7480
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !7483, metadata !DIExpression()), !dbg !7484
  store float* %vec2, float** %vec2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.declare(metadata i32** %rectz, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.declare(metadata i32** %rectp, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata i32** %recto, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.declare(metadata i32** %rectmask, metadata !7493, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %oldx, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata i32* %oldy, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata i32* %dz, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata i32* %vergz, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata i32* %maxtest, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i32 0, i32* %maxtest, align 4, !dbg !7514
  call void @llvm.dbg.declare(metadata float* %dx, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata float* %dy, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !7519, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !7521, metadata !DIExpression()), !dbg !7522
  %0 = load float*, float** %vec2.addr, align 8, !dbg !7523
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7523
  %1 = load float, float* %arrayidx, align 4, !dbg !7523
  %2 = load float*, float** %vec1.addr, align 8, !dbg !7524
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7524
  %3 = load float, float* %arrayidx1, align 4, !dbg !7524
  %sub = fsub float %1, %3, !dbg !7525
  store float %sub, float* %dx, align 4, !dbg !7526
  %4 = load float*, float** %vec2.addr, align 8, !dbg !7527
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7527
  %5 = load float, float* %arrayidx2, align 4, !dbg !7527
  %6 = load float*, float** %vec1.addr, align 8, !dbg !7528
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7528
  %7 = load float, float* %arrayidx3, align 4, !dbg !7528
  %sub4 = fsub float %5, %7, !dbg !7529
  store float %sub4, float* %dy, align 4, !dbg !7530
  %8 = load float, float* %dx, align 4, !dbg !7531
  %9 = call float @llvm.fabs.f32(float %8), !dbg !7533
  %10 = load float, float* %dy, align 4, !dbg !7534
  %11 = call float @llvm.fabs.f32(float %10), !dbg !7535
  %cmp = fcmp ogt float %9, %11, !dbg !7536
  br i1 %cmp, label %if.then, label %if.else125, !dbg !7537

if.then:                                          ; preds = %entry
  %12 = load float*, float** %vec1.addr, align 8, !dbg !7538
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !7538
  %13 = load float, float* %arrayidx5, align 4, !dbg !7538
  %14 = load float*, float** %vec2.addr, align 8, !dbg !7541
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 0, !dbg !7541
  %15 = load float, float* %arrayidx6, align 4, !dbg !7541
  %cmp7 = fcmp olt float %13, %15, !dbg !7542
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7543

if.then8:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7544
  %16 = load float*, float** %vec1.addr, align 8, !dbg !7546
  call void @copy_v3_v3(float* %arraydecay, float* %16), !dbg !7547
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7548
  %17 = load float*, float** %vec2.addr, align 8, !dbg !7549
  call void @copy_v3_v3(float* %arraydecay9, float* %17), !dbg !7550
  br label %if.end, !dbg !7551

if.else:                                          ; preds = %if.then
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7552
  %18 = load float*, float** %vec1.addr, align 8, !dbg !7554
  call void @copy_v3_v3(float* %arraydecay10, float* %18), !dbg !7555
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7556
  %19 = load float*, float** %vec2.addr, align 8, !dbg !7557
  call void @copy_v3_v3(float* %arraydecay11, float* %19), !dbg !7558
  %20 = load float, float* %dx, align 4, !dbg !7559
  %fneg = fneg float %20, !dbg !7560
  store float %fneg, float* %dx, align 4, !dbg !7561
  %21 = load float, float* %dy, align 4, !dbg !7562
  %fneg12 = fneg float %21, !dbg !7563
  store float %fneg12, float* %dy, align 4, !dbg !7564
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7565
  %22 = load float, float* %arrayidx13, align 4, !dbg !7565
  %conv = fpext float %22 to double, !dbg !7565
  %23 = call double @llvm.floor.f64(double %conv), !dbg !7566
  %conv14 = fptosi double %23 to i32, !dbg !7566
  store i32 %conv14, i32* %start, align 4, !dbg !7567
  %24 = load i32, i32* %start, align 4, !dbg !7568
  %conv15 = sitofp i32 %24 to double, !dbg !7568
  %25 = load float, float* %dx, align 4, !dbg !7569
  %conv16 = fpext float %25 to double, !dbg !7569
  %26 = call double @llvm.floor.f64(double %conv16), !dbg !7570
  %add = fadd double %conv15, %26, !dbg !7571
  %conv17 = fptosi double %add to i32, !dbg !7568
  store i32 %conv17, i32* %end, align 4, !dbg !7572
  %27 = load i32, i32* %end, align 4, !dbg !7573
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7575
  %rectx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %28, i32 0, i32 0, !dbg !7576
  %29 = load i32, i32* %rectx, align 8, !dbg !7576
  %cmp18 = icmp sge i32 %27, %29, !dbg !7577
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !7578

if.then20:                                        ; preds = %if.end
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7579
  %rectx21 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %30, i32 0, i32 0, !dbg !7580
  %31 = load i32, i32* %rectx21, align 8, !dbg !7580
  %sub22 = sub nsw i32 %31, 1, !dbg !7581
  store i32 %sub22, i32* %end, align 4, !dbg !7582
  br label %if.end23, !dbg !7583

if.end23:                                         ; preds = %if.then20, %if.end
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !7584
  %32 = load float, float* %arrayidx24, align 4, !dbg !7584
  %conv25 = fpext float %32 to double, !dbg !7584
  %33 = call double @llvm.floor.f64(double %conv25), !dbg !7585
  %conv26 = fptosi double %33 to i32, !dbg !7585
  store i32 %conv26, i32* %oldy, align 4, !dbg !7586
  %34 = load float, float* %dx, align 4, !dbg !7587
  %35 = load float, float* %dy, align 4, !dbg !7588
  %div = fdiv float %35, %34, !dbg !7588
  store float %div, float* %dy, align 4, !dbg !7588
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !7589
  %36 = load float, float* %arrayidx27, align 4, !dbg !7589
  %conv28 = fpext float %36 to double, !dbg !7589
  %37 = call double @llvm.floor.f64(double %conv28), !dbg !7590
  %conv29 = fptosi double %37 to i32, !dbg !7590
  store i32 %conv29, i32* %vergz, align 4, !dbg !7591
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !7592
  %38 = load float, float* %arrayidx30, align 4, !dbg !7592
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !7593
  %39 = load float, float* %arrayidx31, align 4, !dbg !7593
  %sub32 = fsub float %38, %39, !dbg !7594
  %40 = load float, float* %dx, align 4, !dbg !7595
  %div33 = fdiv float %sub32, %40, !dbg !7596
  %conv34 = fpext float %div33 to double, !dbg !7597
  %41 = call double @llvm.floor.f64(double %conv34), !dbg !7598
  %conv35 = fptosi double %41 to i32, !dbg !7598
  store i32 %conv35, i32* %dz, align 4, !dbg !7599
  %42 = load i32, i32* %vergz, align 4, !dbg !7600
  %cmp36 = icmp sgt i32 %42, 1342177280, !dbg !7602
  br i1 %cmp36, label %land.lhs.true, label %if.end41, !dbg !7603

land.lhs.true:                                    ; preds = %if.end23
  %43 = load i32, i32* %dz, align 4, !dbg !7604
  %cmp38 = icmp sgt i32 %43, 0, !dbg !7605
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7606

if.then40:                                        ; preds = %land.lhs.true
  store i32 1, i32* %maxtest, align 4, !dbg !7607
  br label %if.end41, !dbg !7608

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %if.end23
  %44 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7609
  %rectz42 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %44, i32 0, i32 16, !dbg !7610
  %45 = load i32*, i32** %rectz42, align 8, !dbg !7610
  %46 = load i32, i32* %oldy, align 4, !dbg !7611
  %47 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7612
  %rectx43 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %47, i32 0, i32 0, !dbg !7613
  %48 = load i32, i32* %rectx43, align 8, !dbg !7613
  %mul = mul nsw i32 %46, %48, !dbg !7614
  %idx.ext = sext i32 %mul to i64, !dbg !7615
  %add.ptr = getelementptr inbounds i32, i32* %45, i64 %idx.ext, !dbg !7615
  %49 = load i32, i32* %start, align 4, !dbg !7616
  %idx.ext44 = sext i32 %49 to i64, !dbg !7617
  %add.ptr45 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext44, !dbg !7617
  store i32* %add.ptr45, i32** %rectz, align 8, !dbg !7618
  %50 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7619
  %rectp46 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %50, i32 0, i32 19, !dbg !7620
  %51 = load i32*, i32** %rectp46, align 8, !dbg !7620
  %52 = load i32, i32* %oldy, align 4, !dbg !7621
  %53 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7622
  %rectx47 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %53, i32 0, i32 0, !dbg !7623
  %54 = load i32, i32* %rectx47, align 8, !dbg !7623
  %mul48 = mul nsw i32 %52, %54, !dbg !7624
  %idx.ext49 = sext i32 %mul48 to i64, !dbg !7625
  %add.ptr50 = getelementptr inbounds i32, i32* %51, i64 %idx.ext49, !dbg !7625
  %55 = load i32, i32* %start, align 4, !dbg !7626
  %idx.ext51 = sext i32 %55 to i64, !dbg !7627
  %add.ptr52 = getelementptr inbounds i32, i32* %add.ptr50, i64 %idx.ext51, !dbg !7627
  store i32* %add.ptr52, i32** %rectp, align 8, !dbg !7628
  %56 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7629
  %recto53 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %56, i32 0, i32 20, !dbg !7630
  %57 = load i32*, i32** %recto53, align 8, !dbg !7630
  %58 = load i32, i32* %oldy, align 4, !dbg !7631
  %59 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7632
  %rectx54 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %59, i32 0, i32 0, !dbg !7633
  %60 = load i32, i32* %rectx54, align 8, !dbg !7633
  %mul55 = mul nsw i32 %58, %60, !dbg !7634
  %idx.ext56 = sext i32 %mul55 to i64, !dbg !7635
  %add.ptr57 = getelementptr inbounds i32, i32* %57, i64 %idx.ext56, !dbg !7635
  %61 = load i32, i32* %start, align 4, !dbg !7636
  %idx.ext58 = sext i32 %61 to i64, !dbg !7637
  %add.ptr59 = getelementptr inbounds i32, i32* %add.ptr57, i64 %idx.ext58, !dbg !7637
  store i32* %add.ptr59, i32** %recto, align 8, !dbg !7638
  %62 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7639
  %rectmask60 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %62, i32 0, i32 21, !dbg !7640
  %63 = load i32*, i32** %rectmask60, align 8, !dbg !7640
  %64 = load i32, i32* %oldy, align 4, !dbg !7641
  %65 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7642
  %rectx61 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %65, i32 0, i32 0, !dbg !7643
  %66 = load i32, i32* %rectx61, align 8, !dbg !7643
  %mul62 = mul nsw i32 %64, %66, !dbg !7644
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !7645
  %add.ptr64 = getelementptr inbounds i32, i32* %63, i64 %idx.ext63, !dbg !7645
  %67 = load i32, i32* %start, align 4, !dbg !7646
  %idx.ext65 = sext i32 %67 to i64, !dbg !7647
  %add.ptr66 = getelementptr inbounds i32, i32* %add.ptr64, i64 %idx.ext65, !dbg !7647
  store i32* %add.ptr66, i32** %rectmask, align 8, !dbg !7648
  %68 = load float, float* %dy, align 4, !dbg !7649
  %cmp67 = fcmp olt float %68, 0.000000e+00, !dbg !7651
  br i1 %cmp67, label %if.then69, label %if.else72, !dbg !7652

if.then69:                                        ; preds = %if.end41
  %69 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7653
  %rectx70 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %69, i32 0, i32 0, !dbg !7654
  %70 = load i32, i32* %rectx70, align 8, !dbg !7654
  %sub71 = sub nsw i32 0, %70, !dbg !7655
  store i32 %sub71, i32* %ofs, align 4, !dbg !7656
  br label %if.end74, !dbg !7657

if.else72:                                        ; preds = %if.end41
  %71 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7658
  %rectx73 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %71, i32 0, i32 0, !dbg !7659
  %72 = load i32, i32* %rectx73, align 8, !dbg !7659
  store i32 %72, i32* %ofs, align 4, !dbg !7660
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then69
  %73 = load i32, i32* %start, align 4, !dbg !7661
  store i32 %73, i32* %x, align 4, !dbg !7663
  br label %for.cond, !dbg !7664

for.cond:                                         ; preds = %for.inc, %if.end74
  %74 = load i32, i32* %x, align 4, !dbg !7665
  %75 = load i32, i32* %end, align 4, !dbg !7667
  %cmp75 = icmp sle i32 %74, %75, !dbg !7668
  br i1 %cmp75, label %for.body, label %for.end, !dbg !7669

for.body:                                         ; preds = %for.cond
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !7670
  %76 = load float, float* %arrayidx77, align 4, !dbg !7670
  %conv78 = fpext float %76 to double, !dbg !7670
  %77 = call double @llvm.floor.f64(double %conv78), !dbg !7672
  %conv79 = fptosi double %77 to i32, !dbg !7672
  store i32 %conv79, i32* %y, align 4, !dbg !7673
  %78 = load i32, i32* %y, align 4, !dbg !7674
  %79 = load i32, i32* %oldy, align 4, !dbg !7676
  %cmp80 = icmp ne i32 %78, %79, !dbg !7677
  br i1 %cmp80, label %if.then82, label %if.end91, !dbg !7678

if.then82:                                        ; preds = %for.body
  %80 = load i32, i32* %y, align 4, !dbg !7679
  store i32 %80, i32* %oldy, align 4, !dbg !7681
  %81 = load i32, i32* %ofs, align 4, !dbg !7682
  %82 = load i32*, i32** %rectz, align 8, !dbg !7683
  %idx.ext83 = sext i32 %81 to i64, !dbg !7683
  %add.ptr84 = getelementptr inbounds i32, i32* %82, i64 %idx.ext83, !dbg !7683
  store i32* %add.ptr84, i32** %rectz, align 8, !dbg !7683
  %83 = load i32, i32* %ofs, align 4, !dbg !7684
  %84 = load i32*, i32** %rectp, align 8, !dbg !7685
  %idx.ext85 = sext i32 %83 to i64, !dbg !7685
  %add.ptr86 = getelementptr inbounds i32, i32* %84, i64 %idx.ext85, !dbg !7685
  store i32* %add.ptr86, i32** %rectp, align 8, !dbg !7685
  %85 = load i32, i32* %ofs, align 4, !dbg !7686
  %86 = load i32*, i32** %recto, align 8, !dbg !7687
  %idx.ext87 = sext i32 %85 to i64, !dbg !7687
  %add.ptr88 = getelementptr inbounds i32, i32* %86, i64 %idx.ext87, !dbg !7687
  store i32* %add.ptr88, i32** %recto, align 8, !dbg !7687
  %87 = load i32, i32* %ofs, align 4, !dbg !7688
  %88 = load i32*, i32** %rectmask, align 8, !dbg !7689
  %idx.ext89 = sext i32 %87 to i64, !dbg !7689
  %add.ptr90 = getelementptr inbounds i32, i32* %88, i64 %idx.ext89, !dbg !7689
  store i32* %add.ptr90, i32** %rectmask, align 8, !dbg !7689
  br label %if.end91, !dbg !7690

if.end91:                                         ; preds = %if.then82, %for.body
  %89 = load i32, i32* %x, align 4, !dbg !7691
  %cmp92 = icmp sge i32 %89, 0, !dbg !7693
  br i1 %cmp92, label %land.lhs.true94, label %if.end110, !dbg !7694

land.lhs.true94:                                  ; preds = %if.end91
  %90 = load i32, i32* %y, align 4, !dbg !7695
  %cmp95 = icmp sge i32 %90, 0, !dbg !7696
  br i1 %cmp95, label %land.lhs.true97, label %if.end110, !dbg !7697

land.lhs.true97:                                  ; preds = %land.lhs.true94
  %91 = load i32, i32* %y, align 4, !dbg !7698
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7699
  %recty = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 1, !dbg !7700
  %93 = load i32, i32* %recty, align 4, !dbg !7700
  %cmp98 = icmp slt i32 %91, %93, !dbg !7701
  br i1 %cmp98, label %if.then100, label %if.end110, !dbg !7702

if.then100:                                       ; preds = %land.lhs.true97
  %94 = load i32, i32* %vergz, align 4, !dbg !7703
  %95 = load i32*, i32** %rectz, align 8, !dbg !7706
  %96 = load i32, i32* %95, align 4, !dbg !7707
  %cmp101 = icmp slt i32 %94, %96, !dbg !7708
  br i1 %cmp101, label %if.then103, label %if.end109, !dbg !7709

if.then103:                                       ; preds = %if.then100
  %97 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7710
  %rectmask104 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %97, i32 0, i32 21, !dbg !7713
  %98 = load i32*, i32** %rectmask104, align 8, !dbg !7713
  %tobool = icmp ne i32* %98, null, !dbg !7710
  br i1 %tobool, label %lor.lhs.false, label %if.then107, !dbg !7714

lor.lhs.false:                                    ; preds = %if.then103
  %99 = load i32, i32* %vergz, align 4, !dbg !7715
  %100 = load i32*, i32** %rectmask, align 8, !dbg !7716
  %101 = load i32, i32* %100, align 4, !dbg !7717
  %cmp105 = icmp sgt i32 %99, %101, !dbg !7718
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !7719

if.then107:                                       ; preds = %lor.lhs.false, %if.then103
  %102 = load i32, i32* %obi.addr, align 4, !dbg !7720
  %103 = load i32*, i32** %recto, align 8, !dbg !7722
  store i32 %102, i32* %103, align 4, !dbg !7723
  %104 = load i32, i32* %vergz, align 4, !dbg !7724
  %105 = load i32*, i32** %rectz, align 8, !dbg !7725
  store i32 %104, i32* %105, align 4, !dbg !7726
  %106 = load i32, i32* %zvlnr.addr, align 4, !dbg !7727
  %107 = load i32*, i32** %rectp, align 8, !dbg !7728
  store i32 %106, i32* %107, align 4, !dbg !7729
  br label %if.end108, !dbg !7730

if.end108:                                        ; preds = %if.then107, %lor.lhs.false
  br label %if.end109, !dbg !7731

if.end109:                                        ; preds = %if.end108, %if.then100
  br label %if.end110, !dbg !7732

if.end110:                                        ; preds = %if.end109, %land.lhs.true97, %land.lhs.true94, %if.end91
  %108 = load float, float* %dy, align 4, !dbg !7733
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !7734
  %109 = load float, float* %arrayidx111, align 4, !dbg !7735
  %add112 = fadd float %109, %108, !dbg !7735
  store float %add112, float* %arrayidx111, align 4, !dbg !7735
  %110 = load i32, i32* %maxtest, align 4, !dbg !7736
  %tobool113 = icmp ne i32 %110, 0, !dbg !7736
  br i1 %tobool113, label %land.lhs.true114, label %if.else119, !dbg !7738

land.lhs.true114:                                 ; preds = %if.end110
  %111 = load i32, i32* %vergz, align 4, !dbg !7739
  %112 = load i32, i32* %dz, align 4, !dbg !7740
  %sub115 = sub nsw i32 2147483632, %112, !dbg !7741
  %cmp116 = icmp sgt i32 %111, %sub115, !dbg !7742
  br i1 %cmp116, label %if.then118, label %if.else119, !dbg !7743

if.then118:                                       ; preds = %land.lhs.true114
  store i32 2147483632, i32* %vergz, align 4, !dbg !7744
  br label %if.end121, !dbg !7745

if.else119:                                       ; preds = %land.lhs.true114, %if.end110
  %113 = load i32, i32* %dz, align 4, !dbg !7746
  %114 = load i32, i32* %vergz, align 4, !dbg !7747
  %add120 = add nsw i32 %114, %113, !dbg !7747
  store i32 %add120, i32* %vergz, align 4, !dbg !7747
  br label %if.end121

if.end121:                                        ; preds = %if.else119, %if.then118
  br label %for.inc, !dbg !7748

for.inc:                                          ; preds = %if.end121
  %115 = load i32, i32* %x, align 4, !dbg !7749
  %inc = add nsw i32 %115, 1, !dbg !7749
  store i32 %inc, i32* %x, align 4, !dbg !7749
  %116 = load i32*, i32** %rectz, align 8, !dbg !7750
  %incdec.ptr = getelementptr inbounds i32, i32* %116, i32 1, !dbg !7750
  store i32* %incdec.ptr, i32** %rectz, align 8, !dbg !7750
  %117 = load i32*, i32** %rectp, align 8, !dbg !7751
  %incdec.ptr122 = getelementptr inbounds i32, i32* %117, i32 1, !dbg !7751
  store i32* %incdec.ptr122, i32** %rectp, align 8, !dbg !7751
  %118 = load i32*, i32** %recto, align 8, !dbg !7752
  %incdec.ptr123 = getelementptr inbounds i32, i32* %118, i32 1, !dbg !7752
  store i32* %incdec.ptr123, i32** %recto, align 8, !dbg !7752
  %119 = load i32*, i32** %rectmask, align 8, !dbg !7753
  %incdec.ptr124 = getelementptr inbounds i32, i32* %119, i32 1, !dbg !7753
  store i32* %incdec.ptr124, i32** %rectmask, align 8, !dbg !7753
  br label %for.cond, !dbg !7754, !llvm.loop !7755

for.end:                                          ; preds = %for.cond
  br label %if.end273, !dbg !7757

if.else125:                                       ; preds = %entry
  %120 = load float*, float** %vec1.addr, align 8, !dbg !7758
  %arrayidx126 = getelementptr inbounds float, float* %120, i64 1, !dbg !7758
  %121 = load float, float* %arrayidx126, align 4, !dbg !7758
  %122 = load float*, float** %vec2.addr, align 8, !dbg !7761
  %arrayidx127 = getelementptr inbounds float, float* %122, i64 1, !dbg !7761
  %123 = load float, float* %arrayidx127, align 4, !dbg !7761
  %cmp128 = fcmp olt float %121, %123, !dbg !7762
  br i1 %cmp128, label %if.then130, label %if.else133, !dbg !7763

if.then130:                                       ; preds = %if.else125
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7764
  %124 = load float*, float** %vec1.addr, align 8, !dbg !7766
  call void @copy_v3_v3(float* %arraydecay131, float* %124), !dbg !7767
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7768
  %125 = load float*, float** %vec2.addr, align 8, !dbg !7769
  call void @copy_v3_v3(float* %arraydecay132, float* %125), !dbg !7770
  br label %if.end138, !dbg !7771

if.else133:                                       ; preds = %if.else125
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7772
  %126 = load float*, float** %vec1.addr, align 8, !dbg !7774
  call void @copy_v3_v3(float* %arraydecay134, float* %126), !dbg !7775
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7776
  %127 = load float*, float** %vec2.addr, align 8, !dbg !7777
  call void @copy_v3_v3(float* %arraydecay135, float* %127), !dbg !7778
  %128 = load float, float* %dx, align 4, !dbg !7779
  %fneg136 = fneg float %128, !dbg !7780
  store float %fneg136, float* %dx, align 4, !dbg !7781
  %129 = load float, float* %dy, align 4, !dbg !7782
  %fneg137 = fneg float %129, !dbg !7783
  store float %fneg137, float* %dy, align 4, !dbg !7784
  br label %if.end138

if.end138:                                        ; preds = %if.else133, %if.then130
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !7785
  %130 = load float, float* %arrayidx139, align 4, !dbg !7785
  %conv140 = fpext float %130 to double, !dbg !7785
  %131 = call double @llvm.floor.f64(double %conv140), !dbg !7786
  %conv141 = fptosi double %131 to i32, !dbg !7786
  store i32 %conv141, i32* %start, align 4, !dbg !7787
  %132 = load i32, i32* %start, align 4, !dbg !7788
  %conv142 = sitofp i32 %132 to double, !dbg !7788
  %133 = load float, float* %dy, align 4, !dbg !7789
  %conv143 = fpext float %133 to double, !dbg !7789
  %134 = call double @llvm.floor.f64(double %conv143), !dbg !7790
  %add144 = fadd double %conv142, %134, !dbg !7791
  %conv145 = fptosi double %add144 to i32, !dbg !7788
  store i32 %conv145, i32* %end, align 4, !dbg !7792
  %135 = load i32, i32* %end, align 4, !dbg !7793
  %136 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7795
  %recty146 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %136, i32 0, i32 1, !dbg !7796
  %137 = load i32, i32* %recty146, align 4, !dbg !7796
  %cmp147 = icmp sge i32 %135, %137, !dbg !7797
  br i1 %cmp147, label %if.then149, label %if.end152, !dbg !7798

if.then149:                                       ; preds = %if.end138
  %138 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7799
  %recty150 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %138, i32 0, i32 1, !dbg !7800
  %139 = load i32, i32* %recty150, align 4, !dbg !7800
  %sub151 = sub nsw i32 %139, 1, !dbg !7801
  store i32 %sub151, i32* %end, align 4, !dbg !7802
  br label %if.end152, !dbg !7803

if.end152:                                        ; preds = %if.then149, %if.end138
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7804
  %140 = load float, float* %arrayidx153, align 4, !dbg !7804
  %conv154 = fpext float %140 to double, !dbg !7804
  %141 = call double @llvm.floor.f64(double %conv154), !dbg !7805
  %conv155 = fptosi double %141 to i32, !dbg !7805
  store i32 %conv155, i32* %oldx, align 4, !dbg !7806
  %142 = load float, float* %dy, align 4, !dbg !7807
  %143 = load float, float* %dx, align 4, !dbg !7808
  %div156 = fdiv float %143, %142, !dbg !7808
  store float %div156, float* %dx, align 4, !dbg !7808
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !7809
  %144 = load float, float* %arrayidx157, align 4, !dbg !7809
  %conv158 = fpext float %144 to double, !dbg !7809
  %145 = call double @llvm.floor.f64(double %conv158), !dbg !7810
  %conv159 = fptosi double %145 to i32, !dbg !7810
  store i32 %conv159, i32* %vergz, align 4, !dbg !7811
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !7812
  %146 = load float, float* %arrayidx160, align 4, !dbg !7812
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !7813
  %147 = load float, float* %arrayidx161, align 4, !dbg !7813
  %sub162 = fsub float %146, %147, !dbg !7814
  %148 = load float, float* %dy, align 4, !dbg !7815
  %div163 = fdiv float %sub162, %148, !dbg !7816
  %conv164 = fpext float %div163 to double, !dbg !7817
  %149 = call double @llvm.floor.f64(double %conv164), !dbg !7818
  %conv165 = fptosi double %149 to i32, !dbg !7818
  store i32 %conv165, i32* %dz, align 4, !dbg !7819
  %150 = load i32, i32* %vergz, align 4, !dbg !7820
  %cmp166 = icmp sgt i32 %150, 1342177280, !dbg !7822
  br i1 %cmp166, label %land.lhs.true168, label %if.end172, !dbg !7823

land.lhs.true168:                                 ; preds = %if.end152
  %151 = load i32, i32* %dz, align 4, !dbg !7824
  %cmp169 = icmp sgt i32 %151, 0, !dbg !7825
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !7826

if.then171:                                       ; preds = %land.lhs.true168
  store i32 1, i32* %maxtest, align 4, !dbg !7827
  br label %if.end172, !dbg !7828

if.end172:                                        ; preds = %if.then171, %land.lhs.true168, %if.end152
  %152 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7829
  %rectz173 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %152, i32 0, i32 16, !dbg !7830
  %153 = load i32*, i32** %rectz173, align 8, !dbg !7830
  %154 = load i32, i32* %start, align 4, !dbg !7831
  %155 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7832
  %rectx174 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %155, i32 0, i32 0, !dbg !7833
  %156 = load i32, i32* %rectx174, align 8, !dbg !7833
  %mul175 = mul nsw i32 %154, %156, !dbg !7834
  %idx.ext176 = sext i32 %mul175 to i64, !dbg !7835
  %add.ptr177 = getelementptr inbounds i32, i32* %153, i64 %idx.ext176, !dbg !7835
  %157 = load i32, i32* %oldx, align 4, !dbg !7836
  %idx.ext178 = sext i32 %157 to i64, !dbg !7837
  %add.ptr179 = getelementptr inbounds i32, i32* %add.ptr177, i64 %idx.ext178, !dbg !7837
  store i32* %add.ptr179, i32** %rectz, align 8, !dbg !7838
  %158 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7839
  %rectp180 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %158, i32 0, i32 19, !dbg !7840
  %159 = load i32*, i32** %rectp180, align 8, !dbg !7840
  %160 = load i32, i32* %start, align 4, !dbg !7841
  %161 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7842
  %rectx181 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %161, i32 0, i32 0, !dbg !7843
  %162 = load i32, i32* %rectx181, align 8, !dbg !7843
  %mul182 = mul nsw i32 %160, %162, !dbg !7844
  %idx.ext183 = sext i32 %mul182 to i64, !dbg !7845
  %add.ptr184 = getelementptr inbounds i32, i32* %159, i64 %idx.ext183, !dbg !7845
  %163 = load i32, i32* %oldx, align 4, !dbg !7846
  %idx.ext185 = sext i32 %163 to i64, !dbg !7847
  %add.ptr186 = getelementptr inbounds i32, i32* %add.ptr184, i64 %idx.ext185, !dbg !7847
  store i32* %add.ptr186, i32** %rectp, align 8, !dbg !7848
  %164 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7849
  %recto187 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %164, i32 0, i32 20, !dbg !7850
  %165 = load i32*, i32** %recto187, align 8, !dbg !7850
  %166 = load i32, i32* %start, align 4, !dbg !7851
  %167 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7852
  %rectx188 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %167, i32 0, i32 0, !dbg !7853
  %168 = load i32, i32* %rectx188, align 8, !dbg !7853
  %mul189 = mul nsw i32 %166, %168, !dbg !7854
  %idx.ext190 = sext i32 %mul189 to i64, !dbg !7855
  %add.ptr191 = getelementptr inbounds i32, i32* %165, i64 %idx.ext190, !dbg !7855
  %169 = load i32, i32* %oldx, align 4, !dbg !7856
  %idx.ext192 = sext i32 %169 to i64, !dbg !7857
  %add.ptr193 = getelementptr inbounds i32, i32* %add.ptr191, i64 %idx.ext192, !dbg !7857
  store i32* %add.ptr193, i32** %recto, align 8, !dbg !7858
  %170 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7859
  %rectmask194 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %170, i32 0, i32 21, !dbg !7860
  %171 = load i32*, i32** %rectmask194, align 8, !dbg !7860
  %172 = load i32, i32* %start, align 4, !dbg !7861
  %173 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7862
  %rectx195 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %173, i32 0, i32 0, !dbg !7863
  %174 = load i32, i32* %rectx195, align 8, !dbg !7863
  %mul196 = mul nsw i32 %172, %174, !dbg !7864
  %idx.ext197 = sext i32 %mul196 to i64, !dbg !7865
  %add.ptr198 = getelementptr inbounds i32, i32* %171, i64 %idx.ext197, !dbg !7865
  %175 = load i32, i32* %oldx, align 4, !dbg !7866
  %idx.ext199 = sext i32 %175 to i64, !dbg !7867
  %add.ptr200 = getelementptr inbounds i32, i32* %add.ptr198, i64 %idx.ext199, !dbg !7867
  store i32* %add.ptr200, i32** %rectmask, align 8, !dbg !7868
  %176 = load float, float* %dx, align 4, !dbg !7869
  %cmp201 = fcmp olt float %176, 0.000000e+00, !dbg !7871
  br i1 %cmp201, label %if.then203, label %if.else204, !dbg !7872

if.then203:                                       ; preds = %if.end172
  store i32 -1, i32* %ofs, align 4, !dbg !7873
  br label %if.end205, !dbg !7874

if.else204:                                       ; preds = %if.end172
  store i32 1, i32* %ofs, align 4, !dbg !7875
  br label %if.end205

if.end205:                                        ; preds = %if.else204, %if.then203
  %177 = load i32, i32* %start, align 4, !dbg !7876
  store i32 %177, i32* %y, align 4, !dbg !7878
  br label %for.cond206, !dbg !7879

for.cond206:                                      ; preds = %for.inc258, %if.end205
  %178 = load i32, i32* %y, align 4, !dbg !7880
  %179 = load i32, i32* %end, align 4, !dbg !7882
  %cmp207 = icmp sle i32 %178, %179, !dbg !7883
  br i1 %cmp207, label %for.body209, label %for.end272, !dbg !7884

for.body209:                                      ; preds = %for.cond206
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7885
  %180 = load float, float* %arrayidx210, align 4, !dbg !7885
  %conv211 = fpext float %180 to double, !dbg !7885
  %181 = call double @llvm.floor.f64(double %conv211), !dbg !7887
  %conv212 = fptosi double %181 to i32, !dbg !7887
  store i32 %conv212, i32* %x, align 4, !dbg !7888
  %182 = load i32, i32* %x, align 4, !dbg !7889
  %183 = load i32, i32* %oldx, align 4, !dbg !7891
  %cmp213 = icmp ne i32 %182, %183, !dbg !7892
  br i1 %cmp213, label %if.then215, label %if.end224, !dbg !7893

if.then215:                                       ; preds = %for.body209
  %184 = load i32, i32* %x, align 4, !dbg !7894
  store i32 %184, i32* %oldx, align 4, !dbg !7896
  %185 = load i32, i32* %ofs, align 4, !dbg !7897
  %186 = load i32*, i32** %rectz, align 8, !dbg !7898
  %idx.ext216 = sext i32 %185 to i64, !dbg !7898
  %add.ptr217 = getelementptr inbounds i32, i32* %186, i64 %idx.ext216, !dbg !7898
  store i32* %add.ptr217, i32** %rectz, align 8, !dbg !7898
  %187 = load i32, i32* %ofs, align 4, !dbg !7899
  %188 = load i32*, i32** %rectp, align 8, !dbg !7900
  %idx.ext218 = sext i32 %187 to i64, !dbg !7900
  %add.ptr219 = getelementptr inbounds i32, i32* %188, i64 %idx.ext218, !dbg !7900
  store i32* %add.ptr219, i32** %rectp, align 8, !dbg !7900
  %189 = load i32, i32* %ofs, align 4, !dbg !7901
  %190 = load i32*, i32** %recto, align 8, !dbg !7902
  %idx.ext220 = sext i32 %189 to i64, !dbg !7902
  %add.ptr221 = getelementptr inbounds i32, i32* %190, i64 %idx.ext220, !dbg !7902
  store i32* %add.ptr221, i32** %recto, align 8, !dbg !7902
  %191 = load i32, i32* %ofs, align 4, !dbg !7903
  %192 = load i32*, i32** %rectmask, align 8, !dbg !7904
  %idx.ext222 = sext i32 %191 to i64, !dbg !7904
  %add.ptr223 = getelementptr inbounds i32, i32* %192, i64 %idx.ext222, !dbg !7904
  store i32* %add.ptr223, i32** %rectmask, align 8, !dbg !7904
  br label %if.end224, !dbg !7905

if.end224:                                        ; preds = %if.then215, %for.body209
  %193 = load i32, i32* %x, align 4, !dbg !7906
  %cmp225 = icmp sge i32 %193, 0, !dbg !7908
  br i1 %cmp225, label %land.lhs.true227, label %if.end246, !dbg !7909

land.lhs.true227:                                 ; preds = %if.end224
  %194 = load i32, i32* %y, align 4, !dbg !7910
  %cmp228 = icmp sge i32 %194, 0, !dbg !7911
  br i1 %cmp228, label %land.lhs.true230, label %if.end246, !dbg !7912

land.lhs.true230:                                 ; preds = %land.lhs.true227
  %195 = load i32, i32* %x, align 4, !dbg !7913
  %196 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7914
  %rectx231 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %196, i32 0, i32 0, !dbg !7915
  %197 = load i32, i32* %rectx231, align 8, !dbg !7915
  %cmp232 = icmp slt i32 %195, %197, !dbg !7916
  br i1 %cmp232, label %if.then234, label %if.end246, !dbg !7917

if.then234:                                       ; preds = %land.lhs.true230
  %198 = load i32, i32* %vergz, align 4, !dbg !7918
  %199 = load i32*, i32** %rectz, align 8, !dbg !7921
  %200 = load i32, i32* %199, align 4, !dbg !7922
  %cmp235 = icmp slt i32 %198, %200, !dbg !7923
  br i1 %cmp235, label %if.then237, label %if.end245, !dbg !7924

if.then237:                                       ; preds = %if.then234
  %201 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7925
  %rectmask238 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %201, i32 0, i32 21, !dbg !7928
  %202 = load i32*, i32** %rectmask238, align 8, !dbg !7928
  %tobool239 = icmp ne i32* %202, null, !dbg !7925
  br i1 %tobool239, label %lor.lhs.false240, label %if.then243, !dbg !7929

lor.lhs.false240:                                 ; preds = %if.then237
  %203 = load i32, i32* %vergz, align 4, !dbg !7930
  %204 = load i32*, i32** %rectmask, align 8, !dbg !7931
  %205 = load i32, i32* %204, align 4, !dbg !7932
  %cmp241 = icmp sgt i32 %203, %205, !dbg !7933
  br i1 %cmp241, label %if.then243, label %if.end244, !dbg !7934

if.then243:                                       ; preds = %lor.lhs.false240, %if.then237
  %206 = load i32, i32* %vergz, align 4, !dbg !7935
  %207 = load i32*, i32** %rectz, align 8, !dbg !7937
  store i32 %206, i32* %207, align 4, !dbg !7938
  %208 = load i32, i32* %zvlnr.addr, align 4, !dbg !7939
  %209 = load i32*, i32** %rectp, align 8, !dbg !7940
  store i32 %208, i32* %209, align 4, !dbg !7941
  %210 = load i32, i32* %obi.addr, align 4, !dbg !7942
  %211 = load i32*, i32** %recto, align 8, !dbg !7943
  store i32 %210, i32* %211, align 4, !dbg !7944
  br label %if.end244, !dbg !7945

if.end244:                                        ; preds = %if.then243, %lor.lhs.false240
  br label %if.end245, !dbg !7946

if.end245:                                        ; preds = %if.end244, %if.then234
  br label %if.end246, !dbg !7947

if.end246:                                        ; preds = %if.end245, %land.lhs.true230, %land.lhs.true227, %if.end224
  %212 = load float, float* %dx, align 4, !dbg !7948
  %arrayidx247 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7949
  %213 = load float, float* %arrayidx247, align 4, !dbg !7950
  %add248 = fadd float %213, %212, !dbg !7950
  store float %add248, float* %arrayidx247, align 4, !dbg !7950
  %214 = load i32, i32* %maxtest, align 4, !dbg !7951
  %tobool249 = icmp ne i32 %214, 0, !dbg !7951
  br i1 %tobool249, label %land.lhs.true250, label %if.else255, !dbg !7953

land.lhs.true250:                                 ; preds = %if.end246
  %215 = load i32, i32* %vergz, align 4, !dbg !7954
  %216 = load i32, i32* %dz, align 4, !dbg !7955
  %sub251 = sub nsw i32 2147483632, %216, !dbg !7956
  %cmp252 = icmp sgt i32 %215, %sub251, !dbg !7957
  br i1 %cmp252, label %if.then254, label %if.else255, !dbg !7958

if.then254:                                       ; preds = %land.lhs.true250
  store i32 2147483632, i32* %vergz, align 4, !dbg !7959
  br label %if.end257, !dbg !7960

if.else255:                                       ; preds = %land.lhs.true250, %if.end246
  %217 = load i32, i32* %dz, align 4, !dbg !7961
  %218 = load i32, i32* %vergz, align 4, !dbg !7962
  %add256 = add nsw i32 %218, %217, !dbg !7962
  store i32 %add256, i32* %vergz, align 4, !dbg !7962
  br label %if.end257

if.end257:                                        ; preds = %if.else255, %if.then254
  br label %for.inc258, !dbg !7963

for.inc258:                                       ; preds = %if.end257
  %219 = load i32, i32* %y, align 4, !dbg !7964
  %inc259 = add nsw i32 %219, 1, !dbg !7964
  store i32 %inc259, i32* %y, align 4, !dbg !7964
  %220 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7965
  %rectx260 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %220, i32 0, i32 0, !dbg !7966
  %221 = load i32, i32* %rectx260, align 8, !dbg !7966
  %222 = load i32*, i32** %rectz, align 8, !dbg !7967
  %idx.ext261 = sext i32 %221 to i64, !dbg !7967
  %add.ptr262 = getelementptr inbounds i32, i32* %222, i64 %idx.ext261, !dbg !7967
  store i32* %add.ptr262, i32** %rectz, align 8, !dbg !7967
  %223 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7968
  %rectx263 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %223, i32 0, i32 0, !dbg !7969
  %224 = load i32, i32* %rectx263, align 8, !dbg !7969
  %225 = load i32*, i32** %rectp, align 8, !dbg !7970
  %idx.ext264 = sext i32 %224 to i64, !dbg !7970
  %add.ptr265 = getelementptr inbounds i32, i32* %225, i64 %idx.ext264, !dbg !7970
  store i32* %add.ptr265, i32** %rectp, align 8, !dbg !7970
  %226 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7971
  %rectx266 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %226, i32 0, i32 0, !dbg !7972
  %227 = load i32, i32* %rectx266, align 8, !dbg !7972
  %228 = load i32*, i32** %recto, align 8, !dbg !7973
  %idx.ext267 = sext i32 %227 to i64, !dbg !7973
  %add.ptr268 = getelementptr inbounds i32, i32* %228, i64 %idx.ext267, !dbg !7973
  store i32* %add.ptr268, i32** %recto, align 8, !dbg !7973
  %229 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !7974
  %rectx269 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %229, i32 0, i32 0, !dbg !7975
  %230 = load i32, i32* %rectx269, align 8, !dbg !7975
  %231 = load i32*, i32** %rectmask, align 8, !dbg !7976
  %idx.ext270 = sext i32 %230 to i64, !dbg !7976
  %add.ptr271 = getelementptr inbounds i32, i32* %231, i64 %idx.ext270, !dbg !7976
  store i32* %add.ptr271, i32** %rectmask, align 8, !dbg !7976
  br label %for.cond206, !dbg !7977, !llvm.loop !7978

for.end272:                                       ; preds = %for.cond206
  br label %if.end273

if.end273:                                        ; preds = %for.end272, %for.end
  ret void, !dbg !7980
}

declare dso_local i32 @clip_render_object([3 x float]*, float*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %cache, i32 %size) #0 !dbg !7981 {
entry:
  %cache.addr = alloca %struct.ZbufProjectCache*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ZbufProjectCache* %cache, %struct.ZbufProjectCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZbufProjectCache** %cache.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7989, metadata !DIExpression()), !dbg !7990
  %0 = load i32, i32* %size.addr, align 4, !dbg !7991
  %cmp = icmp sgt i32 %0, 256, !dbg !7993
  br i1 %cmp, label %if.then, label %if.end, !dbg !7994

if.then:                                          ; preds = %entry
  store i32 256, i32* %size.addr, align 4, !dbg !7995
  br label %if.end, !dbg !7996

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !7997
  %2 = bitcast %struct.ZbufProjectCache* %1 to i8*, !dbg !7998
  %3 = load i32, i32* %size.addr, align 4, !dbg !7999
  %conv = sext i32 %3 to i64, !dbg !7999
  %mul = mul i64 24, %conv, !dbg !8000
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul, i1 false), !dbg !7998
  store i32 0, i32* %i, align 4, !dbg !8001
  br label %for.cond, !dbg !8003

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !8004
  %5 = load i32, i32* %size.addr, align 4, !dbg !8006
  %cmp1 = icmp slt i32 %4, %5, !dbg !8007
  br i1 %cmp1, label %for.body, label %for.end, !dbg !8008

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8009
  %7 = load i32, i32* %i, align 4, !dbg !8010
  %idxprom = sext i32 %7 to i64, !dbg !8009
  %arrayidx = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %6, i64 %idxprom, !dbg !8009
  %index = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx, i32 0, i32 0, !dbg !8011
  store i32 -1, i32* %index, align 4, !dbg !8012
  br label %for.inc, !dbg !8009

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !8013
  %inc = add nsw i32 %8, 1, !dbg !8013
  store i32 %inc, i32* %i, align 4, !dbg !8013
  br label %for.cond, !dbg !8014, !llvm.loop !8015

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8017
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @zbuf_part_project(%struct.ZbufProjectCache* %cache, i32 %index, [4 x float]* %winmat, float* %bounds, float* %co, float* %ho) #0 !dbg !8018 {
entry:
  %retval = alloca i32, align 4
  %cache.addr = alloca %struct.ZbufProjectCache*, align 8
  %index.addr = alloca i32, align 4
  %winmat.addr = alloca [4 x float]*, align 8
  %bounds.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %ho.addr = alloca float*, align 8
  %vec = alloca [3 x float], align 4
  %cindex = alloca i32, align 4
  %wco = alloca float, align 4
  %clipflag = alloca i32, align 4
  store %struct.ZbufProjectCache* %cache, %struct.ZbufProjectCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZbufProjectCache** %cache.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8023, metadata !DIExpression()), !dbg !8024
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !8025, metadata !DIExpression()), !dbg !8026
  store float* %bounds, float** %bounds.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bounds.addr, metadata !8027, metadata !DIExpression()), !dbg !8028
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !8029, metadata !DIExpression()), !dbg !8030
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !8031, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !8033, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.declare(metadata i32* %cindex, metadata !8035, metadata !DIExpression()), !dbg !8036
  %0 = load i32, i32* %index.addr, align 4, !dbg !8037
  %and = and i32 %0, 255, !dbg !8038
  store i32 %and, i32* %cindex, align 4, !dbg !8036
  %1 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8039
  %2 = load i32, i32* %cindex, align 4, !dbg !8041
  %idxprom = sext i32 %2 to i64, !dbg !8039
  %arrayidx = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %1, i64 %idxprom, !dbg !8039
  %index1 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx, i32 0, i32 0, !dbg !8042
  %3 = load i32, i32* %index1, align 4, !dbg !8042
  %4 = load i32, i32* %index.addr, align 4, !dbg !8043
  %cmp = icmp eq i32 %3, %4, !dbg !8044
  br i1 %cmp, label %if.then, label %if.else, !dbg !8045

if.then:                                          ; preds = %entry
  %5 = load float*, float** %ho.addr, align 8, !dbg !8046
  %6 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8048
  %7 = load i32, i32* %cindex, align 4, !dbg !8049
  %idxprom2 = sext i32 %7 to i64, !dbg !8048
  %arrayidx3 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %6, i64 %idxprom2, !dbg !8048
  %ho4 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx3, i32 0, i32 2, !dbg !8050
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !8048
  call void @copy_v4_v4(float* %5, float* %arraydecay), !dbg !8051
  %8 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8052
  %9 = load i32, i32* %cindex, align 4, !dbg !8053
  %idxprom5 = sext i32 %9 to i64, !dbg !8052
  %arrayidx6 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %8, i64 %idxprom5, !dbg !8052
  %clip = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx6, i32 0, i32 1, !dbg !8054
  %10 = load i32, i32* %clip, align 4, !dbg !8054
  store i32 %10, i32* %retval, align 4, !dbg !8055
  br label %return, !dbg !8055

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %wco, metadata !8056, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata i32* %clipflag, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i32 0, i32* %clipflag, align 4, !dbg !8060
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8061
  %11 = load float*, float** %co.addr, align 8, !dbg !8062
  call void @copy_v3_v3(float* %arraydecay7, float* %11), !dbg !8063
  %12 = load float*, float** %co.addr, align 8, !dbg !8064
  %13 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !8065
  %14 = load float*, float** %ho.addr, align 8, !dbg !8066
  call void @projectvert(float* %12, [4 x float]* %13, float* %14), !dbg !8067
  %15 = load float*, float** %ho.addr, align 8, !dbg !8068
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 3, !dbg !8068
  %16 = load float, float* %arrayidx8, align 4, !dbg !8068
  store float %16, float* %wco, align 4, !dbg !8069
  %17 = load float*, float** %ho.addr, align 8, !dbg !8070
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 0, !dbg !8070
  %18 = load float, float* %arrayidx9, align 4, !dbg !8070
  %19 = load float*, float** %bounds.addr, align 8, !dbg !8072
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 0, !dbg !8072
  %20 = load float, float* %arrayidx10, align 4, !dbg !8072
  %21 = load float, float* %wco, align 4, !dbg !8073
  %mul = fmul float %20, %21, !dbg !8074
  %cmp11 = fcmp olt float %18, %mul, !dbg !8075
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !8076

if.then12:                                        ; preds = %if.else
  %22 = load i32, i32* %clipflag, align 4, !dbg !8077
  %or = or i32 %22, 1, !dbg !8077
  store i32 %or, i32* %clipflag, align 4, !dbg !8077
  br label %if.end20, !dbg !8078

if.else13:                                        ; preds = %if.else
  %23 = load float*, float** %ho.addr, align 8, !dbg !8079
  %arrayidx14 = getelementptr inbounds float, float* %23, i64 0, !dbg !8079
  %24 = load float, float* %arrayidx14, align 4, !dbg !8079
  %25 = load float*, float** %bounds.addr, align 8, !dbg !8081
  %arrayidx15 = getelementptr inbounds float, float* %25, i64 1, !dbg !8081
  %26 = load float, float* %arrayidx15, align 4, !dbg !8081
  %27 = load float, float* %wco, align 4, !dbg !8082
  %mul16 = fmul float %26, %27, !dbg !8083
  %cmp17 = fcmp ogt float %24, %mul16, !dbg !8084
  br i1 %cmp17, label %if.then18, label %if.end, !dbg !8085

if.then18:                                        ; preds = %if.else13
  %28 = load i32, i32* %clipflag, align 4, !dbg !8086
  %or19 = or i32 %28, 2, !dbg !8086
  store i32 %or19, i32* %clipflag, align 4, !dbg !8086
  br label %if.end, !dbg !8087

if.end:                                           ; preds = %if.then18, %if.else13
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then12
  %29 = load float*, float** %ho.addr, align 8, !dbg !8088
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 1, !dbg !8088
  %30 = load float, float* %arrayidx21, align 4, !dbg !8088
  %31 = load float*, float** %bounds.addr, align 8, !dbg !8090
  %arrayidx22 = getelementptr inbounds float, float* %31, i64 3, !dbg !8090
  %32 = load float, float* %arrayidx22, align 4, !dbg !8090
  %33 = load float, float* %wco, align 4, !dbg !8091
  %mul23 = fmul float %32, %33, !dbg !8092
  %cmp24 = fcmp ogt float %30, %mul23, !dbg !8093
  br i1 %cmp24, label %if.then25, label %if.else27, !dbg !8094

if.then25:                                        ; preds = %if.end20
  %34 = load i32, i32* %clipflag, align 4, !dbg !8095
  %or26 = or i32 %34, 4, !dbg !8095
  store i32 %or26, i32* %clipflag, align 4, !dbg !8095
  br label %if.end35, !dbg !8096

if.else27:                                        ; preds = %if.end20
  %35 = load float*, float** %ho.addr, align 8, !dbg !8097
  %arrayidx28 = getelementptr inbounds float, float* %35, i64 1, !dbg !8097
  %36 = load float, float* %arrayidx28, align 4, !dbg !8097
  %37 = load float*, float** %bounds.addr, align 8, !dbg !8099
  %arrayidx29 = getelementptr inbounds float, float* %37, i64 2, !dbg !8099
  %38 = load float, float* %arrayidx29, align 4, !dbg !8099
  %39 = load float, float* %wco, align 4, !dbg !8100
  %mul30 = fmul float %38, %39, !dbg !8101
  %cmp31 = fcmp olt float %36, %mul30, !dbg !8102
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !8103

if.then32:                                        ; preds = %if.else27
  %40 = load i32, i32* %clipflag, align 4, !dbg !8104
  %or33 = or i32 %40, 8, !dbg !8104
  store i32 %or33, i32* %clipflag, align 4, !dbg !8104
  br label %if.end34, !dbg !8105

if.end34:                                         ; preds = %if.then32, %if.else27
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then25
  %41 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8106
  %42 = load i32, i32* %cindex, align 4, !dbg !8107
  %idxprom36 = sext i32 %42 to i64, !dbg !8106
  %arrayidx37 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %41, i64 %idxprom36, !dbg !8106
  %ho38 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx37, i32 0, i32 2, !dbg !8108
  %arraydecay39 = getelementptr inbounds [4 x float], [4 x float]* %ho38, i64 0, i64 0, !dbg !8106
  %43 = load float*, float** %ho.addr, align 8, !dbg !8109
  call void @copy_v4_v4(float* %arraydecay39, float* %43), !dbg !8110
  %44 = load i32, i32* %clipflag, align 4, !dbg !8111
  %45 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8112
  %46 = load i32, i32* %cindex, align 4, !dbg !8113
  %idxprom40 = sext i32 %46 to i64, !dbg !8112
  %arrayidx41 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %45, i64 %idxprom40, !dbg !8112
  %clip42 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx41, i32 0, i32 1, !dbg !8114
  store i32 %44, i32* %clip42, align 4, !dbg !8115
  %47 = load i32, i32* %index.addr, align 4, !dbg !8116
  %48 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !8117
  %49 = load i32, i32* %cindex, align 4, !dbg !8118
  %idxprom43 = sext i32 %49 to i64, !dbg !8117
  %arrayidx44 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %48, i64 %idxprom43, !dbg !8117
  %index45 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx44, i32 0, i32 0, !dbg !8119
  store i32 %47, i32* %index45, align 4, !dbg !8120
  %50 = load i32, i32* %clipflag, align 4, !dbg !8121
  store i32 %50, i32* %retval, align 4, !dbg !8122
  br label %return, !dbg !8122

return:                                           ; preds = %if.end35, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !8123
  ret i32 %51, !dbg !8123
}

; Function Attrs: noinline nounwind uwtable
define internal void @zmask_rect(i32* %rectz, i32* %rectp, i32 %xs, i32 %ys, i32 %neg) #0 !dbg !8124 {
entry:
  %rectz.addr = alloca i32*, align 8
  %rectp.addr = alloca i32*, align 8
  %xs.addr = alloca i32, align 4
  %ys.addr = alloca i32, align 4
  %neg.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %temprectp = alloca i32*, align 8
  %row1 = alloca i32, align 4
  %row2 = alloca i32, align 4
  %row3 = alloca i32, align 4
  %curp = alloca i32*, align 8
  %curz = alloca i32*, align 8
  %tot = alloca i32, align 4
  %z = alloca float, align 4
  store i32* %rectz, i32** %rectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectz.addr, metadata !8127, metadata !DIExpression()), !dbg !8128
  store i32* %rectp, i32** %rectp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectp.addr, metadata !8129, metadata !DIExpression()), !dbg !8130
  store i32 %xs, i32* %xs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xs.addr, metadata !8131, metadata !DIExpression()), !dbg !8132
  store i32 %ys, i32* %ys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ys.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  store i32 %neg, i32* %neg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %neg.addr, metadata !8135, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i32 0, i32* %len, align 4, !dbg !8138
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8139, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.declare(metadata i32** %temprectp, metadata !8143, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.declare(metadata i32* %row1, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.declare(metadata i32* %row2, metadata !8147, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.declare(metadata i32* %row3, metadata !8149, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.declare(metadata i32** %curp, metadata !8151, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.declare(metadata i32** %curz, metadata !8153, metadata !DIExpression()), !dbg !8154
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8155
  %1 = load i32*, i32** %rectp.addr, align 8, !dbg !8156
  %2 = bitcast i32* %1 to i8*, !dbg !8156
  %call = call i8* %0(i8* %2), !dbg !8155
  %3 = bitcast i8* %call to i32*, !dbg !8155
  store i32* %3, i32** %temprectp, align 8, !dbg !8157
  store i32 1, i32* %y, align 4, !dbg !8158
  br label %for.cond, !dbg !8160

for.cond:                                         ; preds = %for.inc126, %entry
  %4 = load i32, i32* %y, align 4, !dbg !8161
  %5 = load i32, i32* %ys.addr, align 4, !dbg !8163
  %cmp = icmp sle i32 %4, %5, !dbg !8164
  br i1 %cmp, label %for.body, label %for.end128, !dbg !8165

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %y, align 4, !dbg !8166
  %sub = sub nsw i32 %6, 2, !dbg !8168
  %7 = load i32, i32* %xs.addr, align 4, !dbg !8169
  %mul = mul nsw i32 %sub, %7, !dbg !8170
  store i32 %mul, i32* %row1, align 4, !dbg !8171
  %8 = load i32, i32* %row1, align 4, !dbg !8172
  %9 = load i32, i32* %xs.addr, align 4, !dbg !8173
  %add = add nsw i32 %8, %9, !dbg !8174
  store i32 %add, i32* %row2, align 4, !dbg !8175
  %10 = load i32, i32* %row2, align 4, !dbg !8176
  %11 = load i32, i32* %xs.addr, align 4, !dbg !8177
  %add1 = add nsw i32 %10, %11, !dbg !8178
  store i32 %add1, i32* %row3, align 4, !dbg !8179
  %12 = load i32, i32* %y, align 4, !dbg !8180
  %cmp2 = icmp eq i32 %12, 1, !dbg !8182
  br i1 %cmp2, label %if.then, label %if.else, !dbg !8183

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %row2, align 4, !dbg !8184
  store i32 %13, i32* %row1, align 4, !dbg !8185
  br label %if.end5, !dbg !8186

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %y, align 4, !dbg !8187
  %15 = load i32, i32* %ys.addr, align 4, !dbg !8189
  %cmp3 = icmp eq i32 %14, %15, !dbg !8190
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8191

if.then4:                                         ; preds = %if.else
  %16 = load i32, i32* %row2, align 4, !dbg !8192
  store i32 %16, i32* %row3, align 4, !dbg !8193
  br label %if.end, !dbg !8194

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %17 = load i32*, i32** %rectp.addr, align 8, !dbg !8195
  %18 = load i32, i32* %y, align 4, !dbg !8196
  %sub6 = sub nsw i32 %18, 1, !dbg !8197
  %19 = load i32, i32* %xs.addr, align 4, !dbg !8198
  %mul7 = mul nsw i32 %sub6, %19, !dbg !8199
  %idx.ext = sext i32 %mul7 to i64, !dbg !8200
  %add.ptr = getelementptr inbounds i32, i32* %17, i64 %idx.ext, !dbg !8200
  store i32* %add.ptr, i32** %curp, align 8, !dbg !8201
  %20 = load i32*, i32** %rectz.addr, align 8, !dbg !8202
  %21 = load i32, i32* %y, align 4, !dbg !8203
  %sub8 = sub nsw i32 %21, 1, !dbg !8204
  %22 = load i32, i32* %xs.addr, align 4, !dbg !8205
  %mul9 = mul nsw i32 %sub8, %22, !dbg !8206
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !8207
  %add.ptr11 = getelementptr inbounds i32, i32* %20, i64 %idx.ext10, !dbg !8207
  store i32* %add.ptr11, i32** %curz, align 8, !dbg !8208
  store i32 0, i32* %x, align 4, !dbg !8209
  br label %for.cond12, !dbg !8211

for.cond12:                                       ; preds = %for.inc, %if.end5
  %23 = load i32, i32* %x, align 4, !dbg !8212
  %24 = load i32, i32* %xs.addr, align 4, !dbg !8214
  %cmp13 = icmp slt i32 %23, %24, !dbg !8215
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !8216

for.body14:                                       ; preds = %for.cond12
  %25 = load i32*, i32** %curp, align 8, !dbg !8217
  %arrayidx = getelementptr inbounds i32, i32* %25, i64 0, !dbg !8217
  %26 = load i32, i32* %arrayidx, align 4, !dbg !8217
  %cmp15 = icmp eq i32 %26, 0, !dbg !8220
  br i1 %cmp15, label %if.then16, label %if.end116, !dbg !8221

if.then16:                                        ; preds = %for.body14
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !8222, metadata !DIExpression()), !dbg !8224
  store i32 0, i32* %tot, align 4, !dbg !8224
  call void @llvm.dbg.declare(metadata float* %z, metadata !8225, metadata !DIExpression()), !dbg !8226
  store float 0.000000e+00, float* %z, align 4, !dbg !8226
  %27 = load i32*, i32** %temprectp, align 8, !dbg !8227
  %28 = load i32, i32* %row1, align 4, !dbg !8227
  %idxprom = sext i32 %28 to i64, !dbg !8227
  %arrayidx17 = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !8227
  %29 = load i32, i32* %arrayidx17, align 4, !dbg !8227
  %tobool = icmp ne i32 %29, 0, !dbg !8227
  br i1 %tobool, label %if.then18, label %if.end22, !dbg !8229

if.then18:                                        ; preds = %if.then16
  %30 = load i32*, i32** %rectz.addr, align 8, !dbg !8230
  %31 = load i32, i32* %row1, align 4, !dbg !8230
  %idxprom19 = sext i32 %31 to i64, !dbg !8230
  %arrayidx20 = getelementptr inbounds i32, i32* %30, i64 %idxprom19, !dbg !8230
  %32 = load i32, i32* %arrayidx20, align 4, !dbg !8230
  %conv = sitofp i32 %32 to float, !dbg !8230
  %33 = load float, float* %z, align 4, !dbg !8230
  %add21 = fadd float %33, %conv, !dbg !8230
  store float %add21, float* %z, align 4, !dbg !8230
  %34 = load i32, i32* %tot, align 4, !dbg !8230
  %inc = add nsw i32 %34, 1, !dbg !8230
  store i32 %inc, i32* %tot, align 4, !dbg !8230
  br label %if.end22, !dbg !8230

if.end22:                                         ; preds = %if.then18, %if.then16
  %35 = load i32*, i32** %temprectp, align 8, !dbg !8232
  %36 = load i32, i32* %row2, align 4, !dbg !8232
  %idxprom23 = sext i32 %36 to i64, !dbg !8232
  %arrayidx24 = getelementptr inbounds i32, i32* %35, i64 %idxprom23, !dbg !8232
  %37 = load i32, i32* %arrayidx24, align 4, !dbg !8232
  %tobool25 = icmp ne i32 %37, 0, !dbg !8232
  br i1 %tobool25, label %if.then26, label %if.end32, !dbg !8234

if.then26:                                        ; preds = %if.end22
  %38 = load i32*, i32** %rectz.addr, align 8, !dbg !8235
  %39 = load i32, i32* %row2, align 4, !dbg !8235
  %idxprom27 = sext i32 %39 to i64, !dbg !8235
  %arrayidx28 = getelementptr inbounds i32, i32* %38, i64 %idxprom27, !dbg !8235
  %40 = load i32, i32* %arrayidx28, align 4, !dbg !8235
  %conv29 = sitofp i32 %40 to float, !dbg !8235
  %41 = load float, float* %z, align 4, !dbg !8235
  %add30 = fadd float %41, %conv29, !dbg !8235
  store float %add30, float* %z, align 4, !dbg !8235
  %42 = load i32, i32* %tot, align 4, !dbg !8235
  %inc31 = add nsw i32 %42, 1, !dbg !8235
  store i32 %inc31, i32* %tot, align 4, !dbg !8235
  br label %if.end32, !dbg !8235

if.end32:                                         ; preds = %if.then26, %if.end22
  %43 = load i32*, i32** %temprectp, align 8, !dbg !8237
  %44 = load i32, i32* %row3, align 4, !dbg !8237
  %idxprom33 = sext i32 %44 to i64, !dbg !8237
  %arrayidx34 = getelementptr inbounds i32, i32* %43, i64 %idxprom33, !dbg !8237
  %45 = load i32, i32* %arrayidx34, align 4, !dbg !8237
  %tobool35 = icmp ne i32 %45, 0, !dbg !8237
  br i1 %tobool35, label %if.then36, label %if.end42, !dbg !8239

if.then36:                                        ; preds = %if.end32
  %46 = load i32*, i32** %rectz.addr, align 8, !dbg !8240
  %47 = load i32, i32* %row3, align 4, !dbg !8240
  %idxprom37 = sext i32 %47 to i64, !dbg !8240
  %arrayidx38 = getelementptr inbounds i32, i32* %46, i64 %idxprom37, !dbg !8240
  %48 = load i32, i32* %arrayidx38, align 4, !dbg !8240
  %conv39 = sitofp i32 %48 to float, !dbg !8240
  %49 = load float, float* %z, align 4, !dbg !8240
  %add40 = fadd float %49, %conv39, !dbg !8240
  store float %add40, float* %z, align 4, !dbg !8240
  %50 = load i32, i32* %tot, align 4, !dbg !8240
  %inc41 = add nsw i32 %50, 1, !dbg !8240
  store i32 %inc41, i32* %tot, align 4, !dbg !8240
  br label %if.end42, !dbg !8240

if.end42:                                         ; preds = %if.then36, %if.end32
  %51 = load i32*, i32** %temprectp, align 8, !dbg !8242
  %52 = load i32, i32* %row1, align 4, !dbg !8242
  %add43 = add nsw i32 %52, 1, !dbg !8242
  %idxprom44 = sext i32 %add43 to i64, !dbg !8242
  %arrayidx45 = getelementptr inbounds i32, i32* %51, i64 %idxprom44, !dbg !8242
  %53 = load i32, i32* %arrayidx45, align 4, !dbg !8242
  %tobool46 = icmp ne i32 %53, 0, !dbg !8242
  br i1 %tobool46, label %if.then47, label %if.end54, !dbg !8244

if.then47:                                        ; preds = %if.end42
  %54 = load i32*, i32** %rectz.addr, align 8, !dbg !8245
  %55 = load i32, i32* %row1, align 4, !dbg !8245
  %add48 = add nsw i32 %55, 1, !dbg !8245
  %idxprom49 = sext i32 %add48 to i64, !dbg !8245
  %arrayidx50 = getelementptr inbounds i32, i32* %54, i64 %idxprom49, !dbg !8245
  %56 = load i32, i32* %arrayidx50, align 4, !dbg !8245
  %conv51 = sitofp i32 %56 to float, !dbg !8245
  %57 = load float, float* %z, align 4, !dbg !8245
  %add52 = fadd float %57, %conv51, !dbg !8245
  store float %add52, float* %z, align 4, !dbg !8245
  %58 = load i32, i32* %tot, align 4, !dbg !8245
  %inc53 = add nsw i32 %58, 1, !dbg !8245
  store i32 %inc53, i32* %tot, align 4, !dbg !8245
  br label %if.end54, !dbg !8245

if.end54:                                         ; preds = %if.then47, %if.end42
  %59 = load i32*, i32** %temprectp, align 8, !dbg !8247
  %60 = load i32, i32* %row3, align 4, !dbg !8247
  %add55 = add nsw i32 %60, 1, !dbg !8247
  %idxprom56 = sext i32 %add55 to i64, !dbg !8247
  %arrayidx57 = getelementptr inbounds i32, i32* %59, i64 %idxprom56, !dbg !8247
  %61 = load i32, i32* %arrayidx57, align 4, !dbg !8247
  %tobool58 = icmp ne i32 %61, 0, !dbg !8247
  br i1 %tobool58, label %if.then59, label %if.end66, !dbg !8249

if.then59:                                        ; preds = %if.end54
  %62 = load i32*, i32** %rectz.addr, align 8, !dbg !8250
  %63 = load i32, i32* %row3, align 4, !dbg !8250
  %add60 = add nsw i32 %63, 1, !dbg !8250
  %idxprom61 = sext i32 %add60 to i64, !dbg !8250
  %arrayidx62 = getelementptr inbounds i32, i32* %62, i64 %idxprom61, !dbg !8250
  %64 = load i32, i32* %arrayidx62, align 4, !dbg !8250
  %conv63 = sitofp i32 %64 to float, !dbg !8250
  %65 = load float, float* %z, align 4, !dbg !8250
  %add64 = fadd float %65, %conv63, !dbg !8250
  store float %add64, float* %z, align 4, !dbg !8250
  %66 = load i32, i32* %tot, align 4, !dbg !8250
  %inc65 = add nsw i32 %66, 1, !dbg !8250
  store i32 %inc65, i32* %tot, align 4, !dbg !8250
  br label %if.end66, !dbg !8250

if.end66:                                         ; preds = %if.then59, %if.end54
  %67 = load i32, i32* %x, align 4, !dbg !8252
  %68 = load i32, i32* %xs.addr, align 4, !dbg !8254
  %sub67 = sub nsw i32 %68, 1, !dbg !8255
  %cmp68 = icmp ne i32 %67, %sub67, !dbg !8256
  br i1 %cmp68, label %if.then70, label %if.end107, !dbg !8257

if.then70:                                        ; preds = %if.end66
  %69 = load i32*, i32** %temprectp, align 8, !dbg !8258
  %70 = load i32, i32* %row1, align 4, !dbg !8258
  %add71 = add nsw i32 %70, 2, !dbg !8258
  %idxprom72 = sext i32 %add71 to i64, !dbg !8258
  %arrayidx73 = getelementptr inbounds i32, i32* %69, i64 %idxprom72, !dbg !8258
  %71 = load i32, i32* %arrayidx73, align 4, !dbg !8258
  %tobool74 = icmp ne i32 %71, 0, !dbg !8258
  br i1 %tobool74, label %if.then75, label %if.end82, !dbg !8261

if.then75:                                        ; preds = %if.then70
  %72 = load i32*, i32** %rectz.addr, align 8, !dbg !8262
  %73 = load i32, i32* %row1, align 4, !dbg !8262
  %add76 = add nsw i32 %73, 2, !dbg !8262
  %idxprom77 = sext i32 %add76 to i64, !dbg !8262
  %arrayidx78 = getelementptr inbounds i32, i32* %72, i64 %idxprom77, !dbg !8262
  %74 = load i32, i32* %arrayidx78, align 4, !dbg !8262
  %conv79 = sitofp i32 %74 to float, !dbg !8262
  %75 = load float, float* %z, align 4, !dbg !8262
  %add80 = fadd float %75, %conv79, !dbg !8262
  store float %add80, float* %z, align 4, !dbg !8262
  %76 = load i32, i32* %tot, align 4, !dbg !8262
  %inc81 = add nsw i32 %76, 1, !dbg !8262
  store i32 %inc81, i32* %tot, align 4, !dbg !8262
  br label %if.end82, !dbg !8262

if.end82:                                         ; preds = %if.then75, %if.then70
  %77 = load i32*, i32** %temprectp, align 8, !dbg !8264
  %78 = load i32, i32* %row2, align 4, !dbg !8264
  %add83 = add nsw i32 %78, 2, !dbg !8264
  %idxprom84 = sext i32 %add83 to i64, !dbg !8264
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom84, !dbg !8264
  %79 = load i32, i32* %arrayidx85, align 4, !dbg !8264
  %tobool86 = icmp ne i32 %79, 0, !dbg !8264
  br i1 %tobool86, label %if.then87, label %if.end94, !dbg !8266

if.then87:                                        ; preds = %if.end82
  %80 = load i32*, i32** %rectz.addr, align 8, !dbg !8267
  %81 = load i32, i32* %row2, align 4, !dbg !8267
  %add88 = add nsw i32 %81, 2, !dbg !8267
  %idxprom89 = sext i32 %add88 to i64, !dbg !8267
  %arrayidx90 = getelementptr inbounds i32, i32* %80, i64 %idxprom89, !dbg !8267
  %82 = load i32, i32* %arrayidx90, align 4, !dbg !8267
  %conv91 = sitofp i32 %82 to float, !dbg !8267
  %83 = load float, float* %z, align 4, !dbg !8267
  %add92 = fadd float %83, %conv91, !dbg !8267
  store float %add92, float* %z, align 4, !dbg !8267
  %84 = load i32, i32* %tot, align 4, !dbg !8267
  %inc93 = add nsw i32 %84, 1, !dbg !8267
  store i32 %inc93, i32* %tot, align 4, !dbg !8267
  br label %if.end94, !dbg !8267

if.end94:                                         ; preds = %if.then87, %if.end82
  %85 = load i32*, i32** %temprectp, align 8, !dbg !8269
  %86 = load i32, i32* %row3, align 4, !dbg !8269
  %add95 = add nsw i32 %86, 2, !dbg !8269
  %idxprom96 = sext i32 %add95 to i64, !dbg !8269
  %arrayidx97 = getelementptr inbounds i32, i32* %85, i64 %idxprom96, !dbg !8269
  %87 = load i32, i32* %arrayidx97, align 4, !dbg !8269
  %tobool98 = icmp ne i32 %87, 0, !dbg !8269
  br i1 %tobool98, label %if.then99, label %if.end106, !dbg !8271

if.then99:                                        ; preds = %if.end94
  %88 = load i32*, i32** %rectz.addr, align 8, !dbg !8272
  %89 = load i32, i32* %row3, align 4, !dbg !8272
  %add100 = add nsw i32 %89, 2, !dbg !8272
  %idxprom101 = sext i32 %add100 to i64, !dbg !8272
  %arrayidx102 = getelementptr inbounds i32, i32* %88, i64 %idxprom101, !dbg !8272
  %90 = load i32, i32* %arrayidx102, align 4, !dbg !8272
  %conv103 = sitofp i32 %90 to float, !dbg !8272
  %91 = load float, float* %z, align 4, !dbg !8272
  %add104 = fadd float %91, %conv103, !dbg !8272
  store float %add104, float* %z, align 4, !dbg !8272
  %92 = load i32, i32* %tot, align 4, !dbg !8272
  %inc105 = add nsw i32 %92, 1, !dbg !8272
  store i32 %inc105, i32* %tot, align 4, !dbg !8272
  br label %if.end106, !dbg !8272

if.end106:                                        ; preds = %if.then99, %if.end94
  br label %if.end107, !dbg !8274

if.end107:                                        ; preds = %if.end106, %if.end66
  %93 = load i32, i32* %tot, align 4, !dbg !8275
  %tobool108 = icmp ne i32 %93, 0, !dbg !8275
  br i1 %tobool108, label %if.then109, label %if.end115, !dbg !8277

if.then109:                                       ; preds = %if.end107
  %94 = load i32, i32* %len, align 4, !dbg !8278
  %inc110 = add nsw i32 %94, 1, !dbg !8278
  store i32 %inc110, i32* %len, align 4, !dbg !8278
  %95 = load float, float* %z, align 4, !dbg !8280
  %96 = load i32, i32* %tot, align 4, !dbg !8281
  %conv111 = sitofp i32 %96 to float, !dbg !8282
  %div = fdiv float %95, %conv111, !dbg !8283
  %conv112 = fptosi float %div to i32, !dbg !8284
  %97 = load i32*, i32** %curz, align 8, !dbg !8285
  %arrayidx113 = getelementptr inbounds i32, i32* %97, i64 0, !dbg !8285
  store i32 %conv112, i32* %arrayidx113, align 4, !dbg !8286
  %98 = load i32*, i32** %curp, align 8, !dbg !8287
  %arrayidx114 = getelementptr inbounds i32, i32* %98, i64 0, !dbg !8287
  store i32 -1, i32* %arrayidx114, align 4, !dbg !8288
  br label %if.end115, !dbg !8289

if.end115:                                        ; preds = %if.then109, %if.end107
  br label %if.end116, !dbg !8290

if.end116:                                        ; preds = %if.end115, %for.body14
  %99 = load i32, i32* %x, align 4, !dbg !8291
  %cmp117 = icmp ne i32 %99, 0, !dbg !8293
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !8294

if.then119:                                       ; preds = %if.end116
  %100 = load i32, i32* %row1, align 4, !dbg !8295
  %inc120 = add nsw i32 %100, 1, !dbg !8295
  store i32 %inc120, i32* %row1, align 4, !dbg !8295
  %101 = load i32, i32* %row2, align 4, !dbg !8297
  %inc121 = add nsw i32 %101, 1, !dbg !8297
  store i32 %inc121, i32* %row2, align 4, !dbg !8297
  %102 = load i32, i32* %row3, align 4, !dbg !8298
  %inc122 = add nsw i32 %102, 1, !dbg !8298
  store i32 %inc122, i32* %row3, align 4, !dbg !8298
  br label %if.end123, !dbg !8299

if.end123:                                        ; preds = %if.then119, %if.end116
  br label %for.inc, !dbg !8300

for.inc:                                          ; preds = %if.end123
  %103 = load i32, i32* %x, align 4, !dbg !8301
  %inc124 = add nsw i32 %103, 1, !dbg !8301
  store i32 %inc124, i32* %x, align 4, !dbg !8301
  %104 = load i32*, i32** %curp, align 8, !dbg !8302
  %incdec.ptr = getelementptr inbounds i32, i32* %104, i32 1, !dbg !8302
  store i32* %incdec.ptr, i32** %curp, align 8, !dbg !8302
  %105 = load i32*, i32** %curz, align 8, !dbg !8303
  %incdec.ptr125 = getelementptr inbounds i32, i32* %105, i32 1, !dbg !8303
  store i32* %incdec.ptr125, i32** %curz, align 8, !dbg !8303
  br label %for.cond12, !dbg !8304, !llvm.loop !8305

for.end:                                          ; preds = %for.cond12
  br label %for.inc126, !dbg !8307

for.inc126:                                       ; preds = %for.end
  %106 = load i32, i32* %y, align 4, !dbg !8308
  %inc127 = add nsw i32 %106, 1, !dbg !8308
  store i32 %inc127, i32* %y, align 4, !dbg !8308
  br label %for.cond, !dbg !8309, !llvm.loop !8310

for.end128:                                       ; preds = %for.cond
  %107 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8312
  %108 = load i32*, i32** %temprectp, align 8, !dbg !8313
  %109 = bitcast i32* %108 to i8*, !dbg !8313
  call void %107(i8* %109), !dbg !8312
  %110 = load i32, i32* %neg.addr, align 4, !dbg !8314
  %tobool129 = icmp ne i32 %110, 0, !dbg !8314
  br i1 %tobool129, label %if.then130, label %if.else131, !dbg !8316

if.then130:                                       ; preds = %for.end128
  br label %if.end150, !dbg !8317

if.else131:                                       ; preds = %for.end128
  %111 = load i32, i32* %xs.addr, align 4, !dbg !8319
  %112 = load i32, i32* %ys.addr, align 4, !dbg !8322
  %mul132 = mul nsw i32 %111, %112, !dbg !8323
  %sub133 = sub nsw i32 %mul132, 1, !dbg !8324
  store i32 %sub133, i32* %len, align 4, !dbg !8325
  br label %for.cond134, !dbg !8326

for.cond134:                                      ; preds = %for.inc148, %if.else131
  %113 = load i32, i32* %len, align 4, !dbg !8327
  %cmp135 = icmp sge i32 %113, 0, !dbg !8329
  br i1 %cmp135, label %for.body137, label %for.end149, !dbg !8330

for.body137:                                      ; preds = %for.cond134
  %114 = load i32*, i32** %rectp.addr, align 8, !dbg !8331
  %115 = load i32, i32* %len, align 4, !dbg !8334
  %idxprom138 = sext i32 %115 to i64, !dbg !8331
  %arrayidx139 = getelementptr inbounds i32, i32* %114, i64 %idxprom138, !dbg !8331
  %116 = load i32, i32* %arrayidx139, align 4, !dbg !8331
  %cmp140 = icmp eq i32 %116, 0, !dbg !8335
  br i1 %cmp140, label %if.then142, label %if.end147, !dbg !8336

if.then142:                                       ; preds = %for.body137
  %117 = load i32*, i32** %rectz.addr, align 8, !dbg !8337
  %118 = load i32, i32* %len, align 4, !dbg !8339
  %idxprom143 = sext i32 %118 to i64, !dbg !8337
  %arrayidx144 = getelementptr inbounds i32, i32* %117, i64 %idxprom143, !dbg !8337
  store i32 -2147483647, i32* %arrayidx144, align 4, !dbg !8340
  %119 = load i32*, i32** %rectp.addr, align 8, !dbg !8341
  %120 = load i32, i32* %len, align 4, !dbg !8342
  %idxprom145 = sext i32 %120 to i64, !dbg !8341
  %arrayidx146 = getelementptr inbounds i32, i32* %119, i64 %idxprom145, !dbg !8341
  store i32 -1, i32* %arrayidx146, align 4, !dbg !8343
  br label %if.end147, !dbg !8344

if.end147:                                        ; preds = %if.then142, %for.body137
  br label %for.inc148, !dbg !8345

for.inc148:                                       ; preds = %if.end147
  %121 = load i32, i32* %len, align 4, !dbg !8346
  %dec = add nsw i32 %121, -1, !dbg !8346
  store i32 %dec, i32* %len, align 4, !dbg !8346
  br label %for.cond134, !dbg !8347, !llvm.loop !8348

for.end149:                                       ; preds = %for.cond134
  br label %if.end150

if.end150:                                        ; preds = %for.end149, %if.then130
  ret void, !dbg !8350
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuffer_shadow(%struct.Render* %re, [4 x float]* %winmat, %struct.LampRen* %lar, i32* %rectz, i32 %size, float %jitx, float %jity) #0 !dbg !8351 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %rectz.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %jitx.addr = alloca float, align 4
  %jity.addr = alloca float, align 4
  %cache = alloca [256 x %struct.ZbufProjectCache], align 16
  %zspan = alloca %struct.ZSpan, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %sseg = alloca %struct.StrandSegment, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %svert = alloca %struct.StrandVert*, align 8
  %sbound = alloca %struct.StrandBound*, align 8
  %obwinmat = alloca [4 x [4 x float]], align 16
  %ho1 = alloca [4 x float], align 16
  %ho2 = alloca [4 x float], align 16
  %ho3 = alloca [4 x float], align 16
  %ho4 = alloca [4 x float], align 16
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %ok = alloca i32, align 4
  %lay = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  store i32* %rectz, i32** %rectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectz.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  store float %jitx, float* %jitx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %jitx.addr, metadata !8535, metadata !DIExpression()), !dbg !8536
  store float %jity, float* %jity.addr, align 4
  call void @llvm.dbg.declare(metadata float* %jity.addr, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata [256 x %struct.ZbufProjectCache]* %cache, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata %struct.ZSpan* %zspan, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !8547, metadata !DIExpression()), !dbg !8548
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8549, metadata !DIExpression()), !dbg !8550
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !8550
  call void @llvm.dbg.declare(metadata %struct.StrandSegment* %sseg, metadata !8551, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !8590, metadata !DIExpression()), !dbg !8593
  store %struct.StrandRen* null, %struct.StrandRen** %strand, align 8, !dbg !8593
  call void @llvm.dbg.declare(metadata %struct.StrandVert** %svert, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata %struct.StrandBound** %sbound, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obwinmat, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.declare(metadata [4 x float]* %ho1, metadata !8602, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.declare(metadata [4 x float]* %ho2, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.declare(metadata [4 x float]* %ho3, metadata !8606, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.declare(metadata [4 x float]* %ho4, metadata !8608, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8610, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8616, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !8620, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.declare(metadata i32* %c3, metadata !8622, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !8624, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !8626, metadata !DIExpression()), !dbg !8627
  store i32 1, i32* %ok, align 4, !dbg !8627
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !8628, metadata !DIExpression()), !dbg !8629
  store i32 -1, i32* %lay, align 4, !dbg !8629
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8630
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 7, !dbg !8632
  %1 = load i32, i32* %mode, align 4, !dbg !8632
  %and = and i32 %1, 32772, !dbg !8633
  %tobool = icmp ne i32 %and, 0, !dbg !8633
  br i1 %tobool, label %if.then, label %if.end, !dbg !8634

if.then:                                          ; preds = %entry
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8635
  %lay1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 17, !dbg !8636
  %3 = load i32, i32* %lay1, align 4, !dbg !8636
  store i32 %3, i32* %lay, align 4, !dbg !8637
  br label %if.end, !dbg !8638

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %size.addr, align 4, !dbg !8639
  %5 = load i32, i32* %size.addr, align 4, !dbg !8640
  call void @zbuf_alloc_span(%struct.ZSpan* %zspan, i32 %4, i32 %5, float 1.000000e+00), !dbg !8641
  %6 = load i32, i32* %size.addr, align 4, !dbg !8642
  %conv = sitofp i32 %6 to float, !dbg !8643
  %div = fdiv float %conv, 2.000000e+00, !dbg !8644
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 12, !dbg !8645
  store float %div, float* %zmulx, align 8, !dbg !8646
  %7 = load i32, i32* %size.addr, align 4, !dbg !8647
  %conv2 = sitofp i32 %7 to float, !dbg !8648
  %div3 = fdiv float %conv2, 2.000000e+00, !dbg !8649
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 13, !dbg !8650
  store float %div3, float* %zmuly, align 4, !dbg !8651
  %8 = load float, float* %jitx.addr, align 4, !dbg !8652
  %sub = fsub float %8, 5.000000e-01, !dbg !8653
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 14, !dbg !8654
  store float %sub, float* %zofsx, align 8, !dbg !8655
  %9 = load float, float* %jity.addr, align 4, !dbg !8656
  %sub4 = fsub float %9, 5.000000e-01, !dbg !8657
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 15, !dbg !8658
  store float %sub4, float* %zofsy, align 4, !dbg !8659
  %10 = load i32*, i32** %rectz.addr, align 8, !dbg !8660
  %rectz5 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 16, !dbg !8661
  store i32* %10, i32** %rectz5, align 8, !dbg !8662
  %11 = load i32*, i32** %rectz.addr, align 8, !dbg !8663
  %12 = load i32, i32* %size.addr, align 4, !dbg !8664
  %13 = load i32, i32* %size.addr, align 4, !dbg !8665
  call void @fillrect(i32* %11, i32 %12, i32 %13, i32 2147483646), !dbg !8666
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !8667
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 36, !dbg !8669
  %15 = load i16, i16* %buftype, align 4, !dbg !8669
  %conv6 = sext i16 %15 to i32, !dbg !8667
  %cmp = icmp eq i32 %conv6, 2, !dbg !8670
  br i1 %cmp, label %if.then8, label %if.end12, !dbg !8671

if.then8:                                         ; preds = %if.end
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8672
  %17 = load i32, i32* %size.addr, align 4, !dbg !8674
  %18 = load i32, i32* %size.addr, align 4, !dbg !8675
  %mul = mul nsw i32 %17, %18, !dbg !8676
  %conv9 = sext i32 %mul to i64, !dbg !8674
  %mul10 = mul i64 %conv9, 4, !dbg !8677
  %call = call i8* %16(i64 %mul10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)), !dbg !8672
  %19 = bitcast i8* %call to i32*, !dbg !8672
  %rectz1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 18, !dbg !8678
  store i32* %19, i32** %rectz1, align 8, !dbg !8679
  %rectz111 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 18, !dbg !8680
  %20 = load i32*, i32** %rectz111, align 8, !dbg !8680
  %21 = load i32, i32* %size.addr, align 4, !dbg !8681
  %22 = load i32, i32* %size.addr, align 4, !dbg !8682
  call void @fillrect(i32* %20, i32 %21, i32 %22, i32 2147483646), !dbg !8683
  br label %if.end12, !dbg !8684

if.end12:                                         ; preds = %if.then8, %if.end
  %zbuflinefunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 35, !dbg !8685
  store void (%struct.ZSpan*, i32, i32, float*, float*)* @zbufline_onlyZ, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc, align 8, !dbg !8686
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 34, !dbg !8687
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillGL_onlyZ, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !8688
  store i32 0, i32* %i, align 4, !dbg !8689
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8691
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 70, !dbg !8692
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !8693
  %24 = load i8*, i8** %first, align 8, !dbg !8693
  %25 = bitcast i8* %24 to %struct.ObjectInstanceRen*, !dbg !8691
  store %struct.ObjectInstanceRen* %25, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8694
  br label %for.cond, !dbg !8695

for.cond:                                         ; preds = %for.inc338, %if.end12
  %26 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8696
  %tobool13 = icmp ne %struct.ObjectInstanceRen* %26, null, !dbg !8698
  br i1 %tobool13, label %for.body, label %for.end340, !dbg !8698

for.body:                                         ; preds = %for.cond
  %27 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8699
  %obr14 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %27, i32 0, i32 2, !dbg !8701
  %28 = load %struct.ObjectRen*, %struct.ObjectRen** %obr14, align 8, !dbg !8701
  store %struct.ObjectRen* %28, %struct.ObjectRen** %obr, align 8, !dbg !8702
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8703
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %29, i32 0, i32 2, !dbg !8705
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8705
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8706
  %excludeob = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 78, !dbg !8707
  %32 = load %struct.Object*, %struct.Object** %excludeob, align 8, !dbg !8707
  %cmp15 = icmp eq %struct.Object* %30, %32, !dbg !8708
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8709

if.then17:                                        ; preds = %for.body
  br label %for.inc338, !dbg !8710

if.else:                                          ; preds = %for.body
  %33 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8711
  %lay18 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %33, i32 0, i32 7, !dbg !8713
  %34 = load i32, i32* %lay18, align 8, !dbg !8713
  %35 = load i32, i32* %lay, align 4, !dbg !8714
  %and19 = and i32 %34, %35, !dbg !8715
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8715
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !8716

if.then21:                                        ; preds = %if.else
  br label %for.inc338, !dbg !8717

if.end22:                                         ; preds = %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22
  %36 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8718
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %36, i32 0, i32 11, !dbg !8720
  %37 = load i16, i16* %flag, align 8, !dbg !8720
  %conv24 = sext i16 %37 to i32, !dbg !8718
  %and25 = and i32 %conv24, 3, !dbg !8721
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8721
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !8722

if.then27:                                        ; preds = %if.end23
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8723
  %38 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !8724
  %39 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8725
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %39, i32 0, i32 8, !dbg !8726
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8725
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %38, [4 x float]* %arraydecay28), !dbg !8727
  br label %if.end31, !dbg !8727

if.else29:                                        ; preds = %if.end23
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8728
  %40 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !8729
  call void @copy_m4_m4([4 x float]* %arraydecay30, [4 x float]* %40), !dbg !8730
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then27
  %41 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8731
  %obr32 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %41, i32 0, i32 2, !dbg !8733
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr32, align 8, !dbg !8733
  %boundbox = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %42, i32 0, i32 9, !dbg !8734
  %arraydecay33 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox, i64 0, i64 0, !dbg !8731
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8735
  %call35 = call i32 @clip_render_object([3 x float]* %arraydecay33, float* null, [4 x float]* %arraydecay34), !dbg !8736
  %tobool36 = icmp ne i32 %call35, 0, !dbg !8736
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !8737

if.then37:                                        ; preds = %if.end31
  br label %for.inc338, !dbg !8738

if.end38:                                         ; preds = %if.end31
  %arraydecay39 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8739
  %43 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8740
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %43, i32 0, i32 10, !dbg !8741
  %44 = load i32, i32* %totvert, align 8, !dbg !8741
  call void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %arraydecay39, i32 %44), !dbg !8742
  store i32 0, i32* %a, align 4, !dbg !8743
  br label %for.cond40, !dbg !8745

for.cond40:                                       ; preds = %for.inc, %if.end38
  %45 = load i32, i32* %a, align 4, !dbg !8746
  %46 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8748
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %46, i32 0, i32 11, !dbg !8749
  %47 = load i32, i32* %totvlak, align 4, !dbg !8749
  %cmp41 = icmp slt i32 %45, %47, !dbg !8750
  br i1 %cmp41, label %for.body43, label %for.end, !dbg !8751

for.body43:                                       ; preds = %for.cond40
  %48 = load i32, i32* %a, align 4, !dbg !8752
  %and44 = and i32 %48, 255, !dbg !8755
  %cmp45 = icmp eq i32 %and44, 0, !dbg !8756
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !8757

if.then47:                                        ; preds = %for.body43
  %49 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8758
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %49, i32 0, i32 19, !dbg !8759
  %50 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !8759
  %51 = load i32, i32* %a, align 4, !dbg !8760
  %shr = ashr i32 %51, 8, !dbg !8761
  %idxprom = sext i32 %shr to i64, !dbg !8758
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %50, i64 %idxprom, !dbg !8758
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !8762
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !8762
  store %struct.VlakRen* %52, %struct.VlakRen** %vlr, align 8, !dbg !8763
  br label %if.end49, !dbg !8764

if.else48:                                        ; preds = %for.body43
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8765
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 1, !dbg !8765
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !8765
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8766
  %mat50 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i32 0, i32 5, !dbg !8768
  %55 = load %struct.Material*, %struct.Material** %mat50, align 8, !dbg !8768
  %56 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8769
  %cmp51 = icmp ne %struct.Material* %55, %56, !dbg !8770
  br i1 %cmp51, label %if.then53, label %if.end64, !dbg !8771

if.then53:                                        ; preds = %if.end49
  %57 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8772
  %mat54 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %57, i32 0, i32 5, !dbg !8774
  %58 = load %struct.Material*, %struct.Material** %mat54, align 8, !dbg !8774
  store %struct.Material* %58, %struct.Material** %ma, align 8, !dbg !8775
  store i32 1, i32* %ok, align 4, !dbg !8776
  %59 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8777
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %59, i32 0, i32 53, !dbg !8779
  %60 = load i32, i32* %mode2, align 4, !dbg !8779
  %and55 = and i32 %60, 1, !dbg !8780
  %cmp56 = icmp eq i32 %and55, 0, !dbg !8781
  br i1 %cmp56, label %if.then62, label %lor.lhs.false, !dbg !8782

lor.lhs.false:                                    ; preds = %if.then53
  %61 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8783
  %mode58 = getelementptr inbounds %struct.Material, %struct.Material* %61, i32 0, i32 51, !dbg !8784
  %62 = load i32, i32* %mode58, align 4, !dbg !8784
  %and59 = and i32 %62, 33554432, !dbg !8785
  %cmp60 = icmp eq i32 %and59, 0, !dbg !8786
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !8787

if.then62:                                        ; preds = %lor.lhs.false, %if.then53
  store i32 0, i32* %ok, align 4, !dbg !8788
  br label %if.end63, !dbg !8789

if.end63:                                         ; preds = %if.then62, %lor.lhs.false
  br label %if.end64, !dbg !8790

if.end64:                                         ; preds = %if.end63, %if.end49
  %63 = load i32, i32* %ok, align 4, !dbg !8791
  %tobool65 = icmp ne i32 %63, 0, !dbg !8791
  br i1 %tobool65, label %land.lhs.true, label %if.end153, !dbg !8793

land.lhs.true:                                    ; preds = %if.end64
  %64 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8794
  %lay66 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %64, i32 0, i32 7, !dbg !8795
  %65 = load i32, i32* %lay66, align 8, !dbg !8795
  %66 = load i32, i32* %lay, align 4, !dbg !8796
  %and67 = and i32 %65, %66, !dbg !8797
  %tobool68 = icmp ne i32 %and67, 0, !dbg !8797
  br i1 %tobool68, label %land.lhs.true69, label %if.end153, !dbg !8798

land.lhs.true69:                                  ; preds = %land.lhs.true
  %67 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8799
  %flag70 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %67, i32 0, i32 7, !dbg !8800
  %68 = load i8, i8* %flag70, align 1, !dbg !8800
  %conv71 = zext i8 %68 to i32, !dbg !8799
  %and72 = and i32 %conv71, 2, !dbg !8801
  %tobool73 = icmp ne i32 %and72, 0, !dbg !8801
  br i1 %tobool73, label %if.end153, label %if.then74, !dbg !8802

if.then74:                                        ; preds = %land.lhs.true69
  %arraydecay75 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8803
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8805
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %69, i32 0, i32 0, !dbg !8806
  %70 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !8806
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %70, i32 0, i32 5, !dbg !8807
  %71 = load i32, i32* %index, align 8, !dbg !8807
  %arraydecay76 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8808
  %72 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8809
  %v177 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %72, i32 0, i32 0, !dbg !8810
  %73 = load %struct.VertRen*, %struct.VertRen** %v177, align 8, !dbg !8810
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %73, i32 0, i32 0, !dbg !8811
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8809
  %arraydecay79 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !8812
  %call80 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay75, i32 %71, [4 x float]* %arraydecay76, float* %arraydecay78, float* %arraydecay79), !dbg !8813
  store i32 %call80, i32* %c1, align 4, !dbg !8814
  %arraydecay81 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8815
  %74 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8816
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %74, i32 0, i32 1, !dbg !8817
  %75 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !8817
  %index82 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %75, i32 0, i32 5, !dbg !8818
  %76 = load i32, i32* %index82, align 8, !dbg !8818
  %arraydecay83 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8819
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8820
  %v284 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %77, i32 0, i32 1, !dbg !8821
  %78 = load %struct.VertRen*, %struct.VertRen** %v284, align 8, !dbg !8821
  %co85 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %78, i32 0, i32 0, !dbg !8822
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %co85, i64 0, i64 0, !dbg !8820
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !8823
  %call88 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay81, i32 %76, [4 x float]* %arraydecay83, float* %arraydecay86, float* %arraydecay87), !dbg !8824
  store i32 %call88, i32* %c2, align 4, !dbg !8825
  %arraydecay89 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8826
  %79 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8827
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %79, i32 0, i32 2, !dbg !8828
  %80 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !8828
  %index90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %80, i32 0, i32 5, !dbg !8829
  %81 = load i32, i32* %index90, align 8, !dbg !8829
  %arraydecay91 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8830
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8831
  %v392 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %82, i32 0, i32 2, !dbg !8832
  %83 = load %struct.VertRen*, %struct.VertRen** %v392, align 8, !dbg !8832
  %co93 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %83, i32 0, i32 0, !dbg !8833
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !8831
  %arraydecay95 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !8834
  %call96 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay89, i32 %81, [4 x float]* %arraydecay91, float* %arraydecay94, float* %arraydecay95), !dbg !8835
  store i32 %call96, i32* %c3, align 4, !dbg !8836
  %84 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8837
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 2, !dbg !8839
  %85 = load i16, i16* %material_type, align 8, !dbg !8839
  %conv97 = sext i16 %85 to i32, !dbg !8837
  %cmp98 = icmp eq i32 %conv97, 3, !dbg !8840
  br i1 %cmp98, label %if.then105, label %lor.lhs.false100, !dbg !8841

lor.lhs.false100:                                 ; preds = %if.then74
  %86 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8842
  %flag101 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %86, i32 0, i32 7, !dbg !8843
  %87 = load i8, i8* %flag101, align 1, !dbg !8843
  %conv102 = zext i8 %87 to i32, !dbg !8842
  %and103 = and i32 %conv102, 4, !dbg !8844
  %tobool104 = icmp ne i32 %and103, 0, !dbg !8844
  br i1 %tobool104, label %if.then105, label %if.else130, !dbg !8845

if.then105:                                       ; preds = %lor.lhs.false100, %if.then74
  %88 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8846
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %88, i32 0, i32 3, !dbg !8849
  %89 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !8849
  %tobool106 = icmp ne %struct.VertRen* %89, null, !dbg !8846
  br i1 %tobool106, label %if.then107, label %if.else122, !dbg !8850

if.then107:                                       ; preds = %if.then105
  %arraydecay108 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8851
  %90 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8853
  %v4109 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %90, i32 0, i32 3, !dbg !8854
  %91 = load %struct.VertRen*, %struct.VertRen** %v4109, align 8, !dbg !8854
  %index110 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %91, i32 0, i32 5, !dbg !8855
  %92 = load i32, i32* %index110, align 8, !dbg !8855
  %arraydecay111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8856
  %93 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8857
  %v4112 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %93, i32 0, i32 3, !dbg !8858
  %94 = load %struct.VertRen*, %struct.VertRen** %v4112, align 8, !dbg !8858
  %co113 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %94, i32 0, i32 0, !dbg !8859
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %co113, i64 0, i64 0, !dbg !8857
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !8860
  %call116 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay108, i32 %92, [4 x float]* %arraydecay111, float* %arraydecay114, float* %arraydecay115), !dbg !8861
  store i32 %call116, i32* %c4, align 4, !dbg !8862
  %95 = load i32, i32* %a, align 4, !dbg !8863
  %add = add nsw i32 %95, 1, !dbg !8864
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8865
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %96, i32 0, i32 8, !dbg !8866
  %97 = load i8, i8* %ec, align 2, !dbg !8866
  %conv117 = zext i8 %97 to i32, !dbg !8865
  %arraydecay118 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !8867
  %arraydecay119 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !8868
  %arraydecay120 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !8869
  %arraydecay121 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !8870
  %98 = load i32, i32* %c1, align 4, !dbg !8871
  %99 = load i32, i32* %c2, align 4, !dbg !8872
  %100 = load i32, i32* %c3, align 4, !dbg !8873
  %101 = load i32, i32* %c4, align 4, !dbg !8874
  call void @zbufclipwire(%struct.ZSpan* %zspan, i32 0, i32 %add, i32 %conv117, float* %arraydecay118, float* %arraydecay119, float* %arraydecay120, float* %arraydecay121, i32 %98, i32 %99, i32 %100, i32 %101), !dbg !8875
  br label %if.end129, !dbg !8876

if.else122:                                       ; preds = %if.then105
  %102 = load i32, i32* %a, align 4, !dbg !8877
  %add123 = add nsw i32 %102, 1, !dbg !8878
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8879
  %ec124 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 8, !dbg !8880
  %104 = load i8, i8* %ec124, align 2, !dbg !8880
  %conv125 = zext i8 %104 to i32, !dbg !8879
  %arraydecay126 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !8881
  %arraydecay127 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !8882
  %arraydecay128 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !8883
  %105 = load i32, i32* %c1, align 4, !dbg !8884
  %106 = load i32, i32* %c2, align 4, !dbg !8885
  %107 = load i32, i32* %c3, align 4, !dbg !8886
  call void @zbufclipwire(%struct.ZSpan* %zspan, i32 0, i32 %add123, i32 %conv125, float* %arraydecay126, float* %arraydecay127, float* %arraydecay128, float* null, i32 %105, i32 %106, i32 %107, i32 0), !dbg !8887
  br label %if.end129

if.end129:                                        ; preds = %if.else122, %if.then107
  br label %if.end152, !dbg !8888

if.else130:                                       ; preds = %lor.lhs.false100
  %108 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8889
  %v4131 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %108, i32 0, i32 3, !dbg !8892
  %109 = load %struct.VertRen*, %struct.VertRen** %v4131, align 8, !dbg !8892
  %tobool132 = icmp ne %struct.VertRen* %109, null, !dbg !8889
  br i1 %tobool132, label %if.then133, label %if.else147, !dbg !8893

if.then133:                                       ; preds = %if.else130
  %arraydecay134 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !8894
  %110 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8896
  %v4135 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %110, i32 0, i32 3, !dbg !8897
  %111 = load %struct.VertRen*, %struct.VertRen** %v4135, align 8, !dbg !8897
  %index136 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %111, i32 0, i32 5, !dbg !8898
  %112 = load i32, i32* %index136, align 8, !dbg !8898
  %arraydecay137 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8899
  %113 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8900
  %v4138 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %113, i32 0, i32 3, !dbg !8901
  %114 = load %struct.VertRen*, %struct.VertRen** %v4138, align 8, !dbg !8901
  %co139 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %114, i32 0, i32 0, !dbg !8902
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %co139, i64 0, i64 0, !dbg !8900
  %arraydecay141 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !8903
  %call142 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay134, i32 %112, [4 x float]* %arraydecay137, float* %arraydecay140, float* %arraydecay141), !dbg !8904
  store i32 %call142, i32* %c4, align 4, !dbg !8905
  %arraydecay143 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !8906
  %arraydecay144 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !8907
  %arraydecay145 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !8908
  %arraydecay146 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !8909
  %115 = load i32, i32* %c1, align 4, !dbg !8910
  %116 = load i32, i32* %c2, align 4, !dbg !8911
  %117 = load i32, i32* %c3, align 4, !dbg !8912
  %118 = load i32, i32* %c4, align 4, !dbg !8913
  call void @zbufclip4(%struct.ZSpan* %zspan, i32 0, i32 0, float* %arraydecay143, float* %arraydecay144, float* %arraydecay145, float* %arraydecay146, i32 %115, i32 %116, i32 %117, i32 %118), !dbg !8914
  br label %if.end151, !dbg !8915

if.else147:                                       ; preds = %if.else130
  %arraydecay148 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !8916
  %arraydecay149 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !8917
  %arraydecay150 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !8918
  %119 = load i32, i32* %c1, align 4, !dbg !8919
  %120 = load i32, i32* %c2, align 4, !dbg !8920
  %121 = load i32, i32* %c3, align 4, !dbg !8921
  call void @zbufclip(%struct.ZSpan* %zspan, i32 0, i32 0, float* %arraydecay148, float* %arraydecay149, float* %arraydecay150, i32 %119, i32 %120, i32 %121), !dbg !8922
  br label %if.end151

if.end151:                                        ; preds = %if.else147, %if.then133
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end129
  br label %if.end153, !dbg !8923

if.end153:                                        ; preds = %if.end152, %land.lhs.true69, %land.lhs.true, %if.end64
  %122 = load i32, i32* %a, align 4, !dbg !8924
  %and154 = and i32 %122, 255, !dbg !8926
  %cmp155 = icmp eq i32 %and154, 255, !dbg !8927
  br i1 %cmp155, label %land.lhs.true157, label %if.end161, !dbg !8928

land.lhs.true157:                                 ; preds = %if.end153
  %123 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8929
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %123, i32 0, i32 96, !dbg !8930
  %124 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !8930
  %125 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8931
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %125, i32 0, i32 97, !dbg !8932
  %126 = load i8*, i8** %tbh, align 8, !dbg !8932
  %call158 = call i32 %124(i8* %126), !dbg !8929
  %tobool159 = icmp ne i32 %call158, 0, !dbg !8929
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !8933

if.then160:                                       ; preds = %land.lhs.true157
  br label %for.end, !dbg !8934

if.end161:                                        ; preds = %land.lhs.true157, %if.end153
  br label %for.inc, !dbg !8935

for.inc:                                          ; preds = %if.end161
  %127 = load i32, i32* %a, align 4, !dbg !8936
  %inc = add nsw i32 %127, 1, !dbg !8936
  store i32 %inc, i32* %a, align 4, !dbg !8936
  br label %for.cond40, !dbg !8937, !llvm.loop !8938

for.end:                                          ; preds = %if.then160, %for.cond40
  %128 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8940
  %strandbuf = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %128, i32 0, i32 22, !dbg !8942
  %129 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !8942
  %tobool162 = icmp ne %struct.StrandBuffer* %129, null, !dbg !8940
  br i1 %tobool162, label %if.then163, label %if.end331, !dbg !8943

if.then163:                                       ; preds = %for.end
  %130 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8944
  %strandbuf164 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %130, i32 0, i32 22, !dbg !8946
  %131 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf164, align 8, !dbg !8946
  %bound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %131, i32 0, i32 3, !dbg !8947
  %132 = load %struct.StrandBound*, %struct.StrandBound** %bound, align 8, !dbg !8947
  store %struct.StrandBound* %132, %struct.StrandBound** %sbound, align 8, !dbg !8948
  store i32 0, i32* %c, align 4, !dbg !8949
  br label %for.cond165, !dbg !8951

for.cond165:                                      ; preds = %for.inc327, %if.then163
  %133 = load i32, i32* %c, align 4, !dbg !8952
  %134 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8954
  %strandbuf166 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %134, i32 0, i32 22, !dbg !8955
  %135 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf166, align 8, !dbg !8955
  %totbound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %135, i32 0, i32 5, !dbg !8956
  %136 = load i32, i32* %totbound, align 4, !dbg !8956
  %cmp167 = icmp slt i32 %133, %136, !dbg !8957
  br i1 %cmp167, label %for.body169, label %for.end330, !dbg !8958

for.body169:                                      ; preds = %for.cond165
  %137 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !8959
  %boundbox170 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %137, i32 0, i32 2, !dbg !8962
  %arraydecay171 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox170, i64 0, i64 0, !dbg !8959
  %arraydecay172 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !8963
  %call173 = call i32 @clip_render_object([3 x float]* %arraydecay171, float* null, [4 x float]* %arraydecay172), !dbg !8964
  %tobool174 = icmp ne i32 %call173, 0, !dbg !8964
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !8965

if.then175:                                       ; preds = %for.body169
  br label %for.inc327, !dbg !8966

if.end176:                                        ; preds = %for.body169
  %138 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !8967
  %start = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %138, i32 0, i32 0, !dbg !8969
  %139 = load i32, i32* %start, align 4, !dbg !8969
  store i32 %139, i32* %a, align 4, !dbg !8970
  br label %for.cond177, !dbg !8971

for.cond177:                                      ; preds = %for.inc324, %if.end176
  %140 = load i32, i32* %a, align 4, !dbg !8972
  %141 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !8974
  %end = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %141, i32 0, i32 1, !dbg !8975
  %142 = load i32, i32* %end, align 4, !dbg !8975
  %cmp178 = icmp slt i32 %140, %142, !dbg !8976
  br i1 %cmp178, label %for.body180, label %for.end326, !dbg !8977

for.body180:                                      ; preds = %for.cond177
  %143 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8978
  %144 = load i32, i32* %a, align 4, !dbg !8980
  %call181 = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %143, i32 %144), !dbg !8981
  store %struct.StrandRen* %call181, %struct.StrandRen** %strand, align 8, !dbg !8982
  %145 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8983
  %obi182 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 3, !dbg !8984
  store %struct.ObjectInstanceRen* %145, %struct.ObjectInstanceRen** %obi182, align 8, !dbg !8985
  %146 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !8986
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %146, i32 0, i32 1, !dbg !8987
  %147 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer, align 8, !dbg !8987
  %buffer183 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !8988
  store %struct.StrandBuffer* %147, %struct.StrandBuffer** %buffer183, align 8, !dbg !8989
  %buffer184 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !8990
  %148 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer184, align 8, !dbg !8990
  %adaptcos = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %148, i32 0, i32 13, !dbg !8991
  %149 = load float, float* %adaptcos, align 8, !dbg !8991
  %sqadaptcos = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 4, !dbg !8992
  store float %149, float* %sqadaptcos, align 8, !dbg !8993
  %sqadaptcos185 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 4, !dbg !8994
  %150 = load float, float* %sqadaptcos185, align 8, !dbg !8994
  %sqadaptcos186 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 4, !dbg !8995
  %151 = load float, float* %sqadaptcos186, align 8, !dbg !8996
  %mul187 = fmul float %151, %150, !dbg !8996
  store float %mul187, float* %sqadaptcos186, align 8, !dbg !8996
  %152 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !8997
  %strand188 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 1, !dbg !8998
  store %struct.StrandRen* %152, %struct.StrandRen** %strand188, align 8, !dbg !8999
  %153 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9000
  %vert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %153, i32 0, i32 0, !dbg !9001
  %154 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !9001
  store %struct.StrandVert* %154, %struct.StrandVert** %svert, align 8, !dbg !9002
  %buffer189 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !9003
  %155 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer189, align 8, !dbg !9003
  %ma190 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %155, i32 0, i32 7, !dbg !9005
  %156 = load %struct.Material*, %struct.Material** %ma190, align 8, !dbg !9005
  %157 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9006
  %cmp191 = icmp ne %struct.Material* %156, %157, !dbg !9007
  br i1 %cmp191, label %if.then193, label %if.end207, !dbg !9008

if.then193:                                       ; preds = %for.body180
  %buffer194 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !9009
  %158 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer194, align 8, !dbg !9009
  %ma195 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %158, i32 0, i32 7, !dbg !9011
  %159 = load %struct.Material*, %struct.Material** %ma195, align 8, !dbg !9011
  store %struct.Material* %159, %struct.Material** %ma, align 8, !dbg !9012
  store i32 1, i32* %ok, align 4, !dbg !9013
  %160 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9014
  %mode2196 = getelementptr inbounds %struct.Material, %struct.Material* %160, i32 0, i32 53, !dbg !9016
  %161 = load i32, i32* %mode2196, align 4, !dbg !9016
  %and197 = and i32 %161, 1, !dbg !9017
  %cmp198 = icmp eq i32 %and197, 0, !dbg !9018
  br i1 %cmp198, label %if.then205, label %lor.lhs.false200, !dbg !9019

lor.lhs.false200:                                 ; preds = %if.then193
  %162 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9020
  %mode201 = getelementptr inbounds %struct.Material, %struct.Material* %162, i32 0, i32 51, !dbg !9021
  %163 = load i32, i32* %mode201, align 4, !dbg !9021
  %and202 = and i32 %163, 33554432, !dbg !9022
  %cmp203 = icmp eq i32 %and202, 0, !dbg !9023
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !9024

if.then205:                                       ; preds = %lor.lhs.false200, %if.then193
  store i32 0, i32* %ok, align 4, !dbg !9025
  br label %if.end206, !dbg !9026

if.end206:                                        ; preds = %if.then205, %lor.lhs.false200
  br label %if.end207, !dbg !9027

if.end207:                                        ; preds = %if.end206, %for.body180
  %164 = load i32, i32* %ok, align 4, !dbg !9028
  %tobool208 = icmp ne i32 %164, 0, !dbg !9028
  br i1 %tobool208, label %land.lhs.true209, label %if.end313, !dbg !9030

land.lhs.true209:                                 ; preds = %if.end207
  %buffer210 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !9031
  %165 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer210, align 8, !dbg !9031
  %lay211 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %165, i32 0, i32 9, !dbg !9032
  %166 = load i32, i32* %lay211, align 8, !dbg !9032
  %167 = load i32, i32* %lay, align 4, !dbg !9033
  %and212 = and i32 %166, %167, !dbg !9034
  %tobool213 = icmp ne i32 %and212, 0, !dbg !9034
  br i1 %tobool213, label %if.then214, label %if.end313, !dbg !9035

if.then214:                                       ; preds = %land.lhs.true209
  %arraydecay215 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !9036
  %168 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9038
  %totvert216 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %168, i32 0, i32 2, !dbg !9039
  %169 = load i32, i32* %totvert216, align 8, !dbg !9039
  call void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %arraydecay215, i32 %169), !dbg !9040
  store i32 0, i32* %b, align 4, !dbg !9041
  br label %for.cond217, !dbg !9043

for.cond217:                                      ; preds = %for.inc309, %if.then214
  %170 = load i32, i32* %b, align 4, !dbg !9044
  %171 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9046
  %totvert218 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %171, i32 0, i32 2, !dbg !9047
  %172 = load i32, i32* %totvert218, align 8, !dbg !9047
  %sub219 = sub nsw i32 %172, 1, !dbg !9048
  %cmp220 = icmp slt i32 %170, %sub219, !dbg !9049
  br i1 %cmp220, label %for.body222, label %for.end312, !dbg !9050

for.body222:                                      ; preds = %for.cond217
  %173 = load i32, i32* %b, align 4, !dbg !9051
  %cmp223 = icmp sgt i32 %173, 0, !dbg !9053
  br i1 %cmp223, label %cond.true, label %cond.false, !dbg !9054

cond.true:                                        ; preds = %for.body222
  %174 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9055
  %add.ptr = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %174, i64 -1, !dbg !9056
  br label %cond.end, !dbg !9054

cond.false:                                       ; preds = %for.body222
  %175 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9057
  br label %cond.end, !dbg !9054

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.StrandVert* [ %add.ptr, %cond.true ], [ %175, %cond.false ], !dbg !9054
  %v = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9058
  %arrayidx225 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v, i64 0, i64 0, !dbg !9059
  store %struct.StrandVert* %cond, %struct.StrandVert** %arrayidx225, align 8, !dbg !9060
  %176 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9061
  %v226 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9062
  %arrayidx227 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v226, i64 0, i64 1, !dbg !9063
  store %struct.StrandVert* %176, %struct.StrandVert** %arrayidx227, align 8, !dbg !9064
  %177 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9065
  %add.ptr228 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %177, i64 1, !dbg !9066
  %v229 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9067
  %arrayidx230 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v229, i64 0, i64 2, !dbg !9068
  store %struct.StrandVert* %add.ptr228, %struct.StrandVert** %arrayidx230, align 8, !dbg !9069
  %178 = load i32, i32* %b, align 4, !dbg !9070
  %179 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9071
  %totvert231 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %179, i32 0, i32 2, !dbg !9072
  %180 = load i32, i32* %totvert231, align 8, !dbg !9072
  %sub232 = sub nsw i32 %180, 2, !dbg !9073
  %cmp233 = icmp slt i32 %178, %sub232, !dbg !9074
  br i1 %cmp233, label %cond.true235, label %cond.false237, !dbg !9075

cond.true235:                                     ; preds = %cond.end
  %181 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9076
  %add.ptr236 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %181, i64 2, !dbg !9077
  br label %cond.end239, !dbg !9075

cond.false237:                                    ; preds = %cond.end
  %182 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9078
  %add.ptr238 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %182, i64 1, !dbg !9079
  br label %cond.end239, !dbg !9075

cond.end239:                                      ; preds = %cond.false237, %cond.true235
  %cond240 = phi %struct.StrandVert* [ %add.ptr236, %cond.true235 ], [ %add.ptr238, %cond.false237 ], !dbg !9075
  %v241 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9080
  %arrayidx242 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v241, i64 0, i64 3, !dbg !9081
  store %struct.StrandVert* %cond240, %struct.StrandVert** %arrayidx242, align 8, !dbg !9082
  %arraydecay243 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !9083
  %v244 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9084
  %arrayidx245 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v244, i64 0, i64 0, !dbg !9085
  %183 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx245, align 8, !dbg !9085
  %184 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9086
  %vert246 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %184, i32 0, i32 0, !dbg !9087
  %185 = load %struct.StrandVert*, %struct.StrandVert** %vert246, align 8, !dbg !9087
  %sub.ptr.lhs.cast = ptrtoint %struct.StrandVert* %183 to i64, !dbg !9088
  %sub.ptr.rhs.cast = ptrtoint %struct.StrandVert* %185 to i64, !dbg !9088
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9088
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16, !dbg !9088
  %conv247 = trunc i64 %sub.ptr.div to i32, !dbg !9085
  %arraydecay248 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !9089
  %v249 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9090
  %arrayidx250 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v249, i64 0, i64 0, !dbg !9091
  %186 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx250, align 8, !dbg !9091
  %co251 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %186, i32 0, i32 0, !dbg !9092
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %co251, i64 0, i64 0, !dbg !9091
  %arraydecay253 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !9093
  %call254 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay243, i32 %conv247, [4 x float]* %arraydecay248, float* %arraydecay252, float* %arraydecay253), !dbg !9094
  store i32 %call254, i32* %c1, align 4, !dbg !9095
  %arraydecay255 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !9096
  %v256 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9097
  %arrayidx257 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v256, i64 0, i64 1, !dbg !9098
  %187 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx257, align 8, !dbg !9098
  %188 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9099
  %vert258 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %188, i32 0, i32 0, !dbg !9100
  %189 = load %struct.StrandVert*, %struct.StrandVert** %vert258, align 8, !dbg !9100
  %sub.ptr.lhs.cast259 = ptrtoint %struct.StrandVert* %187 to i64, !dbg !9101
  %sub.ptr.rhs.cast260 = ptrtoint %struct.StrandVert* %189 to i64, !dbg !9101
  %sub.ptr.sub261 = sub i64 %sub.ptr.lhs.cast259, %sub.ptr.rhs.cast260, !dbg !9101
  %sub.ptr.div262 = sdiv exact i64 %sub.ptr.sub261, 16, !dbg !9101
  %conv263 = trunc i64 %sub.ptr.div262 to i32, !dbg !9098
  %arraydecay264 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !9102
  %v265 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9103
  %arrayidx266 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v265, i64 0, i64 1, !dbg !9104
  %190 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx266, align 8, !dbg !9104
  %co267 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %190, i32 0, i32 0, !dbg !9105
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %co267, i64 0, i64 0, !dbg !9104
  %arraydecay269 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !9106
  %call270 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay255, i32 %conv263, [4 x float]* %arraydecay264, float* %arraydecay268, float* %arraydecay269), !dbg !9107
  store i32 %call270, i32* %c2, align 4, !dbg !9108
  %arraydecay271 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !9109
  %v272 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9110
  %arrayidx273 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v272, i64 0, i64 2, !dbg !9111
  %191 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx273, align 8, !dbg !9111
  %192 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9112
  %vert274 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %192, i32 0, i32 0, !dbg !9113
  %193 = load %struct.StrandVert*, %struct.StrandVert** %vert274, align 8, !dbg !9113
  %sub.ptr.lhs.cast275 = ptrtoint %struct.StrandVert* %191 to i64, !dbg !9114
  %sub.ptr.rhs.cast276 = ptrtoint %struct.StrandVert* %193 to i64, !dbg !9114
  %sub.ptr.sub277 = sub i64 %sub.ptr.lhs.cast275, %sub.ptr.rhs.cast276, !dbg !9114
  %sub.ptr.div278 = sdiv exact i64 %sub.ptr.sub277, 16, !dbg !9114
  %conv279 = trunc i64 %sub.ptr.div278 to i32, !dbg !9111
  %arraydecay280 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !9115
  %v281 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9116
  %arrayidx282 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v281, i64 0, i64 2, !dbg !9117
  %194 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx282, align 8, !dbg !9117
  %co283 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %194, i32 0, i32 0, !dbg !9118
  %arraydecay284 = getelementptr inbounds [3 x float], [3 x float]* %co283, i64 0, i64 0, !dbg !9117
  %arraydecay285 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !9119
  %call286 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay271, i32 %conv279, [4 x float]* %arraydecay280, float* %arraydecay284, float* %arraydecay285), !dbg !9120
  store i32 %call286, i32* %c3, align 4, !dbg !9121
  %arraydecay287 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !9122
  %v288 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9123
  %arrayidx289 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v288, i64 0, i64 3, !dbg !9124
  %195 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx289, align 8, !dbg !9124
  %196 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !9125
  %vert290 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %196, i32 0, i32 0, !dbg !9126
  %197 = load %struct.StrandVert*, %struct.StrandVert** %vert290, align 8, !dbg !9126
  %sub.ptr.lhs.cast291 = ptrtoint %struct.StrandVert* %195 to i64, !dbg !9127
  %sub.ptr.rhs.cast292 = ptrtoint %struct.StrandVert* %197 to i64, !dbg !9127
  %sub.ptr.sub293 = sub i64 %sub.ptr.lhs.cast291, %sub.ptr.rhs.cast292, !dbg !9127
  %sub.ptr.div294 = sdiv exact i64 %sub.ptr.sub293, 16, !dbg !9127
  %conv295 = trunc i64 %sub.ptr.div294 to i32, !dbg !9124
  %arraydecay296 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !9128
  %v297 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !9129
  %arrayidx298 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v297, i64 0, i64 3, !dbg !9130
  %198 = load %struct.StrandVert*, %struct.StrandVert** %arrayidx298, align 8, !dbg !9130
  %co299 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %198, i32 0, i32 0, !dbg !9131
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %co299, i64 0, i64 0, !dbg !9130
  %arraydecay301 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !9132
  %call302 = call i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %arraydecay287, i32 %conv295, [4 x float]* %arraydecay296, float* %arraydecay300, float* %arraydecay301), !dbg !9133
  store i32 %call302, i32* %c4, align 4, !dbg !9134
  %199 = load i32, i32* %c1, align 4, !dbg !9135
  %200 = load i32, i32* %c2, align 4, !dbg !9137
  %and303 = and i32 %199, %200, !dbg !9138
  %201 = load i32, i32* %c3, align 4, !dbg !9139
  %and304 = and i32 %and303, %201, !dbg !9140
  %202 = load i32, i32* %c4, align 4, !dbg !9141
  %and305 = and i32 %and304, %202, !dbg !9142
  %tobool306 = icmp ne i32 %and305, 0, !dbg !9142
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !9143

if.then307:                                       ; preds = %cond.end239
  %203 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9144
  %204 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !9145
  call void @render_strand_segment(%struct.Render* %203, [4 x float]* %204, %struct.StrandPart* null, %struct.ZSpan* %zspan, i32 1, %struct.StrandSegment* %sseg), !dbg !9146
  br label %if.end308, !dbg !9146

if.end308:                                        ; preds = %if.then307, %cond.end239
  br label %for.inc309, !dbg !9147

for.inc309:                                       ; preds = %if.end308
  %205 = load i32, i32* %b, align 4, !dbg !9148
  %inc310 = add nsw i32 %205, 1, !dbg !9148
  store i32 %inc310, i32* %b, align 4, !dbg !9148
  %206 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !9149
  %incdec.ptr311 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %206, i32 1, !dbg !9149
  store %struct.StrandVert* %incdec.ptr311, %struct.StrandVert** %svert, align 8, !dbg !9149
  br label %for.cond217, !dbg !9150, !llvm.loop !9151

for.end312:                                       ; preds = %for.cond217
  br label %if.end313, !dbg !9153

if.end313:                                        ; preds = %for.end312, %land.lhs.true209, %if.end207
  %207 = load i32, i32* %a, align 4, !dbg !9154
  %and314 = and i32 %207, 255, !dbg !9156
  %cmp315 = icmp eq i32 %and314, 255, !dbg !9157
  br i1 %cmp315, label %land.lhs.true317, label %if.end323, !dbg !9158

land.lhs.true317:                                 ; preds = %if.end313
  %208 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9159
  %test_break318 = getelementptr inbounds %struct.Render, %struct.Render* %208, i32 0, i32 96, !dbg !9160
  %209 = load i32 (i8*)*, i32 (i8*)** %test_break318, align 8, !dbg !9160
  %210 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9161
  %tbh319 = getelementptr inbounds %struct.Render, %struct.Render* %210, i32 0, i32 97, !dbg !9162
  %211 = load i8*, i8** %tbh319, align 8, !dbg !9162
  %call320 = call i32 %209(i8* %211), !dbg !9159
  %tobool321 = icmp ne i32 %call320, 0, !dbg !9159
  br i1 %tobool321, label %if.then322, label %if.end323, !dbg !9163

if.then322:                                       ; preds = %land.lhs.true317
  br label %for.end326, !dbg !9164

if.end323:                                        ; preds = %land.lhs.true317, %if.end313
  br label %for.inc324, !dbg !9165

for.inc324:                                       ; preds = %if.end323
  %212 = load i32, i32* %a, align 4, !dbg !9166
  %inc325 = add nsw i32 %212, 1, !dbg !9166
  store i32 %inc325, i32* %a, align 4, !dbg !9166
  br label %for.cond177, !dbg !9167, !llvm.loop !9168

for.end326:                                       ; preds = %if.then322, %for.cond177
  br label %for.inc327, !dbg !9170

for.inc327:                                       ; preds = %for.end326, %if.then175
  %213 = load i32, i32* %c, align 4, !dbg !9171
  %inc328 = add nsw i32 %213, 1, !dbg !9171
  store i32 %inc328, i32* %c, align 4, !dbg !9171
  %214 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !9172
  %incdec.ptr329 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %214, i32 1, !dbg !9172
  store %struct.StrandBound* %incdec.ptr329, %struct.StrandBound** %sbound, align 8, !dbg !9172
  br label %for.cond165, !dbg !9173, !llvm.loop !9174

for.end330:                                       ; preds = %for.cond165
  br label %if.end331, !dbg !9176

if.end331:                                        ; preds = %for.end330, %for.end
  %215 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9177
  %test_break332 = getelementptr inbounds %struct.Render, %struct.Render* %215, i32 0, i32 96, !dbg !9179
  %216 = load i32 (i8*)*, i32 (i8*)** %test_break332, align 8, !dbg !9179
  %217 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9180
  %tbh333 = getelementptr inbounds %struct.Render, %struct.Render* %217, i32 0, i32 97, !dbg !9181
  %218 = load i8*, i8** %tbh333, align 8, !dbg !9181
  %call334 = call i32 %216(i8* %218), !dbg !9177
  %tobool335 = icmp ne i32 %call334, 0, !dbg !9177
  br i1 %tobool335, label %if.then336, label %if.end337, !dbg !9182

if.then336:                                       ; preds = %if.end331
  br label %for.end340, !dbg !9183

if.end337:                                        ; preds = %if.end331
  br label %for.inc338, !dbg !9184

for.inc338:                                       ; preds = %if.end337, %if.then37, %if.then21, %if.then17
  %219 = load i32, i32* %i, align 4, !dbg !9185
  %inc339 = add nsw i32 %219, 1, !dbg !9185
  store i32 %inc339, i32* %i, align 4, !dbg !9185
  %220 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9186
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %220, i32 0, i32 0, !dbg !9187
  %221 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !9187
  store %struct.ObjectInstanceRen* %221, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9188
  br label %for.cond, !dbg !9189, !llvm.loop !9190

for.end340:                                       ; preds = %if.then336, %for.cond
  %222 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !9192
  %buftype341 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %222, i32 0, i32 36, !dbg !9194
  %223 = load i16, i16* %buftype341, align 4, !dbg !9194
  %conv342 = sext i16 %223 to i32, !dbg !9192
  %cmp343 = icmp eq i32 %conv342, 2, !dbg !9195
  br i1 %cmp343, label %if.then345, label %if.end365, !dbg !9196

if.then345:                                       ; preds = %for.end340
  %224 = load i32, i32* %size.addr, align 4, !dbg !9197
  %225 = load i32, i32* %size.addr, align 4, !dbg !9200
  %mul346 = mul nsw i32 %224, %225, !dbg !9201
  %sub347 = sub nsw i32 %mul346, 1, !dbg !9202
  store i32 %sub347, i32* %a, align 4, !dbg !9203
  br label %for.cond348, !dbg !9204

for.cond348:                                      ; preds = %for.inc362, %if.then345
  %226 = load i32, i32* %a, align 4, !dbg !9205
  %cmp349 = icmp sge i32 %226, 0, !dbg !9207
  br i1 %cmp349, label %for.body351, label %for.end363, !dbg !9208

for.body351:                                      ; preds = %for.cond348
  %227 = load i32*, i32** %rectz.addr, align 8, !dbg !9209
  %228 = load i32, i32* %a, align 4, !dbg !9210
  %idxprom352 = sext i32 %228 to i64, !dbg !9209
  %arrayidx353 = getelementptr inbounds i32, i32* %227, i64 %idxprom352, !dbg !9209
  %229 = load i32, i32* %arrayidx353, align 4, !dbg !9209
  %shr354 = ashr i32 %229, 1, !dbg !9211
  %rectz1355 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 18, !dbg !9212
  %230 = load i32*, i32** %rectz1355, align 8, !dbg !9212
  %231 = load i32, i32* %a, align 4, !dbg !9213
  %idxprom356 = sext i32 %231 to i64, !dbg !9214
  %arrayidx357 = getelementptr inbounds i32, i32* %230, i64 %idxprom356, !dbg !9214
  %232 = load i32, i32* %arrayidx357, align 4, !dbg !9214
  %shr358 = ashr i32 %232, 1, !dbg !9215
  %add359 = add nsw i32 %shr354, %shr358, !dbg !9216
  %233 = load i32*, i32** %rectz.addr, align 8, !dbg !9217
  %234 = load i32, i32* %a, align 4, !dbg !9218
  %idxprom360 = sext i32 %234 to i64, !dbg !9217
  %arrayidx361 = getelementptr inbounds i32, i32* %233, i64 %idxprom360, !dbg !9217
  store i32 %add359, i32* %arrayidx361, align 4, !dbg !9219
  br label %for.inc362, !dbg !9217

for.inc362:                                       ; preds = %for.body351
  %235 = load i32, i32* %a, align 4, !dbg !9220
  %dec = add nsw i32 %235, -1, !dbg !9220
  store i32 %dec, i32* %a, align 4, !dbg !9220
  br label %for.cond348, !dbg !9221, !llvm.loop !9222

for.end363:                                       ; preds = %for.cond348
  %236 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9224
  %rectz1364 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 18, !dbg !9225
  %237 = load i32*, i32** %rectz1364, align 8, !dbg !9225
  %238 = bitcast i32* %237 to i8*, !dbg !9226
  call void %236(i8* %238), !dbg !9224
  br label %if.end365, !dbg !9227

if.end365:                                        ; preds = %for.end363, %for.end340
  call void @zbuf_free_span(%struct.ZSpan* %zspan), !dbg !9228
  ret void, !dbg !9229
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbufline_onlyZ(%struct.ZSpan* %zspan, i32 %UNUSED_obi, i32 %UNUSED_zvlnr, float* %vec1, float* %vec2) #0 !dbg !9230 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %UNUSED_obi.addr = alloca i32, align 4
  %UNUSED_zvlnr.addr = alloca i32, align 4
  %vec1.addr = alloca float*, align 8
  %vec2.addr = alloca float*, align 8
  %rectz = alloca i32*, align 8
  %rectz1 = alloca i32*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %oldx = alloca i32, align 4
  %oldy = alloca i32, align 4
  %ofs = alloca i32, align 4
  %dz = alloca i32, align 4
  %vergz = alloca i32, align 4
  %maxtest = alloca i32, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  store i32 %UNUSED_obi, i32* %UNUSED_obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_obi.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  store i32 %UNUSED_zvlnr, i32* %UNUSED_zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_zvlnr.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !9237, metadata !DIExpression()), !dbg !9238
  store float* %vec2, float** %vec2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata i32** %rectz, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i32** %rectz1, metadata !9243, metadata !DIExpression()), !dbg !9244
  store i32* null, i32** %rectz1, align 8, !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata i32* %end, metadata !9247, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9249, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9251, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.declare(metadata i32* %oldx, metadata !9253, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.declare(metadata i32* %oldy, metadata !9255, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata i32* %dz, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.declare(metadata i32* %vergz, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata i32* %maxtest, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 0, i32* %maxtest, align 4, !dbg !9264
  call void @llvm.dbg.declare(metadata float* %dx, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata float* %dy, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load float*, float** %vec2.addr, align 8, !dbg !9273
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9273
  %1 = load float, float* %arrayidx, align 4, !dbg !9273
  %2 = load float*, float** %vec1.addr, align 8, !dbg !9274
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9274
  %3 = load float, float* %arrayidx1, align 4, !dbg !9274
  %sub = fsub float %1, %3, !dbg !9275
  store float %sub, float* %dx, align 4, !dbg !9276
  %4 = load float*, float** %vec2.addr, align 8, !dbg !9277
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9277
  %5 = load float, float* %arrayidx2, align 4, !dbg !9277
  %6 = load float*, float** %vec1.addr, align 8, !dbg !9278
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9278
  %7 = load float, float* %arrayidx3, align 4, !dbg !9278
  %sub4 = fsub float %5, %7, !dbg !9279
  store float %sub4, float* %dy, align 4, !dbg !9280
  %8 = load float, float* %dx, align 4, !dbg !9281
  %9 = call float @llvm.fabs.f32(float %8), !dbg !9283
  %10 = load float, float* %dy, align 4, !dbg !9284
  %11 = call float @llvm.fabs.f32(float %10), !dbg !9285
  %cmp = fcmp ogt float %9, %11, !dbg !9286
  br i1 %cmp, label %if.then, label %if.else119, !dbg !9287

if.then:                                          ; preds = %entry
  %12 = load float*, float** %vec1.addr, align 8, !dbg !9288
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !9288
  %13 = load float, float* %arrayidx5, align 4, !dbg !9288
  %14 = load float*, float** %vec2.addr, align 8, !dbg !9291
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 0, !dbg !9291
  %15 = load float, float* %arrayidx6, align 4, !dbg !9291
  %cmp7 = fcmp olt float %13, %15, !dbg !9292
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !9293

if.then8:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9294
  %16 = load float*, float** %vec1.addr, align 8, !dbg !9296
  call void @copy_v3_v3(float* %arraydecay, float* %16), !dbg !9297
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9298
  %17 = load float*, float** %vec2.addr, align 8, !dbg !9299
  call void @copy_v3_v3(float* %arraydecay9, float* %17), !dbg !9300
  br label %if.end, !dbg !9301

if.else:                                          ; preds = %if.then
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9302
  %18 = load float*, float** %vec1.addr, align 8, !dbg !9304
  call void @copy_v3_v3(float* %arraydecay10, float* %18), !dbg !9305
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9306
  %19 = load float*, float** %vec2.addr, align 8, !dbg !9307
  call void @copy_v3_v3(float* %arraydecay11, float* %19), !dbg !9308
  %20 = load float, float* %dx, align 4, !dbg !9309
  %fneg = fneg float %20, !dbg !9310
  store float %fneg, float* %dx, align 4, !dbg !9311
  %21 = load float, float* %dy, align 4, !dbg !9312
  %fneg12 = fneg float %21, !dbg !9313
  store float %fneg12, float* %dy, align 4, !dbg !9314
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9315
  %22 = load float, float* %arrayidx13, align 4, !dbg !9315
  %conv = fpext float %22 to double, !dbg !9315
  %23 = call double @llvm.floor.f64(double %conv), !dbg !9316
  %conv14 = fptosi double %23 to i32, !dbg !9316
  store i32 %conv14, i32* %start, align 4, !dbg !9317
  %24 = load i32, i32* %start, align 4, !dbg !9318
  %conv15 = sitofp i32 %24 to double, !dbg !9318
  %25 = load float, float* %dx, align 4, !dbg !9319
  %conv16 = fpext float %25 to double, !dbg !9319
  %26 = call double @llvm.floor.f64(double %conv16), !dbg !9320
  %add = fadd double %conv15, %26, !dbg !9321
  %conv17 = fptosi double %add to i32, !dbg !9318
  store i32 %conv17, i32* %end, align 4, !dbg !9322
  %27 = load i32, i32* %end, align 4, !dbg !9323
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9325
  %rectx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %28, i32 0, i32 0, !dbg !9326
  %29 = load i32, i32* %rectx, align 8, !dbg !9326
  %cmp18 = icmp sge i32 %27, %29, !dbg !9327
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !9328

if.then20:                                        ; preds = %if.end
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9329
  %rectx21 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %30, i32 0, i32 0, !dbg !9330
  %31 = load i32, i32* %rectx21, align 8, !dbg !9330
  %sub22 = sub nsw i32 %31, 1, !dbg !9331
  store i32 %sub22, i32* %end, align 4, !dbg !9332
  br label %if.end23, !dbg !9333

if.end23:                                         ; preds = %if.then20, %if.end
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !9334
  %32 = load float, float* %arrayidx24, align 4, !dbg !9334
  %conv25 = fpext float %32 to double, !dbg !9334
  %33 = call double @llvm.floor.f64(double %conv25), !dbg !9335
  %conv26 = fptosi double %33 to i32, !dbg !9335
  store i32 %conv26, i32* %oldy, align 4, !dbg !9336
  %34 = load float, float* %dx, align 4, !dbg !9337
  %35 = load float, float* %dy, align 4, !dbg !9338
  %div = fdiv float %35, %34, !dbg !9338
  store float %div, float* %dy, align 4, !dbg !9338
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !9339
  %36 = load float, float* %arrayidx27, align 4, !dbg !9339
  %conv28 = fpext float %36 to double, !dbg !9339
  %37 = call double @llvm.floor.f64(double %conv28), !dbg !9340
  %conv29 = fptosi double %37 to i32, !dbg !9340
  store i32 %conv29, i32* %vergz, align 4, !dbg !9341
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !9342
  %38 = load float, float* %arrayidx30, align 4, !dbg !9342
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !9343
  %39 = load float, float* %arrayidx31, align 4, !dbg !9343
  %sub32 = fsub float %38, %39, !dbg !9344
  %40 = load float, float* %dx, align 4, !dbg !9345
  %div33 = fdiv float %sub32, %40, !dbg !9346
  %conv34 = fpext float %div33 to double, !dbg !9347
  %41 = call double @llvm.floor.f64(double %conv34), !dbg !9348
  %conv35 = fptosi double %41 to i32, !dbg !9348
  store i32 %conv35, i32* %dz, align 4, !dbg !9349
  %42 = load i32, i32* %vergz, align 4, !dbg !9350
  %cmp36 = icmp sgt i32 %42, 1342177280, !dbg !9352
  br i1 %cmp36, label %land.lhs.true, label %if.end41, !dbg !9353

land.lhs.true:                                    ; preds = %if.end23
  %43 = load i32, i32* %dz, align 4, !dbg !9354
  %cmp38 = icmp sgt i32 %43, 0, !dbg !9355
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !9356

if.then40:                                        ; preds = %land.lhs.true
  store i32 1, i32* %maxtest, align 4, !dbg !9357
  br label %if.end41, !dbg !9358

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %if.end23
  %44 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9359
  %rectz42 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %44, i32 0, i32 16, !dbg !9360
  %45 = load i32*, i32** %rectz42, align 8, !dbg !9360
  %46 = load i32, i32* %oldy, align 4, !dbg !9361
  %47 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9362
  %rectx43 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %47, i32 0, i32 0, !dbg !9363
  %48 = load i32, i32* %rectx43, align 8, !dbg !9363
  %mul = mul nsw i32 %46, %48, !dbg !9364
  %idx.ext = sext i32 %mul to i64, !dbg !9365
  %add.ptr = getelementptr inbounds i32, i32* %45, i64 %idx.ext, !dbg !9365
  %49 = load i32, i32* %start, align 4, !dbg !9366
  %idx.ext44 = sext i32 %49 to i64, !dbg !9367
  %add.ptr45 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext44, !dbg !9367
  store i32* %add.ptr45, i32** %rectz, align 8, !dbg !9368
  %50 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9369
  %rectz146 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %50, i32 0, i32 18, !dbg !9371
  %51 = load i32*, i32** %rectz146, align 8, !dbg !9371
  %tobool = icmp ne i32* %51, null, !dbg !9369
  br i1 %tobool, label %if.then47, label %if.end55, !dbg !9372

if.then47:                                        ; preds = %if.end41
  %52 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9373
  %rectz148 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %52, i32 0, i32 18, !dbg !9374
  %53 = load i32*, i32** %rectz148, align 8, !dbg !9374
  %54 = load i32, i32* %oldy, align 4, !dbg !9375
  %55 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9376
  %rectx49 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %55, i32 0, i32 0, !dbg !9377
  %56 = load i32, i32* %rectx49, align 8, !dbg !9377
  %mul50 = mul nsw i32 %54, %56, !dbg !9378
  %idx.ext51 = sext i32 %mul50 to i64, !dbg !9379
  %add.ptr52 = getelementptr inbounds i32, i32* %53, i64 %idx.ext51, !dbg !9379
  %57 = load i32, i32* %start, align 4, !dbg !9380
  %idx.ext53 = sext i32 %57 to i64, !dbg !9381
  %add.ptr54 = getelementptr inbounds i32, i32* %add.ptr52, i64 %idx.ext53, !dbg !9381
  store i32* %add.ptr54, i32** %rectz1, align 8, !dbg !9382
  br label %if.end55, !dbg !9383

if.end55:                                         ; preds = %if.then47, %if.end41
  %58 = load float, float* %dy, align 4, !dbg !9384
  %cmp56 = fcmp olt float %58, 0.000000e+00, !dbg !9386
  br i1 %cmp56, label %if.then58, label %if.else61, !dbg !9387

if.then58:                                        ; preds = %if.end55
  %59 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9388
  %rectx59 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %59, i32 0, i32 0, !dbg !9389
  %60 = load i32, i32* %rectx59, align 8, !dbg !9389
  %sub60 = sub nsw i32 0, %60, !dbg !9390
  store i32 %sub60, i32* %ofs, align 4, !dbg !9391
  br label %if.end63, !dbg !9392

if.else61:                                        ; preds = %if.end55
  %61 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9393
  %rectx62 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %61, i32 0, i32 0, !dbg !9394
  %62 = load i32, i32* %rectx62, align 8, !dbg !9394
  store i32 %62, i32* %ofs, align 4, !dbg !9395
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then58
  %63 = load i32, i32* %start, align 4, !dbg !9396
  store i32 %63, i32* %x, align 4, !dbg !9398
  br label %for.cond, !dbg !9399

for.cond:                                         ; preds = %for.inc, %if.end63
  %64 = load i32, i32* %x, align 4, !dbg !9400
  %65 = load i32, i32* %end, align 4, !dbg !9402
  %cmp64 = icmp sle i32 %64, %65, !dbg !9403
  br i1 %cmp64, label %for.body, label %for.end, !dbg !9404

for.body:                                         ; preds = %for.cond
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !9405
  %66 = load float, float* %arrayidx66, align 4, !dbg !9405
  %conv67 = fpext float %66 to double, !dbg !9405
  %67 = call double @llvm.floor.f64(double %conv67), !dbg !9407
  %conv68 = fptosi double %67 to i32, !dbg !9407
  store i32 %conv68, i32* %y, align 4, !dbg !9408
  %68 = load i32, i32* %y, align 4, !dbg !9409
  %69 = load i32, i32* %oldy, align 4, !dbg !9411
  %cmp69 = icmp ne i32 %68, %69, !dbg !9412
  br i1 %cmp69, label %if.then71, label %if.end79, !dbg !9413

if.then71:                                        ; preds = %for.body
  %70 = load i32, i32* %y, align 4, !dbg !9414
  store i32 %70, i32* %oldy, align 4, !dbg !9416
  %71 = load i32, i32* %ofs, align 4, !dbg !9417
  %72 = load i32*, i32** %rectz, align 8, !dbg !9418
  %idx.ext72 = sext i32 %71 to i64, !dbg !9418
  %add.ptr73 = getelementptr inbounds i32, i32* %72, i64 %idx.ext72, !dbg !9418
  store i32* %add.ptr73, i32** %rectz, align 8, !dbg !9418
  %73 = load i32*, i32** %rectz1, align 8, !dbg !9419
  %tobool74 = icmp ne i32* %73, null, !dbg !9419
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !9421

if.then75:                                        ; preds = %if.then71
  %74 = load i32, i32* %ofs, align 4, !dbg !9422
  %75 = load i32*, i32** %rectz1, align 8, !dbg !9423
  %idx.ext76 = sext i32 %74 to i64, !dbg !9423
  %add.ptr77 = getelementptr inbounds i32, i32* %75, i64 %idx.ext76, !dbg !9423
  store i32* %add.ptr77, i32** %rectz1, align 8, !dbg !9423
  br label %if.end78, !dbg !9424

if.end78:                                         ; preds = %if.then75, %if.then71
  br label %if.end79, !dbg !9425

if.end79:                                         ; preds = %if.end78, %for.body
  %76 = load i32, i32* %x, align 4, !dbg !9426
  %cmp80 = icmp sge i32 %76, 0, !dbg !9428
  br i1 %cmp80, label %land.lhs.true82, label %if.end103, !dbg !9429

land.lhs.true82:                                  ; preds = %if.end79
  %77 = load i32, i32* %y, align 4, !dbg !9430
  %cmp83 = icmp sge i32 %77, 0, !dbg !9431
  br i1 %cmp83, label %land.lhs.true85, label %if.end103, !dbg !9432

land.lhs.true85:                                  ; preds = %land.lhs.true82
  %78 = load i32, i32* %y, align 4, !dbg !9433
  %79 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9434
  %recty = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %79, i32 0, i32 1, !dbg !9435
  %80 = load i32, i32* %recty, align 4, !dbg !9435
  %cmp86 = icmp slt i32 %78, %80, !dbg !9436
  br i1 %cmp86, label %if.then88, label %if.end103, !dbg !9437

if.then88:                                        ; preds = %land.lhs.true85
  %81 = load i32, i32* %vergz, align 4, !dbg !9438
  %82 = load i32*, i32** %rectz, align 8, !dbg !9441
  %83 = load i32, i32* %82, align 4, !dbg !9442
  %cmp89 = icmp slt i32 %81, %83, !dbg !9443
  br i1 %cmp89, label %if.then91, label %if.else95, !dbg !9444

if.then91:                                        ; preds = %if.then88
  %84 = load i32*, i32** %rectz1, align 8, !dbg !9445
  %tobool92 = icmp ne i32* %84, null, !dbg !9445
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !9448

if.then93:                                        ; preds = %if.then91
  %85 = load i32*, i32** %rectz, align 8, !dbg !9449
  %86 = load i32, i32* %85, align 4, !dbg !9450
  %87 = load i32*, i32** %rectz1, align 8, !dbg !9451
  store i32 %86, i32* %87, align 4, !dbg !9452
  br label %if.end94, !dbg !9453

if.end94:                                         ; preds = %if.then93, %if.then91
  %88 = load i32, i32* %vergz, align 4, !dbg !9454
  %89 = load i32*, i32** %rectz, align 8, !dbg !9455
  store i32 %88, i32* %89, align 4, !dbg !9456
  br label %if.end102, !dbg !9457

if.else95:                                        ; preds = %if.then88
  %90 = load i32*, i32** %rectz1, align 8, !dbg !9458
  %tobool96 = icmp ne i32* %90, null, !dbg !9458
  br i1 %tobool96, label %land.lhs.true97, label %if.end101, !dbg !9460

land.lhs.true97:                                  ; preds = %if.else95
  %91 = load i32, i32* %vergz, align 4, !dbg !9461
  %92 = load i32*, i32** %rectz1, align 8, !dbg !9462
  %93 = load i32, i32* %92, align 4, !dbg !9463
  %cmp98 = icmp slt i32 %91, %93, !dbg !9464
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !9465

if.then100:                                       ; preds = %land.lhs.true97
  %94 = load i32, i32* %vergz, align 4, !dbg !9466
  %95 = load i32*, i32** %rectz1, align 8, !dbg !9467
  store i32 %94, i32* %95, align 4, !dbg !9468
  br label %if.end101, !dbg !9469

if.end101:                                        ; preds = %if.then100, %land.lhs.true97, %if.else95
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end94
  br label %if.end103, !dbg !9470

if.end103:                                        ; preds = %if.end102, %land.lhs.true85, %land.lhs.true82, %if.end79
  %96 = load float, float* %dy, align 4, !dbg !9471
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !9472
  %97 = load float, float* %arrayidx104, align 4, !dbg !9473
  %add105 = fadd float %97, %96, !dbg !9473
  store float %add105, float* %arrayidx104, align 4, !dbg !9473
  %98 = load i32, i32* %maxtest, align 4, !dbg !9474
  %tobool106 = icmp ne i32 %98, 0, !dbg !9474
  br i1 %tobool106, label %land.lhs.true107, label %if.else112, !dbg !9476

land.lhs.true107:                                 ; preds = %if.end103
  %99 = load i32, i32* %vergz, align 4, !dbg !9477
  %100 = load i32, i32* %dz, align 4, !dbg !9478
  %sub108 = sub nsw i32 2147483632, %100, !dbg !9479
  %cmp109 = icmp sgt i32 %99, %sub108, !dbg !9480
  br i1 %cmp109, label %if.then111, label %if.else112, !dbg !9481

if.then111:                                       ; preds = %land.lhs.true107
  store i32 2147483632, i32* %vergz, align 4, !dbg !9482
  br label %if.end114, !dbg !9483

if.else112:                                       ; preds = %land.lhs.true107, %if.end103
  %101 = load i32, i32* %dz, align 4, !dbg !9484
  %102 = load i32, i32* %vergz, align 4, !dbg !9485
  %add113 = add nsw i32 %102, %101, !dbg !9485
  store i32 %add113, i32* %vergz, align 4, !dbg !9485
  br label %if.end114

if.end114:                                        ; preds = %if.else112, %if.then111
  %103 = load i32*, i32** %rectz1, align 8, !dbg !9486
  %tobool115 = icmp ne i32* %103, null, !dbg !9486
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !9488

if.then116:                                       ; preds = %if.end114
  %104 = load i32*, i32** %rectz1, align 8, !dbg !9489
  %incdec.ptr = getelementptr inbounds i32, i32* %104, i32 1, !dbg !9489
  store i32* %incdec.ptr, i32** %rectz1, align 8, !dbg !9489
  br label %if.end117, !dbg !9490

if.end117:                                        ; preds = %if.then116, %if.end114
  br label %for.inc, !dbg !9491

for.inc:                                          ; preds = %if.end117
  %105 = load i32, i32* %x, align 4, !dbg !9492
  %inc = add nsw i32 %105, 1, !dbg !9492
  store i32 %inc, i32* %x, align 4, !dbg !9492
  %106 = load i32*, i32** %rectz, align 8, !dbg !9493
  %incdec.ptr118 = getelementptr inbounds i32, i32* %106, i32 1, !dbg !9493
  store i32* %incdec.ptr118, i32** %rectz, align 8, !dbg !9493
  br label %for.cond, !dbg !9494, !llvm.loop !9495

for.end:                                          ; preds = %for.cond
  br label %if.end256, !dbg !9497

if.else119:                                       ; preds = %entry
  %107 = load float*, float** %vec1.addr, align 8, !dbg !9498
  %arrayidx120 = getelementptr inbounds float, float* %107, i64 1, !dbg !9498
  %108 = load float, float* %arrayidx120, align 4, !dbg !9498
  %109 = load float*, float** %vec2.addr, align 8, !dbg !9501
  %arrayidx121 = getelementptr inbounds float, float* %109, i64 1, !dbg !9501
  %110 = load float, float* %arrayidx121, align 4, !dbg !9501
  %cmp122 = fcmp olt float %108, %110, !dbg !9502
  br i1 %cmp122, label %if.then124, label %if.else127, !dbg !9503

if.then124:                                       ; preds = %if.else119
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9504
  %111 = load float*, float** %vec1.addr, align 8, !dbg !9506
  call void @copy_v3_v3(float* %arraydecay125, float* %111), !dbg !9507
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9508
  %112 = load float*, float** %vec2.addr, align 8, !dbg !9509
  call void @copy_v3_v3(float* %arraydecay126, float* %112), !dbg !9510
  br label %if.end132, !dbg !9511

if.else127:                                       ; preds = %if.else119
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !9512
  %113 = load float*, float** %vec1.addr, align 8, !dbg !9514
  call void @copy_v3_v3(float* %arraydecay128, float* %113), !dbg !9515
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9516
  %114 = load float*, float** %vec2.addr, align 8, !dbg !9517
  call void @copy_v3_v3(float* %arraydecay129, float* %114), !dbg !9518
  %115 = load float, float* %dx, align 4, !dbg !9519
  %fneg130 = fneg float %115, !dbg !9520
  store float %fneg130, float* %dx, align 4, !dbg !9521
  %116 = load float, float* %dy, align 4, !dbg !9522
  %fneg131 = fneg float %116, !dbg !9523
  store float %fneg131, float* %dy, align 4, !dbg !9524
  br label %if.end132

if.end132:                                        ; preds = %if.else127, %if.then124
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !9525
  %117 = load float, float* %arrayidx133, align 4, !dbg !9525
  %conv134 = fpext float %117 to double, !dbg !9525
  %118 = call double @llvm.floor.f64(double %conv134), !dbg !9526
  %conv135 = fptosi double %118 to i32, !dbg !9526
  store i32 %conv135, i32* %start, align 4, !dbg !9527
  %119 = load i32, i32* %start, align 4, !dbg !9528
  %conv136 = sitofp i32 %119 to double, !dbg !9528
  %120 = load float, float* %dy, align 4, !dbg !9529
  %conv137 = fpext float %120 to double, !dbg !9529
  %121 = call double @llvm.floor.f64(double %conv137), !dbg !9530
  %add138 = fadd double %conv136, %121, !dbg !9531
  %conv139 = fptosi double %add138 to i32, !dbg !9528
  store i32 %conv139, i32* %end, align 4, !dbg !9532
  %122 = load i32, i32* %end, align 4, !dbg !9533
  %123 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9535
  %recty140 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %123, i32 0, i32 1, !dbg !9536
  %124 = load i32, i32* %recty140, align 4, !dbg !9536
  %cmp141 = icmp sge i32 %122, %124, !dbg !9537
  br i1 %cmp141, label %if.then143, label %if.end146, !dbg !9538

if.then143:                                       ; preds = %if.end132
  %125 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9539
  %recty144 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %125, i32 0, i32 1, !dbg !9540
  %126 = load i32, i32* %recty144, align 4, !dbg !9540
  %sub145 = sub nsw i32 %126, 1, !dbg !9541
  store i32 %sub145, i32* %end, align 4, !dbg !9542
  br label %if.end146, !dbg !9543

if.end146:                                        ; preds = %if.then143, %if.end132
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9544
  %127 = load float, float* %arrayidx147, align 4, !dbg !9544
  %conv148 = fpext float %127 to double, !dbg !9544
  %128 = call double @llvm.floor.f64(double %conv148), !dbg !9545
  %conv149 = fptosi double %128 to i32, !dbg !9545
  store i32 %conv149, i32* %oldx, align 4, !dbg !9546
  %129 = load float, float* %dy, align 4, !dbg !9547
  %130 = load float, float* %dx, align 4, !dbg !9548
  %div150 = fdiv float %130, %129, !dbg !9548
  store float %div150, float* %dx, align 4, !dbg !9548
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !9549
  %131 = load float, float* %arrayidx151, align 4, !dbg !9549
  %conv152 = fpext float %131 to double, !dbg !9549
  %132 = call double @llvm.floor.f64(double %conv152), !dbg !9550
  %conv153 = fptosi double %132 to i32, !dbg !9550
  store i32 %conv153, i32* %vergz, align 4, !dbg !9551
  %arrayidx154 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !9552
  %133 = load float, float* %arrayidx154, align 4, !dbg !9552
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !9553
  %134 = load float, float* %arrayidx155, align 4, !dbg !9553
  %sub156 = fsub float %133, %134, !dbg !9554
  %135 = load float, float* %dy, align 4, !dbg !9555
  %div157 = fdiv float %sub156, %135, !dbg !9556
  %conv158 = fpext float %div157 to double, !dbg !9557
  %136 = call double @llvm.floor.f64(double %conv158), !dbg !9558
  %conv159 = fptosi double %136 to i32, !dbg !9558
  store i32 %conv159, i32* %dz, align 4, !dbg !9559
  %137 = load i32, i32* %vergz, align 4, !dbg !9560
  %cmp160 = icmp sgt i32 %137, 1342177280, !dbg !9562
  br i1 %cmp160, label %land.lhs.true162, label %if.end166, !dbg !9563

land.lhs.true162:                                 ; preds = %if.end146
  %138 = load i32, i32* %dz, align 4, !dbg !9564
  %cmp163 = icmp sgt i32 %138, 0, !dbg !9565
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !9566

if.then165:                                       ; preds = %land.lhs.true162
  store i32 1, i32* %maxtest, align 4, !dbg !9567
  br label %if.end166, !dbg !9568

if.end166:                                        ; preds = %if.then165, %land.lhs.true162, %if.end146
  %139 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9569
  %rectz167 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %139, i32 0, i32 16, !dbg !9570
  %140 = load i32*, i32** %rectz167, align 8, !dbg !9570
  %141 = load i32, i32* %start, align 4, !dbg !9571
  %142 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9572
  %rectx168 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %142, i32 0, i32 0, !dbg !9573
  %143 = load i32, i32* %rectx168, align 8, !dbg !9573
  %mul169 = mul nsw i32 %141, %143, !dbg !9574
  %idx.ext170 = sext i32 %mul169 to i64, !dbg !9575
  %add.ptr171 = getelementptr inbounds i32, i32* %140, i64 %idx.ext170, !dbg !9575
  %144 = load i32, i32* %oldx, align 4, !dbg !9576
  %idx.ext172 = sext i32 %144 to i64, !dbg !9577
  %add.ptr173 = getelementptr inbounds i32, i32* %add.ptr171, i64 %idx.ext172, !dbg !9577
  store i32* %add.ptr173, i32** %rectz, align 8, !dbg !9578
  %145 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9579
  %rectz1174 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %145, i32 0, i32 18, !dbg !9581
  %146 = load i32*, i32** %rectz1174, align 8, !dbg !9581
  %tobool175 = icmp ne i32* %146, null, !dbg !9579
  br i1 %tobool175, label %if.then176, label %if.end184, !dbg !9582

if.then176:                                       ; preds = %if.end166
  %147 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9583
  %rectz1177 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %147, i32 0, i32 18, !dbg !9584
  %148 = load i32*, i32** %rectz1177, align 8, !dbg !9584
  %149 = load i32, i32* %start, align 4, !dbg !9585
  %150 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9586
  %rectx178 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %150, i32 0, i32 0, !dbg !9587
  %151 = load i32, i32* %rectx178, align 8, !dbg !9587
  %mul179 = mul nsw i32 %149, %151, !dbg !9588
  %idx.ext180 = sext i32 %mul179 to i64, !dbg !9589
  %add.ptr181 = getelementptr inbounds i32, i32* %148, i64 %idx.ext180, !dbg !9589
  %152 = load i32, i32* %oldx, align 4, !dbg !9590
  %idx.ext182 = sext i32 %152 to i64, !dbg !9591
  %add.ptr183 = getelementptr inbounds i32, i32* %add.ptr181, i64 %idx.ext182, !dbg !9591
  store i32* %add.ptr183, i32** %rectz1, align 8, !dbg !9592
  br label %if.end184, !dbg !9593

if.end184:                                        ; preds = %if.then176, %if.end166
  %153 = load float, float* %dx, align 4, !dbg !9594
  %cmp185 = fcmp olt float %153, 0.000000e+00, !dbg !9596
  br i1 %cmp185, label %if.then187, label %if.else188, !dbg !9597

if.then187:                                       ; preds = %if.end184
  store i32 -1, i32* %ofs, align 4, !dbg !9598
  br label %if.end189, !dbg !9599

if.else188:                                       ; preds = %if.end184
  store i32 1, i32* %ofs, align 4, !dbg !9600
  br label %if.end189

if.end189:                                        ; preds = %if.else188, %if.then187
  %154 = load i32, i32* %start, align 4, !dbg !9601
  store i32 %154, i32* %y, align 4, !dbg !9603
  br label %for.cond190, !dbg !9604

for.cond190:                                      ; preds = %for.inc250, %if.end189
  %155 = load i32, i32* %y, align 4, !dbg !9605
  %156 = load i32, i32* %end, align 4, !dbg !9607
  %cmp191 = icmp sle i32 %155, %156, !dbg !9608
  br i1 %cmp191, label %for.body193, label %for.end255, !dbg !9609

for.body193:                                      ; preds = %for.cond190
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9610
  %157 = load float, float* %arrayidx194, align 4, !dbg !9610
  %conv195 = fpext float %157 to double, !dbg !9610
  %158 = call double @llvm.floor.f64(double %conv195), !dbg !9612
  %conv196 = fptosi double %158 to i32, !dbg !9612
  store i32 %conv196, i32* %x, align 4, !dbg !9613
  %159 = load i32, i32* %x, align 4, !dbg !9614
  %160 = load i32, i32* %oldx, align 4, !dbg !9616
  %cmp197 = icmp ne i32 %159, %160, !dbg !9617
  br i1 %cmp197, label %if.then199, label %if.end207, !dbg !9618

if.then199:                                       ; preds = %for.body193
  %161 = load i32, i32* %x, align 4, !dbg !9619
  store i32 %161, i32* %oldx, align 4, !dbg !9621
  %162 = load i32, i32* %ofs, align 4, !dbg !9622
  %163 = load i32*, i32** %rectz, align 8, !dbg !9623
  %idx.ext200 = sext i32 %162 to i64, !dbg !9623
  %add.ptr201 = getelementptr inbounds i32, i32* %163, i64 %idx.ext200, !dbg !9623
  store i32* %add.ptr201, i32** %rectz, align 8, !dbg !9623
  %164 = load i32*, i32** %rectz1, align 8, !dbg !9624
  %tobool202 = icmp ne i32* %164, null, !dbg !9624
  br i1 %tobool202, label %if.then203, label %if.end206, !dbg !9626

if.then203:                                       ; preds = %if.then199
  %165 = load i32, i32* %ofs, align 4, !dbg !9627
  %166 = load i32*, i32** %rectz1, align 8, !dbg !9628
  %idx.ext204 = sext i32 %165 to i64, !dbg !9628
  %add.ptr205 = getelementptr inbounds i32, i32* %166, i64 %idx.ext204, !dbg !9628
  store i32* %add.ptr205, i32** %rectz1, align 8, !dbg !9628
  br label %if.end206, !dbg !9629

if.end206:                                        ; preds = %if.then203, %if.then199
  br label %if.end207, !dbg !9630

if.end207:                                        ; preds = %if.end206, %for.body193
  %167 = load i32, i32* %x, align 4, !dbg !9631
  %cmp208 = icmp sge i32 %167, 0, !dbg !9633
  br i1 %cmp208, label %land.lhs.true210, label %if.end232, !dbg !9634

land.lhs.true210:                                 ; preds = %if.end207
  %168 = load i32, i32* %y, align 4, !dbg !9635
  %cmp211 = icmp sge i32 %168, 0, !dbg !9636
  br i1 %cmp211, label %land.lhs.true213, label %if.end232, !dbg !9637

land.lhs.true213:                                 ; preds = %land.lhs.true210
  %169 = load i32, i32* %x, align 4, !dbg !9638
  %170 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9639
  %rectx214 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %170, i32 0, i32 0, !dbg !9640
  %171 = load i32, i32* %rectx214, align 8, !dbg !9640
  %cmp215 = icmp slt i32 %169, %171, !dbg !9641
  br i1 %cmp215, label %if.then217, label %if.end232, !dbg !9642

if.then217:                                       ; preds = %land.lhs.true213
  %172 = load i32, i32* %vergz, align 4, !dbg !9643
  %173 = load i32*, i32** %rectz, align 8, !dbg !9646
  %174 = load i32, i32* %173, align 4, !dbg !9647
  %cmp218 = icmp slt i32 %172, %174, !dbg !9648
  br i1 %cmp218, label %if.then220, label %if.else224, !dbg !9649

if.then220:                                       ; preds = %if.then217
  %175 = load i32*, i32** %rectz1, align 8, !dbg !9650
  %tobool221 = icmp ne i32* %175, null, !dbg !9650
  br i1 %tobool221, label %if.then222, label %if.end223, !dbg !9653

if.then222:                                       ; preds = %if.then220
  %176 = load i32*, i32** %rectz, align 8, !dbg !9654
  %177 = load i32, i32* %176, align 4, !dbg !9655
  %178 = load i32*, i32** %rectz1, align 8, !dbg !9656
  store i32 %177, i32* %178, align 4, !dbg !9657
  br label %if.end223, !dbg !9658

if.end223:                                        ; preds = %if.then222, %if.then220
  %179 = load i32, i32* %vergz, align 4, !dbg !9659
  %180 = load i32*, i32** %rectz, align 8, !dbg !9660
  store i32 %179, i32* %180, align 4, !dbg !9661
  br label %if.end231, !dbg !9662

if.else224:                                       ; preds = %if.then217
  %181 = load i32*, i32** %rectz1, align 8, !dbg !9663
  %tobool225 = icmp ne i32* %181, null, !dbg !9663
  br i1 %tobool225, label %land.lhs.true226, label %if.end230, !dbg !9665

land.lhs.true226:                                 ; preds = %if.else224
  %182 = load i32, i32* %vergz, align 4, !dbg !9666
  %183 = load i32*, i32** %rectz1, align 8, !dbg !9667
  %184 = load i32, i32* %183, align 4, !dbg !9668
  %cmp227 = icmp slt i32 %182, %184, !dbg !9669
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !9670

if.then229:                                       ; preds = %land.lhs.true226
  %185 = load i32, i32* %vergz, align 4, !dbg !9671
  %186 = load i32*, i32** %rectz1, align 8, !dbg !9672
  store i32 %185, i32* %186, align 4, !dbg !9673
  br label %if.end230, !dbg !9674

if.end230:                                        ; preds = %if.then229, %land.lhs.true226, %if.else224
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end223
  br label %if.end232, !dbg !9675

if.end232:                                        ; preds = %if.end231, %land.lhs.true213, %land.lhs.true210, %if.end207
  %187 = load float, float* %dx, align 4, !dbg !9676
  %arrayidx233 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !9677
  %188 = load float, float* %arrayidx233, align 4, !dbg !9678
  %add234 = fadd float %188, %187, !dbg !9678
  store float %add234, float* %arrayidx233, align 4, !dbg !9678
  %189 = load i32, i32* %maxtest, align 4, !dbg !9679
  %tobool235 = icmp ne i32 %189, 0, !dbg !9679
  br i1 %tobool235, label %land.lhs.true236, label %if.else241, !dbg !9681

land.lhs.true236:                                 ; preds = %if.end232
  %190 = load i32, i32* %vergz, align 4, !dbg !9682
  %191 = load i32, i32* %dz, align 4, !dbg !9683
  %sub237 = sub nsw i32 2147483632, %191, !dbg !9684
  %cmp238 = icmp sgt i32 %190, %sub237, !dbg !9685
  br i1 %cmp238, label %if.then240, label %if.else241, !dbg !9686

if.then240:                                       ; preds = %land.lhs.true236
  store i32 2147483632, i32* %vergz, align 4, !dbg !9687
  br label %if.end243, !dbg !9688

if.else241:                                       ; preds = %land.lhs.true236, %if.end232
  %192 = load i32, i32* %dz, align 4, !dbg !9689
  %193 = load i32, i32* %vergz, align 4, !dbg !9690
  %add242 = add nsw i32 %193, %192, !dbg !9690
  store i32 %add242, i32* %vergz, align 4, !dbg !9690
  br label %if.end243

if.end243:                                        ; preds = %if.else241, %if.then240
  %194 = load i32*, i32** %rectz1, align 8, !dbg !9691
  %tobool244 = icmp ne i32* %194, null, !dbg !9691
  br i1 %tobool244, label %if.then245, label %if.end249, !dbg !9693

if.then245:                                       ; preds = %if.end243
  %195 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9694
  %rectx246 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %195, i32 0, i32 0, !dbg !9695
  %196 = load i32, i32* %rectx246, align 8, !dbg !9695
  %197 = load i32*, i32** %rectz1, align 8, !dbg !9696
  %idx.ext247 = sext i32 %196 to i64, !dbg !9696
  %add.ptr248 = getelementptr inbounds i32, i32* %197, i64 %idx.ext247, !dbg !9696
  store i32* %add.ptr248, i32** %rectz1, align 8, !dbg !9696
  br label %if.end249, !dbg !9697

if.end249:                                        ; preds = %if.then245, %if.end243
  br label %for.inc250, !dbg !9698

for.inc250:                                       ; preds = %if.end249
  %198 = load i32, i32* %y, align 4, !dbg !9699
  %inc251 = add nsw i32 %198, 1, !dbg !9699
  store i32 %inc251, i32* %y, align 4, !dbg !9699
  %199 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9700
  %rectx252 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %199, i32 0, i32 0, !dbg !9701
  %200 = load i32, i32* %rectx252, align 8, !dbg !9701
  %201 = load i32*, i32** %rectz, align 8, !dbg !9702
  %idx.ext253 = sext i32 %200 to i64, !dbg !9702
  %add.ptr254 = getelementptr inbounds i32, i32* %201, i64 %idx.ext253, !dbg !9702
  store i32* %add.ptr254, i32** %rectz, align 8, !dbg !9702
  br label %for.cond190, !dbg !9703, !llvm.loop !9704

for.end255:                                       ; preds = %for.cond190
  br label %if.end256

if.end256:                                        ; preds = %for.end255, %for.end
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffillGL_onlyZ(%struct.ZSpan* %zspan, i32 %UNUSED_obi, i32 %UNUSED_zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !9707 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %UNUSED_obi.addr = alloca i32, align 4
  %UNUSED_zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %zverg = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %z0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %rz = alloca i32*, align 8
  %rz1 = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %rectzofs = alloca i32*, align 8
  %rectzofs1 = alloca i32*, align 8
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  %zvergi = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  store i32 %UNUSED_obi, i32* %UNUSED_obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_obi.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i32 %UNUSED_zvlnr, i32* %UNUSED_zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_zvlnr.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !9714, metadata !DIExpression()), !dbg !9715
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !9722, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !9726, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.declare(metadata double* %zverg, metadata !9728, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.declare(metadata float* %x0, metadata !9730, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.declare(metadata float* %y0, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata float* %z0, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata float* %x1, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.declare(metadata float* %y1, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata float* %z1, metadata !9740, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.declare(metadata float* %x2, metadata !9742, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.declare(metadata float* %y2, metadata !9744, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.declare(metadata float* %z2, metadata !9746, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata float** %span1, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata float** %span2, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata i32** %rz1, metadata !9756, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9758, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !9766, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.declare(metadata i32** %rectzofs, metadata !9768, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.declare(metadata i32** %rectzofs1, metadata !9770, metadata !DIExpression()), !dbg !9771
  store i32* null, i32** %rectzofs1, align 8, !dbg !9771
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !9772, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !9774, metadata !DIExpression()), !dbg !9775
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9776
  call void @zbuf_init_span(%struct.ZSpan* %0), !dbg !9777
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9778
  %2 = load float*, float** %v1.addr, align 8, !dbg !9779
  %3 = load float*, float** %v2.addr, align 8, !dbg !9780
  call void @zbuf_add_to_span(%struct.ZSpan* %1, float* %2, float* %3), !dbg !9781
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9782
  %5 = load float*, float** %v2.addr, align 8, !dbg !9783
  %6 = load float*, float** %v3.addr, align 8, !dbg !9784
  call void @zbuf_add_to_span(%struct.ZSpan* %4, float* %5, float* %6), !dbg !9785
  %7 = load float*, float** %v4.addr, align 8, !dbg !9786
  %tobool = icmp ne float* %7, null, !dbg !9786
  br i1 %tobool, label %if.then, label %if.else, !dbg !9788

if.then:                                          ; preds = %entry
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9789
  %9 = load float*, float** %v3.addr, align 8, !dbg !9791
  %10 = load float*, float** %v4.addr, align 8, !dbg !9792
  call void @zbuf_add_to_span(%struct.ZSpan* %8, float* %9, float* %10), !dbg !9793
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9794
  %12 = load float*, float** %v4.addr, align 8, !dbg !9795
  %13 = load float*, float** %v1.addr, align 8, !dbg !9796
  call void @zbuf_add_to_span(%struct.ZSpan* %11, float* %12, float* %13), !dbg !9797
  br label %if.end, !dbg !9798

if.else:                                          ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9799
  %15 = load float*, float** %v3.addr, align 8, !dbg !9800
  %16 = load float*, float** %v1.addr, align 8, !dbg !9801
  call void @zbuf_add_to_span(%struct.ZSpan* %14, float* %15, float* %16), !dbg !9802
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9803
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 8, !dbg !9805
  %18 = load float*, float** %minp2, align 8, !dbg !9805
  %cmp = icmp eq float* %18, null, !dbg !9806
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !9807

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9808
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 9, !dbg !9809
  %20 = load float*, float** %maxp2, align 8, !dbg !9809
  %cmp1 = icmp eq float* %20, null, !dbg !9810
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9811

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !9812

if.end3:                                          ; preds = %lor.lhs.false
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9813
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 2, !dbg !9815
  %22 = load i32, i32* %miny1, align 8, !dbg !9815
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9816
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 4, !dbg !9817
  %24 = load i32, i32* %miny2, align 8, !dbg !9817
  %cmp4 = icmp slt i32 %22, %24, !dbg !9818
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !9819

if.then5:                                         ; preds = %if.end3
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9820
  %miny26 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 4, !dbg !9821
  %26 = load i32, i32* %miny26, align 8, !dbg !9821
  store i32 %26, i32* %my0, align 4, !dbg !9822
  br label %if.end9, !dbg !9823

if.else7:                                         ; preds = %if.end3
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9824
  %miny18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 2, !dbg !9825
  %28 = load i32, i32* %miny18, align 8, !dbg !9825
  store i32 %28, i32* %my0, align 4, !dbg !9826
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9827
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 3, !dbg !9829
  %30 = load i32, i32* %maxy1, align 4, !dbg !9829
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9830
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 5, !dbg !9831
  %32 = load i32, i32* %maxy2, align 4, !dbg !9831
  %cmp10 = icmp sgt i32 %30, %32, !dbg !9832
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !9833

if.then11:                                        ; preds = %if.end9
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9834
  %maxy212 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 5, !dbg !9835
  %34 = load i32, i32* %maxy212, align 4, !dbg !9835
  store i32 %34, i32* %my2, align 4, !dbg !9836
  br label %if.end15, !dbg !9837

if.else13:                                        ; preds = %if.end9
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9838
  %maxy114 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %35, i32 0, i32 3, !dbg !9839
  %36 = load i32, i32* %maxy114, align 4, !dbg !9839
  store i32 %36, i32* %my2, align 4, !dbg !9840
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %37 = load i32, i32* %my2, align 4, !dbg !9841
  %38 = load i32, i32* %my0, align 4, !dbg !9843
  %cmp16 = icmp slt i32 %37, %38, !dbg !9844
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9845

if.then17:                                        ; preds = %if.end15
  br label %for.end, !dbg !9846

if.end18:                                         ; preds = %if.end15
  %39 = load float*, float** %v1.addr, align 8, !dbg !9847
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !9847
  %40 = load float, float* %arrayidx, align 4, !dbg !9847
  %41 = load float*, float** %v2.addr, align 8, !dbg !9848
  %arrayidx19 = getelementptr inbounds float, float* %41, i64 0, !dbg !9848
  %42 = load float, float* %arrayidx19, align 4, !dbg !9848
  %sub = fsub float %40, %42, !dbg !9849
  store float %sub, float* %x1, align 4, !dbg !9850
  %43 = load float*, float** %v2.addr, align 8, !dbg !9851
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !9851
  %44 = load float, float* %arrayidx20, align 4, !dbg !9851
  %45 = load float*, float** %v3.addr, align 8, !dbg !9852
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 0, !dbg !9852
  %46 = load float, float* %arrayidx21, align 4, !dbg !9852
  %sub22 = fsub float %44, %46, !dbg !9853
  store float %sub22, float* %x2, align 4, !dbg !9854
  %47 = load float*, float** %v1.addr, align 8, !dbg !9855
  %arrayidx23 = getelementptr inbounds float, float* %47, i64 1, !dbg !9855
  %48 = load float, float* %arrayidx23, align 4, !dbg !9855
  %49 = load float*, float** %v2.addr, align 8, !dbg !9856
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !9856
  %50 = load float, float* %arrayidx24, align 4, !dbg !9856
  %sub25 = fsub float %48, %50, !dbg !9857
  store float %sub25, float* %y1, align 4, !dbg !9858
  %51 = load float*, float** %v2.addr, align 8, !dbg !9859
  %arrayidx26 = getelementptr inbounds float, float* %51, i64 1, !dbg !9859
  %52 = load float, float* %arrayidx26, align 4, !dbg !9859
  %53 = load float*, float** %v3.addr, align 8, !dbg !9860
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 1, !dbg !9860
  %54 = load float, float* %arrayidx27, align 4, !dbg !9860
  %sub28 = fsub float %52, %54, !dbg !9861
  store float %sub28, float* %y2, align 4, !dbg !9862
  %55 = load float*, float** %v1.addr, align 8, !dbg !9863
  %arrayidx29 = getelementptr inbounds float, float* %55, i64 2, !dbg !9863
  %56 = load float, float* %arrayidx29, align 4, !dbg !9863
  %57 = load float*, float** %v2.addr, align 8, !dbg !9864
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !9864
  %58 = load float, float* %arrayidx30, align 4, !dbg !9864
  %sub31 = fsub float %56, %58, !dbg !9865
  store float %sub31, float* %z1, align 4, !dbg !9866
  %59 = load float*, float** %v2.addr, align 8, !dbg !9867
  %arrayidx32 = getelementptr inbounds float, float* %59, i64 2, !dbg !9867
  %60 = load float, float* %arrayidx32, align 4, !dbg !9867
  %61 = load float*, float** %v3.addr, align 8, !dbg !9868
  %arrayidx33 = getelementptr inbounds float, float* %61, i64 2, !dbg !9868
  %62 = load float, float* %arrayidx33, align 4, !dbg !9868
  %sub34 = fsub float %60, %62, !dbg !9869
  store float %sub34, float* %z2, align 4, !dbg !9870
  %63 = load float, float* %y1, align 4, !dbg !9871
  %64 = load float, float* %z2, align 4, !dbg !9872
  %mul = fmul float %63, %64, !dbg !9873
  %65 = load float, float* %z1, align 4, !dbg !9874
  %66 = load float, float* %y2, align 4, !dbg !9875
  %mul35 = fmul float %65, %66, !dbg !9876
  %sub36 = fsub float %mul, %mul35, !dbg !9877
  store float %sub36, float* %x0, align 4, !dbg !9878
  %67 = load float, float* %z1, align 4, !dbg !9879
  %68 = load float, float* %x2, align 4, !dbg !9880
  %mul37 = fmul float %67, %68, !dbg !9881
  %69 = load float, float* %x1, align 4, !dbg !9882
  %70 = load float, float* %z2, align 4, !dbg !9883
  %mul38 = fmul float %69, %70, !dbg !9884
  %sub39 = fsub float %mul37, %mul38, !dbg !9885
  store float %sub39, float* %y0, align 4, !dbg !9886
  %71 = load float, float* %x1, align 4, !dbg !9887
  %72 = load float, float* %y2, align 4, !dbg !9888
  %mul40 = fmul float %71, %72, !dbg !9889
  %73 = load float, float* %y1, align 4, !dbg !9890
  %74 = load float, float* %x2, align 4, !dbg !9891
  %mul41 = fmul float %73, %74, !dbg !9892
  %sub42 = fsub float %mul40, %mul41, !dbg !9893
  store float %sub42, float* %z0, align 4, !dbg !9894
  %75 = load float, float* %z0, align 4, !dbg !9895
  %cmp43 = fcmp oeq float %75, 0.000000e+00, !dbg !9897
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !9898

if.then44:                                        ; preds = %if.end18
  br label %for.end, !dbg !9899

if.end45:                                         ; preds = %if.end18
  %76 = load float, float* %x0, align 4, !dbg !9900
  %77 = load float*, float** %v1.addr, align 8, !dbg !9901
  %arrayidx46 = getelementptr inbounds float, float* %77, i64 0, !dbg !9901
  %78 = load float, float* %arrayidx46, align 4, !dbg !9901
  %mul47 = fmul float %76, %78, !dbg !9902
  %79 = load float, float* %y0, align 4, !dbg !9903
  %80 = load float*, float** %v1.addr, align 8, !dbg !9904
  %arrayidx48 = getelementptr inbounds float, float* %80, i64 1, !dbg !9904
  %81 = load float, float* %arrayidx48, align 4, !dbg !9904
  %mul49 = fmul float %79, %81, !dbg !9905
  %add = fadd float %mul47, %mul49, !dbg !9906
  %82 = load float, float* %z0, align 4, !dbg !9907
  %div = fdiv float %add, %82, !dbg !9908
  %83 = load float*, float** %v1.addr, align 8, !dbg !9909
  %arrayidx50 = getelementptr inbounds float, float* %83, i64 2, !dbg !9909
  %84 = load float, float* %arrayidx50, align 4, !dbg !9909
  %add51 = fadd float %div, %84, !dbg !9910
  store float %add51, float* %xx1, align 4, !dbg !9911
  %85 = load float, float* %x0, align 4, !dbg !9912
  %conv = fpext float %85 to double, !dbg !9913
  %fneg = fneg double %conv, !dbg !9914
  %86 = load float, float* %z0, align 4, !dbg !9915
  %conv52 = fpext float %86 to double, !dbg !9916
  %div53 = fdiv double %fneg, %conv52, !dbg !9917
  store double %div53, double* %zxd, align 8, !dbg !9918
  %87 = load float, float* %y0, align 4, !dbg !9919
  %conv54 = fpext float %87 to double, !dbg !9920
  %fneg55 = fneg double %conv54, !dbg !9921
  %88 = load float, float* %z0, align 4, !dbg !9922
  %conv56 = fpext float %88 to double, !dbg !9923
  %div57 = fdiv double %fneg55, %conv56, !dbg !9924
  store double %div57, double* %zyd, align 8, !dbg !9925
  %89 = load i32, i32* %my2, align 4, !dbg !9926
  %conv58 = sitofp i32 %89 to double, !dbg !9927
  %90 = load double, double* %zyd, align 8, !dbg !9928
  %mul59 = fmul double %conv58, %90, !dbg !9929
  %91 = load float, float* %xx1, align 4, !dbg !9930
  %conv60 = fpext float %91 to double, !dbg !9931
  %add61 = fadd double %mul59, %conv60, !dbg !9932
  store double %add61, double* %zy0, align 8, !dbg !9933
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9934
  %rectx62 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 0, !dbg !9935
  %93 = load i32, i32* %rectx62, align 8, !dbg !9935
  store i32 %93, i32* %rectx, align 4, !dbg !9936
  %94 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9937
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %94, i32 0, i32 16, !dbg !9938
  %95 = load i32*, i32** %rectz, align 8, !dbg !9938
  %96 = load i32, i32* %rectx, align 4, !dbg !9939
  %97 = load i32, i32* %my2, align 4, !dbg !9940
  %mul63 = mul nsw i32 %96, %97, !dbg !9941
  %idx.ext = sext i32 %mul63 to i64, !dbg !9942
  %add.ptr = getelementptr inbounds i32, i32* %95, i64 %idx.ext, !dbg !9942
  store i32* %add.ptr, i32** %rectzofs, align 8, !dbg !9943
  %98 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9944
  %rectz1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %98, i32 0, i32 18, !dbg !9946
  %99 = load i32*, i32** %rectz1, align 8, !dbg !9946
  %tobool64 = icmp ne i32* %99, null, !dbg !9944
  br i1 %tobool64, label %if.then65, label %if.end70, !dbg !9947

if.then65:                                        ; preds = %if.end45
  %100 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9948
  %rectz166 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %100, i32 0, i32 18, !dbg !9949
  %101 = load i32*, i32** %rectz166, align 8, !dbg !9949
  %102 = load i32, i32* %rectx, align 4, !dbg !9950
  %103 = load i32, i32* %my2, align 4, !dbg !9951
  %mul67 = mul nsw i32 %102, %103, !dbg !9952
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !9953
  %add.ptr69 = getelementptr inbounds i32, i32* %101, i64 %idx.ext68, !dbg !9953
  store i32* %add.ptr69, i32** %rectzofs1, align 8, !dbg !9954
  br label %if.end70, !dbg !9955

if.end70:                                         ; preds = %if.then65, %if.end45
  %104 = load i32, i32* %my0, align 4, !dbg !9956
  %105 = load i32, i32* %my2, align 4, !dbg !9957
  %add71 = add nsw i32 %104, %105, !dbg !9958
  %div72 = sdiv i32 %add71, 2, !dbg !9959
  store i32 %div72, i32* %sn1, align 4, !dbg !9960
  %106 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9961
  %span173 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %106, i32 0, i32 10, !dbg !9963
  %107 = load float*, float** %span173, align 8, !dbg !9963
  %108 = load i32, i32* %sn1, align 4, !dbg !9964
  %idxprom = sext i32 %108 to i64, !dbg !9961
  %arrayidx74 = getelementptr inbounds float, float* %107, i64 %idxprom, !dbg !9961
  %109 = load float, float* %arrayidx74, align 4, !dbg !9961
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9965
  %span275 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 11, !dbg !9966
  %111 = load float*, float** %span275, align 8, !dbg !9966
  %112 = load i32, i32* %sn1, align 4, !dbg !9967
  %idxprom76 = sext i32 %112 to i64, !dbg !9965
  %arrayidx77 = getelementptr inbounds float, float* %111, i64 %idxprom76, !dbg !9965
  %113 = load float, float* %arrayidx77, align 4, !dbg !9965
  %cmp78 = fcmp olt float %109, %113, !dbg !9968
  br i1 %cmp78, label %if.then80, label %if.else87, !dbg !9969

if.then80:                                        ; preds = %if.end70
  %114 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9970
  %span181 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %114, i32 0, i32 10, !dbg !9972
  %115 = load float*, float** %span181, align 8, !dbg !9972
  %116 = load i32, i32* %my2, align 4, !dbg !9973
  %idx.ext82 = sext i32 %116 to i64, !dbg !9974
  %add.ptr83 = getelementptr inbounds float, float* %115, i64 %idx.ext82, !dbg !9974
  store float* %add.ptr83, float** %span1, align 8, !dbg !9975
  %117 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9976
  %span284 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %117, i32 0, i32 11, !dbg !9977
  %118 = load float*, float** %span284, align 8, !dbg !9977
  %119 = load i32, i32* %my2, align 4, !dbg !9978
  %idx.ext85 = sext i32 %119 to i64, !dbg !9979
  %add.ptr86 = getelementptr inbounds float, float* %118, i64 %idx.ext85, !dbg !9979
  store float* %add.ptr86, float** %span2, align 8, !dbg !9980
  br label %if.end94, !dbg !9981

if.else87:                                        ; preds = %if.end70
  %120 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9982
  %span288 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %120, i32 0, i32 11, !dbg !9984
  %121 = load float*, float** %span288, align 8, !dbg !9984
  %122 = load i32, i32* %my2, align 4, !dbg !9985
  %idx.ext89 = sext i32 %122 to i64, !dbg !9986
  %add.ptr90 = getelementptr inbounds float, float* %121, i64 %idx.ext89, !dbg !9986
  store float* %add.ptr90, float** %span1, align 8, !dbg !9987
  %123 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !9988
  %span191 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %123, i32 0, i32 10, !dbg !9989
  %124 = load float*, float** %span191, align 8, !dbg !9989
  %125 = load i32, i32* %my2, align 4, !dbg !9990
  %idx.ext92 = sext i32 %125 to i64, !dbg !9991
  %add.ptr93 = getelementptr inbounds float, float* %124, i64 %idx.ext92, !dbg !9991
  store float* %add.ptr93, float** %span2, align 8, !dbg !9992
  br label %if.end94

if.end94:                                         ; preds = %if.else87, %if.then80
  %126 = load i32, i32* %my2, align 4, !dbg !9993
  store i32 %126, i32* %y, align 4, !dbg !9995
  br label %for.cond, !dbg !9996

for.cond:                                         ; preds = %for.inc, %if.end94
  %127 = load i32, i32* %y, align 4, !dbg !9997
  %128 = load i32, i32* %my0, align 4, !dbg !9999
  %cmp95 = icmp sge i32 %127, %128, !dbg !10000
  br i1 %cmp95, label %for.body, label %for.end, !dbg !10001

for.body:                                         ; preds = %for.cond
  %129 = load float*, float** %span1, align 8, !dbg !10002
  %130 = load float, float* %129, align 4, !dbg !10004
  %conv97 = fpext float %130 to double, !dbg !10004
  %131 = call double @llvm.floor.f64(double %conv97), !dbg !10005
  %conv98 = fptosi double %131 to i32, !dbg !10005
  store i32 %conv98, i32* %sn1, align 4, !dbg !10006
  %132 = load float*, float** %span2, align 8, !dbg !10007
  %133 = load float, float* %132, align 4, !dbg !10008
  %conv99 = fpext float %133 to double, !dbg !10008
  %134 = call double @llvm.floor.f64(double %conv99), !dbg !10009
  %conv100 = fptosi double %134 to i32, !dbg !10009
  store i32 %conv100, i32* %sn2, align 4, !dbg !10010
  %135 = load i32, i32* %sn1, align 4, !dbg !10011
  %inc = add nsw i32 %135, 1, !dbg !10011
  store i32 %inc, i32* %sn1, align 4, !dbg !10011
  %136 = load i32, i32* %sn2, align 4, !dbg !10012
  %137 = load i32, i32* %rectx, align 4, !dbg !10014
  %cmp101 = icmp sge i32 %136, %137, !dbg !10015
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !10016

if.then103:                                       ; preds = %for.body
  %138 = load i32, i32* %rectx, align 4, !dbg !10017
  %sub104 = sub nsw i32 %138, 1, !dbg !10018
  store i32 %sub104, i32* %sn2, align 4, !dbg !10019
  br label %if.end105, !dbg !10020

if.end105:                                        ; preds = %if.then103, %for.body
  %139 = load i32, i32* %sn1, align 4, !dbg !10021
  %cmp106 = icmp slt i32 %139, 0, !dbg !10023
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !10024

if.then108:                                       ; preds = %if.end105
  store i32 0, i32* %sn1, align 4, !dbg !10025
  br label %if.end109, !dbg !10026

if.end109:                                        ; preds = %if.then108, %if.end105
  %140 = load i32, i32* %sn2, align 4, !dbg !10027
  %141 = load i32, i32* %sn1, align 4, !dbg !10029
  %cmp110 = icmp sge i32 %140, %141, !dbg !10030
  br i1 %cmp110, label %if.then112, label %if.end147, !dbg !10031

if.then112:                                       ; preds = %if.end109
  %142 = load i32, i32* %sn1, align 4, !dbg !10032
  %conv113 = sitofp i32 %142 to double, !dbg !10034
  %143 = load double, double* %zxd, align 8, !dbg !10035
  %mul114 = fmul double %conv113, %143, !dbg !10036
  %144 = load double, double* %zy0, align 8, !dbg !10037
  %add115 = fadd double %mul114, %144, !dbg !10038
  store double %add115, double* %zverg, align 8, !dbg !10039
  %145 = load i32*, i32** %rectzofs, align 8, !dbg !10040
  %146 = load i32, i32* %sn1, align 4, !dbg !10041
  %idx.ext116 = sext i32 %146 to i64, !dbg !10042
  %add.ptr117 = getelementptr inbounds i32, i32* %145, i64 %idx.ext116, !dbg !10042
  store i32* %add.ptr117, i32** %rz, align 8, !dbg !10043
  %147 = load i32*, i32** %rectzofs1, align 8, !dbg !10044
  %148 = load i32, i32* %sn1, align 4, !dbg !10045
  %idx.ext118 = sext i32 %148 to i64, !dbg !10046
  %add.ptr119 = getelementptr inbounds i32, i32* %147, i64 %idx.ext118, !dbg !10046
  store i32* %add.ptr119, i32** %rz1, align 8, !dbg !10047
  %149 = load i32, i32* %sn2, align 4, !dbg !10048
  %150 = load i32, i32* %sn1, align 4, !dbg !10049
  %sub120 = sub nsw i32 %149, %150, !dbg !10050
  store i32 %sub120, i32* %x, align 4, !dbg !10051
  br label %while.cond, !dbg !10052

while.cond:                                       ; preds = %if.end144, %if.then112
  %151 = load i32, i32* %x, align 4, !dbg !10053
  %cmp121 = icmp sge i32 %151, 0, !dbg !10054
  br i1 %cmp121, label %while.body, label %while.end, !dbg !10052

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %zvergi, metadata !10055, metadata !DIExpression()), !dbg !10057
  %152 = load double, double* %zverg, align 8, !dbg !10058
  %cmp123 = fcmp olt double %152, 0xC1E0000000000000, !dbg !10058
  br i1 %cmp123, label %cond.true, label %cond.false, !dbg !10058

cond.true:                                        ; preds = %while.body
  br label %cond.end129, !dbg !10058

cond.false:                                       ; preds = %while.body
  %153 = load double, double* %zverg, align 8, !dbg !10058
  %cmp125 = fcmp ogt double %153, 0x41DFFFFFFFC00000, !dbg !10058
  br i1 %cmp125, label %cond.true127, label %cond.false128, !dbg !10058

cond.true127:                                     ; preds = %cond.false
  br label %cond.end, !dbg !10058

cond.false128:                                    ; preds = %cond.false
  %154 = load double, double* %zverg, align 8, !dbg !10058
  br label %cond.end, !dbg !10058

cond.end:                                         ; preds = %cond.false128, %cond.true127
  %cond = phi double [ 0x41DFFFFFFFC00000, %cond.true127 ], [ %154, %cond.false128 ], !dbg !10058
  br label %cond.end129, !dbg !10058

cond.end129:                                      ; preds = %cond.end, %cond.true
  %cond130 = phi double [ 0xC1E0000000000000, %cond.true ], [ %cond, %cond.end ], !dbg !10058
  %conv131 = fptosi double %cond130 to i32, !dbg !10059
  store i32 %conv131, i32* %zvergi, align 4, !dbg !10057
  %155 = load i32, i32* %zvergi, align 4, !dbg !10060
  %156 = load i32*, i32** %rz, align 8, !dbg !10062
  %157 = load i32, i32* %156, align 4, !dbg !10063
  %cmp132 = icmp slt i32 %155, %157, !dbg !10064
  br i1 %cmp132, label %if.then134, label %if.else138, !dbg !10065

if.then134:                                       ; preds = %cond.end129
  %158 = load i32*, i32** %rectzofs1, align 8, !dbg !10066
  %tobool135 = icmp ne i32* %158, null, !dbg !10066
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !10069

if.then136:                                       ; preds = %if.then134
  %159 = load i32*, i32** %rz, align 8, !dbg !10070
  %160 = load i32, i32* %159, align 4, !dbg !10071
  %161 = load i32*, i32** %rz1, align 8, !dbg !10072
  store i32 %160, i32* %161, align 4, !dbg !10073
  br label %if.end137, !dbg !10074

if.end137:                                        ; preds = %if.then136, %if.then134
  %162 = load i32, i32* %zvergi, align 4, !dbg !10075
  %163 = load i32*, i32** %rz, align 8, !dbg !10076
  store i32 %162, i32* %163, align 4, !dbg !10077
  br label %if.end144, !dbg !10078

if.else138:                                       ; preds = %cond.end129
  %164 = load i32*, i32** %rectzofs1, align 8, !dbg !10079
  %tobool139 = icmp ne i32* %164, null, !dbg !10079
  br i1 %tobool139, label %land.lhs.true, label %if.end143, !dbg !10081

land.lhs.true:                                    ; preds = %if.else138
  %165 = load i32, i32* %zvergi, align 4, !dbg !10082
  %166 = load i32*, i32** %rz1, align 8, !dbg !10083
  %167 = load i32, i32* %166, align 4, !dbg !10084
  %cmp140 = icmp slt i32 %165, %167, !dbg !10085
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !10086

if.then142:                                       ; preds = %land.lhs.true
  %168 = load i32, i32* %zvergi, align 4, !dbg !10087
  %169 = load i32*, i32** %rz1, align 8, !dbg !10088
  store i32 %168, i32* %169, align 4, !dbg !10089
  br label %if.end143, !dbg !10090

if.end143:                                        ; preds = %if.then142, %land.lhs.true, %if.else138
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end137
  %170 = load double, double* %zxd, align 8, !dbg !10091
  %171 = load double, double* %zverg, align 8, !dbg !10092
  %add145 = fadd double %171, %170, !dbg !10092
  store double %add145, double* %zverg, align 8, !dbg !10092
  %172 = load i32*, i32** %rz, align 8, !dbg !10093
  %incdec.ptr = getelementptr inbounds i32, i32* %172, i32 1, !dbg !10093
  store i32* %incdec.ptr, i32** %rz, align 8, !dbg !10093
  %173 = load i32*, i32** %rz1, align 8, !dbg !10094
  %incdec.ptr146 = getelementptr inbounds i32, i32* %173, i32 1, !dbg !10094
  store i32* %incdec.ptr146, i32** %rz1, align 8, !dbg !10094
  %174 = load i32, i32* %x, align 4, !dbg !10095
  %dec = add nsw i32 %174, -1, !dbg !10095
  store i32 %dec, i32* %x, align 4, !dbg !10095
  br label %while.cond, !dbg !10052, !llvm.loop !10096

while.end:                                        ; preds = %while.cond
  br label %if.end147, !dbg !10098

if.end147:                                        ; preds = %while.end, %if.end109
  %175 = load double, double* %zyd, align 8, !dbg !10099
  %176 = load double, double* %zy0, align 8, !dbg !10100
  %sub148 = fsub double %176, %175, !dbg !10100
  store double %sub148, double* %zy0, align 8, !dbg !10100
  %177 = load i32, i32* %rectx, align 4, !dbg !10101
  %178 = load i32*, i32** %rectzofs, align 8, !dbg !10102
  %idx.ext149 = sext i32 %177 to i64, !dbg !10102
  %idx.neg = sub i64 0, %idx.ext149, !dbg !10102
  %add.ptr150 = getelementptr inbounds i32, i32* %178, i64 %idx.neg, !dbg !10102
  store i32* %add.ptr150, i32** %rectzofs, align 8, !dbg !10102
  %179 = load i32*, i32** %rectzofs1, align 8, !dbg !10103
  %tobool151 = icmp ne i32* %179, null, !dbg !10103
  br i1 %tobool151, label %if.then152, label %if.end156, !dbg !10105

if.then152:                                       ; preds = %if.end147
  %180 = load i32, i32* %rectx, align 4, !dbg !10106
  %181 = load i32*, i32** %rectzofs1, align 8, !dbg !10107
  %idx.ext153 = sext i32 %180 to i64, !dbg !10107
  %idx.neg154 = sub i64 0, %idx.ext153, !dbg !10107
  %add.ptr155 = getelementptr inbounds i32, i32* %181, i64 %idx.neg154, !dbg !10107
  store i32* %add.ptr155, i32** %rectzofs1, align 8, !dbg !10107
  br label %if.end156, !dbg !10108

if.end156:                                        ; preds = %if.then152, %if.end147
  br label %for.inc, !dbg !10109

for.inc:                                          ; preds = %if.end156
  %182 = load i32, i32* %y, align 4, !dbg !10110
  %dec157 = add nsw i32 %182, -1, !dbg !10110
  store i32 %dec157, i32* %y, align 4, !dbg !10110
  %183 = load float*, float** %span1, align 8, !dbg !10111
  %incdec.ptr158 = getelementptr inbounds float, float* %183, i32 -1, !dbg !10111
  store float* %incdec.ptr158, float** %span1, align 8, !dbg !10111
  %184 = load float*, float** %span2, align 8, !dbg !10112
  %incdec.ptr159 = getelementptr inbounds float, float* %184, i32 -1, !dbg !10112
  store float* %incdec.ptr159, float** %span2, align 8, !dbg !10112
  br label %for.cond, !dbg !10113, !llvm.loop !10114

for.end:                                          ; preds = %if.then2, %if.then17, %if.then44, %for.cond
  ret void, !dbg !10116
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @zbuf_shadow_project(%struct.ZbufProjectCache* %cache, i32 %index, [4 x float]* %winmat, float* %co, float* %ho) #0 !dbg !10117 {
entry:
  %retval = alloca i32, align 4
  %cache.addr = alloca %struct.ZbufProjectCache*, align 8
  %index.addr = alloca i32, align 4
  %winmat.addr = alloca [4 x float]*, align 8
  %co.addr = alloca float*, align 8
  %ho.addr = alloca float*, align 8
  %cindex = alloca i32, align 4
  %clipflag = alloca i32, align 4
  store %struct.ZbufProjectCache* %cache, %struct.ZbufProjectCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZbufProjectCache** %cache.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10122, metadata !DIExpression()), !dbg !10123
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !10124, metadata !DIExpression()), !dbg !10125
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.declare(metadata i32* %cindex, metadata !10130, metadata !DIExpression()), !dbg !10131
  %0 = load i32, i32* %index.addr, align 4, !dbg !10132
  %and = and i32 %0, 255, !dbg !10133
  store i32 %and, i32* %cindex, align 4, !dbg !10131
  %1 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10134
  %2 = load i32, i32* %cindex, align 4, !dbg !10136
  %idxprom = sext i32 %2 to i64, !dbg !10134
  %arrayidx = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %1, i64 %idxprom, !dbg !10134
  %index1 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx, i32 0, i32 0, !dbg !10137
  %3 = load i32, i32* %index1, align 4, !dbg !10137
  %4 = load i32, i32* %index.addr, align 4, !dbg !10138
  %cmp = icmp eq i32 %3, %4, !dbg !10139
  br i1 %cmp, label %if.then, label %if.else, !dbg !10140

if.then:                                          ; preds = %entry
  %5 = load float*, float** %ho.addr, align 8, !dbg !10141
  %6 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10143
  %7 = load i32, i32* %cindex, align 4, !dbg !10144
  %idxprom2 = sext i32 %7 to i64, !dbg !10143
  %arrayidx3 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %6, i64 %idxprom2, !dbg !10143
  %ho4 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx3, i32 0, i32 2, !dbg !10145
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !10143
  call void @copy_v4_v4(float* %5, float* %arraydecay), !dbg !10146
  %8 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10147
  %9 = load i32, i32* %cindex, align 4, !dbg !10148
  %idxprom5 = sext i32 %9 to i64, !dbg !10147
  %arrayidx6 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %8, i64 %idxprom5, !dbg !10147
  %clip = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx6, i32 0, i32 1, !dbg !10149
  %10 = load i32, i32* %clip, align 4, !dbg !10149
  store i32 %10, i32* %retval, align 4, !dbg !10150
  br label %return, !dbg !10150

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %clipflag, metadata !10151, metadata !DIExpression()), !dbg !10153
  %11 = load float*, float** %co.addr, align 8, !dbg !10154
  %12 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !10155
  %13 = load float*, float** %ho.addr, align 8, !dbg !10156
  call void @projectvert(float* %11, [4 x float]* %12, float* %13), !dbg !10157
  %14 = load float*, float** %ho.addr, align 8, !dbg !10158
  %call = call i32 @testclip(float* %14), !dbg !10159
  store i32 %call, i32* %clipflag, align 4, !dbg !10160
  %15 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10161
  %16 = load i32, i32* %cindex, align 4, !dbg !10162
  %idxprom7 = sext i32 %16 to i64, !dbg !10161
  %arrayidx8 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %15, i64 %idxprom7, !dbg !10161
  %ho9 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx8, i32 0, i32 2, !dbg !10163
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %ho9, i64 0, i64 0, !dbg !10161
  %17 = load float*, float** %ho.addr, align 8, !dbg !10164
  call void @copy_v4_v4(float* %arraydecay10, float* %17), !dbg !10165
  %18 = load i32, i32* %clipflag, align 4, !dbg !10166
  %19 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10167
  %20 = load i32, i32* %cindex, align 4, !dbg !10168
  %idxprom11 = sext i32 %20 to i64, !dbg !10167
  %arrayidx12 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %19, i64 %idxprom11, !dbg !10167
  %clip13 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx12, i32 0, i32 1, !dbg !10169
  store i32 %18, i32* %clip13, align 4, !dbg !10170
  %21 = load i32, i32* %index.addr, align 4, !dbg !10171
  %22 = load %struct.ZbufProjectCache*, %struct.ZbufProjectCache** %cache.addr, align 8, !dbg !10172
  %23 = load i32, i32* %cindex, align 4, !dbg !10173
  %idxprom14 = sext i32 %23 to i64, !dbg !10172
  %arrayidx15 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %22, i64 %idxprom14, !dbg !10172
  %index16 = getelementptr inbounds %struct.ZbufProjectCache, %struct.ZbufProjectCache* %arrayidx15, i32 0, i32 0, !dbg !10174
  store i32 %21, i32* %index16, align 4, !dbg !10175
  %24 = load i32, i32* %clipflag, align 4, !dbg !10176
  store i32 %24, i32* %retval, align 4, !dbg !10177
  br label %return, !dbg !10177

return:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !10178
  ret i32 %25, !dbg !10178
}

declare dso_local %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen*, i32) #3

declare dso_local void @render_strand_segment(%struct.Render*, [4 x float]*, %struct.StrandPart*, %struct.ZSpan*, i32, %struct.StrandSegment*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuffer_sss(%struct.RenderPart* %pa, i32 %lay, i8* %handle, void (i8*, i32, i32, i32, i32, i32)* %func) #0 !dbg !10179 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %lay.addr = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %func.addr = alloca void (i8*, i32, i32, i32, i32, i32)*, align 8
  %cache = alloca [256 x %struct.ZbufProjectCache], align 16
  %zspan = alloca %struct.ZSpan, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %sss_ma = alloca %struct.Material*, align 8
  %obwinmat = alloca [4 x [4 x float]], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %bounds = alloca [4 x float], align 16
  %ho1 = alloca [4 x float], align 16
  %ho2 = alloca [4 x float], align 16
  %ho3 = alloca [4 x float], align 16
  %ho4 = alloca [4 x float], align 16
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %zvlnr = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %nofill = alloca i16, align 2
  %env = alloca i16, align 2
  %wire = alloca i16, align 2
  %partclip = alloca i16, align 2
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !10182, metadata !DIExpression()), !dbg !10183
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !10186, metadata !DIExpression()), !dbg !10187
  store void (i8*, i32, i32, i32, i32, i32)* %func, void (i8*, i32, i32, i32, i32, i32)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, i32, i32, i32)** %func.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.declare(metadata [256 x %struct.ZbufProjectCache]* %cache, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata %struct.ZSpan* %zspan, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !10199
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !10202, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !10204, metadata !DIExpression()), !dbg !10205
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !10206, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !10208, metadata !DIExpression()), !dbg !10209
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !10209
  call void @llvm.dbg.declare(metadata %struct.Material** %sss_ma, metadata !10210, metadata !DIExpression()), !dbg !10211
  %0 = load %struct.Material*, %struct.Material** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 76), align 8, !dbg !10212
  store %struct.Material* %0, %struct.Material** %sss_ma, align 8, !dbg !10211
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obwinmat, metadata !10213, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !10215, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.declare(metadata [4 x float]* %bounds, metadata !10217, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.declare(metadata [4 x float]* %ho1, metadata !10219, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.declare(metadata [4 x float]* %ho2, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.declare(metadata [4 x float]* %ho3, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata [4 x float]* %ho4, metadata !10225, metadata !DIExpression()), !dbg !10226
  %1 = bitcast [4 x float]* %ho4 to i8*, !dbg !10226
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 16, i1 false), !dbg !10226
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10227, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.declare(metadata i32* %v, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %zvlnr, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata i32* %c3, metadata !10237, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !10239, metadata !DIExpression()), !dbg !10240
  store i32 0, i32* %c4, align 4, !dbg !10240
  call void @llvm.dbg.declare(metadata i16* %nofill, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i16 0, i16* %nofill, align 2, !dbg !10242
  call void @llvm.dbg.declare(metadata i16* %env, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i16 0, i16* %env, align 2, !dbg !10244
  call void @llvm.dbg.declare(metadata i16* %wire, metadata !10245, metadata !DIExpression()), !dbg !10246
  store i16 0, i16* %wire, align 2, !dbg !10246
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !10247
  call void @zbuf_make_winmat(%struct.Render* @R, [4 x float]* %arraydecay), !dbg !10248
  %2 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !10249
  %3 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !10250
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10251
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10252
  call void @zbuffer_part_bounds(i32 %2, i32 %3, %struct.RenderPart* %4, float* %arraydecay1), !dbg !10253
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10254
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 14, !dbg !10255
  %6 = load i32, i32* %rectx, align 8, !dbg !10255
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10256
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 15, !dbg !10257
  %8 = load i32, i32* %recty, align 4, !dbg !10257
  %9 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 19), align 4, !dbg !10258
  call void @zbuf_alloc_span(%struct.ZSpan* %zspan, i32 %6, i32 %8, float %9), !dbg !10259
  %10 = load i8*, i8** %handle.addr, align 8, !dbg !10260
  %sss_handle = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 32, !dbg !10261
  store i8* %10, i8** %sss_handle, align 8, !dbg !10262
  %11 = load void (i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32)** %func.addr, align 8, !dbg !10263
  %sss_func = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 33, !dbg !10264
  store void (i8*, i32, i32, i32, i32, i32)* %11, void (i8*, i32, i32, i32, i32, i32)** %sss_func, align 8, !dbg !10265
  %12 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !10266
  %conv = sitofp i32 %12 to float, !dbg !10267
  %div = fdiv float %conv, 2.000000e+00, !dbg !10268
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 12, !dbg !10269
  store float %div, float* %zmulx, align 8, !dbg !10270
  %13 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !10271
  %conv2 = sitofp i32 %13 to float, !dbg !10272
  %div3 = fdiv float %conv2, 2.000000e+00, !dbg !10273
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 13, !dbg !10274
  store float %div3, float* %zmuly, align 4, !dbg !10275
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10276
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 13, !dbg !10277
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !10278
  %15 = load i32, i32* %xmin, align 8, !dbg !10278
  %sub = sub nsw i32 0, %15, !dbg !10279
  %conv4 = sitofp i32 %sub to float, !dbg !10279
  %sub5 = fsub float %conv4, 5.000000e-01, !dbg !10280
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 14, !dbg !10281
  store float %sub5, float* %zofsx, align 8, !dbg !10282
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10283
  %disprect6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 13, !dbg !10284
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect6, i32 0, i32 2, !dbg !10285
  %17 = load i32, i32* %ymin, align 8, !dbg !10285
  %sub7 = sub nsw i32 0, %17, !dbg !10286
  %conv8 = sitofp i32 %sub7 to float, !dbg !10286
  %sub9 = fsub float %conv8, 5.000000e-01, !dbg !10287
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 15, !dbg !10288
  store float %sub9, float* %zofsy, align 4, !dbg !10289
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 34, !dbg !10290
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffill_sss, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !10291
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10292
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 6, !dbg !10294
  %19 = load i32*, i32** %rectz, align 8, !dbg !10294
  %tobool = icmp ne i32* %19, null, !dbg !10292
  br i1 %tobool, label %if.then, label %if.end, !dbg !10295

if.then:                                          ; preds = %entry
  %20 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10296
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %20, i32 0, i32 4, !dbg !10298
  %21 = load i32*, i32** %recto, align 8, !dbg !10298
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10299
  %rectx10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %22, i32 0, i32 14, !dbg !10300
  %23 = load i32, i32* %rectx10, align 8, !dbg !10300
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10301
  %recty11 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 15, !dbg !10302
  %25 = load i32, i32* %recty11, align 4, !dbg !10302
  call void @fillrect(i32* %21, i32 %23, i32 %25, i32 0), !dbg !10303
  %26 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10304
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %26, i32 0, i32 5, !dbg !10305
  %27 = load i32*, i32** %rectp, align 8, !dbg !10305
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10306
  %rectx12 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %28, i32 0, i32 14, !dbg !10307
  %29 = load i32, i32* %rectx12, align 8, !dbg !10307
  %30 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10308
  %recty13 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %30, i32 0, i32 15, !dbg !10309
  %31 = load i32, i32* %recty13, align 4, !dbg !10309
  call void @fillrect(i32* %27, i32 %29, i32 %31, i32 0), !dbg !10310
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10311
  %rectz14 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 6, !dbg !10312
  %33 = load i32*, i32** %rectz14, align 8, !dbg !10312
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10313
  %rectx15 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 14, !dbg !10314
  %35 = load i32, i32* %rectx15, align 8, !dbg !10314
  %36 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10315
  %recty16 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %36, i32 0, i32 15, !dbg !10316
  %37 = load i32, i32* %recty16, align 4, !dbg !10316
  call void @fillrect(i32* %33, i32 %35, i32 %37, i32 2147483647), !dbg !10317
  br label %if.end, !dbg !10318

if.end:                                           ; preds = %if.then, %entry
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10319
  %rectbackz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %38, i32 0, i32 11, !dbg !10321
  %39 = load i32*, i32** %rectbackz, align 8, !dbg !10321
  %tobool17 = icmp ne i32* %39, null, !dbg !10319
  br i1 %tobool17, label %if.then18, label %if.end26, !dbg !10322

if.then18:                                        ; preds = %if.end
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10323
  %rectbacko = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %40, i32 0, i32 9, !dbg !10325
  %41 = load i32*, i32** %rectbacko, align 8, !dbg !10325
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10326
  %rectx19 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 14, !dbg !10327
  %43 = load i32, i32* %rectx19, align 8, !dbg !10327
  %44 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10328
  %recty20 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %44, i32 0, i32 15, !dbg !10329
  %45 = load i32, i32* %recty20, align 4, !dbg !10329
  call void @fillrect(i32* %41, i32 %43, i32 %45, i32 0), !dbg !10330
  %46 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10331
  %rectbackp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %46, i32 0, i32 10, !dbg !10332
  %47 = load i32*, i32** %rectbackp, align 8, !dbg !10332
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10333
  %rectx21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %48, i32 0, i32 14, !dbg !10334
  %49 = load i32, i32* %rectx21, align 8, !dbg !10334
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10335
  %recty22 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 15, !dbg !10336
  %51 = load i32, i32* %recty22, align 4, !dbg !10336
  call void @fillrect(i32* %47, i32 %49, i32 %51, i32 0), !dbg !10337
  %52 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10338
  %rectbackz23 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %52, i32 0, i32 11, !dbg !10339
  %53 = load i32*, i32** %rectbackz23, align 8, !dbg !10339
  %54 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10340
  %rectx24 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %54, i32 0, i32 14, !dbg !10341
  %55 = load i32, i32* %rectx24, align 8, !dbg !10341
  %56 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !10342
  %recty25 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %56, i32 0, i32 15, !dbg !10343
  %57 = load i32, i32* %recty25, align 4, !dbg !10343
  call void @fillrect(i32* %53, i32 %55, i32 %57, i32 -2147483647), !dbg !10344
  br label %if.end26, !dbg !10345

if.end26:                                         ; preds = %if.then18, %if.end
  store i32 0, i32* %i, align 4, !dbg !10346
  %58 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 70, i32 0), align 8, !dbg !10348
  %59 = bitcast i8* %58 to %struct.ObjectInstanceRen*, !dbg !10349
  store %struct.ObjectInstanceRen* %59, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10350
  br label %for.cond, !dbg !10351

for.cond:                                         ; preds = %for.inc164, %if.end26
  %60 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10352
  %tobool27 = icmp ne %struct.ObjectInstanceRen* %60, null, !dbg !10354
  br i1 %tobool27, label %for.body, label %for.end166, !dbg !10354

for.body:                                         ; preds = %for.cond
  %61 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10355
  %obr28 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %61, i32 0, i32 2, !dbg !10357
  %62 = load %struct.ObjectRen*, %struct.ObjectRen** %obr28, align 8, !dbg !10357
  store %struct.ObjectRen* %62, %struct.ObjectRen** %obr, align 8, !dbg !10358
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10359
  %lay29 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %63, i32 0, i32 7, !dbg !10361
  %64 = load i32, i32* %lay29, align 8, !dbg !10361
  %65 = load i32, i32* %lay.addr, align 4, !dbg !10362
  %and = and i32 %64, %65, !dbg !10363
  %tobool30 = icmp ne i32 %and, 0, !dbg !10363
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !10364

if.then31:                                        ; preds = %for.body
  br label %for.inc164, !dbg !10365

if.end32:                                         ; preds = %for.body
  %66 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10366
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %66, i32 0, i32 11, !dbg !10368
  %67 = load i16, i16* %flag, align 8, !dbg !10368
  %conv33 = sext i16 %67 to i32, !dbg !10366
  %and34 = and i32 %conv33, 3, !dbg !10369
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10369
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !10370

if.then36:                                        ; preds = %if.end32
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10371
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !10372
  %68 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10373
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %68, i32 0, i32 8, !dbg !10374
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10373
  call void @mul_m4_m4m4([4 x float]* %arraydecay37, [4 x float]* %arraydecay38, [4 x float]* %arraydecay39), !dbg !10375
  br label %if.end42, !dbg !10375

if.else:                                          ; preds = %if.end32
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10376
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !10377
  call void @copy_m4_m4([4 x float]* %arraydecay40, [4 x float]* %arraydecay41), !dbg !10378
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then36
  %69 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10379
  %obr43 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %69, i32 0, i32 2, !dbg !10381
  %70 = load %struct.ObjectRen*, %struct.ObjectRen** %obr43, align 8, !dbg !10381
  %boundbox = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %70, i32 0, i32 9, !dbg !10382
  %arraydecay44 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox, i64 0, i64 0, !dbg !10379
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10383
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10384
  %call = call i32 @clip_render_object([3 x float]* %arraydecay44, float* %arraydecay45, [4 x float]* %arraydecay46), !dbg !10385
  %tobool47 = icmp ne i32 %call, 0, !dbg !10385
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !10386

if.then48:                                        ; preds = %if.end42
  br label %for.inc164, !dbg !10387

if.end49:                                         ; preds = %if.end42
  %arraydecay50 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !10388
  %71 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10389
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %71, i32 0, i32 10, !dbg !10390
  %72 = load i32, i32* %totvert, align 8, !dbg !10390
  call void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %arraydecay50, i32 %72), !dbg !10391
  store i32 0, i32* %v, align 4, !dbg !10392
  br label %for.cond51, !dbg !10394

for.cond51:                                       ; preds = %for.inc, %if.end49
  %73 = load i32, i32* %v, align 4, !dbg !10395
  %74 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10397
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %74, i32 0, i32 11, !dbg !10398
  %75 = load i32, i32* %totvlak, align 4, !dbg !10398
  %cmp = icmp slt i32 %73, %75, !dbg !10399
  br i1 %cmp, label %for.body53, label %for.end, !dbg !10400

for.body53:                                       ; preds = %for.cond51
  %76 = load i32, i32* %v, align 4, !dbg !10401
  %and54 = and i32 %76, 255, !dbg !10404
  %cmp55 = icmp eq i32 %and54, 0, !dbg !10405
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !10406

if.then57:                                        ; preds = %for.body53
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10407
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %77, i32 0, i32 19, !dbg !10408
  %78 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !10408
  %79 = load i32, i32* %v, align 4, !dbg !10409
  %shr = ashr i32 %79, 8, !dbg !10410
  %idxprom = sext i32 %shr to i64, !dbg !10407
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %78, i64 %idxprom, !dbg !10407
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !10411
  %80 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !10411
  store %struct.VlakRen* %80, %struct.VlakRen** %vlr, align 8, !dbg !10412
  br label %if.end59, !dbg !10413

if.else58:                                        ; preds = %for.body53
  %81 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10414
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %81, i32 1, !dbg !10414
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !10414
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10415
  %mat60 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %82, i32 0, i32 5, !dbg !10417
  %83 = load %struct.Material*, %struct.Material** %mat60, align 8, !dbg !10417
  %84 = load %struct.Material*, %struct.Material** %sss_ma, align 8, !dbg !10418
  %call61 = call zeroext i8 @material_in_material(%struct.Material* %83, %struct.Material* %84), !dbg !10419
  %tobool62 = icmp ne i8 %call61, 0, !dbg !10419
  br i1 %tobool62, label %if.then63, label %if.end163, !dbg !10420

if.then63:                                        ; preds = %if.end59
  %85 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10421
  %lay64 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %85, i32 0, i32 7, !dbg !10424
  %86 = load i32, i32* %lay64, align 8, !dbg !10424
  %87 = load i32, i32* %lay.addr, align 4, !dbg !10425
  %and65 = and i32 %86, %87, !dbg !10426
  %tobool66 = icmp ne i32 %and65, 0, !dbg !10426
  br i1 %tobool66, label %if.then67, label %if.else83, !dbg !10427

if.then67:                                        ; preds = %if.then63
  %88 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10428
  %mat68 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %88, i32 0, i32 5, !dbg !10431
  %89 = load %struct.Material*, %struct.Material** %mat68, align 8, !dbg !10431
  %90 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10432
  %cmp69 = icmp ne %struct.Material* %89, %90, !dbg !10433
  br i1 %cmp69, label %if.then71, label %if.end82, !dbg !10434

if.then71:                                        ; preds = %if.then67
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10435
  %mat72 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %91, i32 0, i32 5, !dbg !10437
  %92 = load %struct.Material*, %struct.Material** %mat72, align 8, !dbg !10437
  store %struct.Material* %92, %struct.Material** %ma, align 8, !dbg !10438
  %93 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10439
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %93, i32 0, i32 51, !dbg !10440
  %94 = load i32, i32* %mode, align 4, !dbg !10440
  %and73 = and i32 %94, 8192, !dbg !10441
  %conv74 = trunc i32 %and73 to i16, !dbg !10439
  store i16 %conv74, i16* %nofill, align 2, !dbg !10442
  %95 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10443
  %mode75 = getelementptr inbounds %struct.Material, %struct.Material* %95, i32 0, i32 51, !dbg !10444
  %96 = load i32, i32* %mode75, align 4, !dbg !10444
  %and76 = and i32 %96, 512, !dbg !10445
  %conv77 = trunc i32 %and76 to i16, !dbg !10446
  store i16 %conv77, i16* %env, align 2, !dbg !10447
  %97 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10448
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %97, i32 0, i32 2, !dbg !10449
  %98 = load i16, i16* %material_type, align 8, !dbg !10449
  %conv78 = sext i16 %98 to i32, !dbg !10448
  %cmp79 = icmp eq i32 %conv78, 3, !dbg !10450
  %conv80 = zext i1 %cmp79 to i32, !dbg !10450
  %conv81 = trunc i32 %conv80 to i16, !dbg !10451
  store i16 %conv81, i16* %wire, align 2, !dbg !10452
  br label %if.end82, !dbg !10453

if.end82:                                         ; preds = %if.then71, %if.then67
  br label %if.end84, !dbg !10454

if.else83:                                        ; preds = %if.then63
  store i16 1, i16* %nofill, align 2, !dbg !10455
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !10457
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.end82
  %99 = load i16, i16* %nofill, align 2, !dbg !10458
  %conv85 = sext i16 %99 to i32, !dbg !10458
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !10460
  br i1 %cmp86, label %land.lhs.true, label %if.end162, !dbg !10461

land.lhs.true:                                    ; preds = %if.end84
  %100 = load i16, i16* %wire, align 2, !dbg !10462
  %conv88 = sext i16 %100 to i32, !dbg !10462
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !10463
  br i1 %cmp89, label %land.lhs.true91, label %if.end162, !dbg !10464

land.lhs.true91:                                  ; preds = %land.lhs.true
  %101 = load i16, i16* %env, align 2, !dbg !10465
  %conv92 = sext i16 %101 to i32, !dbg !10465
  %cmp93 = icmp eq i32 %conv92, 0, !dbg !10466
  br i1 %cmp93, label %if.then95, label %if.end162, !dbg !10467

if.then95:                                        ; preds = %land.lhs.true91
  call void @llvm.dbg.declare(metadata i16* %partclip, metadata !10468, metadata !DIExpression()), !dbg !10470
  %102 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10471
  %v196 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %102, i32 0, i32 0, !dbg !10472
  %103 = load %struct.VertRen*, %struct.VertRen** %v196, align 8, !dbg !10472
  store %struct.VertRen* %103, %struct.VertRen** %v1, align 8, !dbg !10473
  %104 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10474
  %v297 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %104, i32 0, i32 1, !dbg !10475
  %105 = load %struct.VertRen*, %struct.VertRen** %v297, align 8, !dbg !10475
  store %struct.VertRen* %105, %struct.VertRen** %v2, align 8, !dbg !10476
  %106 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10477
  %v398 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %106, i32 0, i32 2, !dbg !10478
  %107 = load %struct.VertRen*, %struct.VertRen** %v398, align 8, !dbg !10478
  store %struct.VertRen* %107, %struct.VertRen** %v3, align 8, !dbg !10479
  %108 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !10480
  %v499 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %108, i32 0, i32 3, !dbg !10481
  %109 = load %struct.VertRen*, %struct.VertRen** %v499, align 8, !dbg !10481
  store %struct.VertRen* %109, %struct.VertRen** %v4, align 8, !dbg !10482
  %arraydecay100 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !10483
  %110 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !10484
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %110, i32 0, i32 5, !dbg !10485
  %111 = load i32, i32* %index, align 8, !dbg !10485
  %arraydecay101 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10486
  %arraydecay102 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10487
  %112 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !10488
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %112, i32 0, i32 0, !dbg !10489
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10488
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !10490
  %call105 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay100, i32 %111, [4 x float]* %arraydecay101, float* %arraydecay102, float* %arraydecay103, float* %arraydecay104), !dbg !10491
  store i32 %call105, i32* %c1, align 4, !dbg !10492
  %arraydecay106 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !10493
  %113 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !10494
  %index107 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %113, i32 0, i32 5, !dbg !10495
  %114 = load i32, i32* %index107, align 8, !dbg !10495
  %arraydecay108 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10496
  %arraydecay109 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10497
  %115 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !10498
  %co110 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %115, i32 0, i32 0, !dbg !10499
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %co110, i64 0, i64 0, !dbg !10498
  %arraydecay112 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !10500
  %call113 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay106, i32 %114, [4 x float]* %arraydecay108, float* %arraydecay109, float* %arraydecay111, float* %arraydecay112), !dbg !10501
  store i32 %call113, i32* %c2, align 4, !dbg !10502
  %arraydecay114 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !10503
  %116 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !10504
  %index115 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %116, i32 0, i32 5, !dbg !10505
  %117 = load i32, i32* %index115, align 8, !dbg !10505
  %arraydecay116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10506
  %arraydecay117 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10507
  %118 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !10508
  %co118 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %118, i32 0, i32 0, !dbg !10509
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !10508
  %arraydecay120 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !10510
  %call121 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay114, i32 %117, [4 x float]* %arraydecay116, float* %arraydecay117, float* %arraydecay119, float* %arraydecay120), !dbg !10511
  store i32 %call121, i32* %c3, align 4, !dbg !10512
  %119 = load i32, i32* %c1, align 4, !dbg !10513
  %120 = load i32, i32* %c2, align 4, !dbg !10514
  %and122 = and i32 %119, %120, !dbg !10515
  %121 = load i32, i32* %c3, align 4, !dbg !10516
  %and123 = and i32 %and122, %121, !dbg !10517
  %conv124 = trunc i32 %and123 to i16, !dbg !10513
  store i16 %conv124, i16* %partclip, align 2, !dbg !10518
  %122 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !10519
  %tobool125 = icmp ne %struct.VertRen* %122, null, !dbg !10519
  br i1 %tobool125, label %if.then126, label %if.end138, !dbg !10521

if.then126:                                       ; preds = %if.then95
  %arraydecay127 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !10522
  %123 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !10524
  %index128 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %123, i32 0, i32 5, !dbg !10525
  %124 = load i32, i32* %index128, align 8, !dbg !10525
  %arraydecay129 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !10526
  %arraydecay130 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !10527
  %125 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !10528
  %co131 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %125, i32 0, i32 0, !dbg !10529
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %co131, i64 0, i64 0, !dbg !10528
  %arraydecay133 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !10530
  %call134 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay127, i32 %124, [4 x float]* %arraydecay129, float* %arraydecay130, float* %arraydecay132, float* %arraydecay133), !dbg !10531
  store i32 %call134, i32* %c4, align 4, !dbg !10532
  %126 = load i32, i32* %c4, align 4, !dbg !10533
  %127 = load i16, i16* %partclip, align 2, !dbg !10534
  %conv135 = zext i16 %127 to i32, !dbg !10534
  %and136 = and i32 %conv135, %126, !dbg !10534
  %conv137 = trunc i32 %and136 to i16, !dbg !10534
  store i16 %conv137, i16* %partclip, align 2, !dbg !10534
  br label %if.end138, !dbg !10535

if.end138:                                        ; preds = %if.then126, %if.then95
  %128 = load i16, i16* %partclip, align 2, !dbg !10536
  %conv139 = zext i16 %128 to i32, !dbg !10536
  %cmp140 = icmp eq i32 %conv139, 0, !dbg !10538
  br i1 %cmp140, label %if.then142, label %if.end161, !dbg !10539

if.then142:                                       ; preds = %if.end138
  %arraydecay143 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !10540
  %call144 = call i32 @testclip(float* %arraydecay143), !dbg !10542
  store i32 %call144, i32* %c1, align 4, !dbg !10543
  %arraydecay145 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !10544
  %call146 = call i32 @testclip(float* %arraydecay145), !dbg !10545
  store i32 %call146, i32* %c2, align 4, !dbg !10546
  %arraydecay147 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !10547
  %call148 = call i32 @testclip(float* %arraydecay147), !dbg !10548
  store i32 %call148, i32* %c3, align 4, !dbg !10549
  %129 = load i32, i32* %v, align 4, !dbg !10550
  %add = add nsw i32 %129, 1, !dbg !10551
  store i32 %add, i32* %zvlnr, align 4, !dbg !10552
  %130 = load i32, i32* %i, align 4, !dbg !10553
  %131 = load i32, i32* %zvlnr, align 4, !dbg !10554
  %arraydecay149 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !10555
  %arraydecay150 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !10556
  %arraydecay151 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !10557
  %132 = load i32, i32* %c1, align 4, !dbg !10558
  %133 = load i32, i32* %c2, align 4, !dbg !10559
  %134 = load i32, i32* %c3, align 4, !dbg !10560
  call void @zbufclip(%struct.ZSpan* %zspan, i32 %130, i32 %131, float* %arraydecay149, float* %arraydecay150, float* %arraydecay151, i32 %132, i32 %133, i32 %134), !dbg !10561
  %135 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !10562
  %tobool152 = icmp ne %struct.VertRen* %135, null, !dbg !10562
  br i1 %tobool152, label %if.then153, label %if.end160, !dbg !10564

if.then153:                                       ; preds = %if.then142
  %arraydecay154 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !10565
  %call155 = call i32 @testclip(float* %arraydecay154), !dbg !10567
  store i32 %call155, i32* %c4, align 4, !dbg !10568
  %136 = load i32, i32* %i, align 4, !dbg !10569
  %137 = load i32, i32* %zvlnr, align 4, !dbg !10570
  %add156 = add nsw i32 %137, 134217728, !dbg !10571
  %arraydecay157 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !10572
  %arraydecay158 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !10573
  %arraydecay159 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !10574
  %138 = load i32, i32* %c1, align 4, !dbg !10575
  %139 = load i32, i32* %c3, align 4, !dbg !10576
  %140 = load i32, i32* %c4, align 4, !dbg !10577
  call void @zbufclip(%struct.ZSpan* %zspan, i32 %136, i32 %add156, float* %arraydecay157, float* %arraydecay158, float* %arraydecay159, i32 %138, i32 %139, i32 %140), !dbg !10578
  br label %if.end160, !dbg !10579

if.end160:                                        ; preds = %if.then153, %if.then142
  br label %if.end161, !dbg !10580

if.end161:                                        ; preds = %if.end160, %if.end138
  br label %if.end162, !dbg !10581

if.end162:                                        ; preds = %if.end161, %land.lhs.true91, %land.lhs.true, %if.end84
  br label %if.end163, !dbg !10582

if.end163:                                        ; preds = %if.end162, %if.end59
  br label %for.inc, !dbg !10583

for.inc:                                          ; preds = %if.end163
  %141 = load i32, i32* %v, align 4, !dbg !10584
  %inc = add nsw i32 %141, 1, !dbg !10584
  store i32 %inc, i32* %v, align 4, !dbg !10584
  br label %for.cond51, !dbg !10585, !llvm.loop !10586

for.end:                                          ; preds = %for.cond51
  br label %for.inc164, !dbg !10588

for.inc164:                                       ; preds = %for.end, %if.then48, %if.then31
  %142 = load i32, i32* %i, align 4, !dbg !10589
  %inc165 = add nsw i32 %142, 1, !dbg !10589
  store i32 %inc165, i32* %i, align 4, !dbg !10589
  %143 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10590
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %143, i32 0, i32 0, !dbg !10591
  %144 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !10591
  store %struct.ObjectInstanceRen* %144, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10592
  br label %for.cond, !dbg !10593, !llvm.loop !10594

for.end166:                                       ; preds = %for.cond
  call void @zbuf_free_span(%struct.ZSpan* %zspan), !dbg !10596
  ret void, !dbg !10597
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffill_sss(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !10598 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %z = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z0 = alloca float, align 4
  %z1 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !10601, metadata !DIExpression()), !dbg !10602
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !10603, metadata !DIExpression()), !dbg !10604
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !10613, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !10617, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.declare(metadata double* %z, metadata !10619, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.declare(metadata float* %x0, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata float* %y0, metadata !10623, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.declare(metadata float* %x1, metadata !10625, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.declare(metadata float* %y1, metadata !10627, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.declare(metadata float* %x2, metadata !10629, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.declare(metadata float* %y2, metadata !10631, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.declare(metadata float* %z0, metadata !10633, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.declare(metadata float* %z1, metadata !10635, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.declare(metadata float* %z2, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !10639, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.declare(metadata float** %span1, metadata !10641, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.declare(metadata float** %span2, metadata !10643, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10647, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !10649, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !10653, metadata !DIExpression()), !dbg !10654
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10655
  %rectx1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %0, i32 0, i32 0, !dbg !10656
  %1 = load i32, i32* %rectx1, align 8, !dbg !10656
  store i32 %1, i32* %rectx, align 4, !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !10659, metadata !DIExpression()), !dbg !10660
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10661
  call void @zbuf_init_span(%struct.ZSpan* %2), !dbg !10662
  %3 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10663
  %4 = load float*, float** %v1.addr, align 8, !dbg !10664
  %5 = load float*, float** %v2.addr, align 8, !dbg !10665
  call void @zbuf_add_to_span(%struct.ZSpan* %3, float* %4, float* %5), !dbg !10666
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10667
  %7 = load float*, float** %v2.addr, align 8, !dbg !10668
  %8 = load float*, float** %v3.addr, align 8, !dbg !10669
  call void @zbuf_add_to_span(%struct.ZSpan* %6, float* %7, float* %8), !dbg !10670
  %9 = load float*, float** %v4.addr, align 8, !dbg !10671
  %tobool = icmp ne float* %9, null, !dbg !10671
  br i1 %tobool, label %if.then, label %if.else, !dbg !10673

if.then:                                          ; preds = %entry
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10674
  %11 = load float*, float** %v3.addr, align 8, !dbg !10676
  %12 = load float*, float** %v4.addr, align 8, !dbg !10677
  call void @zbuf_add_to_span(%struct.ZSpan* %10, float* %11, float* %12), !dbg !10678
  %13 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10679
  %14 = load float*, float** %v4.addr, align 8, !dbg !10680
  %15 = load float*, float** %v1.addr, align 8, !dbg !10681
  call void @zbuf_add_to_span(%struct.ZSpan* %13, float* %14, float* %15), !dbg !10682
  br label %if.end, !dbg !10683

if.else:                                          ; preds = %entry
  %16 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10684
  %17 = load float*, float** %v3.addr, align 8, !dbg !10685
  %18 = load float*, float** %v1.addr, align 8, !dbg !10686
  call void @zbuf_add_to_span(%struct.ZSpan* %16, float* %17, float* %18), !dbg !10687
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10688
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 8, !dbg !10690
  %20 = load float*, float** %minp2, align 8, !dbg !10690
  %cmp = icmp eq float* %20, null, !dbg !10691
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !10692

lor.lhs.false:                                    ; preds = %if.end
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10693
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 9, !dbg !10694
  %22 = load float*, float** %maxp2, align 8, !dbg !10694
  %cmp2 = icmp eq float* %22, null, !dbg !10695
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10696

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end113, !dbg !10697

if.end4:                                          ; preds = %lor.lhs.false
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10698
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 2, !dbg !10700
  %24 = load i32, i32* %miny1, align 8, !dbg !10700
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10701
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 4, !dbg !10702
  %26 = load i32, i32* %miny2, align 8, !dbg !10702
  %cmp5 = icmp slt i32 %24, %26, !dbg !10703
  br i1 %cmp5, label %if.then6, label %if.else8, !dbg !10704

if.then6:                                         ; preds = %if.end4
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10705
  %miny27 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 4, !dbg !10706
  %28 = load i32, i32* %miny27, align 8, !dbg !10706
  store i32 %28, i32* %my0, align 4, !dbg !10707
  br label %if.end10, !dbg !10708

if.else8:                                         ; preds = %if.end4
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10709
  %miny19 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 2, !dbg !10710
  %30 = load i32, i32* %miny19, align 8, !dbg !10710
  store i32 %30, i32* %my0, align 4, !dbg !10711
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then6
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10712
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 3, !dbg !10714
  %32 = load i32, i32* %maxy1, align 4, !dbg !10714
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10715
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 5, !dbg !10716
  %34 = load i32, i32* %maxy2, align 4, !dbg !10716
  %cmp11 = icmp sgt i32 %32, %34, !dbg !10717
  br i1 %cmp11, label %if.then12, label %if.else14, !dbg !10718

if.then12:                                        ; preds = %if.end10
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10719
  %maxy213 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %35, i32 0, i32 5, !dbg !10720
  %36 = load i32, i32* %maxy213, align 4, !dbg !10720
  store i32 %36, i32* %my2, align 4, !dbg !10721
  br label %if.end16, !dbg !10722

if.else14:                                        ; preds = %if.end10
  %37 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10723
  %maxy115 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %37, i32 0, i32 3, !dbg !10724
  %38 = load i32, i32* %maxy115, align 4, !dbg !10724
  store i32 %38, i32* %my2, align 4, !dbg !10725
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  %39 = load i32, i32* %my2, align 4, !dbg !10726
  %40 = load i32, i32* %my0, align 4, !dbg !10728
  %cmp17 = icmp slt i32 %39, %40, !dbg !10729
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10730

if.then18:                                        ; preds = %if.end16
  br label %for.end113, !dbg !10731

if.end19:                                         ; preds = %if.end16
  %41 = load float*, float** %v1.addr, align 8, !dbg !10732
  %arrayidx = getelementptr inbounds float, float* %41, i64 0, !dbg !10732
  %42 = load float, float* %arrayidx, align 4, !dbg !10732
  %43 = load float*, float** %v2.addr, align 8, !dbg !10733
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !10733
  %44 = load float, float* %arrayidx20, align 4, !dbg !10733
  %sub = fsub float %42, %44, !dbg !10734
  store float %sub, float* %x1, align 4, !dbg !10735
  %45 = load float*, float** %v2.addr, align 8, !dbg !10736
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 0, !dbg !10736
  %46 = load float, float* %arrayidx21, align 4, !dbg !10736
  %47 = load float*, float** %v3.addr, align 8, !dbg !10737
  %arrayidx22 = getelementptr inbounds float, float* %47, i64 0, !dbg !10737
  %48 = load float, float* %arrayidx22, align 4, !dbg !10737
  %sub23 = fsub float %46, %48, !dbg !10738
  store float %sub23, float* %x2, align 4, !dbg !10739
  %49 = load float*, float** %v1.addr, align 8, !dbg !10740
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !10740
  %50 = load float, float* %arrayidx24, align 4, !dbg !10740
  %51 = load float*, float** %v2.addr, align 8, !dbg !10741
  %arrayidx25 = getelementptr inbounds float, float* %51, i64 1, !dbg !10741
  %52 = load float, float* %arrayidx25, align 4, !dbg !10741
  %sub26 = fsub float %50, %52, !dbg !10742
  store float %sub26, float* %y1, align 4, !dbg !10743
  %53 = load float*, float** %v2.addr, align 8, !dbg !10744
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 1, !dbg !10744
  %54 = load float, float* %arrayidx27, align 4, !dbg !10744
  %55 = load float*, float** %v3.addr, align 8, !dbg !10745
  %arrayidx28 = getelementptr inbounds float, float* %55, i64 1, !dbg !10745
  %56 = load float, float* %arrayidx28, align 4, !dbg !10745
  %sub29 = fsub float %54, %56, !dbg !10746
  store float %sub29, float* %y2, align 4, !dbg !10747
  %57 = load float*, float** %v1.addr, align 8, !dbg !10748
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !10748
  %58 = load float, float* %arrayidx30, align 4, !dbg !10748
  %59 = load float*, float** %v2.addr, align 8, !dbg !10749
  %arrayidx31 = getelementptr inbounds float, float* %59, i64 2, !dbg !10749
  %60 = load float, float* %arrayidx31, align 4, !dbg !10749
  %sub32 = fsub float %58, %60, !dbg !10750
  store float %sub32, float* %z1, align 4, !dbg !10751
  %61 = load float*, float** %v2.addr, align 8, !dbg !10752
  %arrayidx33 = getelementptr inbounds float, float* %61, i64 2, !dbg !10752
  %62 = load float, float* %arrayidx33, align 4, !dbg !10752
  %63 = load float*, float** %v3.addr, align 8, !dbg !10753
  %arrayidx34 = getelementptr inbounds float, float* %63, i64 2, !dbg !10753
  %64 = load float, float* %arrayidx34, align 4, !dbg !10753
  %sub35 = fsub float %62, %64, !dbg !10754
  store float %sub35, float* %z2, align 4, !dbg !10755
  %65 = load float, float* %y1, align 4, !dbg !10756
  %66 = load float, float* %z2, align 4, !dbg !10757
  %mul = fmul float %65, %66, !dbg !10758
  %67 = load float, float* %z1, align 4, !dbg !10759
  %68 = load float, float* %y2, align 4, !dbg !10760
  %mul36 = fmul float %67, %68, !dbg !10761
  %sub37 = fsub float %mul, %mul36, !dbg !10762
  store float %sub37, float* %x0, align 4, !dbg !10763
  %69 = load float, float* %z1, align 4, !dbg !10764
  %70 = load float, float* %x2, align 4, !dbg !10765
  %mul38 = fmul float %69, %70, !dbg !10766
  %71 = load float, float* %x1, align 4, !dbg !10767
  %72 = load float, float* %z2, align 4, !dbg !10768
  %mul39 = fmul float %71, %72, !dbg !10769
  %sub40 = fsub float %mul38, %mul39, !dbg !10770
  store float %sub40, float* %y0, align 4, !dbg !10771
  %73 = load float, float* %x1, align 4, !dbg !10772
  %74 = load float, float* %y2, align 4, !dbg !10773
  %mul41 = fmul float %73, %74, !dbg !10774
  %75 = load float, float* %y1, align 4, !dbg !10775
  %76 = load float, float* %x2, align 4, !dbg !10776
  %mul42 = fmul float %75, %76, !dbg !10777
  %sub43 = fsub float %mul41, %mul42, !dbg !10778
  store float %sub43, float* %z0, align 4, !dbg !10779
  %77 = load float, float* %z0, align 4, !dbg !10780
  %cmp44 = fcmp oeq float %77, 0.000000e+00, !dbg !10782
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !10783

if.then45:                                        ; preds = %if.end19
  br label %for.end113, !dbg !10784

if.end46:                                         ; preds = %if.end19
  %78 = load float, float* %x0, align 4, !dbg !10785
  %79 = load float*, float** %v1.addr, align 8, !dbg !10786
  %arrayidx47 = getelementptr inbounds float, float* %79, i64 0, !dbg !10786
  %80 = load float, float* %arrayidx47, align 4, !dbg !10786
  %mul48 = fmul float %78, %80, !dbg !10787
  %81 = load float, float* %y0, align 4, !dbg !10788
  %82 = load float*, float** %v1.addr, align 8, !dbg !10789
  %arrayidx49 = getelementptr inbounds float, float* %82, i64 1, !dbg !10789
  %83 = load float, float* %arrayidx49, align 4, !dbg !10789
  %mul50 = fmul float %81, %83, !dbg !10790
  %add = fadd float %mul48, %mul50, !dbg !10791
  %84 = load float, float* %z0, align 4, !dbg !10792
  %div = fdiv float %add, %84, !dbg !10793
  %85 = load float*, float** %v1.addr, align 8, !dbg !10794
  %arrayidx51 = getelementptr inbounds float, float* %85, i64 2, !dbg !10794
  %86 = load float, float* %arrayidx51, align 4, !dbg !10794
  %add52 = fadd float %div, %86, !dbg !10795
  store float %add52, float* %xx1, align 4, !dbg !10796
  %87 = load float, float* %x0, align 4, !dbg !10797
  %conv = fpext float %87 to double, !dbg !10798
  %fneg = fneg double %conv, !dbg !10799
  %88 = load float, float* %z0, align 4, !dbg !10800
  %conv53 = fpext float %88 to double, !dbg !10801
  %div54 = fdiv double %fneg, %conv53, !dbg !10802
  store double %div54, double* %zxd, align 8, !dbg !10803
  %89 = load float, float* %y0, align 4, !dbg !10804
  %conv55 = fpext float %89 to double, !dbg !10805
  %fneg56 = fneg double %conv55, !dbg !10806
  %90 = load float, float* %z0, align 4, !dbg !10807
  %conv57 = fpext float %90 to double, !dbg !10808
  %div58 = fdiv double %fneg56, %conv57, !dbg !10809
  store double %div58, double* %zyd, align 8, !dbg !10810
  %91 = load i32, i32* %my2, align 4, !dbg !10811
  %conv59 = sitofp i32 %91 to double, !dbg !10812
  %92 = load double, double* %zyd, align 8, !dbg !10813
  %mul60 = fmul double %conv59, %92, !dbg !10814
  %93 = load float, float* %xx1, align 4, !dbg !10815
  %conv61 = fpext float %93 to double, !dbg !10816
  %add62 = fadd double %mul60, %conv61, !dbg !10817
  store double %add62, double* %zy0, align 8, !dbg !10818
  %94 = load i32, i32* %my0, align 4, !dbg !10819
  %95 = load i32, i32* %my2, align 4, !dbg !10820
  %add63 = add nsw i32 %94, %95, !dbg !10821
  %div64 = sdiv i32 %add63, 2, !dbg !10822
  store i32 %div64, i32* %sn1, align 4, !dbg !10823
  %96 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10824
  %span165 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %96, i32 0, i32 10, !dbg !10826
  %97 = load float*, float** %span165, align 8, !dbg !10826
  %98 = load i32, i32* %sn1, align 4, !dbg !10827
  %idxprom = sext i32 %98 to i64, !dbg !10824
  %arrayidx66 = getelementptr inbounds float, float* %97, i64 %idxprom, !dbg !10824
  %99 = load float, float* %arrayidx66, align 4, !dbg !10824
  %100 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10828
  %span267 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %100, i32 0, i32 11, !dbg !10829
  %101 = load float*, float** %span267, align 8, !dbg !10829
  %102 = load i32, i32* %sn1, align 4, !dbg !10830
  %idxprom68 = sext i32 %102 to i64, !dbg !10828
  %arrayidx69 = getelementptr inbounds float, float* %101, i64 %idxprom68, !dbg !10828
  %103 = load float, float* %arrayidx69, align 4, !dbg !10828
  %cmp70 = fcmp olt float %99, %103, !dbg !10831
  br i1 %cmp70, label %if.then72, label %if.else77, !dbg !10832

if.then72:                                        ; preds = %if.end46
  %104 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10833
  %span173 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %104, i32 0, i32 10, !dbg !10835
  %105 = load float*, float** %span173, align 8, !dbg !10835
  %106 = load i32, i32* %my2, align 4, !dbg !10836
  %idx.ext = sext i32 %106 to i64, !dbg !10837
  %add.ptr = getelementptr inbounds float, float* %105, i64 %idx.ext, !dbg !10837
  store float* %add.ptr, float** %span1, align 8, !dbg !10838
  %107 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10839
  %span274 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %107, i32 0, i32 11, !dbg !10840
  %108 = load float*, float** %span274, align 8, !dbg !10840
  %109 = load i32, i32* %my2, align 4, !dbg !10841
  %idx.ext75 = sext i32 %109 to i64, !dbg !10842
  %add.ptr76 = getelementptr inbounds float, float* %108, i64 %idx.ext75, !dbg !10842
  store float* %add.ptr76, float** %span2, align 8, !dbg !10843
  br label %if.end84, !dbg !10844

if.else77:                                        ; preds = %if.end46
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10845
  %span278 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 11, !dbg !10847
  %111 = load float*, float** %span278, align 8, !dbg !10847
  %112 = load i32, i32* %my2, align 4, !dbg !10848
  %idx.ext79 = sext i32 %112 to i64, !dbg !10849
  %add.ptr80 = getelementptr inbounds float, float* %111, i64 %idx.ext79, !dbg !10849
  store float* %add.ptr80, float** %span1, align 8, !dbg !10850
  %113 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10851
  %span181 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %113, i32 0, i32 10, !dbg !10852
  %114 = load float*, float** %span181, align 8, !dbg !10852
  %115 = load i32, i32* %my2, align 4, !dbg !10853
  %idx.ext82 = sext i32 %115 to i64, !dbg !10854
  %add.ptr83 = getelementptr inbounds float, float* %114, i64 %idx.ext82, !dbg !10854
  store float* %add.ptr83, float** %span2, align 8, !dbg !10855
  br label %if.end84

if.end84:                                         ; preds = %if.else77, %if.then72
  %116 = load i32, i32* %my2, align 4, !dbg !10856
  store i32 %116, i32* %y, align 4, !dbg !10858
  br label %for.cond, !dbg !10859

for.cond:                                         ; preds = %for.inc111, %if.end84
  %117 = load i32, i32* %y, align 4, !dbg !10860
  %118 = load i32, i32* %my0, align 4, !dbg !10862
  %cmp85 = icmp sge i32 %117, %118, !dbg !10863
  br i1 %cmp85, label %for.body, label %for.end113, !dbg !10864

for.body:                                         ; preds = %for.cond
  %119 = load float*, float** %span1, align 8, !dbg !10865
  %120 = load float, float* %119, align 4, !dbg !10867
  %conv87 = fpext float %120 to double, !dbg !10867
  %121 = call double @llvm.floor.f64(double %conv87), !dbg !10868
  %conv88 = fptosi double %121 to i32, !dbg !10868
  store i32 %conv88, i32* %sn1, align 4, !dbg !10869
  %122 = load float*, float** %span2, align 8, !dbg !10870
  %123 = load float, float* %122, align 4, !dbg !10871
  %conv89 = fpext float %123 to double, !dbg !10871
  %124 = call double @llvm.floor.f64(double %conv89), !dbg !10872
  %conv90 = fptosi double %124 to i32, !dbg !10872
  store i32 %conv90, i32* %sn2, align 4, !dbg !10873
  %125 = load i32, i32* %sn1, align 4, !dbg !10874
  %inc = add nsw i32 %125, 1, !dbg !10874
  store i32 %inc, i32* %sn1, align 4, !dbg !10874
  %126 = load i32, i32* %sn2, align 4, !dbg !10875
  %127 = load i32, i32* %rectx, align 4, !dbg !10877
  %cmp91 = icmp sge i32 %126, %127, !dbg !10878
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !10879

if.then93:                                        ; preds = %for.body
  %128 = load i32, i32* %rectx, align 4, !dbg !10880
  %sub94 = sub nsw i32 %128, 1, !dbg !10881
  store i32 %sub94, i32* %sn2, align 4, !dbg !10882
  br label %if.end95, !dbg !10883

if.end95:                                         ; preds = %if.then93, %for.body
  %129 = load i32, i32* %sn1, align 4, !dbg !10884
  %cmp96 = icmp slt i32 %129, 0, !dbg !10886
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10887

if.then98:                                        ; preds = %if.end95
  store i32 0, i32* %sn1, align 4, !dbg !10888
  br label %if.end99, !dbg !10889

if.end99:                                         ; preds = %if.then98, %if.end95
  %130 = load i32, i32* %sn1, align 4, !dbg !10890
  %conv100 = sitofp i32 %130 to double, !dbg !10891
  %131 = load double, double* %zxd, align 8, !dbg !10892
  %mul101 = fmul double %conv100, %131, !dbg !10893
  %132 = load double, double* %zy0, align 8, !dbg !10894
  %add102 = fadd double %mul101, %132, !dbg !10895
  store double %add102, double* %z, align 8, !dbg !10896
  %133 = load i32, i32* %sn1, align 4, !dbg !10897
  store i32 %133, i32* %x, align 4, !dbg !10899
  br label %for.cond103, !dbg !10900

for.cond103:                                      ; preds = %for.inc, %if.end99
  %134 = load i32, i32* %x, align 4, !dbg !10901
  %135 = load i32, i32* %sn2, align 4, !dbg !10903
  %cmp104 = icmp sle i32 %134, %135, !dbg !10904
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !10905

for.body106:                                      ; preds = %for.cond103
  %136 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10906
  %sss_func = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %136, i32 0, i32 33, !dbg !10907
  %137 = load void (i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32)** %sss_func, align 8, !dbg !10907
  %138 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !10908
  %sss_handle = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %138, i32 0, i32 32, !dbg !10909
  %139 = load i8*, i8** %sss_handle, align 8, !dbg !10909
  %140 = load i32, i32* %obi.addr, align 4, !dbg !10910
  %141 = load i32, i32* %zvlnr.addr, align 4, !dbg !10911
  %142 = load i32, i32* %x, align 4, !dbg !10912
  %143 = load i32, i32* %y, align 4, !dbg !10913
  %144 = load double, double* %z, align 8, !dbg !10914
  %conv107 = fptosi double %144 to i32, !dbg !10914
  call void %137(i8* %139, i32 %140, i32 %141, i32 %142, i32 %143, i32 %conv107), !dbg !10906
  br label %for.inc, !dbg !10906

for.inc:                                          ; preds = %for.body106
  %145 = load i32, i32* %x, align 4, !dbg !10915
  %inc108 = add nsw i32 %145, 1, !dbg !10915
  store i32 %inc108, i32* %x, align 4, !dbg !10915
  %146 = load double, double* %zxd, align 8, !dbg !10916
  %147 = load double, double* %z, align 8, !dbg !10917
  %add109 = fadd double %147, %146, !dbg !10917
  store double %add109, double* %z, align 8, !dbg !10917
  br label %for.cond103, !dbg !10918, !llvm.loop !10919

for.end:                                          ; preds = %for.cond103
  %148 = load double, double* %zyd, align 8, !dbg !10921
  %149 = load double, double* %zy0, align 8, !dbg !10922
  %sub110 = fsub double %149, %148, !dbg !10922
  store double %sub110, double* %zy0, align 8, !dbg !10922
  br label %for.inc111, !dbg !10923

for.inc111:                                       ; preds = %for.end
  %150 = load i32, i32* %y, align 4, !dbg !10924
  %dec = add nsw i32 %150, -1, !dbg !10924
  store i32 %dec, i32* %y, align 4, !dbg !10924
  %151 = load float*, float** %span1, align 8, !dbg !10925
  %incdec.ptr = getelementptr inbounds float, float* %151, i32 -1, !dbg !10925
  store float* %incdec.ptr, float** %span1, align 8, !dbg !10925
  %152 = load float*, float** %span2, align 8, !dbg !10926
  %incdec.ptr112 = getelementptr inbounds float, float* %152, i32 -1, !dbg !10926
  store float* %incdec.ptr112, float** %span2, align 8, !dbg !10926
  br label %for.cond, !dbg !10927, !llvm.loop !10928

for.end113:                                       ; preds = %if.then3, %if.then18, %if.then45, %for.cond
  ret void, !dbg !10930
}

declare dso_local zeroext i8 @material_in_material(%struct.Material*, %struct.Material*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @antialias_tagbuf(i32 %xsize, i32 %ysize, i8* %rectmove) #0 !dbg !10931 {
entry:
  %xsize.addr = alloca i32, align 4
  %ysize.addr = alloca i32, align 4
  %rectmove.addr = alloca i8*, align 8
  %row1 = alloca i8*, align 8
  %row2 = alloca i8*, align 8
  %row3 = alloca i8*, align 8
  %prev = alloca i8, align 1
  %next = alloca i8, align 1
  %a = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %step = alloca i32, align 4
  %fac = alloca i32, align 4
  %mfac = alloca i32, align 4
  %fac144 = alloca i32, align 4
  %mfac145 = alloca i32, align 4
  store i32 %xsize, i32* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsize.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store i32 %ysize, i32* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ysize.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  store i8* %rectmove, i8** %rectmove.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rectmove.addr, metadata !10938, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.declare(metadata i8** %row1, metadata !10940, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.declare(metadata i8** %row2, metadata !10942, metadata !DIExpression()), !dbg !10943
  call void @llvm.dbg.declare(metadata i8** %row3, metadata !10944, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.declare(metadata i8* %prev, metadata !10946, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.declare(metadata i8* %next, metadata !10948, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10950, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10952, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10954, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.declare(metadata i32* %step, metadata !10956, metadata !DIExpression()), !dbg !10957
  store i32 2, i32* %y, align 4, !dbg !10958
  br label %for.cond, !dbg !10960

for.cond:                                         ; preds = %for.inc30, %entry
  %0 = load i32, i32* %y, align 4, !dbg !10961
  %1 = load i32, i32* %ysize.addr, align 4, !dbg !10963
  %cmp = icmp slt i32 %0, %1, !dbg !10964
  br i1 %cmp, label %for.body, label %for.end32, !dbg !10965

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %rectmove.addr, align 8, !dbg !10966
  %3 = load i32, i32* %y, align 4, !dbg !10968
  %sub = sub nsw i32 %3, 2, !dbg !10969
  %4 = load i32, i32* %xsize.addr, align 4, !dbg !10970
  %mul = mul nsw i32 %sub, %4, !dbg !10971
  %idx.ext = sext i32 %mul to i64, !dbg !10972
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !10972
  store i8* %add.ptr, i8** %row1, align 8, !dbg !10973
  %5 = load i8*, i8** %row1, align 8, !dbg !10974
  %6 = load i32, i32* %xsize.addr, align 4, !dbg !10975
  %idx.ext1 = sext i32 %6 to i64, !dbg !10976
  %add.ptr2 = getelementptr inbounds i8, i8* %5, i64 %idx.ext1, !dbg !10976
  store i8* %add.ptr2, i8** %row2, align 8, !dbg !10977
  %7 = load i8*, i8** %row2, align 8, !dbg !10978
  %8 = load i32, i32* %xsize.addr, align 4, !dbg !10979
  %idx.ext3 = sext i32 %8 to i64, !dbg !10980
  %add.ptr4 = getelementptr inbounds i8, i8* %7, i64 %idx.ext3, !dbg !10980
  store i8* %add.ptr4, i8** %row3, align 8, !dbg !10981
  store i32 2, i32* %x, align 4, !dbg !10982
  br label %for.cond5, !dbg !10984

for.cond5:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %x, align 4, !dbg !10985
  %10 = load i32, i32* %xsize.addr, align 4, !dbg !10987
  %cmp6 = icmp slt i32 %9, %10, !dbg !10988
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !10989

for.body7:                                        ; preds = %for.cond5
  %11 = load i8*, i8** %row2, align 8, !dbg !10990
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1, !dbg !10990
  %12 = load i8, i8* %arrayidx, align 1, !dbg !10990
  %tobool = icmp ne i8 %12, 0, !dbg !10990
  br i1 %tobool, label %if.then, label %if.end27, !dbg !10993

if.then:                                          ; preds = %for.body7
  %13 = load i8*, i8** %row2, align 8, !dbg !10994
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !10994
  %14 = load i8, i8* %arrayidx8, align 1, !dbg !10994
  %conv = zext i8 %14 to i32, !dbg !10994
  %cmp9 = icmp eq i32 %conv, 0, !dbg !10997
  br i1 %cmp9, label %if.then25, label %lor.lhs.false, !dbg !10998

lor.lhs.false:                                    ; preds = %if.then
  %15 = load i8*, i8** %row2, align 8, !dbg !10999
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 2, !dbg !10999
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !10999
  %conv12 = zext i8 %16 to i32, !dbg !10999
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !11000
  br i1 %cmp13, label %if.then25, label %lor.lhs.false15, !dbg !11001

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %17 = load i8*, i8** %row1, align 8, !dbg !11002
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !11002
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !11002
  %conv17 = zext i8 %18 to i32, !dbg !11002
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !11003
  br i1 %cmp18, label %if.then25, label %lor.lhs.false20, !dbg !11004

lor.lhs.false20:                                  ; preds = %lor.lhs.false15
  %19 = load i8*, i8** %row3, align 8, !dbg !11005
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !11005
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !11005
  %conv22 = zext i8 %20 to i32, !dbg !11005
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !11006
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !11007

if.then25:                                        ; preds = %lor.lhs.false20, %lor.lhs.false15, %lor.lhs.false, %if.then
  %21 = load i8*, i8** %row2, align 8, !dbg !11008
  %arrayidx26 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !11008
  store i8 -128, i8* %arrayidx26, align 1, !dbg !11009
  br label %if.end, !dbg !11008

if.end:                                           ; preds = %if.then25, %lor.lhs.false20
  br label %if.end27, !dbg !11010

if.end27:                                         ; preds = %if.end, %for.body7
  br label %for.inc, !dbg !11011

for.inc:                                          ; preds = %if.end27
  %22 = load i32, i32* %x, align 4, !dbg !11012
  %inc = add nsw i32 %22, 1, !dbg !11012
  store i32 %inc, i32* %x, align 4, !dbg !11012
  %23 = load i8*, i8** %row1, align 8, !dbg !11013
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11013
  store i8* %incdec.ptr, i8** %row1, align 8, !dbg !11013
  %24 = load i8*, i8** %row2, align 8, !dbg !11014
  %incdec.ptr28 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11014
  store i8* %incdec.ptr28, i8** %row2, align 8, !dbg !11014
  %25 = load i8*, i8** %row3, align 8, !dbg !11015
  %incdec.ptr29 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !11015
  store i8* %incdec.ptr29, i8** %row3, align 8, !dbg !11015
  br label %for.cond5, !dbg !11016, !llvm.loop !11017

for.end:                                          ; preds = %for.cond5
  br label %for.inc30, !dbg !11019

for.inc30:                                        ; preds = %for.end
  %26 = load i32, i32* %y, align 4, !dbg !11020
  %inc31 = add nsw i32 %26, 1, !dbg !11020
  store i32 %inc31, i32* %y, align 4, !dbg !11020
  br label %for.cond, !dbg !11021, !llvm.loop !11022

for.end32:                                        ; preds = %for.cond
  %27 = load i8*, i8** %rectmove.addr, align 8, !dbg !11024
  store i8* %27, i8** %row1, align 8, !dbg !11025
  store i32 0, i32* %y, align 4, !dbg !11026
  br label %for.cond33, !dbg !11028

for.cond33:                                       ; preds = %for.inc89, %for.end32
  %28 = load i32, i32* %y, align 4, !dbg !11029
  %29 = load i32, i32* %ysize.addr, align 4, !dbg !11031
  %cmp34 = icmp slt i32 %28, %29, !dbg !11032
  br i1 %cmp34, label %for.body36, label %for.end91, !dbg !11033

for.body36:                                       ; preds = %for.cond33
  %30 = load i8*, i8** %row1, align 8, !dbg !11034
  %incdec.ptr37 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !11034
  store i8* %incdec.ptr37, i8** %row1, align 8, !dbg !11034
  store i32 1, i32* %x, align 4, !dbg !11036
  br label %for.cond38, !dbg !11038

for.cond38:                                       ; preds = %for.inc85, %for.body36
  %31 = load i32, i32* %x, align 4, !dbg !11039
  %32 = load i32, i32* %xsize.addr, align 4, !dbg !11041
  %cmp39 = icmp slt i32 %31, %32, !dbg !11042
  br i1 %cmp39, label %for.body41, label %for.end88, !dbg !11043

for.body41:                                       ; preds = %for.cond38
  %33 = load i8*, i8** %row1, align 8, !dbg !11044
  %arrayidx42 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !11044
  %34 = load i8, i8* %arrayidx42, align 1, !dbg !11044
  %conv43 = zext i8 %34 to i32, !dbg !11044
  %cmp44 = icmp eq i32 %conv43, 128, !dbg !11047
  br i1 %cmp44, label %land.lhs.true, label %if.end84, !dbg !11048

land.lhs.true:                                    ; preds = %for.body41
  %35 = load i8*, i8** %row1, align 8, !dbg !11049
  %arrayidx46 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !11049
  %36 = load i8, i8* %arrayidx46, align 1, !dbg !11049
  %conv47 = zext i8 %36 to i32, !dbg !11049
  %cmp48 = icmp eq i32 %conv47, 128, !dbg !11050
  br i1 %cmp48, label %if.then50, label %if.end84, !dbg !11051

if.then50:                                        ; preds = %land.lhs.true
  %37 = load i8*, i8** %row1, align 8, !dbg !11052
  %arrayidx51 = getelementptr inbounds i8, i8* %37, i64 -1, !dbg !11052
  %38 = load i8, i8* %arrayidx51, align 1, !dbg !11052
  store i8 %38, i8* %prev, align 1, !dbg !11054
  store i32 1, i32* %step, align 4, !dbg !11055
  br label %while.cond, !dbg !11056

while.cond:                                       ; preds = %while.body, %if.then50
  %39 = load i32, i32* %x, align 4, !dbg !11057
  %40 = load i32, i32* %step, align 4, !dbg !11058
  %add = add nsw i32 %39, %40, !dbg !11059
  %41 = load i32, i32* %xsize.addr, align 4, !dbg !11060
  %cmp52 = icmp slt i32 %add, %41, !dbg !11061
  br i1 %cmp52, label %land.rhs, label %land.end, !dbg !11062

land.rhs:                                         ; preds = %while.cond
  %42 = load i8*, i8** %row1, align 8, !dbg !11063
  %43 = load i32, i32* %step, align 4, !dbg !11064
  %idxprom = sext i32 %43 to i64, !dbg !11063
  %arrayidx54 = getelementptr inbounds i8, i8* %42, i64 %idxprom, !dbg !11063
  %44 = load i8, i8* %arrayidx54, align 1, !dbg !11063
  %conv55 = zext i8 %44 to i32, !dbg !11063
  %cmp56 = icmp eq i32 %conv55, 128, !dbg !11065
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %45 = phi i1 [ false, %while.cond ], [ %cmp56, %land.rhs ], !dbg !11066
  br i1 %45, label %while.body, label %while.end, !dbg !11056

while.body:                                       ; preds = %land.end
  %46 = load i32, i32* %step, align 4, !dbg !11067
  %inc58 = add nsw i32 %46, 1, !dbg !11067
  store i32 %inc58, i32* %step, align 4, !dbg !11067
  br label %while.cond, !dbg !11056, !llvm.loop !11068

while.end:                                        ; preds = %land.end
  %47 = load i32, i32* %x, align 4, !dbg !11069
  %48 = load i32, i32* %step, align 4, !dbg !11071
  %add59 = add nsw i32 %47, %48, !dbg !11072
  %49 = load i32, i32* %xsize.addr, align 4, !dbg !11073
  %cmp60 = icmp ne i32 %add59, %49, !dbg !11074
  br i1 %cmp60, label %if.then62, label %if.end83, !dbg !11075

if.then62:                                        ; preds = %while.end
  %50 = load i8*, i8** %row1, align 8, !dbg !11076
  %51 = load i32, i32* %step, align 4, !dbg !11078
  %idxprom63 = sext i32 %51 to i64, !dbg !11076
  %arrayidx64 = getelementptr inbounds i8, i8* %50, i64 %idxprom63, !dbg !11076
  %52 = load i8, i8* %arrayidx64, align 1, !dbg !11076
  store i8 %52, i8* %next, align 1, !dbg !11079
  store i32 0, i32* %a, align 4, !dbg !11080
  br label %for.cond65, !dbg !11082

for.cond65:                                       ; preds = %for.inc80, %if.then62
  %53 = load i32, i32* %a, align 4, !dbg !11083
  %54 = load i32, i32* %step, align 4, !dbg !11085
  %cmp66 = icmp slt i32 %53, %54, !dbg !11086
  br i1 %cmp66, label %for.body68, label %for.end82, !dbg !11087

for.body68:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata i32* %fac, metadata !11088, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata i32* %mfac, metadata !11091, metadata !DIExpression()), !dbg !11092
  %55 = load i32, i32* %a, align 4, !dbg !11093
  %add69 = add nsw i32 %55, 1, !dbg !11094
  %shl = shl i32 %add69, 8, !dbg !11095
  %56 = load i32, i32* %step, align 4, !dbg !11096
  %add70 = add nsw i32 %56, 1, !dbg !11097
  %div = sdiv i32 %shl, %add70, !dbg !11098
  store i32 %div, i32* %fac, align 4, !dbg !11099
  %57 = load i32, i32* %fac, align 4, !dbg !11100
  %sub71 = sub nsw i32 255, %57, !dbg !11101
  store i32 %sub71, i32* %mfac, align 4, !dbg !11102
  %58 = load i8, i8* %prev, align 1, !dbg !11103
  %conv72 = zext i8 %58 to i32, !dbg !11103
  %59 = load i32, i32* %mfac, align 4, !dbg !11104
  %mul73 = mul nsw i32 %conv72, %59, !dbg !11105
  %60 = load i8, i8* %next, align 1, !dbg !11106
  %conv74 = zext i8 %60 to i32, !dbg !11106
  %61 = load i32, i32* %fac, align 4, !dbg !11107
  %mul75 = mul nsw i32 %conv74, %61, !dbg !11108
  %add76 = add nsw i32 %mul73, %mul75, !dbg !11109
  %shr = ashr i32 %add76, 8, !dbg !11110
  %conv77 = trunc i32 %shr to i8, !dbg !11111
  %62 = load i8*, i8** %row1, align 8, !dbg !11112
  %63 = load i32, i32* %a, align 4, !dbg !11113
  %idxprom78 = sext i32 %63 to i64, !dbg !11112
  %arrayidx79 = getelementptr inbounds i8, i8* %62, i64 %idxprom78, !dbg !11112
  store i8 %conv77, i8* %arrayidx79, align 1, !dbg !11114
  br label %for.inc80, !dbg !11115

for.inc80:                                        ; preds = %for.body68
  %64 = load i32, i32* %a, align 4, !dbg !11116
  %inc81 = add nsw i32 %64, 1, !dbg !11116
  store i32 %inc81, i32* %a, align 4, !dbg !11116
  br label %for.cond65, !dbg !11117, !llvm.loop !11118

for.end82:                                        ; preds = %for.cond65
  br label %if.end83, !dbg !11120

if.end83:                                         ; preds = %for.end82, %while.end
  br label %if.end84, !dbg !11121

if.end84:                                         ; preds = %if.end83, %land.lhs.true, %for.body41
  br label %for.inc85, !dbg !11122

for.inc85:                                        ; preds = %if.end84
  %65 = load i32, i32* %x, align 4, !dbg !11123
  %inc86 = add nsw i32 %65, 1, !dbg !11123
  store i32 %inc86, i32* %x, align 4, !dbg !11123
  %66 = load i8*, i8** %row1, align 8, !dbg !11124
  %incdec.ptr87 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !11124
  store i8* %incdec.ptr87, i8** %row1, align 8, !dbg !11124
  br label %for.cond38, !dbg !11125, !llvm.loop !11126

for.end88:                                        ; preds = %for.cond38
  br label %for.inc89, !dbg !11128

for.inc89:                                        ; preds = %for.end88
  %67 = load i32, i32* %y, align 4, !dbg !11129
  %inc90 = add nsw i32 %67, 1, !dbg !11129
  store i32 %inc90, i32* %y, align 4, !dbg !11129
  br label %for.cond33, !dbg !11130, !llvm.loop !11131

for.end91:                                        ; preds = %for.cond33
  store i32 0, i32* %x, align 4, !dbg !11133
  br label %for.cond92, !dbg !11135

for.cond92:                                       ; preds = %for.inc171, %for.end91
  %68 = load i32, i32* %x, align 4, !dbg !11136
  %69 = load i32, i32* %xsize.addr, align 4, !dbg !11138
  %cmp93 = icmp slt i32 %68, %69, !dbg !11139
  br i1 %cmp93, label %for.body95, label %for.end173, !dbg !11140

for.body95:                                       ; preds = %for.cond92
  %70 = load i8*, i8** %rectmove.addr, align 8, !dbg !11141
  %71 = load i32, i32* %x, align 4, !dbg !11143
  %idx.ext96 = sext i32 %71 to i64, !dbg !11144
  %add.ptr97 = getelementptr inbounds i8, i8* %70, i64 %idx.ext96, !dbg !11144
  %72 = load i32, i32* %xsize.addr, align 4, !dbg !11145
  %idx.ext98 = sext i32 %72 to i64, !dbg !11146
  %add.ptr99 = getelementptr inbounds i8, i8* %add.ptr97, i64 %idx.ext98, !dbg !11146
  store i8* %add.ptr99, i8** %row1, align 8, !dbg !11147
  store i32 1, i32* %y, align 4, !dbg !11148
  br label %for.cond100, !dbg !11150

for.cond100:                                      ; preds = %for.inc166, %for.body95
  %73 = load i32, i32* %y, align 4, !dbg !11151
  %74 = load i32, i32* %ysize.addr, align 4, !dbg !11153
  %cmp101 = icmp slt i32 %73, %74, !dbg !11154
  br i1 %cmp101, label %for.body103, label %for.end170, !dbg !11155

for.body103:                                      ; preds = %for.cond100
  %75 = load i8*, i8** %row1, align 8, !dbg !11156
  %arrayidx104 = getelementptr inbounds i8, i8* %75, i64 0, !dbg !11156
  %76 = load i8, i8* %arrayidx104, align 1, !dbg !11156
  %conv105 = zext i8 %76 to i32, !dbg !11156
  %cmp106 = icmp eq i32 %conv105, 128, !dbg !11159
  br i1 %cmp106, label %land.lhs.true108, label %if.end165, !dbg !11160

land.lhs.true108:                                 ; preds = %for.body103
  %77 = load i8*, i8** %row1, align 8, !dbg !11161
  %78 = load i32, i32* %xsize.addr, align 4, !dbg !11162
  %idxprom109 = sext i32 %78 to i64, !dbg !11161
  %arrayidx110 = getelementptr inbounds i8, i8* %77, i64 %idxprom109, !dbg !11161
  %79 = load i8, i8* %arrayidx110, align 1, !dbg !11161
  %conv111 = zext i8 %79 to i32, !dbg !11161
  %cmp112 = icmp eq i32 %conv111, 128, !dbg !11163
  br i1 %cmp112, label %if.then114, label %if.end165, !dbg !11164

if.then114:                                       ; preds = %land.lhs.true108
  %80 = load i8*, i8** %row1, align 8, !dbg !11165
  %81 = load i32, i32* %xsize.addr, align 4, !dbg !11167
  %sub115 = sub nsw i32 0, %81, !dbg !11168
  %idxprom116 = sext i32 %sub115 to i64, !dbg !11165
  %arrayidx117 = getelementptr inbounds i8, i8* %80, i64 %idxprom116, !dbg !11165
  %82 = load i8, i8* %arrayidx117, align 1, !dbg !11165
  store i8 %82, i8* %prev, align 1, !dbg !11169
  store i32 1, i32* %step, align 4, !dbg !11170
  br label %while.cond118, !dbg !11171

while.cond118:                                    ; preds = %while.body130, %if.then114
  %83 = load i32, i32* %y, align 4, !dbg !11172
  %84 = load i32, i32* %step, align 4, !dbg !11173
  %add119 = add nsw i32 %83, %84, !dbg !11174
  %85 = load i32, i32* %ysize.addr, align 4, !dbg !11175
  %cmp120 = icmp slt i32 %add119, %85, !dbg !11176
  br i1 %cmp120, label %land.rhs122, label %land.end129, !dbg !11177

land.rhs122:                                      ; preds = %while.cond118
  %86 = load i8*, i8** %row1, align 8, !dbg !11178
  %87 = load i32, i32* %step, align 4, !dbg !11179
  %88 = load i32, i32* %xsize.addr, align 4, !dbg !11180
  %mul123 = mul nsw i32 %87, %88, !dbg !11181
  %idxprom124 = sext i32 %mul123 to i64, !dbg !11178
  %arrayidx125 = getelementptr inbounds i8, i8* %86, i64 %idxprom124, !dbg !11178
  %89 = load i8, i8* %arrayidx125, align 1, !dbg !11178
  %conv126 = zext i8 %89 to i32, !dbg !11178
  %cmp127 = icmp eq i32 %conv126, 128, !dbg !11182
  br label %land.end129

land.end129:                                      ; preds = %land.rhs122, %while.cond118
  %90 = phi i1 [ false, %while.cond118 ], [ %cmp127, %land.rhs122 ], !dbg !11183
  br i1 %90, label %while.body130, label %while.end132, !dbg !11171

while.body130:                                    ; preds = %land.end129
  %91 = load i32, i32* %step, align 4, !dbg !11184
  %inc131 = add nsw i32 %91, 1, !dbg !11184
  store i32 %inc131, i32* %step, align 4, !dbg !11184
  br label %while.cond118, !dbg !11171, !llvm.loop !11185

while.end132:                                     ; preds = %land.end129
  %92 = load i32, i32* %y, align 4, !dbg !11186
  %93 = load i32, i32* %step, align 4, !dbg !11188
  %add133 = add nsw i32 %92, %93, !dbg !11189
  %94 = load i32, i32* %ysize.addr, align 4, !dbg !11190
  %cmp134 = icmp ne i32 %add133, %94, !dbg !11191
  br i1 %cmp134, label %if.then136, label %if.end164, !dbg !11192

if.then136:                                       ; preds = %while.end132
  %95 = load i8*, i8** %row1, align 8, !dbg !11193
  %96 = load i32, i32* %step, align 4, !dbg !11195
  %97 = load i32, i32* %xsize.addr, align 4, !dbg !11196
  %mul137 = mul nsw i32 %96, %97, !dbg !11197
  %idxprom138 = sext i32 %mul137 to i64, !dbg !11193
  %arrayidx139 = getelementptr inbounds i8, i8* %95, i64 %idxprom138, !dbg !11193
  %98 = load i8, i8* %arrayidx139, align 1, !dbg !11193
  store i8 %98, i8* %next, align 1, !dbg !11198
  store i32 0, i32* %a, align 4, !dbg !11199
  br label %for.cond140, !dbg !11201

for.cond140:                                      ; preds = %for.inc161, %if.then136
  %99 = load i32, i32* %a, align 4, !dbg !11202
  %100 = load i32, i32* %step, align 4, !dbg !11204
  %cmp141 = icmp slt i32 %99, %100, !dbg !11205
  br i1 %cmp141, label %for.body143, label %for.end163, !dbg !11206

for.body143:                                      ; preds = %for.cond140
  call void @llvm.dbg.declare(metadata i32* %fac144, metadata !11207, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.declare(metadata i32* %mfac145, metadata !11210, metadata !DIExpression()), !dbg !11211
  %101 = load i32, i32* %a, align 4, !dbg !11212
  %add146 = add nsw i32 %101, 1, !dbg !11213
  %shl147 = shl i32 %add146, 8, !dbg !11214
  %102 = load i32, i32* %step, align 4, !dbg !11215
  %add148 = add nsw i32 %102, 1, !dbg !11216
  %div149 = sdiv i32 %shl147, %add148, !dbg !11217
  store i32 %div149, i32* %fac144, align 4, !dbg !11218
  %103 = load i32, i32* %fac144, align 4, !dbg !11219
  %sub150 = sub nsw i32 255, %103, !dbg !11220
  store i32 %sub150, i32* %mfac145, align 4, !dbg !11221
  %104 = load i8, i8* %prev, align 1, !dbg !11222
  %conv151 = zext i8 %104 to i32, !dbg !11222
  %105 = load i32, i32* %mfac145, align 4, !dbg !11223
  %mul152 = mul nsw i32 %conv151, %105, !dbg !11224
  %106 = load i8, i8* %next, align 1, !dbg !11225
  %conv153 = zext i8 %106 to i32, !dbg !11225
  %107 = load i32, i32* %fac144, align 4, !dbg !11226
  %mul154 = mul nsw i32 %conv153, %107, !dbg !11227
  %add155 = add nsw i32 %mul152, %mul154, !dbg !11228
  %shr156 = ashr i32 %add155, 8, !dbg !11229
  %conv157 = trunc i32 %shr156 to i8, !dbg !11230
  %108 = load i8*, i8** %row1, align 8, !dbg !11231
  %109 = load i32, i32* %a, align 4, !dbg !11232
  %110 = load i32, i32* %xsize.addr, align 4, !dbg !11233
  %mul158 = mul nsw i32 %109, %110, !dbg !11234
  %idxprom159 = sext i32 %mul158 to i64, !dbg !11231
  %arrayidx160 = getelementptr inbounds i8, i8* %108, i64 %idxprom159, !dbg !11231
  store i8 %conv157, i8* %arrayidx160, align 1, !dbg !11235
  br label %for.inc161, !dbg !11236

for.inc161:                                       ; preds = %for.body143
  %111 = load i32, i32* %a, align 4, !dbg !11237
  %inc162 = add nsw i32 %111, 1, !dbg !11237
  store i32 %inc162, i32* %a, align 4, !dbg !11237
  br label %for.cond140, !dbg !11238, !llvm.loop !11239

for.end163:                                       ; preds = %for.cond140
  br label %if.end164, !dbg !11241

if.end164:                                        ; preds = %for.end163, %while.end132
  br label %if.end165, !dbg !11242

if.end165:                                        ; preds = %if.end164, %land.lhs.true108, %for.body103
  br label %for.inc166, !dbg !11243

for.inc166:                                       ; preds = %if.end165
  %112 = load i32, i32* %y, align 4, !dbg !11244
  %inc167 = add nsw i32 %112, 1, !dbg !11244
  store i32 %inc167, i32* %y, align 4, !dbg !11244
  %113 = load i32, i32* %xsize.addr, align 4, !dbg !11245
  %114 = load i8*, i8** %row1, align 8, !dbg !11246
  %idx.ext168 = sext i32 %113 to i64, !dbg !11246
  %add.ptr169 = getelementptr inbounds i8, i8* %114, i64 %idx.ext168, !dbg !11246
  store i8* %add.ptr169, i8** %row1, align 8, !dbg !11246
  br label %for.cond100, !dbg !11247, !llvm.loop !11248

for.end170:                                       ; preds = %for.cond100
  br label %for.inc171, !dbg !11250

for.inc171:                                       ; preds = %for.end170
  %115 = load i32, i32* %x, align 4, !dbg !11251
  %inc172 = add nsw i32 %115, 1, !dbg !11251
  store i32 %inc172, i32* %x, align 4, !dbg !11251
  br label %for.cond92, !dbg !11252, !llvm.loop !11253

for.end173:                                       ; preds = %for.cond92
  store i32 2, i32* %y, align 4, !dbg !11255
  br label %for.cond174, !dbg !11257

for.cond174:                                      ; preds = %for.inc224, %for.end173
  %116 = load i32, i32* %y, align 4, !dbg !11258
  %117 = load i32, i32* %ysize.addr, align 4, !dbg !11260
  %cmp175 = icmp slt i32 %116, %117, !dbg !11261
  br i1 %cmp175, label %for.body177, label %for.end226, !dbg !11262

for.body177:                                      ; preds = %for.cond174
  %118 = load i8*, i8** %rectmove.addr, align 8, !dbg !11263
  %119 = load i32, i32* %y, align 4, !dbg !11265
  %sub178 = sub nsw i32 %119, 2, !dbg !11266
  %120 = load i32, i32* %xsize.addr, align 4, !dbg !11267
  %mul179 = mul nsw i32 %sub178, %120, !dbg !11268
  %idx.ext180 = sext i32 %mul179 to i64, !dbg !11269
  %add.ptr181 = getelementptr inbounds i8, i8* %118, i64 %idx.ext180, !dbg !11269
  store i8* %add.ptr181, i8** %row1, align 8, !dbg !11270
  %121 = load i8*, i8** %row1, align 8, !dbg !11271
  %122 = load i32, i32* %xsize.addr, align 4, !dbg !11272
  %idx.ext182 = sext i32 %122 to i64, !dbg !11273
  %add.ptr183 = getelementptr inbounds i8, i8* %121, i64 %idx.ext182, !dbg !11273
  store i8* %add.ptr183, i8** %row2, align 8, !dbg !11274
  %123 = load i8*, i8** %row2, align 8, !dbg !11275
  %124 = load i32, i32* %xsize.addr, align 4, !dbg !11276
  %idx.ext184 = sext i32 %124 to i64, !dbg !11277
  %add.ptr185 = getelementptr inbounds i8, i8* %123, i64 %idx.ext184, !dbg !11277
  store i8* %add.ptr185, i8** %row3, align 8, !dbg !11278
  store i32 2, i32* %x, align 4, !dbg !11279
  br label %for.cond186, !dbg !11281

for.cond186:                                      ; preds = %for.inc218, %for.body177
  %125 = load i32, i32* %x, align 4, !dbg !11282
  %126 = load i32, i32* %xsize.addr, align 4, !dbg !11284
  %cmp187 = icmp slt i32 %125, %126, !dbg !11285
  br i1 %cmp187, label %for.body189, label %for.end223, !dbg !11286

for.body189:                                      ; preds = %for.cond186
  %127 = load i8*, i8** %row2, align 8, !dbg !11287
  %arrayidx190 = getelementptr inbounds i8, i8* %127, i64 1, !dbg !11287
  %128 = load i8, i8* %arrayidx190, align 1, !dbg !11287
  %conv191 = zext i8 %128 to i32, !dbg !11287
  %cmp192 = icmp eq i32 %conv191, 0, !dbg !11290
  br i1 %cmp192, label %if.then194, label %if.end217, !dbg !11291

if.then194:                                       ; preds = %for.body189
  %129 = load i8*, i8** %row2, align 8, !dbg !11292
  %arrayidx195 = getelementptr inbounds i8, i8* %129, i64 0, !dbg !11292
  %130 = load i8, i8* %arrayidx195, align 1, !dbg !11292
  %conv196 = zext i8 %130 to i32, !dbg !11292
  %cmp197 = icmp sgt i32 %conv196, 1, !dbg !11295
  br i1 %cmp197, label %if.then214, label %lor.lhs.false199, !dbg !11296

lor.lhs.false199:                                 ; preds = %if.then194
  %131 = load i8*, i8** %row2, align 8, !dbg !11297
  %arrayidx200 = getelementptr inbounds i8, i8* %131, i64 2, !dbg !11297
  %132 = load i8, i8* %arrayidx200, align 1, !dbg !11297
  %conv201 = zext i8 %132 to i32, !dbg !11297
  %cmp202 = icmp sgt i32 %conv201, 1, !dbg !11298
  br i1 %cmp202, label %if.then214, label %lor.lhs.false204, !dbg !11299

lor.lhs.false204:                                 ; preds = %lor.lhs.false199
  %133 = load i8*, i8** %row1, align 8, !dbg !11300
  %arrayidx205 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !11300
  %134 = load i8, i8* %arrayidx205, align 1, !dbg !11300
  %conv206 = zext i8 %134 to i32, !dbg !11300
  %cmp207 = icmp sgt i32 %conv206, 1, !dbg !11301
  br i1 %cmp207, label %if.then214, label %lor.lhs.false209, !dbg !11302

lor.lhs.false209:                                 ; preds = %lor.lhs.false204
  %135 = load i8*, i8** %row3, align 8, !dbg !11303
  %arrayidx210 = getelementptr inbounds i8, i8* %135, i64 1, !dbg !11303
  %136 = load i8, i8* %arrayidx210, align 1, !dbg !11303
  %conv211 = zext i8 %136 to i32, !dbg !11303
  %cmp212 = icmp sgt i32 %conv211, 1, !dbg !11304
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !11305

if.then214:                                       ; preds = %lor.lhs.false209, %lor.lhs.false204, %lor.lhs.false199, %if.then194
  %137 = load i8*, i8** %row2, align 8, !dbg !11306
  %arrayidx215 = getelementptr inbounds i8, i8* %137, i64 1, !dbg !11306
  store i8 1, i8* %arrayidx215, align 1, !dbg !11307
  br label %if.end216, !dbg !11306

if.end216:                                        ; preds = %if.then214, %lor.lhs.false209
  br label %if.end217, !dbg !11308

if.end217:                                        ; preds = %if.end216, %for.body189
  br label %for.inc218, !dbg !11309

for.inc218:                                       ; preds = %if.end217
  %138 = load i32, i32* %x, align 4, !dbg !11310
  %inc219 = add nsw i32 %138, 1, !dbg !11310
  store i32 %inc219, i32* %x, align 4, !dbg !11310
  %139 = load i8*, i8** %row1, align 8, !dbg !11311
  %incdec.ptr220 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !11311
  store i8* %incdec.ptr220, i8** %row1, align 8, !dbg !11311
  %140 = load i8*, i8** %row2, align 8, !dbg !11312
  %incdec.ptr221 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !11312
  store i8* %incdec.ptr221, i8** %row2, align 8, !dbg !11312
  %141 = load i8*, i8** %row3, align 8, !dbg !11313
  %incdec.ptr222 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !11313
  store i8* %incdec.ptr222, i8** %row3, align 8, !dbg !11313
  br label %for.cond186, !dbg !11314, !llvm.loop !11315

for.end223:                                       ; preds = %for.cond186
  br label %for.inc224, !dbg !11317

for.inc224:                                       ; preds = %for.end223
  %142 = load i32, i32* %y, align 4, !dbg !11318
  %inc225 = add nsw i32 %142, 1, !dbg !11318
  store i32 %inc225, i32* %y, align 4, !dbg !11318
  br label %for.cond174, !dbg !11319, !llvm.loop !11320

for.end226:                                       ; preds = %for.cond174
  ret void, !dbg !11322
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_zbuf_accumulate_vecblur(%struct.NodeBlurData* %nbd, i32 %xsize, i32 %ysize, float* %newrect, float* %imgrect, float* %vecbufrect, float* %zbufrect) #0 !dbg !2 {
entry:
  %nbd.addr = alloca %struct.NodeBlurData*, align 8
  %xsize.addr = alloca i32, align 4
  %ysize.addr = alloca i32, align 4
  %newrect.addr = alloca float*, align 8
  %imgrect.addr = alloca float*, align 8
  %vecbufrect.addr = alloca float*, align 8
  %zbufrect.addr = alloca float*, align 8
  %zspan = alloca %struct.ZSpan, align 8
  %rectdraw = alloca %struct.DrawBufPixel*, align 8
  %dr = alloca %struct.DrawBufPixel*, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v4 = alloca [3 x float], align 4
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %rectvz = alloca float*, align 8
  %dvz = alloca float*, align 8
  %dimg = alloca float*, align 8
  %dvec1 = alloca float*, align 8
  %dvec2 = alloca float*, align 8
  %dz = alloca float*, align 8
  %dz1 = alloca float*, align 8
  %dz2 = alloca float*, align 8
  %rectz = alloca float*, align 8
  %minvecbufrect = alloca float*, align 8
  %rectweight = alloca float*, align 8
  %rw = alloca float*, align 8
  %rectmax = alloca float*, align 8
  %rm = alloca float*, align 8
  %ro = alloca float*, align 8
  %maxspeedsq = alloca float, align 4
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %step = alloca i32, align 4
  %maxspeed4 = alloca i32, align 4
  %samples = alloca i32, align 4
  %tsktsk = alloca i32, align 4
  %rectmove = alloca i8*, align 8
  %dm = alloca i8*, align 8
  %minspeed46 = alloca float, align 4
  %minspeedsq = alloca float, align 4
  %speedsq = alloca float, align 4
  %sw_ap = alloca float*, align 8
  %div145 = alloca i32, align 4
  %speedsq369 = alloca float, align 4
  %speedfac = alloca float, align 4
  %side = alloca i32, align 4
  %blendfac = alloca float, align 4
  %ipodata = alloca [4 x float], align 16
  %jfx = alloca float, align 4
  %jfy = alloca float, align 4
  %col = alloca %struct.DrawBufPixel, align 8
  %bfac = alloca float, align 4
  %mfac = alloca float, align 4
  %fac756 = alloca float, align 4
  %nfac = alloca float, align 4
  store %struct.NodeBlurData* %nbd, %struct.NodeBlurData** %nbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NodeBlurData** %nbd.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i32 %xsize, i32* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsize.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  store i32 %ysize, i32* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ysize.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  store float* %newrect, float** %newrect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %newrect.addr, metadata !11329, metadata !DIExpression()), !dbg !11330
  store float* %imgrect, float** %imgrect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %imgrect.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  store float* %vecbufrect, float** %vecbufrect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vecbufrect.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store float* %zbufrect, float** %zbufrect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %zbufrect.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata %struct.ZSpan* %zspan, metadata !11337, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel** %rectdraw, metadata !11339, metadata !DIExpression()), !dbg !11340
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel** %dr, metadata !11341, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !11343, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !11345, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !11347, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata [3 x float]* %v4, metadata !11349, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata float* %fx, metadata !11351, metadata !DIExpression()), !dbg !11352
  call void @llvm.dbg.declare(metadata float* %fy, metadata !11353, metadata !DIExpression()), !dbg !11354
  call void @llvm.dbg.declare(metadata float** %rectvz, metadata !11355, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.declare(metadata float** %dvz, metadata !11357, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.declare(metadata float** %dimg, metadata !11359, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.declare(metadata float** %dvec1, metadata !11361, metadata !DIExpression()), !dbg !11362
  call void @llvm.dbg.declare(metadata float** %dvec2, metadata !11363, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.declare(metadata float** %dz, metadata !11365, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.declare(metadata float** %dz1, metadata !11367, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata float** %dz2, metadata !11369, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.declare(metadata float** %rectz, metadata !11371, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.declare(metadata float** %minvecbufrect, metadata !11373, metadata !DIExpression()), !dbg !11374
  store float* null, float** %minvecbufrect, align 8, !dbg !11374
  call void @llvm.dbg.declare(metadata float** %rectweight, metadata !11375, metadata !DIExpression()), !dbg !11376
  call void @llvm.dbg.declare(metadata float** %rw, metadata !11377, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.declare(metadata float** %rectmax, metadata !11379, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.declare(metadata float** %rm, metadata !11381, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.declare(metadata float** %ro, metadata !11383, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.declare(metadata float* %maxspeedsq, metadata !11385, metadata !DIExpression()), !dbg !11386
  %0 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11387
  %maxspeed = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %0, i32 0, i32 3, !dbg !11388
  %1 = load i16, i16* %maxspeed, align 2, !dbg !11388
  %conv = sitofp i16 %1 to float, !dbg !11389
  %2 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11390
  %maxspeed1 = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %2, i32 0, i32 3, !dbg !11391
  %3 = load i16, i16* %maxspeed1, align 2, !dbg !11391
  %conv2 = sext i16 %3 to i32, !dbg !11390
  %conv3 = sitofp i32 %conv2 to float, !dbg !11390
  %mul = fmul float %conv, %conv3, !dbg !11392
  store float %mul, float* %maxspeedsq, align 4, !dbg !11386
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11393, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11395, metadata !DIExpression()), !dbg !11396
  call void @llvm.dbg.declare(metadata i32* %step, metadata !11397, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.declare(metadata i32* %maxspeed4, metadata !11399, metadata !DIExpression()), !dbg !11400
  %4 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11401
  %maxspeed5 = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %4, i32 0, i32 3, !dbg !11402
  %5 = load i16, i16* %maxspeed5, align 2, !dbg !11402
  %conv6 = sext i16 %5 to i32, !dbg !11401
  store i32 %conv6, i32* %maxspeed4, align 4, !dbg !11400
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !11403, metadata !DIExpression()), !dbg !11404
  %6 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11405
  %samples7 = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %6, i32 0, i32 2, !dbg !11406
  %7 = load i16, i16* %samples7, align 4, !dbg !11406
  %conv8 = sext i16 %7 to i32, !dbg !11405
  store i32 %conv8, i32* %samples, align 4, !dbg !11404
  call void @llvm.dbg.declare(metadata i32* %tsktsk, metadata !11407, metadata !DIExpression()), !dbg !11408
  store i32 0, i32* %tsktsk, align 4, !dbg !11408
  call void @llvm.dbg.declare(metadata i8** %rectmove, metadata !11409, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata i8** %dm, metadata !11411, metadata !DIExpression()), !dbg !11412
  %8 = load i32, i32* %xsize.addr, align 4, !dbg !11413
  %9 = load i32, i32* %ysize.addr, align 4, !dbg !11414
  call void @zbuf_alloc_span(%struct.ZSpan* %zspan, i32 %8, i32 %9, float 1.000000e+00), !dbg !11415
  %10 = load i32, i32* %xsize.addr, align 4, !dbg !11416
  %conv9 = sitofp i32 %10 to float, !dbg !11417
  %div = fdiv float %conv9, 2.000000e+00, !dbg !11418
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 12, !dbg !11419
  store float %div, float* %zmulx, align 8, !dbg !11420
  %11 = load i32, i32* %ysize.addr, align 4, !dbg !11421
  %conv10 = sitofp i32 %11 to float, !dbg !11422
  %div11 = fdiv float %conv10, 2.000000e+00, !dbg !11423
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 13, !dbg !11424
  store float %div11, float* %zmuly, align 4, !dbg !11425
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 14, !dbg !11426
  store float 0.000000e+00, float* %zofsx, align 8, !dbg !11427
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 15, !dbg !11428
  store float 0.000000e+00, float* %zofsy, align 4, !dbg !11429
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11430
  %13 = load i32, i32* %xsize.addr, align 4, !dbg !11431
  %conv12 = sext i32 %13 to i64, !dbg !11431
  %mul13 = mul i64 4, %conv12, !dbg !11432
  %14 = load i32, i32* %ysize.addr, align 4, !dbg !11433
  %conv14 = sext i32 %14 to i64, !dbg !11433
  %mul15 = mul i64 %mul13, %conv14, !dbg !11434
  %call = call i8* %12(i64 %mul15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !11430
  %15 = bitcast i8* %call to float*, !dbg !11430
  store float* %15, float** %rectz, align 8, !dbg !11435
  %16 = load float*, float** %rectz, align 8, !dbg !11436
  %17 = bitcast float* %16 to i32*, !dbg !11437
  %rectz16 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 16, !dbg !11438
  store i32* %17, i32** %rectz16, align 8, !dbg !11439
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11440
  %19 = load i32, i32* %xsize.addr, align 4, !dbg !11441
  %20 = load i32, i32* %ysize.addr, align 4, !dbg !11442
  %mul17 = mul nsw i32 %19, %20, !dbg !11443
  %conv18 = sext i32 %mul17 to i64, !dbg !11441
  %call19 = call i8* %18(i64 %conv18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)), !dbg !11440
  store i8* %call19, i8** %rectmove, align 8, !dbg !11444
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11445
  %22 = load i32, i32* %xsize.addr, align 4, !dbg !11446
  %conv20 = sext i32 %22 to i64, !dbg !11446
  %mul21 = mul i64 16, %conv20, !dbg !11447
  %23 = load i32, i32* %ysize.addr, align 4, !dbg !11448
  %conv22 = sext i32 %23 to i64, !dbg !11448
  %mul23 = mul i64 %mul21, %conv22, !dbg !11449
  %call24 = call i8* %21(i64 %mul23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !11445
  %24 = bitcast i8* %call24 to %struct.DrawBufPixel*, !dbg !11445
  store %struct.DrawBufPixel* %24, %struct.DrawBufPixel** %rectdraw, align 8, !dbg !11450
  %25 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectdraw, align 8, !dbg !11451
  %26 = bitcast %struct.DrawBufPixel* %25 to i32*, !dbg !11452
  %rectp = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %zspan, i32 0, i32 19, !dbg !11453
  store i32* %26, i32** %rectp, align 8, !dbg !11454
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11455
  %28 = load i32, i32* %xsize.addr, align 4, !dbg !11456
  %conv25 = sext i32 %28 to i64, !dbg !11456
  %mul26 = mul i64 4, %conv25, !dbg !11457
  %29 = load i32, i32* %ysize.addr, align 4, !dbg !11458
  %conv27 = sext i32 %29 to i64, !dbg !11458
  %mul28 = mul i64 %mul26, %conv27, !dbg !11459
  %call29 = call i8* %27(i64 %mul28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)), !dbg !11455
  %30 = bitcast i8* %call29 to float*, !dbg !11455
  store float* %30, float** %rectweight, align 8, !dbg !11460
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11461
  %32 = load i32, i32* %xsize.addr, align 4, !dbg !11462
  %conv30 = sext i32 %32 to i64, !dbg !11462
  %mul31 = mul i64 4, %conv30, !dbg !11463
  %33 = load i32, i32* %ysize.addr, align 4, !dbg !11464
  %conv32 = sext i32 %33 to i64, !dbg !11464
  %mul33 = mul i64 %mul31, %conv32, !dbg !11465
  %call34 = call i8* %31(i64 %mul33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)), !dbg !11461
  %34 = bitcast i8* %call34 to float*, !dbg !11461
  store float* %34, float** %rectmax, align 8, !dbg !11466
  %35 = load float*, float** %vecbufrect.addr, align 8, !dbg !11467
  store float* %35, float** %dvec1, align 8, !dbg !11468
  %36 = load i32, i32* %xsize.addr, align 4, !dbg !11469
  %mul35 = mul nsw i32 4, %36, !dbg !11471
  %37 = load i32, i32* %ysize.addr, align 4, !dbg !11472
  %mul36 = mul nsw i32 %mul35, %37, !dbg !11473
  store i32 %mul36, i32* %x, align 4, !dbg !11474
  br label %for.cond, !dbg !11475

for.cond:                                         ; preds = %for.inc, %entry
  %38 = load i32, i32* %x, align 4, !dbg !11476
  %cmp = icmp sgt i32 %38, 0, !dbg !11478
  br i1 %cmp, label %for.body, label %for.end, !dbg !11479

for.body:                                         ; preds = %for.cond
  %39 = load float*, float** %dvec1, align 8, !dbg !11480
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !11480
  %40 = load float, float* %arrayidx, align 4, !dbg !11480
  %cmp38 = fcmp oeq float %40, 1.000000e+04, !dbg !11483
  br i1 %cmp38, label %if.then, label %if.end, !dbg !11484

if.then:                                          ; preds = %for.body
  %41 = load float*, float** %dvec1, align 8, !dbg !11485
  %arrayidx40 = getelementptr inbounds float, float* %41, i64 0, !dbg !11485
  store float 0.000000e+00, float* %arrayidx40, align 4, !dbg !11487
  store i32 1, i32* %tsktsk, align 4, !dbg !11488
  br label %if.end, !dbg !11489

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11490

for.inc:                                          ; preds = %if.end
  %42 = load i32, i32* %x, align 4, !dbg !11491
  %dec = add nsw i32 %42, -1, !dbg !11491
  store i32 %dec, i32* %x, align 4, !dbg !11491
  %43 = load float*, float** %dvec1, align 8, !dbg !11492
  %incdec.ptr = getelementptr inbounds float, float* %43, i32 1, !dbg !11492
  store float* %incdec.ptr, float** %dvec1, align 8, !dbg !11492
  br label %for.cond, !dbg !11493, !llvm.loop !11494

for.end:                                          ; preds = %for.cond
  %44 = load i32, i32* %tsktsk, align 4, !dbg !11496
  %tobool = icmp ne i32 %44, 0, !dbg !11496
  br i1 %tobool, label %if.then41, label %if.end43, !dbg !11498

if.then41:                                        ; preds = %for.end
  %call42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0)), !dbg !11499
  br label %if.end43, !dbg !11499

if.end43:                                         ; preds = %if.then41, %for.end
  %45 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11500
  %minspeed = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %45, i32 0, i32 4, !dbg !11502
  %46 = load i16, i16* %minspeed, align 4, !dbg !11502
  %tobool44 = icmp ne i16 %46, 0, !dbg !11500
  br i1 %tobool44, label %if.then45, label %if.end98, !dbg !11503

if.then45:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata float* %minspeed46, metadata !11504, metadata !DIExpression()), !dbg !11506
  %47 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !11507
  %minspeed47 = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %47, i32 0, i32 4, !dbg !11508
  %48 = load i16, i16* %minspeed47, align 4, !dbg !11508
  %conv48 = sitofp i16 %48 to float, !dbg !11509
  store float %conv48, float* %minspeed46, align 4, !dbg !11506
  call void @llvm.dbg.declare(metadata float* %minspeedsq, metadata !11510, metadata !DIExpression()), !dbg !11511
  %49 = load float, float* %minspeed46, align 4, !dbg !11512
  %50 = load float, float* %minspeed46, align 4, !dbg !11513
  %mul49 = fmul float %49, %50, !dbg !11514
  store float %mul49, float* %minspeedsq, align 4, !dbg !11511
  %51 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11515
  %52 = load i32, i32* %xsize.addr, align 4, !dbg !11516
  %conv50 = sext i32 %52 to i64, !dbg !11516
  %mul51 = mul i64 16, %conv50, !dbg !11517
  %53 = load i32, i32* %ysize.addr, align 4, !dbg !11518
  %conv52 = sext i32 %53 to i64, !dbg !11518
  %mul53 = mul i64 %mul51, %conv52, !dbg !11519
  %call54 = call i8* %51(i64 %mul53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)), !dbg !11515
  %54 = bitcast i8* %call54 to float*, !dbg !11515
  store float* %54, float** %minvecbufrect, align 8, !dbg !11520
  %55 = load float*, float** %vecbufrect.addr, align 8, !dbg !11521
  store float* %55, float** %dvec1, align 8, !dbg !11522
  %56 = load float*, float** %minvecbufrect, align 8, !dbg !11523
  store float* %56, float** %dvec2, align 8, !dbg !11524
  %57 = load i32, i32* %xsize.addr, align 4, !dbg !11525
  %mul55 = mul nsw i32 2, %57, !dbg !11527
  %58 = load i32, i32* %ysize.addr, align 4, !dbg !11528
  %mul56 = mul nsw i32 %mul55, %58, !dbg !11529
  store i32 %mul56, i32* %x, align 4, !dbg !11530
  br label %for.cond57, !dbg !11531

for.cond57:                                       ; preds = %for.inc94, %if.then45
  %59 = load i32, i32* %x, align 4, !dbg !11532
  %cmp58 = icmp sgt i32 %59, 0, !dbg !11534
  br i1 %cmp58, label %for.body60, label %for.end97, !dbg !11535

for.body60:                                       ; preds = %for.cond57
  %60 = load float*, float** %dvec1, align 8, !dbg !11536
  %arrayidx61 = getelementptr inbounds float, float* %60, i64 0, !dbg !11536
  %61 = load float, float* %arrayidx61, align 4, !dbg !11536
  %cmp62 = fcmp oeq float %61, 0.000000e+00, !dbg !11539
  br i1 %cmp62, label %land.lhs.true, label %if.else, !dbg !11540

land.lhs.true:                                    ; preds = %for.body60
  %62 = load float*, float** %dvec1, align 8, !dbg !11541
  %arrayidx64 = getelementptr inbounds float, float* %62, i64 1, !dbg !11541
  %63 = load float, float* %arrayidx64, align 4, !dbg !11541
  %cmp65 = fcmp oeq float %63, 0.000000e+00, !dbg !11542
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !11543

if.then67:                                        ; preds = %land.lhs.true
  %64 = load float*, float** %dvec1, align 8, !dbg !11544
  %arrayidx68 = getelementptr inbounds float, float* %64, i64 0, !dbg !11544
  %65 = load float, float* %arrayidx68, align 4, !dbg !11544
  %66 = load float*, float** %dvec2, align 8, !dbg !11546
  %arrayidx69 = getelementptr inbounds float, float* %66, i64 0, !dbg !11546
  store float %65, float* %arrayidx69, align 4, !dbg !11547
  %67 = load float*, float** %dvec1, align 8, !dbg !11548
  %arrayidx70 = getelementptr inbounds float, float* %67, i64 1, !dbg !11548
  %68 = load float, float* %arrayidx70, align 4, !dbg !11548
  %69 = load float*, float** %dvec2, align 8, !dbg !11549
  %arrayidx71 = getelementptr inbounds float, float* %69, i64 1, !dbg !11549
  store float %68, float* %arrayidx71, align 4, !dbg !11550
  br label %if.end93, !dbg !11551

if.else:                                          ; preds = %land.lhs.true, %for.body60
  call void @llvm.dbg.declare(metadata float* %speedsq, metadata !11552, metadata !DIExpression()), !dbg !11554
  %70 = load float*, float** %dvec1, align 8, !dbg !11555
  %arrayidx72 = getelementptr inbounds float, float* %70, i64 0, !dbg !11555
  %71 = load float, float* %arrayidx72, align 4, !dbg !11555
  %72 = load float*, float** %dvec1, align 8, !dbg !11556
  %arrayidx73 = getelementptr inbounds float, float* %72, i64 0, !dbg !11556
  %73 = load float, float* %arrayidx73, align 4, !dbg !11556
  %mul74 = fmul float %71, %73, !dbg !11557
  %74 = load float*, float** %dvec1, align 8, !dbg !11558
  %arrayidx75 = getelementptr inbounds float, float* %74, i64 1, !dbg !11558
  %75 = load float, float* %arrayidx75, align 4, !dbg !11558
  %76 = load float*, float** %dvec1, align 8, !dbg !11559
  %arrayidx76 = getelementptr inbounds float, float* %76, i64 1, !dbg !11559
  %77 = load float, float* %arrayidx76, align 4, !dbg !11559
  %mul77 = fmul float %75, %77, !dbg !11560
  %add = fadd float %mul74, %mul77, !dbg !11561
  store float %add, float* %speedsq, align 4, !dbg !11554
  %78 = load float, float* %speedsq, align 4, !dbg !11562
  %79 = load float, float* %minspeedsq, align 4, !dbg !11564
  %cmp78 = fcmp ole float %78, %79, !dbg !11565
  br i1 %cmp78, label %if.then80, label %if.else83, !dbg !11566

if.then80:                                        ; preds = %if.else
  %80 = load float*, float** %dvec2, align 8, !dbg !11567
  %arrayidx81 = getelementptr inbounds float, float* %80, i64 0, !dbg !11567
  store float 0.000000e+00, float* %arrayidx81, align 4, !dbg !11569
  %81 = load float*, float** %dvec2, align 8, !dbg !11570
  %arrayidx82 = getelementptr inbounds float, float* %81, i64 1, !dbg !11570
  store float 0.000000e+00, float* %arrayidx82, align 4, !dbg !11571
  br label %if.end92, !dbg !11572

if.else83:                                        ; preds = %if.else
  %82 = load float, float* %minspeed46, align 4, !dbg !11573
  %83 = load float, float* %speedsq, align 4, !dbg !11575
  %call84 = call float @sqrtf(float %83) #5, !dbg !11576
  %div85 = fdiv float %82, %call84, !dbg !11577
  %sub = fsub float 1.000000e+00, %div85, !dbg !11578
  store float %sub, float* %speedsq, align 4, !dbg !11579
  %84 = load float, float* %speedsq, align 4, !dbg !11580
  %85 = load float*, float** %dvec1, align 8, !dbg !11581
  %arrayidx86 = getelementptr inbounds float, float* %85, i64 0, !dbg !11581
  %86 = load float, float* %arrayidx86, align 4, !dbg !11581
  %mul87 = fmul float %84, %86, !dbg !11582
  %87 = load float*, float** %dvec2, align 8, !dbg !11583
  %arrayidx88 = getelementptr inbounds float, float* %87, i64 0, !dbg !11583
  store float %mul87, float* %arrayidx88, align 4, !dbg !11584
  %88 = load float, float* %speedsq, align 4, !dbg !11585
  %89 = load float*, float** %dvec1, align 8, !dbg !11586
  %arrayidx89 = getelementptr inbounds float, float* %89, i64 1, !dbg !11586
  %90 = load float, float* %arrayidx89, align 4, !dbg !11586
  %mul90 = fmul float %88, %90, !dbg !11587
  %91 = load float*, float** %dvec2, align 8, !dbg !11588
  %arrayidx91 = getelementptr inbounds float, float* %91, i64 1, !dbg !11588
  store float %mul90, float* %arrayidx91, align 4, !dbg !11589
  br label %if.end92

if.end92:                                         ; preds = %if.else83, %if.then80
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then67
  br label %for.inc94, !dbg !11590

for.inc94:                                        ; preds = %if.end93
  %92 = load i32, i32* %x, align 4, !dbg !11591
  %dec95 = add nsw i32 %92, -1, !dbg !11591
  store i32 %dec95, i32* %x, align 4, !dbg !11591
  %93 = load float*, float** %dvec1, align 8, !dbg !11592
  %add.ptr = getelementptr inbounds float, float* %93, i64 2, !dbg !11592
  store float* %add.ptr, float** %dvec1, align 8, !dbg !11592
  %94 = load float*, float** %dvec2, align 8, !dbg !11593
  %add.ptr96 = getelementptr inbounds float, float* %94, i64 2, !dbg !11593
  store float* %add.ptr96, float** %dvec2, align 8, !dbg !11593
  br label %for.cond57, !dbg !11594, !llvm.loop !11595

for.end97:                                        ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata float** %sw_ap, metadata !11597, metadata !DIExpression()), !dbg !11599
  %95 = load float*, float** %minvecbufrect, align 8, !dbg !11599
  store float* %95, float** %sw_ap, align 8, !dbg !11599
  %96 = load float*, float** %vecbufrect.addr, align 8, !dbg !11599
  store float* %96, float** %minvecbufrect, align 8, !dbg !11599
  %97 = load float*, float** %sw_ap, align 8, !dbg !11599
  store float* %97, float** %vecbufrect.addr, align 8, !dbg !11599
  br label %if.end98, !dbg !11600

if.end98:                                         ; preds = %for.end97, %if.end43
  %98 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !11601
  %99 = load i32, i32* %xsize.addr, align 4, !dbg !11602
  %add99 = add nsw i32 %99, 1, !dbg !11603
  %conv100 = sext i32 %add99 to i64, !dbg !11604
  %mul101 = mul i64 16, %conv100, !dbg !11605
  %100 = load i32, i32* %ysize.addr, align 4, !dbg !11606
  %add102 = add nsw i32 %100, 1, !dbg !11607
  %conv103 = sext i32 %add102 to i64, !dbg !11608
  %mul104 = mul i64 %mul101, %conv103, !dbg !11609
  %call105 = call i8* %98(i64 %mul104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)), !dbg !11601
  %101 = bitcast i8* %call105 to float*, !dbg !11601
  store float* %101, float** %rectvz, align 8, !dbg !11610
  %102 = load float*, float** %rectvz, align 8, !dbg !11611
  store float* %102, float** %dvz, align 8, !dbg !11612
  store i32 0, i32* %y, align 4, !dbg !11613
  br label %for.cond106, !dbg !11615

for.cond106:                                      ; preds = %for.inc398, %if.end98
  %103 = load i32, i32* %y, align 4, !dbg !11616
  %104 = load i32, i32* %ysize.addr, align 4, !dbg !11618
  %cmp107 = icmp sle i32 %103, %104, !dbg !11619
  br i1 %cmp107, label %for.body109, label %for.end400, !dbg !11620

for.body109:                                      ; preds = %for.cond106
  %105 = load i32, i32* %y, align 4, !dbg !11621
  %cmp110 = icmp eq i32 %105, 0, !dbg !11624
  br i1 %cmp110, label %if.then112, label %if.else116, !dbg !11625

if.then112:                                       ; preds = %for.body109
  %106 = load float*, float** %vecbufrect.addr, align 8, !dbg !11626
  %107 = load i32, i32* %y, align 4, !dbg !11627
  %mul113 = mul nsw i32 4, %107, !dbg !11628
  %108 = load i32, i32* %xsize.addr, align 4, !dbg !11629
  %mul114 = mul nsw i32 %mul113, %108, !dbg !11630
  %idx.ext = sext i32 %mul114 to i64, !dbg !11631
  %add.ptr115 = getelementptr inbounds float, float* %106, i64 %idx.ext, !dbg !11631
  store float* %add.ptr115, float** %dvec1, align 8, !dbg !11632
  br label %if.end122, !dbg !11633

if.else116:                                       ; preds = %for.body109
  %109 = load float*, float** %vecbufrect.addr, align 8, !dbg !11634
  %110 = load i32, i32* %y, align 4, !dbg !11635
  %sub117 = sub nsw i32 %110, 1, !dbg !11636
  %mul118 = mul nsw i32 4, %sub117, !dbg !11637
  %111 = load i32, i32* %xsize.addr, align 4, !dbg !11638
  %mul119 = mul nsw i32 %mul118, %111, !dbg !11639
  %idx.ext120 = sext i32 %mul119 to i64, !dbg !11640
  %add.ptr121 = getelementptr inbounds float, float* %109, i64 %idx.ext120, !dbg !11640
  store float* %add.ptr121, float** %dvec1, align 8, !dbg !11641
  br label %if.end122

if.end122:                                        ; preds = %if.else116, %if.then112
  %112 = load i32, i32* %y, align 4, !dbg !11642
  %113 = load i32, i32* %ysize.addr, align 4, !dbg !11644
  %cmp123 = icmp eq i32 %112, %113, !dbg !11645
  br i1 %cmp123, label %if.then125, label %if.else131, !dbg !11646

if.then125:                                       ; preds = %if.end122
  %114 = load float*, float** %vecbufrect.addr, align 8, !dbg !11647
  %115 = load i32, i32* %y, align 4, !dbg !11648
  %sub126 = sub nsw i32 %115, 1, !dbg !11649
  %mul127 = mul nsw i32 4, %sub126, !dbg !11650
  %116 = load i32, i32* %xsize.addr, align 4, !dbg !11651
  %mul128 = mul nsw i32 %mul127, %116, !dbg !11652
  %idx.ext129 = sext i32 %mul128 to i64, !dbg !11653
  %add.ptr130 = getelementptr inbounds float, float* %114, i64 %idx.ext129, !dbg !11653
  store float* %add.ptr130, float** %dvec2, align 8, !dbg !11654
  br label %if.end136, !dbg !11655

if.else131:                                       ; preds = %if.end122
  %117 = load float*, float** %vecbufrect.addr, align 8, !dbg !11656
  %118 = load i32, i32* %y, align 4, !dbg !11657
  %mul132 = mul nsw i32 4, %118, !dbg !11658
  %119 = load i32, i32* %xsize.addr, align 4, !dbg !11659
  %mul133 = mul nsw i32 %mul132, %119, !dbg !11660
  %idx.ext134 = sext i32 %mul133 to i64, !dbg !11661
  %add.ptr135 = getelementptr inbounds float, float* %117, i64 %idx.ext134, !dbg !11661
  store float* %add.ptr135, float** %dvec2, align 8, !dbg !11662
  br label %if.end136

if.end136:                                        ; preds = %if.else131, %if.then125
  store i32 0, i32* %x, align 4, !dbg !11663
  br label %for.cond137, !dbg !11665

for.cond137:                                      ; preds = %for.inc395, %if.end136
  %120 = load i32, i32* %x, align 4, !dbg !11666
  %121 = load i32, i32* %xsize.addr, align 4, !dbg !11668
  %cmp138 = icmp sle i32 %120, %121, !dbg !11669
  br i1 %cmp138, label %for.body140, label %for.end397, !dbg !11670

for.body140:                                      ; preds = %for.cond137
  store i32 0, i32* %step, align 4, !dbg !11671
  br label %for.cond141, !dbg !11674

for.cond141:                                      ; preds = %for.inc389, %for.body140
  %122 = load i32, i32* %step, align 4, !dbg !11675
  %cmp142 = icmp slt i32 %122, 2, !dbg !11677
  br i1 %cmp142, label %for.body144, label %for.end394, !dbg !11678

for.body144:                                      ; preds = %for.cond141
  call void @llvm.dbg.declare(metadata i32* %div145, metadata !11679, metadata !DIExpression()), !dbg !11681
  store i32 0, i32* %div145, align 4, !dbg !11681
  %123 = load i32, i32* %x, align 4, !dbg !11682
  %cmp146 = icmp ne i32 %123, 0, !dbg !11684
  br i1 %cmp146, label %if.then148, label %if.end225, !dbg !11685

if.then148:                                       ; preds = %for.body144
  %124 = load float*, float** %dvec1, align 8, !dbg !11686
  %arrayidx149 = getelementptr inbounds float, float* %124, i64 -4, !dbg !11686
  %125 = load float, float* %arrayidx149, align 4, !dbg !11686
  %cmp150 = fcmp une float %125, 0.000000e+00, !dbg !11689
  br i1 %cmp150, label %if.then155, label %lor.lhs.false, !dbg !11690

lor.lhs.false:                                    ; preds = %if.then148
  %126 = load float*, float** %dvec1, align 8, !dbg !11691
  %arrayidx152 = getelementptr inbounds float, float* %126, i64 -3, !dbg !11691
  %127 = load float, float* %arrayidx152, align 4, !dbg !11691
  %cmp153 = fcmp une float %127, 0.000000e+00, !dbg !11692
  br i1 %cmp153, label %if.then155, label %if.end160, !dbg !11693

if.then155:                                       ; preds = %lor.lhs.false, %if.then148
  %128 = load float*, float** %dvec1, align 8, !dbg !11694
  %arrayidx156 = getelementptr inbounds float, float* %128, i64 -4, !dbg !11694
  %129 = load float, float* %arrayidx156, align 4, !dbg !11694
  %130 = load float*, float** %dvz, align 8, !dbg !11696
  %arrayidx157 = getelementptr inbounds float, float* %130, i64 0, !dbg !11696
  store float %129, float* %arrayidx157, align 4, !dbg !11697
  %131 = load float*, float** %dvec1, align 8, !dbg !11698
  %arrayidx158 = getelementptr inbounds float, float* %131, i64 -3, !dbg !11698
  %132 = load float, float* %arrayidx158, align 4, !dbg !11698
  %133 = load float*, float** %dvz, align 8, !dbg !11699
  %arrayidx159 = getelementptr inbounds float, float* %133, i64 1, !dbg !11699
  store float %132, float* %arrayidx159, align 4, !dbg !11700
  %134 = load i32, i32* %div145, align 4, !dbg !11701
  %inc = add nsw i32 %134, 1, !dbg !11701
  store i32 %inc, i32* %div145, align 4, !dbg !11701
  br label %if.end160, !dbg !11702

if.end160:                                        ; preds = %if.then155, %lor.lhs.false
  %135 = load float*, float** %dvec2, align 8, !dbg !11703
  %arrayidx161 = getelementptr inbounds float, float* %135, i64 -4, !dbg !11703
  %136 = load float, float* %arrayidx161, align 4, !dbg !11703
  %cmp162 = fcmp une float %136, 0.000000e+00, !dbg !11705
  br i1 %cmp162, label %if.then168, label %lor.lhs.false164, !dbg !11706

lor.lhs.false164:                                 ; preds = %if.end160
  %137 = load float*, float** %dvec2, align 8, !dbg !11707
  %arrayidx165 = getelementptr inbounds float, float* %137, i64 -3, !dbg !11707
  %138 = load float, float* %arrayidx165, align 4, !dbg !11707
  %cmp166 = fcmp une float %138, 0.000000e+00, !dbg !11708
  br i1 %cmp166, label %if.then168, label %if.end224, !dbg !11709

if.then168:                                       ; preds = %lor.lhs.false164, %if.end160
  %139 = load i32, i32* %div145, align 4, !dbg !11710
  %cmp169 = icmp eq i32 %139, 0, !dbg !11713
  br i1 %cmp169, label %if.then171, label %if.else177, !dbg !11714

if.then171:                                       ; preds = %if.then168
  %140 = load float*, float** %dvec2, align 8, !dbg !11715
  %arrayidx172 = getelementptr inbounds float, float* %140, i64 -4, !dbg !11715
  %141 = load float, float* %arrayidx172, align 4, !dbg !11715
  %142 = load float*, float** %dvz, align 8, !dbg !11717
  %arrayidx173 = getelementptr inbounds float, float* %142, i64 0, !dbg !11717
  store float %141, float* %arrayidx173, align 4, !dbg !11718
  %143 = load float*, float** %dvec2, align 8, !dbg !11719
  %arrayidx174 = getelementptr inbounds float, float* %143, i64 -3, !dbg !11719
  %144 = load float, float* %arrayidx174, align 4, !dbg !11719
  %145 = load float*, float** %dvz, align 8, !dbg !11720
  %arrayidx175 = getelementptr inbounds float, float* %145, i64 1, !dbg !11720
  store float %144, float* %arrayidx175, align 4, !dbg !11721
  %146 = load i32, i32* %div145, align 4, !dbg !11722
  %inc176 = add nsw i32 %146, 1, !dbg !11722
  store i32 %inc176, i32* %div145, align 4, !dbg !11722
  br label %if.end223, !dbg !11723

if.else177:                                       ; preds = %if.then168
  %147 = load float*, float** %dvec2, align 8, !dbg !11724
  %arrayidx178 = getelementptr inbounds float, float* %147, i64 -4, !dbg !11724
  %148 = load float, float* %arrayidx178, align 4, !dbg !11724
  %cmp179 = fcmp olt float %148, 0.000000e+00, !dbg !11724
  br i1 %cmp179, label %cond.true, label %cond.false, !dbg !11724

cond.true:                                        ; preds = %if.else177
  %149 = load float*, float** %dvec2, align 8, !dbg !11724
  %arrayidx181 = getelementptr inbounds float, float* %149, i64 -4, !dbg !11724
  %150 = load float, float* %arrayidx181, align 4, !dbg !11724
  %fneg = fneg float %150, !dbg !11724
  br label %cond.end, !dbg !11724

cond.false:                                       ; preds = %if.else177
  %151 = load float*, float** %dvec2, align 8, !dbg !11724
  %arrayidx182 = getelementptr inbounds float, float* %151, i64 -4, !dbg !11724
  %152 = load float, float* %arrayidx182, align 4, !dbg !11724
  br label %cond.end, !dbg !11724

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %152, %cond.false ], !dbg !11724
  %153 = load float*, float** %dvec2, align 8, !dbg !11726
  %arrayidx183 = getelementptr inbounds float, float* %153, i64 -3, !dbg !11726
  %154 = load float, float* %arrayidx183, align 4, !dbg !11726
  %cmp184 = fcmp olt float %154, 0.000000e+00, !dbg !11726
  br i1 %cmp184, label %cond.true186, label %cond.false189, !dbg !11726

cond.true186:                                     ; preds = %cond.end
  %155 = load float*, float** %dvec2, align 8, !dbg !11726
  %arrayidx187 = getelementptr inbounds float, float* %155, i64 -3, !dbg !11726
  %156 = load float, float* %arrayidx187, align 4, !dbg !11726
  %fneg188 = fneg float %156, !dbg !11726
  br label %cond.end191, !dbg !11726

cond.false189:                                    ; preds = %cond.end
  %157 = load float*, float** %dvec2, align 8, !dbg !11726
  %arrayidx190 = getelementptr inbounds float, float* %157, i64 -3, !dbg !11726
  %158 = load float, float* %arrayidx190, align 4, !dbg !11726
  br label %cond.end191, !dbg !11726

cond.end191:                                      ; preds = %cond.false189, %cond.true186
  %cond192 = phi float [ %fneg188, %cond.true186 ], [ %158, %cond.false189 ], !dbg !11726
  %add193 = fadd float %cond, %cond192, !dbg !11727
  %159 = load float*, float** %dvz, align 8, !dbg !11728
  %arrayidx194 = getelementptr inbounds float, float* %159, i64 0, !dbg !11728
  %160 = load float, float* %arrayidx194, align 4, !dbg !11728
  %cmp195 = fcmp olt float %160, 0.000000e+00, !dbg !11728
  br i1 %cmp195, label %cond.true197, label %cond.false200, !dbg !11728

cond.true197:                                     ; preds = %cond.end191
  %161 = load float*, float** %dvz, align 8, !dbg !11728
  %arrayidx198 = getelementptr inbounds float, float* %161, i64 0, !dbg !11728
  %162 = load float, float* %arrayidx198, align 4, !dbg !11728
  %fneg199 = fneg float %162, !dbg !11728
  br label %cond.end202, !dbg !11728

cond.false200:                                    ; preds = %cond.end191
  %163 = load float*, float** %dvz, align 8, !dbg !11728
  %arrayidx201 = getelementptr inbounds float, float* %163, i64 0, !dbg !11728
  %164 = load float, float* %arrayidx201, align 4, !dbg !11728
  br label %cond.end202, !dbg !11728

cond.end202:                                      ; preds = %cond.false200, %cond.true197
  %cond203 = phi float [ %fneg199, %cond.true197 ], [ %164, %cond.false200 ], !dbg !11728
  %165 = load float*, float** %dvz, align 8, !dbg !11729
  %arrayidx204 = getelementptr inbounds float, float* %165, i64 1, !dbg !11729
  %166 = load float, float* %arrayidx204, align 4, !dbg !11729
  %cmp205 = fcmp olt float %166, 0.000000e+00, !dbg !11729
  br i1 %cmp205, label %cond.true207, label %cond.false210, !dbg !11729

cond.true207:                                     ; preds = %cond.end202
  %167 = load float*, float** %dvz, align 8, !dbg !11729
  %arrayidx208 = getelementptr inbounds float, float* %167, i64 1, !dbg !11729
  %168 = load float, float* %arrayidx208, align 4, !dbg !11729
  %fneg209 = fneg float %168, !dbg !11729
  br label %cond.end212, !dbg !11729

cond.false210:                                    ; preds = %cond.end202
  %169 = load float*, float** %dvz, align 8, !dbg !11729
  %arrayidx211 = getelementptr inbounds float, float* %169, i64 1, !dbg !11729
  %170 = load float, float* %arrayidx211, align 4, !dbg !11729
  br label %cond.end212, !dbg !11729

cond.end212:                                      ; preds = %cond.false210, %cond.true207
  %cond213 = phi float [ %fneg209, %cond.true207 ], [ %170, %cond.false210 ], !dbg !11729
  %add214 = fadd float %cond203, %cond213, !dbg !11730
  %cmp215 = fcmp olt float %add193, %add214, !dbg !11731
  br i1 %cmp215, label %if.then217, label %if.end222, !dbg !11732

if.then217:                                       ; preds = %cond.end212
  %171 = load float*, float** %dvec2, align 8, !dbg !11733
  %arrayidx218 = getelementptr inbounds float, float* %171, i64 -4, !dbg !11733
  %172 = load float, float* %arrayidx218, align 4, !dbg !11733
  %173 = load float*, float** %dvz, align 8, !dbg !11735
  %arrayidx219 = getelementptr inbounds float, float* %173, i64 0, !dbg !11735
  store float %172, float* %arrayidx219, align 4, !dbg !11736
  %174 = load float*, float** %dvec2, align 8, !dbg !11737
  %arrayidx220 = getelementptr inbounds float, float* %174, i64 -3, !dbg !11737
  %175 = load float, float* %arrayidx220, align 4, !dbg !11737
  %176 = load float*, float** %dvz, align 8, !dbg !11738
  %arrayidx221 = getelementptr inbounds float, float* %176, i64 1, !dbg !11738
  store float %175, float* %arrayidx221, align 4, !dbg !11739
  br label %if.end222, !dbg !11740

if.end222:                                        ; preds = %if.then217, %cond.end212
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.then171
  br label %if.end224, !dbg !11741

if.end224:                                        ; preds = %if.end223, %lor.lhs.false164
  br label %if.end225, !dbg !11742

if.end225:                                        ; preds = %if.end224, %for.body144
  %177 = load i32, i32* %x, align 4, !dbg !11743
  %178 = load i32, i32* %xsize.addr, align 4, !dbg !11745
  %cmp226 = icmp ne i32 %177, %178, !dbg !11746
  br i1 %cmp226, label %if.then228, label %if.end366, !dbg !11747

if.then228:                                       ; preds = %if.end225
  %179 = load float*, float** %dvec1, align 8, !dbg !11748
  %arrayidx229 = getelementptr inbounds float, float* %179, i64 0, !dbg !11748
  %180 = load float, float* %arrayidx229, align 4, !dbg !11748
  %cmp230 = fcmp une float %180, 0.000000e+00, !dbg !11751
  br i1 %cmp230, label %if.then236, label %lor.lhs.false232, !dbg !11752

lor.lhs.false232:                                 ; preds = %if.then228
  %181 = load float*, float** %dvec1, align 8, !dbg !11753
  %arrayidx233 = getelementptr inbounds float, float* %181, i64 1, !dbg !11753
  %182 = load float, float* %arrayidx233, align 4, !dbg !11753
  %cmp234 = fcmp une float %182, 0.000000e+00, !dbg !11754
  br i1 %cmp234, label %if.then236, label %if.end297, !dbg !11755

if.then236:                                       ; preds = %lor.lhs.false232, %if.then228
  %183 = load i32, i32* %div145, align 4, !dbg !11756
  %cmp237 = icmp eq i32 %183, 0, !dbg !11759
  br i1 %cmp237, label %if.then239, label %if.else245, !dbg !11760

if.then239:                                       ; preds = %if.then236
  %184 = load float*, float** %dvec1, align 8, !dbg !11761
  %arrayidx240 = getelementptr inbounds float, float* %184, i64 0, !dbg !11761
  %185 = load float, float* %arrayidx240, align 4, !dbg !11761
  %186 = load float*, float** %dvz, align 8, !dbg !11763
  %arrayidx241 = getelementptr inbounds float, float* %186, i64 0, !dbg !11763
  store float %185, float* %arrayidx241, align 4, !dbg !11764
  %187 = load float*, float** %dvec1, align 8, !dbg !11765
  %arrayidx242 = getelementptr inbounds float, float* %187, i64 1, !dbg !11765
  %188 = load float, float* %arrayidx242, align 4, !dbg !11765
  %189 = load float*, float** %dvz, align 8, !dbg !11766
  %arrayidx243 = getelementptr inbounds float, float* %189, i64 1, !dbg !11766
  store float %188, float* %arrayidx243, align 4, !dbg !11767
  %190 = load i32, i32* %div145, align 4, !dbg !11768
  %inc244 = add nsw i32 %190, 1, !dbg !11768
  store i32 %inc244, i32* %div145, align 4, !dbg !11768
  br label %if.end296, !dbg !11769

if.else245:                                       ; preds = %if.then236
  %191 = load float*, float** %dvec1, align 8, !dbg !11770
  %arrayidx246 = getelementptr inbounds float, float* %191, i64 0, !dbg !11770
  %192 = load float, float* %arrayidx246, align 4, !dbg !11770
  %cmp247 = fcmp olt float %192, 0.000000e+00, !dbg !11770
  br i1 %cmp247, label %cond.true249, label %cond.false252, !dbg !11770

cond.true249:                                     ; preds = %if.else245
  %193 = load float*, float** %dvec1, align 8, !dbg !11770
  %arrayidx250 = getelementptr inbounds float, float* %193, i64 0, !dbg !11770
  %194 = load float, float* %arrayidx250, align 4, !dbg !11770
  %fneg251 = fneg float %194, !dbg !11770
  br label %cond.end254, !dbg !11770

cond.false252:                                    ; preds = %if.else245
  %195 = load float*, float** %dvec1, align 8, !dbg !11770
  %arrayidx253 = getelementptr inbounds float, float* %195, i64 0, !dbg !11770
  %196 = load float, float* %arrayidx253, align 4, !dbg !11770
  br label %cond.end254, !dbg !11770

cond.end254:                                      ; preds = %cond.false252, %cond.true249
  %cond255 = phi float [ %fneg251, %cond.true249 ], [ %196, %cond.false252 ], !dbg !11770
  %197 = load float*, float** %dvec1, align 8, !dbg !11772
  %arrayidx256 = getelementptr inbounds float, float* %197, i64 1, !dbg !11772
  %198 = load float, float* %arrayidx256, align 4, !dbg !11772
  %cmp257 = fcmp olt float %198, 0.000000e+00, !dbg !11772
  br i1 %cmp257, label %cond.true259, label %cond.false262, !dbg !11772

cond.true259:                                     ; preds = %cond.end254
  %199 = load float*, float** %dvec1, align 8, !dbg !11772
  %arrayidx260 = getelementptr inbounds float, float* %199, i64 1, !dbg !11772
  %200 = load float, float* %arrayidx260, align 4, !dbg !11772
  %fneg261 = fneg float %200, !dbg !11772
  br label %cond.end264, !dbg !11772

cond.false262:                                    ; preds = %cond.end254
  %201 = load float*, float** %dvec1, align 8, !dbg !11772
  %arrayidx263 = getelementptr inbounds float, float* %201, i64 1, !dbg !11772
  %202 = load float, float* %arrayidx263, align 4, !dbg !11772
  br label %cond.end264, !dbg !11772

cond.end264:                                      ; preds = %cond.false262, %cond.true259
  %cond265 = phi float [ %fneg261, %cond.true259 ], [ %202, %cond.false262 ], !dbg !11772
  %add266 = fadd float %cond255, %cond265, !dbg !11773
  %203 = load float*, float** %dvz, align 8, !dbg !11774
  %arrayidx267 = getelementptr inbounds float, float* %203, i64 0, !dbg !11774
  %204 = load float, float* %arrayidx267, align 4, !dbg !11774
  %cmp268 = fcmp olt float %204, 0.000000e+00, !dbg !11774
  br i1 %cmp268, label %cond.true270, label %cond.false273, !dbg !11774

cond.true270:                                     ; preds = %cond.end264
  %205 = load float*, float** %dvz, align 8, !dbg !11774
  %arrayidx271 = getelementptr inbounds float, float* %205, i64 0, !dbg !11774
  %206 = load float, float* %arrayidx271, align 4, !dbg !11774
  %fneg272 = fneg float %206, !dbg !11774
  br label %cond.end275, !dbg !11774

cond.false273:                                    ; preds = %cond.end264
  %207 = load float*, float** %dvz, align 8, !dbg !11774
  %arrayidx274 = getelementptr inbounds float, float* %207, i64 0, !dbg !11774
  %208 = load float, float* %arrayidx274, align 4, !dbg !11774
  br label %cond.end275, !dbg !11774

cond.end275:                                      ; preds = %cond.false273, %cond.true270
  %cond276 = phi float [ %fneg272, %cond.true270 ], [ %208, %cond.false273 ], !dbg !11774
  %209 = load float*, float** %dvz, align 8, !dbg !11775
  %arrayidx277 = getelementptr inbounds float, float* %209, i64 1, !dbg !11775
  %210 = load float, float* %arrayidx277, align 4, !dbg !11775
  %cmp278 = fcmp olt float %210, 0.000000e+00, !dbg !11775
  br i1 %cmp278, label %cond.true280, label %cond.false283, !dbg !11775

cond.true280:                                     ; preds = %cond.end275
  %211 = load float*, float** %dvz, align 8, !dbg !11775
  %arrayidx281 = getelementptr inbounds float, float* %211, i64 1, !dbg !11775
  %212 = load float, float* %arrayidx281, align 4, !dbg !11775
  %fneg282 = fneg float %212, !dbg !11775
  br label %cond.end285, !dbg !11775

cond.false283:                                    ; preds = %cond.end275
  %213 = load float*, float** %dvz, align 8, !dbg !11775
  %arrayidx284 = getelementptr inbounds float, float* %213, i64 1, !dbg !11775
  %214 = load float, float* %arrayidx284, align 4, !dbg !11775
  br label %cond.end285, !dbg !11775

cond.end285:                                      ; preds = %cond.false283, %cond.true280
  %cond286 = phi float [ %fneg282, %cond.true280 ], [ %214, %cond.false283 ], !dbg !11775
  %add287 = fadd float %cond276, %cond286, !dbg !11776
  %cmp288 = fcmp olt float %add266, %add287, !dbg !11777
  br i1 %cmp288, label %if.then290, label %if.end295, !dbg !11778

if.then290:                                       ; preds = %cond.end285
  %215 = load float*, float** %dvec1, align 8, !dbg !11779
  %arrayidx291 = getelementptr inbounds float, float* %215, i64 0, !dbg !11779
  %216 = load float, float* %arrayidx291, align 4, !dbg !11779
  %217 = load float*, float** %dvz, align 8, !dbg !11781
  %arrayidx292 = getelementptr inbounds float, float* %217, i64 0, !dbg !11781
  store float %216, float* %arrayidx292, align 4, !dbg !11782
  %218 = load float*, float** %dvec1, align 8, !dbg !11783
  %arrayidx293 = getelementptr inbounds float, float* %218, i64 1, !dbg !11783
  %219 = load float, float* %arrayidx293, align 4, !dbg !11783
  %220 = load float*, float** %dvz, align 8, !dbg !11784
  %arrayidx294 = getelementptr inbounds float, float* %220, i64 1, !dbg !11784
  store float %219, float* %arrayidx294, align 4, !dbg !11785
  br label %if.end295, !dbg !11786

if.end295:                                        ; preds = %if.then290, %cond.end285
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.then239
  br label %if.end297, !dbg !11787

if.end297:                                        ; preds = %if.end296, %lor.lhs.false232
  %221 = load float*, float** %dvec2, align 8, !dbg !11788
  %arrayidx298 = getelementptr inbounds float, float* %221, i64 0, !dbg !11788
  %222 = load float, float* %arrayidx298, align 4, !dbg !11788
  %cmp299 = fcmp une float %222, 0.000000e+00, !dbg !11790
  br i1 %cmp299, label %if.then305, label %lor.lhs.false301, !dbg !11791

lor.lhs.false301:                                 ; preds = %if.end297
  %223 = load float*, float** %dvec2, align 8, !dbg !11792
  %arrayidx302 = getelementptr inbounds float, float* %223, i64 1, !dbg !11792
  %224 = load float, float* %arrayidx302, align 4, !dbg !11792
  %cmp303 = fcmp une float %224, 0.000000e+00, !dbg !11793
  br i1 %cmp303, label %if.then305, label %if.end365, !dbg !11794

if.then305:                                       ; preds = %lor.lhs.false301, %if.end297
  %225 = load i32, i32* %div145, align 4, !dbg !11795
  %cmp306 = icmp eq i32 %225, 0, !dbg !11798
  br i1 %cmp306, label %if.then308, label %if.else313, !dbg !11799

if.then308:                                       ; preds = %if.then305
  %226 = load float*, float** %dvec2, align 8, !dbg !11800
  %arrayidx309 = getelementptr inbounds float, float* %226, i64 0, !dbg !11800
  %227 = load float, float* %arrayidx309, align 4, !dbg !11800
  %228 = load float*, float** %dvz, align 8, !dbg !11802
  %arrayidx310 = getelementptr inbounds float, float* %228, i64 0, !dbg !11802
  store float %227, float* %arrayidx310, align 4, !dbg !11803
  %229 = load float*, float** %dvec2, align 8, !dbg !11804
  %arrayidx311 = getelementptr inbounds float, float* %229, i64 1, !dbg !11804
  %230 = load float, float* %arrayidx311, align 4, !dbg !11804
  %231 = load float*, float** %dvz, align 8, !dbg !11805
  %arrayidx312 = getelementptr inbounds float, float* %231, i64 1, !dbg !11805
  store float %230, float* %arrayidx312, align 4, !dbg !11806
  br label %if.end364, !dbg !11807

if.else313:                                       ; preds = %if.then305
  %232 = load float*, float** %dvec2, align 8, !dbg !11808
  %arrayidx314 = getelementptr inbounds float, float* %232, i64 0, !dbg !11808
  %233 = load float, float* %arrayidx314, align 4, !dbg !11808
  %cmp315 = fcmp olt float %233, 0.000000e+00, !dbg !11808
  br i1 %cmp315, label %cond.true317, label %cond.false320, !dbg !11808

cond.true317:                                     ; preds = %if.else313
  %234 = load float*, float** %dvec2, align 8, !dbg !11808
  %arrayidx318 = getelementptr inbounds float, float* %234, i64 0, !dbg !11808
  %235 = load float, float* %arrayidx318, align 4, !dbg !11808
  %fneg319 = fneg float %235, !dbg !11808
  br label %cond.end322, !dbg !11808

cond.false320:                                    ; preds = %if.else313
  %236 = load float*, float** %dvec2, align 8, !dbg !11808
  %arrayidx321 = getelementptr inbounds float, float* %236, i64 0, !dbg !11808
  %237 = load float, float* %arrayidx321, align 4, !dbg !11808
  br label %cond.end322, !dbg !11808

cond.end322:                                      ; preds = %cond.false320, %cond.true317
  %cond323 = phi float [ %fneg319, %cond.true317 ], [ %237, %cond.false320 ], !dbg !11808
  %238 = load float*, float** %dvec2, align 8, !dbg !11810
  %arrayidx324 = getelementptr inbounds float, float* %238, i64 1, !dbg !11810
  %239 = load float, float* %arrayidx324, align 4, !dbg !11810
  %cmp325 = fcmp olt float %239, 0.000000e+00, !dbg !11810
  br i1 %cmp325, label %cond.true327, label %cond.false330, !dbg !11810

cond.true327:                                     ; preds = %cond.end322
  %240 = load float*, float** %dvec2, align 8, !dbg !11810
  %arrayidx328 = getelementptr inbounds float, float* %240, i64 1, !dbg !11810
  %241 = load float, float* %arrayidx328, align 4, !dbg !11810
  %fneg329 = fneg float %241, !dbg !11810
  br label %cond.end332, !dbg !11810

cond.false330:                                    ; preds = %cond.end322
  %242 = load float*, float** %dvec2, align 8, !dbg !11810
  %arrayidx331 = getelementptr inbounds float, float* %242, i64 1, !dbg !11810
  %243 = load float, float* %arrayidx331, align 4, !dbg !11810
  br label %cond.end332, !dbg !11810

cond.end332:                                      ; preds = %cond.false330, %cond.true327
  %cond333 = phi float [ %fneg329, %cond.true327 ], [ %243, %cond.false330 ], !dbg !11810
  %add334 = fadd float %cond323, %cond333, !dbg !11811
  %244 = load float*, float** %dvz, align 8, !dbg !11812
  %arrayidx335 = getelementptr inbounds float, float* %244, i64 0, !dbg !11812
  %245 = load float, float* %arrayidx335, align 4, !dbg !11812
  %cmp336 = fcmp olt float %245, 0.000000e+00, !dbg !11812
  br i1 %cmp336, label %cond.true338, label %cond.false341, !dbg !11812

cond.true338:                                     ; preds = %cond.end332
  %246 = load float*, float** %dvz, align 8, !dbg !11812
  %arrayidx339 = getelementptr inbounds float, float* %246, i64 0, !dbg !11812
  %247 = load float, float* %arrayidx339, align 4, !dbg !11812
  %fneg340 = fneg float %247, !dbg !11812
  br label %cond.end343, !dbg !11812

cond.false341:                                    ; preds = %cond.end332
  %248 = load float*, float** %dvz, align 8, !dbg !11812
  %arrayidx342 = getelementptr inbounds float, float* %248, i64 0, !dbg !11812
  %249 = load float, float* %arrayidx342, align 4, !dbg !11812
  br label %cond.end343, !dbg !11812

cond.end343:                                      ; preds = %cond.false341, %cond.true338
  %cond344 = phi float [ %fneg340, %cond.true338 ], [ %249, %cond.false341 ], !dbg !11812
  %250 = load float*, float** %dvz, align 8, !dbg !11813
  %arrayidx345 = getelementptr inbounds float, float* %250, i64 1, !dbg !11813
  %251 = load float, float* %arrayidx345, align 4, !dbg !11813
  %cmp346 = fcmp olt float %251, 0.000000e+00, !dbg !11813
  br i1 %cmp346, label %cond.true348, label %cond.false351, !dbg !11813

cond.true348:                                     ; preds = %cond.end343
  %252 = load float*, float** %dvz, align 8, !dbg !11813
  %arrayidx349 = getelementptr inbounds float, float* %252, i64 1, !dbg !11813
  %253 = load float, float* %arrayidx349, align 4, !dbg !11813
  %fneg350 = fneg float %253, !dbg !11813
  br label %cond.end353, !dbg !11813

cond.false351:                                    ; preds = %cond.end343
  %254 = load float*, float** %dvz, align 8, !dbg !11813
  %arrayidx352 = getelementptr inbounds float, float* %254, i64 1, !dbg !11813
  %255 = load float, float* %arrayidx352, align 4, !dbg !11813
  br label %cond.end353, !dbg !11813

cond.end353:                                      ; preds = %cond.false351, %cond.true348
  %cond354 = phi float [ %fneg350, %cond.true348 ], [ %255, %cond.false351 ], !dbg !11813
  %add355 = fadd float %cond344, %cond354, !dbg !11814
  %cmp356 = fcmp olt float %add334, %add355, !dbg !11815
  br i1 %cmp356, label %if.then358, label %if.end363, !dbg !11816

if.then358:                                       ; preds = %cond.end353
  %256 = load float*, float** %dvec2, align 8, !dbg !11817
  %arrayidx359 = getelementptr inbounds float, float* %256, i64 0, !dbg !11817
  %257 = load float, float* %arrayidx359, align 4, !dbg !11817
  %258 = load float*, float** %dvz, align 8, !dbg !11819
  %arrayidx360 = getelementptr inbounds float, float* %258, i64 0, !dbg !11819
  store float %257, float* %arrayidx360, align 4, !dbg !11820
  %259 = load float*, float** %dvec2, align 8, !dbg !11821
  %arrayidx361 = getelementptr inbounds float, float* %259, i64 1, !dbg !11821
  %260 = load float, float* %arrayidx361, align 4, !dbg !11821
  %261 = load float*, float** %dvz, align 8, !dbg !11822
  %arrayidx362 = getelementptr inbounds float, float* %261, i64 1, !dbg !11822
  store float %260, float* %arrayidx362, align 4, !dbg !11823
  br label %if.end363, !dbg !11824

if.end363:                                        ; preds = %if.then358, %cond.end353
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then308
  br label %if.end365, !dbg !11825

if.end365:                                        ; preds = %if.end364, %lor.lhs.false301
  br label %if.end366, !dbg !11826

if.end366:                                        ; preds = %if.end365, %if.end225
  %262 = load i32, i32* %maxspeed4, align 4, !dbg !11827
  %tobool367 = icmp ne i32 %262, 0, !dbg !11827
  br i1 %tobool367, label %if.then368, label %if.end388, !dbg !11829

if.then368:                                       ; preds = %if.end366
  call void @llvm.dbg.declare(metadata float* %speedsq369, metadata !11830, metadata !DIExpression()), !dbg !11832
  %263 = load float*, float** %dvz, align 8, !dbg !11833
  %arrayidx370 = getelementptr inbounds float, float* %263, i64 0, !dbg !11833
  %264 = load float, float* %arrayidx370, align 4, !dbg !11833
  %265 = load float*, float** %dvz, align 8, !dbg !11834
  %arrayidx371 = getelementptr inbounds float, float* %265, i64 0, !dbg !11834
  %266 = load float, float* %arrayidx371, align 4, !dbg !11834
  %mul372 = fmul float %264, %266, !dbg !11835
  %267 = load float*, float** %dvz, align 8, !dbg !11836
  %arrayidx373 = getelementptr inbounds float, float* %267, i64 1, !dbg !11836
  %268 = load float, float* %arrayidx373, align 4, !dbg !11836
  %269 = load float*, float** %dvz, align 8, !dbg !11837
  %arrayidx374 = getelementptr inbounds float, float* %269, i64 1, !dbg !11837
  %270 = load float, float* %arrayidx374, align 4, !dbg !11837
  %mul375 = fmul float %268, %270, !dbg !11838
  %add376 = fadd float %mul372, %mul375, !dbg !11839
  store float %add376, float* %speedsq369, align 4, !dbg !11832
  %271 = load float, float* %speedsq369, align 4, !dbg !11840
  %272 = load float, float* %maxspeedsq, align 4, !dbg !11842
  %cmp377 = fcmp ogt float %271, %272, !dbg !11843
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !11844

if.then379:                                       ; preds = %if.then368
  %273 = load i32, i32* %maxspeed4, align 4, !dbg !11845
  %conv380 = sitofp i32 %273 to float, !dbg !11847
  %274 = load float, float* %speedsq369, align 4, !dbg !11848
  %call381 = call float @sqrtf(float %274) #5, !dbg !11849
  %div382 = fdiv float %conv380, %call381, !dbg !11850
  store float %div382, float* %speedsq369, align 4, !dbg !11851
  %275 = load float, float* %speedsq369, align 4, !dbg !11852
  %276 = load float*, float** %dvz, align 8, !dbg !11853
  %arrayidx383 = getelementptr inbounds float, float* %276, i64 0, !dbg !11853
  %277 = load float, float* %arrayidx383, align 4, !dbg !11854
  %mul384 = fmul float %277, %275, !dbg !11854
  store float %mul384, float* %arrayidx383, align 4, !dbg !11854
  %278 = load float, float* %speedsq369, align 4, !dbg !11855
  %279 = load float*, float** %dvz, align 8, !dbg !11856
  %arrayidx385 = getelementptr inbounds float, float* %279, i64 1, !dbg !11856
  %280 = load float, float* %arrayidx385, align 4, !dbg !11857
  %mul386 = fmul float %280, %278, !dbg !11857
  store float %mul386, float* %arrayidx385, align 4, !dbg !11857
  br label %if.end387, !dbg !11858

if.end387:                                        ; preds = %if.then379, %if.then368
  br label %if.end388, !dbg !11859

if.end388:                                        ; preds = %if.end387, %if.end366
  br label %for.inc389, !dbg !11860

for.inc389:                                       ; preds = %if.end388
  %281 = load i32, i32* %step, align 4, !dbg !11861
  %inc390 = add nsw i32 %281, 1, !dbg !11861
  store i32 %inc390, i32* %step, align 4, !dbg !11861
  %282 = load float*, float** %dvec1, align 8, !dbg !11862
  %add.ptr391 = getelementptr inbounds float, float* %282, i64 2, !dbg !11862
  store float* %add.ptr391, float** %dvec1, align 8, !dbg !11862
  %283 = load float*, float** %dvec2, align 8, !dbg !11863
  %add.ptr392 = getelementptr inbounds float, float* %283, i64 2, !dbg !11863
  store float* %add.ptr392, float** %dvec2, align 8, !dbg !11863
  %284 = load float*, float** %dvz, align 8, !dbg !11864
  %add.ptr393 = getelementptr inbounds float, float* %284, i64 2, !dbg !11864
  store float* %add.ptr393, float** %dvz, align 8, !dbg !11864
  br label %for.cond141, !dbg !11865, !llvm.loop !11866

for.end394:                                       ; preds = %for.cond141
  br label %for.inc395, !dbg !11868

for.inc395:                                       ; preds = %for.end394
  %285 = load i32, i32* %x, align 4, !dbg !11869
  %inc396 = add nsw i32 %285, 1, !dbg !11869
  store i32 %inc396, i32* %x, align 4, !dbg !11869
  br label %for.cond137, !dbg !11870, !llvm.loop !11871

for.end397:                                       ; preds = %for.cond137
  br label %for.inc398, !dbg !11873

for.inc398:                                       ; preds = %for.end397
  %286 = load i32, i32* %y, align 4, !dbg !11874
  %inc399 = add nsw i32 %286, 1, !dbg !11874
  store i32 %inc399, i32* %y, align 4, !dbg !11874
  br label %for.cond106, !dbg !11875, !llvm.loop !11876

for.end400:                                       ; preds = %for.cond106
  %287 = load float*, float** %rectvz, align 8, !dbg !11878
  store float* %287, float** %dz1, align 8, !dbg !11879
  %288 = load float*, float** %rectvz, align 8, !dbg !11880
  %289 = load i32, i32* %ysize.addr, align 4, !dbg !11881
  %mul401 = mul nsw i32 4, %289, !dbg !11882
  %290 = load i32, i32* %xsize.addr, align 4, !dbg !11883
  %add402 = add nsw i32 %290, 1, !dbg !11884
  %mul403 = mul nsw i32 %mul401, %add402, !dbg !11885
  %idx.ext404 = sext i32 %mul403 to i64, !dbg !11886
  %add.ptr405 = getelementptr inbounds float, float* %288, i64 %idx.ext404, !dbg !11886
  store float* %add.ptr405, float** %dz2, align 8, !dbg !11887
  store i32 0, i32* %x, align 4, !dbg !11888
  br label %for.cond406, !dbg !11890

for.cond406:                                      ; preds = %for.inc414, %for.end400
  %291 = load i32, i32* %x, align 4, !dbg !11891
  %292 = load i32, i32* %xsize.addr, align 4, !dbg !11893
  %cmp407 = icmp sle i32 %291, %292, !dbg !11894
  br i1 %cmp407, label %for.body409, label %for.end418, !dbg !11895

for.body409:                                      ; preds = %for.cond406
  %293 = load float*, float** %dz1, align 8, !dbg !11896
  %arrayidx410 = getelementptr inbounds float, float* %293, i64 1, !dbg !11896
  store float 0.000000e+00, float* %arrayidx410, align 4, !dbg !11898
  %294 = load float*, float** %dz2, align 8, !dbg !11899
  %arrayidx411 = getelementptr inbounds float, float* %294, i64 1, !dbg !11899
  store float 0.000000e+00, float* %arrayidx411, align 4, !dbg !11900
  %295 = load float*, float** %dz1, align 8, !dbg !11901
  %arrayidx412 = getelementptr inbounds float, float* %295, i64 3, !dbg !11901
  store float 0.000000e+00, float* %arrayidx412, align 4, !dbg !11902
  %296 = load float*, float** %dz2, align 8, !dbg !11903
  %arrayidx413 = getelementptr inbounds float, float* %296, i64 3, !dbg !11903
  store float 0.000000e+00, float* %arrayidx413, align 4, !dbg !11904
  br label %for.inc414, !dbg !11905

for.inc414:                                       ; preds = %for.body409
  %297 = load i32, i32* %x, align 4, !dbg !11906
  %inc415 = add nsw i32 %297, 1, !dbg !11906
  store i32 %inc415, i32* %x, align 4, !dbg !11906
  %298 = load float*, float** %dz1, align 8, !dbg !11907
  %add.ptr416 = getelementptr inbounds float, float* %298, i64 4, !dbg !11907
  store float* %add.ptr416, float** %dz1, align 8, !dbg !11907
  %299 = load float*, float** %dz2, align 8, !dbg !11908
  %add.ptr417 = getelementptr inbounds float, float* %299, i64 4, !dbg !11908
  store float* %add.ptr417, float** %dz2, align 8, !dbg !11908
  br label %for.cond406, !dbg !11909, !llvm.loop !11910

for.end418:                                       ; preds = %for.cond406
  %300 = load float*, float** %rectvz, align 8, !dbg !11912
  store float* %300, float** %dz1, align 8, !dbg !11913
  %301 = load float*, float** %rectvz, align 8, !dbg !11914
  %302 = load i32, i32* %xsize.addr, align 4, !dbg !11915
  %mul419 = mul nsw i32 4, %302, !dbg !11916
  %idx.ext420 = sext i32 %mul419 to i64, !dbg !11917
  %add.ptr421 = getelementptr inbounds float, float* %301, i64 %idx.ext420, !dbg !11917
  store float* %add.ptr421, float** %dz2, align 8, !dbg !11918
  store i32 0, i32* %y, align 4, !dbg !11919
  br label %for.cond422, !dbg !11921

for.cond422:                                      ; preds = %for.inc430, %for.end418
  %303 = load i32, i32* %y, align 4, !dbg !11922
  %304 = load i32, i32* %ysize.addr, align 4, !dbg !11924
  %cmp423 = icmp sle i32 %303, %304, !dbg !11925
  br i1 %cmp423, label %for.body425, label %for.end440, !dbg !11926

for.body425:                                      ; preds = %for.cond422
  %305 = load float*, float** %dz1, align 8, !dbg !11927
  %arrayidx426 = getelementptr inbounds float, float* %305, i64 0, !dbg !11927
  store float 0.000000e+00, float* %arrayidx426, align 4, !dbg !11929
  %306 = load float*, float** %dz2, align 8, !dbg !11930
  %arrayidx427 = getelementptr inbounds float, float* %306, i64 0, !dbg !11930
  store float 0.000000e+00, float* %arrayidx427, align 4, !dbg !11931
  %307 = load float*, float** %dz1, align 8, !dbg !11932
  %arrayidx428 = getelementptr inbounds float, float* %307, i64 2, !dbg !11932
  store float 0.000000e+00, float* %arrayidx428, align 4, !dbg !11933
  %308 = load float*, float** %dz2, align 8, !dbg !11934
  %arrayidx429 = getelementptr inbounds float, float* %308, i64 2, !dbg !11934
  store float 0.000000e+00, float* %arrayidx429, align 4, !dbg !11935
  br label %for.inc430, !dbg !11936

for.inc430:                                       ; preds = %for.body425
  %309 = load i32, i32* %y, align 4, !dbg !11937
  %inc431 = add nsw i32 %309, 1, !dbg !11937
  store i32 %inc431, i32* %y, align 4, !dbg !11937
  %310 = load i32, i32* %xsize.addr, align 4, !dbg !11938
  %add432 = add nsw i32 %310, 1, !dbg !11939
  %mul433 = mul nsw i32 4, %add432, !dbg !11940
  %311 = load float*, float** %dz1, align 8, !dbg !11941
  %idx.ext434 = sext i32 %mul433 to i64, !dbg !11941
  %add.ptr435 = getelementptr inbounds float, float* %311, i64 %idx.ext434, !dbg !11941
  store float* %add.ptr435, float** %dz1, align 8, !dbg !11941
  %312 = load i32, i32* %xsize.addr, align 4, !dbg !11942
  %add436 = add nsw i32 %312, 1, !dbg !11943
  %mul437 = mul nsw i32 4, %add436, !dbg !11944
  %313 = load float*, float** %dz2, align 8, !dbg !11945
  %idx.ext438 = sext i32 %mul437 to i64, !dbg !11945
  %add.ptr439 = getelementptr inbounds float, float* %313, i64 %idx.ext438, !dbg !11945
  store float* %add.ptr439, float** %dz2, align 8, !dbg !11945
  br label %for.cond422, !dbg !11946, !llvm.loop !11947

for.end440:                                       ; preds = %for.cond422
  %314 = load i8*, i8** %rectmove, align 8, !dbg !11949
  store i8* %314, i8** %dm, align 8, !dbg !11950
  %315 = load float*, float** %vecbufrect.addr, align 8, !dbg !11951
  store float* %315, float** %dvec1, align 8, !dbg !11952
  %316 = load i32, i32* %xsize.addr, align 4, !dbg !11953
  %317 = load i32, i32* %ysize.addr, align 4, !dbg !11955
  %mul441 = mul nsw i32 %316, %317, !dbg !11956
  store i32 %mul441, i32* %x, align 4, !dbg !11957
  br label %for.cond442, !dbg !11958

for.cond442:                                      ; preds = %for.inc463, %for.end440
  %318 = load i32, i32* %x, align 4, !dbg !11959
  %cmp443 = icmp sgt i32 %318, 0, !dbg !11961
  br i1 %cmp443, label %for.body445, label %for.end467, !dbg !11962

for.body445:                                      ; preds = %for.cond442
  %319 = load float*, float** %dvec1, align 8, !dbg !11963
  %arrayidx446 = getelementptr inbounds float, float* %319, i64 0, !dbg !11963
  %320 = load float, float* %arrayidx446, align 4, !dbg !11963
  %cmp447 = fcmp une float %320, 0.000000e+00, !dbg !11966
  br i1 %cmp447, label %if.then461, label %lor.lhs.false449, !dbg !11967

lor.lhs.false449:                                 ; preds = %for.body445
  %321 = load float*, float** %dvec1, align 8, !dbg !11968
  %arrayidx450 = getelementptr inbounds float, float* %321, i64 1, !dbg !11968
  %322 = load float, float* %arrayidx450, align 4, !dbg !11968
  %cmp451 = fcmp une float %322, 0.000000e+00, !dbg !11969
  br i1 %cmp451, label %if.then461, label %lor.lhs.false453, !dbg !11970

lor.lhs.false453:                                 ; preds = %lor.lhs.false449
  %323 = load float*, float** %dvec1, align 8, !dbg !11971
  %arrayidx454 = getelementptr inbounds float, float* %323, i64 2, !dbg !11971
  %324 = load float, float* %arrayidx454, align 4, !dbg !11971
  %cmp455 = fcmp une float %324, 0.000000e+00, !dbg !11972
  br i1 %cmp455, label %if.then461, label %lor.lhs.false457, !dbg !11973

lor.lhs.false457:                                 ; preds = %lor.lhs.false453
  %325 = load float*, float** %dvec1, align 8, !dbg !11974
  %arrayidx458 = getelementptr inbounds float, float* %325, i64 3, !dbg !11974
  %326 = load float, float* %arrayidx458, align 4, !dbg !11974
  %cmp459 = fcmp une float %326, 0.000000e+00, !dbg !11975
  br i1 %cmp459, label %if.then461, label %if.end462, !dbg !11976

if.then461:                                       ; preds = %lor.lhs.false457, %lor.lhs.false453, %lor.lhs.false449, %for.body445
  %327 = load i8*, i8** %dm, align 8, !dbg !11977
  store i8 -1, i8* %327, align 1, !dbg !11978
  br label %if.end462, !dbg !11979

if.end462:                                        ; preds = %if.then461, %lor.lhs.false457
  br label %for.inc463, !dbg !11980

for.inc463:                                       ; preds = %if.end462
  %328 = load i32, i32* %x, align 4, !dbg !11981
  %dec464 = add nsw i32 %328, -1, !dbg !11981
  store i32 %dec464, i32* %x, align 4, !dbg !11981
  %329 = load i8*, i8** %dm, align 8, !dbg !11982
  %incdec.ptr465 = getelementptr inbounds i8, i8* %329, i32 1, !dbg !11982
  store i8* %incdec.ptr465, i8** %dm, align 8, !dbg !11982
  %330 = load float*, float** %dvec1, align 8, !dbg !11983
  %add.ptr466 = getelementptr inbounds float, float* %330, i64 4, !dbg !11983
  store float* %add.ptr466, float** %dvec1, align 8, !dbg !11983
  br label %for.cond442, !dbg !11984, !llvm.loop !11985

for.end467:                                       ; preds = %for.cond442
  %331 = load i32, i32* %xsize.addr, align 4, !dbg !11987
  %332 = load i32, i32* %ysize.addr, align 4, !dbg !11988
  %333 = load i8*, i8** %rectmove, align 8, !dbg !11989
  call void @antialias_tagbuf(i32 %331, i32 %332, i8* %333), !dbg !11990
  %334 = load i32, i32* @RE_zbuf_accumulate_vecblur.firsttime, align 4, !dbg !11991
  %tobool468 = icmp ne i32 %334, 0, !dbg !11991
  br i1 %tobool468, label %if.then469, label %if.end470, !dbg !11993

if.then469:                                       ; preds = %for.end467
  store i32 0, i32* @RE_zbuf_accumulate_vecblur.firsttime, align 4, !dbg !11994
  call void @BLI_jitter_init([2 x float]* getelementptr inbounds ([256 x [2 x float]], [256 x [2 x float]]* @RE_zbuf_accumulate_vecblur.jit, i64 0, i64 0), i32 256), !dbg !11996
  br label %if.end470, !dbg !11997

if.end470:                                        ; preds = %if.then469, %for.end467
  %335 = load float*, float** %newrect.addr, align 8, !dbg !11998
  %336 = bitcast float* %335 to i8*, !dbg !11999
  %337 = load i32, i32* %xsize.addr, align 4, !dbg !12000
  %conv471 = sext i32 %337 to i64, !dbg !12000
  %mul472 = mul i64 4, %conv471, !dbg !12001
  %338 = load i32, i32* %ysize.addr, align 4, !dbg !12002
  %conv473 = sext i32 %338 to i64, !dbg !12002
  %mul474 = mul i64 %mul472, %conv473, !dbg !12003
  %mul475 = mul i64 %mul474, 4, !dbg !12004
  call void @llvm.memset.p0i8.i64(i8* align 4 %336, i8 0, i64 %mul475, i1 false), !dbg !11999
  %339 = load i32, i32* %samples, align 4, !dbg !12005
  %div476 = sdiv i32 %339, 2, !dbg !12005
  store i32 %div476, i32* %samples, align 4, !dbg !12005
  store i32 1, i32* %step, align 4, !dbg !12006
  br label %for.cond477, !dbg !12008

for.cond477:                                      ; preds = %for.inc747, %if.end470
  %340 = load i32, i32* %step, align 4, !dbg !12009
  %341 = load i32, i32* %samples, align 4, !dbg !12011
  %cmp478 = icmp sle i32 %340, %341, !dbg !12012
  br i1 %cmp478, label %for.body480, label %for.end749, !dbg !12013

for.body480:                                      ; preds = %for.cond477
  call void @llvm.dbg.declare(metadata float* %speedfac, metadata !12014, metadata !DIExpression()), !dbg !12016
  %342 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !12017
  %fac = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %342, i32 0, i32 8, !dbg !12018
  %343 = load float, float* %fac, align 4, !dbg !12018
  %mul481 = fmul float 5.000000e-01, %343, !dbg !12019
  %344 = load i32, i32* %step, align 4, !dbg !12020
  %conv482 = sitofp i32 %344 to float, !dbg !12021
  %mul483 = fmul float %mul481, %conv482, !dbg !12022
  %345 = load i32, i32* %samples, align 4, !dbg !12023
  %add484 = add nsw i32 %345, 1, !dbg !12024
  %conv485 = sitofp i32 %add484 to float, !dbg !12025
  %div486 = fdiv float %mul483, %conv485, !dbg !12026
  store float %div486, float* %speedfac, align 4, !dbg !12016
  call void @llvm.dbg.declare(metadata i32* %side, metadata !12027, metadata !DIExpression()), !dbg !12028
  store i32 0, i32* %side, align 4, !dbg !12029
  br label %for.cond487, !dbg !12031

for.cond487:                                      ; preds = %for.inc744, %for.body480
  %346 = load i32, i32* %side, align 4, !dbg !12032
  %cmp488 = icmp slt i32 %346, 2, !dbg !12034
  br i1 %cmp488, label %for.body490, label %for.end746, !dbg !12035

for.body490:                                      ; preds = %for.cond487
  call void @llvm.dbg.declare(metadata float* %blendfac, metadata !12036, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.declare(metadata [4 x float]* %ipodata, metadata !12039, metadata !DIExpression()), !dbg !12040
  %347 = load i32, i32* %xsize.addr, align 4, !dbg !12041
  %348 = load i32, i32* %ysize.addr, align 4, !dbg !12044
  %mul491 = mul nsw i32 %347, %348, !dbg !12045
  %sub492 = sub nsw i32 %mul491, 1, !dbg !12046
  store i32 %sub492, i32* %x, align 4, !dbg !12047
  br label %for.cond493, !dbg !12048

for.cond493:                                      ; preds = %for.inc510, %for.body490
  %349 = load i32, i32* %x, align 4, !dbg !12049
  %cmp494 = icmp sge i32 %349, 0, !dbg !12051
  br i1 %cmp494, label %for.body496, label %for.end512, !dbg !12052

for.body496:                                      ; preds = %for.cond493
  %350 = load i8*, i8** %rectmove, align 8, !dbg !12053
  %351 = load i32, i32* %x, align 4, !dbg !12056
  %idxprom = sext i32 %351 to i64, !dbg !12053
  %arrayidx497 = getelementptr inbounds i8, i8* %350, i64 %idxprom, !dbg !12053
  %352 = load i8, i8* %arrayidx497, align 1, !dbg !12053
  %conv498 = zext i8 %352 to i32, !dbg !12053
  %cmp499 = icmp eq i32 %conv498, 0, !dbg !12057
  br i1 %cmp499, label %if.then501, label %if.else506, !dbg !12058

if.then501:                                       ; preds = %for.body496
  %353 = load float*, float** %zbufrect.addr, align 8, !dbg !12059
  %354 = load i32, i32* %x, align 4, !dbg !12060
  %idxprom502 = sext i32 %354 to i64, !dbg !12059
  %arrayidx503 = getelementptr inbounds float, float* %353, i64 %idxprom502, !dbg !12059
  %355 = load float, float* %arrayidx503, align 4, !dbg !12059
  %356 = load float*, float** %rectz, align 8, !dbg !12061
  %357 = load i32, i32* %x, align 4, !dbg !12062
  %idxprom504 = sext i32 %357 to i64, !dbg !12061
  %arrayidx505 = getelementptr inbounds float, float* %356, i64 %idxprom504, !dbg !12061
  store float %355, float* %arrayidx505, align 4, !dbg !12063
  br label %if.end509, !dbg !12061

if.else506:                                       ; preds = %for.body496
  %358 = load float*, float** %rectz, align 8, !dbg !12064
  %359 = load i32, i32* %x, align 4, !dbg !12065
  %idxprom507 = sext i32 %359 to i64, !dbg !12064
  %arrayidx508 = getelementptr inbounds float, float* %358, i64 %idxprom507, !dbg !12064
  store float 0x4376345780000000, float* %arrayidx508, align 4, !dbg !12066
  br label %if.end509

if.end509:                                        ; preds = %if.else506, %if.then501
  br label %for.inc510, !dbg !12067

for.inc510:                                       ; preds = %if.end509
  %360 = load i32, i32* %x, align 4, !dbg !12068
  %dec511 = add nsw i32 %360, -1, !dbg !12068
  store i32 %dec511, i32* %x, align 4, !dbg !12068
  br label %for.cond493, !dbg !12069, !llvm.loop !12070

for.end512:                                       ; preds = %for.cond493
  %361 = load i32, i32* %xsize.addr, align 4, !dbg !12072
  %362 = load i32, i32* %ysize.addr, align 4, !dbg !12074
  %mul513 = mul nsw i32 %361, %362, !dbg !12075
  %sub514 = sub nsw i32 %mul513, 1, !dbg !12076
  store i32 %sub514, i32* %x, align 4, !dbg !12077
  br label %for.cond515, !dbg !12078

for.cond515:                                      ; preds = %for.inc521, %for.end512
  %363 = load i32, i32* %x, align 4, !dbg !12079
  %cmp516 = icmp sge i32 %363, 0, !dbg !12081
  br i1 %cmp516, label %for.body518, label %for.end523, !dbg !12082

for.body518:                                      ; preds = %for.cond515
  %364 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectdraw, align 8, !dbg !12083
  %365 = load i32, i32* %x, align 4, !dbg !12084
  %idxprom519 = sext i32 %365 to i64, !dbg !12083
  %arrayidx520 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %364, i64 %idxprom519, !dbg !12083
  %colpoin = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %arrayidx520, i32 0, i32 0, !dbg !12085
  store float* null, float** %colpoin, align 8, !dbg !12086
  br label %for.inc521, !dbg !12083

for.inc521:                                       ; preds = %for.body518
  %366 = load i32, i32* %x, align 4, !dbg !12087
  %dec522 = add nsw i32 %366, -1, !dbg !12087
  store i32 %dec522, i32* %x, align 4, !dbg !12087
  br label %for.cond515, !dbg !12088, !llvm.loop !12089

for.end523:                                       ; preds = %for.cond515
  %367 = load float*, float** %imgrect.addr, align 8, !dbg !12091
  store float* %367, float** %dimg, align 8, !dbg !12092
  %368 = load i8*, i8** %rectmove, align 8, !dbg !12093
  store i8* %368, i8** %dm, align 8, !dbg !12094
  %369 = load float*, float** %zbufrect.addr, align 8, !dbg !12095
  store float* %369, float** %dz, align 8, !dbg !12096
  %370 = load float*, float** %rectvz, align 8, !dbg !12097
  store float* %370, float** %dz1, align 8, !dbg !12098
  %371 = load float*, float** %rectvz, align 8, !dbg !12099
  %372 = load i32, i32* %xsize.addr, align 4, !dbg !12100
  %add524 = add nsw i32 %372, 1, !dbg !12101
  %mul525 = mul nsw i32 4, %add524, !dbg !12102
  %idx.ext526 = sext i32 %mul525 to i64, !dbg !12103
  %add.ptr527 = getelementptr inbounds float, float* %371, i64 %idx.ext526, !dbg !12103
  store float* %add.ptr527, float** %dz2, align 8, !dbg !12104
  %373 = load i32, i32* %side, align 4, !dbg !12105
  %tobool528 = icmp ne i32 %373, 0, !dbg !12105
  br i1 %tobool528, label %if.then529, label %if.end538, !dbg !12107

if.then529:                                       ; preds = %for.end523
  %374 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !12108
  %curved = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %374, i32 0, i32 7, !dbg !12111
  %375 = load i16, i16* %curved, align 2, !dbg !12111
  %conv530 = sext i16 %375 to i32, !dbg !12108
  %cmp531 = icmp eq i32 %conv530, 0, !dbg !12112
  br i1 %cmp531, label %if.then533, label %if.end536, !dbg !12113

if.then533:                                       ; preds = %if.then529
  %376 = load float*, float** %dz1, align 8, !dbg !12114
  %add.ptr534 = getelementptr inbounds float, float* %376, i64 2, !dbg !12114
  store float* %add.ptr534, float** %dz1, align 8, !dbg !12114
  %377 = load float*, float** %dz2, align 8, !dbg !12116
  %add.ptr535 = getelementptr inbounds float, float* %377, i64 2, !dbg !12116
  store float* %add.ptr535, float** %dz2, align 8, !dbg !12116
  br label %if.end536, !dbg !12117

if.end536:                                        ; preds = %if.then533, %if.then529
  %378 = load float, float* %speedfac, align 4, !dbg !12118
  %fneg537 = fneg float %378, !dbg !12119
  store float %fneg537, float* %speedfac, align 4, !dbg !12120
  br label %if.end538, !dbg !12121

if.end538:                                        ; preds = %if.end536, %for.end523
  %379 = load float, float* %speedfac, align 4, !dbg !12122
  %mul539 = fmul float 5.000000e-01, %379, !dbg !12123
  %add540 = fadd float 5.000000e-01, %mul539, !dbg !12124
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %ipodata, i64 0, i64 0, !dbg !12125
  call void @set_quad_bezier_ipo(float %add540, float* %arraydecay), !dbg !12126
  %380 = load i32, i32* %step, align 4, !dbg !12127
  %and = and i32 %380, 255, !dbg !12129
  %idxprom541 = sext i32 %and to i64, !dbg !12130
  %arrayidx542 = getelementptr inbounds [256 x [2 x float]], [256 x [2 x float]]* @RE_zbuf_accumulate_vecblur.jit, i64 0, i64 %idxprom541, !dbg !12130
  %arrayidx543 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx542, i64 0, i64 0, !dbg !12130
  %381 = load float, float* %arrayidx543, align 8, !dbg !12130
  %add544 = fadd float -5.000000e-01, %381, !dbg !12131
  store float %add544, float* %fy, align 4, !dbg !12132
  store i32 0, i32* %y, align 4, !dbg !12133
  br label %for.cond545, !dbg !12134

for.cond545:                                      ; preds = %for.inc682, %if.end538
  %382 = load i32, i32* %y, align 4, !dbg !12135
  %383 = load i32, i32* %ysize.addr, align 4, !dbg !12137
  %cmp546 = icmp slt i32 %382, %383, !dbg !12138
  br i1 %cmp546, label %for.body548, label %for.end685, !dbg !12139

for.body548:                                      ; preds = %for.cond545
  %384 = load i32, i32* %step, align 4, !dbg !12140
  %and549 = and i32 %384, 255, !dbg !12143
  %idxprom550 = sext i32 %and549 to i64, !dbg !12144
  %arrayidx551 = getelementptr inbounds [256 x [2 x float]], [256 x [2 x float]]* @RE_zbuf_accumulate_vecblur.jit, i64 0, i64 %idxprom550, !dbg !12144
  %arrayidx552 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx551, i64 0, i64 1, !dbg !12144
  %385 = load float, float* %arrayidx552, align 4, !dbg !12144
  %add553 = fadd float -5.000000e-01, %385, !dbg !12145
  store float %add553, float* %fx, align 4, !dbg !12146
  store i32 0, i32* %x, align 4, !dbg !12147
  br label %for.cond554, !dbg !12148

for.cond554:                                      ; preds = %for.inc671, %for.body548
  %386 = load i32, i32* %x, align 4, !dbg !12149
  %387 = load i32, i32* %xsize.addr, align 4, !dbg !12151
  %cmp555 = icmp slt i32 %386, %387, !dbg !12152
  br i1 %cmp555, label %for.body557, label %for.end679, !dbg !12153

for.body557:                                      ; preds = %for.cond554
  %388 = load i8*, i8** %dm, align 8, !dbg !12154
  %389 = load i8, i8* %388, align 1, !dbg !12157
  %conv558 = zext i8 %389 to i32, !dbg !12157
  %cmp559 = icmp sgt i32 %conv558, 1, !dbg !12158
  br i1 %cmp559, label %if.then561, label %if.end670, !dbg !12159

if.then561:                                       ; preds = %for.body557
  call void @llvm.dbg.declare(metadata float* %jfx, metadata !12160, metadata !DIExpression()), !dbg !12162
  %390 = load float, float* %fx, align 4, !dbg !12163
  %add562 = fadd float %390, 5.000000e-01, !dbg !12164
  store float %add562, float* %jfx, align 4, !dbg !12162
  call void @llvm.dbg.declare(metadata float* %jfy, metadata !12165, metadata !DIExpression()), !dbg !12166
  %391 = load float, float* %fy, align 4, !dbg !12167
  %add563 = fadd float %391, 5.000000e-01, !dbg !12168
  store float %add563, float* %jfy, align 4, !dbg !12166
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel* %col, metadata !12169, metadata !DIExpression()), !dbg !12170
  %392 = load %struct.NodeBlurData*, %struct.NodeBlurData** %nbd.addr, align 8, !dbg !12171
  %curved564 = getelementptr inbounds %struct.NodeBlurData, %struct.NodeBlurData* %392, i32 0, i32 7, !dbg !12173
  %393 = load i16, i16* %curved564, align 2, !dbg !12173
  %tobool565 = icmp ne i16 %393, 0, !dbg !12171
  br i1 %tobool565, label %if.then566, label %if.else607, !dbg !12174

if.then566:                                       ; preds = %if.then561
  %arraydecay567 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !12175
  %394 = load float*, float** %dz1, align 8, !dbg !12177
  %395 = load float*, float** %dz1, align 8, !dbg !12178
  %add.ptr568 = getelementptr inbounds float, float* %395, i64 2, !dbg !12179
  %arraydecay569 = getelementptr inbounds [4 x float], [4 x float]* %ipodata, i64 0, i64 0, !dbg !12180
  call void @quad_bezier_2d(float* %arraydecay567, float* %394, float* %add.ptr568, float* %arraydecay569), !dbg !12181
  %396 = load float, float* %jfx, align 4, !dbg !12182
  %arrayidx570 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !12183
  %397 = load float, float* %arrayidx570, align 4, !dbg !12184
  %add571 = fadd float %397, %396, !dbg !12184
  store float %add571, float* %arrayidx570, align 4, !dbg !12184
  %398 = load float, float* %jfy, align 4, !dbg !12185
  %arrayidx572 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !12186
  %399 = load float, float* %arrayidx572, align 4, !dbg !12187
  %add573 = fadd float %399, %398, !dbg !12187
  store float %add573, float* %arrayidx572, align 4, !dbg !12187
  %400 = load float*, float** %dz, align 8, !dbg !12188
  %401 = load float, float* %400, align 4, !dbg !12189
  %arrayidx574 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !12190
  store float %401, float* %arrayidx574, align 4, !dbg !12191
  %arraydecay575 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !12192
  %402 = load float*, float** %dz1, align 8, !dbg !12193
  %add.ptr576 = getelementptr inbounds float, float* %402, i64 4, !dbg !12194
  %403 = load float*, float** %dz1, align 8, !dbg !12195
  %add.ptr577 = getelementptr inbounds float, float* %403, i64 4, !dbg !12196
  %add.ptr578 = getelementptr inbounds float, float* %add.ptr577, i64 2, !dbg !12197
  %arraydecay579 = getelementptr inbounds [4 x float], [4 x float]* %ipodata, i64 0, i64 0, !dbg !12198
  call void @quad_bezier_2d(float* %arraydecay575, float* %add.ptr576, float* %add.ptr578, float* %arraydecay579), !dbg !12199
  %404 = load float, float* %jfx, align 4, !dbg !12200
  %add580 = fadd float %404, 1.000000e+00, !dbg !12201
  %arrayidx581 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !12202
  %405 = load float, float* %arrayidx581, align 4, !dbg !12203
  %add582 = fadd float %405, %add580, !dbg !12203
  store float %add582, float* %arrayidx581, align 4, !dbg !12203
  %406 = load float, float* %jfy, align 4, !dbg !12204
  %arrayidx583 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 1, !dbg !12205
  %407 = load float, float* %arrayidx583, align 4, !dbg !12206
  %add584 = fadd float %407, %406, !dbg !12206
  store float %add584, float* %arrayidx583, align 4, !dbg !12206
  %408 = load float*, float** %dz, align 8, !dbg !12207
  %409 = load float, float* %408, align 4, !dbg !12208
  %arrayidx585 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !12209
  store float %409, float* %arrayidx585, align 4, !dbg !12210
  %arraydecay586 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !12211
  %410 = load float*, float** %dz2, align 8, !dbg !12212
  %add.ptr587 = getelementptr inbounds float, float* %410, i64 4, !dbg !12213
  %411 = load float*, float** %dz2, align 8, !dbg !12214
  %add.ptr588 = getelementptr inbounds float, float* %411, i64 4, !dbg !12215
  %add.ptr589 = getelementptr inbounds float, float* %add.ptr588, i64 2, !dbg !12216
  %arraydecay590 = getelementptr inbounds [4 x float], [4 x float]* %ipodata, i64 0, i64 0, !dbg !12217
  call void @quad_bezier_2d(float* %arraydecay586, float* %add.ptr587, float* %add.ptr589, float* %arraydecay590), !dbg !12218
  %412 = load float, float* %jfx, align 4, !dbg !12219
  %add591 = fadd float %412, 1.000000e+00, !dbg !12220
  %arrayidx592 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !12221
  %413 = load float, float* %arrayidx592, align 4, !dbg !12222
  %add593 = fadd float %413, %add591, !dbg !12222
  store float %add593, float* %arrayidx592, align 4, !dbg !12222
  %414 = load float, float* %jfy, align 4, !dbg !12223
  %add594 = fadd float %414, 1.000000e+00, !dbg !12224
  %arrayidx595 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 1, !dbg !12225
  %415 = load float, float* %arrayidx595, align 4, !dbg !12226
  %add596 = fadd float %415, %add594, !dbg !12226
  store float %add596, float* %arrayidx595, align 4, !dbg !12226
  %416 = load float*, float** %dz, align 8, !dbg !12227
  %417 = load float, float* %416, align 4, !dbg !12228
  %arrayidx597 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 2, !dbg !12229
  store float %417, float* %arrayidx597, align 4, !dbg !12230
  %arraydecay598 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !12231
  %418 = load float*, float** %dz2, align 8, !dbg !12232
  %419 = load float*, float** %dz2, align 8, !dbg !12233
  %add.ptr599 = getelementptr inbounds float, float* %419, i64 2, !dbg !12234
  %arraydecay600 = getelementptr inbounds [4 x float], [4 x float]* %ipodata, i64 0, i64 0, !dbg !12235
  call void @quad_bezier_2d(float* %arraydecay598, float* %418, float* %add.ptr599, float* %arraydecay600), !dbg !12236
  %420 = load float, float* %jfx, align 4, !dbg !12237
  %arrayidx601 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !12238
  %421 = load float, float* %arrayidx601, align 4, !dbg !12239
  %add602 = fadd float %421, %420, !dbg !12239
  store float %add602, float* %arrayidx601, align 4, !dbg !12239
  %422 = load float, float* %jfy, align 4, !dbg !12240
  %add603 = fadd float %422, 1.000000e+00, !dbg !12241
  %arrayidx604 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 1, !dbg !12242
  %423 = load float, float* %arrayidx604, align 4, !dbg !12243
  %add605 = fadd float %423, %add603, !dbg !12243
  store float %add605, float* %arrayidx604, align 4, !dbg !12243
  %424 = load float*, float** %dz, align 8, !dbg !12244
  %425 = load float, float* %424, align 4, !dbg !12245
  %arrayidx606 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 2, !dbg !12246
  store float %425, float* %arrayidx606, align 4, !dbg !12247
  br label %if.end648, !dbg !12248

if.else607:                                       ; preds = %if.then561
  %426 = load float, float* %speedfac, align 4, !dbg !12249
  %427 = load float*, float** %dz1, align 8, !dbg !12251
  %arrayidx608 = getelementptr inbounds float, float* %427, i64 0, !dbg !12251
  %428 = load float, float* %arrayidx608, align 4, !dbg !12251
  %mul609 = fmul float %426, %428, !dbg !12252
  %429 = load float, float* %jfx, align 4, !dbg !12253
  %add610 = fadd float %mul609, %429, !dbg !12254
  %arrayidx611 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !12255
  store float %add610, float* %arrayidx611, align 4, !dbg !12256
  %430 = load float, float* %speedfac, align 4, !dbg !12257
  %431 = load float*, float** %dz1, align 8, !dbg !12258
  %arrayidx612 = getelementptr inbounds float, float* %431, i64 1, !dbg !12258
  %432 = load float, float* %arrayidx612, align 4, !dbg !12258
  %mul613 = fmul float %430, %432, !dbg !12259
  %433 = load float, float* %jfy, align 4, !dbg !12260
  %add614 = fadd float %mul613, %433, !dbg !12261
  %arrayidx615 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !12262
  store float %add614, float* %arrayidx615, align 4, !dbg !12263
  %434 = load float*, float** %dz, align 8, !dbg !12264
  %435 = load float, float* %434, align 4, !dbg !12265
  %arrayidx616 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !12266
  store float %435, float* %arrayidx616, align 4, !dbg !12267
  %436 = load float, float* %speedfac, align 4, !dbg !12268
  %437 = load float*, float** %dz1, align 8, !dbg !12269
  %arrayidx617 = getelementptr inbounds float, float* %437, i64 4, !dbg !12269
  %438 = load float, float* %arrayidx617, align 4, !dbg !12269
  %mul618 = fmul float %436, %438, !dbg !12270
  %439 = load float, float* %jfx, align 4, !dbg !12271
  %add619 = fadd float %mul618, %439, !dbg !12272
  %add620 = fadd float %add619, 1.000000e+00, !dbg !12273
  %arrayidx621 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !12274
  store float %add620, float* %arrayidx621, align 4, !dbg !12275
  %440 = load float, float* %speedfac, align 4, !dbg !12276
  %441 = load float*, float** %dz1, align 8, !dbg !12277
  %arrayidx622 = getelementptr inbounds float, float* %441, i64 5, !dbg !12277
  %442 = load float, float* %arrayidx622, align 4, !dbg !12277
  %mul623 = fmul float %440, %442, !dbg !12278
  %443 = load float, float* %jfy, align 4, !dbg !12279
  %add624 = fadd float %mul623, %443, !dbg !12280
  %arrayidx625 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 1, !dbg !12281
  store float %add624, float* %arrayidx625, align 4, !dbg !12282
  %444 = load float*, float** %dz, align 8, !dbg !12283
  %445 = load float, float* %444, align 4, !dbg !12284
  %arrayidx626 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !12285
  store float %445, float* %arrayidx626, align 4, !dbg !12286
  %446 = load float, float* %speedfac, align 4, !dbg !12287
  %447 = load float*, float** %dz2, align 8, !dbg !12288
  %arrayidx627 = getelementptr inbounds float, float* %447, i64 4, !dbg !12288
  %448 = load float, float* %arrayidx627, align 4, !dbg !12288
  %mul628 = fmul float %446, %448, !dbg !12289
  %449 = load float, float* %jfx, align 4, !dbg !12290
  %add629 = fadd float %mul628, %449, !dbg !12291
  %add630 = fadd float %add629, 1.000000e+00, !dbg !12292
  %arrayidx631 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !12293
  store float %add630, float* %arrayidx631, align 4, !dbg !12294
  %450 = load float, float* %speedfac, align 4, !dbg !12295
  %451 = load float*, float** %dz2, align 8, !dbg !12296
  %arrayidx632 = getelementptr inbounds float, float* %451, i64 5, !dbg !12296
  %452 = load float, float* %arrayidx632, align 4, !dbg !12296
  %mul633 = fmul float %450, %452, !dbg !12297
  %453 = load float, float* %jfy, align 4, !dbg !12298
  %add634 = fadd float %mul633, %453, !dbg !12299
  %add635 = fadd float %add634, 1.000000e+00, !dbg !12300
  %arrayidx636 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 1, !dbg !12301
  store float %add635, float* %arrayidx636, align 4, !dbg !12302
  %454 = load float*, float** %dz, align 8, !dbg !12303
  %455 = load float, float* %454, align 4, !dbg !12304
  %arrayidx637 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 2, !dbg !12305
  store float %455, float* %arrayidx637, align 4, !dbg !12306
  %456 = load float, float* %speedfac, align 4, !dbg !12307
  %457 = load float*, float** %dz2, align 8, !dbg !12308
  %arrayidx638 = getelementptr inbounds float, float* %457, i64 0, !dbg !12308
  %458 = load float, float* %arrayidx638, align 4, !dbg !12308
  %mul639 = fmul float %456, %458, !dbg !12309
  %459 = load float, float* %jfx, align 4, !dbg !12310
  %add640 = fadd float %mul639, %459, !dbg !12311
  %arrayidx641 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !12312
  store float %add640, float* %arrayidx641, align 4, !dbg !12313
  %460 = load float, float* %speedfac, align 4, !dbg !12314
  %461 = load float*, float** %dz2, align 8, !dbg !12315
  %arrayidx642 = getelementptr inbounds float, float* %461, i64 1, !dbg !12315
  %462 = load float, float* %arrayidx642, align 4, !dbg !12315
  %mul643 = fmul float %460, %462, !dbg !12316
  %463 = load float, float* %jfy, align 4, !dbg !12317
  %add644 = fadd float %mul643, %463, !dbg !12318
  %add645 = fadd float %add644, 1.000000e+00, !dbg !12319
  %arrayidx646 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 1, !dbg !12320
  store float %add645, float* %arrayidx646, align 4, !dbg !12321
  %464 = load float*, float** %dz, align 8, !dbg !12322
  %465 = load float, float* %464, align 4, !dbg !12323
  %arrayidx647 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 2, !dbg !12324
  store float %465, float* %arrayidx647, align 4, !dbg !12325
  br label %if.end648

if.end648:                                        ; preds = %if.else607, %if.then566
  %466 = load i8*, i8** %dm, align 8, !dbg !12326
  %467 = load i8, i8* %466, align 1, !dbg !12328
  %conv649 = zext i8 %467 to i32, !dbg !12328
  %cmp650 = icmp eq i32 %conv649, 255, !dbg !12329
  br i1 %cmp650, label %if.then652, label %if.else653, !dbg !12330

if.then652:                                       ; preds = %if.end648
  %alpha = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %col, i32 0, i32 1, !dbg !12331
  store float 1.000000e+00, float* %alpha, align 8, !dbg !12332
  br label %if.end664, !dbg !12333

if.else653:                                       ; preds = %if.end648
  %468 = load i8*, i8** %dm, align 8, !dbg !12334
  %469 = load i8, i8* %468, align 1, !dbg !12336
  %conv654 = zext i8 %469 to i32, !dbg !12336
  %cmp655 = icmp slt i32 %conv654, 2, !dbg !12337
  br i1 %cmp655, label %if.then657, label %if.else659, !dbg !12338

if.then657:                                       ; preds = %if.else653
  %alpha658 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %col, i32 0, i32 1, !dbg !12339
  store float 0.000000e+00, float* %alpha658, align 8, !dbg !12340
  br label %if.end663, !dbg !12341

if.else659:                                       ; preds = %if.else653
  %470 = load i8*, i8** %dm, align 8, !dbg !12342
  %471 = load i8, i8* %470, align 1, !dbg !12343
  %conv660 = uitofp i8 %471 to float, !dbg !12344
  %div661 = fdiv float %conv660, 2.550000e+02, !dbg !12345
  %alpha662 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %col, i32 0, i32 1, !dbg !12346
  store float %div661, float* %alpha662, align 8, !dbg !12347
  br label %if.end663

if.end663:                                        ; preds = %if.else659, %if.then657
  br label %if.end664

if.end664:                                        ; preds = %if.end663, %if.then652
  %472 = load float*, float** %dimg, align 8, !dbg !12348
  %colpoin665 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %col, i32 0, i32 0, !dbg !12349
  store float* %472, float** %colpoin665, align 8, !dbg !12350
  %arraydecay666 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !12351
  %arraydecay667 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !12352
  %arraydecay668 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !12353
  %arraydecay669 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !12354
  call void @zbuf_fill_in_rgba(%struct.ZSpan* %zspan, %struct.DrawBufPixel* %col, float* %arraydecay666, float* %arraydecay667, float* %arraydecay668, float* %arraydecay669), !dbg !12355
  br label %if.end670, !dbg !12356

if.end670:                                        ; preds = %if.end664, %for.body557
  br label %for.inc671, !dbg !12357

for.inc671:                                       ; preds = %if.end670
  %473 = load i32, i32* %x, align 4, !dbg !12358
  %inc672 = add nsw i32 %473, 1, !dbg !12358
  store i32 %inc672, i32* %x, align 4, !dbg !12358
  %474 = load float, float* %fx, align 4, !dbg !12359
  %add673 = fadd float %474, 1.000000e+00, !dbg !12359
  store float %add673, float* %fx, align 4, !dbg !12359
  %475 = load float*, float** %dimg, align 8, !dbg !12360
  %add.ptr674 = getelementptr inbounds float, float* %475, i64 4, !dbg !12360
  store float* %add.ptr674, float** %dimg, align 8, !dbg !12360
  %476 = load float*, float** %dz1, align 8, !dbg !12361
  %add.ptr675 = getelementptr inbounds float, float* %476, i64 4, !dbg !12361
  store float* %add.ptr675, float** %dz1, align 8, !dbg !12361
  %477 = load float*, float** %dz2, align 8, !dbg !12362
  %add.ptr676 = getelementptr inbounds float, float* %477, i64 4, !dbg !12362
  store float* %add.ptr676, float** %dz2, align 8, !dbg !12362
  %478 = load i8*, i8** %dm, align 8, !dbg !12363
  %incdec.ptr677 = getelementptr inbounds i8, i8* %478, i32 1, !dbg !12363
  store i8* %incdec.ptr677, i8** %dm, align 8, !dbg !12363
  %479 = load float*, float** %dz, align 8, !dbg !12364
  %incdec.ptr678 = getelementptr inbounds float, float* %479, i32 1, !dbg !12364
  store float* %incdec.ptr678, float** %dz, align 8, !dbg !12364
  br label %for.cond554, !dbg !12365, !llvm.loop !12366

for.end679:                                       ; preds = %for.cond554
  %480 = load float*, float** %dz1, align 8, !dbg !12368
  %add.ptr680 = getelementptr inbounds float, float* %480, i64 4, !dbg !12368
  store float* %add.ptr680, float** %dz1, align 8, !dbg !12368
  %481 = load float*, float** %dz2, align 8, !dbg !12369
  %add.ptr681 = getelementptr inbounds float, float* %481, i64 4, !dbg !12369
  store float* %add.ptr681, float** %dz2, align 8, !dbg !12369
  br label %for.inc682, !dbg !12370

for.inc682:                                       ; preds = %for.end679
  %482 = load i32, i32* %y, align 4, !dbg !12371
  %inc683 = add nsw i32 %482, 1, !dbg !12371
  store i32 %inc683, i32* %y, align 4, !dbg !12371
  %483 = load float, float* %fy, align 4, !dbg !12372
  %add684 = fadd float %483, 1.000000e+00, !dbg !12372
  store float %add684, float* %fy, align 4, !dbg !12372
  br label %for.cond545, !dbg !12373, !llvm.loop !12374

for.end685:                                       ; preds = %for.cond545
  %484 = load i32, i32* %samples, align 4, !dbg !12376
  %485 = load i32, i32* %step, align 4, !dbg !12377
  %sub686 = sub nsw i32 %484, %485, !dbg !12378
  %conv687 = sitofp i32 %sub686 to float, !dbg !12379
  %486 = load i32, i32* %samples, align 4, !dbg !12380
  %conv688 = sitofp i32 %486 to float, !dbg !12381
  %div689 = fdiv float %conv687, %conv688, !dbg !12382
  store float %div689, float* %blendfac, align 4, !dbg !12383
  %487 = load float, float* %blendfac, align 4, !dbg !12384
  %conv690 = fpext float %487 to double, !dbg !12384
  %call691 = call double @pow(double %conv690, double 2.000000e+00) #5, !dbg !12385
  %mul692 = fmul double 3.000000e+00, %call691, !dbg !12386
  %488 = load float, float* %blendfac, align 4, !dbg !12387
  %conv693 = fpext float %488 to double, !dbg !12387
  %call694 = call double @pow(double %conv693, double 3.000000e+00) #5, !dbg !12388
  %mul695 = fmul double 2.000000e+00, %call694, !dbg !12389
  %sub696 = fsub double %mul692, %mul695, !dbg !12390
  %conv697 = fptrunc double %sub696 to float, !dbg !12391
  store float %conv697, float* %blendfac, align 4, !dbg !12392
  %489 = load float*, float** %rectweight, align 8, !dbg !12393
  store float* %489, float** %rw, align 8, !dbg !12394
  %490 = load float*, float** %rectmax, align 8, !dbg !12395
  store float* %490, float** %rm, align 8, !dbg !12396
  %491 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectdraw, align 8, !dbg !12397
  store %struct.DrawBufPixel* %491, %struct.DrawBufPixel** %dr, align 8, !dbg !12399
  %492 = load float*, float** %newrect.addr, align 8, !dbg !12400
  store float* %492, float** %dz2, align 8, !dbg !12401
  %493 = load i32, i32* %xsize.addr, align 4, !dbg !12402
  %494 = load i32, i32* %ysize.addr, align 4, !dbg !12403
  %mul698 = mul nsw i32 %493, %494, !dbg !12404
  %sub699 = sub nsw i32 %mul698, 1, !dbg !12405
  store i32 %sub699, i32* %x, align 4, !dbg !12406
  br label %for.cond700, !dbg !12407

for.cond700:                                      ; preds = %for.inc737, %for.end685
  %495 = load i32, i32* %x, align 4, !dbg !12408
  %cmp701 = icmp sge i32 %495, 0, !dbg !12410
  br i1 %cmp701, label %for.body703, label %for.end743, !dbg !12411

for.body703:                                      ; preds = %for.cond700
  %496 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12412
  %colpoin704 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %496, i32 0, i32 0, !dbg !12415
  %497 = load float*, float** %colpoin704, align 8, !dbg !12415
  %tobool705 = icmp ne float* %497, null, !dbg !12412
  br i1 %tobool705, label %if.then706, label %if.end736, !dbg !12416

if.then706:                                       ; preds = %for.body703
  call void @llvm.dbg.declare(metadata float* %bfac, metadata !12417, metadata !DIExpression()), !dbg !12419
  %498 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12420
  %alpha707 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %498, i32 0, i32 1, !dbg !12421
  %499 = load float, float* %alpha707, align 8, !dbg !12421
  %500 = load float, float* %blendfac, align 4, !dbg !12422
  %mul708 = fmul float %499, %500, !dbg !12423
  store float %mul708, float* %bfac, align 4, !dbg !12419
  %501 = load float, float* %bfac, align 4, !dbg !12424
  %502 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12425
  %colpoin709 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %502, i32 0, i32 0, !dbg !12426
  %503 = load float*, float** %colpoin709, align 8, !dbg !12426
  %arrayidx710 = getelementptr inbounds float, float* %503, i64 0, !dbg !12425
  %504 = load float, float* %arrayidx710, align 4, !dbg !12425
  %mul711 = fmul float %501, %504, !dbg !12427
  %505 = load float*, float** %dz2, align 8, !dbg !12428
  %arrayidx712 = getelementptr inbounds float, float* %505, i64 0, !dbg !12428
  %506 = load float, float* %arrayidx712, align 4, !dbg !12429
  %add713 = fadd float %506, %mul711, !dbg !12429
  store float %add713, float* %arrayidx712, align 4, !dbg !12429
  %507 = load float, float* %bfac, align 4, !dbg !12430
  %508 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12431
  %colpoin714 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %508, i32 0, i32 0, !dbg !12432
  %509 = load float*, float** %colpoin714, align 8, !dbg !12432
  %arrayidx715 = getelementptr inbounds float, float* %509, i64 1, !dbg !12431
  %510 = load float, float* %arrayidx715, align 4, !dbg !12431
  %mul716 = fmul float %507, %510, !dbg !12433
  %511 = load float*, float** %dz2, align 8, !dbg !12434
  %arrayidx717 = getelementptr inbounds float, float* %511, i64 1, !dbg !12434
  %512 = load float, float* %arrayidx717, align 4, !dbg !12435
  %add718 = fadd float %512, %mul716, !dbg !12435
  store float %add718, float* %arrayidx717, align 4, !dbg !12435
  %513 = load float, float* %bfac, align 4, !dbg !12436
  %514 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12437
  %colpoin719 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %514, i32 0, i32 0, !dbg !12438
  %515 = load float*, float** %colpoin719, align 8, !dbg !12438
  %arrayidx720 = getelementptr inbounds float, float* %515, i64 2, !dbg !12437
  %516 = load float, float* %arrayidx720, align 4, !dbg !12437
  %mul721 = fmul float %513, %516, !dbg !12439
  %517 = load float*, float** %dz2, align 8, !dbg !12440
  %arrayidx722 = getelementptr inbounds float, float* %517, i64 2, !dbg !12440
  %518 = load float, float* %arrayidx722, align 4, !dbg !12441
  %add723 = fadd float %518, %mul721, !dbg !12441
  store float %add723, float* %arrayidx722, align 4, !dbg !12441
  %519 = load float, float* %bfac, align 4, !dbg !12442
  %520 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12443
  %colpoin724 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %520, i32 0, i32 0, !dbg !12444
  %521 = load float*, float** %colpoin724, align 8, !dbg !12444
  %arrayidx725 = getelementptr inbounds float, float* %521, i64 3, !dbg !12443
  %522 = load float, float* %arrayidx725, align 4, !dbg !12443
  %mul726 = fmul float %519, %522, !dbg !12445
  %523 = load float*, float** %dz2, align 8, !dbg !12446
  %arrayidx727 = getelementptr inbounds float, float* %523, i64 3, !dbg !12446
  %524 = load float, float* %arrayidx727, align 4, !dbg !12447
  %add728 = fadd float %524, %mul726, !dbg !12447
  store float %add728, float* %arrayidx727, align 4, !dbg !12447
  %525 = load float, float* %bfac, align 4, !dbg !12448
  %526 = load float*, float** %rw, align 8, !dbg !12449
  %527 = load float, float* %526, align 4, !dbg !12450
  %add729 = fadd float %527, %525, !dbg !12450
  store float %add729, float* %526, align 4, !dbg !12450
  %528 = load float*, float** %rm, align 8, !dbg !12451
  %529 = load float, float* %528, align 4, !dbg !12451
  %530 = load float, float* %bfac, align 4, !dbg !12451
  %cmp730 = fcmp ogt float %529, %530, !dbg !12451
  br i1 %cmp730, label %cond.true732, label %cond.false733, !dbg !12451

cond.true732:                                     ; preds = %if.then706
  %531 = load float*, float** %rm, align 8, !dbg !12451
  %532 = load float, float* %531, align 4, !dbg !12451
  br label %cond.end734, !dbg !12451

cond.false733:                                    ; preds = %if.then706
  %533 = load float, float* %bfac, align 4, !dbg !12451
  br label %cond.end734, !dbg !12451

cond.end734:                                      ; preds = %cond.false733, %cond.true732
  %cond735 = phi float [ %532, %cond.true732 ], [ %533, %cond.false733 ], !dbg !12451
  %534 = load float*, float** %rm, align 8, !dbg !12452
  store float %cond735, float* %534, align 4, !dbg !12453
  br label %if.end736, !dbg !12454

if.end736:                                        ; preds = %cond.end734, %for.body703
  br label %for.inc737, !dbg !12455

for.inc737:                                       ; preds = %if.end736
  %535 = load i32, i32* %x, align 4, !dbg !12456
  %dec738 = add nsw i32 %535, -1, !dbg !12456
  store i32 %dec738, i32* %x, align 4, !dbg !12456
  %536 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %dr, align 8, !dbg !12457
  %incdec.ptr739 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %536, i32 1, !dbg !12457
  store %struct.DrawBufPixel* %incdec.ptr739, %struct.DrawBufPixel** %dr, align 8, !dbg !12457
  %537 = load float*, float** %dz2, align 8, !dbg !12458
  %add.ptr740 = getelementptr inbounds float, float* %537, i64 4, !dbg !12458
  store float* %add.ptr740, float** %dz2, align 8, !dbg !12458
  %538 = load float*, float** %rw, align 8, !dbg !12459
  %incdec.ptr741 = getelementptr inbounds float, float* %538, i32 1, !dbg !12459
  store float* %incdec.ptr741, float** %rw, align 8, !dbg !12459
  %539 = load float*, float** %rm, align 8, !dbg !12460
  %incdec.ptr742 = getelementptr inbounds float, float* %539, i32 1, !dbg !12460
  store float* %incdec.ptr742, float** %rm, align 8, !dbg !12460
  br label %for.cond700, !dbg !12461, !llvm.loop !12462

for.end743:                                       ; preds = %for.cond700
  br label %for.inc744, !dbg !12464

for.inc744:                                       ; preds = %for.end743
  %540 = load i32, i32* %side, align 4, !dbg !12465
  %inc745 = add nsw i32 %540, 1, !dbg !12465
  store i32 %inc745, i32* %side, align 4, !dbg !12465
  br label %for.cond487, !dbg !12466, !llvm.loop !12467

for.end746:                                       ; preds = %for.cond487
  br label %for.inc747, !dbg !12469

for.inc747:                                       ; preds = %for.end746
  %541 = load i32, i32* %step, align 4, !dbg !12470
  %inc748 = add nsw i32 %541, 1, !dbg !12470
  store i32 %inc748, i32* %step, align 4, !dbg !12470
  br label %for.cond477, !dbg !12471, !llvm.loop !12472

for.end749:                                       ; preds = %for.cond477
  %542 = load float*, float** %rectweight, align 8, !dbg !12474
  store float* %542, float** %rw, align 8, !dbg !12475
  %543 = load float*, float** %rectmax, align 8, !dbg !12476
  store float* %543, float** %rm, align 8, !dbg !12477
  %544 = load float*, float** %imgrect.addr, align 8, !dbg !12478
  store float* %544, float** %ro, align 8, !dbg !12479
  %545 = load i8*, i8** %rectmove, align 8, !dbg !12480
  store i8* %545, i8** %dm, align 8, !dbg !12481
  %546 = load float*, float** %newrect.addr, align 8, !dbg !12482
  store float* %546, float** %dz2, align 8, !dbg !12484
  %547 = load i32, i32* %xsize.addr, align 4, !dbg !12485
  %548 = load i32, i32* %ysize.addr, align 4, !dbg !12486
  %mul750 = mul nsw i32 %547, %548, !dbg !12487
  %sub751 = sub nsw i32 %mul750, 1, !dbg !12488
  store i32 %sub751, i32* %x, align 4, !dbg !12489
  br label %for.cond752, !dbg !12490

for.cond752:                                      ; preds = %for.inc789, %for.end749
  %549 = load i32, i32* %x, align 4, !dbg !12491
  %cmp753 = icmp sge i32 %549, 0, !dbg !12493
  br i1 %cmp753, label %for.body755, label %for.end796, !dbg !12494

for.body755:                                      ; preds = %for.cond752
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !12495, metadata !DIExpression()), !dbg !12497
  %550 = load float*, float** %rm, align 8, !dbg !12498
  %551 = load float, float* %550, align 4, !dbg !12499
  store float %551, float* %mfac, align 4, !dbg !12497
  call void @llvm.dbg.declare(metadata float* %fac756, metadata !12500, metadata !DIExpression()), !dbg !12501
  %552 = load float*, float** %rw, align 8, !dbg !12502
  %553 = load float, float* %552, align 4, !dbg !12503
  %cmp757 = fcmp oeq float %553, 0.000000e+00, !dbg !12504
  br i1 %cmp757, label %cond.true759, label %cond.false760, !dbg !12505

cond.true759:                                     ; preds = %for.body755
  br label %cond.end762, !dbg !12505

cond.false760:                                    ; preds = %for.body755
  %554 = load float, float* %mfac, align 4, !dbg !12506
  %555 = load float*, float** %rw, align 8, !dbg !12507
  %556 = load float, float* %555, align 4, !dbg !12508
  %div761 = fdiv float %554, %556, !dbg !12509
  br label %cond.end762, !dbg !12505

cond.end762:                                      ; preds = %cond.false760, %cond.true759
  %cond763 = phi float [ 0.000000e+00, %cond.true759 ], [ %div761, %cond.false760 ], !dbg !12505
  store float %cond763, float* %fac756, align 4, !dbg !12501
  call void @llvm.dbg.declare(metadata float* %nfac, metadata !12510, metadata !DIExpression()), !dbg !12511
  %557 = load float, float* %mfac, align 4, !dbg !12512
  %sub764 = fsub float 1.000000e+00, %557, !dbg !12513
  store float %sub764, float* %nfac, align 4, !dbg !12511
  %558 = load float, float* %fac756, align 4, !dbg !12514
  %559 = load float*, float** %dz2, align 8, !dbg !12515
  %arrayidx765 = getelementptr inbounds float, float* %559, i64 0, !dbg !12515
  %560 = load float, float* %arrayidx765, align 4, !dbg !12515
  %mul766 = fmul float %558, %560, !dbg !12516
  %561 = load float, float* %nfac, align 4, !dbg !12517
  %562 = load float*, float** %ro, align 8, !dbg !12518
  %arrayidx767 = getelementptr inbounds float, float* %562, i64 0, !dbg !12518
  %563 = load float, float* %arrayidx767, align 4, !dbg !12518
  %mul768 = fmul float %561, %563, !dbg !12519
  %add769 = fadd float %mul766, %mul768, !dbg !12520
  %564 = load float*, float** %dz2, align 8, !dbg !12521
  %arrayidx770 = getelementptr inbounds float, float* %564, i64 0, !dbg !12521
  store float %add769, float* %arrayidx770, align 4, !dbg !12522
  %565 = load float, float* %fac756, align 4, !dbg !12523
  %566 = load float*, float** %dz2, align 8, !dbg !12524
  %arrayidx771 = getelementptr inbounds float, float* %566, i64 1, !dbg !12524
  %567 = load float, float* %arrayidx771, align 4, !dbg !12524
  %mul772 = fmul float %565, %567, !dbg !12525
  %568 = load float, float* %nfac, align 4, !dbg !12526
  %569 = load float*, float** %ro, align 8, !dbg !12527
  %arrayidx773 = getelementptr inbounds float, float* %569, i64 1, !dbg !12527
  %570 = load float, float* %arrayidx773, align 4, !dbg !12527
  %mul774 = fmul float %568, %570, !dbg !12528
  %add775 = fadd float %mul772, %mul774, !dbg !12529
  %571 = load float*, float** %dz2, align 8, !dbg !12530
  %arrayidx776 = getelementptr inbounds float, float* %571, i64 1, !dbg !12530
  store float %add775, float* %arrayidx776, align 4, !dbg !12531
  %572 = load float, float* %fac756, align 4, !dbg !12532
  %573 = load float*, float** %dz2, align 8, !dbg !12533
  %arrayidx777 = getelementptr inbounds float, float* %573, i64 2, !dbg !12533
  %574 = load float, float* %arrayidx777, align 4, !dbg !12533
  %mul778 = fmul float %572, %574, !dbg !12534
  %575 = load float, float* %nfac, align 4, !dbg !12535
  %576 = load float*, float** %ro, align 8, !dbg !12536
  %arrayidx779 = getelementptr inbounds float, float* %576, i64 2, !dbg !12536
  %577 = load float, float* %arrayidx779, align 4, !dbg !12536
  %mul780 = fmul float %575, %577, !dbg !12537
  %add781 = fadd float %mul778, %mul780, !dbg !12538
  %578 = load float*, float** %dz2, align 8, !dbg !12539
  %arrayidx782 = getelementptr inbounds float, float* %578, i64 2, !dbg !12539
  store float %add781, float* %arrayidx782, align 4, !dbg !12540
  %579 = load float, float* %fac756, align 4, !dbg !12541
  %580 = load float*, float** %dz2, align 8, !dbg !12542
  %arrayidx783 = getelementptr inbounds float, float* %580, i64 3, !dbg !12542
  %581 = load float, float* %arrayidx783, align 4, !dbg !12542
  %mul784 = fmul float %579, %581, !dbg !12543
  %582 = load float, float* %nfac, align 4, !dbg !12544
  %583 = load float*, float** %ro, align 8, !dbg !12545
  %arrayidx785 = getelementptr inbounds float, float* %583, i64 3, !dbg !12545
  %584 = load float, float* %arrayidx785, align 4, !dbg !12545
  %mul786 = fmul float %582, %584, !dbg !12546
  %add787 = fadd float %mul784, %mul786, !dbg !12547
  %585 = load float*, float** %dz2, align 8, !dbg !12548
  %arrayidx788 = getelementptr inbounds float, float* %585, i64 3, !dbg !12548
  store float %add787, float* %arrayidx788, align 4, !dbg !12549
  br label %for.inc789, !dbg !12550

for.inc789:                                       ; preds = %cond.end762
  %586 = load i32, i32* %x, align 4, !dbg !12551
  %dec790 = add nsw i32 %586, -1, !dbg !12551
  store i32 %dec790, i32* %x, align 4, !dbg !12551
  %587 = load float*, float** %dz2, align 8, !dbg !12552
  %add.ptr791 = getelementptr inbounds float, float* %587, i64 4, !dbg !12552
  store float* %add.ptr791, float** %dz2, align 8, !dbg !12552
  %588 = load float*, float** %ro, align 8, !dbg !12553
  %add.ptr792 = getelementptr inbounds float, float* %588, i64 4, !dbg !12553
  store float* %add.ptr792, float** %ro, align 8, !dbg !12553
  %589 = load float*, float** %rw, align 8, !dbg !12554
  %incdec.ptr793 = getelementptr inbounds float, float* %589, i32 1, !dbg !12554
  store float* %incdec.ptr793, float** %rw, align 8, !dbg !12554
  %590 = load float*, float** %rm, align 8, !dbg !12555
  %incdec.ptr794 = getelementptr inbounds float, float* %590, i32 1, !dbg !12555
  store float* %incdec.ptr794, float** %rm, align 8, !dbg !12555
  %591 = load i8*, i8** %dm, align 8, !dbg !12556
  %incdec.ptr795 = getelementptr inbounds i8, i8* %591, i32 1, !dbg !12556
  store i8* %incdec.ptr795, i8** %dm, align 8, !dbg !12556
  br label %for.cond752, !dbg !12557, !llvm.loop !12558

for.end796:                                       ; preds = %for.cond752
  %592 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12560
  %593 = load float*, float** %rectz, align 8, !dbg !12561
  %594 = bitcast float* %593 to i8*, !dbg !12561
  call void %592(i8* %594), !dbg !12560
  %595 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12562
  %596 = load i8*, i8** %rectmove, align 8, !dbg !12563
  call void %595(i8* %596), !dbg !12562
  %597 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12564
  %598 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectdraw, align 8, !dbg !12565
  %599 = bitcast %struct.DrawBufPixel* %598 to i8*, !dbg !12565
  call void %597(i8* %599), !dbg !12564
  %600 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12566
  %601 = load float*, float** %rectvz, align 8, !dbg !12567
  %602 = bitcast float* %601 to i8*, !dbg !12567
  call void %600(i8* %602), !dbg !12566
  %603 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12568
  %604 = load float*, float** %rectweight, align 8, !dbg !12569
  %605 = bitcast float* %604 to i8*, !dbg !12569
  call void %603(i8* %605), !dbg !12568
  %606 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12570
  %607 = load float*, float** %rectmax, align 8, !dbg !12571
  %608 = bitcast float* %607 to i8*, !dbg !12571
  call void %606(i8* %608), !dbg !12570
  %609 = load float*, float** %minvecbufrect, align 8, !dbg !12572
  %tobool797 = icmp ne float* %609, null, !dbg !12572
  br i1 %tobool797, label %if.then798, label %if.end799, !dbg !12574

if.then798:                                       ; preds = %for.end796
  %610 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12575
  %611 = load float*, float** %vecbufrect.addr, align 8, !dbg !12576
  %612 = bitcast float* %611 to i8*, !dbg !12576
  call void %610(i8* %612), !dbg !12575
  br label %if.end799, !dbg !12575

if.end799:                                        ; preds = %if.then798, %for.end796
  call void @zbuf_free_span(%struct.ZSpan* %zspan), !dbg !12577
  ret void, !dbg !12578
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

declare dso_local void @BLI_jitter_init([2 x float]*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @set_quad_bezier_ipo(float %fac, float* %data) #0 !dbg !12579 {
entry:
  %fac.addr = alloca float, align 4
  %data.addr = alloca float*, align 8
  %mfac = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !12582, metadata !DIExpression()), !dbg !12583
  store float* %data, float** %data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %data.addr, metadata !12584, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !12586, metadata !DIExpression()), !dbg !12587
  %0 = load float, float* %fac.addr, align 4, !dbg !12588
  %sub = fsub float 1.000000e+00, %0, !dbg !12589
  store float %sub, float* %mfac, align 4, !dbg !12587
  %1 = load float, float* %mfac, align 4, !dbg !12590
  %2 = load float, float* %mfac, align 4, !dbg !12591
  %mul = fmul float %1, %2, !dbg !12592
  %3 = load float*, float** %data.addr, align 8, !dbg !12593
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !12593
  store float %mul, float* %arrayidx, align 4, !dbg !12594
  %4 = load float, float* %mfac, align 4, !dbg !12595
  %mul1 = fmul float 2.000000e+00, %4, !dbg !12596
  %5 = load float, float* %fac.addr, align 4, !dbg !12597
  %mul2 = fmul float %mul1, %5, !dbg !12598
  %6 = load float*, float** %data.addr, align 8, !dbg !12599
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12599
  store float %mul2, float* %arrayidx3, align 4, !dbg !12600
  %7 = load float, float* %fac.addr, align 4, !dbg !12601
  %8 = load float, float* %fac.addr, align 4, !dbg !12602
  %mul4 = fmul float %7, %8, !dbg !12603
  %9 = load float*, float** %data.addr, align 8, !dbg !12604
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 2, !dbg !12604
  store float %mul4, float* %arrayidx5, align 4, !dbg !12605
  ret void, !dbg !12606
}

; Function Attrs: noinline nounwind uwtable
define internal void @quad_bezier_2d(float* %result, float* %v1, float* %v2, float* %ipodata) #0 !dbg !12607 {
entry:
  %result.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %ipodata.addr = alloca float*, align 8
  %p1 = alloca [2 x float], align 4
  %p2 = alloca [2 x float], align 4
  %p3 = alloca [2 x float], align 4
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !12610, metadata !DIExpression()), !dbg !12611
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !12612, metadata !DIExpression()), !dbg !12613
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !12614, metadata !DIExpression()), !dbg !12615
  store float* %ipodata, float** %ipodata.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ipodata.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.declare(metadata [2 x float]* %p1, metadata !12618, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.declare(metadata [2 x float]* %p2, metadata !12620, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.declare(metadata [2 x float]* %p3, metadata !12622, metadata !DIExpression()), !dbg !12623
  %0 = load float*, float** %v2.addr, align 8, !dbg !12624
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12624
  %1 = load float, float* %arrayidx, align 4, !dbg !12624
  %fneg = fneg float %1, !dbg !12625
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !12626
  store float %fneg, float* %arrayidx1, align 4, !dbg !12627
  %2 = load float*, float** %v2.addr, align 8, !dbg !12628
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 1, !dbg !12628
  %3 = load float, float* %arrayidx2, align 4, !dbg !12628
  %fneg3 = fneg float %3, !dbg !12629
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 1, !dbg !12630
  store float %fneg3, float* %arrayidx4, align 4, !dbg !12631
  %4 = load float*, float** %v1.addr, align 8, !dbg !12632
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 0, !dbg !12632
  %5 = load float, float* %arrayidx5, align 4, !dbg !12632
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !12633
  store float %5, float* %arrayidx6, align 4, !dbg !12634
  %6 = load float*, float** %v1.addr, align 8, !dbg !12635
  %arrayidx7 = getelementptr inbounds float, float* %6, i64 1, !dbg !12635
  %7 = load float, float* %arrayidx7, align 4, !dbg !12635
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 1, !dbg !12636
  store float %7, float* %arrayidx8, align 4, !dbg !12637
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !12638
  %8 = load float, float* %arrayidx9, align 4, !dbg !12638
  %mul = fmul float -5.000000e-01, %8, !dbg !12639
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !12640
  %9 = load float, float* %arrayidx10, align 4, !dbg !12640
  %mul11 = fmul float 5.000000e-01, %9, !dbg !12641
  %sub = fsub float %mul, %mul11, !dbg !12642
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !12643
  store float %sub, float* %arrayidx12, align 4, !dbg !12644
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 1, !dbg !12645
  %10 = load float, float* %arrayidx13, align 4, !dbg !12645
  %mul14 = fmul float -5.000000e-01, %10, !dbg !12646
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 1, !dbg !12647
  %11 = load float, float* %arrayidx15, align 4, !dbg !12647
  %mul16 = fmul float 5.000000e-01, %11, !dbg !12648
  %sub17 = fsub float %mul14, %mul16, !dbg !12649
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 1, !dbg !12650
  store float %sub17, float* %arrayidx18, align 4, !dbg !12651
  %12 = load float*, float** %ipodata.addr, align 8, !dbg !12652
  %arrayidx19 = getelementptr inbounds float, float* %12, i64 0, !dbg !12652
  %13 = load float, float* %arrayidx19, align 4, !dbg !12652
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 0, !dbg !12653
  %14 = load float, float* %arrayidx20, align 4, !dbg !12653
  %mul21 = fmul float %13, %14, !dbg !12654
  %15 = load float*, float** %ipodata.addr, align 8, !dbg !12655
  %arrayidx22 = getelementptr inbounds float, float* %15, i64 1, !dbg !12655
  %16 = load float, float* %arrayidx22, align 4, !dbg !12655
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 0, !dbg !12656
  %17 = load float, float* %arrayidx23, align 4, !dbg !12656
  %mul24 = fmul float %16, %17, !dbg !12657
  %add = fadd float %mul21, %mul24, !dbg !12658
  %18 = load float*, float** %ipodata.addr, align 8, !dbg !12659
  %arrayidx25 = getelementptr inbounds float, float* %18, i64 2, !dbg !12659
  %19 = load float, float* %arrayidx25, align 4, !dbg !12659
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 0, !dbg !12660
  %20 = load float, float* %arrayidx26, align 4, !dbg !12660
  %mul27 = fmul float %19, %20, !dbg !12661
  %add28 = fadd float %add, %mul27, !dbg !12662
  %21 = load float*, float** %result.addr, align 8, !dbg !12663
  %arrayidx29 = getelementptr inbounds float, float* %21, i64 0, !dbg !12663
  store float %add28, float* %arrayidx29, align 4, !dbg !12664
  %22 = load float*, float** %ipodata.addr, align 8, !dbg !12665
  %arrayidx30 = getelementptr inbounds float, float* %22, i64 0, !dbg !12665
  %23 = load float, float* %arrayidx30, align 4, !dbg !12665
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %p1, i64 0, i64 1, !dbg !12666
  %24 = load float, float* %arrayidx31, align 4, !dbg !12666
  %mul32 = fmul float %23, %24, !dbg !12667
  %25 = load float*, float** %ipodata.addr, align 8, !dbg !12668
  %arrayidx33 = getelementptr inbounds float, float* %25, i64 1, !dbg !12668
  %26 = load float, float* %arrayidx33, align 4, !dbg !12668
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %p2, i64 0, i64 1, !dbg !12669
  %27 = load float, float* %arrayidx34, align 4, !dbg !12669
  %mul35 = fmul float %26, %27, !dbg !12670
  %add36 = fadd float %mul32, %mul35, !dbg !12671
  %28 = load float*, float** %ipodata.addr, align 8, !dbg !12672
  %arrayidx37 = getelementptr inbounds float, float* %28, i64 2, !dbg !12672
  %29 = load float, float* %arrayidx37, align 4, !dbg !12672
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %p3, i64 0, i64 1, !dbg !12673
  %30 = load float, float* %arrayidx38, align 4, !dbg !12673
  %mul39 = fmul float %29, %30, !dbg !12674
  %add40 = fadd float %add36, %mul39, !dbg !12675
  %31 = load float*, float** %result.addr, align 8, !dbg !12676
  %arrayidx41 = getelementptr inbounds float, float* %31, i64 1, !dbg !12676
  store float %add40, float* %arrayidx41, align 4, !dbg !12677
  ret void, !dbg !12678
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuf_fill_in_rgba(%struct.ZSpan* %zspan, %struct.DrawBufPixel* %col, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !12679 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %col.addr = alloca %struct.DrawBufPixel*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %rectpofs = alloca %struct.DrawBufPixel*, align 8
  %rp = alloca %struct.DrawBufPixel*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %zverg = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %z0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %rectzofs = alloca float*, align 8
  %rz = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  store %struct.DrawBufPixel* %col, %struct.DrawBufPixel** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel** %col.addr, metadata !12684, metadata !DIExpression()), !dbg !12685
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !12686, metadata !DIExpression()), !dbg !12687
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !12688, metadata !DIExpression()), !dbg !12689
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !12690, metadata !DIExpression()), !dbg !12691
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !12692, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel** %rectpofs, metadata !12694, metadata !DIExpression()), !dbg !12695
  call void @llvm.dbg.declare(metadata %struct.DrawBufPixel** %rp, metadata !12696, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !12698, metadata !DIExpression()), !dbg !12699
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !12700, metadata !DIExpression()), !dbg !12701
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !12702, metadata !DIExpression()), !dbg !12703
  call void @llvm.dbg.declare(metadata double* %zverg, metadata !12704, metadata !DIExpression()), !dbg !12705
  call void @llvm.dbg.declare(metadata float* %x0, metadata !12706, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.declare(metadata float* %y0, metadata !12708, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata float* %z0, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata float* %x1, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.declare(metadata float* %y1, metadata !12714, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.declare(metadata float* %z1, metadata !12716, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.declare(metadata float* %x2, metadata !12718, metadata !DIExpression()), !dbg !12719
  call void @llvm.dbg.declare(metadata float* %y2, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata float* %z2, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !12724, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.declare(metadata float** %span1, metadata !12726, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.declare(metadata float** %span2, metadata !12728, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.declare(metadata float** %rectzofs, metadata !12730, metadata !DIExpression()), !dbg !12731
  call void @llvm.dbg.declare(metadata float** %rz, metadata !12732, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12734, metadata !DIExpression()), !dbg !12735
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12736, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !12738, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !12740, metadata !DIExpression()), !dbg !12741
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !12742, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !12744, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !12746, metadata !DIExpression()), !dbg !12747
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12748
  call void @zbuf_init_span(%struct.ZSpan* %0), !dbg !12749
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12750
  %2 = load float*, float** %v1.addr, align 8, !dbg !12751
  %3 = load float*, float** %v2.addr, align 8, !dbg !12752
  call void @zbuf_add_to_span(%struct.ZSpan* %1, float* %2, float* %3), !dbg !12753
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12754
  %5 = load float*, float** %v2.addr, align 8, !dbg !12755
  %6 = load float*, float** %v3.addr, align 8, !dbg !12756
  call void @zbuf_add_to_span(%struct.ZSpan* %4, float* %5, float* %6), !dbg !12757
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12758
  %8 = load float*, float** %v3.addr, align 8, !dbg !12759
  %9 = load float*, float** %v4.addr, align 8, !dbg !12760
  call void @zbuf_add_to_span(%struct.ZSpan* %7, float* %8, float* %9), !dbg !12761
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12762
  %11 = load float*, float** %v4.addr, align 8, !dbg !12763
  %12 = load float*, float** %v1.addr, align 8, !dbg !12764
  call void @zbuf_add_to_span(%struct.ZSpan* %10, float* %11, float* %12), !dbg !12765
  %13 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12766
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %13, i32 0, i32 8, !dbg !12768
  %14 = load float*, float** %minp2, align 8, !dbg !12768
  %cmp = icmp eq float* %14, null, !dbg !12769
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12770

lor.lhs.false:                                    ; preds = %entry
  %15 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12771
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %15, i32 0, i32 9, !dbg !12772
  %16 = load float*, float** %maxp2, align 8, !dbg !12772
  %cmp1 = icmp eq float* %16, null, !dbg !12773
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12774

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !12775

if.end:                                           ; preds = %lor.lhs.false
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12776
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 2, !dbg !12778
  %18 = load i32, i32* %miny1, align 8, !dbg !12778
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12779
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 4, !dbg !12780
  %20 = load i32, i32* %miny2, align 8, !dbg !12780
  %cmp2 = icmp slt i32 %18, %20, !dbg !12781
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !12782

if.then3:                                         ; preds = %if.end
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12783
  %miny24 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 4, !dbg !12784
  %22 = load i32, i32* %miny24, align 8, !dbg !12784
  store i32 %22, i32* %my0, align 4, !dbg !12785
  br label %if.end6, !dbg !12786

if.else:                                          ; preds = %if.end
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12787
  %miny15 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 2, !dbg !12788
  %24 = load i32, i32* %miny15, align 8, !dbg !12788
  store i32 %24, i32* %my0, align 4, !dbg !12789
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12790
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 3, !dbg !12792
  %26 = load i32, i32* %maxy1, align 4, !dbg !12792
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12793
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 5, !dbg !12794
  %28 = load i32, i32* %maxy2, align 4, !dbg !12794
  %cmp7 = icmp sgt i32 %26, %28, !dbg !12795
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !12796

if.then8:                                         ; preds = %if.end6
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12797
  %maxy29 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 5, !dbg !12798
  %30 = load i32, i32* %maxy29, align 4, !dbg !12798
  store i32 %30, i32* %my2, align 4, !dbg !12799
  br label %if.end12, !dbg !12800

if.else10:                                        ; preds = %if.end6
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12801
  %maxy111 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 3, !dbg !12802
  %32 = load i32, i32* %maxy111, align 4, !dbg !12802
  store i32 %32, i32* %my2, align 4, !dbg !12803
  br label %if.end12

if.end12:                                         ; preds = %if.else10, %if.then8
  %33 = load i32, i32* %my2, align 4, !dbg !12804
  %34 = load i32, i32* %my0, align 4, !dbg !12806
  %cmp13 = icmp slt i32 %33, %34, !dbg !12807
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !12808

if.then14:                                        ; preds = %if.end12
  br label %for.end, !dbg !12809

if.end15:                                         ; preds = %if.end12
  %35 = load float*, float** %v1.addr, align 8, !dbg !12810
  %arrayidx = getelementptr inbounds float, float* %35, i64 0, !dbg !12810
  %36 = load float, float* %arrayidx, align 4, !dbg !12810
  %37 = load float*, float** %v2.addr, align 8, !dbg !12811
  %arrayidx16 = getelementptr inbounds float, float* %37, i64 0, !dbg !12811
  %38 = load float, float* %arrayidx16, align 4, !dbg !12811
  %sub = fsub float %36, %38, !dbg !12812
  store float %sub, float* %x1, align 4, !dbg !12813
  %39 = load float*, float** %v2.addr, align 8, !dbg !12814
  %arrayidx17 = getelementptr inbounds float, float* %39, i64 0, !dbg !12814
  %40 = load float, float* %arrayidx17, align 4, !dbg !12814
  %41 = load float*, float** %v3.addr, align 8, !dbg !12815
  %arrayidx18 = getelementptr inbounds float, float* %41, i64 0, !dbg !12815
  %42 = load float, float* %arrayidx18, align 4, !dbg !12815
  %sub19 = fsub float %40, %42, !dbg !12816
  store float %sub19, float* %x2, align 4, !dbg !12817
  %43 = load float*, float** %v1.addr, align 8, !dbg !12818
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 1, !dbg !12818
  %44 = load float, float* %arrayidx20, align 4, !dbg !12818
  %45 = load float*, float** %v2.addr, align 8, !dbg !12819
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 1, !dbg !12819
  %46 = load float, float* %arrayidx21, align 4, !dbg !12819
  %sub22 = fsub float %44, %46, !dbg !12820
  store float %sub22, float* %y1, align 4, !dbg !12821
  %47 = load float*, float** %v2.addr, align 8, !dbg !12822
  %arrayidx23 = getelementptr inbounds float, float* %47, i64 1, !dbg !12822
  %48 = load float, float* %arrayidx23, align 4, !dbg !12822
  %49 = load float*, float** %v3.addr, align 8, !dbg !12823
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !12823
  %50 = load float, float* %arrayidx24, align 4, !dbg !12823
  %sub25 = fsub float %48, %50, !dbg !12824
  store float %sub25, float* %y2, align 4, !dbg !12825
  %51 = load float*, float** %v1.addr, align 8, !dbg !12826
  %arrayidx26 = getelementptr inbounds float, float* %51, i64 2, !dbg !12826
  %52 = load float, float* %arrayidx26, align 4, !dbg !12826
  %53 = load float*, float** %v2.addr, align 8, !dbg !12827
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 2, !dbg !12827
  %54 = load float, float* %arrayidx27, align 4, !dbg !12827
  %sub28 = fsub float %52, %54, !dbg !12828
  store float %sub28, float* %z1, align 4, !dbg !12829
  %55 = load float*, float** %v2.addr, align 8, !dbg !12830
  %arrayidx29 = getelementptr inbounds float, float* %55, i64 2, !dbg !12830
  %56 = load float, float* %arrayidx29, align 4, !dbg !12830
  %57 = load float*, float** %v3.addr, align 8, !dbg !12831
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !12831
  %58 = load float, float* %arrayidx30, align 4, !dbg !12831
  %sub31 = fsub float %56, %58, !dbg !12832
  store float %sub31, float* %z2, align 4, !dbg !12833
  %59 = load float, float* %y1, align 4, !dbg !12834
  %60 = load float, float* %z2, align 4, !dbg !12835
  %mul = fmul float %59, %60, !dbg !12836
  %61 = load float, float* %z1, align 4, !dbg !12837
  %62 = load float, float* %y2, align 4, !dbg !12838
  %mul32 = fmul float %61, %62, !dbg !12839
  %sub33 = fsub float %mul, %mul32, !dbg !12840
  store float %sub33, float* %x0, align 4, !dbg !12841
  %63 = load float, float* %z1, align 4, !dbg !12842
  %64 = load float, float* %x2, align 4, !dbg !12843
  %mul34 = fmul float %63, %64, !dbg !12844
  %65 = load float, float* %x1, align 4, !dbg !12845
  %66 = load float, float* %z2, align 4, !dbg !12846
  %mul35 = fmul float %65, %66, !dbg !12847
  %sub36 = fsub float %mul34, %mul35, !dbg !12848
  store float %sub36, float* %y0, align 4, !dbg !12849
  %67 = load float, float* %x1, align 4, !dbg !12850
  %68 = load float, float* %y2, align 4, !dbg !12851
  %mul37 = fmul float %67, %68, !dbg !12852
  %69 = load float, float* %y1, align 4, !dbg !12853
  %70 = load float, float* %x2, align 4, !dbg !12854
  %mul38 = fmul float %69, %70, !dbg !12855
  %sub39 = fsub float %mul37, %mul38, !dbg !12856
  store float %sub39, float* %z0, align 4, !dbg !12857
  %71 = load float, float* %z0, align 4, !dbg !12858
  %cmp40 = fcmp oeq float %71, 0.000000e+00, !dbg !12860
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !12861

if.then41:                                        ; preds = %if.end15
  br label %for.end, !dbg !12862

if.end42:                                         ; preds = %if.end15
  %72 = load float, float* %x0, align 4, !dbg !12863
  %73 = load float*, float** %v1.addr, align 8, !dbg !12864
  %arrayidx43 = getelementptr inbounds float, float* %73, i64 0, !dbg !12864
  %74 = load float, float* %arrayidx43, align 4, !dbg !12864
  %mul44 = fmul float %72, %74, !dbg !12865
  %75 = load float, float* %y0, align 4, !dbg !12866
  %76 = load float*, float** %v1.addr, align 8, !dbg !12867
  %arrayidx45 = getelementptr inbounds float, float* %76, i64 1, !dbg !12867
  %77 = load float, float* %arrayidx45, align 4, !dbg !12867
  %mul46 = fmul float %75, %77, !dbg !12868
  %add = fadd float %mul44, %mul46, !dbg !12869
  %78 = load float, float* %z0, align 4, !dbg !12870
  %div = fdiv float %add, %78, !dbg !12871
  %79 = load float*, float** %v1.addr, align 8, !dbg !12872
  %arrayidx47 = getelementptr inbounds float, float* %79, i64 2, !dbg !12872
  %80 = load float, float* %arrayidx47, align 4, !dbg !12872
  %add48 = fadd float %div, %80, !dbg !12873
  store float %add48, float* %xx1, align 4, !dbg !12874
  %81 = load float, float* %x0, align 4, !dbg !12875
  %conv = fpext float %81 to double, !dbg !12876
  %fneg = fneg double %conv, !dbg !12877
  %82 = load float, float* %z0, align 4, !dbg !12878
  %conv49 = fpext float %82 to double, !dbg !12879
  %div50 = fdiv double %fneg, %conv49, !dbg !12880
  store double %div50, double* %zxd, align 8, !dbg !12881
  %83 = load float, float* %y0, align 4, !dbg !12882
  %conv51 = fpext float %83 to double, !dbg !12883
  %fneg52 = fneg double %conv51, !dbg !12884
  %84 = load float, float* %z0, align 4, !dbg !12885
  %conv53 = fpext float %84 to double, !dbg !12886
  %div54 = fdiv double %fneg52, %conv53, !dbg !12887
  store double %div54, double* %zyd, align 8, !dbg !12888
  %85 = load i32, i32* %my2, align 4, !dbg !12889
  %conv55 = sitofp i32 %85 to double, !dbg !12890
  %86 = load double, double* %zyd, align 8, !dbg !12891
  %mul56 = fmul double %conv55, %86, !dbg !12892
  %87 = load float, float* %xx1, align 4, !dbg !12893
  %conv57 = fpext float %87 to double, !dbg !12894
  %add58 = fadd double %mul56, %conv57, !dbg !12895
  store double %add58, double* %zy0, align 8, !dbg !12896
  %88 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12897
  %rectx59 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %88, i32 0, i32 0, !dbg !12898
  %89 = load i32, i32* %rectx59, align 8, !dbg !12898
  store i32 %89, i32* %rectx, align 4, !dbg !12899
  %90 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12900
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %90, i32 0, i32 16, !dbg !12901
  %91 = load i32*, i32** %rectz, align 8, !dbg !12901
  %92 = load i32, i32* %rectx, align 4, !dbg !12902
  %93 = load i32, i32* %my2, align 4, !dbg !12903
  %mul60 = mul nsw i32 %92, %93, !dbg !12904
  %idx.ext = sext i32 %mul60 to i64, !dbg !12905
  %add.ptr = getelementptr inbounds i32, i32* %91, i64 %idx.ext, !dbg !12905
  %94 = bitcast i32* %add.ptr to float*, !dbg !12906
  store float* %94, float** %rectzofs, align 8, !dbg !12907
  %95 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12908
  %rectp = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %95, i32 0, i32 19, !dbg !12909
  %96 = load i32*, i32** %rectp, align 8, !dbg !12909
  %97 = bitcast i32* %96 to %struct.DrawBufPixel*, !dbg !12910
  %98 = load i32, i32* %rectx, align 4, !dbg !12911
  %99 = load i32, i32* %my2, align 4, !dbg !12912
  %mul61 = mul nsw i32 %98, %99, !dbg !12913
  %idx.ext62 = sext i32 %mul61 to i64, !dbg !12914
  %add.ptr63 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %97, i64 %idx.ext62, !dbg !12914
  store %struct.DrawBufPixel* %add.ptr63, %struct.DrawBufPixel** %rectpofs, align 8, !dbg !12915
  %100 = load i32, i32* %my0, align 4, !dbg !12916
  %101 = load i32, i32* %my2, align 4, !dbg !12917
  %add64 = add nsw i32 %100, %101, !dbg !12918
  %div65 = sdiv i32 %add64, 2, !dbg !12919
  store i32 %div65, i32* %sn1, align 4, !dbg !12920
  %102 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12921
  %span166 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %102, i32 0, i32 10, !dbg !12923
  %103 = load float*, float** %span166, align 8, !dbg !12923
  %104 = load i32, i32* %sn1, align 4, !dbg !12924
  %idxprom = sext i32 %104 to i64, !dbg !12921
  %arrayidx67 = getelementptr inbounds float, float* %103, i64 %idxprom, !dbg !12921
  %105 = load float, float* %arrayidx67, align 4, !dbg !12921
  %106 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12925
  %span268 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %106, i32 0, i32 11, !dbg !12926
  %107 = load float*, float** %span268, align 8, !dbg !12926
  %108 = load i32, i32* %sn1, align 4, !dbg !12927
  %idxprom69 = sext i32 %108 to i64, !dbg !12925
  %arrayidx70 = getelementptr inbounds float, float* %107, i64 %idxprom69, !dbg !12925
  %109 = load float, float* %arrayidx70, align 4, !dbg !12925
  %cmp71 = fcmp olt float %105, %109, !dbg !12928
  br i1 %cmp71, label %if.then73, label %if.else80, !dbg !12929

if.then73:                                        ; preds = %if.end42
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12930
  %span174 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 10, !dbg !12932
  %111 = load float*, float** %span174, align 8, !dbg !12932
  %112 = load i32, i32* %my2, align 4, !dbg !12933
  %idx.ext75 = sext i32 %112 to i64, !dbg !12934
  %add.ptr76 = getelementptr inbounds float, float* %111, i64 %idx.ext75, !dbg !12934
  store float* %add.ptr76, float** %span1, align 8, !dbg !12935
  %113 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12936
  %span277 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %113, i32 0, i32 11, !dbg !12937
  %114 = load float*, float** %span277, align 8, !dbg !12937
  %115 = load i32, i32* %my2, align 4, !dbg !12938
  %idx.ext78 = sext i32 %115 to i64, !dbg !12939
  %add.ptr79 = getelementptr inbounds float, float* %114, i64 %idx.ext78, !dbg !12939
  store float* %add.ptr79, float** %span2, align 8, !dbg !12940
  br label %if.end87, !dbg !12941

if.else80:                                        ; preds = %if.end42
  %116 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12942
  %span281 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %116, i32 0, i32 11, !dbg !12944
  %117 = load float*, float** %span281, align 8, !dbg !12944
  %118 = load i32, i32* %my2, align 4, !dbg !12945
  %idx.ext82 = sext i32 %118 to i64, !dbg !12946
  %add.ptr83 = getelementptr inbounds float, float* %117, i64 %idx.ext82, !dbg !12946
  store float* %add.ptr83, float** %span1, align 8, !dbg !12947
  %119 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !12948
  %span184 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %119, i32 0, i32 10, !dbg !12949
  %120 = load float*, float** %span184, align 8, !dbg !12949
  %121 = load i32, i32* %my2, align 4, !dbg !12950
  %idx.ext85 = sext i32 %121 to i64, !dbg !12951
  %add.ptr86 = getelementptr inbounds float, float* %120, i64 %idx.ext85, !dbg !12951
  store float* %add.ptr86, float** %span2, align 8, !dbg !12952
  br label %if.end87

if.end87:                                         ; preds = %if.else80, %if.then73
  %122 = load i32, i32* %my2, align 4, !dbg !12953
  store i32 %122, i32* %y, align 4, !dbg !12955
  br label %for.cond, !dbg !12956

for.cond:                                         ; preds = %for.inc, %if.end87
  %123 = load i32, i32* %y, align 4, !dbg !12957
  %124 = load i32, i32* %my0, align 4, !dbg !12959
  %cmp88 = icmp sge i32 %123, %124, !dbg !12960
  br i1 %cmp88, label %for.body, label %for.end, !dbg !12961

for.body:                                         ; preds = %for.cond
  %125 = load float*, float** %span1, align 8, !dbg !12962
  %126 = load float, float* %125, align 4, !dbg !12964
  %conv90 = fpext float %126 to double, !dbg !12964
  %127 = call double @llvm.floor.f64(double %conv90), !dbg !12965
  %conv91 = fptosi double %127 to i32, !dbg !12965
  store i32 %conv91, i32* %sn1, align 4, !dbg !12966
  %128 = load float*, float** %span2, align 8, !dbg !12967
  %129 = load float, float* %128, align 4, !dbg !12968
  %conv92 = fpext float %129 to double, !dbg !12968
  %130 = call double @llvm.floor.f64(double %conv92), !dbg !12969
  %conv93 = fptosi double %130 to i32, !dbg !12969
  store i32 %conv93, i32* %sn2, align 4, !dbg !12970
  %131 = load i32, i32* %sn1, align 4, !dbg !12971
  %inc = add nsw i32 %131, 1, !dbg !12971
  store i32 %inc, i32* %sn1, align 4, !dbg !12971
  %132 = load i32, i32* %sn2, align 4, !dbg !12972
  %133 = load i32, i32* %rectx, align 4, !dbg !12974
  %cmp94 = icmp sge i32 %132, %133, !dbg !12975
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !12976

if.then96:                                        ; preds = %for.body
  %134 = load i32, i32* %rectx, align 4, !dbg !12977
  %sub97 = sub nsw i32 %134, 1, !dbg !12978
  store i32 %sub97, i32* %sn2, align 4, !dbg !12979
  br label %if.end98, !dbg !12980

if.end98:                                         ; preds = %if.then96, %for.body
  %135 = load i32, i32* %sn1, align 4, !dbg !12981
  %cmp99 = icmp slt i32 %135, 0, !dbg !12983
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !12984

if.then101:                                       ; preds = %if.end98
  store i32 0, i32* %sn1, align 4, !dbg !12985
  br label %if.end102, !dbg !12986

if.end102:                                        ; preds = %if.then101, %if.end98
  %136 = load i32, i32* %sn2, align 4, !dbg !12987
  %137 = load i32, i32* %sn1, align 4, !dbg !12989
  %cmp103 = icmp sge i32 %136, %137, !dbg !12990
  br i1 %cmp103, label %if.then105, label %if.end124, !dbg !12991

if.then105:                                       ; preds = %if.end102
  %138 = load i32, i32* %sn1, align 4, !dbg !12992
  %conv106 = sitofp i32 %138 to double, !dbg !12994
  %139 = load double, double* %zxd, align 8, !dbg !12995
  %mul107 = fmul double %conv106, %139, !dbg !12996
  %140 = load double, double* %zy0, align 8, !dbg !12997
  %add108 = fadd double %mul107, %140, !dbg !12998
  store double %add108, double* %zverg, align 8, !dbg !12999
  %141 = load float*, float** %rectzofs, align 8, !dbg !13000
  %142 = load i32, i32* %sn1, align 4, !dbg !13001
  %idx.ext109 = sext i32 %142 to i64, !dbg !13002
  %add.ptr110 = getelementptr inbounds float, float* %141, i64 %idx.ext109, !dbg !13002
  store float* %add.ptr110, float** %rz, align 8, !dbg !13003
  %143 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectpofs, align 8, !dbg !13004
  %144 = load i32, i32* %sn1, align 4, !dbg !13005
  %idx.ext111 = sext i32 %144 to i64, !dbg !13006
  %add.ptr112 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %143, i64 %idx.ext111, !dbg !13006
  store %struct.DrawBufPixel* %add.ptr112, %struct.DrawBufPixel** %rp, align 8, !dbg !13007
  %145 = load i32, i32* %sn2, align 4, !dbg !13008
  %146 = load i32, i32* %sn1, align 4, !dbg !13009
  %sub113 = sub nsw i32 %145, %146, !dbg !13010
  store i32 %sub113, i32* %x, align 4, !dbg !13011
  br label %while.cond, !dbg !13012

while.cond:                                       ; preds = %if.end121, %if.then105
  %147 = load i32, i32* %x, align 4, !dbg !13013
  %cmp114 = icmp sge i32 %147, 0, !dbg !13014
  br i1 %cmp114, label %while.body, label %while.end, !dbg !13012

while.body:                                       ; preds = %while.cond
  %148 = load double, double* %zverg, align 8, !dbg !13015
  %149 = load float*, float** %rz, align 8, !dbg !13018
  %150 = load float, float* %149, align 4, !dbg !13019
  %conv116 = fpext float %150 to double, !dbg !13020
  %cmp117 = fcmp olt double %148, %conv116, !dbg !13021
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !13022

if.then119:                                       ; preds = %while.body
  %151 = load double, double* %zverg, align 8, !dbg !13023
  %conv120 = fptrunc double %151 to float, !dbg !13023
  %152 = load float*, float** %rz, align 8, !dbg !13025
  store float %conv120, float* %152, align 4, !dbg !13026
  %153 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rp, align 8, !dbg !13027
  %154 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %col.addr, align 8, !dbg !13028
  %155 = bitcast %struct.DrawBufPixel* %153 to i8*, !dbg !13029
  %156 = bitcast %struct.DrawBufPixel* %154 to i8*, !dbg !13029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false), !dbg !13029
  br label %if.end121, !dbg !13030

if.end121:                                        ; preds = %if.then119, %while.body
  %157 = load double, double* %zxd, align 8, !dbg !13031
  %158 = load double, double* %zverg, align 8, !dbg !13032
  %add122 = fadd double %158, %157, !dbg !13032
  store double %add122, double* %zverg, align 8, !dbg !13032
  %159 = load float*, float** %rz, align 8, !dbg !13033
  %incdec.ptr = getelementptr inbounds float, float* %159, i32 1, !dbg !13033
  store float* %incdec.ptr, float** %rz, align 8, !dbg !13033
  %160 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rp, align 8, !dbg !13034
  %incdec.ptr123 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %160, i32 1, !dbg !13034
  store %struct.DrawBufPixel* %incdec.ptr123, %struct.DrawBufPixel** %rp, align 8, !dbg !13034
  %161 = load i32, i32* %x, align 4, !dbg !13035
  %dec = add nsw i32 %161, -1, !dbg !13035
  store i32 %dec, i32* %x, align 4, !dbg !13035
  br label %while.cond, !dbg !13012, !llvm.loop !13036

while.end:                                        ; preds = %while.cond
  br label %if.end124, !dbg !13038

if.end124:                                        ; preds = %while.end, %if.end102
  %162 = load double, double* %zyd, align 8, !dbg !13039
  %163 = load double, double* %zy0, align 8, !dbg !13040
  %sub125 = fsub double %163, %162, !dbg !13040
  store double %sub125, double* %zy0, align 8, !dbg !13040
  %164 = load i32, i32* %rectx, align 4, !dbg !13041
  %165 = load float*, float** %rectzofs, align 8, !dbg !13042
  %idx.ext126 = sext i32 %164 to i64, !dbg !13042
  %idx.neg = sub i64 0, %idx.ext126, !dbg !13042
  %add.ptr127 = getelementptr inbounds float, float* %165, i64 %idx.neg, !dbg !13042
  store float* %add.ptr127, float** %rectzofs, align 8, !dbg !13042
  %166 = load i32, i32* %rectx, align 4, !dbg !13043
  %167 = load %struct.DrawBufPixel*, %struct.DrawBufPixel** %rectpofs, align 8, !dbg !13044
  %idx.ext128 = sext i32 %166 to i64, !dbg !13044
  %idx.neg129 = sub i64 0, %idx.ext128, !dbg !13044
  %add.ptr130 = getelementptr inbounds %struct.DrawBufPixel, %struct.DrawBufPixel* %167, i64 %idx.neg129, !dbg !13044
  store %struct.DrawBufPixel* %add.ptr130, %struct.DrawBufPixel** %rectpofs, align 8, !dbg !13044
  br label %for.inc, !dbg !13045

for.inc:                                          ; preds = %if.end124
  %168 = load i32, i32* %y, align 4, !dbg !13046
  %dec131 = add nsw i32 %168, -1, !dbg !13046
  store i32 %dec131, i32* %y, align 4, !dbg !13046
  %169 = load float*, float** %span1, align 8, !dbg !13047
  %incdec.ptr132 = getelementptr inbounds float, float* %169, i32 -1, !dbg !13047
  store float* %incdec.ptr132, float** %span1, align 8, !dbg !13047
  %170 = load float*, float** %span2, align 8, !dbg !13048
  %incdec.ptr133 = getelementptr inbounds float, float* %170, i32 -1, !dbg !13048
  store float* %incdec.ptr133, float** %span2, align 8, !dbg !13048
  br label %for.cond, !dbg !13049, !llvm.loop !13050

for.end:                                          ; preds = %if.then, %if.then14, %if.then41, %for.cond
  ret void, !dbg !13052
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbuffer_abuf_shadow(%struct.Render* %re, %struct.LampRen* %lar, [4 x float]* %winmat, %struct.APixstr* %APixbuf, %struct.APixstrand* %APixbufstrand, %struct.ListBase* %apsmbase, i32 %size, i32 %samples, [2 x float]* %jit) #0 !dbg !13053 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %APixbuf.addr = alloca %struct.APixstr*, align 8
  %APixbufstrand.addr = alloca %struct.APixstrand*, align 8
  %apsmbase.addr = alloca %struct.ListBase*, align 8
  %size.addr = alloca i32, align 4
  %samples.addr = alloca i32, align 4
  %jit.addr = alloca [2 x float]*, align 8
  %pa = alloca %struct.RenderPart, align 8
  %lay = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  store %struct.APixstr* %APixbuf, %struct.APixstr** %APixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %APixbuf.addr, metadata !13063, metadata !DIExpression()), !dbg !13064
  store %struct.APixstrand* %APixbufstrand, %struct.APixstrand** %APixbufstrand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %APixbufstrand.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  store %struct.ListBase* %apsmbase, %struct.ListBase** %apsmbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %apsmbase.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13069, metadata !DIExpression()), !dbg !13070
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  store [2 x float]* %jit, [2 x float]** %jit.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %jit.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.declare(metadata %struct.RenderPart* %pa, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !13077, metadata !DIExpression()), !dbg !13078
  store i32 -1, i32* %lay, align 4, !dbg !13078
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !13079
  %mode = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 7, !dbg !13081
  %1 = load i32, i32* %mode, align 4, !dbg !13081
  %and = and i32 %1, 4, !dbg !13082
  %tobool = icmp ne i32 %and, 0, !dbg !13082
  br i1 %tobool, label %if.then, label %if.end, !dbg !13083

if.then:                                          ; preds = %entry
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !13084
  %lay1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 17, !dbg !13085
  %3 = load i32, i32* %lay1, align 4, !dbg !13085
  store i32 %3, i32* %lay, align 4, !dbg !13086
  br label %if.end, !dbg !13087

if.end:                                           ; preds = %if.then, %entry
  %4 = bitcast %struct.RenderPart* %pa to i8*, !dbg !13088
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 160, i1 false), !dbg !13088
  %5 = load i32, i32* %size.addr, align 4, !dbg !13089
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 14, !dbg !13090
  store i32 %5, i32* %rectx, align 8, !dbg !13091
  %6 = load i32, i32* %size.addr, align 4, !dbg !13092
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 15, !dbg !13093
  store i32 %6, i32* %recty, align 4, !dbg !13094
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 13, !dbg !13095
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !13096
  store i32 0, i32* %xmin, align 8, !dbg !13097
  %disprect2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 13, !dbg !13098
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect2, i32 0, i32 2, !dbg !13099
  store i32 0, i32* %ymin, align 8, !dbg !13100
  %7 = load i32, i32* %size.addr, align 4, !dbg !13101
  %disprect3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 13, !dbg !13102
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect3, i32 0, i32 1, !dbg !13103
  store i32 %7, i32* %xmax, align 4, !dbg !13104
  %8 = load i32, i32* %size.addr, align 4, !dbg !13105
  %disprect4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %pa, i32 0, i32 13, !dbg !13106
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect4, i32 0, i32 3, !dbg !13107
  store i32 %8, i32* %ymax, align 4, !dbg !13108
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13109
  %10 = load %struct.APixstr*, %struct.APixstr** %APixbuf.addr, align 8, !dbg !13110
  %11 = load %struct.ListBase*, %struct.ListBase** %apsmbase.addr, align 8, !dbg !13111
  %12 = load i32, i32* %lay, align 4, !dbg !13112
  %13 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !13113
  %14 = load i32, i32* %size.addr, align 4, !dbg !13114
  %15 = load i32, i32* %size.addr, align 4, !dbg !13115
  %16 = load i32, i32* %samples.addr, align 4, !dbg !13116
  %17 = load [2 x float]*, [2 x float]** %jit.addr, align 8, !dbg !13117
  %call = call i32 @zbuffer_abuf(%struct.Render* %9, %struct.RenderPart* %pa, %struct.APixstr* %10, %struct.ListBase* %11, i32 %12, i32 0, [4 x float]* %13, i32 %14, i32 %15, i32 %16, [2 x float]* %17, float 1.000000e+00, i32 1), !dbg !13118
  %18 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand.addr, align 8, !dbg !13119
  %tobool5 = icmp ne %struct.APixstrand* %18, null, !dbg !13119
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !13121

if.then6:                                         ; preds = %if.end
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13122
  %20 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand.addr, align 8, !dbg !13123
  %21 = load %struct.ListBase*, %struct.ListBase** %apsmbase.addr, align 8, !dbg !13124
  %22 = load i32, i32* %lay, align 4, !dbg !13125
  %23 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !13126
  %24 = load i32, i32* %size.addr, align 4, !dbg !13127
  %25 = load i32, i32* %size.addr, align 4, !dbg !13128
  %26 = load i32, i32* %samples.addr, align 4, !dbg !13129
  %27 = load [2 x float]*, [2 x float]** %jit.addr, align 8, !dbg !13130
  %call7 = call i32 @zbuffer_strands_abuf(%struct.Render* %19, %struct.RenderPart* %pa, %struct.APixstrand* %20, %struct.ListBase* %21, i32 %22, i32 0, [4 x float]* %23, i32 %24, i32 %25, i32 %26, [2 x float]* %27, float 1.000000e+00, i32 1, %struct.StrandShadeCache* null), !dbg !13131
  br label %if.end8, !dbg !13131

if.end8:                                          ; preds = %if.then6, %if.end
  ret void, !dbg !13132
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @zbuffer_abuf(%struct.Render* %re, %struct.RenderPart* %pa, %struct.APixstr* %APixbuf, %struct.ListBase* %apsmbase, i32 %lay, i32 %negzmask, [4 x float]* %winmat, i32 %winx, i32 %winy, i32 %samples, [2 x float]* %jit, float %UNUSED_clipcrop, i32 %shadow) #0 !dbg !13133 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %APixbuf.addr = alloca %struct.APixstr*, align 8
  %apsmbase.addr = alloca %struct.ListBase*, align 8
  %lay.addr = alloca i32, align 4
  %negzmask.addr = alloca i32, align 4
  %winmat.addr = alloca [4 x float]*, align 8
  %winx.addr = alloca i32, align 4
  %winy.addr = alloca i32, align 4
  %samples.addr = alloca i32, align 4
  %jit.addr = alloca [2 x float]*, align 8
  %UNUSED_clipcrop.addr = alloca float, align 4
  %shadow.addr = alloca i32, align 4
  %cache = alloca [256 x %struct.ZbufProjectCache], align 16
  %zspans = alloca [16 x %struct.ZSpan], align 16
  %zspan = alloca %struct.ZSpan*, align 8
  %ma = alloca %struct.Material*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %vec = alloca [3 x float], align 4
  %hoco = alloca [4 x float], align 16
  %mul = alloca float, align 4
  %zval = alloca float, align 4
  %fval = alloca float, align 4
  %obwinmat = alloca [4 x [4 x float]], align 16
  %bounds = alloca [4 x float], align 16
  %ho1 = alloca [4 x float], align 16
  %ho2 = alloca [4 x float], align 16
  %ho3 = alloca [4 x float], align 16
  %ho4 = alloca [4 x float], align 16
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %zvlnr = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %c4 = alloca i32, align 4
  %dofill = alloca i32, align 4
  %zsample = alloca i32, align 4
  %polygon_offset = alloca i32, align 4
  %partclip = alloca i16, align 2
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !13138, metadata !DIExpression()), !dbg !13139
  store %struct.APixstr* %APixbuf, %struct.APixstr** %APixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %APixbuf.addr, metadata !13140, metadata !DIExpression()), !dbg !13141
  store %struct.ListBase* %apsmbase, %struct.ListBase** %apsmbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %apsmbase.addr, metadata !13142, metadata !DIExpression()), !dbg !13143
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !13144, metadata !DIExpression()), !dbg !13145
  store i32 %negzmask, i32* %negzmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %negzmask.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !13148, metadata !DIExpression()), !dbg !13149
  store i32 %winx, i32* %winx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winx.addr, metadata !13150, metadata !DIExpression()), !dbg !13151
  store i32 %winy, i32* %winy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winy.addr, metadata !13152, metadata !DIExpression()), !dbg !13153
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !13154, metadata !DIExpression()), !dbg !13155
  store [2 x float]* %jit, [2 x float]** %jit.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %jit.addr, metadata !13156, metadata !DIExpression()), !dbg !13157
  store float %UNUSED_clipcrop, float* %UNUSED_clipcrop.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_clipcrop.addr, metadata !13158, metadata !DIExpression()), !dbg !13159
  store i32 %shadow, i32* %shadow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shadow.addr, metadata !13160, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.declare(metadata [256 x %struct.ZbufProjectCache]* %cache, metadata !13162, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.declare(metadata [16 x %struct.ZSpan]* %zspans, metadata !13164, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan, metadata !13166, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !13168, metadata !DIExpression()), !dbg !13169
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !13169
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !13170, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !13172, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !13174, metadata !DIExpression()), !dbg !13175
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !13175
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !13176, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !13178, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !13180, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !13182, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !13184, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !13186, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.declare(metadata float* %mul, metadata !13188, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.declare(metadata float* %zval, metadata !13190, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.declare(metadata float* %fval, metadata !13192, metadata !DIExpression()), !dbg !13193
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obwinmat, metadata !13194, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.declare(metadata [4 x float]* %bounds, metadata !13196, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.declare(metadata [4 x float]* %ho1, metadata !13198, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.declare(metadata [4 x float]* %ho2, metadata !13200, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.declare(metadata [4 x float]* %ho3, metadata !13202, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.declare(metadata [4 x float]* %ho4, metadata !13204, metadata !DIExpression()), !dbg !13205
  %0 = bitcast [4 x float]* %ho4 to i8*, !dbg !13205
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !13205
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13206, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.declare(metadata i32* %v, metadata !13208, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.declare(metadata i32* %zvlnr, metadata !13210, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !13214, metadata !DIExpression()), !dbg !13215
  call void @llvm.dbg.declare(metadata i32* %c3, metadata !13216, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.declare(metadata i32* %c4, metadata !13218, metadata !DIExpression()), !dbg !13219
  store i32 0, i32* %c4, align 4, !dbg !13219
  call void @llvm.dbg.declare(metadata i32* %dofill, metadata !13220, metadata !DIExpression()), !dbg !13221
  store i32 0, i32* %dofill, align 4, !dbg !13221
  call void @llvm.dbg.declare(metadata i32* %zsample, metadata !13222, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.declare(metadata i32* %polygon_offset, metadata !13224, metadata !DIExpression()), !dbg !13225
  %1 = load i32, i32* %winx.addr, align 4, !dbg !13226
  %2 = load i32, i32* %winy.addr, align 4, !dbg !13227
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13228
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13229
  call void @zbuffer_part_bounds(i32 %1, i32 %2, %struct.RenderPart* %3, float* %arraydecay), !dbg !13230
  store i32 0, i32* %zsample, align 4, !dbg !13231
  br label %for.cond, !dbg !13233

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %zsample, align 4, !dbg !13234
  %5 = load i32, i32* %samples.addr, align 4, !dbg !13236
  %cmp = icmp slt i32 %4, %5, !dbg !13237
  br i1 %cmp, label %for.body, label %for.end, !dbg !13238

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %zsample, align 4, !dbg !13239
  %idxprom = sext i32 %6 to i64, !dbg !13241
  %arrayidx = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom, !dbg !13241
  store %struct.ZSpan* %arrayidx, %struct.ZSpan** %zspan, align 8, !dbg !13242
  %7 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13243
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13244
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 14, !dbg !13245
  %9 = load i32, i32* %rectx, align 8, !dbg !13245
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13246
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 15, !dbg !13247
  %11 = load i32, i32* %recty, align 4, !dbg !13247
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13248
  %clipcrop = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 19, !dbg !13249
  %13 = load float, float* %clipcrop, align 4, !dbg !13249
  call void @zbuf_alloc_span(%struct.ZSpan* %7, i32 %9, i32 %11, float %13), !dbg !13250
  %14 = load i32, i32* %winx.addr, align 4, !dbg !13251
  %conv = sitofp i32 %14 to float, !dbg !13252
  %div = fdiv float %conv, 2.000000e+00, !dbg !13253
  %15 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13254
  %zmulx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %15, i32 0, i32 12, !dbg !13255
  store float %div, float* %zmulx, align 8, !dbg !13256
  %16 = load i32, i32* %winy.addr, align 4, !dbg !13257
  %conv1 = sitofp i32 %16 to float, !dbg !13258
  %div2 = fdiv float %conv1, 2.000000e+00, !dbg !13259
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13260
  %zmuly = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 13, !dbg !13261
  store float %div2, float* %zmuly, align 4, !dbg !13262
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13263
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13264
  %rectx3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 14, !dbg !13265
  %20 = load i32, i32* %rectx3, align 8, !dbg !13265
  %conv4 = sext i32 %20 to i64, !dbg !13264
  %mul5 = mul i64 4, %conv4, !dbg !13266
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13267
  %recty6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 15, !dbg !13268
  %22 = load i32, i32* %recty6, align 4, !dbg !13268
  %conv7 = sext i32 %22 to i64, !dbg !13267
  %mul8 = mul i64 %mul5, %conv7, !dbg !13269
  %call = call i8* %18(i64 %mul8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)), !dbg !13263
  %23 = bitcast i8* %call to i32*, !dbg !13263
  %24 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13270
  %arectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %24, i32 0, i32 17, !dbg !13271
  store i32* %23, i32** %arectz, align 8, !dbg !13272
  %25 = load %struct.APixstr*, %struct.APixstr** %APixbuf.addr, align 8, !dbg !13273
  %26 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13274
  %apixbuf = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %26, i32 0, i32 22, !dbg !13275
  store %struct.APixstr* %25, %struct.APixstr** %apixbuf, align 8, !dbg !13276
  %27 = load %struct.ListBase*, %struct.ListBase** %apsmbase.addr, align 8, !dbg !13277
  %28 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13278
  %apsmbase9 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %28, i32 0, i32 25, !dbg !13279
  store %struct.ListBase* %27, %struct.ListBase** %apsmbase9, align 8, !dbg !13280
  %29 = load i32, i32* %negzmask.addr, align 4, !dbg !13281
  %tobool = icmp ne i32 %29, 0, !dbg !13281
  br i1 %tobool, label %if.then, label %if.end, !dbg !13283

if.then:                                          ; preds = %for.body
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13284
  %31 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13285
  %rectx10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %31, i32 0, i32 14, !dbg !13286
  %32 = load i32, i32* %rectx10, align 8, !dbg !13286
  %conv11 = sext i32 %32 to i64, !dbg !13285
  %mul12 = mul i64 4, %conv11, !dbg !13287
  %33 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13288
  %recty13 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %33, i32 0, i32 15, !dbg !13289
  %34 = load i32, i32* %recty13, align 4, !dbg !13289
  %conv14 = sext i32 %34 to i64, !dbg !13288
  %mul15 = mul i64 %mul12, %conv14, !dbg !13290
  %call16 = call i8* %30(i64 %mul15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0)), !dbg !13284
  %35 = bitcast i8* %call16 to i32*, !dbg !13284
  %36 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13291
  %rectmask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %36, i32 0, i32 21, !dbg !13292
  store i32* %35, i32** %rectmask, align 8, !dbg !13293
  br label %if.end, !dbg !13291

if.end:                                           ; preds = %if.then, %for.body
  %37 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13294
  %zbuffunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %37, i32 0, i32 34, !dbg !13295
  store void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)* @zbuffillAc4, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)** %zbuffunc, align 8, !dbg !13296
  %38 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13297
  %zbuflinefunc = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %38, i32 0, i32 35, !dbg !13298
  store void (%struct.ZSpan*, i32, i32, float*, float*)* @zbuflineAc, void (%struct.ZSpan*, i32, i32, float*, float*)** %zbuflinefunc, align 8, !dbg !13299
  %39 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13300
  %40 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13301
  %arectz17 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %40, i32 0, i32 17, !dbg !13302
  %41 = load i32*, i32** %arectz17, align 8, !dbg !13302
  %42 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13303
  %rectmask18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %42, i32 0, i32 21, !dbg !13304
  %43 = load i32*, i32** %rectmask18, align 8, !dbg !13304
  %44 = load i32, i32* %zsample, align 4, !dbg !13305
  call void @copyto_abufz(%struct.RenderPart* %39, i32* %41, i32* %43, i32 %44), !dbg !13306
  %45 = load i32, i32* %zsample, align 4, !dbg !13307
  %shl = shl i32 1, %45, !dbg !13308
  %46 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13309
  %mask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %46, i32 0, i32 28, !dbg !13310
  store i32 %shl, i32* %mask, align 8, !dbg !13311
  %47 = load [2 x float]*, [2 x float]** %jit.addr, align 8, !dbg !13312
  %tobool19 = icmp ne [2 x float]* %47, null, !dbg !13312
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !13314

if.then20:                                        ; preds = %if.end
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13315
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %48, i32 0, i32 13, !dbg !13317
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !13318
  %49 = load i32, i32* %xmin, align 8, !dbg !13318
  %sub = sub nsw i32 0, %49, !dbg !13319
  %conv21 = sitofp i32 %sub to float, !dbg !13319
  %50 = load [2 x float]*, [2 x float]** %jit.addr, align 8, !dbg !13320
  %51 = load i32, i32* %zsample, align 4, !dbg !13321
  %idxprom22 = sext i32 %51 to i64, !dbg !13320
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %50, i64 %idxprom22, !dbg !13320
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !13320
  %52 = load float, float* %arrayidx24, align 4, !dbg !13320
  %sub25 = fsub float %conv21, %52, !dbg !13322
  %53 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13323
  %zofsx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %53, i32 0, i32 14, !dbg !13324
  store float %sub25, float* %zofsx, align 8, !dbg !13325
  %54 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13326
  %disprect26 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %54, i32 0, i32 13, !dbg !13327
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect26, i32 0, i32 2, !dbg !13328
  %55 = load i32, i32* %ymin, align 8, !dbg !13328
  %sub27 = sub nsw i32 0, %55, !dbg !13329
  %conv28 = sitofp i32 %sub27 to float, !dbg !13329
  %56 = load [2 x float]*, [2 x float]** %jit.addr, align 8, !dbg !13330
  %57 = load i32, i32* %zsample, align 4, !dbg !13331
  %idxprom29 = sext i32 %57 to i64, !dbg !13330
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %56, i64 %idxprom29, !dbg !13330
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx30, i64 0, i64 1, !dbg !13330
  %58 = load float, float* %arrayidx31, align 4, !dbg !13330
  %sub32 = fsub float %conv28, %58, !dbg !13332
  %59 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13333
  %zofsy = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %59, i32 0, i32 15, !dbg !13334
  store float %sub32, float* %zofsy, align 4, !dbg !13335
  br label %if.end43, !dbg !13336

if.else:                                          ; preds = %if.end
  %60 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13337
  %disprect33 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %60, i32 0, i32 13, !dbg !13339
  %xmin34 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect33, i32 0, i32 0, !dbg !13340
  %61 = load i32, i32* %xmin34, align 8, !dbg !13340
  %sub35 = sub nsw i32 0, %61, !dbg !13341
  %conv36 = sitofp i32 %sub35 to float, !dbg !13341
  %62 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13342
  %zofsx37 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %62, i32 0, i32 14, !dbg !13343
  store float %conv36, float* %zofsx37, align 8, !dbg !13344
  %63 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13345
  %disprect38 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %63, i32 0, i32 13, !dbg !13346
  %ymin39 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect38, i32 0, i32 2, !dbg !13347
  %64 = load i32, i32* %ymin39, align 8, !dbg !13347
  %sub40 = sub nsw i32 0, %64, !dbg !13348
  %conv41 = sitofp i32 %sub40 to float, !dbg !13348
  %65 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13349
  %zofsy42 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %65, i32 0, i32 15, !dbg !13350
  store float %conv41, float* %zofsy42, align 4, !dbg !13351
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then20
  %66 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13352
  %zofsx44 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %66, i32 0, i32 14, !dbg !13353
  %67 = load float, float* %zofsx44, align 8, !dbg !13354
  %sub45 = fsub float %67, 5.000000e-01, !dbg !13354
  store float %sub45, float* %zofsx44, align 8, !dbg !13354
  %68 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13355
  %zofsy46 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %68, i32 0, i32 15, !dbg !13356
  %69 = load float, float* %zofsy46, align 4, !dbg !13357
  %sub47 = fsub float %69, 5.000000e-01, !dbg !13357
  store float %sub47, float* %zofsy46, align 4, !dbg !13357
  br label %for.inc, !dbg !13358

for.inc:                                          ; preds = %if.end43
  %70 = load i32, i32* %zsample, align 4, !dbg !13359
  %inc = add nsw i32 %70, 1, !dbg !13359
  store i32 %inc, i32* %zsample, align 4, !dbg !13359
  br label %for.cond, !dbg !13360, !llvm.loop !13361

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %zvlnr, align 4, !dbg !13363
  store i32 0, i32* %i, align 4, !dbg !13364
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13366
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 70, !dbg !13367
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !13368
  %72 = load i8*, i8** %first, align 8, !dbg !13368
  %73 = bitcast i8* %72 to %struct.ObjectInstanceRen*, !dbg !13366
  store %struct.ObjectInstanceRen* %73, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13369
  br label %for.cond48, !dbg !13370

for.cond48:                                       ; preds = %for.inc283, %for.end
  %74 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13371
  %tobool49 = icmp ne %struct.ObjectInstanceRen* %74, null, !dbg !13373
  br i1 %tobool49, label %for.body50, label %for.end285, !dbg !13373

for.body50:                                       ; preds = %for.cond48
  %75 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13374
  %obr51 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %75, i32 0, i32 2, !dbg !13376
  %76 = load %struct.ObjectRen*, %struct.ObjectRen** %obr51, align 8, !dbg !13376
  store %struct.ObjectRen* %76, %struct.ObjectRen** %obr, align 8, !dbg !13377
  %77 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13378
  %lay52 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %77, i32 0, i32 7, !dbg !13380
  %78 = load i32, i32* %lay52, align 8, !dbg !13380
  %79 = load i32, i32* %lay.addr, align 4, !dbg !13381
  %and = and i32 %78, %79, !dbg !13382
  %tobool53 = icmp ne i32 %and, 0, !dbg !13382
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !13383

if.then54:                                        ; preds = %for.body50
  br label %for.inc283, !dbg !13384

if.end55:                                         ; preds = %for.body50
  %80 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13385
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %80, i32 0, i32 11, !dbg !13387
  %81 = load i16, i16* %flag, align 8, !dbg !13387
  %conv56 = sext i16 %81 to i32, !dbg !13385
  %and57 = and i32 %conv56, 3, !dbg !13388
  %tobool58 = icmp ne i32 %and57, 0, !dbg !13388
  br i1 %tobool58, label %if.then59, label %if.else62, !dbg !13389

if.then59:                                        ; preds = %if.end55
  %arraydecay60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13390
  %82 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !13391
  %83 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13392
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %83, i32 0, i32 8, !dbg !13393
  %arraydecay61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13392
  call void @mul_m4_m4m4([4 x float]* %arraydecay60, [4 x float]* %82, [4 x float]* %arraydecay61), !dbg !13394
  br label %if.end64, !dbg !13394

if.else62:                                        ; preds = %if.end55
  %arraydecay63 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13395
  %84 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !13396
  call void @copy_m4_m4([4 x float]* %arraydecay63, [4 x float]* %84), !dbg !13397
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then59
  %85 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13398
  %obr65 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %85, i32 0, i32 2, !dbg !13400
  %86 = load %struct.ObjectRen*, %struct.ObjectRen** %obr65, align 8, !dbg !13400
  %boundbox = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %86, i32 0, i32 9, !dbg !13401
  %arraydecay66 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox, i64 0, i64 0, !dbg !13398
  %arraydecay67 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13402
  %arraydecay68 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13403
  %call69 = call i32 @clip_render_object([3 x float]* %arraydecay66, float* %arraydecay67, [4 x float]* %arraydecay68), !dbg !13404
  %tobool70 = icmp ne i32 %call69, 0, !dbg !13404
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !13405

if.then71:                                        ; preds = %if.end64
  br label %for.inc283, !dbg !13406

if.end72:                                         ; preds = %if.end64
  %arraydecay73 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !13407
  %87 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !13408
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %87, i32 0, i32 10, !dbg !13409
  %88 = load i32, i32* %totvert, align 8, !dbg !13409
  call void @zbuf_project_cache_clear(%struct.ZbufProjectCache* %arraydecay73, i32 %88), !dbg !13410
  store i32 0, i32* %v, align 4, !dbg !13411
  br label %for.cond74, !dbg !13413

for.cond74:                                       ; preds = %for.inc274, %if.end72
  %89 = load i32, i32* %v, align 4, !dbg !13414
  %90 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !13416
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %90, i32 0, i32 11, !dbg !13417
  %91 = load i32, i32* %totvlak, align 4, !dbg !13417
  %cmp75 = icmp slt i32 %89, %91, !dbg !13418
  br i1 %cmp75, label %for.body77, label %for.end276, !dbg !13419

for.body77:                                       ; preds = %for.cond74
  %92 = load i32, i32* %v, align 4, !dbg !13420
  %and78 = and i32 %92, 255, !dbg !13423
  %cmp79 = icmp eq i32 %and78, 0, !dbg !13424
  br i1 %cmp79, label %if.then81, label %if.else84, !dbg !13425

if.then81:                                        ; preds = %for.body77
  %93 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !13426
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %93, i32 0, i32 19, !dbg !13427
  %94 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !13427
  %95 = load i32, i32* %v, align 4, !dbg !13428
  %shr = ashr i32 %95, 8, !dbg !13429
  %idxprom82 = sext i32 %shr to i64, !dbg !13426
  %arrayidx83 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %94, i64 %idxprom82, !dbg !13426
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx83, i32 0, i32 0, !dbg !13430
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !13430
  store %struct.VlakRen* %96, %struct.VlakRen** %vlr, align 8, !dbg !13431
  br label %if.end85, !dbg !13432

if.else84:                                        ; preds = %for.body77
  %97 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13433
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %97, i32 1, !dbg !13433
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !13433
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %if.then81
  %98 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13434
  %mat86 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %98, i32 0, i32 5, !dbg !13436
  %99 = load %struct.Material*, %struct.Material** %mat86, align 8, !dbg !13436
  %100 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13437
  %cmp87 = icmp ne %struct.Material* %99, %100, !dbg !13438
  br i1 %cmp87, label %if.then89, label %if.end111, !dbg !13439

if.then89:                                        ; preds = %if.end85
  %101 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13440
  %mat90 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %101, i32 0, i32 5, !dbg !13442
  %102 = load %struct.Material*, %struct.Material** %mat90, align 8, !dbg !13442
  store %struct.Material* %102, %struct.Material** %ma, align 8, !dbg !13443
  %103 = load i32, i32* %shadow.addr, align 4, !dbg !13444
  %tobool91 = icmp ne i32 %103, 0, !dbg !13444
  br i1 %tobool91, label %if.then92, label %if.else97, !dbg !13446

if.then92:                                        ; preds = %if.then89
  %104 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13447
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %104, i32 0, i32 53, !dbg !13448
  %105 = load i32, i32* %mode2, align 4, !dbg !13448
  %and93 = and i32 %105, 1, !dbg !13449
  %tobool94 = icmp ne i32 %and93, 0, !dbg !13449
  br i1 %tobool94, label %land.rhs, label %land.end, !dbg !13450

land.rhs:                                         ; preds = %if.then92
  %106 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13451
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %106, i32 0, i32 51, !dbg !13452
  %107 = load i32, i32* %mode, align 4, !dbg !13452
  %and95 = and i32 %107, 33554432, !dbg !13453
  %tobool96 = icmp ne i32 %and95, 0, !dbg !13450
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then92
  %108 = phi i1 [ false, %if.then92 ], [ %tobool96, %land.rhs ], !dbg !13454
  %land.ext = zext i1 %108 to i32, !dbg !13450
  store i32 %land.ext, i32* %dofill, align 4, !dbg !13455
  br label %if.end110, !dbg !13456

if.else97:                                        ; preds = %if.then89
  %109 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13457
  %mode98 = getelementptr inbounds %struct.Material, %struct.Material* %109, i32 0, i32 51, !dbg !13458
  %110 = load i32, i32* %mode98, align 4, !dbg !13458
  %and99 = and i32 %110, 65536, !dbg !13459
  %tobool100 = icmp ne i32 %and99, 0, !dbg !13459
  br i1 %tobool100, label %land.lhs.true, label %land.end108, !dbg !13460

land.lhs.true:                                    ; preds = %if.else97
  %111 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13461
  %mode101 = getelementptr inbounds %struct.Material, %struct.Material* %111, i32 0, i32 51, !dbg !13462
  %112 = load i32, i32* %mode101, align 4, !dbg !13462
  %and102 = and i32 %112, 64, !dbg !13463
  %tobool103 = icmp ne i32 %and102, 0, !dbg !13463
  br i1 %tobool103, label %land.rhs104, label %land.end108, !dbg !13464

land.rhs104:                                      ; preds = %land.lhs.true
  %113 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13465
  %mode105 = getelementptr inbounds %struct.Material, %struct.Material* %113, i32 0, i32 51, !dbg !13466
  %114 = load i32, i32* %mode105, align 4, !dbg !13466
  %and106 = and i32 %114, 8192, !dbg !13467
  %tobool107 = icmp ne i32 %and106, 0, !dbg !13468
  %lnot = xor i1 %tobool107, true, !dbg !13468
  br label %land.end108

land.end108:                                      ; preds = %land.rhs104, %land.lhs.true, %if.else97
  %115 = phi i1 [ false, %land.lhs.true ], [ false, %if.else97 ], [ %lnot, %land.rhs104 ], !dbg !13454
  %land.ext109 = zext i1 %115 to i32, !dbg !13464
  store i32 %land.ext109, i32* %dofill, align 4, !dbg !13469
  br label %if.end110

if.end110:                                        ; preds = %land.end108, %land.end
  br label %if.end111, !dbg !13470

if.end111:                                        ; preds = %if.end110, %if.end85
  %116 = load i32, i32* %dofill, align 4, !dbg !13471
  %tobool112 = icmp ne i32 %116, 0, !dbg !13471
  br i1 %tobool112, label %if.then113, label %if.end273, !dbg !13473

if.then113:                                       ; preds = %if.end111
  %117 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13474
  %flag114 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %117, i32 0, i32 7, !dbg !13477
  %118 = load i8, i8* %flag114, align 1, !dbg !13477
  %conv115 = zext i8 %118 to i32, !dbg !13474
  %and116 = and i32 %conv115, 2, !dbg !13478
  %tobool117 = icmp ne i32 %and116, 0, !dbg !13478
  br i1 %tobool117, label %if.end272, label %land.lhs.true118, !dbg !13479

land.lhs.true118:                                 ; preds = %if.then113
  %119 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13480
  %lay119 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %119, i32 0, i32 7, !dbg !13481
  %120 = load i32, i32* %lay119, align 8, !dbg !13481
  %121 = load i32, i32* %lay.addr, align 4, !dbg !13482
  %and120 = and i32 %120, %121, !dbg !13483
  %tobool121 = icmp ne i32 %and120, 0, !dbg !13483
  br i1 %tobool121, label %if.then122, label %if.end272, !dbg !13484

if.then122:                                       ; preds = %land.lhs.true118
  call void @llvm.dbg.declare(metadata i16* %partclip, metadata !13485, metadata !DIExpression()), !dbg !13487
  %122 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13488
  %v1123 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %122, i32 0, i32 0, !dbg !13489
  %123 = load %struct.VertRen*, %struct.VertRen** %v1123, align 8, !dbg !13489
  store %struct.VertRen* %123, %struct.VertRen** %v1, align 8, !dbg !13490
  %124 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13491
  %v2124 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %124, i32 0, i32 1, !dbg !13492
  %125 = load %struct.VertRen*, %struct.VertRen** %v2124, align 8, !dbg !13492
  store %struct.VertRen* %125, %struct.VertRen** %v2, align 8, !dbg !13493
  %126 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13494
  %v3125 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %126, i32 0, i32 2, !dbg !13495
  %127 = load %struct.VertRen*, %struct.VertRen** %v3125, align 8, !dbg !13495
  store %struct.VertRen* %127, %struct.VertRen** %v3, align 8, !dbg !13496
  %128 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13497
  %v4126 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %128, i32 0, i32 3, !dbg !13498
  %129 = load %struct.VertRen*, %struct.VertRen** %v4126, align 8, !dbg !13498
  store %struct.VertRen* %129, %struct.VertRen** %v4, align 8, !dbg !13499
  %arraydecay127 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !13500
  %130 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !13501
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %130, i32 0, i32 5, !dbg !13502
  %131 = load i32, i32* %index, align 8, !dbg !13502
  %arraydecay128 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13503
  %arraydecay129 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13504
  %132 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !13505
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %132, i32 0, i32 0, !dbg !13506
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13505
  %arraydecay131 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13507
  %call132 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay127, i32 %131, [4 x float]* %arraydecay128, float* %arraydecay129, float* %arraydecay130, float* %arraydecay131), !dbg !13508
  store i32 %call132, i32* %c1, align 4, !dbg !13509
  %arraydecay133 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !13510
  %133 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !13511
  %index134 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %133, i32 0, i32 5, !dbg !13512
  %134 = load i32, i32* %index134, align 8, !dbg !13512
  %arraydecay135 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13513
  %arraydecay136 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13514
  %135 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !13515
  %co137 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %135, i32 0, i32 0, !dbg !13516
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %co137, i64 0, i64 0, !dbg !13515
  %arraydecay139 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13517
  %call140 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay133, i32 %134, [4 x float]* %arraydecay135, float* %arraydecay136, float* %arraydecay138, float* %arraydecay139), !dbg !13518
  store i32 %call140, i32* %c2, align 4, !dbg !13519
  %arraydecay141 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !13520
  %136 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !13521
  %index142 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %136, i32 0, i32 5, !dbg !13522
  %137 = load i32, i32* %index142, align 8, !dbg !13522
  %arraydecay143 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13523
  %arraydecay144 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13524
  %138 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !13525
  %co145 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %138, i32 0, i32 0, !dbg !13526
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %co145, i64 0, i64 0, !dbg !13525
  %arraydecay147 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13527
  %call148 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay141, i32 %137, [4 x float]* %arraydecay143, float* %arraydecay144, float* %arraydecay146, float* %arraydecay147), !dbg !13528
  store i32 %call148, i32* %c3, align 4, !dbg !13529
  %139 = load i32, i32* %c1, align 4, !dbg !13530
  %140 = load i32, i32* %c2, align 4, !dbg !13531
  %and149 = and i32 %139, %140, !dbg !13532
  %141 = load i32, i32* %c3, align 4, !dbg !13533
  %and150 = and i32 %and149, %141, !dbg !13534
  %conv151 = trunc i32 %and150 to i16, !dbg !13530
  store i16 %conv151, i16* %partclip, align 2, !dbg !13535
  %142 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13536
  %tobool152 = icmp ne %struct.VertRen* %142, null, !dbg !13536
  br i1 %tobool152, label %if.then153, label %if.end165, !dbg !13538

if.then153:                                       ; preds = %if.then122
  %arraydecay154 = getelementptr inbounds [256 x %struct.ZbufProjectCache], [256 x %struct.ZbufProjectCache]* %cache, i64 0, i64 0, !dbg !13539
  %143 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13541
  %index155 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %143, i32 0, i32 5, !dbg !13542
  %144 = load i32, i32* %index155, align 8, !dbg !13542
  %arraydecay156 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13543
  %arraydecay157 = getelementptr inbounds [4 x float], [4 x float]* %bounds, i64 0, i64 0, !dbg !13544
  %145 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13545
  %co158 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %145, i32 0, i32 0, !dbg !13546
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %co158, i64 0, i64 0, !dbg !13545
  %arraydecay160 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !13547
  %call161 = call i32 @zbuf_part_project(%struct.ZbufProjectCache* %arraydecay154, i32 %144, [4 x float]* %arraydecay156, float* %arraydecay157, float* %arraydecay159, float* %arraydecay160), !dbg !13548
  store i32 %call161, i32* %c4, align 4, !dbg !13549
  %146 = load i32, i32* %c4, align 4, !dbg !13550
  %147 = load i16, i16* %partclip, align 2, !dbg !13551
  %conv162 = zext i16 %147 to i32, !dbg !13551
  %and163 = and i32 %conv162, %146, !dbg !13551
  %conv164 = trunc i32 %and163 to i16, !dbg !13551
  store i16 %conv164, i16* %partclip, align 2, !dbg !13551
  br label %if.end165, !dbg !13552

if.end165:                                        ; preds = %if.then153, %if.then122
  %148 = load i16, i16* %partclip, align 2, !dbg !13553
  %conv166 = zext i16 %148 to i32, !dbg !13553
  %cmp167 = icmp eq i32 %conv166, 0, !dbg !13555
  br i1 %cmp167, label %if.then169, label %if.end262, !dbg !13556

if.then169:                                       ; preds = %if.end165
  %149 = load i32, i32* %shadow.addr, align 4, !dbg !13557
  %tobool170 = icmp ne i32 %149, 0, !dbg !13557
  br i1 %tobool170, label %if.else195, label %land.lhs.true171, !dbg !13560

land.lhs.true171:                                 ; preds = %if.then169
  %150 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13561
  %zoffs = getelementptr inbounds %struct.Material, %struct.Material* %150, i32 0, i32 24, !dbg !13562
  %151 = load float, float* %zoffs, align 4, !dbg !13562
  %cmp172 = fcmp une float %151, 0.000000e+00, !dbg !13563
  br i1 %cmp172, label %if.then174, label %if.else195, !dbg !13564

if.then174:                                       ; preds = %land.lhs.true171
  store float 0x41E0000000000000, float* %mul, align 4, !dbg !13565
  %152 = load float, float* %mul, align 4, !dbg !13567
  %arrayidx175 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 2, !dbg !13568
  %153 = load float, float* %arrayidx175, align 8, !dbg !13568
  %arrayidx176 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 3, !dbg !13569
  %154 = load float, float* %arrayidx176, align 4, !dbg !13569
  %div177 = fdiv float %153, %154, !dbg !13570
  %add = fadd float 1.000000e+00, %div177, !dbg !13571
  %mul178 = fmul float %152, %add, !dbg !13572
  store float %mul178, float* %zval, align 4, !dbg !13573
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13574
  %155 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !13575
  %co180 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %155, i32 0, i32 0, !dbg !13576
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co180, i64 0, i64 0, !dbg !13575
  call void @copy_v3_v3(float* %arraydecay179, float* %arraydecay181), !dbg !13577
  %156 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13578
  %zoffs182 = getelementptr inbounds %struct.Material, %struct.Material* %156, i32 0, i32 24, !dbg !13579
  %157 = load float, float* %zoffs182, align 4, !dbg !13579
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !13580
  %158 = load float, float* %arrayidx183, align 4, !dbg !13581
  %sub184 = fsub float %158, %157, !dbg !13581
  store float %sub184, float* %arrayidx183, align 4, !dbg !13581
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !13582
  %arraydecay186 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obwinmat, i64 0, i64 0, !dbg !13583
  %arraydecay187 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !13584
  call void @projectverto(float* %arraydecay185, [4 x float]* %arraydecay186, float* %arraydecay187), !dbg !13585
  %159 = load float, float* %mul, align 4, !dbg !13586
  %arrayidx188 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !13587
  %160 = load float, float* %arrayidx188, align 8, !dbg !13587
  %arrayidx189 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !13588
  %161 = load float, float* %arrayidx189, align 4, !dbg !13588
  %div190 = fdiv float %160, %161, !dbg !13589
  %add191 = fadd float 1.000000e+00, %div190, !dbg !13590
  %mul192 = fmul float %159, %add191, !dbg !13591
  store float %mul192, float* %fval, align 4, !dbg !13592
  %162 = load float, float* %zval, align 4, !dbg !13593
  %163 = load float, float* %fval, align 4, !dbg !13594
  %sub193 = fsub float %162, %163, !dbg !13595
  %164 = call float @llvm.fabs.f32(float %sub193), !dbg !13596
  %conv194 = fptosi float %164 to i32, !dbg !13597
  store i32 %conv194, i32* %polygon_offset, align 4, !dbg !13598
  br label %if.end196, !dbg !13599

if.else195:                                       ; preds = %land.lhs.true171, %if.then169
  store i32 0, i32* %polygon_offset, align 4, !dbg !13600
  br label %if.end196

if.end196:                                        ; preds = %if.else195, %if.then174
  %165 = load i32, i32* %v, align 4, !dbg !13601
  %add197 = add nsw i32 %165, 1, !dbg !13602
  store i32 %add197, i32* %zvlnr, align 4, !dbg !13603
  %arraydecay198 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13604
  %call199 = call i32 @testclip(float* %arraydecay198), !dbg !13605
  store i32 %call199, i32* %c1, align 4, !dbg !13606
  %arraydecay200 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13607
  %call201 = call i32 @testclip(float* %arraydecay200), !dbg !13608
  store i32 %call201, i32* %c2, align 4, !dbg !13609
  %arraydecay202 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13610
  %call203 = call i32 @testclip(float* %arraydecay202), !dbg !13611
  store i32 %call203, i32* %c3, align 4, !dbg !13612
  %166 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13613
  %tobool204 = icmp ne %struct.VertRen* %166, null, !dbg !13613
  br i1 %tobool204, label %if.then205, label %if.end208, !dbg !13615

if.then205:                                       ; preds = %if.end196
  %arraydecay206 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !13616
  %call207 = call i32 @testclip(float* %arraydecay206), !dbg !13617
  store i32 %call207, i32* %c4, align 4, !dbg !13618
  br label %if.end208, !dbg !13619

if.end208:                                        ; preds = %if.then205, %if.end196
  store i32 0, i32* %zsample, align 4, !dbg !13620
  br label %for.cond209, !dbg !13622

for.cond209:                                      ; preds = %for.inc259, %if.end208
  %167 = load i32, i32* %zsample, align 4, !dbg !13623
  %168 = load i32, i32* %samples.addr, align 4, !dbg !13625
  %cmp210 = icmp slt i32 %167, %168, !dbg !13626
  br i1 %cmp210, label %for.body212, label %for.end261, !dbg !13627

for.body212:                                      ; preds = %for.cond209
  %169 = load i32, i32* %zsample, align 4, !dbg !13628
  %idxprom213 = sext i32 %169 to i64, !dbg !13630
  %arrayidx214 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom213, !dbg !13630
  store %struct.ZSpan* %arrayidx214, %struct.ZSpan** %zspan, align 8, !dbg !13631
  %170 = load i32, i32* %polygon_offset, align 4, !dbg !13632
  %171 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13633
  %polygon_offset215 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %171, i32 0, i32 26, !dbg !13634
  store i32 %170, i32* %polygon_offset215, align 8, !dbg !13635
  %172 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13636
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %172, i32 0, i32 2, !dbg !13638
  %173 = load i16, i16* %material_type, align 8, !dbg !13638
  %conv216 = sext i16 %173 to i32, !dbg !13636
  %cmp217 = icmp eq i32 %conv216, 3, !dbg !13639
  br i1 %cmp217, label %if.then219, label %if.else234, !dbg !13640

if.then219:                                       ; preds = %for.body212
  %174 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13641
  %tobool220 = icmp ne %struct.VertRen* %174, null, !dbg !13641
  br i1 %tobool220, label %if.then221, label %if.else227, !dbg !13644

if.then221:                                       ; preds = %if.then219
  %175 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13645
  %176 = load i32, i32* %i, align 4, !dbg !13646
  %177 = load i32, i32* %zvlnr, align 4, !dbg !13647
  %178 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13648
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %178, i32 0, i32 8, !dbg !13649
  %179 = load i8, i8* %ec, align 2, !dbg !13649
  %conv222 = zext i8 %179 to i32, !dbg !13648
  %arraydecay223 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13650
  %arraydecay224 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13651
  %arraydecay225 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13652
  %arraydecay226 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !13653
  %180 = load i32, i32* %c1, align 4, !dbg !13654
  %181 = load i32, i32* %c2, align 4, !dbg !13655
  %182 = load i32, i32* %c3, align 4, !dbg !13656
  %183 = load i32, i32* %c4, align 4, !dbg !13657
  call void @zbufclipwire(%struct.ZSpan* %175, i32 %176, i32 %177, i32 %conv222, float* %arraydecay223, float* %arraydecay224, float* %arraydecay225, float* %arraydecay226, i32 %180, i32 %181, i32 %182, i32 %183), !dbg !13658
  br label %if.end233, !dbg !13658

if.else227:                                       ; preds = %if.then219
  %184 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13659
  %185 = load i32, i32* %i, align 4, !dbg !13660
  %186 = load i32, i32* %zvlnr, align 4, !dbg !13661
  %187 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13662
  %ec228 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %187, i32 0, i32 8, !dbg !13663
  %188 = load i8, i8* %ec228, align 2, !dbg !13663
  %conv229 = zext i8 %188 to i32, !dbg !13662
  %arraydecay230 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13664
  %arraydecay231 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13665
  %arraydecay232 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13666
  %189 = load i32, i32* %c1, align 4, !dbg !13667
  %190 = load i32, i32* %c2, align 4, !dbg !13668
  %191 = load i32, i32* %c3, align 4, !dbg !13669
  call void @zbufclipwire(%struct.ZSpan* %184, i32 %185, i32 %186, i32 %conv229, float* %arraydecay230, float* %arraydecay231, float* %arraydecay232, float* null, i32 %189, i32 %190, i32 %191, i32 0), !dbg !13670
  br label %if.end233

if.end233:                                        ; preds = %if.else227, %if.then221
  br label %if.end258, !dbg !13671

if.else234:                                       ; preds = %for.body212
  %192 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13672
  %tobool235 = icmp ne %struct.VertRen* %192, null, !dbg !13672
  br i1 %tobool235, label %land.lhs.true236, label %if.else246, !dbg !13675

land.lhs.true236:                                 ; preds = %if.else234
  %193 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13676
  %flag237 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %193, i32 0, i32 7, !dbg !13677
  %194 = load i8, i8* %flag237, align 1, !dbg !13677
  %conv238 = zext i8 %194 to i32, !dbg !13676
  %and239 = and i32 %conv238, 4, !dbg !13678
  %tobool240 = icmp ne i32 %and239, 0, !dbg !13678
  br i1 %tobool240, label %if.then241, label %if.else246, !dbg !13679

if.then241:                                       ; preds = %land.lhs.true236
  %195 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13680
  %196 = load i32, i32* %i, align 4, !dbg !13682
  %197 = load i32, i32* %zvlnr, align 4, !dbg !13683
  %arraydecay242 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13684
  %arraydecay243 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13685
  %arraydecay244 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13686
  %arraydecay245 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !13687
  %198 = load i32, i32* %c1, align 4, !dbg !13688
  %199 = load i32, i32* %c2, align 4, !dbg !13689
  %200 = load i32, i32* %c3, align 4, !dbg !13690
  %201 = load i32, i32* %c4, align 4, !dbg !13691
  call void @zbufclip4(%struct.ZSpan* %195, i32 %196, i32 %197, float* %arraydecay242, float* %arraydecay243, float* %arraydecay244, float* %arraydecay245, i32 %198, i32 %199, i32 %200, i32 %201), !dbg !13692
  br label %if.end257, !dbg !13693

if.else246:                                       ; preds = %land.lhs.true236, %if.else234
  %202 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13694
  %203 = load i32, i32* %i, align 4, !dbg !13696
  %204 = load i32, i32* %zvlnr, align 4, !dbg !13697
  %arraydecay247 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13698
  %arraydecay248 = getelementptr inbounds [4 x float], [4 x float]* %ho2, i64 0, i64 0, !dbg !13699
  %arraydecay249 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13700
  %205 = load i32, i32* %c1, align 4, !dbg !13701
  %206 = load i32, i32* %c2, align 4, !dbg !13702
  %207 = load i32, i32* %c3, align 4, !dbg !13703
  call void @zbufclip(%struct.ZSpan* %202, i32 %203, i32 %204, float* %arraydecay247, float* %arraydecay248, float* %arraydecay249, i32 %205, i32 %206, i32 %207), !dbg !13704
  %208 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !13705
  %tobool250 = icmp ne %struct.VertRen* %208, null, !dbg !13705
  br i1 %tobool250, label %if.then251, label %if.end256, !dbg !13707

if.then251:                                       ; preds = %if.else246
  %209 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13708
  %210 = load i32, i32* %i, align 4, !dbg !13709
  %211 = load i32, i32* %zvlnr, align 4, !dbg !13710
  %add252 = add nsw i32 %211, 134217728, !dbg !13711
  %arraydecay253 = getelementptr inbounds [4 x float], [4 x float]* %ho1, i64 0, i64 0, !dbg !13712
  %arraydecay254 = getelementptr inbounds [4 x float], [4 x float]* %ho3, i64 0, i64 0, !dbg !13713
  %arraydecay255 = getelementptr inbounds [4 x float], [4 x float]* %ho4, i64 0, i64 0, !dbg !13714
  %212 = load i32, i32* %c1, align 4, !dbg !13715
  %213 = load i32, i32* %c3, align 4, !dbg !13716
  %214 = load i32, i32* %c4, align 4, !dbg !13717
  call void @zbufclip(%struct.ZSpan* %209, i32 %210, i32 %add252, float* %arraydecay253, float* %arraydecay254, float* %arraydecay255, i32 %212, i32 %213, i32 %214), !dbg !13718
  br label %if.end256, !dbg !13718

if.end256:                                        ; preds = %if.then251, %if.else246
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then241
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.end233
  br label %for.inc259, !dbg !13719

for.inc259:                                       ; preds = %if.end258
  %215 = load i32, i32* %zsample, align 4, !dbg !13720
  %inc260 = add nsw i32 %215, 1, !dbg !13720
  store i32 %inc260, i32* %zsample, align 4, !dbg !13720
  br label %for.cond209, !dbg !13721, !llvm.loop !13722

for.end261:                                       ; preds = %for.cond209
  br label %if.end262, !dbg !13724

if.end262:                                        ; preds = %for.end261, %if.end165
  %216 = load i32, i32* %v, align 4, !dbg !13725
  %and263 = and i32 %216, 255, !dbg !13727
  %cmp264 = icmp eq i32 %and263, 255, !dbg !13728
  br i1 %cmp264, label %if.then266, label %if.end271, !dbg !13729

if.then266:                                       ; preds = %if.end262
  %217 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13730
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %217, i32 0, i32 96, !dbg !13732
  %218 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !13732
  %219 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13733
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %219, i32 0, i32 97, !dbg !13734
  %220 = load i8*, i8** %tbh, align 8, !dbg !13734
  %call267 = call i32 %218(i8* %220), !dbg !13730
  %tobool268 = icmp ne i32 %call267, 0, !dbg !13730
  br i1 %tobool268, label %if.then269, label %if.end270, !dbg !13735

if.then269:                                       ; preds = %if.then266
  br label %for.end276, !dbg !13736

if.end270:                                        ; preds = %if.then266
  br label %if.end271, !dbg !13737

if.end271:                                        ; preds = %if.end270, %if.end262
  br label %if.end272, !dbg !13738

if.end272:                                        ; preds = %if.end271, %land.lhs.true118, %if.then113
  br label %if.end273, !dbg !13739

if.end273:                                        ; preds = %if.end272, %if.end111
  br label %for.inc274, !dbg !13740

for.inc274:                                       ; preds = %if.end273
  %221 = load i32, i32* %v, align 4, !dbg !13741
  %inc275 = add nsw i32 %221, 1, !dbg !13741
  store i32 %inc275, i32* %v, align 4, !dbg !13741
  br label %for.cond74, !dbg !13742, !llvm.loop !13743

for.end276:                                       ; preds = %if.then269, %for.cond74
  %222 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13745
  %test_break277 = getelementptr inbounds %struct.Render, %struct.Render* %222, i32 0, i32 96, !dbg !13747
  %223 = load i32 (i8*)*, i32 (i8*)** %test_break277, align 8, !dbg !13747
  %224 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13748
  %tbh278 = getelementptr inbounds %struct.Render, %struct.Render* %224, i32 0, i32 97, !dbg !13749
  %225 = load i8*, i8** %tbh278, align 8, !dbg !13749
  %call279 = call i32 %223(i8* %225), !dbg !13745
  %tobool280 = icmp ne i32 %call279, 0, !dbg !13745
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !13750

if.then281:                                       ; preds = %for.end276
  br label %for.end285, !dbg !13751

if.end282:                                        ; preds = %for.end276
  br label %for.inc283, !dbg !13752

for.inc283:                                       ; preds = %if.end282, %if.then71, %if.then54
  %226 = load i32, i32* %i, align 4, !dbg !13753
  %inc284 = add nsw i32 %226, 1, !dbg !13753
  store i32 %inc284, i32* %i, align 4, !dbg !13753
  %227 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13754
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %227, i32 0, i32 0, !dbg !13755
  %228 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !13755
  store %struct.ObjectInstanceRen* %228, %struct.ObjectInstanceRen** %obi, align 8, !dbg !13756
  br label %for.cond48, !dbg !13757, !llvm.loop !13758

for.end285:                                       ; preds = %if.then281, %for.cond48
  store i32 0, i32* %zsample, align 4, !dbg !13760
  br label %for.cond286, !dbg !13762

for.cond286:                                      ; preds = %for.inc298, %for.end285
  %229 = load i32, i32* %zsample, align 4, !dbg !13763
  %230 = load i32, i32* %samples.addr, align 4, !dbg !13765
  %cmp287 = icmp slt i32 %229, %230, !dbg !13766
  br i1 %cmp287, label %for.body289, label %for.end300, !dbg !13767

for.body289:                                      ; preds = %for.cond286
  %231 = load i32, i32* %zsample, align 4, !dbg !13768
  %idxprom290 = sext i32 %231 to i64, !dbg !13770
  %arrayidx291 = getelementptr inbounds [16 x %struct.ZSpan], [16 x %struct.ZSpan]* %zspans, i64 0, i64 %idxprom290, !dbg !13770
  store %struct.ZSpan* %arrayidx291, %struct.ZSpan** %zspan, align 8, !dbg !13771
  %232 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13772
  %233 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13773
  %arectz292 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %233, i32 0, i32 17, !dbg !13774
  %234 = load i32*, i32** %arectz292, align 8, !dbg !13774
  %235 = bitcast i32* %234 to i8*, !dbg !13773
  call void %232(i8* %235), !dbg !13772
  %236 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13775
  %rectmask293 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %236, i32 0, i32 21, !dbg !13777
  %237 = load i32*, i32** %rectmask293, align 8, !dbg !13777
  %tobool294 = icmp ne i32* %237, null, !dbg !13775
  br i1 %tobool294, label %if.then295, label %if.end297, !dbg !13778

if.then295:                                       ; preds = %for.body289
  %238 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13779
  %239 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13780
  %rectmask296 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %239, i32 0, i32 21, !dbg !13781
  %240 = load i32*, i32** %rectmask296, align 8, !dbg !13781
  %241 = bitcast i32* %240 to i8*, !dbg !13780
  call void %238(i8* %241), !dbg !13779
  br label %if.end297, !dbg !13779

if.end297:                                        ; preds = %if.then295, %for.body289
  %242 = load %struct.ZSpan*, %struct.ZSpan** %zspan, align 8, !dbg !13782
  call void @zbuf_free_span(%struct.ZSpan* %242), !dbg !13783
  br label %for.inc298, !dbg !13784

for.inc298:                                       ; preds = %if.end297
  %243 = load i32, i32* %zsample, align 4, !dbg !13785
  %inc299 = add nsw i32 %243, 1, !dbg !13785
  store i32 %inc299, i32* %zsample, align 4, !dbg !13785
  br label %for.cond286, !dbg !13786, !llvm.loop !13787

for.end300:                                       ; preds = %for.cond286
  %244 = load i32, i32* %zvlnr, align 4, !dbg !13789
  ret i32 %244, !dbg !13790
}

declare dso_local i32 @zbuffer_strands_abuf(%struct.Render*, %struct.RenderPart*, %struct.APixstrand*, %struct.ListBase*, i32, i32, [4 x float]*, i32, i32, i32, [2 x float]*, float, i32, %struct.StrandShadeCache*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @zbuffer_transp_shade(%struct.RenderPart* %pa, %struct.RenderLayer* %rl, float* %pass, %struct.ListBase* %UNUSED_psmlist) #0 !dbg !13791 {
entry:
  %retval = alloca i16*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %pass.addr = alloca float*, align 8
  %UNUSED_psmlist.addr = alloca %struct.ListBase*, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %ssamp = alloca %struct.ShadeSample, align 8
  %APixbuf = alloca %struct.APixstr*, align 8
  %APixbufstrand = alloca %struct.APixstrand*, align 8
  %ap = alloca %struct.APixstr*, align 8
  %aprect = alloca %struct.APixstr*, align 8
  %apn = alloca %struct.APixstr*, align 8
  %apstrand = alloca %struct.APixstrand*, align 8
  %aprectstrand = alloca %struct.APixstrand*, align 8
  %apnstrand = alloca %struct.APixstrand*, align 8
  %apsmbase = alloca %struct.ListBase, align 8
  %samp_shr = alloca [16 x %struct.ShadeResult], align 16
  %zrow = alloca [2000 x %struct.ZTranspRow], align 16
  %sscache = alloca %struct.StrandShadeCache*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %sampalpha = alloca float, align 4
  %alpha = alloca float, align 4
  %passrect = alloca float*, align 8
  %rdrect = alloca i64*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %crop = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %totface = alloca i32, align 4
  %totfullsample = alloca i32, align 4
  %totsample = alloca i32, align 4
  %doztra = alloca i32, align 4
  %addpassflag = alloca i32, align 4
  %offs = alloca i32, align 4
  %od = alloca i32, align 4
  %osa = alloca i32, align 4
  %ztramask = alloca i16*, align 8
  %filled = alloca i16, align 2
  %sw_ap = alloca %struct.ZTranspRow, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %obr303 = alloca %struct.ObjectRen*, align 8
  %p311 = alloca i32, align 4
  %mat = alloca %struct.Material*, align 8
  %facenr = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %sp = alloca i16*, align 8
  %rl484 = alloca %struct.RenderLayer*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !13795, metadata !DIExpression()), !dbg !13796
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !13797, metadata !DIExpression()), !dbg !13798
  store float* %pass, float** %pass.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pass.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  store %struct.ListBase* %UNUSED_psmlist, %struct.ListBase** %UNUSED_psmlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %UNUSED_psmlist.addr, metadata !13801, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !13803, metadata !DIExpression()), !dbg !13804
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !13805
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 2, !dbg !13806
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !13806
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !13804
  call void @llvm.dbg.declare(metadata %struct.ShadeSample* %ssamp, metadata !13807, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.declare(metadata %struct.APixstr** %APixbuf, metadata !13982, metadata !DIExpression()), !dbg !13983
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %APixbufstrand, metadata !13984, metadata !DIExpression()), !dbg !13985
  store %struct.APixstrand* null, %struct.APixstrand** %APixbufstrand, align 8, !dbg !13985
  call void @llvm.dbg.declare(metadata %struct.APixstr** %ap, metadata !13986, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.declare(metadata %struct.APixstr** %aprect, metadata !13988, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn, metadata !13990, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %apstrand, metadata !13992, metadata !DIExpression()), !dbg !13993
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %aprectstrand, metadata !13994, metadata !DIExpression()), !dbg !13995
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %apnstrand, metadata !13996, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.declare(metadata %struct.ListBase* %apsmbase, metadata !13998, metadata !DIExpression()), !dbg !13999
  %2 = bitcast %struct.ListBase* %apsmbase to i8*, !dbg !13999
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !13999
  call void @llvm.dbg.declare(metadata [16 x %struct.ShadeResult]* %samp_shr, metadata !14000, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata [2000 x %struct.ZTranspRow]* %zrow, metadata !14002, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.declare(metadata %struct.StrandShadeCache** %sscache, metadata !14017, metadata !DIExpression()), !dbg !14021
  store %struct.StrandShadeCache* null, %struct.StrandShadeCache** %sscache, align 8, !dbg !14021
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !14022, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.declare(metadata float* %sampalpha, metadata !14024, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !14026, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.declare(metadata float** %passrect, metadata !14028, metadata !DIExpression()), !dbg !14029
  %3 = load float*, float** %pass.addr, align 8, !dbg !14030
  store float* %3, float** %passrect, align 8, !dbg !14029
  call void @llvm.dbg.declare(metadata i64** %rdrect, metadata !14031, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14035, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.declare(metadata i32* %crop, metadata !14037, metadata !DIExpression()), !dbg !14038
  store i32 0, i32* %crop, align 4, !dbg !14038
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14039, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata i32* %b, metadata !14041, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !14043, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.declare(metadata i32* %totfullsample, metadata !14045, metadata !DIExpression()), !dbg !14046
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !14047, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.declare(metadata i32* %doztra, metadata !14049, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.declare(metadata i32* %addpassflag, metadata !14051, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !14053, metadata !DIExpression()), !dbg !14054
  store i32 0, i32* %offs, align 4, !dbg !14054
  call void @llvm.dbg.declare(metadata i32* %od, metadata !14055, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.declare(metadata i32* %osa, metadata !14057, metadata !DIExpression()), !dbg !14058
  %4 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14059
  %conv = sext i16 %4 to i32, !dbg !14060
  %tobool = icmp ne i32 %conv, 0, !dbg !14060
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14060

cond.true:                                        ; preds = %entry
  %5 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14061
  %conv1 = sext i16 %5 to i32, !dbg !14062
  br label %cond.end, !dbg !14060

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14060

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv1, %cond.true ], [ 1, %cond.false ], !dbg !14060
  store i32 %cond, i32* %osa, align 4, !dbg !14058
  call void @llvm.dbg.declare(metadata i16** %ztramask, metadata !14063, metadata !DIExpression()), !dbg !14064
  store i16* null, i16** %ztramask, align 8, !dbg !14064
  call void @llvm.dbg.declare(metadata i16* %filled, metadata !14065, metadata !DIExpression()), !dbg !14066
  %6 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !14067
  %7 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !14069
  %call = call i32 %6(i8* %7), !dbg !14070
  %tobool2 = icmp ne i32 %call, 0, !dbg !14070
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14071

if.then:                                          ; preds = %cond.end
  store i16* null, i16** %retval, align 8, !dbg !14072
  br label %return, !dbg !14072

if.end:                                           ; preds = %cond.end
  %8 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14073
  %conv3 = sext i16 %8 to i32, !dbg !14075
  %cmp = icmp sgt i32 %conv3, 16, !dbg !14076
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !14077

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0)), !dbg !14078
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !14080
  store i16* null, i16** %retval, align 8, !dbg !14081
  br label %return, !dbg !14081

if.end7:                                          ; preds = %if.end
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14082
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14083
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 14, !dbg !14084
  %11 = load i32, i32* %rectx, align 8, !dbg !14084
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14085
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 15, !dbg !14086
  %13 = load i32, i32* %recty, align 4, !dbg !14086
  %mul = mul nsw i32 %11, %13, !dbg !14087
  %conv8 = sext i32 %mul to i64, !dbg !14083
  %mul9 = mul i64 %conv8, 72, !dbg !14088
  %call10 = call i8* %9(i64 %mul9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)), !dbg !14082
  %14 = bitcast i8* %call10 to %struct.APixstr*, !dbg !14082
  store %struct.APixstr* %14, %struct.APixstr** %APixbuf, align 8, !dbg !14089
  %15 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 63), align 4, !dbg !14090
  %tobool11 = icmp ne i32 %15, 0, !dbg !14092
  br i1 %tobool11, label %land.lhs.true, label %if.end21, !dbg !14093

land.lhs.true:                                    ; preds = %if.end7
  %16 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14094
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %16, i32 0, i32 6, !dbg !14095
  %17 = load i32, i32* %layflag, align 8, !dbg !14095
  %and = and i32 %17, 32, !dbg !14096
  %tobool12 = icmp ne i32 %and, 0, !dbg !14096
  br i1 %tobool12, label %if.then13, label %if.end21, !dbg !14097

if.then13:                                        ; preds = %land.lhs.true
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14098
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14100
  %rectx14 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 14, !dbg !14101
  %20 = load i32, i32* %rectx14, align 8, !dbg !14101
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14102
  %recty15 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 15, !dbg !14103
  %22 = load i32, i32* %recty15, align 4, !dbg !14103
  %mul16 = mul nsw i32 %20, %22, !dbg !14104
  %conv17 = sext i32 %mul16 to i64, !dbg !14100
  %mul18 = mul i64 %conv17, 112, !dbg !14105
  %call19 = call i8* %18(i64 %mul18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)), !dbg !14098
  %23 = bitcast i8* %call19 to %struct.APixstrand*, !dbg !14098
  store %struct.APixstrand* %23, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14106
  %call20 = call %struct.StrandShadeCache* @strand_shade_cache_create(), !dbg !14107
  store %struct.StrandShadeCache* %call20, %struct.StrandShadeCache** %sscache, align 8, !dbg !14108
  br label %if.end21, !dbg !14109

if.end21:                                         ; preds = %if.then13, %land.lhs.true, %if.end7
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14110
  %25 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14111
  call void @shade_sample_initialize(%struct.ShadeSample* %ssamp, %struct.RenderPart* %24, %struct.RenderLayer* %25), !dbg !14112
  %26 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14113
  %passflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %26, i32 0, i32 7, !dbg !14114
  %27 = load i32, i32* %passflag, align 4, !dbg !14114
  %and22 = and i32 %27, -2, !dbg !14115
  store i32 %and22, i32* %addpassflag, align 4, !dbg !14116
  %28 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14117
  %tobool23 = icmp ne i16 %28, 0, !dbg !14119
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !14120

if.then24:                                        ; preds = %if.end21
  %29 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14121
  %conv25 = sitofp i16 %29 to float, !dbg !14122
  %div = fdiv float 1.000000e+00, %conv25, !dbg !14123
  store float %div, float* %sampalpha, align 4, !dbg !14124
  br label %if.end26, !dbg !14125

if.else:                                          ; preds = %if.end21
  store float 1.000000e+00, float* %sampalpha, align 4, !dbg !14126
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then24
  %30 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14127
  %31 = load %struct.APixstr*, %struct.APixstr** %APixbuf, align 8, !dbg !14128
  %32 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14129
  %33 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14130
  %34 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14131
  %call27 = call i32 @zbuffer_abuf_render(%struct.RenderPart* %30, %struct.APixstr* %31, %struct.APixstrand* %32, %struct.ListBase* %apsmbase, %struct.RenderLayer* %33, %struct.StrandShadeCache* %34), !dbg !14132
  store i32 %call27, i32* %doztra, align 4, !dbg !14133
  %35 = load i32, i32* %doztra, align 4, !dbg !14134
  %cmp28 = icmp eq i32 %35, 0, !dbg !14136
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !14137

if.then30:                                        ; preds = %if.end26
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14138
  %37 = load %struct.APixstr*, %struct.APixstr** %APixbuf, align 8, !dbg !14140
  %38 = bitcast %struct.APixstr* %37 to i8*, !dbg !14140
  call void %36(i8* %38), !dbg !14138
  %39 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14141
  %tobool31 = icmp ne %struct.APixstrand* %39, null, !dbg !14141
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !14143

if.then32:                                        ; preds = %if.then30
  %40 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14144
  %41 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14145
  %42 = bitcast %struct.APixstrand* %41 to i8*, !dbg !14145
  call void %40(i8* %42), !dbg !14144
  br label %if.end33, !dbg !14144

if.end33:                                         ; preds = %if.then32, %if.then30
  %43 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14146
  %tobool34 = icmp ne %struct.StrandShadeCache* %43, null, !dbg !14146
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !14148

if.then35:                                        ; preds = %if.end33
  %44 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14149
  call void @strand_shade_cache_free(%struct.StrandShadeCache* %44), !dbg !14150
  br label %if.end36, !dbg !14150

if.end36:                                         ; preds = %if.then35, %if.end33
  call void @freepsA(%struct.ListBase* %apsmbase), !dbg !14151
  store i16* null, i16** %retval, align 8, !dbg !14152
  br label %return, !dbg !14152

if.end37:                                         ; preds = %if.end26
  %45 = load %struct.APixstr*, %struct.APixstr** %APixbuf, align 8, !dbg !14153
  store %struct.APixstr* %45, %struct.APixstr** %aprect, align 8, !dbg !14154
  %46 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14155
  store %struct.APixstrand* %46, %struct.APixstrand** %aprectstrand, align 8, !dbg !14156
  %47 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14157
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %47, i32 0, i32 8, !dbg !14158
  %48 = load i64*, i64** %rectdaps, align 8, !dbg !14158
  store i64* %48, i64** %rdrect, align 8, !dbg !14159
  %49 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14160
  %50 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14161
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !14162
  %call38 = call i32 @get_sample_layers(%struct.RenderPart* %49, %struct.RenderLayer* %50, %struct.RenderLayer** %arraydecay), !dbg !14163
  store i32 %call38, i32* %totfullsample, align 4, !dbg !14164
  %51 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !14165
  %and39 = and i32 %51, 2, !dbg !14167
  %tobool40 = icmp ne i32 %and39, 0, !dbg !14167
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !14168

if.then41:                                        ; preds = %if.end37
  %52 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14169
  %53 = load %struct.APixstr*, %struct.APixstr** %APixbuf, align 8, !dbg !14170
  call void @ISB_create(%struct.RenderPart* %52, %struct.APixstr* %53), !dbg !14171
  br label %if.end42, !dbg !14171

if.end42:                                         ; preds = %if.then41, %if.end37
  %54 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14172
  %conv43 = sext i16 %54 to i32, !dbg !14174
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !14174
  br i1 %tobool44, label %land.lhs.true45, label %if.end59, !dbg !14175

land.lhs.true45:                                  ; preds = %if.end42
  %55 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14176
  %layflag46 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %55, i32 0, i32 6, !dbg !14177
  %56 = load i32, i32* %layflag46, align 8, !dbg !14177
  %and47 = and i32 %56, 1, !dbg !14178
  %tobool48 = icmp ne i32 %and47, 0, !dbg !14178
  br i1 %tobool48, label %land.lhs.true49, label %if.end59, !dbg !14179

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %57 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14180
  %fullresult = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %57, i32 0, i32 3, !dbg !14181
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fullresult, i32 0, i32 0, !dbg !14182
  %58 = load i8*, i8** %first, align 8, !dbg !14182
  %cmp50 = icmp eq i8* %58, null, !dbg !14183
  br i1 %cmp50, label %if.then52, label %if.end59, !dbg !14184

if.then52:                                        ; preds = %land.lhs.true49
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14185
  %60 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14186
  %rectx53 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %60, i32 0, i32 14, !dbg !14187
  %61 = load i32, i32* %rectx53, align 8, !dbg !14187
  %62 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14188
  %recty54 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %62, i32 0, i32 15, !dbg !14189
  %63 = load i32, i32* %recty54, align 4, !dbg !14189
  %mul55 = mul nsw i32 %61, %63, !dbg !14190
  %conv56 = sext i32 %mul55 to i64, !dbg !14186
  %mul57 = mul i64 %conv56, 2, !dbg !14191
  %call58 = call i8* %59(i64 %mul57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)), !dbg !14185
  %64 = bitcast i8* %call58 to i16*, !dbg !14185
  store i16* %64, i16** %ztramask, align 8, !dbg !14192
  br label %if.end59, !dbg !14193

if.end59:                                         ; preds = %if.then52, %land.lhs.true49, %land.lhs.true45, %if.end42
  %65 = load i32, i32* %addpassflag, align 4, !dbg !14194
  %and60 = and i32 %65, 512, !dbg !14196
  %tobool61 = icmp ne i32 %and60, 0, !dbg !14196
  br i1 %tobool61, label %if.then62, label %if.end74, !dbg !14197

if.then62:                                        ; preds = %if.end59
  %66 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14198
  %layflag63 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %66, i32 0, i32 6, !dbg !14200
  %67 = load i32, i32* %layflag63, align 8, !dbg !14200
  %and64 = and i32 %67, 1, !dbg !14201
  %tobool65 = icmp ne i32 %and64, 0, !dbg !14201
  br i1 %tobool65, label %if.then66, label %if.end73, !dbg !14202

if.then66:                                        ; preds = %if.then62
  %68 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14203
  %69 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14204
  %70 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14205
  %acolrect = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %70, i32 0, i32 12, !dbg !14206
  %71 = load float*, float** %acolrect, align 8, !dbg !14206
  %tobool67 = icmp ne float* %71, null, !dbg !14205
  br i1 %tobool67, label %cond.true68, label %cond.false70, !dbg !14205

cond.true68:                                      ; preds = %if.then66
  %72 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14207
  %acolrect69 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %72, i32 0, i32 12, !dbg !14208
  %73 = load float*, float** %acolrect69, align 8, !dbg !14208
  br label %cond.end71, !dbg !14205

cond.false70:                                     ; preds = %if.then66
  %74 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14209
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %74, i32 0, i32 11, !dbg !14210
  %75 = load float*, float** %rectf, align 8, !dbg !14210
  br label %cond.end71, !dbg !14205

cond.end71:                                       ; preds = %cond.false70, %cond.true68
  %cond72 = phi float* [ %73, %cond.true68 ], [ %75, %cond.false70 ], !dbg !14205
  call void @reset_sky_speedvectors(%struct.RenderPart* %68, %struct.RenderLayer* %69, float* %cond72), !dbg !14211
  br label %if.end73, !dbg !14211

if.end73:                                         ; preds = %cond.end71, %if.then62
  br label %if.end74, !dbg !14212

if.end74:                                         ; preds = %if.end73, %if.end59
  %76 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14213
  %crop75 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %76, i32 0, i32 17, !dbg !14215
  %77 = load i16, i16* %crop75, align 4, !dbg !14215
  %tobool76 = icmp ne i16 %77, 0, !dbg !14213
  br i1 %tobool76, label %if.then77, label %if.end84, !dbg !14216

if.then77:                                        ; preds = %if.end74
  store i32 1, i32* %crop, align 4, !dbg !14217
  %78 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14219
  %rectx78 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %78, i32 0, i32 14, !dbg !14220
  %79 = load i32, i32* %rectx78, align 8, !dbg !14220
  %add = add nsw i32 %79, 1, !dbg !14221
  store i32 %add, i32* %offs, align 4, !dbg !14222
  %80 = load i32, i32* %offs, align 4, !dbg !14223
  %mul79 = mul nsw i32 4, %80, !dbg !14224
  %81 = load float*, float** %passrect, align 8, !dbg !14225
  %idx.ext = sext i32 %mul79 to i64, !dbg !14225
  %add.ptr = getelementptr inbounds float, float* %81, i64 %idx.ext, !dbg !14225
  store float* %add.ptr, float** %passrect, align 8, !dbg !14225
  %82 = load i32, i32* %offs, align 4, !dbg !14226
  %83 = load %struct.APixstr*, %struct.APixstr** %aprect, align 8, !dbg !14227
  %idx.ext80 = sext i32 %82 to i64, !dbg !14227
  %add.ptr81 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %83, i64 %idx.ext80, !dbg !14227
  store %struct.APixstr* %add.ptr81, %struct.APixstr** %aprect, align 8, !dbg !14227
  %84 = load i32, i32* %offs, align 4, !dbg !14228
  %85 = load %struct.APixstrand*, %struct.APixstrand** %aprectstrand, align 8, !dbg !14229
  %idx.ext82 = sext i32 %84 to i64, !dbg !14229
  %add.ptr83 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %85, i64 %idx.ext82, !dbg !14229
  store %struct.APixstrand* %add.ptr83, %struct.APixstrand** %aprectstrand, align 8, !dbg !14229
  br label %if.end84, !dbg !14230

if.end84:                                         ; preds = %if.then77, %if.end74
  %86 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14231
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %86, i32 0, i32 13, !dbg !14232
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect, i32 0, i32 2, !dbg !14233
  store volatile i32 0, i32* %ymin, align 8, !dbg !14234
  %87 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14235
  %crop85 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %87, i32 0, i32 17, !dbg !14236
  %88 = load i16, i16* %crop85, align 4, !dbg !14236
  %conv86 = sext i16 %88 to i32, !dbg !14235
  %sub = sub nsw i32 0, %conv86, !dbg !14237
  %89 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14238
  %renrect87 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %89, i32 0, i32 13, !dbg !14239
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect87, i32 0, i32 3, !dbg !14240
  store volatile i32 %sub, i32* %ymax, align 4, !dbg !14241
  %90 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14242
  %91 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14243
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %91, i32 0, i32 14, !dbg !14244
  store %struct.RenderLayer* %90, %struct.RenderLayer** %renlay, align 8, !dbg !14245
  %92 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14246
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %92, i32 0, i32 13, !dbg !14248
  %ymin88 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !14249
  %93 = load i32, i32* %ymin88, align 8, !dbg !14249
  %94 = load i32, i32* %crop, align 4, !dbg !14250
  %add89 = add nsw i32 %93, %94, !dbg !14251
  store i32 %add89, i32* %y, align 4, !dbg !14252
  br label %for.cond, !dbg !14253

for.cond:                                         ; preds = %for.inc564, %if.end84
  %95 = load i32, i32* %y, align 4, !dbg !14254
  %96 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14256
  %disprect90 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %96, i32 0, i32 13, !dbg !14257
  %ymax91 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect90, i32 0, i32 3, !dbg !14258
  %97 = load i32, i32* %ymax91, align 4, !dbg !14258
  %98 = load i32, i32* %crop, align 4, !dbg !14259
  %sub92 = sub nsw i32 %97, %98, !dbg !14260
  %cmp93 = icmp slt i32 %95, %sub92, !dbg !14261
  br i1 %cmp93, label %for.body, label %for.end569, !dbg !14262

for.body:                                         ; preds = %for.cond
  %99 = load float*, float** %passrect, align 8, !dbg !14263
  store float* %99, float** %pass.addr, align 8, !dbg !14265
  %100 = load %struct.APixstr*, %struct.APixstr** %aprect, align 8, !dbg !14266
  store %struct.APixstr* %100, %struct.APixstr** %ap, align 8, !dbg !14267
  %101 = load %struct.APixstrand*, %struct.APixstrand** %aprectstrand, align 8, !dbg !14268
  store %struct.APixstrand* %101, %struct.APixstrand** %apstrand, align 8, !dbg !14269
  %102 = load i32, i32* %offs, align 4, !dbg !14270
  store i32 %102, i32* %od, align 4, !dbg !14271
  %103 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !14272
  %104 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !14274
  %call95 = call i32 %103(i8* %104), !dbg !14275
  %tobool96 = icmp ne i32 %call95, 0, !dbg !14275
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !14276

if.then97:                                        ; preds = %for.body
  br label %for.end569, !dbg !14277

if.end98:                                         ; preds = %for.body
  %105 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14278
  %disprect99 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %105, i32 0, i32 13, !dbg !14280
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect99, i32 0, i32 0, !dbg !14281
  %106 = load i32, i32* %xmin, align 8, !dbg !14281
  %107 = load i32, i32* %crop, align 4, !dbg !14282
  %add100 = add nsw i32 %106, %107, !dbg !14283
  store i32 %add100, i32* %x, align 4, !dbg !14284
  br label %for.cond101, !dbg !14285

for.cond101:                                      ; preds = %for.inc546, %if.end98
  %108 = load i32, i32* %x, align 4, !dbg !14286
  %109 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14288
  %disprect102 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %109, i32 0, i32 13, !dbg !14289
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect102, i32 0, i32 1, !dbg !14290
  %110 = load i32, i32* %xmax, align 4, !dbg !14290
  %111 = load i32, i32* %crop, align 4, !dbg !14291
  %sub103 = sub nsw i32 %110, %111, !dbg !14292
  %cmp104 = icmp slt i32 %108, %sub103, !dbg !14293
  br i1 %cmp104, label %for.body106, label %for.end551, !dbg !14294

for.body106:                                      ; preds = %for.cond101
  %112 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !14295
  %p = getelementptr inbounds %struct.APixstr, %struct.APixstr* %112, i32 0, i32 2, !dbg !14298
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %p, i64 0, i64 0, !dbg !14295
  %113 = load i32, i32* %arrayidx, align 8, !dbg !14295
  %cmp107 = icmp eq i32 %113, 0, !dbg !14299
  br i1 %cmp107, label %land.lhs.true109, label %if.else120, !dbg !14300

land.lhs.true109:                                 ; preds = %for.body106
  %114 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14301
  %tobool110 = icmp ne %struct.APixstrand* %114, null, !dbg !14301
  br i1 %tobool110, label %lor.lhs.false, label %if.then115, !dbg !14302

lor.lhs.false:                                    ; preds = %land.lhs.true109
  %115 = load %struct.APixstrand*, %struct.APixstrand** %apstrand, align 8, !dbg !14303
  %p111 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %115, i32 0, i32 2, !dbg !14304
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %p111, i64 0, i64 0, !dbg !14303
  %116 = load i32, i32* %arrayidx112, align 8, !dbg !14303
  %cmp113 = icmp eq i32 %116, 0, !dbg !14305
  br i1 %cmp113, label %if.then115, label %if.else120, !dbg !14306

if.then115:                                       ; preds = %lor.lhs.false, %land.lhs.true109
  %117 = load i32, i32* %addpassflag, align 4, !dbg !14307
  %and116 = and i32 %117, 512, !dbg !14310
  %tobool117 = icmp ne i32 %and116, 0, !dbg !14310
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !14311

if.then118:                                       ; preds = %if.then115
  %118 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14312
  %119 = load i32, i32* %od, align 4, !dbg !14313
  %120 = load i64*, i64** %rdrect, align 8, !dbg !14314
  call void @add_transp_speed(%struct.RenderLayer* %118, i32 %119, float* null, float 0.000000e+00, i64* %120), !dbg !14315
  br label %if.end119, !dbg !14315

if.end119:                                        ; preds = %if.then118, %if.then115
  br label %if.end545, !dbg !14316

if.else120:                                       ; preds = %lor.lhs.false, %for.body106
  store i32 0, i32* %totface, align 4, !dbg !14317
  %121 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !14319
  store %struct.APixstr* %121, %struct.APixstr** %apn, align 8, !dbg !14320
  br label %while.cond, !dbg !14321

while.cond:                                       ; preds = %for.end, %if.else120
  %122 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14322
  %tobool121 = icmp ne %struct.APixstr* %122, null, !dbg !14321
  br i1 %tobool121, label %while.body, label %while.end, !dbg !14321

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %a, align 4, !dbg !14323
  br label %for.cond122, !dbg !14326

for.cond122:                                      ; preds = %for.inc, %while.body
  %123 = load i32, i32* %a, align 4, !dbg !14327
  %cmp123 = icmp slt i32 %123, 4, !dbg !14329
  br i1 %cmp123, label %for.body125, label %for.end, !dbg !14330

for.body125:                                      ; preds = %for.cond122
  %124 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14331
  %p126 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %124, i32 0, i32 2, !dbg !14334
  %125 = load i32, i32* %a, align 4, !dbg !14335
  %idxprom = sext i32 %125 to i64, !dbg !14331
  %arrayidx127 = getelementptr inbounds [4 x i32], [4 x i32]* %p126, i64 0, i64 %idxprom, !dbg !14331
  %126 = load i32, i32* %arrayidx127, align 4, !dbg !14331
  %tobool128 = icmp ne i32 %126, 0, !dbg !14331
  br i1 %tobool128, label %if.then129, label %if.else158, !dbg !14336

if.then129:                                       ; preds = %for.body125
  %127 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14337
  %obi = getelementptr inbounds %struct.APixstr, %struct.APixstr* %127, i32 0, i32 3, !dbg !14339
  %128 = load i32, i32* %a, align 4, !dbg !14340
  %idxprom130 = sext i32 %128 to i64, !dbg !14337
  %arrayidx131 = getelementptr inbounds [4 x i32], [4 x i32]* %obi, i64 0, i64 %idxprom130, !dbg !14337
  %129 = load i32, i32* %arrayidx131, align 4, !dbg !14337
  %130 = load i32, i32* %totface, align 4, !dbg !14341
  %idxprom132 = sext i32 %130 to i64, !dbg !14342
  %arrayidx133 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom132, !dbg !14342
  %obi134 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx133, i32 0, i32 0, !dbg !14343
  store i32 %129, i32* %obi134, align 4, !dbg !14344
  %131 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14345
  %z = getelementptr inbounds %struct.APixstr, %struct.APixstr* %131, i32 0, i32 1, !dbg !14346
  %132 = load i32, i32* %a, align 4, !dbg !14347
  %idxprom135 = sext i32 %132 to i64, !dbg !14345
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %z, i64 0, i64 %idxprom135, !dbg !14345
  %133 = load i32, i32* %arrayidx136, align 4, !dbg !14345
  %134 = load i32, i32* %totface, align 4, !dbg !14348
  %idxprom137 = sext i32 %134 to i64, !dbg !14349
  %arrayidx138 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom137, !dbg !14349
  %z139 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx138, i32 0, i32 1, !dbg !14350
  store i32 %133, i32* %z139, align 4, !dbg !14351
  %135 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14352
  %p140 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %135, i32 0, i32 2, !dbg !14353
  %136 = load i32, i32* %a, align 4, !dbg !14354
  %idxprom141 = sext i32 %136 to i64, !dbg !14352
  %arrayidx142 = getelementptr inbounds [4 x i32], [4 x i32]* %p140, i64 0, i64 %idxprom141, !dbg !14352
  %137 = load i32, i32* %arrayidx142, align 4, !dbg !14352
  %138 = load i32, i32* %totface, align 4, !dbg !14355
  %idxprom143 = sext i32 %138 to i64, !dbg !14356
  %arrayidx144 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom143, !dbg !14356
  %p145 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx144, i32 0, i32 2, !dbg !14357
  store i32 %137, i32* %p145, align 4, !dbg !14358
  %139 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14359
  %mask = getelementptr inbounds %struct.APixstr, %struct.APixstr* %139, i32 0, i32 0, !dbg !14360
  %140 = load i32, i32* %a, align 4, !dbg !14361
  %idxprom146 = sext i32 %140 to i64, !dbg !14359
  %arrayidx147 = getelementptr inbounds [4 x i16], [4 x i16]* %mask, i64 0, i64 %idxprom146, !dbg !14359
  %141 = load i16, i16* %arrayidx147, align 2, !dbg !14359
  %conv148 = zext i16 %141 to i32, !dbg !14359
  %142 = load i32, i32* %totface, align 4, !dbg !14362
  %idxprom149 = sext i32 %142 to i64, !dbg !14363
  %arrayidx150 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom149, !dbg !14363
  %mask151 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx150, i32 0, i32 3, !dbg !14364
  store i32 %conv148, i32* %mask151, align 4, !dbg !14365
  %143 = load i32, i32* %totface, align 4, !dbg !14366
  %idxprom152 = sext i32 %143 to i64, !dbg !14367
  %arrayidx153 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom152, !dbg !14367
  %segment = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx153, i32 0, i32 4, !dbg !14368
  store i32 -1, i32* %segment, align 4, !dbg !14369
  %144 = load i32, i32* %totface, align 4, !dbg !14370
  %inc = add nsw i32 %144, 1, !dbg !14370
  store i32 %inc, i32* %totface, align 4, !dbg !14370
  %145 = load i32, i32* %totface, align 4, !dbg !14371
  %cmp154 = icmp sge i32 %145, 2000, !dbg !14373
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !14374

if.then156:                                       ; preds = %if.then129
  store i32 1999, i32* %totface, align 4, !dbg !14375
  br label %if.end157, !dbg !14376

if.end157:                                        ; preds = %if.then156, %if.then129
  br label %if.end159, !dbg !14377

if.else158:                                       ; preds = %for.body125
  br label %for.end, !dbg !14378

if.end159:                                        ; preds = %if.end157
  br label %for.inc, !dbg !14379

for.inc:                                          ; preds = %if.end159
  %146 = load i32, i32* %a, align 4, !dbg !14380
  %inc160 = add nsw i32 %146, 1, !dbg !14380
  store i32 %inc160, i32* %a, align 4, !dbg !14380
  br label %for.cond122, !dbg !14381, !llvm.loop !14382

for.end:                                          ; preds = %if.else158, %for.cond122
  %147 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !14384
  %next = getelementptr inbounds %struct.APixstr, %struct.APixstr* %147, i32 0, i32 5, !dbg !14385
  %148 = load %struct.APixstr*, %struct.APixstr** %next, align 8, !dbg !14385
  store %struct.APixstr* %148, %struct.APixstr** %apn, align 8, !dbg !14386
  br label %while.cond, !dbg !14321, !llvm.loop !14387

while.end:                                        ; preds = %while.cond
  %149 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14389
  %tobool161 = icmp ne %struct.APixstrand* %149, null, !dbg !14390
  br i1 %tobool161, label %cond.true162, label %cond.false163, !dbg !14390

cond.true162:                                     ; preds = %while.end
  %150 = load %struct.APixstrand*, %struct.APixstrand** %apstrand, align 8, !dbg !14391
  br label %cond.end164, !dbg !14390

cond.false163:                                    ; preds = %while.end
  br label %cond.end164, !dbg !14390

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond165 = phi %struct.APixstrand* [ %150, %cond.true162 ], [ null, %cond.false163 ], !dbg !14390
  store %struct.APixstrand* %cond165, %struct.APixstrand** %apnstrand, align 8, !dbg !14392
  br label %while.cond166, !dbg !14393

while.cond166:                                    ; preds = %for.end250, %cond.end164
  %151 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14394
  %tobool167 = icmp ne %struct.APixstrand* %151, null, !dbg !14393
  br i1 %tobool167, label %while.body168, label %while.end252, !dbg !14393

while.body168:                                    ; preds = %while.cond166
  store i32 0, i32* %a, align 4, !dbg !14395
  br label %for.cond169, !dbg !14398

for.cond169:                                      ; preds = %for.inc248, %while.body168
  %152 = load i32, i32* %a, align 4, !dbg !14399
  %cmp170 = icmp slt i32 %152, 4, !dbg !14401
  br i1 %cmp170, label %for.body172, label %for.end250, !dbg !14402

for.body172:                                      ; preds = %for.cond169
  %153 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14403
  %p173 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %153, i32 0, i32 2, !dbg !14406
  %154 = load i32, i32* %a, align 4, !dbg !14407
  %idxprom174 = sext i32 %154 to i64, !dbg !14403
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %p173, i64 0, i64 %idxprom174, !dbg !14403
  %155 = load i32, i32* %arrayidx175, align 4, !dbg !14403
  %tobool176 = icmp ne i32 %155, 0, !dbg !14403
  br i1 %tobool176, label %if.then177, label %if.end247, !dbg !14408

if.then177:                                       ; preds = %for.body172
  %156 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14409
  %obi178 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %156, i32 0, i32 3, !dbg !14411
  %157 = load i32, i32* %a, align 4, !dbg !14412
  %idxprom179 = sext i32 %157 to i64, !dbg !14409
  %arrayidx180 = getelementptr inbounds [4 x i32], [4 x i32]* %obi178, i64 0, i64 %idxprom179, !dbg !14409
  %158 = load i32, i32* %arrayidx180, align 4, !dbg !14409
  %159 = load i32, i32* %totface, align 4, !dbg !14413
  %idxprom181 = sext i32 %159 to i64, !dbg !14414
  %arrayidx182 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom181, !dbg !14414
  %obi183 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx182, i32 0, i32 0, !dbg !14415
  store i32 %158, i32* %obi183, align 4, !dbg !14416
  %160 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14417
  %z184 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %160, i32 0, i32 1, !dbg !14418
  %161 = load i32, i32* %a, align 4, !dbg !14419
  %idxprom185 = sext i32 %161 to i64, !dbg !14417
  %arrayidx186 = getelementptr inbounds [4 x i32], [4 x i32]* %z184, i64 0, i64 %idxprom185, !dbg !14417
  %162 = load i32, i32* %arrayidx186, align 4, !dbg !14417
  %163 = load i32, i32* %totface, align 4, !dbg !14420
  %idxprom187 = sext i32 %163 to i64, !dbg !14421
  %arrayidx188 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom187, !dbg !14421
  %z189 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx188, i32 0, i32 1, !dbg !14422
  store i32 %162, i32* %z189, align 4, !dbg !14423
  %164 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14424
  %p190 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %164, i32 0, i32 2, !dbg !14425
  %165 = load i32, i32* %a, align 4, !dbg !14426
  %idxprom191 = sext i32 %165 to i64, !dbg !14424
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %p190, i64 0, i64 %idxprom191, !dbg !14424
  %166 = load i32, i32* %arrayidx192, align 4, !dbg !14424
  %167 = load i32, i32* %totface, align 4, !dbg !14427
  %idxprom193 = sext i32 %167 to i64, !dbg !14428
  %arrayidx194 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom193, !dbg !14428
  %p195 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx194, i32 0, i32 2, !dbg !14429
  store i32 %166, i32* %p195, align 4, !dbg !14430
  %168 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14431
  %mask196 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %168, i32 0, i32 0, !dbg !14432
  %169 = load i32, i32* %a, align 4, !dbg !14433
  %idxprom197 = sext i32 %169 to i64, !dbg !14431
  %arrayidx198 = getelementptr inbounds [4 x i16], [4 x i16]* %mask196, i64 0, i64 %idxprom197, !dbg !14431
  %170 = load i16, i16* %arrayidx198, align 2, !dbg !14431
  %conv199 = zext i16 %170 to i32, !dbg !14431
  %171 = load i32, i32* %totface, align 4, !dbg !14434
  %idxprom200 = sext i32 %171 to i64, !dbg !14435
  %arrayidx201 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom200, !dbg !14435
  %mask202 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx201, i32 0, i32 3, !dbg !14436
  store i32 %conv199, i32* %mask202, align 4, !dbg !14437
  %172 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14438
  %seg = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %172, i32 0, i32 4, !dbg !14439
  %173 = load i32, i32* %a, align 4, !dbg !14440
  %idxprom203 = sext i32 %173 to i64, !dbg !14438
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %seg, i64 0, i64 %idxprom203, !dbg !14438
  %174 = load i32, i32* %arrayidx204, align 4, !dbg !14438
  %175 = load i32, i32* %totface, align 4, !dbg !14441
  %idxprom205 = sext i32 %175 to i64, !dbg !14442
  %arrayidx206 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom205, !dbg !14442
  %segment207 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx206, i32 0, i32 4, !dbg !14443
  store i32 %174, i32* %segment207, align 4, !dbg !14444
  %176 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14445
  %tobool208 = icmp ne i16 %176, 0, !dbg !14447
  br i1 %tobool208, label %if.then209, label %if.else226, !dbg !14448

if.then209:                                       ; preds = %if.then177
  store i32 0, i32* %totsample, align 4, !dbg !14449
  store i32 0, i32* %b, align 4, !dbg !14451
  br label %for.cond210, !dbg !14453

for.cond210:                                      ; preds = %for.inc223, %if.then209
  %177 = load i32, i32* %b, align 4, !dbg !14454
  %178 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14456
  %conv211 = sext i16 %178 to i32, !dbg !14457
  %cmp212 = icmp slt i32 %177, %conv211, !dbg !14458
  br i1 %cmp212, label %for.body214, label %for.end225, !dbg !14459

for.body214:                                      ; preds = %for.cond210
  %179 = load i32, i32* %totface, align 4, !dbg !14460
  %idxprom215 = sext i32 %179 to i64, !dbg !14462
  %arrayidx216 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom215, !dbg !14462
  %mask217 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx216, i32 0, i32 3, !dbg !14463
  %180 = load i32, i32* %mask217, align 4, !dbg !14463
  %181 = load i32, i32* %b, align 4, !dbg !14464
  %shl = shl i32 1, %181, !dbg !14465
  %and218 = and i32 %180, %shl, !dbg !14466
  %tobool219 = icmp ne i32 %and218, 0, !dbg !14466
  br i1 %tobool219, label %if.then220, label %if.end222, !dbg !14467

if.then220:                                       ; preds = %for.body214
  %182 = load i32, i32* %totsample, align 4, !dbg !14468
  %inc221 = add nsw i32 %182, 1, !dbg !14468
  store i32 %inc221, i32* %totsample, align 4, !dbg !14468
  br label %if.end222, !dbg !14469

if.end222:                                        ; preds = %if.then220, %for.body214
  br label %for.inc223, !dbg !14470

for.inc223:                                       ; preds = %if.end222
  %183 = load i32, i32* %b, align 4, !dbg !14471
  %inc224 = add nsw i32 %183, 1, !dbg !14471
  store i32 %inc224, i32* %b, align 4, !dbg !14471
  br label %for.cond210, !dbg !14472, !llvm.loop !14473

for.end225:                                       ; preds = %for.cond210
  br label %if.end227, !dbg !14475

if.else226:                                       ; preds = %if.then177
  store i32 1, i32* %totsample, align 4, !dbg !14476
  br label %if.end227

if.end227:                                        ; preds = %if.else226, %for.end225
  %184 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14477
  %u = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %184, i32 0, i32 5, !dbg !14478
  %185 = load i32, i32* %a, align 4, !dbg !14479
  %idxprom228 = sext i32 %185 to i64, !dbg !14477
  %arrayidx229 = getelementptr inbounds [4 x float], [4 x float]* %u, i64 0, i64 %idxprom228, !dbg !14477
  %186 = load float, float* %arrayidx229, align 4, !dbg !14477
  %187 = load i32, i32* %totsample, align 4, !dbg !14480
  %conv230 = sitofp i32 %187 to float, !dbg !14480
  %div231 = fdiv float %186, %conv230, !dbg !14481
  %188 = load i32, i32* %totface, align 4, !dbg !14482
  %idxprom232 = sext i32 %188 to i64, !dbg !14483
  %arrayidx233 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom232, !dbg !14483
  %u234 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx233, i32 0, i32 5, !dbg !14484
  store float %div231, float* %u234, align 4, !dbg !14485
  %189 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14486
  %v = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %189, i32 0, i32 6, !dbg !14487
  %190 = load i32, i32* %a, align 4, !dbg !14488
  %idxprom235 = sext i32 %190 to i64, !dbg !14486
  %arrayidx236 = getelementptr inbounds [4 x float], [4 x float]* %v, i64 0, i64 %idxprom235, !dbg !14486
  %191 = load float, float* %arrayidx236, align 4, !dbg !14486
  %192 = load i32, i32* %totsample, align 4, !dbg !14489
  %conv237 = sitofp i32 %192 to float, !dbg !14489
  %div238 = fdiv float %191, %conv237, !dbg !14490
  %193 = load i32, i32* %totface, align 4, !dbg !14491
  %idxprom239 = sext i32 %193 to i64, !dbg !14492
  %arrayidx240 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom239, !dbg !14492
  %v241 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx240, i32 0, i32 6, !dbg !14493
  store float %div238, float* %v241, align 4, !dbg !14494
  %194 = load i32, i32* %totface, align 4, !dbg !14495
  %inc242 = add nsw i32 %194, 1, !dbg !14495
  store i32 %inc242, i32* %totface, align 4, !dbg !14495
  %195 = load i32, i32* %totface, align 4, !dbg !14496
  %cmp243 = icmp sge i32 %195, 2000, !dbg !14498
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !14499

if.then245:                                       ; preds = %if.end227
  store i32 1999, i32* %totface, align 4, !dbg !14500
  br label %if.end246, !dbg !14501

if.end246:                                        ; preds = %if.then245, %if.end227
  br label %if.end247, !dbg !14502

if.end247:                                        ; preds = %if.end246, %for.body172
  br label %for.inc248, !dbg !14503

for.inc248:                                       ; preds = %if.end247
  %196 = load i32, i32* %a, align 4, !dbg !14504
  %inc249 = add nsw i32 %196, 1, !dbg !14504
  store i32 %inc249, i32* %a, align 4, !dbg !14504
  br label %for.cond169, !dbg !14505, !llvm.loop !14506

for.end250:                                       ; preds = %for.cond169
  %197 = load %struct.APixstrand*, %struct.APixstrand** %apnstrand, align 8, !dbg !14508
  %next251 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %197, i32 0, i32 7, !dbg !14509
  %198 = load %struct.APixstrand*, %struct.APixstrand** %next251, align 8, !dbg !14509
  store %struct.APixstrand* %198, %struct.APixstrand** %apnstrand, align 8, !dbg !14510
  br label %while.cond166, !dbg !14393, !llvm.loop !14511

while.end252:                                     ; preds = %while.cond166
  %199 = load i32, i32* %totface, align 4, !dbg !14513
  %cmp253 = icmp eq i32 %199, 2, !dbg !14515
  br i1 %cmp253, label %if.then255, label %if.else268, !dbg !14516

if.then255:                                       ; preds = %while.end252
  %arrayidx256 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14517
  %z257 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx256, i32 0, i32 1, !dbg !14520
  %200 = load i32, i32* %z257, align 4, !dbg !14520
  %arrayidx258 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 1, !dbg !14521
  %z259 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx258, i32 0, i32 1, !dbg !14522
  %201 = load i32, i32* %z259, align 4, !dbg !14522
  %cmp260 = icmp slt i32 %200, %201, !dbg !14523
  br i1 %cmp260, label %if.then262, label %if.end267, !dbg !14524

if.then262:                                       ; preds = %if.then255
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow* %sw_ap, metadata !14525, metadata !DIExpression()), !dbg !14528
  %arrayidx263 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14528
  %202 = bitcast %struct.ZTranspRow* %sw_ap to i8*, !dbg !14528
  %203 = bitcast %struct.ZTranspRow* %arrayidx263 to i8*, !dbg !14528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 16 %203, i64 28, i1 false), !dbg !14528
  %arrayidx264 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14528
  %arrayidx265 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 1, !dbg !14528
  %204 = bitcast %struct.ZTranspRow* %arrayidx264 to i8*, !dbg !14528
  %205 = bitcast %struct.ZTranspRow* %arrayidx265 to i8*, !dbg !14528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %204, i8* align 4 %205, i64 28, i1 false), !dbg !14528
  %arrayidx266 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 1, !dbg !14528
  %206 = bitcast %struct.ZTranspRow* %arrayidx266 to i8*, !dbg !14528
  %207 = bitcast %struct.ZTranspRow* %sw_ap to i8*, !dbg !14528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 28, i1 false), !dbg !14528
  br label %if.end267, !dbg !14529

if.end267:                                        ; preds = %if.then262, %if.then255
  br label %if.end275, !dbg !14530

if.else268:                                       ; preds = %while.end252
  %208 = load i32, i32* %totface, align 4, !dbg !14531
  %cmp269 = icmp sgt i32 %208, 2, !dbg !14533
  br i1 %cmp269, label %if.then271, label %if.end274, !dbg !14534

if.then271:                                       ; preds = %if.else268
  %arraydecay272 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14535
  %209 = bitcast %struct.ZTranspRow* %arraydecay272 to i8*, !dbg !14535
  %210 = load i32, i32* %totface, align 4, !dbg !14537
  %conv273 = sext i32 %210 to i64, !dbg !14537
  call void @qsort(i8* %209, i64 %conv273, i64 28, i32 (i8*, i8*)* @vergzvlak), !dbg !14538
  br label %if.end274, !dbg !14539

if.end274:                                        ; preds = %if.then271, %if.else268
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %if.end267
  %211 = load i32, i32* %addpassflag, align 4, !dbg !14540
  %and276 = and i32 %211, 2048, !dbg !14542
  %tobool277 = icmp ne i32 %and276, 0, !dbg !14542
  br i1 %tobool277, label %if.then278, label %if.end299, !dbg !14543

if.then278:                                       ; preds = %if.end275
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !14544, metadata !DIExpression()), !dbg !14546
  %212 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !14547
  %213 = load i32, i32* %totface, align 4, !dbg !14548
  %sub279 = sub nsw i32 %213, 1, !dbg !14549
  %idxprom280 = sext i32 %sub279 to i64, !dbg !14550
  %arrayidx281 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom280, !dbg !14550
  %obi282 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx281, i32 0, i32 0, !dbg !14551
  %214 = load i32, i32* %obi282, align 4, !dbg !14551
  %idxprom283 = sext i32 %214 to i64, !dbg !14552
  %arrayidx284 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %212, i64 %idxprom283, !dbg !14552
  %obr285 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %arrayidx284, i32 0, i32 2, !dbg !14553
  %215 = load %struct.ObjectRen*, %struct.ObjectRen** %obr285, align 8, !dbg !14553
  store %struct.ObjectRen* %215, %struct.ObjectRen** %obr, align 8, !dbg !14546
  %216 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !14554
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %216, i32 0, i32 2, !dbg !14556
  %217 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14556
  %tobool286 = icmp ne %struct.Object* %217, null, !dbg !14554
  br i1 %tobool286, label %if.then287, label %if.end298, !dbg !14557

if.then287:                                       ; preds = %if.then278
  store i32 0, i32* %a, align 4, !dbg !14558
  br label %for.cond288, !dbg !14561

for.cond288:                                      ; preds = %for.inc295, %if.then287
  %218 = load i32, i32* %a, align 4, !dbg !14562
  %219 = load i32, i32* %totfullsample, align 4, !dbg !14564
  %cmp289 = icmp slt i32 %218, %219, !dbg !14565
  br i1 %cmp289, label %for.body291, label %for.end297, !dbg !14566

for.body291:                                      ; preds = %for.cond288
  %220 = load i32, i32* %a, align 4, !dbg !14567
  %idxprom292 = sext i32 %220 to i64, !dbg !14568
  %arrayidx293 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom292, !dbg !14568
  %221 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx293, align 8, !dbg !14568
  %222 = load i32, i32* %od, align 4, !dbg !14569
  %223 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !14570
  %ob294 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %223, i32 0, i32 2, !dbg !14571
  %224 = load %struct.Object*, %struct.Object** %ob294, align 8, !dbg !14571
  call void @add_transp_obindex(%struct.RenderLayer* %221, i32 %222, %struct.Object* %224), !dbg !14572
  br label %for.inc295, !dbg !14572

for.inc295:                                       ; preds = %for.body291
  %225 = load i32, i32* %a, align 4, !dbg !14573
  %inc296 = add nsw i32 %225, 1, !dbg !14573
  store i32 %inc296, i32* %a, align 4, !dbg !14573
  br label %for.cond288, !dbg !14574, !llvm.loop !14575

for.end297:                                       ; preds = %for.cond288
  br label %if.end298, !dbg !14577

if.end298:                                        ; preds = %for.end297, %if.then278
  br label %if.end299, !dbg !14578

if.end299:                                        ; preds = %if.end298, %if.end275
  %226 = load i32, i32* %addpassflag, align 4, !dbg !14579
  %and300 = and i32 %226, 262144, !dbg !14581
  %tobool301 = icmp ne i32 %and300, 0, !dbg !14581
  br i1 %tobool301, label %if.then302, label %if.end356, !dbg !14582

if.then302:                                       ; preds = %if.end299
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr303, metadata !14583, metadata !DIExpression()), !dbg !14585
  %227 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !14586
  %228 = load i32, i32* %totface, align 4, !dbg !14587
  %sub304 = sub nsw i32 %228, 1, !dbg !14588
  %idxprom305 = sext i32 %sub304 to i64, !dbg !14589
  %arrayidx306 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom305, !dbg !14589
  %obi307 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx306, i32 0, i32 0, !dbg !14590
  %229 = load i32, i32* %obi307, align 4, !dbg !14590
  %idxprom308 = sext i32 %229 to i64, !dbg !14591
  %arrayidx309 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %227, i64 %idxprom308, !dbg !14591
  %obr310 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %arrayidx309, i32 0, i32 2, !dbg !14592
  %230 = load %struct.ObjectRen*, %struct.ObjectRen** %obr310, align 8, !dbg !14592
  store %struct.ObjectRen* %230, %struct.ObjectRen** %obr303, align 8, !dbg !14585
  call void @llvm.dbg.declare(metadata i32* %p311, metadata !14593, metadata !DIExpression()), !dbg !14594
  %231 = load i32, i32* %totface, align 4, !dbg !14595
  %sub312 = sub nsw i32 %231, 1, !dbg !14596
  %idxprom313 = sext i32 %sub312 to i64, !dbg !14597
  %arrayidx314 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom313, !dbg !14597
  %p315 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx314, i32 0, i32 2, !dbg !14598
  %232 = load i32, i32* %p315, align 4, !dbg !14598
  store i32 %232, i32* %p311, align 4, !dbg !14594
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !14599, metadata !DIExpression()), !dbg !14600
  store %struct.Material* null, %struct.Material** %mat, align 8, !dbg !14600
  %233 = load i32, i32* %totface, align 4, !dbg !14601
  %sub316 = sub nsw i32 %233, 1, !dbg !14603
  %idxprom317 = sext i32 %sub316 to i64, !dbg !14604
  %arrayidx318 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom317, !dbg !14604
  %segment319 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx318, i32 0, i32 4, !dbg !14605
  %234 = load i32, i32* %segment319, align 4, !dbg !14605
  %cmp320 = icmp eq i32 %234, -1, !dbg !14606
  br i1 %cmp320, label %if.then322, label %if.else337, !dbg !14607

if.then322:                                       ; preds = %if.then302
  call void @llvm.dbg.declare(metadata i32* %facenr, metadata !14608, metadata !DIExpression()), !dbg !14610
  %235 = load i32, i32* %p311, align 4, !dbg !14611
  %sub323 = sub nsw i32 %235, 1, !dbg !14612
  %and324 = and i32 %sub323, 134217727, !dbg !14613
  store i32 %and324, i32* %facenr, align 4, !dbg !14610
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !14614, metadata !DIExpression()), !dbg !14615
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !14615
  %236 = load i32, i32* %facenr, align 4, !dbg !14616
  %cmp325 = icmp sge i32 %236, 0, !dbg !14618
  br i1 %cmp325, label %land.lhs.true327, label %if.end332, !dbg !14619

land.lhs.true327:                                 ; preds = %if.then322
  %237 = load i32, i32* %facenr, align 4, !dbg !14620
  %238 = load %struct.ObjectRen*, %struct.ObjectRen** %obr303, align 8, !dbg !14621
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %238, i32 0, i32 11, !dbg !14622
  %239 = load i32, i32* %totvlak, align 4, !dbg !14622
  %cmp328 = icmp slt i32 %237, %239, !dbg !14623
  br i1 %cmp328, label %if.then330, label %if.end332, !dbg !14624

if.then330:                                       ; preds = %land.lhs.true327
  %240 = load %struct.ObjectRen*, %struct.ObjectRen** %obr303, align 8, !dbg !14625
  %241 = load i32, i32* %facenr, align 4, !dbg !14626
  %call331 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %240, i32 %241), !dbg !14627
  store %struct.VlakRen* %call331, %struct.VlakRen** %vlr, align 8, !dbg !14628
  br label %if.end332, !dbg !14629

if.end332:                                        ; preds = %if.then330, %land.lhs.true327, %if.then322
  %242 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14630
  %tobool333 = icmp ne %struct.VlakRen* %242, null, !dbg !14630
  br i1 %tobool333, label %if.then334, label %if.end336, !dbg !14632

if.then334:                                       ; preds = %if.end332
  %243 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14633
  %mat335 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %243, i32 0, i32 5, !dbg !14634
  %244 = load %struct.Material*, %struct.Material** %mat335, align 8, !dbg !14634
  store %struct.Material* %244, %struct.Material** %mat, align 8, !dbg !14635
  br label %if.end336, !dbg !14636

if.end336:                                        ; preds = %if.then334, %if.end332
  br label %if.end343, !dbg !14637

if.else337:                                       ; preds = %if.then302
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !14638, metadata !DIExpression()), !dbg !14640
  %245 = load %struct.ObjectRen*, %struct.ObjectRen** %obr303, align 8, !dbg !14641
  %246 = load i32, i32* %p311, align 4, !dbg !14642
  %sub338 = sub nsw i32 %246, 1, !dbg !14643
  %call339 = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %245, i32 %sub338), !dbg !14644
  store %struct.StrandRen* %call339, %struct.StrandRen** %strand, align 8, !dbg !14640
  %247 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !14645
  %tobool340 = icmp ne %struct.StrandRen* %247, null, !dbg !14645
  br i1 %tobool340, label %if.then341, label %if.end342, !dbg !14647

if.then341:                                       ; preds = %if.else337
  %248 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !14648
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %248, i32 0, i32 1, !dbg !14649
  %249 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer, align 8, !dbg !14649
  %ma = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %249, i32 0, i32 7, !dbg !14650
  %250 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14650
  store %struct.Material* %250, %struct.Material** %mat, align 8, !dbg !14651
  br label %if.end342, !dbg !14652

if.end342:                                        ; preds = %if.then341, %if.else337
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end336
  %251 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !14653
  %tobool344 = icmp ne %struct.Material* %251, null, !dbg !14653
  br i1 %tobool344, label %if.then345, label %if.end355, !dbg !14655

if.then345:                                       ; preds = %if.end343
  store i32 0, i32* %a, align 4, !dbg !14656
  br label %for.cond346, !dbg !14659

for.cond346:                                      ; preds = %for.inc352, %if.then345
  %252 = load i32, i32* %a, align 4, !dbg !14660
  %253 = load i32, i32* %totfullsample, align 4, !dbg !14662
  %cmp347 = icmp slt i32 %252, %253, !dbg !14663
  br i1 %cmp347, label %for.body349, label %for.end354, !dbg !14664

for.body349:                                      ; preds = %for.cond346
  %254 = load i32, i32* %a, align 4, !dbg !14665
  %idxprom350 = sext i32 %254 to i64, !dbg !14666
  %arrayidx351 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom350, !dbg !14666
  %255 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx351, align 8, !dbg !14666
  %256 = load i32, i32* %od, align 4, !dbg !14667
  %257 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !14668
  call void @add_transp_material_index(%struct.RenderLayer* %255, i32 %256, %struct.Material* %257), !dbg !14669
  br label %for.inc352, !dbg !14669

for.inc352:                                       ; preds = %for.body349
  %258 = load i32, i32* %a, align 4, !dbg !14670
  %inc353 = add nsw i32 %258, 1, !dbg !14670
  store i32 %inc353, i32* %a, align 4, !dbg !14670
  br label %for.cond346, !dbg !14671, !llvm.loop !14672

for.end354:                                       ; preds = %for.cond346
  br label %if.end355, !dbg !14674

if.end355:                                        ; preds = %for.end354, %if.end343
  br label %if.end356, !dbg !14675

if.end356:                                        ; preds = %if.end355, %if.end299
  %arraydecay357 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14676
  %259 = bitcast %struct.ShadeResult* %arraydecay357 to i8*, !dbg !14676
  %260 = load i32, i32* %osa, align 4, !dbg !14677
  %conv358 = sext i32 %260 to i64, !dbg !14677
  %mul359 = mul i64 212, %conv358, !dbg !14678
  call void @llvm.memset.p0i8.i64(i8* align 16 %259, i8 0, i64 %mul359, i1 false), !dbg !14676
  store i32 0, i32* %a, align 4, !dbg !14679
  br label %for.cond360, !dbg !14681

for.cond360:                                      ; preds = %for.inc386, %if.end356
  %261 = load i32, i32* %a, align 4, !dbg !14682
  %262 = load i32, i32* %osa, align 4, !dbg !14684
  %cmp361 = icmp slt i32 %261, %262, !dbg !14685
  br i1 %cmp361, label %for.body363, label %for.end388, !dbg !14686

for.body363:                                      ; preds = %for.cond360
  %263 = load i32, i32* %a, align 4, !dbg !14687
  %idxprom364 = sext i32 %263 to i64, !dbg !14689
  %arrayidx365 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom364, !dbg !14689
  %z366 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx365, i32 0, i32 4, !dbg !14690
  store float 0x42374876E0000000, float* %z366, align 4, !dbg !14691
  %264 = load i32, i32* %addpassflag, align 4, !dbg !14692
  %and367 = and i32 %264, 512, !dbg !14694
  %tobool368 = icmp ne i32 %and367, 0, !dbg !14694
  br i1 %tobool368, label %if.then369, label %if.end385, !dbg !14695

if.then369:                                       ; preds = %for.body363
  %265 = load i32, i32* %a, align 4, !dbg !14696
  %idxprom370 = sext i32 %265 to i64, !dbg !14698
  %arrayidx371 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom370, !dbg !14698
  %winspeed = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx371, i32 0, i32 16, !dbg !14699
  %arrayidx372 = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !14698
  store float 1.000000e+04, float* %arrayidx372, align 4, !dbg !14700
  %266 = load i32, i32* %a, align 4, !dbg !14701
  %idxprom373 = sext i32 %266 to i64, !dbg !14702
  %arrayidx374 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom373, !dbg !14702
  %winspeed375 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx374, i32 0, i32 16, !dbg !14703
  %arrayidx376 = getelementptr inbounds [4 x float], [4 x float]* %winspeed375, i64 0, i64 1, !dbg !14702
  store float 1.000000e+04, float* %arrayidx376, align 4, !dbg !14704
  %267 = load i32, i32* %a, align 4, !dbg !14705
  %idxprom377 = sext i32 %267 to i64, !dbg !14706
  %arrayidx378 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom377, !dbg !14706
  %winspeed379 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx378, i32 0, i32 16, !dbg !14707
  %arrayidx380 = getelementptr inbounds [4 x float], [4 x float]* %winspeed379, i64 0, i64 2, !dbg !14706
  store float 1.000000e+04, float* %arrayidx380, align 4, !dbg !14708
  %268 = load i32, i32* %a, align 4, !dbg !14709
  %idxprom381 = sext i32 %268 to i64, !dbg !14710
  %arrayidx382 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom381, !dbg !14710
  %winspeed383 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx382, i32 0, i32 16, !dbg !14711
  %arrayidx384 = getelementptr inbounds [4 x float], [4 x float]* %winspeed383, i64 0, i64 3, !dbg !14710
  store float 1.000000e+04, float* %arrayidx384, align 4, !dbg !14712
  br label %if.end385, !dbg !14713

if.end385:                                        ; preds = %if.then369, %for.body363
  br label %for.inc386, !dbg !14714

for.inc386:                                       ; preds = %if.end385
  %269 = load i32, i32* %a, align 4, !dbg !14715
  %inc387 = add nsw i32 %269, 1, !dbg !14715
  store i32 %inc387, i32* %a, align 4, !dbg !14715
  br label %for.cond360, !dbg !14716, !llvm.loop !14717

for.end388:                                       ; preds = %for.cond360
  %270 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14719
  %conv389 = sext i16 %270 to i32, !dbg !14721
  %cmp390 = icmp eq i32 %conv389, 0, !dbg !14722
  br i1 %cmp390, label %if.then392, label %if.else433, !dbg !14723

if.then392:                                       ; preds = %for.end388
  br label %while.cond393, !dbg !14724

while.cond393:                                    ; preds = %if.end416, %if.then392
  %271 = load i32, i32* %totface, align 4, !dbg !14726
  %cmp394 = icmp sgt i32 %271, 0, !dbg !14727
  br i1 %cmp394, label %while.body396, label %while.end417, !dbg !14724

while.body396:                                    ; preds = %while.cond393
  %272 = load i32, i32* %totface, align 4, !dbg !14728
  %dec = add nsw i32 %272, -1, !dbg !14728
  store i32 %dec, i32* %totface, align 4, !dbg !14728
  %273 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14730
  %274 = load i32, i32* %x, align 4, !dbg !14732
  %275 = load i32, i32* %y, align 4, !dbg !14733
  %276 = load i32, i32* %totface, align 4, !dbg !14734
  %idxprom397 = sext i32 %276 to i64, !dbg !14735
  %arrayidx398 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom397, !dbg !14735
  %277 = load i32, i32* %addpassflag, align 4, !dbg !14736
  %call399 = call i32 @shade_tra_samples(%struct.ShadeSample* %ssamp, %struct.StrandShadeCache* %273, i32 %274, i32 %275, %struct.ZTranspRow* %arrayidx398, i32 %277), !dbg !14737
  %tobool400 = icmp ne i32 %call399, 0, !dbg !14737
  br i1 %tobool400, label %if.then401, label %if.end416, !dbg !14738

if.then401:                                       ; preds = %while.body396
  %arraydecay402 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14739
  %278 = load i32, i32* %addpassflag, align 4, !dbg !14741
  %call403 = call i32 @addtosamp_shr(%struct.ShadeResult* %arraydecay402, %struct.ShadeSample* %ssamp, i32 %278), !dbg !14742
  %conv404 = trunc i32 %call403 to i16, !dbg !14742
  store i16 %conv404, i16* %filled, align 2, !dbg !14743
  %279 = load float*, float** %pass.addr, align 8, !dbg !14744
  %shr = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 3, !dbg !14745
  %arrayidx405 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr, i64 0, i64 0, !dbg !14746
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx405, i32 0, i32 0, !dbg !14747
  %arraydecay406 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !14746
  call void @addAlphaUnderFloat(float* %279, float* %arraydecay406), !dbg !14748
  %280 = load i16, i16* %filled, align 2, !dbg !14749
  %conv407 = zext i16 %280 to i32, !dbg !14749
  %cmp408 = icmp eq i32 %conv407, 0, !dbg !14751
  br i1 %cmp408, label %if.then410, label %if.end415, !dbg !14752

if.then410:                                       ; preds = %if.then401
  %281 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14753
  %tobool411 = icmp ne %struct.StrandShadeCache* %281, null, !dbg !14753
  br i1 %tobool411, label %if.then412, label %if.end414, !dbg !14756

if.then412:                                       ; preds = %if.then410
  %282 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14757
  %arraydecay413 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14758
  %283 = load i32, i32* %totface, align 4, !dbg !14759
  call void @unref_strand_samples(%struct.StrandShadeCache* %282, %struct.ZTranspRow* %arraydecay413, i32 %283), !dbg !14760
  br label %if.end414, !dbg !14760

if.end414:                                        ; preds = %if.then412, %if.then410
  br label %while.end417, !dbg !14761

if.end415:                                        ; preds = %if.then401
  br label %if.end416, !dbg !14762

if.end416:                                        ; preds = %if.end415, %while.body396
  br label %while.cond393, !dbg !14724, !llvm.loop !14763

while.end417:                                     ; preds = %if.end414, %while.cond393
  %arraydecay418 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14765
  %combined419 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arraydecay418, i32 0, i32 0, !dbg !14765
  %arrayidx420 = getelementptr inbounds [4 x float], [4 x float]* %combined419, i64 0, i64 3, !dbg !14766
  %284 = load float, float* %arrayidx420, align 4, !dbg !14766
  store float %284, float* %alpha, align 4, !dbg !14767
  %285 = load float, float* %alpha, align 4, !dbg !14768
  %cmp421 = fcmp une float %285, 0.000000e+00, !dbg !14770
  br i1 %cmp421, label %if.then423, label %if.end432, !dbg !14771

if.then423:                                       ; preds = %while.end417
  %286 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14772
  %287 = load i32, i32* %od, align 4, !dbg !14774
  %arraydecay424 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14775
  %288 = load float, float* %alpha, align 4, !dbg !14776
  call void @add_transp_passes(%struct.RenderLayer* %286, i32 %287, %struct.ShadeResult* %arraydecay424, float %288), !dbg !14777
  %289 = load i32, i32* %addpassflag, align 4, !dbg !14778
  %and425 = and i32 %289, 512, !dbg !14780
  %tobool426 = icmp ne i32 %and425, 0, !dbg !14780
  br i1 %tobool426, label %if.then427, label %if.end431, !dbg !14781

if.then427:                                       ; preds = %if.then423
  %290 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14782
  %291 = load i32, i32* %od, align 4, !dbg !14783
  %arraydecay428 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14784
  %winspeed429 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arraydecay428, i32 0, i32 16, !dbg !14784
  %arraydecay430 = getelementptr inbounds [4 x float], [4 x float]* %winspeed429, i64 0, i64 0, !dbg !14785
  %292 = load float, float* %alpha, align 4, !dbg !14786
  %293 = load i64*, i64** %rdrect, align 8, !dbg !14787
  call void @add_transp_speed(%struct.RenderLayer* %290, i32 %291, float* %arraydecay430, float %292, i64* %293), !dbg !14788
  br label %if.end431, !dbg !14788

if.end431:                                        ; preds = %if.then427, %if.then423
  br label %if.end432, !dbg !14789

if.end432:                                        ; preds = %if.end431, %while.end417
  br label %if.end544, !dbg !14790

if.else433:                                       ; preds = %for.end388
  call void @llvm.dbg.declare(metadata i16** %sp, metadata !14791, metadata !DIExpression()), !dbg !14793
  %294 = load i16*, i16** %ztramask, align 8, !dbg !14794
  %295 = load i32, i32* %od, align 4, !dbg !14795
  %idx.ext434 = sext i32 %295 to i64, !dbg !14796
  %add.ptr435 = getelementptr inbounds i16, i16* %294, i64 %idx.ext434, !dbg !14796
  store i16* %add.ptr435, i16** %sp, align 8, !dbg !14793
  br label %while.cond436, !dbg !14797

while.cond436:                                    ; preds = %if.end466, %if.else433
  %296 = load i32, i32* %totface, align 4, !dbg !14798
  %cmp437 = icmp sgt i32 %296, 0, !dbg !14799
  br i1 %cmp437, label %while.body439, label %while.end467, !dbg !14797

while.body439:                                    ; preds = %while.cond436
  %297 = load i32, i32* %totface, align 4, !dbg !14800
  %dec440 = add nsw i32 %297, -1, !dbg !14800
  store i32 %dec440, i32* %totface, align 4, !dbg !14800
  %298 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14802
  %299 = load i32, i32* %x, align 4, !dbg !14804
  %300 = load i32, i32* %y, align 4, !dbg !14805
  %301 = load i32, i32* %totface, align 4, !dbg !14806
  %idxprom441 = sext i32 %301 to i64, !dbg !14807
  %arrayidx442 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom441, !dbg !14807
  %302 = load i32, i32* %addpassflag, align 4, !dbg !14808
  %call443 = call i32 @shade_tra_samples(%struct.ShadeSample* %ssamp, %struct.StrandShadeCache* %298, i32 %299, i32 %300, %struct.ZTranspRow* %arrayidx442, i32 %302), !dbg !14809
  %tobool444 = icmp ne i32 %call443, 0, !dbg !14809
  br i1 %tobool444, label %if.then445, label %if.end466, !dbg !14810

if.then445:                                       ; preds = %while.body439
  %arraydecay446 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14811
  %303 = load i32, i32* %addpassflag, align 4, !dbg !14813
  %call447 = call i32 @addtosamp_shr(%struct.ShadeResult* %arraydecay446, %struct.ShadeSample* %ssamp, i32 %303), !dbg !14814
  %conv448 = trunc i32 %call447 to i16, !dbg !14814
  store i16 %conv448, i16* %filled, align 2, !dbg !14815
  %304 = load i16*, i16** %ztramask, align 8, !dbg !14816
  %tobool449 = icmp ne i16* %304, null, !dbg !14816
  br i1 %tobool449, label %if.then450, label %if.end456, !dbg !14818

if.then450:                                       ; preds = %if.then445
  %305 = load i32, i32* %totface, align 4, !dbg !14819
  %idxprom451 = sext i32 %305 to i64, !dbg !14820
  %arrayidx452 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 %idxprom451, !dbg !14820
  %mask453 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx452, i32 0, i32 3, !dbg !14821
  %306 = load i32, i32* %mask453, align 4, !dbg !14821
  %307 = load i16*, i16** %sp, align 8, !dbg !14822
  %308 = load i16, i16* %307, align 2, !dbg !14823
  %conv454 = sext i16 %308 to i32, !dbg !14823
  %or = or i32 %conv454, %306, !dbg !14823
  %conv455 = trunc i32 %or to i16, !dbg !14823
  store i16 %conv455, i16* %307, align 2, !dbg !14823
  br label %if.end456, !dbg !14824

if.end456:                                        ; preds = %if.then450, %if.then445
  %309 = load i16, i16* %filled, align 2, !dbg !14825
  %conv457 = zext i16 %309 to i32, !dbg !14825
  %cmp458 = icmp eq i32 %conv457, 0, !dbg !14827
  br i1 %cmp458, label %if.then460, label %if.end465, !dbg !14828

if.then460:                                       ; preds = %if.end456
  %310 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14829
  %tobool461 = icmp ne %struct.StrandShadeCache* %310, null, !dbg !14829
  br i1 %tobool461, label %if.then462, label %if.end464, !dbg !14832

if.then462:                                       ; preds = %if.then460
  %311 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !14833
  %arraydecay463 = getelementptr inbounds [2000 x %struct.ZTranspRow], [2000 x %struct.ZTranspRow]* %zrow, i64 0, i64 0, !dbg !14834
  %312 = load i32, i32* %totface, align 4, !dbg !14835
  call void @unref_strand_samples(%struct.StrandShadeCache* %311, %struct.ZTranspRow* %arraydecay463, i32 %312), !dbg !14836
  br label %if.end464, !dbg !14836

if.end464:                                        ; preds = %if.then462, %if.then460
  br label %while.end467, !dbg !14837

if.end465:                                        ; preds = %if.end456
  br label %if.end466, !dbg !14838

if.end466:                                        ; preds = %if.end465, %while.body439
  br label %while.cond436, !dbg !14797, !llvm.loop !14839

while.end467:                                     ; preds = %if.end464, %while.cond436
  %313 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14841
  %fullresult468 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %313, i32 0, i32 3, !dbg !14843
  %first469 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fullresult468, i32 0, i32 0, !dbg !14844
  %314 = load i8*, i8** %first469, align 8, !dbg !14844
  %tobool470 = icmp ne i8* %314, null, !dbg !14841
  br i1 %tobool470, label %if.then471, label %if.else510, !dbg !14845

if.then471:                                       ; preds = %while.end467
  store i32 0, i32* %a, align 4, !dbg !14846
  br label %for.cond472, !dbg !14849

for.cond472:                                      ; preds = %for.inc507, %if.then471
  %315 = load i32, i32* %a, align 4, !dbg !14850
  %316 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14852
  %conv473 = sext i16 %316 to i32, !dbg !14853
  %cmp474 = icmp slt i32 %315, %conv473, !dbg !14854
  br i1 %cmp474, label %for.body476, label %for.end509, !dbg !14855

for.body476:                                      ; preds = %for.cond472
  %317 = load i32, i32* %a, align 4, !dbg !14856
  %idxprom477 = sext i32 %317 to i64, !dbg !14858
  %arrayidx478 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom477, !dbg !14858
  %combined479 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx478, i32 0, i32 0, !dbg !14859
  %arrayidx480 = getelementptr inbounds [4 x float], [4 x float]* %combined479, i64 0, i64 3, !dbg !14858
  %318 = load float, float* %arrayidx480, align 4, !dbg !14858
  store float %318, float* %alpha, align 4, !dbg !14860
  %319 = load float, float* %alpha, align 4, !dbg !14861
  %cmp481 = fcmp une float %319, 0.000000e+00, !dbg !14863
  br i1 %cmp481, label %if.then483, label %if.end506, !dbg !14864

if.then483:                                       ; preds = %for.body476
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl484, metadata !14865, metadata !DIExpression()), !dbg !14867
  %rlpp485 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 1, !dbg !14868
  %320 = load i32, i32* %a, align 4, !dbg !14869
  %idxprom486 = sext i32 %320 to i64, !dbg !14870
  %arrayidx487 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp485, i64 0, i64 %idxprom486, !dbg !14870
  %321 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx487, align 8, !dbg !14870
  store %struct.RenderLayer* %321, %struct.RenderLayer** %rl484, align 8, !dbg !14867
  %322 = load %struct.RenderLayer*, %struct.RenderLayer** %rl484, align 8, !dbg !14871
  %rectf488 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %322, i32 0, i32 11, !dbg !14872
  %323 = load float*, float** %rectf488, align 8, !dbg !14872
  %324 = load i32, i32* %od, align 4, !dbg !14873
  %mul489 = mul nsw i32 4, %324, !dbg !14874
  %idx.ext490 = sext i32 %mul489 to i64, !dbg !14875
  %add.ptr491 = getelementptr inbounds float, float* %323, i64 %idx.ext490, !dbg !14875
  %325 = load i32, i32* %a, align 4, !dbg !14876
  %idxprom492 = sext i32 %325 to i64, !dbg !14877
  %arrayidx493 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom492, !dbg !14877
  %combined494 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx493, i32 0, i32 0, !dbg !14878
  %arraydecay495 = getelementptr inbounds [4 x float], [4 x float]* %combined494, i64 0, i64 0, !dbg !14877
  call void @addAlphaOverFloat(float* %add.ptr491, float* %arraydecay495), !dbg !14879
  %326 = load %struct.RenderLayer*, %struct.RenderLayer** %rl484, align 8, !dbg !14880
  %327 = load i32, i32* %od, align 4, !dbg !14881
  %328 = load i32, i32* %a, align 4, !dbg !14882
  %idxprom496 = sext i32 %328 to i64, !dbg !14883
  %arrayidx497 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom496, !dbg !14883
  %329 = load float, float* %alpha, align 4, !dbg !14884
  call void @add_transp_passes(%struct.RenderLayer* %326, i32 %327, %struct.ShadeResult* %arrayidx497, float %329), !dbg !14885
  %330 = load i32, i32* %addpassflag, align 4, !dbg !14886
  %and498 = and i32 %330, 512, !dbg !14888
  %tobool499 = icmp ne i32 %and498, 0, !dbg !14888
  br i1 %tobool499, label %if.then500, label %if.end505, !dbg !14889

if.then500:                                       ; preds = %if.then483
  %331 = load %struct.RenderLayer*, %struct.RenderLayer** %rl484, align 8, !dbg !14890
  %332 = load i32, i32* %od, align 4, !dbg !14891
  %333 = load i32, i32* %a, align 4, !dbg !14892
  %idxprom501 = sext i32 %333 to i64, !dbg !14893
  %arrayidx502 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom501, !dbg !14893
  %winspeed503 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx502, i32 0, i32 16, !dbg !14894
  %arraydecay504 = getelementptr inbounds [4 x float], [4 x float]* %winspeed503, i64 0, i64 0, !dbg !14893
  %334 = load float, float* %alpha, align 4, !dbg !14895
  %335 = load i64*, i64** %rdrect, align 8, !dbg !14896
  call void @add_transp_speed(%struct.RenderLayer* %331, i32 %332, float* %arraydecay504, float %334, i64* %335), !dbg !14897
  br label %if.end505, !dbg !14897

if.end505:                                        ; preds = %if.then500, %if.then483
  br label %if.end506, !dbg !14898

if.end506:                                        ; preds = %if.end505, %for.body476
  br label %for.inc507, !dbg !14899

for.inc507:                                       ; preds = %if.end506
  %336 = load i32, i32* %a, align 4, !dbg !14900
  %inc508 = add nsw i32 %336, 1, !dbg !14900
  store i32 %inc508, i32* %a, align 4, !dbg !14900
  br label %for.cond472, !dbg !14901, !llvm.loop !14902

for.end509:                                       ; preds = %for.cond472
  br label %if.end543, !dbg !14904

if.else510:                                       ; preds = %while.end467
  store float 0.000000e+00, float* %alpha, align 4, !dbg !14905
  store i32 0, i32* %a, align 4, !dbg !14907
  br label %for.cond511, !dbg !14909

for.cond511:                                      ; preds = %for.inc527, %if.else510
  %337 = load i32, i32* %a, align 4, !dbg !14910
  %338 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !14912
  %conv512 = sext i16 %338 to i32, !dbg !14913
  %cmp513 = icmp slt i32 %337, %conv512, !dbg !14914
  br i1 %cmp513, label %for.body515, label %for.end529, !dbg !14915

for.body515:                                      ; preds = %for.cond511
  %339 = load i32, i32* %a, align 4, !dbg !14916
  %shl516 = shl i32 1, %339, !dbg !14918
  %340 = load i32, i32* %a, align 4, !dbg !14919
  %idxprom517 = sext i32 %340 to i64, !dbg !14920
  %arrayidx518 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom517, !dbg !14920
  %combined519 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx518, i32 0, i32 0, !dbg !14921
  %arraydecay520 = getelementptr inbounds [4 x float], [4 x float]* %combined519, i64 0, i64 0, !dbg !14920
  %341 = load float*, float** %pass.addr, align 8, !dbg !14922
  %342 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14923
  %rectx521 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %342, i32 0, i32 2, !dbg !14924
  %343 = load i32, i32* %rectx521, align 8, !dbg !14924
  call void @add_filt_fmask(i32 %shl516, float* %arraydecay520, float* %341, i32 %343), !dbg !14925
  %344 = load i32, i32* %a, align 4, !dbg !14926
  %idxprom522 = sext i32 %344 to i64, !dbg !14927
  %arrayidx523 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 %idxprom522, !dbg !14927
  %combined524 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx523, i32 0, i32 0, !dbg !14928
  %arrayidx525 = getelementptr inbounds [4 x float], [4 x float]* %combined524, i64 0, i64 3, !dbg !14927
  %345 = load float, float* %arrayidx525, align 4, !dbg !14927
  %346 = load float, float* %alpha, align 4, !dbg !14929
  %add526 = fadd float %346, %345, !dbg !14929
  store float %add526, float* %alpha, align 4, !dbg !14929
  br label %for.inc527, !dbg !14930

for.inc527:                                       ; preds = %for.body515
  %347 = load i32, i32* %a, align 4, !dbg !14931
  %inc528 = add nsw i32 %347, 1, !dbg !14931
  store i32 %inc528, i32* %a, align 4, !dbg !14931
  br label %for.cond511, !dbg !14932, !llvm.loop !14933

for.end529:                                       ; preds = %for.cond511
  %348 = load i32, i32* %addpassflag, align 4, !dbg !14935
  %tobool530 = icmp ne i32 %348, 0, !dbg !14935
  br i1 %tobool530, label %if.then531, label %if.end542, !dbg !14937

if.then531:                                       ; preds = %for.end529
  %349 = load float, float* %sampalpha, align 4, !dbg !14938
  %350 = load float, float* %alpha, align 4, !dbg !14940
  %mul532 = fmul float %350, %349, !dbg !14940
  store float %mul532, float* %alpha, align 4, !dbg !14940
  %351 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14941
  %arraydecay533 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14942
  call void @merge_transp_passes(%struct.RenderLayer* %351, %struct.ShadeResult* %arraydecay533), !dbg !14943
  %352 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14944
  %353 = load i32, i32* %od, align 4, !dbg !14945
  %arraydecay534 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14946
  %354 = load float, float* %alpha, align 4, !dbg !14947
  call void @add_transp_passes(%struct.RenderLayer* %352, i32 %353, %struct.ShadeResult* %arraydecay534, float %354), !dbg !14948
  %355 = load i32, i32* %addpassflag, align 4, !dbg !14949
  %and535 = and i32 %355, 512, !dbg !14951
  %tobool536 = icmp ne i32 %and535, 0, !dbg !14951
  br i1 %tobool536, label %if.then537, label %if.end541, !dbg !14952

if.then537:                                       ; preds = %if.then531
  %356 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !14953
  %357 = load i32, i32* %od, align 4, !dbg !14954
  %arrayidx538 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %samp_shr, i64 0, i64 0, !dbg !14955
  %winspeed539 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %arrayidx538, i32 0, i32 16, !dbg !14956
  %arraydecay540 = getelementptr inbounds [4 x float], [4 x float]* %winspeed539, i64 0, i64 0, !dbg !14955
  %358 = load float, float* %alpha, align 4, !dbg !14957
  %359 = load i64*, i64** %rdrect, align 8, !dbg !14958
  call void @add_transp_speed(%struct.RenderLayer* %356, i32 %357, float* %arraydecay540, float %358, i64* %359), !dbg !14959
  br label %if.end541, !dbg !14959

if.end541:                                        ; preds = %if.then537, %if.then531
  br label %if.end542, !dbg !14960

if.end542:                                        ; preds = %if.end541, %for.end529
  br label %if.end543

if.end543:                                        ; preds = %if.end542, %for.end509
  br label %if.end544

if.end544:                                        ; preds = %if.end543, %if.end432
  br label %if.end545

if.end545:                                        ; preds = %if.end544, %if.end119
  br label %for.inc546, !dbg !14961

for.inc546:                                       ; preds = %if.end545
  %360 = load i32, i32* %x, align 4, !dbg !14962
  %inc547 = add nsw i32 %360, 1, !dbg !14962
  store i32 %inc547, i32* %x, align 4, !dbg !14962
  %361 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !14963
  %incdec.ptr = getelementptr inbounds %struct.APixstr, %struct.APixstr* %361, i32 1, !dbg !14963
  store %struct.APixstr* %incdec.ptr, %struct.APixstr** %ap, align 8, !dbg !14963
  %362 = load %struct.APixstrand*, %struct.APixstrand** %apstrand, align 8, !dbg !14964
  %incdec.ptr548 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %362, i32 1, !dbg !14964
  store %struct.APixstrand* %incdec.ptr548, %struct.APixstrand** %apstrand, align 8, !dbg !14964
  %363 = load float*, float** %pass.addr, align 8, !dbg !14965
  %add.ptr549 = getelementptr inbounds float, float* %363, i64 4, !dbg !14965
  store float* %add.ptr549, float** %pass.addr, align 8, !dbg !14965
  %364 = load i32, i32* %od, align 4, !dbg !14966
  %inc550 = add nsw i32 %364, 1, !dbg !14966
  store i32 %inc550, i32* %od, align 4, !dbg !14966
  br label %for.cond101, !dbg !14967, !llvm.loop !14968

for.end551:                                       ; preds = %for.cond101
  %365 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14970
  %rectx552 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %365, i32 0, i32 14, !dbg !14971
  %366 = load i32, i32* %rectx552, align 8, !dbg !14971
  %367 = load %struct.APixstr*, %struct.APixstr** %aprect, align 8, !dbg !14972
  %idx.ext553 = sext i32 %366 to i64, !dbg !14972
  %add.ptr554 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %367, i64 %idx.ext553, !dbg !14972
  store %struct.APixstr* %add.ptr554, %struct.APixstr** %aprect, align 8, !dbg !14972
  %368 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14973
  %rectx555 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %368, i32 0, i32 14, !dbg !14974
  %369 = load i32, i32* %rectx555, align 8, !dbg !14974
  %370 = load %struct.APixstrand*, %struct.APixstrand** %aprectstrand, align 8, !dbg !14975
  %idx.ext556 = sext i32 %369 to i64, !dbg !14975
  %add.ptr557 = getelementptr inbounds %struct.APixstrand, %struct.APixstrand* %370, i64 %idx.ext556, !dbg !14975
  store %struct.APixstrand* %add.ptr557, %struct.APixstrand** %aprectstrand, align 8, !dbg !14975
  %371 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14976
  %rectx558 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %371, i32 0, i32 14, !dbg !14977
  %372 = load i32, i32* %rectx558, align 8, !dbg !14977
  %mul559 = mul nsw i32 4, %372, !dbg !14978
  %373 = load float*, float** %passrect, align 8, !dbg !14979
  %idx.ext560 = sext i32 %mul559 to i64, !dbg !14979
  %add.ptr561 = getelementptr inbounds float, float* %373, i64 %idx.ext560, !dbg !14979
  store float* %add.ptr561, float** %passrect, align 8, !dbg !14979
  %374 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !14980
  %rectx562 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %374, i32 0, i32 14, !dbg !14981
  %375 = load i32, i32* %rectx562, align 8, !dbg !14981
  %376 = load i32, i32* %offs, align 4, !dbg !14982
  %add563 = add nsw i32 %376, %375, !dbg !14982
  store i32 %add563, i32* %offs, align 4, !dbg !14982
  br label %for.inc564, !dbg !14983

for.inc564:                                       ; preds = %for.end551
  %377 = load i32, i32* %y, align 4, !dbg !14984
  %inc565 = add nsw i32 %377, 1, !dbg !14984
  store i32 %inc565, i32* %y, align 4, !dbg !14984
  %378 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14985
  %renrect566 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %378, i32 0, i32 13, !dbg !14986
  %ymax567 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect566, i32 0, i32 3, !dbg !14987
  %379 = load volatile i32, i32* %ymax567, align 4, !dbg !14988
  %inc568 = add nsw i32 %379, 1, !dbg !14988
  store volatile i32 %inc568, i32* %ymax567, align 4, !dbg !14988
  br label %for.cond, !dbg !14989, !llvm.loop !14990

for.end569:                                       ; preds = %if.then97, %for.cond
  %380 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !14992
  %renlay570 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %380, i32 0, i32 14, !dbg !14993
  store %struct.RenderLayer* null, %struct.RenderLayer** %renlay570, align 8, !dbg !14994
  %381 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14995
  %382 = load %struct.APixstr*, %struct.APixstr** %APixbuf, align 8, !dbg !14996
  %383 = bitcast %struct.APixstr* %382 to i8*, !dbg !14996
  call void %381(i8* %383), !dbg !14995
  %384 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !14997
  %tobool571 = icmp ne %struct.APixstrand* %384, null, !dbg !14997
  br i1 %tobool571, label %if.then572, label %if.end573, !dbg !14999

if.then572:                                       ; preds = %for.end569
  %385 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15000
  %386 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand, align 8, !dbg !15001
  %387 = bitcast %struct.APixstrand* %386 to i8*, !dbg !15001
  call void %385(i8* %387), !dbg !15000
  br label %if.end573, !dbg !15000

if.end573:                                        ; preds = %if.then572, %for.end569
  %388 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !15002
  %tobool574 = icmp ne %struct.StrandShadeCache* %388, null, !dbg !15002
  br i1 %tobool574, label %if.then575, label %if.end576, !dbg !15004

if.then575:                                       ; preds = %if.end573
  %389 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache, align 8, !dbg !15005
  call void @strand_shade_cache_free(%struct.StrandShadeCache* %389), !dbg !15006
  br label %if.end576, !dbg !15006

if.end576:                                        ; preds = %if.then575, %if.end573
  call void @freepsA(%struct.ListBase* %apsmbase), !dbg !15007
  %390 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !15008
  %and577 = and i32 %390, 2, !dbg !15010
  %tobool578 = icmp ne i32 %and577, 0, !dbg !15010
  br i1 %tobool578, label %if.then579, label %if.end580, !dbg !15011

if.then579:                                       ; preds = %if.end576
  %391 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !15012
  call void @ISB_free(%struct.RenderPart* %391), !dbg !15013
  br label %if.end580, !dbg !15013

if.end580:                                        ; preds = %if.then579, %if.end576
  %392 = load i16*, i16** %ztramask, align 8, !dbg !15014
  store i16* %392, i16** %retval, align 8, !dbg !15015
  br label %return, !dbg !15015

return:                                           ; preds = %if.end580, %if.end36, %if.then5, %if.then
  %393 = load i16*, i16** %retval, align 8, !dbg !15016
  ret i16* %393, !dbg !15016
}

declare dso_local %struct.StrandShadeCache* @strand_shade_cache_create() #3

declare dso_local void @shade_sample_initialize(%struct.ShadeSample*, %struct.RenderPart*, %struct.RenderLayer*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @zbuffer_abuf_render(%struct.RenderPart* %pa, %struct.APixstr* %APixbuf, %struct.APixstrand* %APixbufstrand, %struct.ListBase* %apsmbase, %struct.RenderLayer* %rl, %struct.StrandShadeCache* %sscache) #0 !dbg !15017 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %APixbuf.addr = alloca %struct.APixstr*, align 8
  %APixbufstrand.addr = alloca %struct.APixstrand*, align 8
  %apsmbase.addr = alloca %struct.ListBase*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %sscache.addr = alloca %struct.StrandShadeCache*, align 8
  %winmat = alloca [4 x [4 x float]], align 16
  %jit = alloca [2 x float]*, align 8
  %samples = alloca i32, align 4
  %negzmask = alloca i32, align 4
  %doztra = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !15020, metadata !DIExpression()), !dbg !15021
  store %struct.APixstr* %APixbuf, %struct.APixstr** %APixbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstr** %APixbuf.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store %struct.APixstrand* %APixbufstrand, %struct.APixstrand** %APixbufstrand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.APixstrand** %APixbufstrand.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  store %struct.ListBase* %apsmbase, %struct.ListBase** %apsmbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %apsmbase.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15028, metadata !DIExpression()), !dbg !15029
  store %struct.StrandShadeCache* %sscache, %struct.StrandShadeCache** %sscache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandShadeCache** %sscache.addr, metadata !15030, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !15032, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.declare(metadata [2 x float]** %jit, metadata !15034, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !15036, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.declare(metadata i32* %negzmask, metadata !15038, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.declare(metadata i32* %doztra, metadata !15040, metadata !DIExpression()), !dbg !15041
  store i32 0, i32* %doztra, align 4, !dbg !15041
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !15042
  %conv = sext i16 %0 to i32, !dbg !15043
  %tobool = icmp ne i32 %conv, 0, !dbg !15043
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15043

cond.true:                                        ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !15044
  %conv1 = sext i16 %1 to i32, !dbg !15045
  br label %cond.end, !dbg !15043

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15043

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv1, %cond.true ], [ 1, %cond.false ], !dbg !15043
  store i32 %cond, i32* %samples, align 4, !dbg !15046
  %2 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15047
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %2, i32 0, i32 6, !dbg !15048
  %3 = load i32, i32* %layflag, align 8, !dbg !15048
  %and = and i32 %3, 262144, !dbg !15049
  %tobool2 = icmp ne i32 %and, 0, !dbg !15049
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !15050

land.rhs:                                         ; preds = %cond.end
  %4 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15051
  %layflag3 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %4, i32 0, i32 6, !dbg !15052
  %5 = load i32, i32* %layflag3, align 8, !dbg !15052
  %and4 = and i32 %5, 524288, !dbg !15053
  %tobool5 = icmp ne i32 %and4, 0, !dbg !15050
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %6 = phi i1 [ false, %cond.end ], [ %tobool5, %land.rhs ], !dbg !15054
  %land.ext = zext i1 %6 to i32, !dbg !15050
  store i32 %land.ext, i32* %negzmask, align 4, !dbg !15055
  %7 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !15056
  %tobool6 = icmp ne i16 %7, 0, !dbg !15058
  br i1 %tobool6, label %if.then, label %if.else, !dbg !15059

if.then:                                          ; preds = %land.end
  store [2 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39, i64 0), [2 x float]** %jit, align 8, !dbg !15060
  br label %if.end11, !dbg !15061

if.else:                                          ; preds = %land.end
  %8 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !15062
  %tobool7 = icmp ne i16 %8, 0, !dbg !15064
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !15065

if.then8:                                         ; preds = %if.else
  %9 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !15066
  %conv9 = sext i16 %9 to i32, !dbg !15067
  %sub = sub nsw i32 %conv9, 1, !dbg !15068
  %idxprom = sext i32 %sub to i64, !dbg !15069
  %arrayidx = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 40), i64 0, i64 %idxprom, !dbg !15069
  store [2 x float]* %arrayidx, [2 x float]** %jit, align 8, !dbg !15070
  br label %if.end, !dbg !15071

if.else10:                                        ; preds = %if.else
  store [2 x float]* null, [2 x float]** %jit, align 8, !dbg !15072
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !15073
  call void @zbuf_make_winmat(%struct.Render* @R, [4 x float]* %arraydecay), !dbg !15074
  %10 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15075
  %layflag12 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %10, i32 0, i32 6, !dbg !15077
  %11 = load i32, i32* %layflag12, align 8, !dbg !15077
  %and13 = and i32 %11, 2, !dbg !15078
  %tobool14 = icmp ne i32 %and13, 0, !dbg !15078
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !15079

if.then15:                                        ; preds = %if.end11
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !15080
  %13 = load %struct.APixstr*, %struct.APixstr** %APixbuf.addr, align 8, !dbg !15081
  %14 = load %struct.ListBase*, %struct.ListBase** %apsmbase.addr, align 8, !dbg !15082
  %15 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15083
  %lay = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %15, i32 0, i32 3, !dbg !15084
  %16 = load i32, i32* %lay, align 4, !dbg !15084
  %17 = load i32, i32* %negzmask, align 4, !dbg !15085
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !15086
  %18 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !15087
  %19 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !15088
  %20 = load i32, i32* %samples, align 4, !dbg !15089
  %21 = load [2 x float]*, [2 x float]** %jit, align 8, !dbg !15090
  %22 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 19), align 4, !dbg !15091
  %call = call i32 @zbuffer_abuf(%struct.Render* @R, %struct.RenderPart* %12, %struct.APixstr* %13, %struct.ListBase* %14, i32 %16, i32 %17, [4 x float]* %arraydecay16, i32 %18, i32 %19, i32 %20, [2 x float]* %21, float %22, i32 0), !dbg !15092
  %23 = load i32, i32* %doztra, align 4, !dbg !15093
  %add = add nsw i32 %23, %call, !dbg !15093
  store i32 %add, i32* %doztra, align 4, !dbg !15093
  br label %if.end17, !dbg !15094

if.end17:                                         ; preds = %if.then15, %if.end11
  %24 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15095
  %layflag18 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %24, i32 0, i32 6, !dbg !15097
  %25 = load i32, i32* %layflag18, align 8, !dbg !15097
  %and19 = and i32 %25, 32, !dbg !15098
  %tobool20 = icmp ne i32 %and19, 0, !dbg !15098
  br i1 %tobool20, label %land.lhs.true, label %if.end27, !dbg !15099

land.lhs.true:                                    ; preds = %if.end17
  %26 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand.addr, align 8, !dbg !15100
  %tobool21 = icmp ne %struct.APixstrand* %26, null, !dbg !15100
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !15101

if.then22:                                        ; preds = %land.lhs.true
  %27 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !15102
  %28 = load %struct.APixstrand*, %struct.APixstrand** %APixbufstrand.addr, align 8, !dbg !15103
  %29 = load %struct.ListBase*, %struct.ListBase** %apsmbase.addr, align 8, !dbg !15104
  %30 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15105
  %lay23 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %30, i32 0, i32 3, !dbg !15106
  %31 = load i32, i32* %lay23, align 4, !dbg !15106
  %32 = load i32, i32* %negzmask, align 4, !dbg !15107
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !15108
  %33 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !15109
  %34 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !15110
  %35 = load i32, i32* %samples, align 4, !dbg !15111
  %36 = load [2 x float]*, [2 x float]** %jit, align 8, !dbg !15112
  %37 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 19), align 4, !dbg !15113
  %38 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %sscache.addr, align 8, !dbg !15114
  %call25 = call i32 @zbuffer_strands_abuf(%struct.Render* @R, %struct.RenderPart* %27, %struct.APixstrand* %28, %struct.ListBase* %29, i32 %31, i32 %32, [4 x float]* %arraydecay24, i32 %33, i32 %34, i32 %35, [2 x float]* %36, float %37, i32 0, %struct.StrandShadeCache* %38), !dbg !15115
  %39 = load i32, i32* %doztra, align 4, !dbg !15116
  %add26 = add nsw i32 %39, %call25, !dbg !15116
  store i32 %add26, i32* %doztra, align 4, !dbg !15116
  br label %if.end27, !dbg !15117

if.end27:                                         ; preds = %if.then22, %land.lhs.true, %if.end17
  %40 = load i32, i32* %doztra, align 4, !dbg !15118
  ret i32 %40, !dbg !15119
}

declare dso_local void @strand_shade_cache_free(%struct.StrandShadeCache*) #3

declare dso_local i32 @get_sample_layers(%struct.RenderPart*, %struct.RenderLayer*, %struct.RenderLayer**) #3

declare dso_local void @ISB_create(%struct.RenderPart*, %struct.APixstr*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @reset_sky_speedvectors(%struct.RenderPart* %pa, %struct.RenderLayer* %rl, float* %rectf) #0 !dbg !15120 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rectf.addr = alloca float*, align 8
  %fp = alloca float*, align 8
  %col = alloca float*, align 8
  %a = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !15123, metadata !DIExpression()), !dbg !15124
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15125, metadata !DIExpression()), !dbg !15126
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !15127, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.declare(metadata float** %fp, metadata !15129, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.declare(metadata float** %col, metadata !15131, metadata !DIExpression()), !dbg !15132
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15133, metadata !DIExpression()), !dbg !15134
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15135
  %call = call float* @RE_RenderLayerGetPass(%struct.RenderLayer* %0, i32 512), !dbg !15136
  store float* %call, float** %fp, align 8, !dbg !15137
  %1 = load float*, float** %fp, align 8, !dbg !15138
  %cmp = icmp eq float* %1, null, !dbg !15140
  br i1 %cmp, label %if.then, label %if.end, !dbg !15141

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !15142

if.end:                                           ; preds = %entry
  %2 = load float*, float** %rectf.addr, align 8, !dbg !15143
  %add.ptr = getelementptr inbounds float, float* %2, i64 3, !dbg !15144
  store float* %add.ptr, float** %col, align 8, !dbg !15145
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !15146
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 14, !dbg !15148
  %4 = load i32, i32* %rectx, align 8, !dbg !15148
  %mul = mul nsw i32 4, %4, !dbg !15149
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !15150
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 15, !dbg !15151
  %6 = load i32, i32* %recty, align 4, !dbg !15151
  %mul1 = mul nsw i32 %mul, %6, !dbg !15152
  %sub = sub nsw i32 %mul1, 4, !dbg !15153
  store i32 %sub, i32* %a, align 4, !dbg !15154
  br label %for.cond, !dbg !15155

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !15156
  %cmp2 = icmp sge i32 %7, 0, !dbg !15158
  br i1 %cmp2, label %for.body, label %for.end, !dbg !15159

for.body:                                         ; preds = %for.cond
  %8 = load float*, float** %col, align 8, !dbg !15160
  %9 = load i32, i32* %a, align 4, !dbg !15163
  %idxprom = sext i32 %9 to i64, !dbg !15160
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !15160
  %10 = load float, float* %arrayidx, align 4, !dbg !15160
  %cmp3 = fcmp oeq float %10, 0.000000e+00, !dbg !15164
  br i1 %cmp3, label %if.then4, label %if.end15, !dbg !15165

if.then4:                                         ; preds = %for.body
  %11 = load float*, float** %fp, align 8, !dbg !15166
  %12 = load i32, i32* %a, align 4, !dbg !15168
  %idxprom5 = sext i32 %12 to i64, !dbg !15166
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 %idxprom5, !dbg !15166
  store float 1.000000e+04, float* %arrayidx6, align 4, !dbg !15169
  %13 = load float*, float** %fp, align 8, !dbg !15170
  %14 = load i32, i32* %a, align 4, !dbg !15171
  %add = add nsw i32 %14, 1, !dbg !15172
  %idxprom7 = sext i32 %add to i64, !dbg !15170
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 %idxprom7, !dbg !15170
  store float 1.000000e+04, float* %arrayidx8, align 4, !dbg !15173
  %15 = load float*, float** %fp, align 8, !dbg !15174
  %16 = load i32, i32* %a, align 4, !dbg !15175
  %add9 = add nsw i32 %16, 2, !dbg !15176
  %idxprom10 = sext i32 %add9 to i64, !dbg !15174
  %arrayidx11 = getelementptr inbounds float, float* %15, i64 %idxprom10, !dbg !15174
  store float 1.000000e+04, float* %arrayidx11, align 4, !dbg !15177
  %17 = load float*, float** %fp, align 8, !dbg !15178
  %18 = load i32, i32* %a, align 4, !dbg !15179
  %add12 = add nsw i32 %18, 3, !dbg !15180
  %idxprom13 = sext i32 %add12 to i64, !dbg !15178
  %arrayidx14 = getelementptr inbounds float, float* %17, i64 %idxprom13, !dbg !15178
  store float 1.000000e+04, float* %arrayidx14, align 4, !dbg !15181
  br label %if.end15, !dbg !15182

if.end15:                                         ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !15183

for.inc:                                          ; preds = %if.end15
  %19 = load i32, i32* %a, align 4, !dbg !15184
  %sub16 = sub nsw i32 %19, 4, !dbg !15184
  store i32 %sub16, i32* %a, align 4, !dbg !15184
  br label %for.cond, !dbg !15185, !llvm.loop !15186

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15188
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_transp_speed(%struct.RenderLayer* %rl, i32 %offset, float* %speed, float %alpha, i64* %rdrect) #0 !dbg !15189 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %offset.addr = alloca i32, align 4
  %speed.addr = alloca float*, align 8
  %alpha.addr = alloca float, align 4
  %rdrect.addr = alloca i64*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15192, metadata !DIExpression()), !dbg !15193
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !15194, metadata !DIExpression()), !dbg !15195
  store float* %speed, float** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata float** %speed.addr, metadata !15196, metadata !DIExpression()), !dbg !15197
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !15198, metadata !DIExpression()), !dbg !15199
  store i64* %rdrect, i64** %rdrect.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %rdrect.addr, metadata !15200, metadata !DIExpression()), !dbg !15201
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !15202, metadata !DIExpression()), !dbg !15218
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15219
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 18, !dbg !15221
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !15222
  %1 = load i8*, i8** %first, align 8, !dbg !15222
  %2 = bitcast i8* %1 to %struct.RenderPass*, !dbg !15219
  store %struct.RenderPass* %2, %struct.RenderPass** %rpass, align 8, !dbg !15223
  br label %for.cond, !dbg !15224

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15225
  %tobool = icmp ne %struct.RenderPass* %3, null, !dbg !15227
  br i1 %tobool, label %for.body, label %for.end, !dbg !15227

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15228
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %4, i32 0, i32 2, !dbg !15231
  %5 = load i32, i32* %passtype, align 8, !dbg !15231
  %cmp = icmp eq i32 %5, 512, !dbg !15232
  br i1 %cmp, label %if.then, label %if.end114, !dbg !15233

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %fp, metadata !15234, metadata !DIExpression()), !dbg !15236
  %6 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15237
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %6, i32 0, i32 6, !dbg !15238
  %7 = load float*, float** %rect, align 8, !dbg !15238
  %8 = load i32, i32* %offset.addr, align 4, !dbg !15239
  %mul = mul nsw i32 4, %8, !dbg !15240
  %idx.ext = sext i32 %mul to i64, !dbg !15241
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !15241
  store float* %add.ptr, float** %fp, align 8, !dbg !15236
  %9 = load float*, float** %speed.addr, align 8, !dbg !15242
  %cmp1 = icmp eq float* %9, null, !dbg !15244
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !15245

if.then2:                                         ; preds = %if.then
  %10 = load float*, float** %fp, align 8, !dbg !15246
  %arrayidx = getelementptr inbounds float, float* %10, i64 0, !dbg !15246
  %11 = load float, float* %arrayidx, align 4, !dbg !15246
  %cmp3 = fcmp oeq float %11, 1.000000e+04, !dbg !15249
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15250

if.then4:                                         ; preds = %if.then2
  %12 = load float*, float** %fp, align 8, !dbg !15251
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !15251
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !15252
  br label %if.end, !dbg !15251

if.end:                                           ; preds = %if.then4, %if.then2
  %13 = load float*, float** %fp, align 8, !dbg !15253
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 1, !dbg !15253
  %14 = load float, float* %arrayidx6, align 4, !dbg !15253
  %cmp7 = fcmp oeq float %14, 1.000000e+04, !dbg !15255
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !15256

if.then8:                                         ; preds = %if.end
  %15 = load float*, float** %fp, align 8, !dbg !15257
  %arrayidx9 = getelementptr inbounds float, float* %15, i64 1, !dbg !15257
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !15258
  br label %if.end10, !dbg !15257

if.end10:                                         ; preds = %if.then8, %if.end
  %16 = load float*, float** %fp, align 8, !dbg !15259
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !15259
  %17 = load float, float* %arrayidx11, align 4, !dbg !15259
  %cmp12 = fcmp oeq float %17, 1.000000e+04, !dbg !15261
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !15262

if.then13:                                        ; preds = %if.end10
  %18 = load float*, float** %fp, align 8, !dbg !15263
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 2, !dbg !15263
  store float 0.000000e+00, float* %arrayidx14, align 4, !dbg !15264
  br label %if.end15, !dbg !15263

if.end15:                                         ; preds = %if.then13, %if.end10
  %19 = load float*, float** %fp, align 8, !dbg !15265
  %arrayidx16 = getelementptr inbounds float, float* %19, i64 3, !dbg !15265
  %20 = load float, float* %arrayidx16, align 4, !dbg !15265
  %cmp17 = fcmp oeq float %20, 1.000000e+04, !dbg !15267
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !15268

if.then18:                                        ; preds = %if.end15
  %21 = load float*, float** %fp, align 8, !dbg !15269
  %arrayidx19 = getelementptr inbounds float, float* %21, i64 3, !dbg !15269
  store float 0.000000e+00, float* %arrayidx19, align 4, !dbg !15270
  br label %if.end20, !dbg !15269

if.end20:                                         ; preds = %if.then18, %if.end15
  br label %if.end113, !dbg !15271

if.else:                                          ; preds = %if.then
  %22 = load i64*, i64** %rdrect.addr, align 8, !dbg !15272
  %cmp21 = icmp eq i64* %22, null, !dbg !15274
  br i1 %cmp21, label %if.then26, label %lor.lhs.false, !dbg !15275

lor.lhs.false:                                    ; preds = %if.else
  %23 = load i64*, i64** %rdrect.addr, align 8, !dbg !15276
  %24 = load i32, i32* %offset.addr, align 4, !dbg !15277
  %idxprom = sext i32 %24 to i64, !dbg !15276
  %arrayidx22 = getelementptr inbounds i64, i64* %23, i64 %idxprom, !dbg !15276
  %25 = load i64, i64* %arrayidx22, align 8, !dbg !15276
  %cmp23 = icmp eq i64 %25, 0, !dbg !15278
  br i1 %cmp23, label %if.then26, label %lor.lhs.false24, !dbg !15279

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %26 = load float, float* %alpha.addr, align 4, !dbg !15280
  %cmp25 = fcmp ogt float %26, 0x3FEE666660000000, !dbg !15281
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !15282

if.then26:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %if.else
  %27 = load float*, float** %fp, align 8, !dbg !15283
  %28 = load float*, float** %speed.addr, align 8, !dbg !15285
  call void @copy_v4_v4(float* %27, float* %28), !dbg !15286
  br label %if.end112, !dbg !15287

if.else27:                                        ; preds = %lor.lhs.false24
  %29 = load float*, float** %speed.addr, align 8, !dbg !15288
  %arrayidx28 = getelementptr inbounds float, float* %29, i64 0, !dbg !15288
  %30 = load float, float* %arrayidx28, align 4, !dbg !15288
  %cmp29 = fcmp olt float %30, 0.000000e+00, !dbg !15288
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !15288

cond.true:                                        ; preds = %if.else27
  %31 = load float*, float** %speed.addr, align 8, !dbg !15288
  %arrayidx30 = getelementptr inbounds float, float* %31, i64 0, !dbg !15288
  %32 = load float, float* %arrayidx30, align 4, !dbg !15288
  %fneg = fneg float %32, !dbg !15288
  br label %cond.end, !dbg !15288

cond.false:                                       ; preds = %if.else27
  %33 = load float*, float** %speed.addr, align 8, !dbg !15288
  %arrayidx31 = getelementptr inbounds float, float* %33, i64 0, !dbg !15288
  %34 = load float, float* %arrayidx31, align 4, !dbg !15288
  br label %cond.end, !dbg !15288

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %34, %cond.false ], !dbg !15288
  %35 = load float*, float** %speed.addr, align 8, !dbg !15291
  %arrayidx32 = getelementptr inbounds float, float* %35, i64 1, !dbg !15291
  %36 = load float, float* %arrayidx32, align 4, !dbg !15291
  %cmp33 = fcmp olt float %36, 0.000000e+00, !dbg !15291
  br i1 %cmp33, label %cond.true34, label %cond.false37, !dbg !15291

cond.true34:                                      ; preds = %cond.end
  %37 = load float*, float** %speed.addr, align 8, !dbg !15291
  %arrayidx35 = getelementptr inbounds float, float* %37, i64 1, !dbg !15291
  %38 = load float, float* %arrayidx35, align 4, !dbg !15291
  %fneg36 = fneg float %38, !dbg !15291
  br label %cond.end39, !dbg !15291

cond.false37:                                     ; preds = %cond.end
  %39 = load float*, float** %speed.addr, align 8, !dbg !15291
  %arrayidx38 = getelementptr inbounds float, float* %39, i64 1, !dbg !15291
  %40 = load float, float* %arrayidx38, align 4, !dbg !15291
  br label %cond.end39, !dbg !15291

cond.end39:                                       ; preds = %cond.false37, %cond.true34
  %cond40 = phi float [ %fneg36, %cond.true34 ], [ %40, %cond.false37 ], !dbg !15291
  %add = fadd float %cond, %cond40, !dbg !15292
  %41 = load float*, float** %fp, align 8, !dbg !15293
  %arrayidx41 = getelementptr inbounds float, float* %41, i64 0, !dbg !15293
  %42 = load float, float* %arrayidx41, align 4, !dbg !15293
  %cmp42 = fcmp olt float %42, 0.000000e+00, !dbg !15293
  br i1 %cmp42, label %cond.true43, label %cond.false46, !dbg !15293

cond.true43:                                      ; preds = %cond.end39
  %43 = load float*, float** %fp, align 8, !dbg !15293
  %arrayidx44 = getelementptr inbounds float, float* %43, i64 0, !dbg !15293
  %44 = load float, float* %arrayidx44, align 4, !dbg !15293
  %fneg45 = fneg float %44, !dbg !15293
  br label %cond.end48, !dbg !15293

cond.false46:                                     ; preds = %cond.end39
  %45 = load float*, float** %fp, align 8, !dbg !15293
  %arrayidx47 = getelementptr inbounds float, float* %45, i64 0, !dbg !15293
  %46 = load float, float* %arrayidx47, align 4, !dbg !15293
  br label %cond.end48, !dbg !15293

cond.end48:                                       ; preds = %cond.false46, %cond.true43
  %cond49 = phi float [ %fneg45, %cond.true43 ], [ %46, %cond.false46 ], !dbg !15293
  %47 = load float*, float** %fp, align 8, !dbg !15294
  %arrayidx50 = getelementptr inbounds float, float* %47, i64 1, !dbg !15294
  %48 = load float, float* %arrayidx50, align 4, !dbg !15294
  %cmp51 = fcmp olt float %48, 0.000000e+00, !dbg !15294
  br i1 %cmp51, label %cond.true52, label %cond.false55, !dbg !15294

cond.true52:                                      ; preds = %cond.end48
  %49 = load float*, float** %fp, align 8, !dbg !15294
  %arrayidx53 = getelementptr inbounds float, float* %49, i64 1, !dbg !15294
  %50 = load float, float* %arrayidx53, align 4, !dbg !15294
  %fneg54 = fneg float %50, !dbg !15294
  br label %cond.end57, !dbg !15294

cond.false55:                                     ; preds = %cond.end48
  %51 = load float*, float** %fp, align 8, !dbg !15294
  %arrayidx56 = getelementptr inbounds float, float* %51, i64 1, !dbg !15294
  %52 = load float, float* %arrayidx56, align 4, !dbg !15294
  br label %cond.end57, !dbg !15294

cond.end57:                                       ; preds = %cond.false55, %cond.true52
  %cond58 = phi float [ %fneg54, %cond.true52 ], [ %52, %cond.false55 ], !dbg !15294
  %add59 = fadd float %cond49, %cond58, !dbg !15295
  %cmp60 = fcmp olt float %add, %add59, !dbg !15296
  br i1 %cmp60, label %if.then61, label %if.end66, !dbg !15297

if.then61:                                        ; preds = %cond.end57
  %53 = load float*, float** %speed.addr, align 8, !dbg !15298
  %arrayidx62 = getelementptr inbounds float, float* %53, i64 0, !dbg !15298
  %54 = load float, float* %arrayidx62, align 4, !dbg !15298
  %55 = load float*, float** %fp, align 8, !dbg !15300
  %arrayidx63 = getelementptr inbounds float, float* %55, i64 0, !dbg !15300
  store float %54, float* %arrayidx63, align 4, !dbg !15301
  %56 = load float*, float** %speed.addr, align 8, !dbg !15302
  %arrayidx64 = getelementptr inbounds float, float* %56, i64 1, !dbg !15302
  %57 = load float, float* %arrayidx64, align 4, !dbg !15302
  %58 = load float*, float** %fp, align 8, !dbg !15303
  %arrayidx65 = getelementptr inbounds float, float* %58, i64 1, !dbg !15303
  store float %57, float* %arrayidx65, align 4, !dbg !15304
  br label %if.end66, !dbg !15305

if.end66:                                         ; preds = %if.then61, %cond.end57
  %59 = load float*, float** %speed.addr, align 8, !dbg !15306
  %arrayidx67 = getelementptr inbounds float, float* %59, i64 2, !dbg !15306
  %60 = load float, float* %arrayidx67, align 4, !dbg !15306
  %cmp68 = fcmp olt float %60, 0.000000e+00, !dbg !15306
  br i1 %cmp68, label %cond.true69, label %cond.false72, !dbg !15306

cond.true69:                                      ; preds = %if.end66
  %61 = load float*, float** %speed.addr, align 8, !dbg !15306
  %arrayidx70 = getelementptr inbounds float, float* %61, i64 2, !dbg !15306
  %62 = load float, float* %arrayidx70, align 4, !dbg !15306
  %fneg71 = fneg float %62, !dbg !15306
  br label %cond.end74, !dbg !15306

cond.false72:                                     ; preds = %if.end66
  %63 = load float*, float** %speed.addr, align 8, !dbg !15306
  %arrayidx73 = getelementptr inbounds float, float* %63, i64 2, !dbg !15306
  %64 = load float, float* %arrayidx73, align 4, !dbg !15306
  br label %cond.end74, !dbg !15306

cond.end74:                                       ; preds = %cond.false72, %cond.true69
  %cond75 = phi float [ %fneg71, %cond.true69 ], [ %64, %cond.false72 ], !dbg !15306
  %65 = load float*, float** %speed.addr, align 8, !dbg !15308
  %arrayidx76 = getelementptr inbounds float, float* %65, i64 3, !dbg !15308
  %66 = load float, float* %arrayidx76, align 4, !dbg !15308
  %cmp77 = fcmp olt float %66, 0.000000e+00, !dbg !15308
  br i1 %cmp77, label %cond.true78, label %cond.false81, !dbg !15308

cond.true78:                                      ; preds = %cond.end74
  %67 = load float*, float** %speed.addr, align 8, !dbg !15308
  %arrayidx79 = getelementptr inbounds float, float* %67, i64 3, !dbg !15308
  %68 = load float, float* %arrayidx79, align 4, !dbg !15308
  %fneg80 = fneg float %68, !dbg !15308
  br label %cond.end83, !dbg !15308

cond.false81:                                     ; preds = %cond.end74
  %69 = load float*, float** %speed.addr, align 8, !dbg !15308
  %arrayidx82 = getelementptr inbounds float, float* %69, i64 3, !dbg !15308
  %70 = load float, float* %arrayidx82, align 4, !dbg !15308
  br label %cond.end83, !dbg !15308

cond.end83:                                       ; preds = %cond.false81, %cond.true78
  %cond84 = phi float [ %fneg80, %cond.true78 ], [ %70, %cond.false81 ], !dbg !15308
  %add85 = fadd float %cond75, %cond84, !dbg !15309
  %71 = load float*, float** %fp, align 8, !dbg !15310
  %arrayidx86 = getelementptr inbounds float, float* %71, i64 2, !dbg !15310
  %72 = load float, float* %arrayidx86, align 4, !dbg !15310
  %cmp87 = fcmp olt float %72, 0.000000e+00, !dbg !15310
  br i1 %cmp87, label %cond.true88, label %cond.false91, !dbg !15310

cond.true88:                                      ; preds = %cond.end83
  %73 = load float*, float** %fp, align 8, !dbg !15310
  %arrayidx89 = getelementptr inbounds float, float* %73, i64 2, !dbg !15310
  %74 = load float, float* %arrayidx89, align 4, !dbg !15310
  %fneg90 = fneg float %74, !dbg !15310
  br label %cond.end93, !dbg !15310

cond.false91:                                     ; preds = %cond.end83
  %75 = load float*, float** %fp, align 8, !dbg !15310
  %arrayidx92 = getelementptr inbounds float, float* %75, i64 2, !dbg !15310
  %76 = load float, float* %arrayidx92, align 4, !dbg !15310
  br label %cond.end93, !dbg !15310

cond.end93:                                       ; preds = %cond.false91, %cond.true88
  %cond94 = phi float [ %fneg90, %cond.true88 ], [ %76, %cond.false91 ], !dbg !15310
  %77 = load float*, float** %fp, align 8, !dbg !15311
  %arrayidx95 = getelementptr inbounds float, float* %77, i64 3, !dbg !15311
  %78 = load float, float* %arrayidx95, align 4, !dbg !15311
  %cmp96 = fcmp olt float %78, 0.000000e+00, !dbg !15311
  br i1 %cmp96, label %cond.true97, label %cond.false100, !dbg !15311

cond.true97:                                      ; preds = %cond.end93
  %79 = load float*, float** %fp, align 8, !dbg !15311
  %arrayidx98 = getelementptr inbounds float, float* %79, i64 3, !dbg !15311
  %80 = load float, float* %arrayidx98, align 4, !dbg !15311
  %fneg99 = fneg float %80, !dbg !15311
  br label %cond.end102, !dbg !15311

cond.false100:                                    ; preds = %cond.end93
  %81 = load float*, float** %fp, align 8, !dbg !15311
  %arrayidx101 = getelementptr inbounds float, float* %81, i64 3, !dbg !15311
  %82 = load float, float* %arrayidx101, align 4, !dbg !15311
  br label %cond.end102, !dbg !15311

cond.end102:                                      ; preds = %cond.false100, %cond.true97
  %cond103 = phi float [ %fneg99, %cond.true97 ], [ %82, %cond.false100 ], !dbg !15311
  %add104 = fadd float %cond94, %cond103, !dbg !15312
  %cmp105 = fcmp olt float %add85, %add104, !dbg !15313
  br i1 %cmp105, label %if.then106, label %if.end111, !dbg !15314

if.then106:                                       ; preds = %cond.end102
  %83 = load float*, float** %speed.addr, align 8, !dbg !15315
  %arrayidx107 = getelementptr inbounds float, float* %83, i64 2, !dbg !15315
  %84 = load float, float* %arrayidx107, align 4, !dbg !15315
  %85 = load float*, float** %fp, align 8, !dbg !15317
  %arrayidx108 = getelementptr inbounds float, float* %85, i64 2, !dbg !15317
  store float %84, float* %arrayidx108, align 4, !dbg !15318
  %86 = load float*, float** %speed.addr, align 8, !dbg !15319
  %arrayidx109 = getelementptr inbounds float, float* %86, i64 3, !dbg !15319
  %87 = load float, float* %arrayidx109, align 4, !dbg !15319
  %88 = load float*, float** %fp, align 8, !dbg !15320
  %arrayidx110 = getelementptr inbounds float, float* %88, i64 3, !dbg !15320
  store float %87, float* %arrayidx110, align 4, !dbg !15321
  br label %if.end111, !dbg !15322

if.end111:                                        ; preds = %if.then106, %cond.end102
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then26
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end20
  br label %for.end, !dbg !15323

if.end114:                                        ; preds = %for.body
  br label %for.inc, !dbg !15324

for.inc:                                          ; preds = %if.end114
  %89 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15325
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %89, i32 0, i32 0, !dbg !15326
  %90 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !15326
  store %struct.RenderPass* %90, %struct.RenderPass** %rpass, align 8, !dbg !15327
  br label %for.cond, !dbg !15328, !llvm.loop !15329

for.end:                                          ; preds = %if.end113, %for.cond
  ret void, !dbg !15331
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @vergzvlak(i8* %a1, i8* %a2) #0 !dbg !15332 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %r1 = alloca %struct.ZTranspRow*, align 8
  %r2 = alloca %struct.ZTranspRow*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !15337, metadata !DIExpression()), !dbg !15338
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !15339, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow** %r1, metadata !15341, metadata !DIExpression()), !dbg !15344
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !15345
  %1 = bitcast i8* %0 to %struct.ZTranspRow*, !dbg !15345
  store %struct.ZTranspRow* %1, %struct.ZTranspRow** %r1, align 8, !dbg !15344
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow** %r2, metadata !15346, metadata !DIExpression()), !dbg !15347
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !15348
  %3 = bitcast i8* %2 to %struct.ZTranspRow*, !dbg !15348
  store %struct.ZTranspRow* %3, %struct.ZTranspRow** %r2, align 8, !dbg !15347
  %4 = load %struct.ZTranspRow*, %struct.ZTranspRow** %r1, align 8, !dbg !15349
  %z = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %4, i32 0, i32 1, !dbg !15351
  %5 = load i32, i32* %z, align 4, !dbg !15351
  %6 = load %struct.ZTranspRow*, %struct.ZTranspRow** %r2, align 8, !dbg !15352
  %z1 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %6, i32 0, i32 1, !dbg !15353
  %7 = load i32, i32* %z1, align 4, !dbg !15353
  %cmp = icmp slt i32 %5, %7, !dbg !15354
  br i1 %cmp, label %if.then, label %if.else, !dbg !15355

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !15356
  br label %return, !dbg !15356

if.else:                                          ; preds = %entry
  %8 = load %struct.ZTranspRow*, %struct.ZTranspRow** %r1, align 8, !dbg !15357
  %z2 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %8, i32 0, i32 1, !dbg !15359
  %9 = load i32, i32* %z2, align 4, !dbg !15359
  %10 = load %struct.ZTranspRow*, %struct.ZTranspRow** %r2, align 8, !dbg !15360
  %z3 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %10, i32 0, i32 1, !dbg !15361
  %11 = load i32, i32* %z3, align 4, !dbg !15361
  %cmp4 = icmp sgt i32 %9, %11, !dbg !15362
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !15363

if.then5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !15364
  br label %return, !dbg !15364

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15365
  br label %return, !dbg !15365

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !15366
  ret i32 %12, !dbg !15366
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_transp_obindex(%struct.RenderLayer* %rl, i32 %offset, %struct.Object* %ob) #0 !dbg !15367 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %offset.addr = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15370, metadata !DIExpression()), !dbg !15371
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !15372, metadata !DIExpression()), !dbg !15373
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15374, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !15376, metadata !DIExpression()), !dbg !15377
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15378
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 18, !dbg !15380
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !15381
  %1 = load i8*, i8** %first, align 8, !dbg !15381
  %2 = bitcast i8* %1 to %struct.RenderPass*, !dbg !15378
  store %struct.RenderPass* %2, %struct.RenderPass** %rpass, align 8, !dbg !15382
  br label %for.cond, !dbg !15383

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15384
  %tobool = icmp ne %struct.RenderPass* %3, null, !dbg !15386
  br i1 %tobool, label %for.body, label %for.end, !dbg !15386

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15387
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %4, i32 0, i32 2, !dbg !15390
  %5 = load i32, i32* %passtype, align 8, !dbg !15390
  %cmp = icmp eq i32 %5, 2048, !dbg !15391
  br i1 %cmp, label %if.then, label %if.end, !dbg !15392

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %fp, metadata !15393, metadata !DIExpression()), !dbg !15395
  %6 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15396
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %6, i32 0, i32 6, !dbg !15397
  %7 = load float*, float** %rect, align 8, !dbg !15397
  %8 = load i32, i32* %offset.addr, align 4, !dbg !15398
  %idx.ext = sext i32 %8 to i64, !dbg !15399
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !15399
  store float* %add.ptr, float** %fp, align 8, !dbg !15395
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15400
  %index = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 96, !dbg !15401
  %10 = load i16, i16* %index, align 4, !dbg !15401
  %conv = sitofp i16 %10 to float, !dbg !15402
  %11 = load float*, float** %fp, align 8, !dbg !15403
  store float %conv, float* %11, align 4, !dbg !15404
  br label %for.end, !dbg !15405

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !15406

for.inc:                                          ; preds = %if.end
  %12 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15407
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %12, i32 0, i32 0, !dbg !15408
  %13 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !15408
  store %struct.RenderPass* %13, %struct.RenderPass** %rpass, align 8, !dbg !15409
  br label %for.cond, !dbg !15410, !llvm.loop !15411

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15413
}

declare dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_transp_material_index(%struct.RenderLayer* %rl, i32 %offset, %struct.Material* %mat) #0 !dbg !15414 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %offset.addr = alloca i32, align 4
  %mat.addr = alloca %struct.Material*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15417, metadata !DIExpression()), !dbg !15418
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !15419, metadata !DIExpression()), !dbg !15420
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !15421, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !15423, metadata !DIExpression()), !dbg !15424
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15425
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 18, !dbg !15427
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !15428
  %1 = load i8*, i8** %first, align 8, !dbg !15428
  %2 = bitcast i8* %1 to %struct.RenderPass*, !dbg !15425
  store %struct.RenderPass* %2, %struct.RenderPass** %rpass, align 8, !dbg !15429
  br label %for.cond, !dbg !15430

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15431
  %tobool = icmp ne %struct.RenderPass* %3, null, !dbg !15433
  br i1 %tobool, label %for.body, label %for.end, !dbg !15433

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15434
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %4, i32 0, i32 2, !dbg !15437
  %5 = load i32, i32* %passtype, align 8, !dbg !15437
  %cmp = icmp eq i32 %5, 262144, !dbg !15438
  br i1 %cmp, label %if.then, label %if.end, !dbg !15439

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %fp, metadata !15440, metadata !DIExpression()), !dbg !15442
  %6 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15443
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %6, i32 0, i32 6, !dbg !15444
  %7 = load float*, float** %rect, align 8, !dbg !15444
  %8 = load i32, i32* %offset.addr, align 4, !dbg !15445
  %idx.ext = sext i32 %8 to i64, !dbg !15446
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !15446
  store float* %add.ptr, float** %fp, align 8, !dbg !15442
  %9 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !15447
  %index = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 127, !dbg !15448
  %10 = load i16, i16* %index, align 2, !dbg !15448
  %conv = sitofp i16 %10 to float, !dbg !15449
  %11 = load float*, float** %fp, align 8, !dbg !15450
  store float %conv, float* %11, align 4, !dbg !15451
  br label %for.end, !dbg !15452

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !15453

for.inc:                                          ; preds = %if.end
  %12 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15454
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %12, i32 0, i32 0, !dbg !15455
  %13 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !15455
  store %struct.RenderPass* %13, %struct.RenderPass** %rpass, align 8, !dbg !15456
  br label %for.cond, !dbg !15457, !llvm.loop !15458

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15460
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @shade_tra_samples(%struct.ShadeSample* %ssamp, %struct.StrandShadeCache* %cache, i32 %x, i32 %y, %struct.ZTranspRow* %row, i32 %addpassflag) #0 !dbg !15461 {
entry:
  %retval = alloca i32, align 4
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %cache.addr = alloca %struct.StrandShadeCache*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %row.addr = alloca %struct.ZTranspRow*, align 8
  %addpassflag.addr = alloca i32, align 4
  %shi = alloca %struct.ShadeInput*, align 8
  %shr = alloca %struct.ShadeResult*, align 8
  %samp = alloca i32, align 4
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !15466, metadata !DIExpression()), !dbg !15467
  store %struct.StrandShadeCache* %cache, %struct.StrandShadeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandShadeCache** %cache.addr, metadata !15468, metadata !DIExpression()), !dbg !15469
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !15470, metadata !DIExpression()), !dbg !15471
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !15472, metadata !DIExpression()), !dbg !15473
  store %struct.ZTranspRow* %row, %struct.ZTranspRow** %row.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow** %row.addr, metadata !15474, metadata !DIExpression()), !dbg !15475
  store i32 %addpassflag, i32* %addpassflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addpassflag.addr, metadata !15476, metadata !DIExpression()), !dbg !15477
  %0 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15478
  %segment = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %0, i32 0, i32 4, !dbg !15480
  %1 = load i32, i32* %segment, align 4, !dbg !15480
  %cmp = icmp ne i32 %1, -1, !dbg !15481
  br i1 %cmp, label %if.then, label %if.end, !dbg !15482

if.then:                                          ; preds = %entry
  %2 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %cache.addr, align 8, !dbg !15483
  %3 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15485
  %4 = load i32, i32* %x.addr, align 4, !dbg !15486
  %5 = load i32, i32* %y.addr, align 4, !dbg !15487
  %6 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15488
  %7 = load i32, i32* %addpassflag.addr, align 4, !dbg !15489
  call void @shade_strand_samples(%struct.StrandShadeCache* %2, %struct.ShadeSample* %3, i32 %4, i32 %5, %struct.ZTranspRow* %6, i32 %7), !dbg !15490
  store i32 1, i32* %retval, align 4, !dbg !15491
  br label %return, !dbg !15491

if.end:                                           ; preds = %entry
  %8 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15492
  %9 = load i32, i32* %x.addr, align 4, !dbg !15493
  %10 = load i32, i32* %y.addr, align 4, !dbg !15494
  %11 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15495
  %z = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %11, i32 0, i32 1, !dbg !15496
  %12 = load i32, i32* %z, align 4, !dbg !15496
  %13 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15497
  %obi = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %13, i32 0, i32 0, !dbg !15498
  %14 = load i32, i32* %obi, align 4, !dbg !15498
  %15 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15499
  %p = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %15, i32 0, i32 2, !dbg !15500
  %16 = load i32, i32* %p, align 4, !dbg !15500
  %17 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15501
  %mask = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %17, i32 0, i32 3, !dbg !15502
  %18 = load i32, i32* %mask, align 4, !dbg !15502
  call void @shade_tra_samples_fill(%struct.ShadeSample* %8, i32 %9, i32 %10, i32 %12, i32 %14, i32 %16, i32 %18), !dbg !15503
  %19 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15504
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %19, i32 0, i32 0, !dbg !15506
  %20 = load i32, i32* %tot, align 8, !dbg !15506
  %tobool = icmp ne i32 %20, 0, !dbg !15504
  br i1 %tobool, label %if.then1, label %if.end38, !dbg !15507

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !15508, metadata !DIExpression()), !dbg !15511
  %21 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15512
  %shi2 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %21, i32 0, i32 2, !dbg !15513
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi2, i64 0, i64 0, !dbg !15512
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !15511
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr, metadata !15514, metadata !DIExpression()), !dbg !15516
  %22 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15517
  %shr3 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %22, i32 0, i32 3, !dbg !15518
  %arraydecay4 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr3, i64 0, i64 0, !dbg !15517
  store %struct.ShadeResult* %arraydecay4, %struct.ShadeResult** %shr, align 8, !dbg !15516
  call void @llvm.dbg.declare(metadata i32* %samp, metadata !15519, metadata !DIExpression()), !dbg !15520
  %23 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15521
  call void @shade_samples_do_AO(%struct.ShadeSample* %23), !dbg !15522
  %24 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15523
  %passflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %24, i32 0, i32 119, !dbg !15525
  %25 = load i32, i32* %passflag, align 8, !dbg !15525
  %and = and i32 %25, -264195, !dbg !15526
  %tobool5 = icmp ne i32 %and, 0, !dbg !15526
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !15527

if.then6:                                         ; preds = %if.then1
  store i32 0, i32* %samp, align 4, !dbg !15528
  br label %for.cond, !dbg !15531

for.cond:                                         ; preds = %for.inc, %if.then6
  %26 = load i32, i32* %samp, align 4, !dbg !15532
  %27 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15534
  %tot7 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %27, i32 0, i32 0, !dbg !15535
  %28 = load i32, i32* %tot7, align 8, !dbg !15535
  %cmp8 = icmp slt i32 %26, %28, !dbg !15536
  br i1 %cmp8, label %for.body, label %for.end, !dbg !15537

for.body:                                         ; preds = %for.cond
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15538
  call void @shade_input_set_shade_texco(%struct.ShadeInput* %29), !dbg !15540
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15541
  %31 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15542
  call void @shade_input_do_shade(%struct.ShadeInput* %30, %struct.ShadeResult* %31), !dbg !15543
  %32 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !15544
  %conv = sext i16 %32 to i32, !dbg !15546
  %and9 = and i32 %conv, 8, !dbg !15547
  %tobool10 = icmp ne i32 %and9, 0, !dbg !15547
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !15548

if.then11:                                        ; preds = %for.body
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15549
  %layflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 118, !dbg !15551
  %34 = load i32, i32* %layflag, align 4, !dbg !15551
  %and12 = and i32 %34, 4, !dbg !15552
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15552
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !15553

if.then14:                                        ; preds = %if.then11
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15554
  %36 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15555
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %36, i32 0, i32 0, !dbg !15556
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !15555
  %37 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15557
  %combined16 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %37, i32 0, i32 0, !dbg !15558
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %combined16, i64 0, i64 3, !dbg !15557
  %38 = load float, float* %arrayidx, align 4, !dbg !15557
  call void @renderspothalo(%struct.ShadeInput* %35, float* %arraydecay15, float %38), !dbg !15559
  br label %if.end17, !dbg !15559

if.end17:                                         ; preds = %if.then14, %if.then11
  br label %if.end18, !dbg !15560

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !15561

for.inc:                                          ; preds = %if.end18
  %39 = load i32, i32* %samp, align 4, !dbg !15562
  %inc = add nsw i32 %39, 1, !dbg !15562
  store i32 %inc, i32* %samp, align 4, !dbg !15562
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15563
  %incdec.ptr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %40, i32 1, !dbg !15563
  store %struct.ShadeInput* %incdec.ptr, %struct.ShadeInput** %shi, align 8, !dbg !15563
  %41 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15564
  %incdec.ptr19 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %41, i32 1, !dbg !15564
  store %struct.ShadeResult* %incdec.ptr19, %struct.ShadeResult** %shr, align 8, !dbg !15564
  br label %for.cond, !dbg !15565, !llvm.loop !15566

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !15568

if.else:                                          ; preds = %if.then1
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15569
  %passflag20 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 119, !dbg !15571
  %43 = load i32, i32* %passflag20, align 8, !dbg !15571
  %and21 = and i32 %43, 2, !dbg !15572
  %tobool22 = icmp ne i32 %and21, 0, !dbg !15572
  br i1 %tobool22, label %if.then23, label %if.end36, !dbg !15573

if.then23:                                        ; preds = %if.else
  store i32 0, i32* %samp, align 4, !dbg !15574
  br label %for.cond24, !dbg !15577

for.cond24:                                       ; preds = %for.inc31, %if.then23
  %44 = load i32, i32* %samp, align 4, !dbg !15578
  %45 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15580
  %tot25 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %45, i32 0, i32 0, !dbg !15581
  %46 = load i32, i32* %tot25, align 8, !dbg !15581
  %cmp26 = icmp slt i32 %44, %46, !dbg !15582
  br i1 %cmp26, label %for.body28, label %for.end35, !dbg !15583

for.body28:                                       ; preds = %for.cond24
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15584
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 29, !dbg !15585
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !15584
  %48 = load float, float* %arrayidx29, align 8, !dbg !15584
  %fneg = fneg float %48, !dbg !15586
  %49 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15587
  %z30 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %49, i32 0, i32 4, !dbg !15588
  store float %fneg, float* %z30, align 4, !dbg !15589
  br label %for.inc31, !dbg !15587

for.inc31:                                        ; preds = %for.body28
  %50 = load i32, i32* %samp, align 4, !dbg !15590
  %inc32 = add nsw i32 %50, 1, !dbg !15590
  store i32 %inc32, i32* %samp, align 4, !dbg !15590
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15591
  %incdec.ptr33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 1, !dbg !15591
  store %struct.ShadeInput* %incdec.ptr33, %struct.ShadeInput** %shi, align 8, !dbg !15591
  %52 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15592
  %incdec.ptr34 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %52, i32 1, !dbg !15592
  store %struct.ShadeResult* %incdec.ptr34, %struct.ShadeResult** %shr, align 8, !dbg !15592
  br label %for.cond24, !dbg !15593, !llvm.loop !15594

for.end35:                                        ; preds = %for.cond24
  br label %if.end36, !dbg !15596

if.end36:                                         ; preds = %for.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %for.end
  store i32 1, i32* %retval, align 4, !dbg !15597
  br label %return, !dbg !15597

if.end38:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15598
  br label %return, !dbg !15598

return:                                           ; preds = %if.end38, %if.end37, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !15599
  ret i32 %53, !dbg !15599
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @addtosamp_shr(%struct.ShadeResult* %samp_shr, %struct.ShadeSample* %ssamp, i32 %addpassflag) #0 !dbg !15600 {
entry:
  %samp_shr.addr = alloca %struct.ShadeResult*, align 8
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %addpassflag.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %sample = alloca i32, align 4
  %osa = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %shi = alloca %struct.ShadeInput*, align 8
  %shr = alloca %struct.ShadeResult*, align 8
  %fac = alloca float, align 4
  store %struct.ShadeResult* %samp_shr, %struct.ShadeResult** %samp_shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %samp_shr.addr, metadata !15603, metadata !DIExpression()), !dbg !15604
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !15605, metadata !DIExpression()), !dbg !15606
  store i32 %addpassflag, i32* %addpassflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addpassflag.addr, metadata !15607, metadata !DIExpression()), !dbg !15608
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15609, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !15611, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.declare(metadata i32* %osa, metadata !15613, metadata !DIExpression()), !dbg !15614
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !15615
  %conv = sext i16 %0 to i32, !dbg !15616
  %tobool = icmp ne i32 %conv, 0, !dbg !15616
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15616

cond.true:                                        ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !15617
  %conv1 = sext i16 %1 to i32, !dbg !15618
  br label %cond.end, !dbg !15616

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15616

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv1, %cond.true ], [ 1, %cond.false ], !dbg !15616
  store i32 %cond, i32* %osa, align 4, !dbg !15614
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !15619, metadata !DIExpression()), !dbg !15620
  %2 = load i32, i32* %osa, align 4, !dbg !15621
  store i32 %2, i32* %retval2, align 4, !dbg !15620
  store i32 0, i32* %a, align 4, !dbg !15622
  br label %for.cond, !dbg !15624

for.cond:                                         ; preds = %for.inc122, %cond.end
  %3 = load i32, i32* %a, align 4, !dbg !15625
  %4 = load i32, i32* %osa, align 4, !dbg !15627
  %cmp = icmp slt i32 %3, %4, !dbg !15628
  br i1 %cmp, label %for.body, label %for.end125, !dbg !15629

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !15630, metadata !DIExpression()), !dbg !15632
  %5 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15633
  %shi4 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %5, i32 0, i32 2, !dbg !15634
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi4, i64 0, i64 0, !dbg !15633
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !15632
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr, metadata !15635, metadata !DIExpression()), !dbg !15636
  %6 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15637
  %shr5 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %6, i32 0, i32 3, !dbg !15638
  %arraydecay6 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr5, i64 0, i64 0, !dbg !15637
  store %struct.ShadeResult* %arraydecay6, %struct.ShadeResult** %shr, align 8, !dbg !15636
  store i32 0, i32* %sample, align 4, !dbg !15639
  br label %for.cond7, !dbg !15641

for.cond7:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %sample, align 4, !dbg !15642
  %8 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !15644
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %8, i32 0, i32 0, !dbg !15645
  %9 = load i32, i32* %tot, align 8, !dbg !15645
  %cmp8 = icmp slt i32 %7, %9, !dbg !15646
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !15647

for.body10:                                       ; preds = %for.cond7
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15648
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 105, !dbg !15651
  %11 = load i32, i32* %mask, align 4, !dbg !15651
  %12 = load i32, i32* %a, align 4, !dbg !15652
  %shl = shl i32 1, %12, !dbg !15653
  %and = and i32 %11, %shl, !dbg !15654
  %tobool11 = icmp ne i32 %and, 0, !dbg !15654
  br i1 %tobool11, label %if.then, label %if.end114, !dbg !15655

if.then:                                          ; preds = %for.body10
  call void @llvm.dbg.declare(metadata float* %fac, metadata !15656, metadata !DIExpression()), !dbg !15658
  %13 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15659
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %13, i32 0, i32 0, !dbg !15660
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 3, !dbg !15659
  %14 = load float, float* %arrayidx, align 4, !dbg !15659
  %sub = fsub float 1.000000e+00, %14, !dbg !15661
  %15 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15662
  %combined12 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %15, i32 0, i32 0, !dbg !15663
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %combined12, i64 0, i64 3, !dbg !15662
  %16 = load float, float* %arrayidx13, align 4, !dbg !15662
  %mul = fmul float %sub, %16, !dbg !15664
  store float %mul, float* %fac, align 4, !dbg !15658
  %17 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15665
  %combined14 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %17, i32 0, i32 0, !dbg !15666
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %combined14, i64 0, i64 0, !dbg !15665
  %18 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15667
  %combined16 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %18, i32 0, i32 0, !dbg !15668
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %combined16, i64 0, i64 0, !dbg !15667
  call void @addAlphaUnderFloat(float* %arraydecay15, float* %arraydecay17), !dbg !15669
  %19 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15670
  %z = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %19, i32 0, i32 4, !dbg !15671
  %20 = load float, float* %z, align 4, !dbg !15671
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15672
  %z18 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 4, !dbg !15673
  %22 = load float, float* %z18, align 4, !dbg !15673
  %call = call float @min_ff(float %20, float %22), !dbg !15674
  %23 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15675
  %z19 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %23, i32 0, i32 4, !dbg !15676
  store float %call, float* %z19, align 4, !dbg !15677
  %24 = load i32, i32* %addpassflag.addr, align 4, !dbg !15678
  %and20 = and i32 %24, 512, !dbg !15680
  %tobool21 = icmp ne i32 %and20, 0, !dbg !15680
  br i1 %tobool21, label %if.then22, label %if.end, !dbg !15681

if.then22:                                        ; preds = %if.then
  %25 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15682
  %winspeed = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %25, i32 0, i32 16, !dbg !15684
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !15682
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15685
  %winspeed24 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 16, !dbg !15686
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %winspeed24, i64 0, i64 0, !dbg !15685
  call void @copy_v4_v4(float* %arraydecay23, float* %arraydecay25), !dbg !15687
  br label %if.end, !dbg !15688

if.end:                                           ; preds = %if.then22, %if.then
  %27 = load i32, i32* %addpassflag.addr, align 4, !dbg !15689
  %and26 = and i32 %27, -513, !dbg !15691
  %tobool27 = icmp ne i32 %and26, 0, !dbg !15691
  br i1 %tobool27, label %if.then28, label %if.end113, !dbg !15692

if.then28:                                        ; preds = %if.end
  %28 = load i32, i32* %addpassflag.addr, align 4, !dbg !15693
  %and29 = and i32 %28, 4, !dbg !15696
  %tobool30 = icmp ne i32 %and29, 0, !dbg !15696
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !15697

if.then31:                                        ; preds = %if.then28
  %29 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15698
  %col = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %29, i32 0, i32 1, !dbg !15699
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !15698
  %30 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15700
  %col33 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %30, i32 0, i32 1, !dbg !15701
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %col33, i64 0, i64 0, !dbg !15700
  call void @addAlphaUnderFloat(float* %arraydecay32, float* %arraydecay34), !dbg !15702
  br label %if.end35, !dbg !15702

if.end35:                                         ; preds = %if.then31, %if.then28
  %31 = load i32, i32* %addpassflag.addr, align 4, !dbg !15703
  %and36 = and i32 %31, 256, !dbg !15705
  %tobool37 = icmp ne i32 %and36, 0, !dbg !15705
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !15706

if.then38:                                        ; preds = %if.end35
  %32 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15707
  %nor = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %32, i32 0, i32 15, !dbg !15708
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !15707
  %33 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15709
  %nor40 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %33, i32 0, i32 15, !dbg !15710
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %nor40, i64 0, i64 0, !dbg !15709
  %34 = load float, float* %fac, align 4, !dbg !15711
  call void @madd_v3_v3fl(float* %arraydecay39, float* %arraydecay41, float %34), !dbg !15712
  br label %if.end42, !dbg !15712

if.end42:                                         ; preds = %if.then38, %if.end35
  %35 = load i32, i32* %addpassflag.addr, align 4, !dbg !15713
  %and43 = and i32 %35, 65536, !dbg !15715
  %tobool44 = icmp ne i32 %and43, 0, !dbg !15715
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !15716

if.then45:                                        ; preds = %if.end42
  %36 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15717
  %emit = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %36, i32 0, i32 5, !dbg !15718
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %emit, i64 0, i64 0, !dbg !15717
  %37 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15719
  %emit47 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %37, i32 0, i32 5, !dbg !15720
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %emit47, i64 0, i64 0, !dbg !15719
  %38 = load float, float* %fac, align 4, !dbg !15721
  call void @madd_v3_v3fl(float* %arraydecay46, float* %arraydecay48, float %38), !dbg !15722
  br label %if.end49, !dbg !15722

if.end49:                                         ; preds = %if.then45, %if.end42
  %39 = load i32, i32* %addpassflag.addr, align 4, !dbg !15723
  %and50 = and i32 %39, 8, !dbg !15725
  %tobool51 = icmp ne i32 %and50, 0, !dbg !15725
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !15726

if.then52:                                        ; preds = %if.end49
  %40 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15727
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %40, i32 0, i32 6, !dbg !15728
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !15727
  %41 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15729
  %diff54 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %41, i32 0, i32 6, !dbg !15730
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %diff54, i64 0, i64 0, !dbg !15729
  %42 = load float, float* %fac, align 4, !dbg !15731
  call void @madd_v3_v3fl(float* %arraydecay53, float* %arraydecay55, float %42), !dbg !15732
  br label %if.end56, !dbg !15732

if.end56:                                         ; preds = %if.then52, %if.end49
  %43 = load i32, i32* %addpassflag.addr, align 4, !dbg !15733
  %and57 = and i32 %43, 16, !dbg !15735
  %tobool58 = icmp ne i32 %and57, 0, !dbg !15735
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !15736

if.then59:                                        ; preds = %if.end56
  %44 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15737
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %44, i32 0, i32 8, !dbg !15738
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !15737
  %45 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15739
  %spec61 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %45, i32 0, i32 8, !dbg !15740
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %spec61, i64 0, i64 0, !dbg !15739
  %46 = load float, float* %fac, align 4, !dbg !15741
  call void @madd_v3_v3fl(float* %arraydecay60, float* %arraydecay62, float %46), !dbg !15742
  br label %if.end63, !dbg !15742

if.end63:                                         ; preds = %if.then59, %if.end56
  %47 = load i32, i32* %addpassflag.addr, align 4, !dbg !15743
  %and64 = and i32 %47, 32, !dbg !15745
  %tobool65 = icmp ne i32 %and64, 0, !dbg !15745
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !15746

if.then66:                                        ; preds = %if.end63
  %48 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15747
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %48, i32 0, i32 9, !dbg !15748
  %arraydecay67 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !15747
  %49 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15749
  %shad68 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %49, i32 0, i32 9, !dbg !15750
  %arraydecay69 = getelementptr inbounds [4 x float], [4 x float]* %shad68, i64 0, i64 0, !dbg !15749
  %50 = load float, float* %fac, align 4, !dbg !15751
  call void @madd_v3_v3fl(float* %arraydecay67, float* %arraydecay69, float %50), !dbg !15752
  br label %if.end70, !dbg !15752

if.end70:                                         ; preds = %if.then66, %if.end63
  %51 = load i32, i32* %addpassflag.addr, align 4, !dbg !15753
  %and71 = and i32 %51, 64, !dbg !15755
  %tobool72 = icmp ne i32 %and71, 0, !dbg !15755
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !15756

if.then73:                                        ; preds = %if.end70
  %52 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15757
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %52, i32 0, i32 10, !dbg !15758
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !15757
  %53 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15759
  %ao75 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %53, i32 0, i32 10, !dbg !15760
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %ao75, i64 0, i64 0, !dbg !15759
  %54 = load float, float* %fac, align 4, !dbg !15761
  call void @madd_v3_v3fl(float* %arraydecay74, float* %arraydecay76, float %54), !dbg !15762
  br label %if.end77, !dbg !15762

if.end77:                                         ; preds = %if.then73, %if.end70
  %55 = load i32, i32* %addpassflag.addr, align 4, !dbg !15763
  %and78 = and i32 %55, 131072, !dbg !15765
  %tobool79 = icmp ne i32 %and78, 0, !dbg !15765
  br i1 %tobool79, label %if.then80, label %if.end84, !dbg !15766

if.then80:                                        ; preds = %if.end77
  %56 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15767
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %56, i32 0, i32 11, !dbg !15768
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !15767
  %57 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15769
  %env82 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %57, i32 0, i32 11, !dbg !15770
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %env82, i64 0, i64 0, !dbg !15769
  %58 = load float, float* %fac, align 4, !dbg !15771
  call void @madd_v3_v3fl(float* %arraydecay81, float* %arraydecay83, float %58), !dbg !15772
  br label %if.end84, !dbg !15772

if.end84:                                         ; preds = %if.then80, %if.end77
  %59 = load i32, i32* %addpassflag.addr, align 4, !dbg !15773
  %and85 = and i32 %59, 8192, !dbg !15775
  %tobool86 = icmp ne i32 %and85, 0, !dbg !15775
  br i1 %tobool86, label %if.then87, label %if.end91, !dbg !15776

if.then87:                                        ; preds = %if.end84
  %60 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15777
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %60, i32 0, i32 12, !dbg !15778
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !15777
  %61 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15779
  %indirect89 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %61, i32 0, i32 12, !dbg !15780
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %indirect89, i64 0, i64 0, !dbg !15779
  %62 = load float, float* %fac, align 4, !dbg !15781
  call void @madd_v3_v3fl(float* %arraydecay88, float* %arraydecay90, float %62), !dbg !15782
  br label %if.end91, !dbg !15782

if.end91:                                         ; preds = %if.then87, %if.end84
  %63 = load i32, i32* %addpassflag.addr, align 4, !dbg !15783
  %and92 = and i32 %63, 128, !dbg !15785
  %tobool93 = icmp ne i32 %and92, 0, !dbg !15785
  br i1 %tobool93, label %if.then94, label %if.end98, !dbg !15786

if.then94:                                        ; preds = %if.end91
  %64 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15787
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %64, i32 0, i32 13, !dbg !15788
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !15787
  %65 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15789
  %refl96 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %65, i32 0, i32 13, !dbg !15790
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %refl96, i64 0, i64 0, !dbg !15789
  %66 = load float, float* %fac, align 4, !dbg !15791
  call void @madd_v3_v3fl(float* %arraydecay95, float* %arraydecay97, float %66), !dbg !15792
  br label %if.end98, !dbg !15792

if.end98:                                         ; preds = %if.then94, %if.end91
  %67 = load i32, i32* %addpassflag.addr, align 4, !dbg !15793
  %and99 = and i32 %67, 1024, !dbg !15795
  %tobool100 = icmp ne i32 %and99, 0, !dbg !15795
  br i1 %tobool100, label %if.then101, label %if.end105, !dbg !15796

if.then101:                                       ; preds = %if.end98
  %68 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15797
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %68, i32 0, i32 14, !dbg !15798
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !15797
  %69 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15799
  %refr103 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %69, i32 0, i32 14, !dbg !15800
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %refr103, i64 0, i64 0, !dbg !15799
  %70 = load float, float* %fac, align 4, !dbg !15801
  call void @madd_v3_v3fl(float* %arraydecay102, float* %arraydecay104, float %70), !dbg !15802
  br label %if.end105, !dbg !15802

if.end105:                                        ; preds = %if.then101, %if.end98
  %71 = load i32, i32* %addpassflag.addr, align 4, !dbg !15803
  %and106 = and i32 %71, 16384, !dbg !15805
  %tobool107 = icmp ne i32 %and106, 0, !dbg !15805
  br i1 %tobool107, label %if.then108, label %if.end112, !dbg !15806

if.then108:                                       ; preds = %if.end105
  %72 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15807
  %mist = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %72, i32 0, i32 3, !dbg !15808
  %73 = load float, float* %mist, align 4, !dbg !15808
  %74 = load float, float* %fac, align 4, !dbg !15809
  %75 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15810
  %mist109 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %75, i32 0, i32 3, !dbg !15811
  %76 = load float, float* %mist109, align 4, !dbg !15811
  %mul110 = fmul float %74, %76, !dbg !15812
  %add = fadd float %73, %mul110, !dbg !15813
  %77 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15814
  %mist111 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %77, i32 0, i32 3, !dbg !15815
  store float %add, float* %mist111, align 4, !dbg !15816
  br label %if.end112, !dbg !15814

if.end112:                                        ; preds = %if.then108, %if.end105
  br label %if.end113, !dbg !15817

if.end113:                                        ; preds = %if.end112, %if.end
  br label %if.end114, !dbg !15818

if.end114:                                        ; preds = %if.end113, %for.body10
  br label %for.inc, !dbg !15819

for.inc:                                          ; preds = %if.end114
  %78 = load i32, i32* %sample, align 4, !dbg !15820
  %inc = add nsw i32 %78, 1, !dbg !15820
  store i32 %inc, i32* %sample, align 4, !dbg !15820
  %79 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !15821
  %incdec.ptr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %79, i32 1, !dbg !15821
  store %struct.ShadeInput* %incdec.ptr, %struct.ShadeInput** %shi, align 8, !dbg !15821
  %80 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !15822
  %incdec.ptr115 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %80, i32 1, !dbg !15822
  store %struct.ShadeResult* %incdec.ptr115, %struct.ShadeResult** %shr, align 8, !dbg !15822
  br label %for.cond7, !dbg !15823, !llvm.loop !15824

for.end:                                          ; preds = %for.cond7
  %81 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15826
  %combined116 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %81, i32 0, i32 0, !dbg !15828
  %arrayidx117 = getelementptr inbounds [4 x float], [4 x float]* %combined116, i64 0, i64 3, !dbg !15826
  %82 = load float, float* %arrayidx117, align 4, !dbg !15826
  %cmp118 = fcmp ogt float %82, 0x3FEFF7CEE0000000, !dbg !15829
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !15830

if.then120:                                       ; preds = %for.end
  %83 = load i32, i32* %retval2, align 4, !dbg !15831
  %dec = add nsw i32 %83, -1, !dbg !15831
  store i32 %dec, i32* %retval2, align 4, !dbg !15831
  br label %if.end121, !dbg !15832

if.end121:                                        ; preds = %if.then120, %for.end
  br label %for.inc122, !dbg !15833

for.inc122:                                       ; preds = %if.end121
  %84 = load i32, i32* %a, align 4, !dbg !15834
  %inc123 = add nsw i32 %84, 1, !dbg !15834
  store i32 %inc123, i32* %a, align 4, !dbg !15834
  %85 = load %struct.ShadeResult*, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15835
  %incdec.ptr124 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %85, i32 1, !dbg !15835
  store %struct.ShadeResult* %incdec.ptr124, %struct.ShadeResult** %samp_shr.addr, align 8, !dbg !15835
  br label %for.cond, !dbg !15836, !llvm.loop !15837

for.end125:                                       ; preds = %for.cond
  %86 = load i32, i32* %retval2, align 4, !dbg !15839
  ret i32 %86, !dbg !15840
}

declare dso_local void @addAlphaUnderFloat(float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @unref_strand_samples(%struct.StrandShadeCache* %cache, %struct.ZTranspRow* %row, i32 %totface) #0 !dbg !15841 {
entry:
  %cache.addr = alloca %struct.StrandShadeCache*, align 8
  %row.addr = alloca %struct.ZTranspRow*, align 8
  %totface.addr = alloca i32, align 4
  %svert = alloca %struct.StrandVert*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  store %struct.StrandShadeCache* %cache, %struct.StrandShadeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandShadeCache** %cache.addr, metadata !15844, metadata !DIExpression()), !dbg !15845
  store %struct.ZTranspRow* %row, %struct.ZTranspRow** %row.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow** %row.addr, metadata !15846, metadata !DIExpression()), !dbg !15847
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata %struct.StrandVert** %svert, metadata !15850, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !15852, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !15854, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !15856, metadata !DIExpression()), !dbg !15857
  br label %while.cond, !dbg !15858

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %totface.addr, align 4, !dbg !15859
  %cmp = icmp sgt i32 %0, 0, !dbg !15860
  br i1 %cmp, label %while.body, label %while.end, !dbg !15858

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %totface.addr, align 4, !dbg !15861
  %dec = add nsw i32 %1, -1, !dbg !15861
  store i32 %dec, i32* %totface.addr, align 4, !dbg !15861
  %2 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15863
  %3 = load i32, i32* %totface.addr, align 4, !dbg !15865
  %idxprom = sext i32 %3 to i64, !dbg !15863
  %arrayidx = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %2, i64 %idxprom, !dbg !15863
  %segment = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx, i32 0, i32 4, !dbg !15866
  %4 = load i32, i32* %segment, align 4, !dbg !15866
  %cmp1 = icmp ne i32 %4, -1, !dbg !15867
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15868

if.then:                                          ; preds = %while.body
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !15869
  %6 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15871
  %7 = load i32, i32* %totface.addr, align 4, !dbg !15872
  %idxprom2 = sext i32 %7 to i64, !dbg !15871
  %arrayidx3 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %6, i64 %idxprom2, !dbg !15871
  %obi4 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx3, i32 0, i32 0, !dbg !15873
  %8 = load i32, i32* %obi4, align 4, !dbg !15873
  %idx.ext = sext i32 %8 to i64, !dbg !15874
  %add.ptr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %5, i64 %idx.ext, !dbg !15874
  store %struct.ObjectInstanceRen* %add.ptr, %struct.ObjectInstanceRen** %obi, align 8, !dbg !15875
  %9 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !15876
  %obr5 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %9, i32 0, i32 2, !dbg !15877
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr5, align 8, !dbg !15877
  store %struct.ObjectRen* %10, %struct.ObjectRen** %obr, align 8, !dbg !15878
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !15879
  %12 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15880
  %13 = load i32, i32* %totface.addr, align 4, !dbg !15881
  %idxprom6 = sext i32 %13 to i64, !dbg !15880
  %arrayidx7 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %12, i64 %idxprom6, !dbg !15880
  %p = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx7, i32 0, i32 2, !dbg !15882
  %14 = load i32, i32* %p, align 4, !dbg !15882
  %sub = sub nsw i32 %14, 1, !dbg !15883
  %call = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %11, i32 %sub), !dbg !15884
  store %struct.StrandRen* %call, %struct.StrandRen** %strand, align 8, !dbg !15885
  %15 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !15886
  %vert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %15, i32 0, i32 0, !dbg !15887
  %16 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !15887
  %17 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !15888
  %18 = load i32, i32* %totface.addr, align 4, !dbg !15889
  %idxprom8 = sext i32 %18 to i64, !dbg !15888
  %arrayidx9 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %17, i64 %idxprom8, !dbg !15888
  %segment10 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %arrayidx9, i32 0, i32 4, !dbg !15890
  %19 = load i32, i32* %segment10, align 4, !dbg !15890
  %idx.ext11 = sext i32 %19 to i64, !dbg !15891
  %add.ptr12 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %16, i64 %idx.ext11, !dbg !15891
  store %struct.StrandVert* %add.ptr12, %struct.StrandVert** %svert, align 8, !dbg !15892
  %20 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %cache.addr, align 8, !dbg !15893
  %21 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !15894
  %22 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !15895
  call void @strand_shade_unref(%struct.StrandShadeCache* %20, %struct.ObjectInstanceRen* %21, %struct.StrandVert* %22), !dbg !15896
  %23 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %cache.addr, align 8, !dbg !15897
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !15898
  %25 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !15899
  %add.ptr13 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %25, i64 1, !dbg !15900
  call void @strand_shade_unref(%struct.StrandShadeCache* %23, %struct.ObjectInstanceRen* %24, %struct.StrandVert* %add.ptr13), !dbg !15901
  br label %if.end, !dbg !15902

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !15858, !llvm.loop !15903

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15905
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_transp_passes(%struct.RenderLayer* %rl, i32 %offset, %struct.ShadeResult* %shr, float %alpha) #0 !dbg !15906 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %offset.addr = alloca i32, align 4
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %alpha.addr = alloca float, align 4
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  %col = alloca float*, align 8
  %pixsize = alloca i32, align 4
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !15909, metadata !DIExpression()), !dbg !15910
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !15911, metadata !DIExpression()), !dbg !15912
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !15913, metadata !DIExpression()), !dbg !15914
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !15915, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !15917, metadata !DIExpression()), !dbg !15918
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !15919
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 18, !dbg !15921
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !15922
  %1 = load i8*, i8** %first, align 8, !dbg !15922
  %2 = bitcast i8* %1 to %struct.RenderPass*, !dbg !15919
  store %struct.RenderPass* %2, %struct.RenderPass** %rpass, align 8, !dbg !15923
  br label %for.cond, !dbg !15924

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15925
  %tobool = icmp ne %struct.RenderPass* %3, null, !dbg !15927
  br i1 %tobool, label %for.body, label %for.end, !dbg !15927

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %fp, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.declare(metadata float** %col, metadata !15931, metadata !DIExpression()), !dbg !15932
  store float* null, float** %col, align 8, !dbg !15932
  call void @llvm.dbg.declare(metadata i32* %pixsize, metadata !15933, metadata !DIExpression()), !dbg !15934
  store i32 3, i32* %pixsize, align 4, !dbg !15934
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15935
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %4, i32 0, i32 2, !dbg !15936
  %5 = load i32, i32* %passtype, align 8, !dbg !15936
  switch i32 %5, label %sw.epilog [
    i32 2, label %sw.bb
    i32 4, label %sw.bb2
    i32 65536, label %sw.bb7
    i32 8, label %sw.bb9
    i32 16, label %sw.bb11
    i32 32, label %sw.bb13
    i32 64, label %sw.bb15
    i32 131072, label %sw.bb17
    i32 8192, label %sw.bb19
    i32 128, label %sw.bb21
    i32 1024, label %sw.bb23
    i32 256, label %sw.bb25
    i32 16384, label %sw.bb27
  ], !dbg !15937

sw.bb:                                            ; preds = %for.body
  %6 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15938
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %6, i32 0, i32 6, !dbg !15940
  %7 = load float*, float** %rect, align 8, !dbg !15940
  %8 = load i32, i32* %offset.addr, align 4, !dbg !15941
  %idx.ext = sext i32 %8 to i64, !dbg !15942
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !15942
  store float* %add.ptr, float** %fp, align 8, !dbg !15943
  %9 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15944
  %z = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %9, i32 0, i32 4, !dbg !15946
  %10 = load float, float* %z, align 4, !dbg !15946
  %11 = load float*, float** %fp, align 8, !dbg !15947
  %12 = load float, float* %11, align 4, !dbg !15948
  %cmp = fcmp olt float %10, %12, !dbg !15949
  br i1 %cmp, label %if.then, label %if.end, !dbg !15950

if.then:                                          ; preds = %sw.bb
  %13 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15951
  %z1 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %13, i32 0, i32 4, !dbg !15952
  %14 = load float, float* %z1, align 4, !dbg !15952
  %15 = load float*, float** %fp, align 8, !dbg !15953
  store float %14, float* %15, align 4, !dbg !15954
  br label %if.end, !dbg !15955

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !15956

sw.bb2:                                           ; preds = %for.body
  %16 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !15957
  %rect3 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %16, i32 0, i32 6, !dbg !15958
  %17 = load float*, float** %rect3, align 8, !dbg !15958
  %18 = load i32, i32* %offset.addr, align 4, !dbg !15959
  %mul = mul nsw i32 4, %18, !dbg !15960
  %idx.ext4 = sext i32 %mul to i64, !dbg !15961
  %add.ptr5 = getelementptr inbounds float, float* %17, i64 %idx.ext4, !dbg !15961
  store float* %add.ptr5, float** %fp, align 8, !dbg !15962
  %19 = load float*, float** %fp, align 8, !dbg !15963
  %20 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15964
  %col6 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %20, i32 0, i32 1, !dbg !15965
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col6, i64 0, i64 0, !dbg !15964
  call void @addAlphaOverFloat(float* %19, float* %arraydecay), !dbg !15966
  br label %sw.epilog, !dbg !15967

sw.bb7:                                           ; preds = %for.body
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15968
  %emit = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 5, !dbg !15969
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %emit, i64 0, i64 0, !dbg !15968
  store float* %arraydecay8, float** %col, align 8, !dbg !15970
  br label %sw.epilog, !dbg !15971

sw.bb9:                                           ; preds = %for.body
  %22 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15972
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %22, i32 0, i32 6, !dbg !15973
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !15972
  store float* %arraydecay10, float** %col, align 8, !dbg !15974
  br label %sw.epilog, !dbg !15975

sw.bb11:                                          ; preds = %for.body
  %23 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15976
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %23, i32 0, i32 8, !dbg !15977
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !15976
  store float* %arraydecay12, float** %col, align 8, !dbg !15978
  br label %sw.epilog, !dbg !15979

sw.bb13:                                          ; preds = %for.body
  %24 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15980
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %24, i32 0, i32 9, !dbg !15981
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !15980
  store float* %arraydecay14, float** %col, align 8, !dbg !15982
  br label %sw.epilog, !dbg !15983

sw.bb15:                                          ; preds = %for.body
  %25 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15984
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %25, i32 0, i32 10, !dbg !15985
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !15984
  store float* %arraydecay16, float** %col, align 8, !dbg !15986
  br label %sw.epilog, !dbg !15987

sw.bb17:                                          ; preds = %for.body
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15988
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 11, !dbg !15989
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !15988
  store float* %arraydecay18, float** %col, align 8, !dbg !15990
  br label %sw.epilog, !dbg !15991

sw.bb19:                                          ; preds = %for.body
  %27 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15992
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %27, i32 0, i32 12, !dbg !15993
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !15992
  store float* %arraydecay20, float** %col, align 8, !dbg !15994
  br label %sw.epilog, !dbg !15995

sw.bb21:                                          ; preds = %for.body
  %28 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !15996
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %28, i32 0, i32 13, !dbg !15997
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !15996
  store float* %arraydecay22, float** %col, align 8, !dbg !15998
  br label %sw.epilog, !dbg !15999

sw.bb23:                                          ; preds = %for.body
  %29 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16000
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %29, i32 0, i32 14, !dbg !16001
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !16000
  store float* %arraydecay24, float** %col, align 8, !dbg !16002
  br label %sw.epilog, !dbg !16003

sw.bb25:                                          ; preds = %for.body
  %30 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16004
  %nor = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %30, i32 0, i32 15, !dbg !16005
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16004
  store float* %arraydecay26, float** %col, align 8, !dbg !16006
  br label %sw.epilog, !dbg !16007

sw.bb27:                                          ; preds = %for.body
  %31 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16008
  %mist = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %31, i32 0, i32 3, !dbg !16009
  store float* %mist, float** %col, align 8, !dbg !16010
  store i32 1, i32* %pixsize, align 4, !dbg !16011
  br label %sw.epilog, !dbg !16012

sw.epilog:                                        ; preds = %for.body, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb2, %if.end
  %32 = load float*, float** %col, align 8, !dbg !16013
  %tobool28 = icmp ne float* %32, null, !dbg !16013
  br i1 %tobool28, label %if.then29, label %if.end52, !dbg !16015

if.then29:                                        ; preds = %sw.epilog
  %33 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !16016
  %rect30 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %33, i32 0, i32 6, !dbg !16018
  %34 = load float*, float** %rect30, align 8, !dbg !16018
  %35 = load i32, i32* %pixsize, align 4, !dbg !16019
  %36 = load i32, i32* %offset.addr, align 4, !dbg !16020
  %mul31 = mul nsw i32 %35, %36, !dbg !16021
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !16022
  %add.ptr33 = getelementptr inbounds float, float* %34, i64 %idx.ext32, !dbg !16022
  store float* %add.ptr33, float** %fp, align 8, !dbg !16023
  %37 = load float*, float** %col, align 8, !dbg !16024
  %arrayidx = getelementptr inbounds float, float* %37, i64 0, !dbg !16024
  %38 = load float, float* %arrayidx, align 4, !dbg !16024
  %39 = load float, float* %alpha.addr, align 4, !dbg !16025
  %sub = fsub float 1.000000e+00, %39, !dbg !16026
  %40 = load float*, float** %fp, align 8, !dbg !16027
  %arrayidx34 = getelementptr inbounds float, float* %40, i64 0, !dbg !16027
  %41 = load float, float* %arrayidx34, align 4, !dbg !16027
  %mul35 = fmul float %sub, %41, !dbg !16028
  %add = fadd float %38, %mul35, !dbg !16029
  %42 = load float*, float** %fp, align 8, !dbg !16030
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 0, !dbg !16030
  store float %add, float* %arrayidx36, align 4, !dbg !16031
  %43 = load i32, i32* %pixsize, align 4, !dbg !16032
  %cmp37 = icmp eq i32 %43, 3, !dbg !16034
  br i1 %cmp37, label %if.then38, label %if.end51, !dbg !16035

if.then38:                                        ; preds = %if.then29
  %44 = load float*, float** %col, align 8, !dbg !16036
  %arrayidx39 = getelementptr inbounds float, float* %44, i64 1, !dbg !16036
  %45 = load float, float* %arrayidx39, align 4, !dbg !16036
  %46 = load float, float* %alpha.addr, align 4, !dbg !16038
  %sub40 = fsub float 1.000000e+00, %46, !dbg !16039
  %47 = load float*, float** %fp, align 8, !dbg !16040
  %arrayidx41 = getelementptr inbounds float, float* %47, i64 1, !dbg !16040
  %48 = load float, float* %arrayidx41, align 4, !dbg !16040
  %mul42 = fmul float %sub40, %48, !dbg !16041
  %add43 = fadd float %45, %mul42, !dbg !16042
  %49 = load float*, float** %fp, align 8, !dbg !16043
  %arrayidx44 = getelementptr inbounds float, float* %49, i64 1, !dbg !16043
  store float %add43, float* %arrayidx44, align 4, !dbg !16044
  %50 = load float*, float** %col, align 8, !dbg !16045
  %arrayidx45 = getelementptr inbounds float, float* %50, i64 2, !dbg !16045
  %51 = load float, float* %arrayidx45, align 4, !dbg !16045
  %52 = load float, float* %alpha.addr, align 4, !dbg !16046
  %sub46 = fsub float 1.000000e+00, %52, !dbg !16047
  %53 = load float*, float** %fp, align 8, !dbg !16048
  %arrayidx47 = getelementptr inbounds float, float* %53, i64 2, !dbg !16048
  %54 = load float, float* %arrayidx47, align 4, !dbg !16048
  %mul48 = fmul float %sub46, %54, !dbg !16049
  %add49 = fadd float %51, %mul48, !dbg !16050
  %55 = load float*, float** %fp, align 8, !dbg !16051
  %arrayidx50 = getelementptr inbounds float, float* %55, i64 2, !dbg !16051
  store float %add49, float* %arrayidx50, align 4, !dbg !16052
  br label %if.end51, !dbg !16053

if.end51:                                         ; preds = %if.then38, %if.then29
  br label %if.end52, !dbg !16054

if.end52:                                         ; preds = %if.end51, %sw.epilog
  br label %for.inc, !dbg !16055

for.inc:                                          ; preds = %if.end52
  %56 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !16056
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %56, i32 0, i32 0, !dbg !16057
  %57 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !16057
  store %struct.RenderPass* %57, %struct.RenderPass** %rpass, align 8, !dbg !16058
  br label %for.cond, !dbg !16059, !llvm.loop !16060

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16062
}

declare dso_local void @addAlphaOverFloat(float*, float*) #3

declare dso_local void @add_filt_fmask(i32, float*, float*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @merge_transp_passes(%struct.RenderLayer* %rl, %struct.ShadeResult* %shr) #0 !dbg !16063 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %weight = alloca float, align 4
  %delta = alloca i32, align 4
  %col = alloca float*, align 8
  %pixsize = alloca i32, align 4
  %shr_t = alloca %struct.ShadeResult*, align 8
  %fp = alloca float*, align 8
  %samp = alloca i32, align 4
  %speed = alloca float*, align 8
  %fp130 = alloca float*, align 8
  %samp132 = alloca i32, align 4
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !16066, metadata !DIExpression()), !dbg !16067
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !16068, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !16070, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.declare(metadata float* %weight, metadata !16072, metadata !DIExpression()), !dbg !16073
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !16074
  %conv = sitofp i16 %0 to float, !dbg !16075
  %div = fdiv float 1.000000e+00, %conv, !dbg !16076
  store float %div, float* %weight, align 4, !dbg !16073
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !16077, metadata !DIExpression()), !dbg !16078
  store i32 53, i32* %delta, align 4, !dbg !16078
  %1 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !16079
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %1, i32 0, i32 18, !dbg !16081
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !16082
  %2 = load i8*, i8** %first, align 8, !dbg !16082
  %3 = bitcast i8* %2 to %struct.RenderPass*, !dbg !16079
  store %struct.RenderPass* %3, %struct.RenderPass** %rpass, align 8, !dbg !16083
  br label %for.cond, !dbg !16084

for.cond:                                         ; preds = %for.inc179, %entry
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !16085
  %tobool = icmp ne %struct.RenderPass* %4, null, !dbg !16087
  br i1 %tobool, label %for.body, label %for.end180, !dbg !16087

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %col, metadata !16088, metadata !DIExpression()), !dbg !16090
  store float* null, float** %col, align 8, !dbg !16090
  call void @llvm.dbg.declare(metadata i32* %pixsize, metadata !16091, metadata !DIExpression()), !dbg !16092
  store i32 3, i32* %pixsize, align 4, !dbg !16092
  %5 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !16093
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %5, i32 0, i32 2, !dbg !16094
  %6 = load i32, i32* %passtype, align 8, !dbg !16094
  switch i32 %6, label %sw.epilog [
    i32 4, label %sw.bb
    i32 65536, label %sw.bb2
    i32 8, label %sw.bb4
    i32 16, label %sw.bb6
    i32 32, label %sw.bb8
    i32 64, label %sw.bb10
    i32 131072, label %sw.bb12
    i32 8192, label %sw.bb14
    i32 128, label %sw.bb16
    i32 1024, label %sw.bb18
    i32 256, label %sw.bb20
    i32 16384, label %sw.bb22
    i32 2, label %sw.bb23
    i32 512, label %sw.bb24
  ], !dbg !16095

sw.bb:                                            ; preds = %for.body
  %7 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16096
  %col1 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %7, i32 0, i32 1, !dbg !16098
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col1, i64 0, i64 0, !dbg !16096
  store float* %arraydecay, float** %col, align 8, !dbg !16099
  store i32 4, i32* %pixsize, align 4, !dbg !16100
  br label %sw.epilog, !dbg !16101

sw.bb2:                                           ; preds = %for.body
  %8 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16102
  %emit = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %8, i32 0, i32 5, !dbg !16103
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %emit, i64 0, i64 0, !dbg !16102
  store float* %arraydecay3, float** %col, align 8, !dbg !16104
  br label %sw.epilog, !dbg !16105

sw.bb4:                                           ; preds = %for.body
  %9 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16106
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %9, i32 0, i32 6, !dbg !16107
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !16106
  store float* %arraydecay5, float** %col, align 8, !dbg !16108
  br label %sw.epilog, !dbg !16109

sw.bb6:                                           ; preds = %for.body
  %10 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16110
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %10, i32 0, i32 8, !dbg !16111
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !16110
  store float* %arraydecay7, float** %col, align 8, !dbg !16112
  br label %sw.epilog, !dbg !16113

sw.bb8:                                           ; preds = %for.body
  %11 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16114
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %11, i32 0, i32 9, !dbg !16115
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !16114
  store float* %arraydecay9, float** %col, align 8, !dbg !16116
  br label %sw.epilog, !dbg !16117

sw.bb10:                                          ; preds = %for.body
  %12 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16118
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %12, i32 0, i32 10, !dbg !16119
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !16118
  store float* %arraydecay11, float** %col, align 8, !dbg !16120
  br label %sw.epilog, !dbg !16121

sw.bb12:                                          ; preds = %for.body
  %13 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16122
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %13, i32 0, i32 11, !dbg !16123
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !16122
  store float* %arraydecay13, float** %col, align 8, !dbg !16124
  br label %sw.epilog, !dbg !16125

sw.bb14:                                          ; preds = %for.body
  %14 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16126
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %14, i32 0, i32 12, !dbg !16127
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !16126
  store float* %arraydecay15, float** %col, align 8, !dbg !16128
  br label %sw.epilog, !dbg !16129

sw.bb16:                                          ; preds = %for.body
  %15 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16130
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %15, i32 0, i32 13, !dbg !16131
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !16130
  store float* %arraydecay17, float** %col, align 8, !dbg !16132
  br label %sw.epilog, !dbg !16133

sw.bb18:                                          ; preds = %for.body
  %16 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16134
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %16, i32 0, i32 14, !dbg !16135
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !16134
  store float* %arraydecay19, float** %col, align 8, !dbg !16136
  br label %sw.epilog, !dbg !16137

sw.bb20:                                          ; preds = %for.body
  %17 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16138
  %nor = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %17, i32 0, i32 15, !dbg !16139
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !16138
  store float* %arraydecay21, float** %col, align 8, !dbg !16140
  br label %sw.epilog, !dbg !16141

sw.bb22:                                          ; preds = %for.body
  %18 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16142
  %mist = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %18, i32 0, i32 3, !dbg !16143
  store float* %mist, float** %col, align 8, !dbg !16144
  store i32 1, i32* %pixsize, align 4, !dbg !16145
  br label %sw.epilog, !dbg !16146

sw.bb23:                                          ; preds = %for.body
  %19 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16147
  %z = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %19, i32 0, i32 4, !dbg !16148
  store float* %z, float** %col, align 8, !dbg !16149
  store i32 1, i32* %pixsize, align 4, !dbg !16150
  br label %sw.epilog, !dbg !16151

sw.bb24:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr_t, metadata !16152, metadata !DIExpression()), !dbg !16154
  %20 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16155
  %add.ptr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %20, i64 1, !dbg !16156
  store %struct.ShadeResult* %add.ptr, %struct.ShadeResult** %shr_t, align 8, !dbg !16154
  call void @llvm.dbg.declare(metadata float** %fp, metadata !16157, metadata !DIExpression()), !dbg !16158
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !16159
  %winspeed = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 16, !dbg !16160
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !16159
  store float* %arraydecay25, float** %fp, align 8, !dbg !16158
  call void @llvm.dbg.declare(metadata i32* %samp, metadata !16161, metadata !DIExpression()), !dbg !16162
  store i32 1, i32* %samp, align 4, !dbg !16163
  br label %for.cond26, !dbg !16165

for.cond26:                                       ; preds = %for.inc, %sw.bb24
  %22 = load i32, i32* %samp, align 4, !dbg !16166
  %23 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !16168
  %conv27 = sext i16 %23 to i32, !dbg !16169
  %cmp = icmp slt i32 %22, %conv27, !dbg !16170
  br i1 %cmp, label %for.body29, label %for.end, !dbg !16171

for.body29:                                       ; preds = %for.cond26
  %24 = load %struct.ShadeResult*, %struct.ShadeResult** %shr_t, align 8, !dbg !16172
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %24, i32 0, i32 0, !dbg !16175
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 3, !dbg !16172
  %25 = load float, float* %arrayidx, align 4, !dbg !16172
  %cmp30 = fcmp ogt float %25, 0.000000e+00, !dbg !16176
  br i1 %cmp30, label %if.then, label %if.end127, !dbg !16177

if.then:                                          ; preds = %for.body29
  call void @llvm.dbg.declare(metadata float** %speed, metadata !16178, metadata !DIExpression()), !dbg !16180
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr_t, align 8, !dbg !16181
  %winspeed32 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 16, !dbg !16182
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %winspeed32, i64 0, i64 0, !dbg !16181
  store float* %arraydecay33, float** %speed, align 8, !dbg !16180
  %27 = load float*, float** %speed, align 8, !dbg !16183
  %arrayidx34 = getelementptr inbounds float, float* %27, i64 0, !dbg !16183
  %28 = load float, float* %arrayidx34, align 4, !dbg !16183
  %cmp35 = fcmp olt float %28, 0.000000e+00, !dbg !16183
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !16183

cond.true:                                        ; preds = %if.then
  %29 = load float*, float** %speed, align 8, !dbg !16183
  %arrayidx37 = getelementptr inbounds float, float* %29, i64 0, !dbg !16183
  %30 = load float, float* %arrayidx37, align 4, !dbg !16183
  %fneg = fneg float %30, !dbg !16183
  br label %cond.end, !dbg !16183

cond.false:                                       ; preds = %if.then
  %31 = load float*, float** %speed, align 8, !dbg !16183
  %arrayidx38 = getelementptr inbounds float, float* %31, i64 0, !dbg !16183
  %32 = load float, float* %arrayidx38, align 4, !dbg !16183
  br label %cond.end, !dbg !16183

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %32, %cond.false ], !dbg !16183
  %33 = load float*, float** %speed, align 8, !dbg !16185
  %arrayidx39 = getelementptr inbounds float, float* %33, i64 1, !dbg !16185
  %34 = load float, float* %arrayidx39, align 4, !dbg !16185
  %cmp40 = fcmp olt float %34, 0.000000e+00, !dbg !16185
  br i1 %cmp40, label %cond.true42, label %cond.false45, !dbg !16185

cond.true42:                                      ; preds = %cond.end
  %35 = load float*, float** %speed, align 8, !dbg !16185
  %arrayidx43 = getelementptr inbounds float, float* %35, i64 1, !dbg !16185
  %36 = load float, float* %arrayidx43, align 4, !dbg !16185
  %fneg44 = fneg float %36, !dbg !16185
  br label %cond.end47, !dbg !16185

cond.false45:                                     ; preds = %cond.end
  %37 = load float*, float** %speed, align 8, !dbg !16185
  %arrayidx46 = getelementptr inbounds float, float* %37, i64 1, !dbg !16185
  %38 = load float, float* %arrayidx46, align 4, !dbg !16185
  br label %cond.end47, !dbg !16185

cond.end47:                                       ; preds = %cond.false45, %cond.true42
  %cond48 = phi float [ %fneg44, %cond.true42 ], [ %38, %cond.false45 ], !dbg !16185
  %add = fadd float %cond, %cond48, !dbg !16186
  %39 = load float*, float** %fp, align 8, !dbg !16187
  %arrayidx49 = getelementptr inbounds float, float* %39, i64 0, !dbg !16187
  %40 = load float, float* %arrayidx49, align 4, !dbg !16187
  %cmp50 = fcmp olt float %40, 0.000000e+00, !dbg !16187
  br i1 %cmp50, label %cond.true52, label %cond.false55, !dbg !16187

cond.true52:                                      ; preds = %cond.end47
  %41 = load float*, float** %fp, align 8, !dbg !16187
  %arrayidx53 = getelementptr inbounds float, float* %41, i64 0, !dbg !16187
  %42 = load float, float* %arrayidx53, align 4, !dbg !16187
  %fneg54 = fneg float %42, !dbg !16187
  br label %cond.end57, !dbg !16187

cond.false55:                                     ; preds = %cond.end47
  %43 = load float*, float** %fp, align 8, !dbg !16187
  %arrayidx56 = getelementptr inbounds float, float* %43, i64 0, !dbg !16187
  %44 = load float, float* %arrayidx56, align 4, !dbg !16187
  br label %cond.end57, !dbg !16187

cond.end57:                                       ; preds = %cond.false55, %cond.true52
  %cond58 = phi float [ %fneg54, %cond.true52 ], [ %44, %cond.false55 ], !dbg !16187
  %45 = load float*, float** %fp, align 8, !dbg !16188
  %arrayidx59 = getelementptr inbounds float, float* %45, i64 1, !dbg !16188
  %46 = load float, float* %arrayidx59, align 4, !dbg !16188
  %cmp60 = fcmp olt float %46, 0.000000e+00, !dbg !16188
  br i1 %cmp60, label %cond.true62, label %cond.false65, !dbg !16188

cond.true62:                                      ; preds = %cond.end57
  %47 = load float*, float** %fp, align 8, !dbg !16188
  %arrayidx63 = getelementptr inbounds float, float* %47, i64 1, !dbg !16188
  %48 = load float, float* %arrayidx63, align 4, !dbg !16188
  %fneg64 = fneg float %48, !dbg !16188
  br label %cond.end67, !dbg !16188

cond.false65:                                     ; preds = %cond.end57
  %49 = load float*, float** %fp, align 8, !dbg !16188
  %arrayidx66 = getelementptr inbounds float, float* %49, i64 1, !dbg !16188
  %50 = load float, float* %arrayidx66, align 4, !dbg !16188
  br label %cond.end67, !dbg !16188

cond.end67:                                       ; preds = %cond.false65, %cond.true62
  %cond68 = phi float [ %fneg64, %cond.true62 ], [ %50, %cond.false65 ], !dbg !16188
  %add69 = fadd float %cond58, %cond68, !dbg !16189
  %cmp70 = fcmp olt float %add, %add69, !dbg !16190
  br i1 %cmp70, label %if.then72, label %if.end, !dbg !16191

if.then72:                                        ; preds = %cond.end67
  %51 = load float*, float** %speed, align 8, !dbg !16192
  %arrayidx73 = getelementptr inbounds float, float* %51, i64 0, !dbg !16192
  %52 = load float, float* %arrayidx73, align 4, !dbg !16192
  %53 = load float*, float** %fp, align 8, !dbg !16194
  %arrayidx74 = getelementptr inbounds float, float* %53, i64 0, !dbg !16194
  store float %52, float* %arrayidx74, align 4, !dbg !16195
  %54 = load float*, float** %speed, align 8, !dbg !16196
  %arrayidx75 = getelementptr inbounds float, float* %54, i64 1, !dbg !16196
  %55 = load float, float* %arrayidx75, align 4, !dbg !16196
  %56 = load float*, float** %fp, align 8, !dbg !16197
  %arrayidx76 = getelementptr inbounds float, float* %56, i64 1, !dbg !16197
  store float %55, float* %arrayidx76, align 4, !dbg !16198
  br label %if.end, !dbg !16199

if.end:                                           ; preds = %if.then72, %cond.end67
  %57 = load float*, float** %speed, align 8, !dbg !16200
  %arrayidx77 = getelementptr inbounds float, float* %57, i64 2, !dbg !16200
  %58 = load float, float* %arrayidx77, align 4, !dbg !16200
  %cmp78 = fcmp olt float %58, 0.000000e+00, !dbg !16200
  br i1 %cmp78, label %cond.true80, label %cond.false83, !dbg !16200

cond.true80:                                      ; preds = %if.end
  %59 = load float*, float** %speed, align 8, !dbg !16200
  %arrayidx81 = getelementptr inbounds float, float* %59, i64 2, !dbg !16200
  %60 = load float, float* %arrayidx81, align 4, !dbg !16200
  %fneg82 = fneg float %60, !dbg !16200
  br label %cond.end85, !dbg !16200

cond.false83:                                     ; preds = %if.end
  %61 = load float*, float** %speed, align 8, !dbg !16200
  %arrayidx84 = getelementptr inbounds float, float* %61, i64 2, !dbg !16200
  %62 = load float, float* %arrayidx84, align 4, !dbg !16200
  br label %cond.end85, !dbg !16200

cond.end85:                                       ; preds = %cond.false83, %cond.true80
  %cond86 = phi float [ %fneg82, %cond.true80 ], [ %62, %cond.false83 ], !dbg !16200
  %63 = load float*, float** %speed, align 8, !dbg !16202
  %arrayidx87 = getelementptr inbounds float, float* %63, i64 3, !dbg !16202
  %64 = load float, float* %arrayidx87, align 4, !dbg !16202
  %cmp88 = fcmp olt float %64, 0.000000e+00, !dbg !16202
  br i1 %cmp88, label %cond.true90, label %cond.false93, !dbg !16202

cond.true90:                                      ; preds = %cond.end85
  %65 = load float*, float** %speed, align 8, !dbg !16202
  %arrayidx91 = getelementptr inbounds float, float* %65, i64 3, !dbg !16202
  %66 = load float, float* %arrayidx91, align 4, !dbg !16202
  %fneg92 = fneg float %66, !dbg !16202
  br label %cond.end95, !dbg !16202

cond.false93:                                     ; preds = %cond.end85
  %67 = load float*, float** %speed, align 8, !dbg !16202
  %arrayidx94 = getelementptr inbounds float, float* %67, i64 3, !dbg !16202
  %68 = load float, float* %arrayidx94, align 4, !dbg !16202
  br label %cond.end95, !dbg !16202

cond.end95:                                       ; preds = %cond.false93, %cond.true90
  %cond96 = phi float [ %fneg92, %cond.true90 ], [ %68, %cond.false93 ], !dbg !16202
  %add97 = fadd float %cond86, %cond96, !dbg !16203
  %69 = load float*, float** %fp, align 8, !dbg !16204
  %arrayidx98 = getelementptr inbounds float, float* %69, i64 2, !dbg !16204
  %70 = load float, float* %arrayidx98, align 4, !dbg !16204
  %cmp99 = fcmp olt float %70, 0.000000e+00, !dbg !16204
  br i1 %cmp99, label %cond.true101, label %cond.false104, !dbg !16204

cond.true101:                                     ; preds = %cond.end95
  %71 = load float*, float** %fp, align 8, !dbg !16204
  %arrayidx102 = getelementptr inbounds float, float* %71, i64 2, !dbg !16204
  %72 = load float, float* %arrayidx102, align 4, !dbg !16204
  %fneg103 = fneg float %72, !dbg !16204
  br label %cond.end106, !dbg !16204

cond.false104:                                    ; preds = %cond.end95
  %73 = load float*, float** %fp, align 8, !dbg !16204
  %arrayidx105 = getelementptr inbounds float, float* %73, i64 2, !dbg !16204
  %74 = load float, float* %arrayidx105, align 4, !dbg !16204
  br label %cond.end106, !dbg !16204

cond.end106:                                      ; preds = %cond.false104, %cond.true101
  %cond107 = phi float [ %fneg103, %cond.true101 ], [ %74, %cond.false104 ], !dbg !16204
  %75 = load float*, float** %fp, align 8, !dbg !16205
  %arrayidx108 = getelementptr inbounds float, float* %75, i64 3, !dbg !16205
  %76 = load float, float* %arrayidx108, align 4, !dbg !16205
  %cmp109 = fcmp olt float %76, 0.000000e+00, !dbg !16205
  br i1 %cmp109, label %cond.true111, label %cond.false114, !dbg !16205

cond.true111:                                     ; preds = %cond.end106
  %77 = load float*, float** %fp, align 8, !dbg !16205
  %arrayidx112 = getelementptr inbounds float, float* %77, i64 3, !dbg !16205
  %78 = load float, float* %arrayidx112, align 4, !dbg !16205
  %fneg113 = fneg float %78, !dbg !16205
  br label %cond.end116, !dbg !16205

cond.false114:                                    ; preds = %cond.end106
  %79 = load float*, float** %fp, align 8, !dbg !16205
  %arrayidx115 = getelementptr inbounds float, float* %79, i64 3, !dbg !16205
  %80 = load float, float* %arrayidx115, align 4, !dbg !16205
  br label %cond.end116, !dbg !16205

cond.end116:                                      ; preds = %cond.false114, %cond.true111
  %cond117 = phi float [ %fneg113, %cond.true111 ], [ %80, %cond.false114 ], !dbg !16205
  %add118 = fadd float %cond107, %cond117, !dbg !16206
  %cmp119 = fcmp olt float %add97, %add118, !dbg !16207
  br i1 %cmp119, label %if.then121, label %if.end126, !dbg !16208

if.then121:                                       ; preds = %cond.end116
  %81 = load float*, float** %speed, align 8, !dbg !16209
  %arrayidx122 = getelementptr inbounds float, float* %81, i64 2, !dbg !16209
  %82 = load float, float* %arrayidx122, align 4, !dbg !16209
  %83 = load float*, float** %fp, align 8, !dbg !16211
  %arrayidx123 = getelementptr inbounds float, float* %83, i64 2, !dbg !16211
  store float %82, float* %arrayidx123, align 4, !dbg !16212
  %84 = load float*, float** %speed, align 8, !dbg !16213
  %arrayidx124 = getelementptr inbounds float, float* %84, i64 3, !dbg !16213
  %85 = load float, float* %arrayidx124, align 4, !dbg !16213
  %86 = load float*, float** %fp, align 8, !dbg !16214
  %arrayidx125 = getelementptr inbounds float, float* %86, i64 3, !dbg !16214
  store float %85, float* %arrayidx125, align 4, !dbg !16215
  br label %if.end126, !dbg !16216

if.end126:                                        ; preds = %if.then121, %cond.end116
  br label %if.end127, !dbg !16217

if.end127:                                        ; preds = %if.end126, %for.body29
  br label %for.inc, !dbg !16218

for.inc:                                          ; preds = %if.end127
  %87 = load i32, i32* %samp, align 4, !dbg !16219
  %inc = add nsw i32 %87, 1, !dbg !16219
  store i32 %inc, i32* %samp, align 4, !dbg !16219
  %88 = load %struct.ShadeResult*, %struct.ShadeResult** %shr_t, align 8, !dbg !16220
  %incdec.ptr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %88, i32 1, !dbg !16220
  store %struct.ShadeResult* %incdec.ptr, %struct.ShadeResult** %shr_t, align 8, !dbg !16220
  br label %for.cond26, !dbg !16221, !llvm.loop !16222

for.end:                                          ; preds = %for.cond26
  br label %sw.epilog, !dbg !16224

sw.epilog:                                        ; preds = %for.body, %for.end, %sw.bb23, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %89 = load float*, float** %col, align 8, !dbg !16225
  %tobool128 = icmp ne float* %89, null, !dbg !16225
  br i1 %tobool128, label %if.then129, label %if.end178, !dbg !16227

if.then129:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata float** %fp130, metadata !16228, metadata !DIExpression()), !dbg !16230
  %90 = load float*, float** %col, align 8, !dbg !16231
  %91 = load i32, i32* %delta, align 4, !dbg !16232
  %idx.ext = sext i32 %91 to i64, !dbg !16233
  %add.ptr131 = getelementptr inbounds float, float* %90, i64 %idx.ext, !dbg !16233
  store float* %add.ptr131, float** %fp130, align 8, !dbg !16230
  call void @llvm.dbg.declare(metadata i32* %samp132, metadata !16234, metadata !DIExpression()), !dbg !16235
  store i32 1, i32* %samp132, align 4, !dbg !16236
  br label %for.cond133, !dbg !16238

for.cond133:                                      ; preds = %for.inc158, %if.then129
  %92 = load i32, i32* %samp132, align 4, !dbg !16239
  %93 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !16241
  %conv134 = sext i16 %93 to i32, !dbg !16242
  %cmp135 = icmp slt i32 %92, %conv134, !dbg !16243
  br i1 %cmp135, label %for.body137, label %for.end162, !dbg !16244

for.body137:                                      ; preds = %for.cond133
  %94 = load float*, float** %fp130, align 8, !dbg !16245
  %arrayidx138 = getelementptr inbounds float, float* %94, i64 0, !dbg !16245
  %95 = load float, float* %arrayidx138, align 4, !dbg !16245
  %96 = load float*, float** %col, align 8, !dbg !16247
  %arrayidx139 = getelementptr inbounds float, float* %96, i64 0, !dbg !16247
  %97 = load float, float* %arrayidx139, align 4, !dbg !16248
  %add140 = fadd float %97, %95, !dbg !16248
  store float %add140, float* %arrayidx139, align 4, !dbg !16248
  %98 = load i32, i32* %pixsize, align 4, !dbg !16249
  %cmp141 = icmp sgt i32 %98, 1, !dbg !16251
  br i1 %cmp141, label %if.then143, label %if.end157, !dbg !16252

if.then143:                                       ; preds = %for.body137
  %99 = load float*, float** %fp130, align 8, !dbg !16253
  %arrayidx144 = getelementptr inbounds float, float* %99, i64 1, !dbg !16253
  %100 = load float, float* %arrayidx144, align 4, !dbg !16253
  %101 = load float*, float** %col, align 8, !dbg !16255
  %arrayidx145 = getelementptr inbounds float, float* %101, i64 1, !dbg !16255
  %102 = load float, float* %arrayidx145, align 4, !dbg !16256
  %add146 = fadd float %102, %100, !dbg !16256
  store float %add146, float* %arrayidx145, align 4, !dbg !16256
  %103 = load float*, float** %fp130, align 8, !dbg !16257
  %arrayidx147 = getelementptr inbounds float, float* %103, i64 2, !dbg !16257
  %104 = load float, float* %arrayidx147, align 4, !dbg !16257
  %105 = load float*, float** %col, align 8, !dbg !16258
  %arrayidx148 = getelementptr inbounds float, float* %105, i64 2, !dbg !16258
  %106 = load float, float* %arrayidx148, align 4, !dbg !16259
  %add149 = fadd float %106, %104, !dbg !16259
  store float %add149, float* %arrayidx148, align 4, !dbg !16259
  %107 = load i32, i32* %pixsize, align 4, !dbg !16260
  %cmp150 = icmp eq i32 %107, 4, !dbg !16262
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !16263

if.then152:                                       ; preds = %if.then143
  %108 = load float*, float** %fp130, align 8, !dbg !16264
  %arrayidx153 = getelementptr inbounds float, float* %108, i64 3, !dbg !16264
  %109 = load float, float* %arrayidx153, align 4, !dbg !16264
  %110 = load float*, float** %col, align 8, !dbg !16265
  %arrayidx154 = getelementptr inbounds float, float* %110, i64 3, !dbg !16265
  %111 = load float, float* %arrayidx154, align 4, !dbg !16266
  %add155 = fadd float %111, %109, !dbg !16266
  store float %add155, float* %arrayidx154, align 4, !dbg !16266
  br label %if.end156, !dbg !16265

if.end156:                                        ; preds = %if.then152, %if.then143
  br label %if.end157, !dbg !16267

if.end157:                                        ; preds = %if.end156, %for.body137
  br label %for.inc158, !dbg !16268

for.inc158:                                       ; preds = %if.end157
  %112 = load i32, i32* %samp132, align 4, !dbg !16269
  %inc159 = add nsw i32 %112, 1, !dbg !16269
  store i32 %inc159, i32* %samp132, align 4, !dbg !16269
  %113 = load i32, i32* %delta, align 4, !dbg !16270
  %114 = load float*, float** %fp130, align 8, !dbg !16271
  %idx.ext160 = sext i32 %113 to i64, !dbg !16271
  %add.ptr161 = getelementptr inbounds float, float* %114, i64 %idx.ext160, !dbg !16271
  store float* %add.ptr161, float** %fp130, align 8, !dbg !16271
  br label %for.cond133, !dbg !16272, !llvm.loop !16273

for.end162:                                       ; preds = %for.cond133
  %115 = load float, float* %weight, align 4, !dbg !16275
  %116 = load float*, float** %col, align 8, !dbg !16276
  %arrayidx163 = getelementptr inbounds float, float* %116, i64 0, !dbg !16276
  %117 = load float, float* %arrayidx163, align 4, !dbg !16277
  %mul = fmul float %117, %115, !dbg !16277
  store float %mul, float* %arrayidx163, align 4, !dbg !16277
  %118 = load i32, i32* %pixsize, align 4, !dbg !16278
  %cmp164 = icmp sgt i32 %118, 1, !dbg !16280
  br i1 %cmp164, label %if.then166, label %if.end177, !dbg !16281

if.then166:                                       ; preds = %for.end162
  %119 = load float, float* %weight, align 4, !dbg !16282
  %120 = load float*, float** %col, align 8, !dbg !16284
  %arrayidx167 = getelementptr inbounds float, float* %120, i64 1, !dbg !16284
  %121 = load float, float* %arrayidx167, align 4, !dbg !16285
  %mul168 = fmul float %121, %119, !dbg !16285
  store float %mul168, float* %arrayidx167, align 4, !dbg !16285
  %122 = load float, float* %weight, align 4, !dbg !16286
  %123 = load float*, float** %col, align 8, !dbg !16287
  %arrayidx169 = getelementptr inbounds float, float* %123, i64 2, !dbg !16287
  %124 = load float, float* %arrayidx169, align 4, !dbg !16288
  %mul170 = fmul float %124, %122, !dbg !16288
  store float %mul170, float* %arrayidx169, align 4, !dbg !16288
  %125 = load i32, i32* %pixsize, align 4, !dbg !16289
  %cmp171 = icmp eq i32 %125, 4, !dbg !16291
  br i1 %cmp171, label %if.then173, label %if.end176, !dbg !16292

if.then173:                                       ; preds = %if.then166
  %126 = load float, float* %weight, align 4, !dbg !16293
  %127 = load float*, float** %col, align 8, !dbg !16294
  %arrayidx174 = getelementptr inbounds float, float* %127, i64 3, !dbg !16294
  %128 = load float, float* %arrayidx174, align 4, !dbg !16295
  %mul175 = fmul float %128, %126, !dbg !16295
  store float %mul175, float* %arrayidx174, align 4, !dbg !16295
  br label %if.end176, !dbg !16294

if.end176:                                        ; preds = %if.then173, %if.then166
  br label %if.end177, !dbg !16296

if.end177:                                        ; preds = %if.end176, %for.end162
  br label %if.end178, !dbg !16297

if.end178:                                        ; preds = %if.end177, %sw.epilog
  br label %for.inc179, !dbg !16298

for.inc179:                                       ; preds = %if.end178
  %129 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !16299
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %129, i32 0, i32 0, !dbg !16300
  %130 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !16300
  store %struct.RenderPass* %130, %struct.RenderPass** %rpass, align 8, !dbg !16301
  br label %for.cond, !dbg !16302, !llvm.loop !16303

for.end180:                                       ; preds = %for.cond
  ret void, !dbg !16305
}

declare dso_local void @ISB_free(%struct.RenderPart*) #3

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @cliptestf(float %a, float %b, float %c, float %d, float* %u1, float* %u2) #0 !dbg !16306 {
entry:
  %retval = alloca i16, align 2
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  %d.addr = alloca float, align 4
  %u1.addr = alloca float*, align 8
  %u2.addr = alloca float*, align 8
  %p = alloca float, align 4
  %q = alloca float, align 4
  %r = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16309, metadata !DIExpression()), !dbg !16310
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !16311, metadata !DIExpression()), !dbg !16312
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !16313, metadata !DIExpression()), !dbg !16314
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !16315, metadata !DIExpression()), !dbg !16316
  store float* %u1, float** %u1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %u1.addr, metadata !16317, metadata !DIExpression()), !dbg !16318
  store float* %u2, float** %u2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %u2.addr, metadata !16319, metadata !DIExpression()), !dbg !16320
  call void @llvm.dbg.declare(metadata float* %p, metadata !16321, metadata !DIExpression()), !dbg !16322
  %0 = load float, float* %a.addr, align 4, !dbg !16323
  %1 = load float, float* %b.addr, align 4, !dbg !16324
  %add = fadd float %0, %1, !dbg !16325
  store float %add, float* %p, align 4, !dbg !16322
  call void @llvm.dbg.declare(metadata float* %q, metadata !16326, metadata !DIExpression()), !dbg !16327
  %2 = load float, float* %c.addr, align 4, !dbg !16328
  %3 = load float, float* %d.addr, align 4, !dbg !16329
  %add1 = fadd float %2, %3, !dbg !16330
  store float %add1, float* %q, align 4, !dbg !16327
  call void @llvm.dbg.declare(metadata float* %r, metadata !16331, metadata !DIExpression()), !dbg !16332
  %4 = load float, float* %p, align 4, !dbg !16333
  %cmp = fcmp olt float %4, 0.000000e+00, !dbg !16335
  br i1 %cmp, label %if.then, label %if.else14, !dbg !16336

if.then:                                          ; preds = %entry
  %5 = load float, float* %q, align 4, !dbg !16337
  %6 = load float, float* %p, align 4, !dbg !16340
  %cmp2 = fcmp olt float %5, %6, !dbg !16341
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !16342

if.then3:                                         ; preds = %if.then
  store i16 0, i16* %retval, align 2, !dbg !16343
  br label %return, !dbg !16343

if.else:                                          ; preds = %if.then
  %7 = load float, float* %q, align 4, !dbg !16344
  %cmp4 = fcmp olt float %7, 0.000000e+00, !dbg !16346
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !16347

if.then5:                                         ; preds = %if.else
  %8 = load float, float* %q, align 4, !dbg !16348
  %9 = load float, float* %p, align 4, !dbg !16350
  %div = fdiv float %8, %9, !dbg !16351
  store float %div, float* %r, align 4, !dbg !16352
  %10 = load float, float* %r, align 4, !dbg !16353
  %11 = load float*, float** %u2.addr, align 8, !dbg !16355
  %12 = load float, float* %11, align 4, !dbg !16356
  %cmp6 = fcmp ogt float %10, %12, !dbg !16357
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !16358

if.then7:                                         ; preds = %if.then5
  store i16 0, i16* %retval, align 2, !dbg !16359
  br label %return, !dbg !16359

if.else8:                                         ; preds = %if.then5
  %13 = load float, float* %r, align 4, !dbg !16360
  %14 = load float*, float** %u1.addr, align 8, !dbg !16362
  %15 = load float, float* %14, align 4, !dbg !16363
  %cmp9 = fcmp ogt float %13, %15, !dbg !16364
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !16365

if.then10:                                        ; preds = %if.else8
  %16 = load float, float* %r, align 4, !dbg !16366
  %17 = load float*, float** %u1.addr, align 8, !dbg !16367
  store float %16, float* %17, align 4, !dbg !16368
  br label %if.end, !dbg !16369

if.end:                                           ; preds = %if.then10, %if.else8
  br label %if.end11

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !16370

if.end12:                                         ; preds = %if.end11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  br label %if.end37, !dbg !16371

if.else14:                                        ; preds = %entry
  %18 = load float, float* %p, align 4, !dbg !16372
  %cmp15 = fcmp ogt float %18, 0.000000e+00, !dbg !16375
  br i1 %cmp15, label %if.then16, label %if.else32, !dbg !16376

if.then16:                                        ; preds = %if.else14
  %19 = load float, float* %q, align 4, !dbg !16377
  %cmp17 = fcmp olt float %19, 0.000000e+00, !dbg !16380
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !16381

if.then18:                                        ; preds = %if.then16
  store i16 0, i16* %retval, align 2, !dbg !16382
  br label %return, !dbg !16382

if.else19:                                        ; preds = %if.then16
  %20 = load float, float* %q, align 4, !dbg !16383
  %21 = load float, float* %p, align 4, !dbg !16385
  %cmp20 = fcmp olt float %20, %21, !dbg !16386
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !16387

if.then21:                                        ; preds = %if.else19
  %22 = load float, float* %q, align 4, !dbg !16388
  %23 = load float, float* %p, align 4, !dbg !16390
  %div22 = fdiv float %22, %23, !dbg !16391
  store float %div22, float* %r, align 4, !dbg !16392
  %24 = load float, float* %r, align 4, !dbg !16393
  %25 = load float*, float** %u1.addr, align 8, !dbg !16395
  %26 = load float, float* %25, align 4, !dbg !16396
  %cmp23 = fcmp olt float %24, %26, !dbg !16397
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !16398

if.then24:                                        ; preds = %if.then21
  store i16 0, i16* %retval, align 2, !dbg !16399
  br label %return, !dbg !16399

if.else25:                                        ; preds = %if.then21
  %27 = load float, float* %r, align 4, !dbg !16400
  %28 = load float*, float** %u2.addr, align 8, !dbg !16402
  %29 = load float, float* %28, align 4, !dbg !16403
  %cmp26 = fcmp olt float %27, %29, !dbg !16404
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !16405

if.then27:                                        ; preds = %if.else25
  %30 = load float, float* %r, align 4, !dbg !16406
  %31 = load float*, float** %u2.addr, align 8, !dbg !16407
  store float %30, float* %31, align 4, !dbg !16408
  br label %if.end28, !dbg !16409

if.end28:                                         ; preds = %if.then27, %if.else25
  br label %if.end29

if.end29:                                         ; preds = %if.end28
  br label %if.end30, !dbg !16410

if.end30:                                         ; preds = %if.end29, %if.else19
  br label %if.end31

if.end31:                                         ; preds = %if.end30
  br label %if.end36, !dbg !16411

if.else32:                                        ; preds = %if.else14
  %32 = load float, float* %q, align 4, !dbg !16412
  %cmp33 = fcmp olt float %32, 0.000000e+00, !dbg !16414
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !16415

if.then34:                                        ; preds = %if.else32
  store i16 0, i16* %retval, align 2, !dbg !16416
  br label %return, !dbg !16416

if.end35:                                         ; preds = %if.else32
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end13
  store i16 1, i16* %retval, align 2, !dbg !16417
  br label %return, !dbg !16417

return:                                           ; preds = %if.end37, %if.then34, %if.then24, %if.then18, %if.then7, %if.then3
  %33 = load i16, i16* %retval, align 2, !dbg !16418
  ret i16 %33, !dbg !16418
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !16419 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16423, metadata !DIExpression()), !dbg !16424
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !16425, metadata !DIExpression()), !dbg !16426
  %0 = load float, float* %a.addr, align 4, !dbg !16427
  %1 = load float, float* %b.addr, align 4, !dbg !16428
  %cmp = fcmp olt float %0, %1, !dbg !16429
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16430

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !16431
  br label %cond.end, !dbg !16430

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !16432
  br label %cond.end, !dbg !16430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !16430
  ret float %cond, !dbg !16433
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuffillAc4(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %v1, float* %v2, float* %v3, float* %v4) #0 !dbg !16434 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %ap = alloca %struct.APixstr*, align 8
  %apofs = alloca %struct.APixstr*, align 8
  %apn = alloca %struct.APixstr*, align 8
  %zxd = alloca double, align 8
  %zyd = alloca double, align 8
  %zy0 = alloca double, align 8
  %zverg = alloca double, align 8
  %x0 = alloca float, align 4
  %y0 = alloca float, align 4
  %z0 = alloca float, align 4
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  %z1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y2 = alloca float, align 4
  %z2 = alloca float, align 4
  %xx1 = alloca float, align 4
  %span1 = alloca float*, align 8
  %span2 = alloca float*, align 8
  %rz = alloca i32*, align 8
  %rm = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sn1 = alloca i32, align 4
  %sn2 = alloca i32, align 4
  %rectx = alloca i32, align 4
  %rectzofs = alloca i32*, align 8
  %rectmaskofs = alloca i32*, align 8
  %my0 = alloca i32, align 4
  %my2 = alloca i32, align 4
  %mask = alloca i32, align 4
  %intzverg = alloca i32, align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !16435, metadata !DIExpression()), !dbg !16436
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !16437, metadata !DIExpression()), !dbg !16438
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !16439, metadata !DIExpression()), !dbg !16440
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !16441, metadata !DIExpression()), !dbg !16442
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !16443, metadata !DIExpression()), !dbg !16444
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !16445, metadata !DIExpression()), !dbg !16446
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !16447, metadata !DIExpression()), !dbg !16448
  call void @llvm.dbg.declare(metadata %struct.APixstr** %ap, metadata !16449, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apofs, metadata !16451, metadata !DIExpression()), !dbg !16452
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn, metadata !16453, metadata !DIExpression()), !dbg !16454
  call void @llvm.dbg.declare(metadata double* %zxd, metadata !16455, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.declare(metadata double* %zyd, metadata !16457, metadata !DIExpression()), !dbg !16458
  call void @llvm.dbg.declare(metadata double* %zy0, metadata !16459, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.declare(metadata double* %zverg, metadata !16461, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.declare(metadata float* %x0, metadata !16463, metadata !DIExpression()), !dbg !16464
  call void @llvm.dbg.declare(metadata float* %y0, metadata !16465, metadata !DIExpression()), !dbg !16466
  call void @llvm.dbg.declare(metadata float* %z0, metadata !16467, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.declare(metadata float* %x1, metadata !16469, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.declare(metadata float* %y1, metadata !16471, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.declare(metadata float* %z1, metadata !16473, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.declare(metadata float* %x2, metadata !16475, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.declare(metadata float* %y2, metadata !16477, metadata !DIExpression()), !dbg !16478
  call void @llvm.dbg.declare(metadata float* %z2, metadata !16479, metadata !DIExpression()), !dbg !16480
  call void @llvm.dbg.declare(metadata float* %xx1, metadata !16481, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.declare(metadata float** %span1, metadata !16483, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.declare(metadata float** %span2, metadata !16485, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !16487, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.declare(metadata i32** %rm, metadata !16489, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.declare(metadata i32* %x, metadata !16491, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.declare(metadata i32* %y, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.declare(metadata i32* %sn1, metadata !16495, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.declare(metadata i32* %sn2, metadata !16497, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.declare(metadata i32* %rectx, metadata !16499, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.declare(metadata i32** %rectzofs, metadata !16501, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.declare(metadata i32** %rectmaskofs, metadata !16503, metadata !DIExpression()), !dbg !16504
  call void @llvm.dbg.declare(metadata i32* %my0, metadata !16505, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.declare(metadata i32* %my2, metadata !16507, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !16509, metadata !DIExpression()), !dbg !16510
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16511
  call void @zbuf_init_span(%struct.ZSpan* %0), !dbg !16512
  %1 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16513
  %2 = load float*, float** %v1.addr, align 8, !dbg !16514
  %3 = load float*, float** %v2.addr, align 8, !dbg !16515
  call void @zbuf_add_to_span(%struct.ZSpan* %1, float* %2, float* %3), !dbg !16516
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16517
  %5 = load float*, float** %v2.addr, align 8, !dbg !16518
  %6 = load float*, float** %v3.addr, align 8, !dbg !16519
  call void @zbuf_add_to_span(%struct.ZSpan* %4, float* %5, float* %6), !dbg !16520
  %7 = load float*, float** %v4.addr, align 8, !dbg !16521
  %tobool = icmp ne float* %7, null, !dbg !16521
  br i1 %tobool, label %if.then, label %if.else, !dbg !16523

if.then:                                          ; preds = %entry
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16524
  %9 = load float*, float** %v3.addr, align 8, !dbg !16526
  %10 = load float*, float** %v4.addr, align 8, !dbg !16527
  call void @zbuf_add_to_span(%struct.ZSpan* %8, float* %9, float* %10), !dbg !16528
  %11 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16529
  %12 = load float*, float** %v4.addr, align 8, !dbg !16530
  %13 = load float*, float** %v1.addr, align 8, !dbg !16531
  call void @zbuf_add_to_span(%struct.ZSpan* %11, float* %12, float* %13), !dbg !16532
  br label %if.end, !dbg !16533

if.else:                                          ; preds = %entry
  %14 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16534
  %15 = load float*, float** %v3.addr, align 8, !dbg !16535
  %16 = load float*, float** %v1.addr, align 8, !dbg !16536
  call void @zbuf_add_to_span(%struct.ZSpan* %14, float* %15, float* %16), !dbg !16537
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16538
  %minp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %17, i32 0, i32 8, !dbg !16540
  %18 = load float*, float** %minp2, align 8, !dbg !16540
  %cmp = icmp eq float* %18, null, !dbg !16541
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !16542

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16543
  %maxp2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %19, i32 0, i32 9, !dbg !16544
  %20 = load float*, float** %maxp2, align 8, !dbg !16544
  %cmp1 = icmp eq float* %20, null, !dbg !16545
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16546

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end, !dbg !16547

if.end3:                                          ; preds = %lor.lhs.false
  %21 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16548
  %miny1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %21, i32 0, i32 2, !dbg !16550
  %22 = load i32, i32* %miny1, align 8, !dbg !16550
  %23 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16551
  %miny2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %23, i32 0, i32 4, !dbg !16552
  %24 = load i32, i32* %miny2, align 8, !dbg !16552
  %cmp4 = icmp slt i32 %22, %24, !dbg !16553
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !16554

if.then5:                                         ; preds = %if.end3
  %25 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16555
  %miny26 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %25, i32 0, i32 4, !dbg !16556
  %26 = load i32, i32* %miny26, align 8, !dbg !16556
  store i32 %26, i32* %my0, align 4, !dbg !16557
  br label %if.end9, !dbg !16558

if.else7:                                         ; preds = %if.end3
  %27 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16559
  %miny18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %27, i32 0, i32 2, !dbg !16560
  %28 = load i32, i32* %miny18, align 8, !dbg !16560
  store i32 %28, i32* %my0, align 4, !dbg !16561
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %29 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16562
  %maxy1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %29, i32 0, i32 3, !dbg !16564
  %30 = load i32, i32* %maxy1, align 4, !dbg !16564
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16565
  %maxy2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 5, !dbg !16566
  %32 = load i32, i32* %maxy2, align 4, !dbg !16566
  %cmp10 = icmp sgt i32 %30, %32, !dbg !16567
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !16568

if.then11:                                        ; preds = %if.end9
  %33 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16569
  %maxy212 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %33, i32 0, i32 5, !dbg !16570
  %34 = load i32, i32* %maxy212, align 4, !dbg !16570
  store i32 %34, i32* %my2, align 4, !dbg !16571
  br label %if.end15, !dbg !16572

if.else13:                                        ; preds = %if.end9
  %35 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16573
  %maxy114 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %35, i32 0, i32 3, !dbg !16574
  %36 = load i32, i32* %maxy114, align 4, !dbg !16574
  store i32 %36, i32* %my2, align 4, !dbg !16575
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %37 = load i32, i32* %my2, align 4, !dbg !16576
  %38 = load i32, i32* %my0, align 4, !dbg !16578
  %cmp16 = icmp slt i32 %37, %38, !dbg !16579
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16580

if.then17:                                        ; preds = %if.end15
  br label %for.end, !dbg !16581

if.end18:                                         ; preds = %if.end15
  %39 = load float*, float** %v1.addr, align 8, !dbg !16582
  %arrayidx = getelementptr inbounds float, float* %39, i64 0, !dbg !16582
  %40 = load float, float* %arrayidx, align 4, !dbg !16582
  %41 = load float*, float** %v2.addr, align 8, !dbg !16583
  %arrayidx19 = getelementptr inbounds float, float* %41, i64 0, !dbg !16583
  %42 = load float, float* %arrayidx19, align 4, !dbg !16583
  %sub = fsub float %40, %42, !dbg !16584
  store float %sub, float* %x1, align 4, !dbg !16585
  %43 = load float*, float** %v2.addr, align 8, !dbg !16586
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !16586
  %44 = load float, float* %arrayidx20, align 4, !dbg !16586
  %45 = load float*, float** %v3.addr, align 8, !dbg !16587
  %arrayidx21 = getelementptr inbounds float, float* %45, i64 0, !dbg !16587
  %46 = load float, float* %arrayidx21, align 4, !dbg !16587
  %sub22 = fsub float %44, %46, !dbg !16588
  store float %sub22, float* %x2, align 4, !dbg !16589
  %47 = load float*, float** %v1.addr, align 8, !dbg !16590
  %arrayidx23 = getelementptr inbounds float, float* %47, i64 1, !dbg !16590
  %48 = load float, float* %arrayidx23, align 4, !dbg !16590
  %49 = load float*, float** %v2.addr, align 8, !dbg !16591
  %arrayidx24 = getelementptr inbounds float, float* %49, i64 1, !dbg !16591
  %50 = load float, float* %arrayidx24, align 4, !dbg !16591
  %sub25 = fsub float %48, %50, !dbg !16592
  store float %sub25, float* %y1, align 4, !dbg !16593
  %51 = load float*, float** %v2.addr, align 8, !dbg !16594
  %arrayidx26 = getelementptr inbounds float, float* %51, i64 1, !dbg !16594
  %52 = load float, float* %arrayidx26, align 4, !dbg !16594
  %53 = load float*, float** %v3.addr, align 8, !dbg !16595
  %arrayidx27 = getelementptr inbounds float, float* %53, i64 1, !dbg !16595
  %54 = load float, float* %arrayidx27, align 4, !dbg !16595
  %sub28 = fsub float %52, %54, !dbg !16596
  store float %sub28, float* %y2, align 4, !dbg !16597
  %55 = load float*, float** %v1.addr, align 8, !dbg !16598
  %arrayidx29 = getelementptr inbounds float, float* %55, i64 2, !dbg !16598
  %56 = load float, float* %arrayidx29, align 4, !dbg !16598
  %57 = load float*, float** %v2.addr, align 8, !dbg !16599
  %arrayidx30 = getelementptr inbounds float, float* %57, i64 2, !dbg !16599
  %58 = load float, float* %arrayidx30, align 4, !dbg !16599
  %sub31 = fsub float %56, %58, !dbg !16600
  store float %sub31, float* %z1, align 4, !dbg !16601
  %59 = load float*, float** %v2.addr, align 8, !dbg !16602
  %arrayidx32 = getelementptr inbounds float, float* %59, i64 2, !dbg !16602
  %60 = load float, float* %arrayidx32, align 4, !dbg !16602
  %61 = load float*, float** %v3.addr, align 8, !dbg !16603
  %arrayidx33 = getelementptr inbounds float, float* %61, i64 2, !dbg !16603
  %62 = load float, float* %arrayidx33, align 4, !dbg !16603
  %sub34 = fsub float %60, %62, !dbg !16604
  store float %sub34, float* %z2, align 4, !dbg !16605
  %63 = load float, float* %y1, align 4, !dbg !16606
  %64 = load float, float* %z2, align 4, !dbg !16607
  %mul = fmul float %63, %64, !dbg !16608
  %65 = load float, float* %z1, align 4, !dbg !16609
  %66 = load float, float* %y2, align 4, !dbg !16610
  %mul35 = fmul float %65, %66, !dbg !16611
  %sub36 = fsub float %mul, %mul35, !dbg !16612
  store float %sub36, float* %x0, align 4, !dbg !16613
  %67 = load float, float* %z1, align 4, !dbg !16614
  %68 = load float, float* %x2, align 4, !dbg !16615
  %mul37 = fmul float %67, %68, !dbg !16616
  %69 = load float, float* %x1, align 4, !dbg !16617
  %70 = load float, float* %z2, align 4, !dbg !16618
  %mul38 = fmul float %69, %70, !dbg !16619
  %sub39 = fsub float %mul37, %mul38, !dbg !16620
  store float %sub39, float* %y0, align 4, !dbg !16621
  %71 = load float, float* %x1, align 4, !dbg !16622
  %72 = load float, float* %y2, align 4, !dbg !16623
  %mul40 = fmul float %71, %72, !dbg !16624
  %73 = load float, float* %y1, align 4, !dbg !16625
  %74 = load float, float* %x2, align 4, !dbg !16626
  %mul41 = fmul float %73, %74, !dbg !16627
  %sub42 = fsub float %mul40, %mul41, !dbg !16628
  store float %sub42, float* %z0, align 4, !dbg !16629
  %75 = load float, float* %z0, align 4, !dbg !16630
  %cmp43 = fcmp oeq float %75, 0.000000e+00, !dbg !16632
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !16633

if.then44:                                        ; preds = %if.end18
  br label %for.end, !dbg !16634

if.end45:                                         ; preds = %if.end18
  %76 = load float, float* %x0, align 4, !dbg !16635
  %77 = load float*, float** %v1.addr, align 8, !dbg !16636
  %arrayidx46 = getelementptr inbounds float, float* %77, i64 0, !dbg !16636
  %78 = load float, float* %arrayidx46, align 4, !dbg !16636
  %mul47 = fmul float %76, %78, !dbg !16637
  %79 = load float, float* %y0, align 4, !dbg !16638
  %80 = load float*, float** %v1.addr, align 8, !dbg !16639
  %arrayidx48 = getelementptr inbounds float, float* %80, i64 1, !dbg !16639
  %81 = load float, float* %arrayidx48, align 4, !dbg !16639
  %mul49 = fmul float %79, %81, !dbg !16640
  %add = fadd float %mul47, %mul49, !dbg !16641
  %82 = load float, float* %z0, align 4, !dbg !16642
  %div = fdiv float %add, %82, !dbg !16643
  %83 = load float*, float** %v1.addr, align 8, !dbg !16644
  %arrayidx50 = getelementptr inbounds float, float* %83, i64 2, !dbg !16644
  %84 = load float, float* %arrayidx50, align 4, !dbg !16644
  %add51 = fadd float %div, %84, !dbg !16645
  store float %add51, float* %xx1, align 4, !dbg !16646
  %85 = load float, float* %x0, align 4, !dbg !16647
  %conv = fpext float %85 to double, !dbg !16648
  %fneg = fneg double %conv, !dbg !16649
  %86 = load float, float* %z0, align 4, !dbg !16650
  %conv52 = fpext float %86 to double, !dbg !16651
  %div53 = fdiv double %fneg, %conv52, !dbg !16652
  store double %div53, double* %zxd, align 8, !dbg !16653
  %87 = load float, float* %y0, align 4, !dbg !16654
  %conv54 = fpext float %87 to double, !dbg !16655
  %fneg55 = fneg double %conv54, !dbg !16656
  %88 = load float, float* %z0, align 4, !dbg !16657
  %conv56 = fpext float %88 to double, !dbg !16658
  %div57 = fdiv double %fneg55, %conv56, !dbg !16659
  store double %div57, double* %zyd, align 8, !dbg !16660
  %89 = load i32, i32* %my2, align 4, !dbg !16661
  %conv58 = sitofp i32 %89 to double, !dbg !16662
  %90 = load double, double* %zyd, align 8, !dbg !16663
  %mul59 = fmul double %conv58, %90, !dbg !16664
  %91 = load float, float* %xx1, align 4, !dbg !16665
  %conv60 = fpext float %91 to double, !dbg !16666
  %add61 = fadd double %mul59, %conv60, !dbg !16667
  store double %add61, double* %zy0, align 8, !dbg !16668
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16669
  %rectx62 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 0, !dbg !16670
  %93 = load i32, i32* %rectx62, align 8, !dbg !16670
  store i32 %93, i32* %rectx, align 4, !dbg !16671
  %94 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16672
  %arectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %94, i32 0, i32 17, !dbg !16673
  %95 = load i32*, i32** %arectz, align 8, !dbg !16673
  %96 = load i32, i32* %rectx, align 4, !dbg !16674
  %97 = load i32, i32* %my2, align 4, !dbg !16675
  %mul63 = mul nsw i32 %96, %97, !dbg !16676
  %idx.ext = sext i32 %mul63 to i64, !dbg !16677
  %add.ptr = getelementptr inbounds i32, i32* %95, i64 %idx.ext, !dbg !16677
  store i32* %add.ptr, i32** %rectzofs, align 8, !dbg !16678
  %98 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16679
  %rectmask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %98, i32 0, i32 21, !dbg !16680
  %99 = load i32*, i32** %rectmask, align 8, !dbg !16680
  %100 = load i32, i32* %rectx, align 4, !dbg !16681
  %101 = load i32, i32* %my2, align 4, !dbg !16682
  %mul64 = mul nsw i32 %100, %101, !dbg !16683
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !16684
  %add.ptr66 = getelementptr inbounds i32, i32* %99, i64 %idx.ext65, !dbg !16684
  store i32* %add.ptr66, i32** %rectmaskofs, align 8, !dbg !16685
  %102 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16686
  %apixbuf = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %102, i32 0, i32 22, !dbg !16687
  %103 = load %struct.APixstr*, %struct.APixstr** %apixbuf, align 8, !dbg !16687
  %104 = load i32, i32* %rectx, align 4, !dbg !16688
  %105 = load i32, i32* %my2, align 4, !dbg !16689
  %mul67 = mul nsw i32 %104, %105, !dbg !16690
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !16691
  %add.ptr69 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %103, i64 %idx.ext68, !dbg !16691
  store %struct.APixstr* %add.ptr69, %struct.APixstr** %apofs, align 8, !dbg !16692
  %106 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16693
  %mask70 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %106, i32 0, i32 28, !dbg !16694
  %107 = load i32, i32* %mask70, align 8, !dbg !16694
  store i32 %107, i32* %mask, align 4, !dbg !16695
  %108 = load i32, i32* %my0, align 4, !dbg !16696
  %109 = load i32, i32* %my2, align 4, !dbg !16697
  %add71 = add nsw i32 %108, %109, !dbg !16698
  %div72 = sdiv i32 %add71, 2, !dbg !16699
  store i32 %div72, i32* %sn1, align 4, !dbg !16700
  %110 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16701
  %span173 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %110, i32 0, i32 10, !dbg !16703
  %111 = load float*, float** %span173, align 8, !dbg !16703
  %112 = load i32, i32* %sn1, align 4, !dbg !16704
  %idxprom = sext i32 %112 to i64, !dbg !16701
  %arrayidx74 = getelementptr inbounds float, float* %111, i64 %idxprom, !dbg !16701
  %113 = load float, float* %arrayidx74, align 4, !dbg !16701
  %114 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16705
  %span275 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %114, i32 0, i32 11, !dbg !16706
  %115 = load float*, float** %span275, align 8, !dbg !16706
  %116 = load i32, i32* %sn1, align 4, !dbg !16707
  %idxprom76 = sext i32 %116 to i64, !dbg !16705
  %arrayidx77 = getelementptr inbounds float, float* %115, i64 %idxprom76, !dbg !16705
  %117 = load float, float* %arrayidx77, align 4, !dbg !16705
  %cmp78 = fcmp olt float %113, %117, !dbg !16708
  br i1 %cmp78, label %if.then80, label %if.else87, !dbg !16709

if.then80:                                        ; preds = %if.end45
  %118 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16710
  %span181 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %118, i32 0, i32 10, !dbg !16712
  %119 = load float*, float** %span181, align 8, !dbg !16712
  %120 = load i32, i32* %my2, align 4, !dbg !16713
  %idx.ext82 = sext i32 %120 to i64, !dbg !16714
  %add.ptr83 = getelementptr inbounds float, float* %119, i64 %idx.ext82, !dbg !16714
  store float* %add.ptr83, float** %span1, align 8, !dbg !16715
  %121 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16716
  %span284 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %121, i32 0, i32 11, !dbg !16717
  %122 = load float*, float** %span284, align 8, !dbg !16717
  %123 = load i32, i32* %my2, align 4, !dbg !16718
  %idx.ext85 = sext i32 %123 to i64, !dbg !16719
  %add.ptr86 = getelementptr inbounds float, float* %122, i64 %idx.ext85, !dbg !16719
  store float* %add.ptr86, float** %span2, align 8, !dbg !16720
  br label %if.end94, !dbg !16721

if.else87:                                        ; preds = %if.end45
  %124 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16722
  %span288 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %124, i32 0, i32 11, !dbg !16724
  %125 = load float*, float** %span288, align 8, !dbg !16724
  %126 = load i32, i32* %my2, align 4, !dbg !16725
  %idx.ext89 = sext i32 %126 to i64, !dbg !16726
  %add.ptr90 = getelementptr inbounds float, float* %125, i64 %idx.ext89, !dbg !16726
  store float* %add.ptr90, float** %span1, align 8, !dbg !16727
  %127 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16728
  %span191 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %127, i32 0, i32 10, !dbg !16729
  %128 = load float*, float** %span191, align 8, !dbg !16729
  %129 = load i32, i32* %my2, align 4, !dbg !16730
  %idx.ext92 = sext i32 %129 to i64, !dbg !16731
  %add.ptr93 = getelementptr inbounds float, float* %128, i64 %idx.ext92, !dbg !16731
  store float* %add.ptr93, float** %span2, align 8, !dbg !16732
  br label %if.end94

if.end94:                                         ; preds = %if.else87, %if.then80
  %130 = load i32, i32* %my2, align 4, !dbg !16733
  store i32 %130, i32* %y, align 4, !dbg !16735
  br label %for.cond, !dbg !16736

for.cond:                                         ; preds = %for.inc, %if.end94
  %131 = load i32, i32* %y, align 4, !dbg !16737
  %132 = load i32, i32* %my0, align 4, !dbg !16739
  %cmp95 = icmp sge i32 %131, %132, !dbg !16740
  br i1 %cmp95, label %for.body, label %for.end, !dbg !16741

for.body:                                         ; preds = %for.cond
  %133 = load float*, float** %span1, align 8, !dbg !16742
  %134 = load float, float* %133, align 4, !dbg !16744
  %conv97 = fpext float %134 to double, !dbg !16744
  %135 = call double @llvm.floor.f64(double %conv97), !dbg !16745
  %conv98 = fptosi double %135 to i32, !dbg !16745
  store i32 %conv98, i32* %sn1, align 4, !dbg !16746
  %136 = load float*, float** %span2, align 8, !dbg !16747
  %137 = load float, float* %136, align 4, !dbg !16748
  %conv99 = fpext float %137 to double, !dbg !16748
  %138 = call double @llvm.floor.f64(double %conv99), !dbg !16749
  %conv100 = fptosi double %138 to i32, !dbg !16749
  store i32 %conv100, i32* %sn2, align 4, !dbg !16750
  %139 = load i32, i32* %sn1, align 4, !dbg !16751
  %inc = add nsw i32 %139, 1, !dbg !16751
  store i32 %inc, i32* %sn1, align 4, !dbg !16751
  %140 = load i32, i32* %sn2, align 4, !dbg !16752
  %141 = load i32, i32* %rectx, align 4, !dbg !16754
  %cmp101 = icmp sge i32 %140, %141, !dbg !16755
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !16756

if.then103:                                       ; preds = %for.body
  %142 = load i32, i32* %rectx, align 4, !dbg !16757
  %sub104 = sub nsw i32 %142, 1, !dbg !16758
  store i32 %sub104, i32* %sn2, align 4, !dbg !16759
  br label %if.end105, !dbg !16760

if.end105:                                        ; preds = %if.then103, %for.body
  %143 = load i32, i32* %sn1, align 4, !dbg !16761
  %cmp106 = icmp slt i32 %143, 0, !dbg !16763
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !16764

if.then108:                                       ; preds = %if.end105
  store i32 0, i32* %sn1, align 4, !dbg !16765
  br label %if.end109, !dbg !16766

if.end109:                                        ; preds = %if.then108, %if.end105
  %144 = load i32, i32* %sn2, align 4, !dbg !16767
  %145 = load i32, i32* %sn1, align 4, !dbg !16769
  %cmp110 = icmp sge i32 %144, %145, !dbg !16770
  br i1 %cmp110, label %if.then112, label %if.end280, !dbg !16771

if.then112:                                       ; preds = %if.end109
  call void @llvm.dbg.declare(metadata i32* %intzverg, metadata !16772, metadata !DIExpression()), !dbg !16774
  %146 = load i32, i32* %sn1, align 4, !dbg !16775
  %conv113 = sitofp i32 %146 to double, !dbg !16776
  %147 = load double, double* %zxd, align 8, !dbg !16777
  %mul114 = fmul double %conv113, %147, !dbg !16778
  %148 = load double, double* %zy0, align 8, !dbg !16779
  %add115 = fadd double %mul114, %148, !dbg !16780
  store double %add115, double* %zverg, align 8, !dbg !16781
  %149 = load i32*, i32** %rectzofs, align 8, !dbg !16782
  %150 = load i32, i32* %sn1, align 4, !dbg !16783
  %idx.ext116 = sext i32 %150 to i64, !dbg !16784
  %add.ptr117 = getelementptr inbounds i32, i32* %149, i64 %idx.ext116, !dbg !16784
  store i32* %add.ptr117, i32** %rz, align 8, !dbg !16785
  %151 = load i32*, i32** %rectmaskofs, align 8, !dbg !16786
  %152 = load i32, i32* %sn1, align 4, !dbg !16787
  %idx.ext118 = sext i32 %152 to i64, !dbg !16788
  %add.ptr119 = getelementptr inbounds i32, i32* %151, i64 %idx.ext118, !dbg !16788
  store i32* %add.ptr119, i32** %rm, align 8, !dbg !16789
  %153 = load %struct.APixstr*, %struct.APixstr** %apofs, align 8, !dbg !16790
  %154 = load i32, i32* %sn1, align 4, !dbg !16791
  %idx.ext120 = sext i32 %154 to i64, !dbg !16792
  %add.ptr121 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %153, i64 %idx.ext120, !dbg !16792
  store %struct.APixstr* %add.ptr121, %struct.APixstr** %ap, align 8, !dbg !16793
  %155 = load i32, i32* %sn2, align 4, !dbg !16794
  %156 = load i32, i32* %sn1, align 4, !dbg !16795
  %sub122 = sub nsw i32 %155, %156, !dbg !16796
  store i32 %sub122, i32* %x, align 4, !dbg !16797
  %157 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16798
  %polygon_offset = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %157, i32 0, i32 26, !dbg !16799
  %158 = load i32, i32* %polygon_offset, align 8, !dbg !16799
  %conv123 = sitofp i32 %158 to double, !dbg !16798
  %159 = load double, double* %zverg, align 8, !dbg !16800
  %sub124 = fsub double %159, %conv123, !dbg !16800
  store double %sub124, double* %zverg, align 8, !dbg !16800
  br label %while.cond, !dbg !16801

while.cond:                                       ; preds = %if.end275, %if.then112
  %160 = load i32, i32* %x, align 4, !dbg !16802
  %cmp125 = icmp sge i32 %160, 0, !dbg !16803
  br i1 %cmp125, label %while.body, label %while.end279, !dbg !16801

while.body:                                       ; preds = %while.cond
  %161 = load double, double* %zverg, align 8, !dbg !16804
  %cmp127 = fcmp olt double %161, 0xC1E0000000000000, !dbg !16804
  br i1 %cmp127, label %cond.true, label %cond.false, !dbg !16804

cond.true:                                        ; preds = %while.body
  br label %cond.end133, !dbg !16804

cond.false:                                       ; preds = %while.body
  %162 = load double, double* %zverg, align 8, !dbg !16804
  %cmp129 = fcmp ogt double %162, 0x41DFFFFFFFC00000, !dbg !16804
  br i1 %cmp129, label %cond.true131, label %cond.false132, !dbg !16804

cond.true131:                                     ; preds = %cond.false
  br label %cond.end, !dbg !16804

cond.false132:                                    ; preds = %cond.false
  %163 = load double, double* %zverg, align 8, !dbg !16804
  br label %cond.end, !dbg !16804

cond.end:                                         ; preds = %cond.false132, %cond.true131
  %cond = phi double [ 0x41DFFFFFFFC00000, %cond.true131 ], [ %163, %cond.false132 ], !dbg !16804
  br label %cond.end133, !dbg !16804

cond.end133:                                      ; preds = %cond.end, %cond.true
  %cond134 = phi double [ 0xC1E0000000000000, %cond.true ], [ %cond, %cond.end ], !dbg !16804
  %conv135 = fptosi double %cond134 to i32, !dbg !16806
  store i32 %conv135, i32* %intzverg, align 4, !dbg !16807
  %164 = load i32, i32* %intzverg, align 4, !dbg !16808
  %165 = load i32*, i32** %rz, align 8, !dbg !16810
  %166 = load i32, i32* %165, align 4, !dbg !16811
  %cmp136 = icmp slt i32 %164, %166, !dbg !16812
  br i1 %cmp136, label %if.then138, label %if.end275, !dbg !16813

if.then138:                                       ; preds = %cond.end133
  %167 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16814
  %rectmask139 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %167, i32 0, i32 21, !dbg !16817
  %168 = load i32*, i32** %rectmask139, align 8, !dbg !16817
  %tobool140 = icmp ne i32* %168, null, !dbg !16814
  br i1 %tobool140, label %lor.lhs.false141, label %if.then144, !dbg !16818

lor.lhs.false141:                                 ; preds = %if.then138
  %169 = load i32, i32* %intzverg, align 4, !dbg !16819
  %170 = load i32*, i32** %rm, align 8, !dbg !16820
  %171 = load i32, i32* %170, align 4, !dbg !16821
  %cmp142 = icmp sgt i32 %169, %171, !dbg !16822
  br i1 %cmp142, label %if.then144, label %if.end274, !dbg !16823

if.then144:                                       ; preds = %lor.lhs.false141, %if.then138
  %172 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !16824
  store %struct.APixstr* %172, %struct.APixstr** %apn, align 8, !dbg !16826
  br label %while.cond145, !dbg !16827

while.cond145:                                    ; preds = %if.end272, %if.then144
  %173 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16828
  %tobool146 = icmp ne %struct.APixstr* %173, null, !dbg !16827
  br i1 %tobool146, label %while.body147, label %while.end, !dbg !16827

while.body147:                                    ; preds = %while.cond145
  %174 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16829
  %p = getelementptr inbounds %struct.APixstr, %struct.APixstr* %174, i32 0, i32 2, !dbg !16832
  %arrayidx148 = getelementptr inbounds [4 x i32], [4 x i32]* %p, i64 0, i64 0, !dbg !16829
  %175 = load i32, i32* %arrayidx148, align 8, !dbg !16829
  %cmp149 = icmp eq i32 %175, 0, !dbg !16833
  br i1 %cmp149, label %if.then151, label %if.end160, !dbg !16834

if.then151:                                       ; preds = %while.body147
  %176 = load i32, i32* %obi.addr, align 4, !dbg !16835
  %177 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16837
  %obi152 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %177, i32 0, i32 3, !dbg !16838
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %obi152, i64 0, i64 0, !dbg !16837
  store i32 %176, i32* %arrayidx153, align 8, !dbg !16839
  %178 = load i32, i32* %zvlnr.addr, align 4, !dbg !16840
  %179 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16841
  %p154 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %179, i32 0, i32 2, !dbg !16842
  %arrayidx155 = getelementptr inbounds [4 x i32], [4 x i32]* %p154, i64 0, i64 0, !dbg !16841
  store i32 %178, i32* %arrayidx155, align 8, !dbg !16843
  %180 = load i32, i32* %intzverg, align 4, !dbg !16844
  %181 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16845
  %z = getelementptr inbounds %struct.APixstr, %struct.APixstr* %181, i32 0, i32 1, !dbg !16846
  %arrayidx156 = getelementptr inbounds [4 x i32], [4 x i32]* %z, i64 0, i64 0, !dbg !16845
  store i32 %180, i32* %arrayidx156, align 8, !dbg !16847
  %182 = load i32, i32* %mask, align 4, !dbg !16848
  %conv157 = trunc i32 %182 to i16, !dbg !16848
  %183 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16849
  %mask158 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %183, i32 0, i32 0, !dbg !16850
  %arrayidx159 = getelementptr inbounds [4 x i16], [4 x i16]* %mask158, i64 0, i64 0, !dbg !16849
  store i16 %conv157, i16* %arrayidx159, align 8, !dbg !16851
  br label %while.end, !dbg !16852

if.end160:                                        ; preds = %while.body147
  %184 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16853
  %p161 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %184, i32 0, i32 2, !dbg !16855
  %arrayidx162 = getelementptr inbounds [4 x i32], [4 x i32]* %p161, i64 0, i64 0, !dbg !16853
  %185 = load i32, i32* %arrayidx162, align 8, !dbg !16853
  %186 = load i32, i32* %zvlnr.addr, align 4, !dbg !16856
  %cmp163 = icmp eq i32 %185, %186, !dbg !16857
  br i1 %cmp163, label %land.lhs.true, label %if.end174, !dbg !16858

land.lhs.true:                                    ; preds = %if.end160
  %187 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16859
  %obi165 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %187, i32 0, i32 3, !dbg !16860
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %obi165, i64 0, i64 0, !dbg !16859
  %188 = load i32, i32* %arrayidx166, align 8, !dbg !16859
  %189 = load i32, i32* %obi.addr, align 4, !dbg !16861
  %cmp167 = icmp eq i32 %188, %189, !dbg !16862
  br i1 %cmp167, label %if.then169, label %if.end174, !dbg !16863

if.then169:                                       ; preds = %land.lhs.true
  %190 = load i32, i32* %mask, align 4, !dbg !16864
  %191 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16866
  %mask170 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %191, i32 0, i32 0, !dbg !16867
  %arrayidx171 = getelementptr inbounds [4 x i16], [4 x i16]* %mask170, i64 0, i64 0, !dbg !16866
  %192 = load i16, i16* %arrayidx171, align 8, !dbg !16868
  %conv172 = zext i16 %192 to i32, !dbg !16868
  %or = or i32 %conv172, %190, !dbg !16868
  %conv173 = trunc i32 %or to i16, !dbg !16868
  store i16 %conv173, i16* %arrayidx171, align 8, !dbg !16868
  br label %while.end, !dbg !16869

if.end174:                                        ; preds = %land.lhs.true, %if.end160
  %193 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16870
  %p175 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %193, i32 0, i32 2, !dbg !16872
  %arrayidx176 = getelementptr inbounds [4 x i32], [4 x i32]* %p175, i64 0, i64 1, !dbg !16870
  %194 = load i32, i32* %arrayidx176, align 4, !dbg !16870
  %cmp177 = icmp eq i32 %194, 0, !dbg !16873
  br i1 %cmp177, label %if.then179, label %if.end189, !dbg !16874

if.then179:                                       ; preds = %if.end174
  %195 = load i32, i32* %obi.addr, align 4, !dbg !16875
  %196 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16877
  %obi180 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %196, i32 0, i32 3, !dbg !16878
  %arrayidx181 = getelementptr inbounds [4 x i32], [4 x i32]* %obi180, i64 0, i64 1, !dbg !16877
  store i32 %195, i32* %arrayidx181, align 4, !dbg !16879
  %197 = load i32, i32* %zvlnr.addr, align 4, !dbg !16880
  %198 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16881
  %p182 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %198, i32 0, i32 2, !dbg !16882
  %arrayidx183 = getelementptr inbounds [4 x i32], [4 x i32]* %p182, i64 0, i64 1, !dbg !16881
  store i32 %197, i32* %arrayidx183, align 4, !dbg !16883
  %199 = load i32, i32* %intzverg, align 4, !dbg !16884
  %200 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16885
  %z184 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %200, i32 0, i32 1, !dbg !16886
  %arrayidx185 = getelementptr inbounds [4 x i32], [4 x i32]* %z184, i64 0, i64 1, !dbg !16885
  store i32 %199, i32* %arrayidx185, align 4, !dbg !16887
  %201 = load i32, i32* %mask, align 4, !dbg !16888
  %conv186 = trunc i32 %201 to i16, !dbg !16888
  %202 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16889
  %mask187 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %202, i32 0, i32 0, !dbg !16890
  %arrayidx188 = getelementptr inbounds [4 x i16], [4 x i16]* %mask187, i64 0, i64 1, !dbg !16889
  store i16 %conv186, i16* %arrayidx188, align 2, !dbg !16891
  br label %while.end, !dbg !16892

if.end189:                                        ; preds = %if.end174
  %203 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16893
  %p190 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %203, i32 0, i32 2, !dbg !16895
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %p190, i64 0, i64 1, !dbg !16893
  %204 = load i32, i32* %arrayidx191, align 4, !dbg !16893
  %205 = load i32, i32* %zvlnr.addr, align 4, !dbg !16896
  %cmp192 = icmp eq i32 %204, %205, !dbg !16897
  br i1 %cmp192, label %land.lhs.true194, label %if.end205, !dbg !16898

land.lhs.true194:                                 ; preds = %if.end189
  %206 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16899
  %obi195 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %206, i32 0, i32 3, !dbg !16900
  %arrayidx196 = getelementptr inbounds [4 x i32], [4 x i32]* %obi195, i64 0, i64 1, !dbg !16899
  %207 = load i32, i32* %arrayidx196, align 4, !dbg !16899
  %208 = load i32, i32* %obi.addr, align 4, !dbg !16901
  %cmp197 = icmp eq i32 %207, %208, !dbg !16902
  br i1 %cmp197, label %if.then199, label %if.end205, !dbg !16903

if.then199:                                       ; preds = %land.lhs.true194
  %209 = load i32, i32* %mask, align 4, !dbg !16904
  %210 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16906
  %mask200 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %210, i32 0, i32 0, !dbg !16907
  %arrayidx201 = getelementptr inbounds [4 x i16], [4 x i16]* %mask200, i64 0, i64 1, !dbg !16906
  %211 = load i16, i16* %arrayidx201, align 2, !dbg !16908
  %conv202 = zext i16 %211 to i32, !dbg !16908
  %or203 = or i32 %conv202, %209, !dbg !16908
  %conv204 = trunc i32 %or203 to i16, !dbg !16908
  store i16 %conv204, i16* %arrayidx201, align 2, !dbg !16908
  br label %while.end, !dbg !16909

if.end205:                                        ; preds = %land.lhs.true194, %if.end189
  %212 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16910
  %p206 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %212, i32 0, i32 2, !dbg !16912
  %arrayidx207 = getelementptr inbounds [4 x i32], [4 x i32]* %p206, i64 0, i64 2, !dbg !16910
  %213 = load i32, i32* %arrayidx207, align 8, !dbg !16910
  %cmp208 = icmp eq i32 %213, 0, !dbg !16913
  br i1 %cmp208, label %if.then210, label %if.end220, !dbg !16914

if.then210:                                       ; preds = %if.end205
  %214 = load i32, i32* %obi.addr, align 4, !dbg !16915
  %215 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16917
  %obi211 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %215, i32 0, i32 3, !dbg !16918
  %arrayidx212 = getelementptr inbounds [4 x i32], [4 x i32]* %obi211, i64 0, i64 2, !dbg !16917
  store i32 %214, i32* %arrayidx212, align 8, !dbg !16919
  %216 = load i32, i32* %zvlnr.addr, align 4, !dbg !16920
  %217 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16921
  %p213 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %217, i32 0, i32 2, !dbg !16922
  %arrayidx214 = getelementptr inbounds [4 x i32], [4 x i32]* %p213, i64 0, i64 2, !dbg !16921
  store i32 %216, i32* %arrayidx214, align 8, !dbg !16923
  %218 = load i32, i32* %intzverg, align 4, !dbg !16924
  %219 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16925
  %z215 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %219, i32 0, i32 1, !dbg !16926
  %arrayidx216 = getelementptr inbounds [4 x i32], [4 x i32]* %z215, i64 0, i64 2, !dbg !16925
  store i32 %218, i32* %arrayidx216, align 8, !dbg !16927
  %220 = load i32, i32* %mask, align 4, !dbg !16928
  %conv217 = trunc i32 %220 to i16, !dbg !16928
  %221 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16929
  %mask218 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %221, i32 0, i32 0, !dbg !16930
  %arrayidx219 = getelementptr inbounds [4 x i16], [4 x i16]* %mask218, i64 0, i64 2, !dbg !16929
  store i16 %conv217, i16* %arrayidx219, align 4, !dbg !16931
  br label %while.end, !dbg !16932

if.end220:                                        ; preds = %if.end205
  %222 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16933
  %p221 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %222, i32 0, i32 2, !dbg !16935
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %p221, i64 0, i64 2, !dbg !16933
  %223 = load i32, i32* %arrayidx222, align 8, !dbg !16933
  %224 = load i32, i32* %zvlnr.addr, align 4, !dbg !16936
  %cmp223 = icmp eq i32 %223, %224, !dbg !16937
  br i1 %cmp223, label %land.lhs.true225, label %if.end236, !dbg !16938

land.lhs.true225:                                 ; preds = %if.end220
  %225 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16939
  %obi226 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %225, i32 0, i32 3, !dbg !16940
  %arrayidx227 = getelementptr inbounds [4 x i32], [4 x i32]* %obi226, i64 0, i64 2, !dbg !16939
  %226 = load i32, i32* %arrayidx227, align 8, !dbg !16939
  %227 = load i32, i32* %obi.addr, align 4, !dbg !16941
  %cmp228 = icmp eq i32 %226, %227, !dbg !16942
  br i1 %cmp228, label %if.then230, label %if.end236, !dbg !16943

if.then230:                                       ; preds = %land.lhs.true225
  %228 = load i32, i32* %mask, align 4, !dbg !16944
  %229 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16946
  %mask231 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %229, i32 0, i32 0, !dbg !16947
  %arrayidx232 = getelementptr inbounds [4 x i16], [4 x i16]* %mask231, i64 0, i64 2, !dbg !16946
  %230 = load i16, i16* %arrayidx232, align 4, !dbg !16948
  %conv233 = zext i16 %230 to i32, !dbg !16948
  %or234 = or i32 %conv233, %228, !dbg !16948
  %conv235 = trunc i32 %or234 to i16, !dbg !16948
  store i16 %conv235, i16* %arrayidx232, align 4, !dbg !16948
  br label %while.end, !dbg !16949

if.end236:                                        ; preds = %land.lhs.true225, %if.end220
  %231 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16950
  %p237 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %231, i32 0, i32 2, !dbg !16952
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %p237, i64 0, i64 3, !dbg !16950
  %232 = load i32, i32* %arrayidx238, align 4, !dbg !16950
  %cmp239 = icmp eq i32 %232, 0, !dbg !16953
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !16954

if.then241:                                       ; preds = %if.end236
  %233 = load i32, i32* %obi.addr, align 4, !dbg !16955
  %234 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16957
  %obi242 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %234, i32 0, i32 3, !dbg !16958
  %arrayidx243 = getelementptr inbounds [4 x i32], [4 x i32]* %obi242, i64 0, i64 3, !dbg !16957
  store i32 %233, i32* %arrayidx243, align 4, !dbg !16959
  %235 = load i32, i32* %zvlnr.addr, align 4, !dbg !16960
  %236 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16961
  %p244 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %236, i32 0, i32 2, !dbg !16962
  %arrayidx245 = getelementptr inbounds [4 x i32], [4 x i32]* %p244, i64 0, i64 3, !dbg !16961
  store i32 %235, i32* %arrayidx245, align 4, !dbg !16963
  %237 = load i32, i32* %intzverg, align 4, !dbg !16964
  %238 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16965
  %z246 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %238, i32 0, i32 1, !dbg !16966
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %z246, i64 0, i64 3, !dbg !16965
  store i32 %237, i32* %arrayidx247, align 4, !dbg !16967
  %239 = load i32, i32* %mask, align 4, !dbg !16968
  %conv248 = trunc i32 %239 to i16, !dbg !16968
  %240 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16969
  %mask249 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %240, i32 0, i32 0, !dbg !16970
  %arrayidx250 = getelementptr inbounds [4 x i16], [4 x i16]* %mask249, i64 0, i64 3, !dbg !16969
  store i16 %conv248, i16* %arrayidx250, align 2, !dbg !16971
  br label %while.end, !dbg !16972

if.end251:                                        ; preds = %if.end236
  %241 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16973
  %p252 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %241, i32 0, i32 2, !dbg !16975
  %arrayidx253 = getelementptr inbounds [4 x i32], [4 x i32]* %p252, i64 0, i64 3, !dbg !16973
  %242 = load i32, i32* %arrayidx253, align 4, !dbg !16973
  %243 = load i32, i32* %zvlnr.addr, align 4, !dbg !16976
  %cmp254 = icmp eq i32 %242, %243, !dbg !16977
  br i1 %cmp254, label %land.lhs.true256, label %if.end267, !dbg !16978

land.lhs.true256:                                 ; preds = %if.end251
  %244 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16979
  %obi257 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %244, i32 0, i32 3, !dbg !16980
  %arrayidx258 = getelementptr inbounds [4 x i32], [4 x i32]* %obi257, i64 0, i64 3, !dbg !16979
  %245 = load i32, i32* %arrayidx258, align 4, !dbg !16979
  %246 = load i32, i32* %obi.addr, align 4, !dbg !16981
  %cmp259 = icmp eq i32 %245, %246, !dbg !16982
  br i1 %cmp259, label %if.then261, label %if.end267, !dbg !16983

if.then261:                                       ; preds = %land.lhs.true256
  %247 = load i32, i32* %mask, align 4, !dbg !16984
  %248 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16986
  %mask262 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %248, i32 0, i32 0, !dbg !16987
  %arrayidx263 = getelementptr inbounds [4 x i16], [4 x i16]* %mask262, i64 0, i64 3, !dbg !16986
  %249 = load i16, i16* %arrayidx263, align 2, !dbg !16988
  %conv264 = zext i16 %249 to i32, !dbg !16988
  %or265 = or i32 %conv264, %247, !dbg !16988
  %conv266 = trunc i32 %or265 to i16, !dbg !16988
  store i16 %conv266, i16* %arrayidx263, align 2, !dbg !16988
  br label %while.end, !dbg !16989

if.end267:                                        ; preds = %land.lhs.true256, %if.end251
  %250 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16990
  %next = getelementptr inbounds %struct.APixstr, %struct.APixstr* %250, i32 0, i32 5, !dbg !16992
  %251 = load %struct.APixstr*, %struct.APixstr** %next, align 8, !dbg !16992
  %cmp268 = icmp eq %struct.APixstr* %251, null, !dbg !16993
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !16994

if.then270:                                       ; preds = %if.end267
  %252 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !16995
  %call = call %struct.APixstr* @addpsA(%struct.ZSpan* %252), !dbg !16996
  %253 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !16997
  %next271 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %253, i32 0, i32 5, !dbg !16998
  store %struct.APixstr* %call, %struct.APixstr** %next271, align 8, !dbg !16999
  br label %if.end272, !dbg !16997

if.end272:                                        ; preds = %if.then270, %if.end267
  %254 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17000
  %next273 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %254, i32 0, i32 5, !dbg !17001
  %255 = load %struct.APixstr*, %struct.APixstr** %next273, align 8, !dbg !17001
  store %struct.APixstr* %255, %struct.APixstr** %apn, align 8, !dbg !17002
  br label %while.cond145, !dbg !16827, !llvm.loop !17003

while.end:                                        ; preds = %if.then261, %if.then241, %if.then230, %if.then210, %if.then199, %if.then179, %if.then169, %if.then151, %while.cond145
  br label %if.end274, !dbg !17005

if.end274:                                        ; preds = %while.end, %lor.lhs.false141
  br label %if.end275, !dbg !17006

if.end275:                                        ; preds = %if.end274, %cond.end133
  %256 = load double, double* %zxd, align 8, !dbg !17007
  %257 = load double, double* %zverg, align 8, !dbg !17008
  %add276 = fadd double %257, %256, !dbg !17008
  store double %add276, double* %zverg, align 8, !dbg !17008
  %258 = load i32*, i32** %rz, align 8, !dbg !17009
  %incdec.ptr = getelementptr inbounds i32, i32* %258, i32 1, !dbg !17009
  store i32* %incdec.ptr, i32** %rz, align 8, !dbg !17009
  %259 = load i32*, i32** %rm, align 8, !dbg !17010
  %incdec.ptr277 = getelementptr inbounds i32, i32* %259, i32 1, !dbg !17010
  store i32* %incdec.ptr277, i32** %rm, align 8, !dbg !17010
  %260 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17011
  %incdec.ptr278 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %260, i32 1, !dbg !17011
  store %struct.APixstr* %incdec.ptr278, %struct.APixstr** %ap, align 8, !dbg !17011
  %261 = load i32, i32* %x, align 4, !dbg !17012
  %dec = add nsw i32 %261, -1, !dbg !17012
  store i32 %dec, i32* %x, align 4, !dbg !17012
  br label %while.cond, !dbg !16801, !llvm.loop !17013

while.end279:                                     ; preds = %while.cond
  br label %if.end280, !dbg !17015

if.end280:                                        ; preds = %while.end279, %if.end109
  %262 = load double, double* %zyd, align 8, !dbg !17016
  %263 = load double, double* %zy0, align 8, !dbg !17017
  %sub281 = fsub double %263, %262, !dbg !17017
  store double %sub281, double* %zy0, align 8, !dbg !17017
  %264 = load i32, i32* %rectx, align 4, !dbg !17018
  %265 = load i32*, i32** %rectzofs, align 8, !dbg !17019
  %idx.ext282 = sext i32 %264 to i64, !dbg !17019
  %idx.neg = sub i64 0, %idx.ext282, !dbg !17019
  %add.ptr283 = getelementptr inbounds i32, i32* %265, i64 %idx.neg, !dbg !17019
  store i32* %add.ptr283, i32** %rectzofs, align 8, !dbg !17019
  %266 = load i32, i32* %rectx, align 4, !dbg !17020
  %267 = load i32*, i32** %rectmaskofs, align 8, !dbg !17021
  %idx.ext284 = sext i32 %266 to i64, !dbg !17021
  %idx.neg285 = sub i64 0, %idx.ext284, !dbg !17021
  %add.ptr286 = getelementptr inbounds i32, i32* %267, i64 %idx.neg285, !dbg !17021
  store i32* %add.ptr286, i32** %rectmaskofs, align 8, !dbg !17021
  %268 = load i32, i32* %rectx, align 4, !dbg !17022
  %269 = load %struct.APixstr*, %struct.APixstr** %apofs, align 8, !dbg !17023
  %idx.ext287 = sext i32 %268 to i64, !dbg !17023
  %idx.neg288 = sub i64 0, %idx.ext287, !dbg !17023
  %add.ptr289 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %269, i64 %idx.neg288, !dbg !17023
  store %struct.APixstr* %add.ptr289, %struct.APixstr** %apofs, align 8, !dbg !17023
  br label %for.inc, !dbg !17024

for.inc:                                          ; preds = %if.end280
  %270 = load i32, i32* %y, align 4, !dbg !17025
  %dec290 = add nsw i32 %270, -1, !dbg !17025
  store i32 %dec290, i32* %y, align 4, !dbg !17025
  %271 = load float*, float** %span1, align 8, !dbg !17026
  %incdec.ptr291 = getelementptr inbounds float, float* %271, i32 -1, !dbg !17026
  store float* %incdec.ptr291, float** %span1, align 8, !dbg !17026
  %272 = load float*, float** %span2, align 8, !dbg !17027
  %incdec.ptr292 = getelementptr inbounds float, float* %272, i32 -1, !dbg !17027
  store float* %incdec.ptr292, float** %span2, align 8, !dbg !17027
  br label %for.cond, !dbg !17028, !llvm.loop !17029

for.end:                                          ; preds = %if.then2, %if.then17, %if.then44, %for.cond
  ret void, !dbg !17031
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbuflineAc(%struct.ZSpan* %zspan, i32 %obi, i32 %zvlnr, float* %vec1, float* %vec2) #0 !dbg !17032 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %obi.addr = alloca i32, align 4
  %zvlnr.addr = alloca i32, align 4
  %vec1.addr = alloca float*, align 8
  %vec2.addr = alloca float*, align 8
  %ap = alloca %struct.APixstr*, align 8
  %apn = alloca %struct.APixstr*, align 8
  %rectz = alloca i32*, align 8
  %rectmask = alloca i32*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %oldx = alloca i32, align 4
  %oldy = alloca i32, align 4
  %ofs = alloca i32, align 4
  %dz = alloca i32, align 4
  %vergz = alloca i32, align 4
  %mask = alloca i32, align 4
  %maxtest = alloca i32, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !17033, metadata !DIExpression()), !dbg !17034
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !17035, metadata !DIExpression()), !dbg !17036
  store i32 %zvlnr, i32* %zvlnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zvlnr.addr, metadata !17037, metadata !DIExpression()), !dbg !17038
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !17039, metadata !DIExpression()), !dbg !17040
  store float* %vec2, float** %vec2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2.addr, metadata !17041, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.declare(metadata %struct.APixstr** %ap, metadata !17043, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.declare(metadata %struct.APixstr** %apn, metadata !17045, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.declare(metadata i32** %rectz, metadata !17047, metadata !DIExpression()), !dbg !17048
  call void @llvm.dbg.declare(metadata i32** %rectmask, metadata !17049, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.declare(metadata i32* %start, metadata !17051, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.declare(metadata i32* %end, metadata !17053, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17055, metadata !DIExpression()), !dbg !17056
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17057, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.declare(metadata i32* %oldx, metadata !17059, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.declare(metadata i32* %oldy, metadata !17061, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !17063, metadata !DIExpression()), !dbg !17064
  call void @llvm.dbg.declare(metadata i32* %dz, metadata !17065, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.declare(metadata i32* %vergz, metadata !17067, metadata !DIExpression()), !dbg !17068
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !17069, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.declare(metadata i32* %maxtest, metadata !17071, metadata !DIExpression()), !dbg !17072
  store i32 0, i32* %maxtest, align 4, !dbg !17072
  call void @llvm.dbg.declare(metadata float* %dx, metadata !17073, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.declare(metadata float* %dy, metadata !17075, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !17077, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !17079, metadata !DIExpression()), !dbg !17080
  %0 = load float*, float** %vec2.addr, align 8, !dbg !17081
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17081
  %1 = load float, float* %arrayidx, align 4, !dbg !17081
  %2 = load float*, float** %vec1.addr, align 8, !dbg !17082
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17082
  %3 = load float, float* %arrayidx1, align 4, !dbg !17082
  %sub = fsub float %1, %3, !dbg !17083
  store float %sub, float* %dx, align 4, !dbg !17084
  %4 = load float*, float** %vec2.addr, align 8, !dbg !17085
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17085
  %5 = load float, float* %arrayidx2, align 4, !dbg !17085
  %6 = load float*, float** %vec1.addr, align 8, !dbg !17086
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17086
  %7 = load float, float* %arrayidx3, align 4, !dbg !17086
  %sub4 = fsub float %5, %7, !dbg !17087
  store float %sub4, float* %dy, align 4, !dbg !17088
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17089
  %mask5 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %8, i32 0, i32 28, !dbg !17090
  %9 = load i32, i32* %mask5, align 8, !dbg !17090
  store i32 %9, i32* %mask, align 4, !dbg !17091
  %10 = load float, float* %dx, align 4, !dbg !17092
  %11 = call float @llvm.fabs.f32(float %10), !dbg !17094
  %12 = load float, float* %dy, align 4, !dbg !17095
  %13 = call float @llvm.fabs.f32(float %12), !dbg !17096
  %cmp = fcmp ogt float %11, %13, !dbg !17097
  br i1 %cmp, label %if.then, label %if.else241, !dbg !17098

if.then:                                          ; preds = %entry
  %14 = load float*, float** %vec1.addr, align 8, !dbg !17099
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 0, !dbg !17099
  %15 = load float, float* %arrayidx6, align 4, !dbg !17099
  %16 = load float*, float** %vec2.addr, align 8, !dbg !17102
  %arrayidx7 = getelementptr inbounds float, float* %16, i64 0, !dbg !17102
  %17 = load float, float* %arrayidx7, align 4, !dbg !17102
  %cmp8 = fcmp olt float %15, %17, !dbg !17103
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !17104

if.then9:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17105
  %18 = load float*, float** %vec1.addr, align 8, !dbg !17107
  call void @copy_v3_v3(float* %arraydecay, float* %18), !dbg !17108
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17109
  %19 = load float*, float** %vec2.addr, align 8, !dbg !17110
  call void @copy_v3_v3(float* %arraydecay10, float* %19), !dbg !17111
  br label %if.end, !dbg !17112

if.else:                                          ; preds = %if.then
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17113
  %20 = load float*, float** %vec1.addr, align 8, !dbg !17115
  call void @copy_v3_v3(float* %arraydecay11, float* %20), !dbg !17116
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17117
  %21 = load float*, float** %vec2.addr, align 8, !dbg !17118
  call void @copy_v3_v3(float* %arraydecay12, float* %21), !dbg !17119
  %22 = load float, float* %dx, align 4, !dbg !17120
  %fneg = fneg float %22, !dbg !17121
  store float %fneg, float* %dx, align 4, !dbg !17122
  %23 = load float, float* %dy, align 4, !dbg !17123
  %fneg13 = fneg float %23, !dbg !17124
  store float %fneg13, float* %dy, align 4, !dbg !17125
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17126
  %24 = load float, float* %arrayidx14, align 4, !dbg !17126
  %conv = fpext float %24 to double, !dbg !17126
  %25 = call double @llvm.floor.f64(double %conv), !dbg !17127
  %conv15 = fptosi double %25 to i32, !dbg !17127
  store i32 %conv15, i32* %start, align 4, !dbg !17128
  %26 = load i32, i32* %start, align 4, !dbg !17129
  %conv16 = sitofp i32 %26 to double, !dbg !17129
  %27 = load float, float* %dx, align 4, !dbg !17130
  %conv17 = fpext float %27 to double, !dbg !17130
  %28 = call double @llvm.floor.f64(double %conv17), !dbg !17131
  %add = fadd double %conv16, %28, !dbg !17132
  %conv18 = fptosi double %add to i32, !dbg !17129
  store i32 %conv18, i32* %end, align 4, !dbg !17133
  %29 = load i32, i32* %end, align 4, !dbg !17134
  %30 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17136
  %rectx = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %30, i32 0, i32 0, !dbg !17137
  %31 = load i32, i32* %rectx, align 8, !dbg !17137
  %cmp19 = icmp sge i32 %29, %31, !dbg !17138
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !17139

if.then21:                                        ; preds = %if.end
  %32 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17140
  %rectx22 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %32, i32 0, i32 0, !dbg !17141
  %33 = load i32, i32* %rectx22, align 8, !dbg !17141
  %sub23 = sub nsw i32 %33, 1, !dbg !17142
  store i32 %sub23, i32* %end, align 4, !dbg !17143
  br label %if.end24, !dbg !17144

if.end24:                                         ; preds = %if.then21, %if.end
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !17145
  %34 = load float, float* %arrayidx25, align 4, !dbg !17145
  %conv26 = fpext float %34 to double, !dbg !17145
  %35 = call double @llvm.floor.f64(double %conv26), !dbg !17146
  %conv27 = fptosi double %35 to i32, !dbg !17146
  store i32 %conv27, i32* %oldy, align 4, !dbg !17147
  %36 = load float, float* %dx, align 4, !dbg !17148
  %37 = load float, float* %dy, align 4, !dbg !17149
  %div = fdiv float %37, %36, !dbg !17149
  store float %div, float* %dy, align 4, !dbg !17149
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !17150
  %38 = load float, float* %arrayidx28, align 4, !dbg !17150
  %conv29 = fptosi float %38 to i32, !dbg !17150
  store i32 %conv29, i32* %vergz, align 4, !dbg !17151
  %39 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17152
  %polygon_offset = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %39, i32 0, i32 26, !dbg !17153
  %40 = load i32, i32* %polygon_offset, align 8, !dbg !17153
  %41 = load i32, i32* %vergz, align 4, !dbg !17154
  %sub30 = sub nsw i32 %41, %40, !dbg !17154
  store i32 %sub30, i32* %vergz, align 4, !dbg !17154
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !17155
  %42 = load float, float* %arrayidx31, align 4, !dbg !17155
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !17156
  %43 = load float, float* %arrayidx32, align 4, !dbg !17156
  %sub33 = fsub float %42, %43, !dbg !17157
  %44 = load float, float* %dx, align 4, !dbg !17158
  %div34 = fdiv float %sub33, %44, !dbg !17159
  %conv35 = fptosi float %div34 to i32, !dbg !17160
  store i32 %conv35, i32* %dz, align 4, !dbg !17161
  %45 = load i32, i32* %vergz, align 4, !dbg !17162
  %cmp36 = icmp sgt i32 %45, 1342177280, !dbg !17164
  br i1 %cmp36, label %land.lhs.true, label %if.end41, !dbg !17165

land.lhs.true:                                    ; preds = %if.end24
  %46 = load i32, i32* %dz, align 4, !dbg !17166
  %cmp38 = icmp sgt i32 %46, 0, !dbg !17167
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !17168

if.then40:                                        ; preds = %land.lhs.true
  store i32 1, i32* %maxtest, align 4, !dbg !17169
  br label %if.end41, !dbg !17170

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %if.end24
  %47 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17171
  %arectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %47, i32 0, i32 17, !dbg !17172
  %48 = load i32*, i32** %arectz, align 8, !dbg !17172
  %49 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17173
  %rectx42 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %49, i32 0, i32 0, !dbg !17174
  %50 = load i32, i32* %rectx42, align 8, !dbg !17174
  %51 = load i32, i32* %oldy, align 4, !dbg !17175
  %mul = mul nsw i32 %50, %51, !dbg !17176
  %idx.ext = sext i32 %mul to i64, !dbg !17177
  %add.ptr = getelementptr inbounds i32, i32* %48, i64 %idx.ext, !dbg !17177
  %52 = load i32, i32* %start, align 4, !dbg !17178
  %idx.ext43 = sext i32 %52 to i64, !dbg !17179
  %add.ptr44 = getelementptr inbounds i32, i32* %add.ptr, i64 %idx.ext43, !dbg !17179
  store i32* %add.ptr44, i32** %rectz, align 8, !dbg !17180
  %53 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17181
  %rectmask45 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %53, i32 0, i32 21, !dbg !17182
  %54 = load i32*, i32** %rectmask45, align 8, !dbg !17182
  %55 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17183
  %rectx46 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %55, i32 0, i32 0, !dbg !17184
  %56 = load i32, i32* %rectx46, align 8, !dbg !17184
  %57 = load i32, i32* %oldy, align 4, !dbg !17185
  %mul47 = mul nsw i32 %56, %57, !dbg !17186
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !17187
  %add.ptr49 = getelementptr inbounds i32, i32* %54, i64 %idx.ext48, !dbg !17187
  %58 = load i32, i32* %start, align 4, !dbg !17188
  %idx.ext50 = sext i32 %58 to i64, !dbg !17189
  %add.ptr51 = getelementptr inbounds i32, i32* %add.ptr49, i64 %idx.ext50, !dbg !17189
  store i32* %add.ptr51, i32** %rectmask, align 8, !dbg !17190
  %59 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17191
  %apixbuf = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %59, i32 0, i32 22, !dbg !17192
  %60 = load %struct.APixstr*, %struct.APixstr** %apixbuf, align 8, !dbg !17192
  %61 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17193
  %rectx52 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %61, i32 0, i32 0, !dbg !17194
  %62 = load i32, i32* %rectx52, align 8, !dbg !17194
  %63 = load i32, i32* %oldy, align 4, !dbg !17195
  %mul53 = mul nsw i32 %62, %63, !dbg !17196
  %idx.ext54 = sext i32 %mul53 to i64, !dbg !17197
  %add.ptr55 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %60, i64 %idx.ext54, !dbg !17197
  %64 = load i32, i32* %start, align 4, !dbg !17198
  %idx.ext56 = sext i32 %64 to i64, !dbg !17199
  %add.ptr57 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %add.ptr55, i64 %idx.ext56, !dbg !17199
  store %struct.APixstr* %add.ptr57, %struct.APixstr** %ap, align 8, !dbg !17200
  %65 = load float, float* %dy, align 4, !dbg !17201
  %cmp58 = fcmp olt float %65, 0.000000e+00, !dbg !17203
  br i1 %cmp58, label %if.then60, label %if.else63, !dbg !17204

if.then60:                                        ; preds = %if.end41
  %66 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17205
  %rectx61 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %66, i32 0, i32 0, !dbg !17206
  %67 = load i32, i32* %rectx61, align 8, !dbg !17206
  %sub62 = sub nsw i32 0, %67, !dbg !17207
  store i32 %sub62, i32* %ofs, align 4, !dbg !17208
  br label %if.end65, !dbg !17209

if.else63:                                        ; preds = %if.end41
  %68 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17210
  %rectx64 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %68, i32 0, i32 0, !dbg !17211
  %69 = load i32, i32* %rectx64, align 8, !dbg !17211
  store i32 %69, i32* %ofs, align 4, !dbg !17212
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then60
  %70 = load i32, i32* %start, align 4, !dbg !17213
  store i32 %70, i32* %x, align 4, !dbg !17215
  br label %for.cond, !dbg !17216

for.cond:                                         ; preds = %for.inc, %if.end65
  %71 = load i32, i32* %x, align 4, !dbg !17217
  %72 = load i32, i32* %end, align 4, !dbg !17219
  %cmp66 = icmp sle i32 %71, %72, !dbg !17220
  br i1 %cmp66, label %for.body, label %for.end, !dbg !17221

for.body:                                         ; preds = %for.cond
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !17222
  %73 = load float, float* %arrayidx68, align 4, !dbg !17222
  %conv69 = fpext float %73 to double, !dbg !17222
  %74 = call double @llvm.floor.f64(double %conv69), !dbg !17224
  %conv70 = fptosi double %74 to i32, !dbg !17224
  store i32 %conv70, i32* %y, align 4, !dbg !17225
  %75 = load i32, i32* %y, align 4, !dbg !17226
  %76 = load i32, i32* %oldy, align 4, !dbg !17228
  %cmp71 = icmp ne i32 %75, %76, !dbg !17229
  br i1 %cmp71, label %if.then73, label %if.end80, !dbg !17230

if.then73:                                        ; preds = %for.body
  %77 = load i32, i32* %y, align 4, !dbg !17231
  store i32 %77, i32* %oldy, align 4, !dbg !17233
  %78 = load i32, i32* %ofs, align 4, !dbg !17234
  %79 = load i32*, i32** %rectz, align 8, !dbg !17235
  %idx.ext74 = sext i32 %78 to i64, !dbg !17235
  %add.ptr75 = getelementptr inbounds i32, i32* %79, i64 %idx.ext74, !dbg !17235
  store i32* %add.ptr75, i32** %rectz, align 8, !dbg !17235
  %80 = load i32, i32* %ofs, align 4, !dbg !17236
  %81 = load i32*, i32** %rectmask, align 8, !dbg !17237
  %idx.ext76 = sext i32 %80 to i64, !dbg !17237
  %add.ptr77 = getelementptr inbounds i32, i32* %81, i64 %idx.ext76, !dbg !17237
  store i32* %add.ptr77, i32** %rectmask, align 8, !dbg !17237
  %82 = load i32, i32* %ofs, align 4, !dbg !17238
  %83 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17239
  %idx.ext78 = sext i32 %82 to i64, !dbg !17239
  %add.ptr79 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %83, i64 %idx.ext78, !dbg !17239
  store %struct.APixstr* %add.ptr79, %struct.APixstr** %ap, align 8, !dbg !17239
  br label %if.end80, !dbg !17240

if.end80:                                         ; preds = %if.then73, %for.body
  %84 = load i32, i32* %x, align 4, !dbg !17241
  %cmp81 = icmp sge i32 %84, 0, !dbg !17243
  br i1 %cmp81, label %land.lhs.true83, label %if.end227, !dbg !17244

land.lhs.true83:                                  ; preds = %if.end80
  %85 = load i32, i32* %y, align 4, !dbg !17245
  %cmp84 = icmp sge i32 %85, 0, !dbg !17246
  br i1 %cmp84, label %land.lhs.true86, label %if.end227, !dbg !17247

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %86 = load i32, i32* %y, align 4, !dbg !17248
  %87 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17249
  %recty = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %87, i32 0, i32 1, !dbg !17250
  %88 = load i32, i32* %recty, align 4, !dbg !17250
  %cmp87 = icmp slt i32 %86, %88, !dbg !17251
  br i1 %cmp87, label %if.then89, label %if.end227, !dbg !17252

if.then89:                                        ; preds = %land.lhs.true86
  %89 = load i32, i32* %vergz, align 4, !dbg !17253
  %90 = load i32*, i32** %rectz, align 8, !dbg !17256
  %91 = load i32, i32* %90, align 4, !dbg !17257
  %cmp90 = icmp slt i32 %89, %91, !dbg !17258
  br i1 %cmp90, label %if.then92, label %if.end226, !dbg !17259

if.then92:                                        ; preds = %if.then89
  %92 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17260
  %rectmask93 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %92, i32 0, i32 21, !dbg !17263
  %93 = load i32*, i32** %rectmask93, align 8, !dbg !17263
  %tobool = icmp ne i32* %93, null, !dbg !17260
  br i1 %tobool, label %lor.lhs.false, label %if.then96, !dbg !17264

lor.lhs.false:                                    ; preds = %if.then92
  %94 = load i32, i32* %vergz, align 4, !dbg !17265
  %95 = load i32*, i32** %rectmask, align 8, !dbg !17266
  %96 = load i32, i32* %95, align 4, !dbg !17267
  %cmp94 = icmp sgt i32 %94, %96, !dbg !17268
  br i1 %cmp94, label %if.then96, label %if.end225, !dbg !17269

if.then96:                                        ; preds = %lor.lhs.false, %if.then92
  %97 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17270
  store %struct.APixstr* %97, %struct.APixstr** %apn, align 8, !dbg !17272
  br label %while.cond, !dbg !17273

while.cond:                                       ; preds = %if.end223, %if.then96
  %98 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17274
  %tobool97 = icmp ne %struct.APixstr* %98, null, !dbg !17273
  br i1 %tobool97, label %while.body, label %while.end, !dbg !17273

while.body:                                       ; preds = %while.cond
  %99 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17275
  %p = getelementptr inbounds %struct.APixstr, %struct.APixstr* %99, i32 0, i32 2, !dbg !17278
  %arrayidx98 = getelementptr inbounds [4 x i32], [4 x i32]* %p, i64 0, i64 0, !dbg !17275
  %100 = load i32, i32* %arrayidx98, align 8, !dbg !17275
  %cmp99 = icmp eq i32 %100, 0, !dbg !17279
  br i1 %cmp99, label %if.then101, label %if.end110, !dbg !17280

if.then101:                                       ; preds = %while.body
  %101 = load i32, i32* %obi.addr, align 4, !dbg !17281
  %102 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17283
  %obi102 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %102, i32 0, i32 3, !dbg !17284
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %obi102, i64 0, i64 0, !dbg !17283
  store i32 %101, i32* %arrayidx103, align 8, !dbg !17285
  %103 = load i32, i32* %zvlnr.addr, align 4, !dbg !17286
  %104 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17287
  %p104 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %104, i32 0, i32 2, !dbg !17288
  %arrayidx105 = getelementptr inbounds [4 x i32], [4 x i32]* %p104, i64 0, i64 0, !dbg !17287
  store i32 %103, i32* %arrayidx105, align 8, !dbg !17289
  %105 = load i32, i32* %vergz, align 4, !dbg !17290
  %106 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17291
  %z = getelementptr inbounds %struct.APixstr, %struct.APixstr* %106, i32 0, i32 1, !dbg !17292
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %z, i64 0, i64 0, !dbg !17291
  store i32 %105, i32* %arrayidx106, align 8, !dbg !17293
  %107 = load i32, i32* %mask, align 4, !dbg !17294
  %conv107 = trunc i32 %107 to i16, !dbg !17294
  %108 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17295
  %mask108 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %108, i32 0, i32 0, !dbg !17296
  %arrayidx109 = getelementptr inbounds [4 x i16], [4 x i16]* %mask108, i64 0, i64 0, !dbg !17295
  store i16 %conv107, i16* %arrayidx109, align 8, !dbg !17297
  br label %while.end, !dbg !17298

if.end110:                                        ; preds = %while.body
  %109 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17299
  %p111 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %109, i32 0, i32 2, !dbg !17301
  %arrayidx112 = getelementptr inbounds [4 x i32], [4 x i32]* %p111, i64 0, i64 0, !dbg !17299
  %110 = load i32, i32* %arrayidx112, align 8, !dbg !17299
  %111 = load i32, i32* %zvlnr.addr, align 4, !dbg !17302
  %cmp113 = icmp eq i32 %110, %111, !dbg !17303
  br i1 %cmp113, label %land.lhs.true115, label %if.end125, !dbg !17304

land.lhs.true115:                                 ; preds = %if.end110
  %112 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17305
  %obi116 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %112, i32 0, i32 3, !dbg !17306
  %arrayidx117 = getelementptr inbounds [4 x i32], [4 x i32]* %obi116, i64 0, i64 0, !dbg !17305
  %113 = load i32, i32* %arrayidx117, align 8, !dbg !17305
  %114 = load i32, i32* %obi.addr, align 4, !dbg !17307
  %cmp118 = icmp eq i32 %113, %114, !dbg !17308
  br i1 %cmp118, label %if.then120, label %if.end125, !dbg !17309

if.then120:                                       ; preds = %land.lhs.true115
  %115 = load i32, i32* %mask, align 4, !dbg !17310
  %116 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17312
  %mask121 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %116, i32 0, i32 0, !dbg !17313
  %arrayidx122 = getelementptr inbounds [4 x i16], [4 x i16]* %mask121, i64 0, i64 0, !dbg !17312
  %117 = load i16, i16* %arrayidx122, align 8, !dbg !17314
  %conv123 = zext i16 %117 to i32, !dbg !17314
  %or = or i32 %conv123, %115, !dbg !17314
  %conv124 = trunc i32 %or to i16, !dbg !17314
  store i16 %conv124, i16* %arrayidx122, align 8, !dbg !17314
  br label %while.end, !dbg !17315

if.end125:                                        ; preds = %land.lhs.true115, %if.end110
  %118 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17316
  %p126 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %118, i32 0, i32 2, !dbg !17318
  %arrayidx127 = getelementptr inbounds [4 x i32], [4 x i32]* %p126, i64 0, i64 1, !dbg !17316
  %119 = load i32, i32* %arrayidx127, align 4, !dbg !17316
  %cmp128 = icmp eq i32 %119, 0, !dbg !17319
  br i1 %cmp128, label %if.then130, label %if.end140, !dbg !17320

if.then130:                                       ; preds = %if.end125
  %120 = load i32, i32* %obi.addr, align 4, !dbg !17321
  %121 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17323
  %obi131 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %121, i32 0, i32 3, !dbg !17324
  %arrayidx132 = getelementptr inbounds [4 x i32], [4 x i32]* %obi131, i64 0, i64 1, !dbg !17323
  store i32 %120, i32* %arrayidx132, align 4, !dbg !17325
  %122 = load i32, i32* %zvlnr.addr, align 4, !dbg !17326
  %123 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17327
  %p133 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %123, i32 0, i32 2, !dbg !17328
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %p133, i64 0, i64 1, !dbg !17327
  store i32 %122, i32* %arrayidx134, align 4, !dbg !17329
  %124 = load i32, i32* %vergz, align 4, !dbg !17330
  %125 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17331
  %z135 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %125, i32 0, i32 1, !dbg !17332
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %z135, i64 0, i64 1, !dbg !17331
  store i32 %124, i32* %arrayidx136, align 4, !dbg !17333
  %126 = load i32, i32* %mask, align 4, !dbg !17334
  %conv137 = trunc i32 %126 to i16, !dbg !17334
  %127 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17335
  %mask138 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %127, i32 0, i32 0, !dbg !17336
  %arrayidx139 = getelementptr inbounds [4 x i16], [4 x i16]* %mask138, i64 0, i64 1, !dbg !17335
  store i16 %conv137, i16* %arrayidx139, align 2, !dbg !17337
  br label %while.end, !dbg !17338

if.end140:                                        ; preds = %if.end125
  %128 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17339
  %p141 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %128, i32 0, i32 2, !dbg !17341
  %arrayidx142 = getelementptr inbounds [4 x i32], [4 x i32]* %p141, i64 0, i64 1, !dbg !17339
  %129 = load i32, i32* %arrayidx142, align 4, !dbg !17339
  %130 = load i32, i32* %zvlnr.addr, align 4, !dbg !17342
  %cmp143 = icmp eq i32 %129, %130, !dbg !17343
  br i1 %cmp143, label %land.lhs.true145, label %if.end156, !dbg !17344

land.lhs.true145:                                 ; preds = %if.end140
  %131 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17345
  %obi146 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %131, i32 0, i32 3, !dbg !17346
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %obi146, i64 0, i64 1, !dbg !17345
  %132 = load i32, i32* %arrayidx147, align 4, !dbg !17345
  %133 = load i32, i32* %obi.addr, align 4, !dbg !17347
  %cmp148 = icmp eq i32 %132, %133, !dbg !17348
  br i1 %cmp148, label %if.then150, label %if.end156, !dbg !17349

if.then150:                                       ; preds = %land.lhs.true145
  %134 = load i32, i32* %mask, align 4, !dbg !17350
  %135 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17352
  %mask151 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %135, i32 0, i32 0, !dbg !17353
  %arrayidx152 = getelementptr inbounds [4 x i16], [4 x i16]* %mask151, i64 0, i64 1, !dbg !17352
  %136 = load i16, i16* %arrayidx152, align 2, !dbg !17354
  %conv153 = zext i16 %136 to i32, !dbg !17354
  %or154 = or i32 %conv153, %134, !dbg !17354
  %conv155 = trunc i32 %or154 to i16, !dbg !17354
  store i16 %conv155, i16* %arrayidx152, align 2, !dbg !17354
  br label %while.end, !dbg !17355

if.end156:                                        ; preds = %land.lhs.true145, %if.end140
  %137 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17356
  %p157 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %137, i32 0, i32 2, !dbg !17358
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %p157, i64 0, i64 2, !dbg !17356
  %138 = load i32, i32* %arrayidx158, align 8, !dbg !17356
  %cmp159 = icmp eq i32 %138, 0, !dbg !17359
  br i1 %cmp159, label %if.then161, label %if.end171, !dbg !17360

if.then161:                                       ; preds = %if.end156
  %139 = load i32, i32* %obi.addr, align 4, !dbg !17361
  %140 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17363
  %obi162 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %140, i32 0, i32 3, !dbg !17364
  %arrayidx163 = getelementptr inbounds [4 x i32], [4 x i32]* %obi162, i64 0, i64 2, !dbg !17363
  store i32 %139, i32* %arrayidx163, align 8, !dbg !17365
  %141 = load i32, i32* %zvlnr.addr, align 4, !dbg !17366
  %142 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17367
  %p164 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %142, i32 0, i32 2, !dbg !17368
  %arrayidx165 = getelementptr inbounds [4 x i32], [4 x i32]* %p164, i64 0, i64 2, !dbg !17367
  store i32 %141, i32* %arrayidx165, align 8, !dbg !17369
  %143 = load i32, i32* %vergz, align 4, !dbg !17370
  %144 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17371
  %z166 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %144, i32 0, i32 1, !dbg !17372
  %arrayidx167 = getelementptr inbounds [4 x i32], [4 x i32]* %z166, i64 0, i64 2, !dbg !17371
  store i32 %143, i32* %arrayidx167, align 8, !dbg !17373
  %145 = load i32, i32* %mask, align 4, !dbg !17374
  %conv168 = trunc i32 %145 to i16, !dbg !17374
  %146 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17375
  %mask169 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %146, i32 0, i32 0, !dbg !17376
  %arrayidx170 = getelementptr inbounds [4 x i16], [4 x i16]* %mask169, i64 0, i64 2, !dbg !17375
  store i16 %conv168, i16* %arrayidx170, align 4, !dbg !17377
  br label %while.end, !dbg !17378

if.end171:                                        ; preds = %if.end156
  %147 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17379
  %p172 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %147, i32 0, i32 2, !dbg !17381
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %p172, i64 0, i64 2, !dbg !17379
  %148 = load i32, i32* %arrayidx173, align 8, !dbg !17379
  %149 = load i32, i32* %zvlnr.addr, align 4, !dbg !17382
  %cmp174 = icmp eq i32 %148, %149, !dbg !17383
  br i1 %cmp174, label %land.lhs.true176, label %if.end187, !dbg !17384

land.lhs.true176:                                 ; preds = %if.end171
  %150 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17385
  %obi177 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %150, i32 0, i32 3, !dbg !17386
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %obi177, i64 0, i64 2, !dbg !17385
  %151 = load i32, i32* %arrayidx178, align 8, !dbg !17385
  %152 = load i32, i32* %obi.addr, align 4, !dbg !17387
  %cmp179 = icmp eq i32 %151, %152, !dbg !17388
  br i1 %cmp179, label %if.then181, label %if.end187, !dbg !17389

if.then181:                                       ; preds = %land.lhs.true176
  %153 = load i32, i32* %mask, align 4, !dbg !17390
  %154 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17392
  %mask182 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %154, i32 0, i32 0, !dbg !17393
  %arrayidx183 = getelementptr inbounds [4 x i16], [4 x i16]* %mask182, i64 0, i64 2, !dbg !17392
  %155 = load i16, i16* %arrayidx183, align 4, !dbg !17394
  %conv184 = zext i16 %155 to i32, !dbg !17394
  %or185 = or i32 %conv184, %153, !dbg !17394
  %conv186 = trunc i32 %or185 to i16, !dbg !17394
  store i16 %conv186, i16* %arrayidx183, align 4, !dbg !17394
  br label %while.end, !dbg !17395

if.end187:                                        ; preds = %land.lhs.true176, %if.end171
  %156 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17396
  %p188 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %156, i32 0, i32 2, !dbg !17398
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %p188, i64 0, i64 3, !dbg !17396
  %157 = load i32, i32* %arrayidx189, align 4, !dbg !17396
  %cmp190 = icmp eq i32 %157, 0, !dbg !17399
  br i1 %cmp190, label %if.then192, label %if.end202, !dbg !17400

if.then192:                                       ; preds = %if.end187
  %158 = load i32, i32* %obi.addr, align 4, !dbg !17401
  %159 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17403
  %obi193 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %159, i32 0, i32 3, !dbg !17404
  %arrayidx194 = getelementptr inbounds [4 x i32], [4 x i32]* %obi193, i64 0, i64 3, !dbg !17403
  store i32 %158, i32* %arrayidx194, align 4, !dbg !17405
  %160 = load i32, i32* %zvlnr.addr, align 4, !dbg !17406
  %161 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17407
  %p195 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %161, i32 0, i32 2, !dbg !17408
  %arrayidx196 = getelementptr inbounds [4 x i32], [4 x i32]* %p195, i64 0, i64 3, !dbg !17407
  store i32 %160, i32* %arrayidx196, align 4, !dbg !17409
  %162 = load i32, i32* %vergz, align 4, !dbg !17410
  %163 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17411
  %z197 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %163, i32 0, i32 1, !dbg !17412
  %arrayidx198 = getelementptr inbounds [4 x i32], [4 x i32]* %z197, i64 0, i64 3, !dbg !17411
  store i32 %162, i32* %arrayidx198, align 4, !dbg !17413
  %164 = load i32, i32* %mask, align 4, !dbg !17414
  %conv199 = trunc i32 %164 to i16, !dbg !17414
  %165 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17415
  %mask200 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %165, i32 0, i32 0, !dbg !17416
  %arrayidx201 = getelementptr inbounds [4 x i16], [4 x i16]* %mask200, i64 0, i64 3, !dbg !17415
  store i16 %conv199, i16* %arrayidx201, align 2, !dbg !17417
  br label %while.end, !dbg !17418

if.end202:                                        ; preds = %if.end187
  %166 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17419
  %p203 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %166, i32 0, i32 2, !dbg !17421
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %p203, i64 0, i64 3, !dbg !17419
  %167 = load i32, i32* %arrayidx204, align 4, !dbg !17419
  %168 = load i32, i32* %zvlnr.addr, align 4, !dbg !17422
  %cmp205 = icmp eq i32 %167, %168, !dbg !17423
  br i1 %cmp205, label %land.lhs.true207, label %if.end218, !dbg !17424

land.lhs.true207:                                 ; preds = %if.end202
  %169 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17425
  %obi208 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %169, i32 0, i32 3, !dbg !17426
  %arrayidx209 = getelementptr inbounds [4 x i32], [4 x i32]* %obi208, i64 0, i64 3, !dbg !17425
  %170 = load i32, i32* %arrayidx209, align 4, !dbg !17425
  %171 = load i32, i32* %obi.addr, align 4, !dbg !17427
  %cmp210 = icmp eq i32 %170, %171, !dbg !17428
  br i1 %cmp210, label %if.then212, label %if.end218, !dbg !17429

if.then212:                                       ; preds = %land.lhs.true207
  %172 = load i32, i32* %mask, align 4, !dbg !17430
  %173 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17432
  %mask213 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %173, i32 0, i32 0, !dbg !17433
  %arrayidx214 = getelementptr inbounds [4 x i16], [4 x i16]* %mask213, i64 0, i64 3, !dbg !17432
  %174 = load i16, i16* %arrayidx214, align 2, !dbg !17434
  %conv215 = zext i16 %174 to i32, !dbg !17434
  %or216 = or i32 %conv215, %172, !dbg !17434
  %conv217 = trunc i32 %or216 to i16, !dbg !17434
  store i16 %conv217, i16* %arrayidx214, align 2, !dbg !17434
  br label %while.end, !dbg !17435

if.end218:                                        ; preds = %land.lhs.true207, %if.end202
  %175 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17436
  %next = getelementptr inbounds %struct.APixstr, %struct.APixstr* %175, i32 0, i32 5, !dbg !17438
  %176 = load %struct.APixstr*, %struct.APixstr** %next, align 8, !dbg !17438
  %cmp219 = icmp eq %struct.APixstr* %176, null, !dbg !17439
  br i1 %cmp219, label %if.then221, label %if.end223, !dbg !17440

if.then221:                                       ; preds = %if.end218
  %177 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17441
  %call = call %struct.APixstr* @addpsA(%struct.ZSpan* %177), !dbg !17442
  %178 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17443
  %next222 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %178, i32 0, i32 5, !dbg !17444
  store %struct.APixstr* %call, %struct.APixstr** %next222, align 8, !dbg !17445
  br label %if.end223, !dbg !17443

if.end223:                                        ; preds = %if.then221, %if.end218
  %179 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17446
  %next224 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %179, i32 0, i32 5, !dbg !17447
  %180 = load %struct.APixstr*, %struct.APixstr** %next224, align 8, !dbg !17447
  store %struct.APixstr* %180, %struct.APixstr** %apn, align 8, !dbg !17448
  br label %while.cond, !dbg !17273, !llvm.loop !17449

while.end:                                        ; preds = %if.then212, %if.then192, %if.then181, %if.then161, %if.then150, %if.then130, %if.then120, %if.then101, %while.cond
  br label %if.end225, !dbg !17451

if.end225:                                        ; preds = %while.end, %lor.lhs.false
  br label %if.end226, !dbg !17452

if.end226:                                        ; preds = %if.end225, %if.then89
  br label %if.end227, !dbg !17453

if.end227:                                        ; preds = %if.end226, %land.lhs.true86, %land.lhs.true83, %if.end80
  %181 = load float, float* %dy, align 4, !dbg !17454
  %arrayidx228 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !17455
  %182 = load float, float* %arrayidx228, align 4, !dbg !17456
  %add229 = fadd float %182, %181, !dbg !17456
  store float %add229, float* %arrayidx228, align 4, !dbg !17456
  %183 = load i32, i32* %maxtest, align 4, !dbg !17457
  %tobool230 = icmp ne i32 %183, 0, !dbg !17457
  br i1 %tobool230, label %land.lhs.true231, label %if.else236, !dbg !17459

land.lhs.true231:                                 ; preds = %if.end227
  %184 = load i32, i32* %vergz, align 4, !dbg !17460
  %185 = load i32, i32* %dz, align 4, !dbg !17461
  %sub232 = sub nsw i32 2147483632, %185, !dbg !17462
  %cmp233 = icmp sgt i32 %184, %sub232, !dbg !17463
  br i1 %cmp233, label %if.then235, label %if.else236, !dbg !17464

if.then235:                                       ; preds = %land.lhs.true231
  store i32 2147483632, i32* %vergz, align 4, !dbg !17465
  br label %if.end238, !dbg !17466

if.else236:                                       ; preds = %land.lhs.true231, %if.end227
  %186 = load i32, i32* %dz, align 4, !dbg !17467
  %187 = load i32, i32* %vergz, align 4, !dbg !17468
  %add237 = add nsw i32 %187, %186, !dbg !17468
  store i32 %add237, i32* %vergz, align 4, !dbg !17468
  br label %if.end238

if.end238:                                        ; preds = %if.else236, %if.then235
  br label %for.inc, !dbg !17469

for.inc:                                          ; preds = %if.end238
  %188 = load i32, i32* %x, align 4, !dbg !17470
  %inc = add nsw i32 %188, 1, !dbg !17470
  store i32 %inc, i32* %x, align 4, !dbg !17470
  %189 = load i32*, i32** %rectz, align 8, !dbg !17471
  %incdec.ptr = getelementptr inbounds i32, i32* %189, i32 1, !dbg !17471
  store i32* %incdec.ptr, i32** %rectz, align 8, !dbg !17471
  %190 = load i32*, i32** %rectmask, align 8, !dbg !17472
  %incdec.ptr239 = getelementptr inbounds i32, i32* %190, i32 1, !dbg !17472
  store i32* %incdec.ptr239, i32** %rectmask, align 8, !dbg !17472
  %191 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17473
  %incdec.ptr240 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %191, i32 1, !dbg !17473
  store %struct.APixstr* %incdec.ptr240, %struct.APixstr** %ap, align 8, !dbg !17473
  br label %for.cond, !dbg !17474, !llvm.loop !17475

for.end:                                          ; preds = %for.cond
  br label %if.end501, !dbg !17477

if.else241:                                       ; preds = %entry
  %192 = load float*, float** %vec1.addr, align 8, !dbg !17478
  %arrayidx242 = getelementptr inbounds float, float* %192, i64 1, !dbg !17478
  %193 = load float, float* %arrayidx242, align 4, !dbg !17478
  %194 = load float*, float** %vec2.addr, align 8, !dbg !17481
  %arrayidx243 = getelementptr inbounds float, float* %194, i64 1, !dbg !17481
  %195 = load float, float* %arrayidx243, align 4, !dbg !17481
  %cmp244 = fcmp olt float %193, %195, !dbg !17482
  br i1 %cmp244, label %if.then246, label %if.else249, !dbg !17483

if.then246:                                       ; preds = %if.else241
  %arraydecay247 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17484
  %196 = load float*, float** %vec1.addr, align 8, !dbg !17486
  call void @copy_v3_v3(float* %arraydecay247, float* %196), !dbg !17487
  %arraydecay248 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17488
  %197 = load float*, float** %vec2.addr, align 8, !dbg !17489
  call void @copy_v3_v3(float* %arraydecay248, float* %197), !dbg !17490
  br label %if.end254, !dbg !17491

if.else249:                                       ; preds = %if.else241
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17492
  %198 = load float*, float** %vec1.addr, align 8, !dbg !17494
  call void @copy_v3_v3(float* %arraydecay250, float* %198), !dbg !17495
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17496
  %199 = load float*, float** %vec2.addr, align 8, !dbg !17497
  call void @copy_v3_v3(float* %arraydecay251, float* %199), !dbg !17498
  %200 = load float, float* %dx, align 4, !dbg !17499
  %fneg252 = fneg float %200, !dbg !17500
  store float %fneg252, float* %dx, align 4, !dbg !17501
  %201 = load float, float* %dy, align 4, !dbg !17502
  %fneg253 = fneg float %201, !dbg !17503
  store float %fneg253, float* %dy, align 4, !dbg !17504
  br label %if.end254

if.end254:                                        ; preds = %if.else249, %if.then246
  %arrayidx255 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 1, !dbg !17505
  %202 = load float, float* %arrayidx255, align 4, !dbg !17505
  %conv256 = fpext float %202 to double, !dbg !17505
  %203 = call double @llvm.floor.f64(double %conv256), !dbg !17506
  %conv257 = fptosi double %203 to i32, !dbg !17506
  store i32 %conv257, i32* %start, align 4, !dbg !17507
  %204 = load i32, i32* %start, align 4, !dbg !17508
  %conv258 = sitofp i32 %204 to double, !dbg !17508
  %205 = load float, float* %dy, align 4, !dbg !17509
  %conv259 = fpext float %205 to double, !dbg !17509
  %206 = call double @llvm.floor.f64(double %conv259), !dbg !17510
  %add260 = fadd double %conv258, %206, !dbg !17511
  %conv261 = fptosi double %add260 to i32, !dbg !17508
  store i32 %conv261, i32* %end, align 4, !dbg !17512
  %207 = load i32, i32* %start, align 4, !dbg !17513
  %208 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17515
  %recty262 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %208, i32 0, i32 1, !dbg !17516
  %209 = load i32, i32* %recty262, align 4, !dbg !17516
  %cmp263 = icmp sge i32 %207, %209, !dbg !17517
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !17518

lor.lhs.false265:                                 ; preds = %if.end254
  %210 = load i32, i32* %end, align 4, !dbg !17519
  %cmp266 = icmp slt i32 %210, 0, !dbg !17520
  br i1 %cmp266, label %if.then268, label %if.end269, !dbg !17521

if.then268:                                       ; preds = %lor.lhs.false265, %if.end254
  br label %if.end501, !dbg !17522

if.end269:                                        ; preds = %lor.lhs.false265
  %211 = load i32, i32* %end, align 4, !dbg !17523
  %212 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17525
  %recty270 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %212, i32 0, i32 1, !dbg !17526
  %213 = load i32, i32* %recty270, align 4, !dbg !17526
  %cmp271 = icmp sge i32 %211, %213, !dbg !17527
  br i1 %cmp271, label %if.then273, label %if.end276, !dbg !17528

if.then273:                                       ; preds = %if.end269
  %214 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17529
  %recty274 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %214, i32 0, i32 1, !dbg !17530
  %215 = load i32, i32* %recty274, align 4, !dbg !17530
  %sub275 = sub nsw i32 %215, 1, !dbg !17531
  store i32 %sub275, i32* %end, align 4, !dbg !17532
  br label %if.end276, !dbg !17533

if.end276:                                        ; preds = %if.then273, %if.end269
  %arrayidx277 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17534
  %216 = load float, float* %arrayidx277, align 4, !dbg !17534
  %conv278 = fpext float %216 to double, !dbg !17534
  %217 = call double @llvm.floor.f64(double %conv278), !dbg !17535
  %conv279 = fptosi double %217 to i32, !dbg !17535
  store i32 %conv279, i32* %oldx, align 4, !dbg !17536
  %218 = load float, float* %dy, align 4, !dbg !17537
  %219 = load float, float* %dx, align 4, !dbg !17538
  %div280 = fdiv float %219, %218, !dbg !17538
  store float %div280, float* %dx, align 4, !dbg !17538
  %arrayidx281 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !17539
  %220 = load float, float* %arrayidx281, align 4, !dbg !17539
  %conv282 = fptosi float %220 to i32, !dbg !17539
  store i32 %conv282, i32* %vergz, align 4, !dbg !17540
  %221 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17541
  %polygon_offset283 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %221, i32 0, i32 26, !dbg !17542
  %222 = load i32, i32* %polygon_offset283, align 8, !dbg !17542
  %223 = load i32, i32* %vergz, align 4, !dbg !17543
  %sub284 = sub nsw i32 %223, %222, !dbg !17543
  store i32 %sub284, i32* %vergz, align 4, !dbg !17543
  %arrayidx285 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 2, !dbg !17544
  %224 = load float, float* %arrayidx285, align 4, !dbg !17544
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 2, !dbg !17545
  %225 = load float, float* %arrayidx286, align 4, !dbg !17545
  %sub287 = fsub float %224, %225, !dbg !17546
  %226 = load float, float* %dy, align 4, !dbg !17547
  %div288 = fdiv float %sub287, %226, !dbg !17548
  %conv289 = fptosi float %div288 to i32, !dbg !17549
  store i32 %conv289, i32* %dz, align 4, !dbg !17550
  %227 = load i32, i32* %vergz, align 4, !dbg !17551
  %cmp290 = icmp sgt i32 %227, 1342177280, !dbg !17553
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !17554

land.lhs.true292:                                 ; preds = %if.end276
  %228 = load i32, i32* %dz, align 4, !dbg !17555
  %cmp293 = icmp sgt i32 %228, 0, !dbg !17556
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !17557

if.then295:                                       ; preds = %land.lhs.true292
  store i32 1, i32* %maxtest, align 4, !dbg !17558
  br label %if.end296, !dbg !17559

if.end296:                                        ; preds = %if.then295, %land.lhs.true292, %if.end276
  %229 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17560
  %arectz297 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %229, i32 0, i32 17, !dbg !17561
  %230 = load i32*, i32** %arectz297, align 8, !dbg !17561
  %231 = load i32, i32* %start, align 4, !dbg !17562
  %232 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17563
  %rectx298 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %232, i32 0, i32 0, !dbg !17564
  %233 = load i32, i32* %rectx298, align 8, !dbg !17564
  %mul299 = mul nsw i32 %231, %233, !dbg !17565
  %idx.ext300 = sext i32 %mul299 to i64, !dbg !17566
  %add.ptr301 = getelementptr inbounds i32, i32* %230, i64 %idx.ext300, !dbg !17566
  %234 = load i32, i32* %oldx, align 4, !dbg !17567
  %idx.ext302 = sext i32 %234 to i64, !dbg !17568
  %add.ptr303 = getelementptr inbounds i32, i32* %add.ptr301, i64 %idx.ext302, !dbg !17568
  store i32* %add.ptr303, i32** %rectz, align 8, !dbg !17569
  %235 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17570
  %rectmask304 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %235, i32 0, i32 21, !dbg !17571
  %236 = load i32*, i32** %rectmask304, align 8, !dbg !17571
  %237 = load i32, i32* %start, align 4, !dbg !17572
  %238 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17573
  %rectx305 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %238, i32 0, i32 0, !dbg !17574
  %239 = load i32, i32* %rectx305, align 8, !dbg !17574
  %mul306 = mul nsw i32 %237, %239, !dbg !17575
  %idx.ext307 = sext i32 %mul306 to i64, !dbg !17576
  %add.ptr308 = getelementptr inbounds i32, i32* %236, i64 %idx.ext307, !dbg !17576
  %240 = load i32, i32* %oldx, align 4, !dbg !17577
  %idx.ext309 = sext i32 %240 to i64, !dbg !17578
  %add.ptr310 = getelementptr inbounds i32, i32* %add.ptr308, i64 %idx.ext309, !dbg !17578
  store i32* %add.ptr310, i32** %rectmask, align 8, !dbg !17579
  %241 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17580
  %apixbuf311 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %241, i32 0, i32 22, !dbg !17581
  %242 = load %struct.APixstr*, %struct.APixstr** %apixbuf311, align 8, !dbg !17581
  %243 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17582
  %rectx312 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %243, i32 0, i32 0, !dbg !17583
  %244 = load i32, i32* %rectx312, align 8, !dbg !17583
  %245 = load i32, i32* %start, align 4, !dbg !17584
  %mul313 = mul nsw i32 %244, %245, !dbg !17585
  %idx.ext314 = sext i32 %mul313 to i64, !dbg !17586
  %add.ptr315 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %242, i64 %idx.ext314, !dbg !17586
  %246 = load i32, i32* %oldx, align 4, !dbg !17587
  %idx.ext316 = sext i32 %246 to i64, !dbg !17588
  %add.ptr317 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %add.ptr315, i64 %idx.ext316, !dbg !17588
  store %struct.APixstr* %add.ptr317, %struct.APixstr** %ap, align 8, !dbg !17589
  %247 = load float, float* %dx, align 4, !dbg !17590
  %cmp318 = fcmp olt float %247, 0.000000e+00, !dbg !17592
  br i1 %cmp318, label %if.then320, label %if.else321, !dbg !17593

if.then320:                                       ; preds = %if.end296
  store i32 -1, i32* %ofs, align 4, !dbg !17594
  br label %if.end322, !dbg !17595

if.else321:                                       ; preds = %if.end296
  store i32 1, i32* %ofs, align 4, !dbg !17596
  br label %if.end322

if.end322:                                        ; preds = %if.else321, %if.then320
  %248 = load i32, i32* %start, align 4, !dbg !17597
  store i32 %248, i32* %y, align 4, !dbg !17599
  br label %for.cond323, !dbg !17600

for.cond323:                                      ; preds = %for.inc489, %if.end322
  %249 = load i32, i32* %y, align 4, !dbg !17601
  %250 = load i32, i32* %end, align 4, !dbg !17603
  %cmp324 = icmp sle i32 %249, %250, !dbg !17604
  br i1 %cmp324, label %for.body326, label %for.end500, !dbg !17605

for.body326:                                      ; preds = %for.cond323
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17606
  %251 = load float, float* %arrayidx327, align 4, !dbg !17606
  %conv328 = fpext float %251 to double, !dbg !17606
  %252 = call double @llvm.floor.f64(double %conv328), !dbg !17608
  %conv329 = fptosi double %252 to i32, !dbg !17608
  store i32 %conv329, i32* %x, align 4, !dbg !17609
  %253 = load i32, i32* %x, align 4, !dbg !17610
  %254 = load i32, i32* %oldx, align 4, !dbg !17612
  %cmp330 = icmp ne i32 %253, %254, !dbg !17613
  br i1 %cmp330, label %if.then332, label %if.end339, !dbg !17614

if.then332:                                       ; preds = %for.body326
  %255 = load i32, i32* %x, align 4, !dbg !17615
  store i32 %255, i32* %oldx, align 4, !dbg !17617
  %256 = load i32, i32* %ofs, align 4, !dbg !17618
  %257 = load i32*, i32** %rectz, align 8, !dbg !17619
  %idx.ext333 = sext i32 %256 to i64, !dbg !17619
  %add.ptr334 = getelementptr inbounds i32, i32* %257, i64 %idx.ext333, !dbg !17619
  store i32* %add.ptr334, i32** %rectz, align 8, !dbg !17619
  %258 = load i32, i32* %ofs, align 4, !dbg !17620
  %259 = load i32*, i32** %rectmask, align 8, !dbg !17621
  %idx.ext335 = sext i32 %258 to i64, !dbg !17621
  %add.ptr336 = getelementptr inbounds i32, i32* %259, i64 %idx.ext335, !dbg !17621
  store i32* %add.ptr336, i32** %rectmask, align 8, !dbg !17621
  %260 = load i32, i32* %ofs, align 4, !dbg !17622
  %261 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17623
  %idx.ext337 = sext i32 %260 to i64, !dbg !17623
  %add.ptr338 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %261, i64 %idx.ext337, !dbg !17623
  store %struct.APixstr* %add.ptr338, %struct.APixstr** %ap, align 8, !dbg !17623
  br label %if.end339, !dbg !17624

if.end339:                                        ; preds = %if.then332, %for.body326
  %262 = load i32, i32* %x, align 4, !dbg !17625
  %cmp340 = icmp sge i32 %262, 0, !dbg !17627
  br i1 %cmp340, label %land.lhs.true342, label %if.end477, !dbg !17628

land.lhs.true342:                                 ; preds = %if.end339
  %263 = load i32, i32* %y, align 4, !dbg !17629
  %cmp343 = icmp sge i32 %263, 0, !dbg !17630
  br i1 %cmp343, label %land.lhs.true345, label %if.end477, !dbg !17631

land.lhs.true345:                                 ; preds = %land.lhs.true342
  %264 = load i32, i32* %x, align 4, !dbg !17632
  %265 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17633
  %rectx346 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %265, i32 0, i32 0, !dbg !17634
  %266 = load i32, i32* %rectx346, align 8, !dbg !17634
  %cmp347 = icmp slt i32 %264, %266, !dbg !17635
  br i1 %cmp347, label %if.then349, label %if.end477, !dbg !17636

if.then349:                                       ; preds = %land.lhs.true345
  %267 = load i32, i32* %vergz, align 4, !dbg !17637
  %268 = load i32*, i32** %rectz, align 8, !dbg !17640
  %269 = load i32, i32* %268, align 4, !dbg !17641
  %cmp350 = icmp slt i32 %267, %269, !dbg !17642
  br i1 %cmp350, label %if.then352, label %if.end476, !dbg !17643

if.then352:                                       ; preds = %if.then349
  %270 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17644
  %rectmask353 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %270, i32 0, i32 21, !dbg !17647
  %271 = load i32*, i32** %rectmask353, align 8, !dbg !17647
  %tobool354 = icmp ne i32* %271, null, !dbg !17644
  br i1 %tobool354, label %lor.lhs.false355, label %if.then358, !dbg !17648

lor.lhs.false355:                                 ; preds = %if.then352
  %272 = load i32, i32* %vergz, align 4, !dbg !17649
  %273 = load i32*, i32** %rectmask, align 8, !dbg !17650
  %274 = load i32, i32* %273, align 4, !dbg !17651
  %cmp356 = icmp sgt i32 %272, %274, !dbg !17652
  br i1 %cmp356, label %if.then358, label %if.end475, !dbg !17653

if.then358:                                       ; preds = %lor.lhs.false355, %if.then352
  %275 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17654
  store %struct.APixstr* %275, %struct.APixstr** %apn, align 8, !dbg !17656
  br label %while.cond359, !dbg !17657

while.cond359:                                    ; preds = %if.end472, %if.then358
  %276 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17658
  %tobool360 = icmp ne %struct.APixstr* %276, null, !dbg !17657
  br i1 %tobool360, label %while.body361, label %while.end474, !dbg !17657

while.body361:                                    ; preds = %while.cond359
  %277 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17659
  %p362 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %277, i32 0, i32 2, !dbg !17662
  %arrayidx363 = getelementptr inbounds [4 x i32], [4 x i32]* %p362, i64 0, i64 0, !dbg !17659
  %278 = load i32, i32* %arrayidx363, align 8, !dbg !17659
  %cmp364 = icmp eq i32 %278, 0, !dbg !17663
  br i1 %cmp364, label %if.then366, label %if.end376, !dbg !17664

if.then366:                                       ; preds = %while.body361
  %279 = load i32, i32* %obi.addr, align 4, !dbg !17665
  %280 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17667
  %obi367 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %280, i32 0, i32 3, !dbg !17668
  %arrayidx368 = getelementptr inbounds [4 x i32], [4 x i32]* %obi367, i64 0, i64 0, !dbg !17667
  store i32 %279, i32* %arrayidx368, align 8, !dbg !17669
  %281 = load i32, i32* %zvlnr.addr, align 4, !dbg !17670
  %282 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17671
  %p369 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %282, i32 0, i32 2, !dbg !17672
  %arrayidx370 = getelementptr inbounds [4 x i32], [4 x i32]* %p369, i64 0, i64 0, !dbg !17671
  store i32 %281, i32* %arrayidx370, align 8, !dbg !17673
  %283 = load i32, i32* %vergz, align 4, !dbg !17674
  %284 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17675
  %z371 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %284, i32 0, i32 1, !dbg !17676
  %arrayidx372 = getelementptr inbounds [4 x i32], [4 x i32]* %z371, i64 0, i64 0, !dbg !17675
  store i32 %283, i32* %arrayidx372, align 8, !dbg !17677
  %285 = load i32, i32* %mask, align 4, !dbg !17678
  %conv373 = trunc i32 %285 to i16, !dbg !17678
  %286 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17679
  %mask374 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %286, i32 0, i32 0, !dbg !17680
  %arrayidx375 = getelementptr inbounds [4 x i16], [4 x i16]* %mask374, i64 0, i64 0, !dbg !17679
  store i16 %conv373, i16* %arrayidx375, align 8, !dbg !17681
  br label %while.end474, !dbg !17682

if.end376:                                        ; preds = %while.body361
  %287 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17683
  %p377 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %287, i32 0, i32 2, !dbg !17685
  %arrayidx378 = getelementptr inbounds [4 x i32], [4 x i32]* %p377, i64 0, i64 0, !dbg !17683
  %288 = load i32, i32* %arrayidx378, align 8, !dbg !17683
  %289 = load i32, i32* %zvlnr.addr, align 4, !dbg !17686
  %cmp379 = icmp eq i32 %288, %289, !dbg !17687
  br i1 %cmp379, label %if.then381, label %if.end387, !dbg !17688

if.then381:                                       ; preds = %if.end376
  %290 = load i32, i32* %mask, align 4, !dbg !17689
  %291 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17691
  %mask382 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %291, i32 0, i32 0, !dbg !17692
  %arrayidx383 = getelementptr inbounds [4 x i16], [4 x i16]* %mask382, i64 0, i64 0, !dbg !17691
  %292 = load i16, i16* %arrayidx383, align 8, !dbg !17693
  %conv384 = zext i16 %292 to i32, !dbg !17693
  %or385 = or i32 %conv384, %290, !dbg !17693
  %conv386 = trunc i32 %or385 to i16, !dbg !17693
  store i16 %conv386, i16* %arrayidx383, align 8, !dbg !17693
  br label %while.end474, !dbg !17694

if.end387:                                        ; preds = %if.end376
  %293 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17695
  %p388 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %293, i32 0, i32 2, !dbg !17697
  %arrayidx389 = getelementptr inbounds [4 x i32], [4 x i32]* %p388, i64 0, i64 1, !dbg !17695
  %294 = load i32, i32* %arrayidx389, align 4, !dbg !17695
  %cmp390 = icmp eq i32 %294, 0, !dbg !17698
  br i1 %cmp390, label %if.then392, label %if.end402, !dbg !17699

if.then392:                                       ; preds = %if.end387
  %295 = load i32, i32* %obi.addr, align 4, !dbg !17700
  %296 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17702
  %obi393 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %296, i32 0, i32 3, !dbg !17703
  %arrayidx394 = getelementptr inbounds [4 x i32], [4 x i32]* %obi393, i64 0, i64 1, !dbg !17702
  store i32 %295, i32* %arrayidx394, align 4, !dbg !17704
  %297 = load i32, i32* %zvlnr.addr, align 4, !dbg !17705
  %298 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17706
  %p395 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %298, i32 0, i32 2, !dbg !17707
  %arrayidx396 = getelementptr inbounds [4 x i32], [4 x i32]* %p395, i64 0, i64 1, !dbg !17706
  store i32 %297, i32* %arrayidx396, align 4, !dbg !17708
  %299 = load i32, i32* %vergz, align 4, !dbg !17709
  %300 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17710
  %z397 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %300, i32 0, i32 1, !dbg !17711
  %arrayidx398 = getelementptr inbounds [4 x i32], [4 x i32]* %z397, i64 0, i64 1, !dbg !17710
  store i32 %299, i32* %arrayidx398, align 4, !dbg !17712
  %301 = load i32, i32* %mask, align 4, !dbg !17713
  %conv399 = trunc i32 %301 to i16, !dbg !17713
  %302 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17714
  %mask400 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %302, i32 0, i32 0, !dbg !17715
  %arrayidx401 = getelementptr inbounds [4 x i16], [4 x i16]* %mask400, i64 0, i64 1, !dbg !17714
  store i16 %conv399, i16* %arrayidx401, align 2, !dbg !17716
  br label %while.end474, !dbg !17717

if.end402:                                        ; preds = %if.end387
  %303 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17718
  %p403 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %303, i32 0, i32 2, !dbg !17720
  %arrayidx404 = getelementptr inbounds [4 x i32], [4 x i32]* %p403, i64 0, i64 1, !dbg !17718
  %304 = load i32, i32* %arrayidx404, align 4, !dbg !17718
  %305 = load i32, i32* %zvlnr.addr, align 4, !dbg !17721
  %cmp405 = icmp eq i32 %304, %305, !dbg !17722
  br i1 %cmp405, label %if.then407, label %if.end413, !dbg !17723

if.then407:                                       ; preds = %if.end402
  %306 = load i32, i32* %mask, align 4, !dbg !17724
  %307 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17726
  %mask408 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %307, i32 0, i32 0, !dbg !17727
  %arrayidx409 = getelementptr inbounds [4 x i16], [4 x i16]* %mask408, i64 0, i64 1, !dbg !17726
  %308 = load i16, i16* %arrayidx409, align 2, !dbg !17728
  %conv410 = zext i16 %308 to i32, !dbg !17728
  %or411 = or i32 %conv410, %306, !dbg !17728
  %conv412 = trunc i32 %or411 to i16, !dbg !17728
  store i16 %conv412, i16* %arrayidx409, align 2, !dbg !17728
  br label %while.end474, !dbg !17729

if.end413:                                        ; preds = %if.end402
  %309 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17730
  %p414 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %309, i32 0, i32 2, !dbg !17732
  %arrayidx415 = getelementptr inbounds [4 x i32], [4 x i32]* %p414, i64 0, i64 2, !dbg !17730
  %310 = load i32, i32* %arrayidx415, align 8, !dbg !17730
  %cmp416 = icmp eq i32 %310, 0, !dbg !17733
  br i1 %cmp416, label %if.then418, label %if.end428, !dbg !17734

if.then418:                                       ; preds = %if.end413
  %311 = load i32, i32* %obi.addr, align 4, !dbg !17735
  %312 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17737
  %obi419 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %312, i32 0, i32 3, !dbg !17738
  %arrayidx420 = getelementptr inbounds [4 x i32], [4 x i32]* %obi419, i64 0, i64 2, !dbg !17737
  store i32 %311, i32* %arrayidx420, align 8, !dbg !17739
  %313 = load i32, i32* %zvlnr.addr, align 4, !dbg !17740
  %314 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17741
  %p421 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %314, i32 0, i32 2, !dbg !17742
  %arrayidx422 = getelementptr inbounds [4 x i32], [4 x i32]* %p421, i64 0, i64 2, !dbg !17741
  store i32 %313, i32* %arrayidx422, align 8, !dbg !17743
  %315 = load i32, i32* %vergz, align 4, !dbg !17744
  %316 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17745
  %z423 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %316, i32 0, i32 1, !dbg !17746
  %arrayidx424 = getelementptr inbounds [4 x i32], [4 x i32]* %z423, i64 0, i64 2, !dbg !17745
  store i32 %315, i32* %arrayidx424, align 8, !dbg !17747
  %317 = load i32, i32* %mask, align 4, !dbg !17748
  %conv425 = trunc i32 %317 to i16, !dbg !17748
  %318 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17749
  %mask426 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %318, i32 0, i32 0, !dbg !17750
  %arrayidx427 = getelementptr inbounds [4 x i16], [4 x i16]* %mask426, i64 0, i64 2, !dbg !17749
  store i16 %conv425, i16* %arrayidx427, align 4, !dbg !17751
  br label %while.end474, !dbg !17752

if.end428:                                        ; preds = %if.end413
  %319 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17753
  %p429 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %319, i32 0, i32 2, !dbg !17755
  %arrayidx430 = getelementptr inbounds [4 x i32], [4 x i32]* %p429, i64 0, i64 2, !dbg !17753
  %320 = load i32, i32* %arrayidx430, align 8, !dbg !17753
  %321 = load i32, i32* %zvlnr.addr, align 4, !dbg !17756
  %cmp431 = icmp eq i32 %320, %321, !dbg !17757
  br i1 %cmp431, label %if.then433, label %if.end439, !dbg !17758

if.then433:                                       ; preds = %if.end428
  %322 = load i32, i32* %mask, align 4, !dbg !17759
  %323 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17761
  %mask434 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %323, i32 0, i32 0, !dbg !17762
  %arrayidx435 = getelementptr inbounds [4 x i16], [4 x i16]* %mask434, i64 0, i64 2, !dbg !17761
  %324 = load i16, i16* %arrayidx435, align 4, !dbg !17763
  %conv436 = zext i16 %324 to i32, !dbg !17763
  %or437 = or i32 %conv436, %322, !dbg !17763
  %conv438 = trunc i32 %or437 to i16, !dbg !17763
  store i16 %conv438, i16* %arrayidx435, align 4, !dbg !17763
  br label %while.end474, !dbg !17764

if.end439:                                        ; preds = %if.end428
  %325 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17765
  %p440 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %325, i32 0, i32 2, !dbg !17767
  %arrayidx441 = getelementptr inbounds [4 x i32], [4 x i32]* %p440, i64 0, i64 3, !dbg !17765
  %326 = load i32, i32* %arrayidx441, align 4, !dbg !17765
  %cmp442 = icmp eq i32 %326, 0, !dbg !17768
  br i1 %cmp442, label %if.then444, label %if.end454, !dbg !17769

if.then444:                                       ; preds = %if.end439
  %327 = load i32, i32* %obi.addr, align 4, !dbg !17770
  %328 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17772
  %obi445 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %328, i32 0, i32 3, !dbg !17773
  %arrayidx446 = getelementptr inbounds [4 x i32], [4 x i32]* %obi445, i64 0, i64 3, !dbg !17772
  store i32 %327, i32* %arrayidx446, align 4, !dbg !17774
  %329 = load i32, i32* %zvlnr.addr, align 4, !dbg !17775
  %330 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17776
  %p447 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %330, i32 0, i32 2, !dbg !17777
  %arrayidx448 = getelementptr inbounds [4 x i32], [4 x i32]* %p447, i64 0, i64 3, !dbg !17776
  store i32 %329, i32* %arrayidx448, align 4, !dbg !17778
  %331 = load i32, i32* %vergz, align 4, !dbg !17779
  %332 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17780
  %z449 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %332, i32 0, i32 1, !dbg !17781
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %z449, i64 0, i64 3, !dbg !17780
  store i32 %331, i32* %arrayidx450, align 4, !dbg !17782
  %333 = load i32, i32* %mask, align 4, !dbg !17783
  %conv451 = trunc i32 %333 to i16, !dbg !17783
  %334 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17784
  %mask452 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %334, i32 0, i32 0, !dbg !17785
  %arrayidx453 = getelementptr inbounds [4 x i16], [4 x i16]* %mask452, i64 0, i64 3, !dbg !17784
  store i16 %conv451, i16* %arrayidx453, align 2, !dbg !17786
  br label %while.end474, !dbg !17787

if.end454:                                        ; preds = %if.end439
  %335 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17788
  %p455 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %335, i32 0, i32 2, !dbg !17790
  %arrayidx456 = getelementptr inbounds [4 x i32], [4 x i32]* %p455, i64 0, i64 3, !dbg !17788
  %336 = load i32, i32* %arrayidx456, align 4, !dbg !17788
  %337 = load i32, i32* %zvlnr.addr, align 4, !dbg !17791
  %cmp457 = icmp eq i32 %336, %337, !dbg !17792
  br i1 %cmp457, label %if.then459, label %if.end465, !dbg !17793

if.then459:                                       ; preds = %if.end454
  %338 = load i32, i32* %mask, align 4, !dbg !17794
  %339 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17796
  %mask460 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %339, i32 0, i32 0, !dbg !17797
  %arrayidx461 = getelementptr inbounds [4 x i16], [4 x i16]* %mask460, i64 0, i64 3, !dbg !17796
  %340 = load i16, i16* %arrayidx461, align 2, !dbg !17798
  %conv462 = zext i16 %340 to i32, !dbg !17798
  %or463 = or i32 %conv462, %338, !dbg !17798
  %conv464 = trunc i32 %or463 to i16, !dbg !17798
  store i16 %conv464, i16* %arrayidx461, align 2, !dbg !17798
  br label %while.end474, !dbg !17799

if.end465:                                        ; preds = %if.end454
  %341 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17800
  %next466 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %341, i32 0, i32 5, !dbg !17802
  %342 = load %struct.APixstr*, %struct.APixstr** %next466, align 8, !dbg !17802
  %cmp467 = icmp eq %struct.APixstr* %342, null, !dbg !17803
  br i1 %cmp467, label %if.then469, label %if.end472, !dbg !17804

if.then469:                                       ; preds = %if.end465
  %343 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17805
  %call470 = call %struct.APixstr* @addpsA(%struct.ZSpan* %343), !dbg !17806
  %344 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17807
  %next471 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %344, i32 0, i32 5, !dbg !17808
  store %struct.APixstr* %call470, %struct.APixstr** %next471, align 8, !dbg !17809
  br label %if.end472, !dbg !17807

if.end472:                                        ; preds = %if.then469, %if.end465
  %345 = load %struct.APixstr*, %struct.APixstr** %apn, align 8, !dbg !17810
  %next473 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %345, i32 0, i32 5, !dbg !17811
  %346 = load %struct.APixstr*, %struct.APixstr** %next473, align 8, !dbg !17811
  store %struct.APixstr* %346, %struct.APixstr** %apn, align 8, !dbg !17812
  br label %while.cond359, !dbg !17657, !llvm.loop !17813

while.end474:                                     ; preds = %if.then459, %if.then444, %if.then433, %if.then418, %if.then407, %if.then392, %if.then381, %if.then366, %while.cond359
  br label %if.end475, !dbg !17815

if.end475:                                        ; preds = %while.end474, %lor.lhs.false355
  br label %if.end476, !dbg !17816

if.end476:                                        ; preds = %if.end475, %if.then349
  br label %if.end477, !dbg !17817

if.end477:                                        ; preds = %if.end476, %land.lhs.true345, %land.lhs.true342, %if.end339
  %347 = load float, float* %dx, align 4, !dbg !17818
  %arrayidx478 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17819
  %348 = load float, float* %arrayidx478, align 4, !dbg !17820
  %add479 = fadd float %348, %347, !dbg !17820
  store float %add479, float* %arrayidx478, align 4, !dbg !17820
  %349 = load i32, i32* %maxtest, align 4, !dbg !17821
  %tobool480 = icmp ne i32 %349, 0, !dbg !17821
  br i1 %tobool480, label %land.lhs.true481, label %if.else486, !dbg !17823

land.lhs.true481:                                 ; preds = %if.end477
  %350 = load i32, i32* %vergz, align 4, !dbg !17824
  %351 = load i32, i32* %dz, align 4, !dbg !17825
  %sub482 = sub nsw i32 2147483632, %351, !dbg !17826
  %cmp483 = icmp sgt i32 %350, %sub482, !dbg !17827
  br i1 %cmp483, label %if.then485, label %if.else486, !dbg !17828

if.then485:                                       ; preds = %land.lhs.true481
  store i32 2147483632, i32* %vergz, align 4, !dbg !17829
  br label %if.end488, !dbg !17830

if.else486:                                       ; preds = %land.lhs.true481, %if.end477
  %352 = load i32, i32* %dz, align 4, !dbg !17831
  %353 = load i32, i32* %vergz, align 4, !dbg !17832
  %add487 = add nsw i32 %353, %352, !dbg !17832
  store i32 %add487, i32* %vergz, align 4, !dbg !17832
  br label %if.end488

if.end488:                                        ; preds = %if.else486, %if.then485
  br label %for.inc489, !dbg !17833

for.inc489:                                       ; preds = %if.end488
  %354 = load i32, i32* %y, align 4, !dbg !17834
  %inc490 = add nsw i32 %354, 1, !dbg !17834
  store i32 %inc490, i32* %y, align 4, !dbg !17834
  %355 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17835
  %rectx491 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %355, i32 0, i32 0, !dbg !17836
  %356 = load i32, i32* %rectx491, align 8, !dbg !17836
  %357 = load i32*, i32** %rectz, align 8, !dbg !17837
  %idx.ext492 = sext i32 %356 to i64, !dbg !17837
  %add.ptr493 = getelementptr inbounds i32, i32* %357, i64 %idx.ext492, !dbg !17837
  store i32* %add.ptr493, i32** %rectz, align 8, !dbg !17837
  %358 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17838
  %rectx494 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %358, i32 0, i32 0, !dbg !17839
  %359 = load i32, i32* %rectx494, align 8, !dbg !17839
  %360 = load i32*, i32** %rectmask, align 8, !dbg !17840
  %idx.ext495 = sext i32 %359 to i64, !dbg !17840
  %add.ptr496 = getelementptr inbounds i32, i32* %360, i64 %idx.ext495, !dbg !17840
  store i32* %add.ptr496, i32** %rectmask, align 8, !dbg !17840
  %361 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !17841
  %rectx497 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %361, i32 0, i32 0, !dbg !17842
  %362 = load i32, i32* %rectx497, align 8, !dbg !17842
  %363 = load %struct.APixstr*, %struct.APixstr** %ap, align 8, !dbg !17843
  %idx.ext498 = sext i32 %362 to i64, !dbg !17843
  %add.ptr499 = getelementptr inbounds %struct.APixstr, %struct.APixstr* %363, i64 %idx.ext498, !dbg !17843
  store %struct.APixstr* %add.ptr499, %struct.APixstr** %ap, align 8, !dbg !17843
  br label %for.cond323, !dbg !17844, !llvm.loop !17845

for.end500:                                       ; preds = %for.cond323
  br label %if.end501

if.end501:                                        ; preds = %if.then268, %for.end500, %for.end
  ret void, !dbg !17847
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyto_abufz(%struct.RenderPart* %pa, i32* %arectz, i32* %rectmask, i32 %sample) #0 !dbg !17848 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %arectz.addr = alloca i32*, align 8
  %rectmask.addr = alloca i32*, align 8
  %sample.addr = alloca i32, align 4
  %ps = alloca %struct.PixStr*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %rza = alloca i32*, align 8
  %rma = alloca i32*, align 8
  %rd = alloca i64*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !17851, metadata !DIExpression()), !dbg !17852
  store i32* %arectz, i32** %arectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arectz.addr, metadata !17853, metadata !DIExpression()), !dbg !17854
  store i32* %rectmask, i32** %rectmask.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectmask.addr, metadata !17855, metadata !DIExpression()), !dbg !17856
  store i32 %sample, i32* %sample.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample.addr, metadata !17857, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps, metadata !17859, metadata !DIExpression()), !dbg !17860
  call void @llvm.dbg.declare(metadata i32* %x, metadata !17861, metadata !DIExpression()), !dbg !17862
  call void @llvm.dbg.declare(metadata i32* %y, metadata !17863, metadata !DIExpression()), !dbg !17864
  call void @llvm.dbg.declare(metadata i32** %rza, metadata !17865, metadata !DIExpression()), !dbg !17866
  call void @llvm.dbg.declare(metadata i32** %rma, metadata !17867, metadata !DIExpression()), !dbg !17868
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !17869, metadata !DIExpression()), !dbg !17870
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !17871
  %conv = sext i16 %0 to i32, !dbg !17873
  %cmp = icmp eq i32 %conv, 0, !dbg !17874
  br i1 %cmp, label %if.then, label %if.else21, !dbg !17875

if.then:                                          ; preds = %entry
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17876
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %1, i32 0, i32 6, !dbg !17879
  %2 = load i32*, i32** %rectz, align 8, !dbg !17879
  %tobool = icmp ne i32* %2, null, !dbg !17876
  br i1 %tobool, label %if.else, label %if.then2, !dbg !17880

if.then2:                                         ; preds = %if.then
  %3 = load i32*, i32** %arectz.addr, align 8, !dbg !17881
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17882
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %4, i32 0, i32 14, !dbg !17883
  %5 = load i32, i32* %rectx, align 8, !dbg !17883
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17884
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 15, !dbg !17885
  %7 = load i32, i32* %recty, align 4, !dbg !17885
  call void @fillrect(i32* %3, i32 %5, i32 %7, i32 2147483646), !dbg !17886
  br label %if.end, !dbg !17886

if.else:                                          ; preds = %if.then
  %8 = load i32*, i32** %arectz.addr, align 8, !dbg !17887
  %9 = bitcast i32* %8 to i8*, !dbg !17888
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17889
  %rectz3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 6, !dbg !17890
  %11 = load i32*, i32** %rectz3, align 8, !dbg !17890
  %12 = bitcast i32* %11 to i8*, !dbg !17888
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17891
  %rectx4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 14, !dbg !17892
  %14 = load i32, i32* %rectx4, align 8, !dbg !17892
  %conv5 = sext i32 %14 to i64, !dbg !17891
  %mul = mul i64 4, %conv5, !dbg !17893
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17894
  %recty6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 15, !dbg !17895
  %16 = load i32, i32* %recty6, align 4, !dbg !17895
  %conv7 = sext i32 %16 to i64, !dbg !17894
  %mul8 = mul i64 %mul, %conv7, !dbg !17896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %12, i64 %mul8, i1 false), !dbg !17888
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %17 = load i32*, i32** %rectmask.addr, align 8, !dbg !17897
  %tobool9 = icmp ne i32* %17, null, !dbg !17897
  br i1 %tobool9, label %land.lhs.true, label %if.end20, !dbg !17899

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17900
  %rectmask10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 7, !dbg !17901
  %19 = load i32*, i32** %rectmask10, align 8, !dbg !17901
  %tobool11 = icmp ne i32* %19, null, !dbg !17900
  br i1 %tobool11, label %if.then12, label %if.end20, !dbg !17902

if.then12:                                        ; preds = %land.lhs.true
  %20 = load i32*, i32** %rectmask.addr, align 8, !dbg !17903
  %21 = bitcast i32* %20 to i8*, !dbg !17904
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17905
  %rectmask13 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %22, i32 0, i32 7, !dbg !17906
  %23 = load i32*, i32** %rectmask13, align 8, !dbg !17906
  %24 = bitcast i32* %23 to i8*, !dbg !17904
  %25 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17907
  %rectx14 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %25, i32 0, i32 14, !dbg !17908
  %26 = load i32, i32* %rectx14, align 8, !dbg !17908
  %conv15 = sext i32 %26 to i64, !dbg !17907
  %mul16 = mul i64 4, %conv15, !dbg !17909
  %27 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17910
  %recty17 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %27, i32 0, i32 15, !dbg !17911
  %28 = load i32, i32* %recty17, align 4, !dbg !17911
  %conv18 = sext i32 %28 to i64, !dbg !17910
  %mul19 = mul i64 %mul16, %conv18, !dbg !17912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %24, i64 %mul19, i1 false), !dbg !17904
  br label %if.end20, !dbg !17904

if.end20:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  br label %for.end59, !dbg !17913

if.else21:                                        ; preds = %entry
  %29 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17914
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %29, i32 0, i32 8, !dbg !17916
  %30 = load i64*, i64** %rectdaps, align 8, !dbg !17916
  %tobool22 = icmp ne i64* %30, null, !dbg !17914
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !17917

if.then23:                                        ; preds = %if.else21
  %31 = load i32*, i32** %arectz.addr, align 8, !dbg !17918
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17920
  %rectx24 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 14, !dbg !17921
  %33 = load i32, i32* %rectx24, align 8, !dbg !17921
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17922
  %recty25 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 15, !dbg !17923
  %35 = load i32, i32* %recty25, align 4, !dbg !17923
  call void @fillrect(i32* %31, i32 %33, i32 %35, i32 2147483646), !dbg !17924
  br label %for.end59, !dbg !17925

if.end26:                                         ; preds = %if.else21
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  %36 = load i32*, i32** %arectz.addr, align 8, !dbg !17926
  store i32* %36, i32** %rza, align 8, !dbg !17927
  %37 = load i32*, i32** %rectmask.addr, align 8, !dbg !17928
  store i32* %37, i32** %rma, align 8, !dbg !17929
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17930
  %rectdaps28 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %38, i32 0, i32 8, !dbg !17931
  %39 = load i64*, i64** %rectdaps28, align 8, !dbg !17931
  store i64* %39, i64** %rd, align 8, !dbg !17932
  %40 = load i32, i32* %sample.addr, align 4, !dbg !17933
  %shl = shl i32 1, %40, !dbg !17934
  store i32 %shl, i32* %sample.addr, align 4, !dbg !17935
  store i32 0, i32* %y, align 4, !dbg !17936
  br label %for.cond, !dbg !17938

for.cond:                                         ; preds = %for.inc57, %if.end27
  %41 = load i32, i32* %y, align 4, !dbg !17939
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17941
  %recty29 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 15, !dbg !17942
  %43 = load i32, i32* %recty29, align 4, !dbg !17942
  %cmp30 = icmp slt i32 %41, %43, !dbg !17943
  br i1 %cmp30, label %for.body, label %for.end59, !dbg !17944

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !17945
  br label %for.cond32, !dbg !17948

for.cond32:                                       ; preds = %for.inc55, %for.body
  %44 = load i32, i32* %x, align 4, !dbg !17949
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !17951
  %rectx33 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 14, !dbg !17952
  %46 = load i32, i32* %rectx33, align 8, !dbg !17952
  %cmp34 = icmp slt i32 %44, %46, !dbg !17953
  br i1 %cmp34, label %for.body36, label %for.end56, !dbg !17954

for.body36:                                       ; preds = %for.cond32
  %47 = load i32*, i32** %rza, align 8, !dbg !17955
  store i32 2147483647, i32* %47, align 4, !dbg !17957
  %48 = load i32*, i32** %rectmask.addr, align 8, !dbg !17958
  %tobool37 = icmp ne i32* %48, null, !dbg !17958
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !17960

if.then38:                                        ; preds = %for.body36
  %49 = load i32*, i32** %rma, align 8, !dbg !17961
  store i32 2147483647, i32* %49, align 4, !dbg !17962
  br label %if.end39, !dbg !17963

if.end39:                                         ; preds = %if.then38, %for.body36
  %50 = load i64*, i64** %rd, align 8, !dbg !17964
  %51 = load i64, i64* %50, align 8, !dbg !17966
  %tobool40 = icmp ne i64 %51, 0, !dbg !17966
  br i1 %tobool40, label %if.then41, label %if.end52, !dbg !17967

if.then41:                                        ; preds = %if.end39
  %52 = load i64*, i64** %rd, align 8, !dbg !17968
  %53 = load i64, i64* %52, align 8, !dbg !17971
  %54 = inttoptr i64 %53 to %struct.PixStr*, !dbg !17972
  store %struct.PixStr* %54, %struct.PixStr** %ps, align 8, !dbg !17973
  br label %for.cond42, !dbg !17974

for.cond42:                                       ; preds = %for.inc, %if.then41
  %55 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !17975
  %tobool43 = icmp ne %struct.PixStr* %55, null, !dbg !17977
  br i1 %tobool43, label %for.body44, label %for.end, !dbg !17977

for.body44:                                       ; preds = %for.cond42
  %56 = load i32, i32* %sample.addr, align 4, !dbg !17978
  %57 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !17981
  %mask = getelementptr inbounds %struct.PixStr, %struct.PixStr* %57, i32 0, i32 5, !dbg !17982
  %58 = load i16, i16* %mask, align 8, !dbg !17982
  %conv45 = zext i16 %58 to i32, !dbg !17981
  %and = and i32 %56, %conv45, !dbg !17983
  %tobool46 = icmp ne i32 %and, 0, !dbg !17983
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !17984

if.then47:                                        ; preds = %for.body44
  %59 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !17985
  %z = getelementptr inbounds %struct.PixStr, %struct.PixStr* %59, i32 0, i32 3, !dbg !17987
  %60 = load i32, i32* %z, align 8, !dbg !17987
  %61 = load i32*, i32** %rza, align 8, !dbg !17988
  store i32 %60, i32* %61, align 4, !dbg !17989
  %62 = load i32*, i32** %rectmask.addr, align 8, !dbg !17990
  %tobool48 = icmp ne i32* %62, null, !dbg !17990
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !17992

if.then49:                                        ; preds = %if.then47
  %63 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !17993
  %maskz = getelementptr inbounds %struct.PixStr, %struct.PixStr* %63, i32 0, i32 4, !dbg !17994
  %64 = load i32, i32* %maskz, align 4, !dbg !17994
  %65 = load i32*, i32** %rma, align 8, !dbg !17995
  store i32 %64, i32* %65, align 4, !dbg !17996
  br label %if.end50, !dbg !17997

if.end50:                                         ; preds = %if.then49, %if.then47
  br label %for.end, !dbg !17998

if.end51:                                         ; preds = %for.body44
  br label %for.inc, !dbg !17999

for.inc:                                          ; preds = %if.end51
  %66 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !18000
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %66, i32 0, i32 0, !dbg !18001
  %67 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !18001
  store %struct.PixStr* %67, %struct.PixStr** %ps, align 8, !dbg !18002
  br label %for.cond42, !dbg !18003, !llvm.loop !18004

for.end:                                          ; preds = %if.end50, %for.cond42
  br label %if.end52, !dbg !18006

if.end52:                                         ; preds = %for.end, %if.end39
  %68 = load i64*, i64** %rd, align 8, !dbg !18007
  %incdec.ptr = getelementptr inbounds i64, i64* %68, i32 1, !dbg !18007
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !18007
  %69 = load i32*, i32** %rza, align 8, !dbg !18008
  %incdec.ptr53 = getelementptr inbounds i32, i32* %69, i32 1, !dbg !18008
  store i32* %incdec.ptr53, i32** %rza, align 8, !dbg !18008
  %70 = load i32*, i32** %rma, align 8, !dbg !18009
  %incdec.ptr54 = getelementptr inbounds i32, i32* %70, i32 1, !dbg !18009
  store i32* %incdec.ptr54, i32** %rma, align 8, !dbg !18009
  br label %for.inc55, !dbg !18010

for.inc55:                                        ; preds = %if.end52
  %71 = load i32, i32* %x, align 4, !dbg !18011
  %inc = add nsw i32 %71, 1, !dbg !18011
  store i32 %inc, i32* %x, align 4, !dbg !18011
  br label %for.cond32, !dbg !18012, !llvm.loop !18013

for.end56:                                        ; preds = %for.cond32
  br label %for.inc57, !dbg !18015

for.inc57:                                        ; preds = %for.end56
  %72 = load i32, i32* %y, align 4, !dbg !18016
  %inc58 = add nsw i32 %72, 1, !dbg !18016
  store i32 %inc58, i32* %y, align 4, !dbg !18016
  br label %for.cond, !dbg !18017, !llvm.loop !18018

for.end59:                                        ; preds = %if.end20, %if.then23, %for.cond
  ret void, !dbg !18020
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.APixstr* @addpsA(%struct.ZSpan* %zspan) #0 !dbg !18021 {
entry:
  %zspan.addr = alloca %struct.ZSpan*, align 8
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !18024, metadata !DIExpression()), !dbg !18025
  %0 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18026
  %apsmcounter = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %0, i32 0, i32 29, !dbg !18028
  %1 = load i32, i32* %apsmcounter, align 4, !dbg !18028
  %cmp = icmp eq i32 %1, 0, !dbg !18029
  br i1 %cmp, label %if.then, label %if.else, !dbg !18030

if.then:                                          ; preds = %entry
  %2 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18031
  %apsmbase = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %2, i32 0, i32 25, !dbg !18033
  %3 = load %struct.ListBase*, %struct.ListBase** %apsmbase, align 8, !dbg !18033
  %call = call %struct.APixstr* @addpsmainA(%struct.ListBase* %3), !dbg !18034
  %4 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18035
  %curpstr = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %4, i32 0, i32 23, !dbg !18036
  store %struct.APixstr* %call, %struct.APixstr** %curpstr, align 8, !dbg !18037
  %5 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18038
  %apsmcounter1 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %5, i32 0, i32 29, !dbg !18039
  store i32 4095, i32* %apsmcounter1, align 4, !dbg !18040
  br label %if.end, !dbg !18041

if.else:                                          ; preds = %entry
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18042
  %curpstr2 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %6, i32 0, i32 23, !dbg !18044
  %7 = load %struct.APixstr*, %struct.APixstr** %curpstr2, align 8, !dbg !18045
  %incdec.ptr = getelementptr inbounds %struct.APixstr, %struct.APixstr* %7, i32 1, !dbg !18045
  store %struct.APixstr* %incdec.ptr, %struct.APixstr** %curpstr2, align 8, !dbg !18045
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18046
  %apsmcounter3 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %8, i32 0, i32 29, !dbg !18047
  %9 = load i32, i32* %apsmcounter3, align 4, !dbg !18048
  %dec = add nsw i32 %9, -1, !dbg !18048
  store i32 %dec, i32* %apsmcounter3, align 4, !dbg !18048
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !18049
  %curpstr4 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %10, i32 0, i32 23, !dbg !18050
  %11 = load %struct.APixstr*, %struct.APixstr** %curpstr4, align 8, !dbg !18050
  ret %struct.APixstr* %11, !dbg !18051
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.APixstr* @addpsmainA(%struct.ListBase* %lb) #0 !dbg !18052 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %psm = alloca %struct.APixstrMain*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !18055, metadata !DIExpression()), !dbg !18056
  call void @llvm.dbg.declare(metadata %struct.APixstrMain** %psm, metadata !18057, metadata !DIExpression()), !dbg !18058
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !18059
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)), !dbg !18059
  %1 = bitcast i8* %call to %struct.APixstrMain*, !dbg !18059
  store %struct.APixstrMain* %1, %struct.APixstrMain** %psm, align 8, !dbg !18060
  %2 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !18061
  %3 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !18062
  %4 = bitcast %struct.APixstrMain* %3 to i8*, !dbg !18062
  call void @BLI_addtail(%struct.ListBase* %2, i8* %4), !dbg !18063
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !18064
  %call1 = call i8* %5(i64 294912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)), !dbg !18064
  %6 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !18065
  %ps = getelementptr inbounds %struct.APixstrMain, %struct.APixstrMain* %6, i32 0, i32 2, !dbg !18066
  store i8* %call1, i8** %ps, align 8, !dbg !18067
  %7 = load %struct.APixstrMain*, %struct.APixstrMain** %psm, align 8, !dbg !18068
  %ps2 = getelementptr inbounds %struct.APixstrMain, %struct.APixstrMain* %7, i32 0, i32 2, !dbg !18069
  %8 = load i8*, i8** %ps2, align 8, !dbg !18069
  %9 = bitcast i8* %8 to %struct.APixstr*, !dbg !18068
  ret %struct.APixstr* %9, !dbg !18070
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

declare dso_local float* @RE_RenderLayerGetPass(%struct.RenderLayer*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @shade_strand_samples(%struct.StrandShadeCache* %cache, %struct.ShadeSample* %ssamp, i32 %UNUSED_x, i32 %UNUSED_y, %struct.ZTranspRow* %row, i32 %addpassflag) #0 !dbg !18071 {
entry:
  %cache.addr = alloca %struct.StrandShadeCache*, align 8
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %UNUSED_x.addr = alloca i32, align 4
  %UNUSED_y.addr = alloca i32, align 4
  %row.addr = alloca %struct.ZTranspRow*, align 8
  %addpassflag.addr = alloca i32, align 4
  %sseg = alloca %struct.StrandSegment, align 8
  %svert = alloca %struct.StrandVert*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  store %struct.StrandShadeCache* %cache, %struct.StrandShadeCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandShadeCache** %cache.addr, metadata !18074, metadata !DIExpression()), !dbg !18075
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !18076, metadata !DIExpression()), !dbg !18077
  store i32 %UNUSED_x, i32* %UNUSED_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_x.addr, metadata !18078, metadata !DIExpression()), !dbg !18079
  store i32 %UNUSED_y, i32* %UNUSED_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_y.addr, metadata !18080, metadata !DIExpression()), !dbg !18081
  store %struct.ZTranspRow* %row, %struct.ZTranspRow** %row.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZTranspRow** %row.addr, metadata !18082, metadata !DIExpression()), !dbg !18083
  store i32 %addpassflag, i32* %addpassflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addpassflag.addr, metadata !18084, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.declare(metadata %struct.StrandSegment* %sseg, metadata !18086, metadata !DIExpression()), !dbg !18087
  call void @llvm.dbg.declare(metadata %struct.StrandVert** %svert, metadata !18088, metadata !DIExpression()), !dbg !18089
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !18090, metadata !DIExpression()), !dbg !18091
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !18092, metadata !DIExpression()), !dbg !18093
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !18094
  %1 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18095
  %obi1 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %1, i32 0, i32 0, !dbg !18096
  %2 = load i32, i32* %obi1, align 4, !dbg !18096
  %idx.ext = sext i32 %2 to i64, !dbg !18097
  %add.ptr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i64 %idx.ext, !dbg !18097
  store %struct.ObjectInstanceRen* %add.ptr, %struct.ObjectInstanceRen** %obi, align 8, !dbg !18098
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !18099
  %obr2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %3, i32 0, i32 2, !dbg !18100
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr2, align 8, !dbg !18100
  store %struct.ObjectRen* %4, %struct.ObjectRen** %obr, align 8, !dbg !18101
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !18102
  %obi3 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 3, !dbg !18103
  store %struct.ObjectInstanceRen* %5, %struct.ObjectInstanceRen** %obi3, align 8, !dbg !18104
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !18105
  %7 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18106
  %p = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %7, i32 0, i32 2, !dbg !18107
  %8 = load i32, i32* %p, align 4, !dbg !18107
  %sub = sub nsw i32 %8, 1, !dbg !18108
  %call = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %6, i32 %sub), !dbg !18109
  %strand = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 1, !dbg !18110
  store %struct.StrandRen* %call, %struct.StrandRen** %strand, align 8, !dbg !18111
  %strand4 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 1, !dbg !18112
  %9 = load %struct.StrandRen*, %struct.StrandRen** %strand4, align 8, !dbg !18112
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %9, i32 0, i32 1, !dbg !18113
  %10 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer, align 8, !dbg !18113
  %buffer5 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 2, !dbg !18114
  store %struct.StrandBuffer* %10, %struct.StrandBuffer** %buffer5, align 8, !dbg !18115
  %strand6 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 1, !dbg !18116
  %11 = load %struct.StrandRen*, %struct.StrandRen** %strand6, align 8, !dbg !18116
  %vert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %11, i32 0, i32 0, !dbg !18117
  %12 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !18117
  %13 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18118
  %segment = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %13, i32 0, i32 4, !dbg !18119
  %14 = load i32, i32* %segment, align 4, !dbg !18119
  %idx.ext7 = sext i32 %14 to i64, !dbg !18120
  %add.ptr8 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %12, i64 %idx.ext7, !dbg !18120
  store %struct.StrandVert* %add.ptr8, %struct.StrandVert** %svert, align 8, !dbg !18121
  %15 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18122
  %segment9 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %15, i32 0, i32 4, !dbg !18123
  %16 = load i32, i32* %segment9, align 4, !dbg !18123
  %cmp = icmp sgt i32 %16, 0, !dbg !18124
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18125

cond.true:                                        ; preds = %entry
  %17 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18126
  %add.ptr10 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %17, i64 -1, !dbg !18127
  br label %cond.end, !dbg !18125

cond.false:                                       ; preds = %entry
  %18 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18128
  br label %cond.end, !dbg !18125

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.StrandVert* [ %add.ptr10, %cond.true ], [ %18, %cond.false ], !dbg !18125
  %v = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !18129
  %arrayidx = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v, i64 0, i64 0, !dbg !18130
  store %struct.StrandVert* %cond, %struct.StrandVert** %arrayidx, align 8, !dbg !18131
  %19 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18132
  %v11 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !18133
  %arrayidx12 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v11, i64 0, i64 1, !dbg !18134
  store %struct.StrandVert* %19, %struct.StrandVert** %arrayidx12, align 8, !dbg !18135
  %20 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18136
  %add.ptr13 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %20, i64 1, !dbg !18137
  %v14 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !18138
  %arrayidx15 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v14, i64 0, i64 2, !dbg !18139
  store %struct.StrandVert* %add.ptr13, %struct.StrandVert** %arrayidx15, align 8, !dbg !18140
  %21 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18141
  %segment16 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %21, i32 0, i32 4, !dbg !18142
  %22 = load i32, i32* %segment16, align 4, !dbg !18142
  %strand17 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 1, !dbg !18143
  %23 = load %struct.StrandRen*, %struct.StrandRen** %strand17, align 8, !dbg !18143
  %totvert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %23, i32 0, i32 2, !dbg !18144
  %24 = load i32, i32* %totvert, align 8, !dbg !18144
  %sub18 = sub nsw i32 %24, 2, !dbg !18145
  %cmp19 = icmp slt i32 %22, %sub18, !dbg !18146
  br i1 %cmp19, label %cond.true20, label %cond.false22, !dbg !18147

cond.true20:                                      ; preds = %cond.end
  %25 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18148
  %add.ptr21 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %25, i64 2, !dbg !18149
  br label %cond.end24, !dbg !18147

cond.false22:                                     ; preds = %cond.end
  %26 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !18150
  %add.ptr23 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %26, i64 1, !dbg !18151
  br label %cond.end24, !dbg !18147

cond.end24:                                       ; preds = %cond.false22, %cond.true20
  %cond25 = phi %struct.StrandVert* [ %add.ptr21, %cond.true20 ], [ %add.ptr23, %cond.false22 ], !dbg !18147
  %v26 = getelementptr inbounds %struct.StrandSegment, %struct.StrandSegment* %sseg, i32 0, i32 0, !dbg !18152
  %arrayidx27 = getelementptr inbounds [4 x %struct.StrandVert*], [4 x %struct.StrandVert*]* %v26, i64 0, i64 3, !dbg !18153
  store %struct.StrandVert* %cond25, %struct.StrandVert** %arrayidx27, align 8, !dbg !18154
  %27 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18155
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %27, i32 0, i32 0, !dbg !18156
  store i32 1, i32* %tot, align 8, !dbg !18157
  %28 = load %struct.StrandShadeCache*, %struct.StrandShadeCache** %cache.addr, align 8, !dbg !18158
  %29 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18159
  %30 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18160
  %v28 = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %30, i32 0, i32 6, !dbg !18161
  %31 = load float, float* %v28, align 4, !dbg !18161
  %32 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18162
  %u = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %32, i32 0, i32 5, !dbg !18163
  %33 = load float, float* %u, align 4, !dbg !18163
  %34 = load i32, i32* %addpassflag.addr, align 4, !dbg !18164
  call void @strand_shade_segment(%struct.Render* @R, %struct.StrandShadeCache* %28, %struct.StrandSegment* %sseg, %struct.ShadeSample* %29, float %31, float %33, i32 %34), !dbg !18165
  %35 = load %struct.ZTranspRow*, %struct.ZTranspRow** %row.addr, align 8, !dbg !18166
  %mask = getelementptr inbounds %struct.ZTranspRow, %struct.ZTranspRow* %35, i32 0, i32 3, !dbg !18167
  %36 = load i32, i32* %mask, align 4, !dbg !18167
  %37 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18168
  %shi = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %37, i32 0, i32 2, !dbg !18169
  %arrayidx29 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi, i64 0, i64 0, !dbg !18168
  %mask30 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx29, i32 0, i32 105, !dbg !18170
  store i32 %36, i32* %mask30, align 4, !dbg !18171
  ret void, !dbg !18172
}

; Function Attrs: noinline nounwind uwtable
define internal void @shade_tra_samples_fill(%struct.ShadeSample* %ssamp, i32 %x, i32 %y, i32 %z, i32 %obi, i32 %facenr, i32 %curmask) #0 !dbg !18173 {
entry:
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %obi.addr = alloca i32, align 4
  %facenr.addr = alloca i32, align 4
  %curmask.addr = alloca i32, align 4
  %shi = alloca %struct.ShadeInput*, align 8
  %xs = alloca float, align 4
  %ys = alloca float, align 4
  %shi_inc = alloca i16, align 2
  %samp = alloca i16, align 2
  %b = alloca i16, align 2
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !18176, metadata !DIExpression()), !dbg !18177
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !18178, metadata !DIExpression()), !dbg !18179
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !18180, metadata !DIExpression()), !dbg !18181
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !18182, metadata !DIExpression()), !dbg !18183
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  store i32 %facenr, i32* %facenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %facenr.addr, metadata !18186, metadata !DIExpression()), !dbg !18187
  store i32 %curmask, i32* %curmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curmask.addr, metadata !18188, metadata !DIExpression()), !dbg !18189
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !18190, metadata !DIExpression()), !dbg !18191
  %0 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18192
  %shi1 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %0, i32 0, i32 2, !dbg !18193
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi1, i64 0, i64 0, !dbg !18192
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !18191
  call void @llvm.dbg.declare(metadata float* %xs, metadata !18194, metadata !DIExpression()), !dbg !18195
  call void @llvm.dbg.declare(metadata float* %ys, metadata !18196, metadata !DIExpression()), !dbg !18197
  %1 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18198
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %1, i32 0, i32 0, !dbg !18199
  store i32 0, i32* %tot, align 8, !dbg !18200
  %2 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18201
  %3 = load i32, i32* %obi.addr, align 4, !dbg !18202
  %4 = load i32, i32* %facenr.addr, align 4, !dbg !18203
  call void @shade_input_set_triangle(%struct.ShadeInput* %2, i32 %3, i32 %4, i32 1), !dbg !18204
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18205
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 1, !dbg !18207
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18207
  %tobool = icmp ne %struct.VlakRen* %6, null, !dbg !18205
  br i1 %tobool, label %if.then, label %if.end95, !dbg !18208

if.then:                                          ; preds = %entry
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18209
  %vlr2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 1, !dbg !18212
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr2, align 8, !dbg !18212
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 7, !dbg !18213
  %9 = load i8, i8* %flag, align 1, !dbg !18213
  %conv = zext i8 %9 to i32, !dbg !18209
  %and = and i32 %conv, 8, !dbg !18214
  %tobool3 = icmp ne i32 %and, 0, !dbg !18214
  br i1 %tobool3, label %if.then4, label %if.else37, !dbg !18215

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i16* %shi_inc, metadata !18216, metadata !DIExpression()), !dbg !18218
  store i16 0, i16* %shi_inc, align 2, !dbg !18218
  call void @llvm.dbg.declare(metadata i16* %samp, metadata !18219, metadata !DIExpression()), !dbg !18220
  store i16 0, i16* %samp, align 2, !dbg !18221
  br label %for.cond, !dbg !18223

for.cond:                                         ; preds = %for.inc, %if.then4
  %10 = load i16, i16* %samp, align 2, !dbg !18224
  %conv5 = sext i16 %10 to i32, !dbg !18224
  %11 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !18226
  %conv6 = sext i16 %11 to i32, !dbg !18227
  %cmp = icmp slt i32 %conv5, %conv6, !dbg !18228
  br i1 %cmp, label %for.body, label %for.end, !dbg !18229

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %curmask.addr, align 4, !dbg !18230
  %13 = load i16, i16* %samp, align 2, !dbg !18233
  %conv8 = sext i16 %13 to i32, !dbg !18233
  %shl = shl i32 1, %conv8, !dbg !18234
  %and9 = and i32 %12, %shl, !dbg !18235
  %tobool10 = icmp ne i32 %and9, 0, !dbg !18235
  br i1 %tobool10, label %if.then11, label %if.end35, !dbg !18236

if.then11:                                        ; preds = %for.body
  %14 = load i32, i32* %x.addr, align 4, !dbg !18237
  %conv12 = sitofp i32 %14 to float, !dbg !18239
  %15 = load i16, i16* %samp, align 2, !dbg !18240
  %idxprom = sext i16 %15 to i64, !dbg !18241
  %arrayidx = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom, !dbg !18241
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !18241
  %16 = load float, float* %arrayidx13, align 8, !dbg !18241
  %add = fadd float %conv12, %16, !dbg !18242
  %add14 = fadd float %add, 5.000000e-01, !dbg !18243
  store float %add14, float* %xs, align 4, !dbg !18244
  %17 = load i32, i32* %y.addr, align 4, !dbg !18245
  %conv15 = sitofp i32 %17 to float, !dbg !18246
  %18 = load i16, i16* %samp, align 2, !dbg !18247
  %idxprom16 = sext i16 %18 to i64, !dbg !18248
  %arrayidx17 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 39), i64 0, i64 %idxprom16, !dbg !18248
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 1, !dbg !18248
  %19 = load float, float* %arrayidx18, align 4, !dbg !18248
  %add19 = fadd float %conv15, %19, !dbg !18249
  %add20 = fadd float %add19, 5.000000e-01, !dbg !18250
  store float %add20, float* %ys, align 4, !dbg !18251
  %20 = load i16, i16* %shi_inc, align 2, !dbg !18252
  %tobool21 = icmp ne i16 %20, 0, !dbg !18252
  br i1 %tobool21, label %if.then22, label %if.end, !dbg !18254

if.then22:                                        ; preds = %if.then11
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18255
  %add.ptr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i64 1, !dbg !18257
  %22 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18258
  call void @shade_input_copy_triangle(%struct.ShadeInput* %add.ptr, %struct.ShadeInput* %22), !dbg !18259
  %23 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18260
  %incdec.ptr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %23, i32 1, !dbg !18260
  store %struct.ShadeInput* %incdec.ptr, %struct.ShadeInput** %shi, align 8, !dbg !18260
  br label %if.end, !dbg !18261

if.end:                                           ; preds = %if.then22, %if.then11
  %24 = load i16, i16* %samp, align 2, !dbg !18262
  %conv23 = sext i16 %24 to i32, !dbg !18262
  %shl24 = shl i32 1, %conv23, !dbg !18263
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18264
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 105, !dbg !18265
  store i32 %shl24, i32* %mask, align 4, !dbg !18266
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18267
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 114, !dbg !18268
  %27 = load i16, i16* %thread, align 2, !dbg !18268
  %idxprom25 = sext i16 %27 to i64, !dbg !18269
  %arrayidx26 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 42), i64 0, i64 %idxprom25, !dbg !18269
  %28 = load i32, i32* %arrayidx26, align 4, !dbg !18270
  %inc = add nsw i32 %28, 1, !dbg !18270
  store i32 %inc, i32* %arrayidx26, align 4, !dbg !18270
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18271
  %samplenr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 107, !dbg !18272
  store i32 %28, i32* %samplenr, align 4, !dbg !18273
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18274
  %31 = load i32, i32* %x.addr, align 4, !dbg !18275
  %conv27 = sitofp i32 %31 to float, !dbg !18275
  %32 = load i32, i32* %y.addr, align 4, !dbg !18276
  %conv28 = sitofp i32 %32 to float, !dbg !18276
  %33 = load float, float* %xs, align 4, !dbg !18277
  %34 = load float, float* %ys, align 4, !dbg !18278
  %35 = load i32, i32* %z.addr, align 4, !dbg !18279
  %conv29 = sitofp i32 %35 to float, !dbg !18280
  call void @shade_input_set_viewco(%struct.ShadeInput* %30, float %conv27, float %conv28, float %33, float %34, float %conv29), !dbg !18281
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18282
  call void @shade_input_set_uv(%struct.ShadeInput* %36), !dbg !18283
  %37 = load i16, i16* %shi_inc, align 2, !dbg !18284
  %conv30 = sext i16 %37 to i32, !dbg !18284
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !18286
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !18287

if.then33:                                        ; preds = %if.end
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18288
  call void @shade_input_set_normals(%struct.ShadeInput* %38), !dbg !18289
  br label %if.end34, !dbg !18289

if.else:                                          ; preds = %if.end
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18290
  call void @shade_input_set_vertex_normals(%struct.ShadeInput* %39), !dbg !18291
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then33
  store i16 1, i16* %shi_inc, align 2, !dbg !18292
  br label %if.end35, !dbg !18293

if.end35:                                         ; preds = %if.end34, %for.body
  br label %for.inc, !dbg !18294

for.inc:                                          ; preds = %if.end35
  %40 = load i16, i16* %samp, align 2, !dbg !18295
  %inc36 = add i16 %40, 1, !dbg !18295
  store i16 %inc36, i16* %samp, align 2, !dbg !18295
  br label %for.cond, !dbg !18296, !llvm.loop !18297

for.end:                                          ; preds = %for.cond
  br label %if.end91, !dbg !18299

if.else37:                                        ; preds = %if.then
  %41 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !18300
  %tobool38 = icmp ne i16 %41, 0, !dbg !18303
  br i1 %tobool38, label %if.then39, label %if.else57, !dbg !18304

if.then39:                                        ; preds = %if.else37
  call void @llvm.dbg.declare(metadata i16* %b, metadata !18305, metadata !DIExpression()), !dbg !18307
  %42 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !18308
  %centmask = getelementptr inbounds %struct.SampleTables, %struct.SampleTables* %42, i32 0, i32 4, !dbg !18309
  %43 = load i8*, i8** %centmask, align 8, !dbg !18309
  %44 = load i32, i32* %curmask.addr, align 4, !dbg !18310
  %idxprom40 = sext i32 %44 to i64, !dbg !18311
  %arrayidx41 = getelementptr inbounds i8, i8* %43, i64 %idxprom40, !dbg !18311
  %45 = load i8, i8* %arrayidx41, align 1, !dbg !18311
  %conv42 = zext i8 %45 to i16, !dbg !18311
  store i16 %conv42, i16* %b, align 2, !dbg !18307
  %46 = load i32, i32* %x.addr, align 4, !dbg !18312
  %conv43 = sitofp i32 %46 to float, !dbg !18313
  %47 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !18314
  %centLut = getelementptr inbounds %struct.SampleTables, %struct.SampleTables* %47, i32 0, i32 0, !dbg !18315
  %48 = load i16, i16* %b, align 2, !dbg !18316
  %conv44 = sext i16 %48 to i32, !dbg !18316
  %and45 = and i32 %conv44, 15, !dbg !18317
  %idxprom46 = sext i32 %and45 to i64, !dbg !18318
  %arrayidx47 = getelementptr inbounds [16 x float], [16 x float]* %centLut, i64 0, i64 %idxprom46, !dbg !18318
  %49 = load float, float* %arrayidx47, align 4, !dbg !18318
  %add48 = fadd float %conv43, %49, !dbg !18319
  %add49 = fadd float %add48, 5.000000e-01, !dbg !18320
  store float %add49, float* %xs, align 4, !dbg !18321
  %50 = load i32, i32* %y.addr, align 4, !dbg !18322
  %conv50 = sitofp i32 %50 to float, !dbg !18323
  %51 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !18324
  %centLut51 = getelementptr inbounds %struct.SampleTables, %struct.SampleTables* %51, i32 0, i32 0, !dbg !18325
  %52 = load i16, i16* %b, align 2, !dbg !18326
  %conv52 = sext i16 %52 to i32, !dbg !18326
  %shr = ashr i32 %conv52, 4, !dbg !18327
  %idxprom53 = sext i32 %shr to i64, !dbg !18328
  %arrayidx54 = getelementptr inbounds [16 x float], [16 x float]* %centLut51, i64 0, i64 %idxprom53, !dbg !18328
  %53 = load float, float* %arrayidx54, align 4, !dbg !18328
  %add55 = fadd float %conv50, %53, !dbg !18329
  %add56 = fadd float %add55, 5.000000e-01, !dbg !18330
  store float %add56, float* %ys, align 4, !dbg !18331
  br label %if.end81, !dbg !18332

if.else57:                                        ; preds = %if.else37
  %54 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !18333
  %tobool58 = icmp ne i16 %54, 0, !dbg !18335
  br i1 %tobool58, label %if.then59, label %if.else75, !dbg !18336

if.then59:                                        ; preds = %if.else57
  %55 = load i32, i32* %x.addr, align 4, !dbg !18337
  %conv60 = sitofp i32 %55 to float, !dbg !18339
  %56 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !18340
  %conv61 = sext i16 %56 to i32, !dbg !18341
  %sub = sub nsw i32 %conv61, 1, !dbg !18342
  %idxprom62 = sext i32 %sub to i64, !dbg !18343
  %arrayidx63 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 40), i64 0, i64 %idxprom62, !dbg !18343
  %arrayidx64 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx63, i64 0, i64 0, !dbg !18343
  %57 = load float, float* %arrayidx64, align 8, !dbg !18343
  %add65 = fadd float %conv60, %57, !dbg !18344
  %add66 = fadd float %add65, 5.000000e-01, !dbg !18345
  store float %add66, float* %xs, align 4, !dbg !18346
  %58 = load i32, i32* %y.addr, align 4, !dbg !18347
  %conv67 = sitofp i32 %58 to float, !dbg !18348
  %59 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 8), align 2, !dbg !18349
  %conv68 = sext i16 %59 to i32, !dbg !18350
  %sub69 = sub nsw i32 %conv68, 1, !dbg !18351
  %idxprom70 = sext i32 %sub69 to i64, !dbg !18352
  %arrayidx71 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 40), i64 0, i64 %idxprom70, !dbg !18352
  %arrayidx72 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx71, i64 0, i64 1, !dbg !18352
  %60 = load float, float* %arrayidx72, align 4, !dbg !18352
  %add73 = fadd float %conv67, %60, !dbg !18353
  %add74 = fadd float %add73, 5.000000e-01, !dbg !18354
  store float %add74, float* %ys, align 4, !dbg !18355
  br label %if.end80, !dbg !18356

if.else75:                                        ; preds = %if.else57
  %61 = load i32, i32* %x.addr, align 4, !dbg !18357
  %conv76 = sitofp i32 %61 to float, !dbg !18359
  %add77 = fadd float %conv76, 5.000000e-01, !dbg !18360
  store float %add77, float* %xs, align 4, !dbg !18361
  %62 = load i32, i32* %y.addr, align 4, !dbg !18362
  %conv78 = sitofp i32 %62 to float, !dbg !18363
  %add79 = fadd float %conv78, 5.000000e-01, !dbg !18364
  store float %add79, float* %ys, align 4, !dbg !18365
  br label %if.end80

if.end80:                                         ; preds = %if.else75, %if.then59
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then39
  %63 = load i32, i32* %curmask.addr, align 4, !dbg !18366
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18367
  %mask82 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 105, !dbg !18368
  store i32 %63, i32* %mask82, align 4, !dbg !18369
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18370
  %thread83 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 114, !dbg !18371
  %66 = load i16, i16* %thread83, align 2, !dbg !18371
  %idxprom84 = sext i16 %66 to i64, !dbg !18372
  %arrayidx85 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 42), i64 0, i64 %idxprom84, !dbg !18372
  %67 = load i32, i32* %arrayidx85, align 4, !dbg !18373
  %inc86 = add nsw i32 %67, 1, !dbg !18373
  store i32 %inc86, i32* %arrayidx85, align 4, !dbg !18373
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18374
  %samplenr87 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 107, !dbg !18375
  store i32 %67, i32* %samplenr87, align 4, !dbg !18376
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18377
  %70 = load i32, i32* %x.addr, align 4, !dbg !18378
  %conv88 = sitofp i32 %70 to float, !dbg !18378
  %71 = load i32, i32* %y.addr, align 4, !dbg !18379
  %conv89 = sitofp i32 %71 to float, !dbg !18379
  %72 = load float, float* %xs, align 4, !dbg !18380
  %73 = load float, float* %ys, align 4, !dbg !18381
  %74 = load i32, i32* %z.addr, align 4, !dbg !18382
  %conv90 = sitofp i32 %74 to float, !dbg !18383
  call void @shade_input_set_viewco(%struct.ShadeInput* %69, float %conv88, float %conv89, float %72, float %73, float %conv90), !dbg !18384
  %75 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18385
  call void @shade_input_set_uv(%struct.ShadeInput* %75), !dbg !18386
  %76 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18387
  call void @shade_input_set_normals(%struct.ShadeInput* %76), !dbg !18388
  br label %if.end91

if.end91:                                         ; preds = %if.end81, %for.end
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !18389
  %sample = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 115, !dbg !18390
  %78 = load i16, i16* %sample, align 4, !dbg !18390
  %conv92 = sext i16 %78 to i32, !dbg !18389
  %add93 = add nsw i32 %conv92, 1, !dbg !18391
  %79 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !18392
  %tot94 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %79, i32 0, i32 0, !dbg !18393
  store i32 %add93, i32* %tot94, align 8, !dbg !18394
  br label %if.end95, !dbg !18395

if.end95:                                         ; preds = %if.end91, %entry
  ret void, !dbg !18396
}

declare dso_local void @shade_samples_do_AO(%struct.ShadeSample*) #3

declare dso_local void @shade_input_set_shade_texco(%struct.ShadeInput*) #3

declare dso_local void @shade_input_do_shade(%struct.ShadeInput*, %struct.ShadeResult*) #3

declare dso_local void @renderspothalo(%struct.ShadeInput*, float*, float) #3

declare dso_local void @strand_shade_segment(%struct.Render*, %struct.StrandShadeCache*, %struct.StrandSegment*, %struct.ShadeSample*, float, float, i32) #3

declare dso_local void @shade_input_set_triangle(%struct.ShadeInput*, i32, i32, i32) #3

declare dso_local void @shade_input_copy_triangle(%struct.ShadeInput*, %struct.ShadeInput*) #3

declare dso_local void @shade_input_set_viewco(%struct.ShadeInput*, float, float, float, float, float) #3

declare dso_local void @shade_input_set_uv(%struct.ShadeInput*) #3

declare dso_local void @shade_input_set_normals(%struct.ShadeInput*) #3

declare dso_local void @shade_input_set_vertex_normals(%struct.ShadeInput*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !18397 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18400, metadata !DIExpression()), !dbg !18401
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18402, metadata !DIExpression()), !dbg !18403
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !18404, metadata !DIExpression()), !dbg !18405
  %0 = load float*, float** %a.addr, align 8, !dbg !18406
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18406
  %1 = load float, float* %arrayidx, align 4, !dbg !18406
  %2 = load float, float* %f.addr, align 4, !dbg !18407
  %mul = fmul float %1, %2, !dbg !18408
  %3 = load float*, float** %r.addr, align 8, !dbg !18409
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !18409
  %4 = load float, float* %arrayidx1, align 4, !dbg !18410
  %add = fadd float %4, %mul, !dbg !18410
  store float %add, float* %arrayidx1, align 4, !dbg !18410
  %5 = load float*, float** %a.addr, align 8, !dbg !18411
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !18411
  %6 = load float, float* %arrayidx2, align 4, !dbg !18411
  %7 = load float, float* %f.addr, align 4, !dbg !18412
  %mul3 = fmul float %6, %7, !dbg !18413
  %8 = load float*, float** %r.addr, align 8, !dbg !18414
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !18414
  %9 = load float, float* %arrayidx4, align 4, !dbg !18415
  %add5 = fadd float %9, %mul3, !dbg !18415
  store float %add5, float* %arrayidx4, align 4, !dbg !18415
  %10 = load float*, float** %a.addr, align 8, !dbg !18416
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !18416
  %11 = load float, float* %arrayidx6, align 4, !dbg !18416
  %12 = load float, float* %f.addr, align 4, !dbg !18417
  %mul7 = fmul float %11, %12, !dbg !18418
  %13 = load float*, float** %r.addr, align 8, !dbg !18419
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !18419
  %14 = load float, float* %arrayidx8, align 4, !dbg !18420
  %add9 = fadd float %14, %mul7, !dbg !18420
  store float %add9, float* %arrayidx8, align 4, !dbg !18420
  ret void, !dbg !18421
}

declare dso_local void @strand_shade_unref(%struct.StrandShadeCache*, %struct.ObjectInstanceRen*, %struct.StrandVert*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!32}
!llvm.module.flags = !{!113, !114, !115}
!llvm.ident = !{!116}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "jit", scope: !2, file: !3, line: 2896, type: !109, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "RE_zbuf_accumulate_vecblur", scope: !3, file: !3, line: 2892, type: !4, scopeLine: 2893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/zbuf.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !29, !29, !31, !31, !31, !31}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeBlurData", file: !8, line: 580, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeBlurData", file: !8, line: 572, size: 320, elements: !10)
!10 = !{!11, !13, !14, !15, !16, !17, !18, !19, !20, !22, !23, !24, !25, !27, !28, !30}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !9, file: !8, line: 573, baseType: !12, size: 16)
!12 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !9, file: !8, line: 573, baseType: !12, size: 16, offset: 16)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !9, file: !8, line: 574, baseType: !12, size: 16, offset: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "maxspeed", scope: !9, file: !8, line: 574, baseType: !12, size: 16, offset: 48)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "minspeed", scope: !9, file: !8, line: 574, baseType: !12, size: 16, offset: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !9, file: !8, line: 574, baseType: !12, size: 16, offset: 80)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !9, file: !8, line: 574, baseType: !12, size: 16, offset: 96)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "curved", scope: !9, file: !8, line: 575, baseType: !12, size: 16, offset: 112)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "fac", scope: !9, file: !8, line: 576, baseType: !21, size: 32, offset: 128)
!21 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "percentx", scope: !9, file: !8, line: 576, baseType: !21, size: 32, offset: 160)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "percenty", scope: !9, file: !8, line: 576, baseType: !21, size: 32, offset: 192)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !9, file: !8, line: 577, baseType: !12, size: 16, offset: 224)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "bokeh", scope: !9, file: !8, line: 578, baseType: !26, size: 8, offset: 240)
!26 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !9, file: !8, line: 578, baseType: !26, size: 8, offset: 248)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "image_in_width", scope: !9, file: !8, line: 579, baseType: !29, size: 32, offset: 256)
!29 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "image_in_height", scope: !9, file: !8, line: 579, baseType: !29, size: 32, offset: 288)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!32 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !33, retainedTypes: !78, globals: !105, splitDebugInlining: false, nameTableKind: None)
!33 = !{!34, !43}
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 332, baseType: !36, size: 32, elements: !37)
!35 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!36 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!37 = !{!38, !39, !40, !41, !42}
!38 = !DIEnumerator(name: "ME_V1V2", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "ME_V2V3", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "ME_V3V1", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "ME_V3V4", value: 4, isUnsigned: true)
!42 = !DIEnumerator(name: "ME_V4V1", value: 8, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !44, line: 213, baseType: !29, size: 32, elements: !45)
!44 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77}
!46 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!47 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!48 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!49 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!50 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!51 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!52 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!53 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!54 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!55 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!56 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!57 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!58 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!59 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!60 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!61 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!62 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!63 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!64 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!65 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!66 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!67 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!68 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!69 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!70 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!71 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!72 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!73 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!74 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!75 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!76 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!77 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!78 = !{!79, !80, !21, !81, !82, !29, !31, !83, !91}
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!80 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawBufPixel", file: !3, line: 2664, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DrawBufPixel", file: !3, line: 2661, size: 128, elements: !86)
!86 = !{!87, !90}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "colpoin", scope: !85, file: !3, line: 2662, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !85, file: !3, line: 2663, baseType: !21, size: 32, offset: 64)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixStr", file: !93, line: 54, baseType: !94)
!93 = !DIFile(filename: "blender/source/blender/render/intern/include/rendercore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixStr", file: !93, line: 49, size: 256, elements: !95)
!95 = !{!96, !98, !99, !100, !101, !102, !104}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !94, file: !93, line: 50, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !94, file: !93, line: 51, baseType: !29, size: 32, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !94, file: !93, line: 51, baseType: !29, size: 32, offset: 96)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !94, file: !93, line: 51, baseType: !29, size: 32, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "maskz", scope: !94, file: !93, line: 51, baseType: !29, size: 32, offset: 160)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !94, file: !93, line: 52, baseType: !103, size: 16, offset: 192)
!103 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !94, file: !93, line: 53, baseType: !12, size: 16, offset: 208)
!105 = !{!0, !106}
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "firsttime", scope: !2, file: !3, line: 2903, type: !29, isLocal: true, isDefinition: true)
!108 = !{}
!109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 16384, elements: !110)
!110 = !{!111, !112}
!111 = !DISubrange(count: 256)
!112 = !DISubrange(count: 2)
!113 = !{i32 7, !"Dwarf Version", i32 4}
!114 = !{i32 2, !"Debug Info Version", i32 3}
!115 = !{i32 1, !"wchar_size", i32 4}
!116 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!117 = distinct !DISubprogram(name: "zbuf_alloc_span", scope: !3, file: !3, line: 92, type: !118, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!118 = !DISubroutineType(types: !119)
!119 = !{null, !120, !29, !29, !21}
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZSpan", file: !122, line: 120, baseType: !123)
!122 = !DIFile(filename: "blender/source/blender/render/intern/include/zbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZSpan", file: !122, line: 89, size: 1792, elements: !124)
!124 = !{!125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !164, !165, !180, !187, !188, !189, !190, !191, !192, !193, !194, !198, !203}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !123, file: !122, line: 90, baseType: !29, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !123, file: !122, line: 90, baseType: !29, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "miny1", scope: !123, file: !122, line: 92, baseType: !29, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "maxy1", scope: !123, file: !122, line: 92, baseType: !29, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "miny2", scope: !123, file: !122, line: 92, baseType: !29, size: 32, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "maxy2", scope: !123, file: !122, line: 92, baseType: !29, size: 32, offset: 160)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "minp1", scope: !123, file: !122, line: 93, baseType: !88, size: 64, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "maxp1", scope: !123, file: !122, line: 93, baseType: !88, size: 64, offset: 256)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "minp2", scope: !123, file: !122, line: 93, baseType: !88, size: 64, offset: 320)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "maxp2", scope: !123, file: !122, line: 93, baseType: !88, size: 64, offset: 384)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "span1", scope: !123, file: !122, line: 94, baseType: !31, size: 64, offset: 448)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "span2", scope: !123, file: !122, line: 94, baseType: !31, size: 64, offset: 512)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "zmulx", scope: !123, file: !122, line: 96, baseType: !21, size: 32, offset: 576)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "zmuly", scope: !123, file: !122, line: 96, baseType: !21, size: 32, offset: 608)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "zofsx", scope: !123, file: !122, line: 96, baseType: !21, size: 32, offset: 640)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "zofsy", scope: !123, file: !122, line: 96, baseType: !21, size: 32, offset: 672)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !123, file: !122, line: 98, baseType: !81, size: 64, offset: 704)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "arectz", scope: !123, file: !122, line: 98, baseType: !81, size: 64, offset: 768)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "rectz1", scope: !123, file: !122, line: 99, baseType: !81, size: 64, offset: 832)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !123, file: !122, line: 100, baseType: !81, size: 64, offset: 896)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !123, file: !122, line: 101, baseType: !81, size: 64, offset: 960)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !123, file: !122, line: 102, baseType: !81, size: 64, offset: 1024)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "apixbuf", scope: !123, file: !122, line: 103, baseType: !148, size: 64, offset: 1088)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstr", file: !122, line: 71, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstr", file: !122, line: 64, size: 576, elements: !151)
!151 = !{!152, !156, !158, !159, !160, !162}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !122, line: 65, baseType: !153, size: 64)
!153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !154)
!154 = !{!155}
!155 = !DISubrange(count: 4)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !150, file: !122, line: 66, baseType: !157, size: 128, offset: 64)
!157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 128, elements: !154)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !150, file: !122, line: 67, baseType: !157, size: 128, offset: 192)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !150, file: !122, line: 68, baseType: !157, size: 128, offset: 320)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !150, file: !122, line: 69, baseType: !161, size: 64, offset: 448)
!161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 64, elements: !154)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !122, line: 70, baseType: !163, size: 64, offset: 512)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "curpstr", scope: !123, file: !122, line: 103, baseType: !148, size: 64, offset: 1152)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "curpstrand", scope: !123, file: !122, line: 104, baseType: !166, size: 64, offset: 1216)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstrand", file: !122, line: 81, baseType: !168)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstrand", file: !122, line: 73, size: 896, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !177, !178}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !168, file: !122, line: 74, baseType: !153, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !168, file: !122, line: 75, baseType: !157, size: 128, offset: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !168, file: !122, line: 76, baseType: !157, size: 128, offset: 192)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !168, file: !122, line: 77, baseType: !157, size: 128, offset: 320)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !168, file: !122, line: 78, baseType: !157, size: 128, offset: 448)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !168, file: !122, line: 79, baseType: !176, size: 128, offset: 576)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !154)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !168, file: !122, line: 79, baseType: !176, size: 128, offset: 704)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !168, file: !122, line: 80, baseType: !179, size: 64, offset: 832)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "apsmbase", scope: !123, file: !122, line: 105, baseType: !181, size: 64, offset: 1280)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !183, line: 69, size: 128, elements: !184)
!183 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!184 = !{!185, !186}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !182, file: !183, line: 70, baseType: !79, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !182, file: !183, line: 70, baseType: !79, size: 64, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "polygon_offset", scope: !123, file: !122, line: 107, baseType: !29, size: 32, offset: 1344)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !123, file: !122, line: 108, baseType: !21, size: 32, offset: 1376)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !123, file: !122, line: 109, baseType: !29, size: 32, offset: 1408)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "apsmcounter", scope: !123, file: !122, line: 109, baseType: !29, size: 32, offset: 1440)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "apstrandmcounter", scope: !123, file: !122, line: 110, baseType: !29, size: 32, offset: 1472)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !123, file: !122, line: 112, baseType: !21, size: 32, offset: 1504)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sss_handle", scope: !123, file: !122, line: 114, baseType: !79, size: 64, offset: 1536)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sss_func", scope: !123, file: !122, line: 115, baseType: !195, size: 64, offset: 1600)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{null, !79, !29, !29, !29, !29, !29}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "zbuffunc", scope: !123, file: !122, line: 117, baseType: !199, size: 64, offset: 1664)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !202, !29, !29, !88, !88, !88, !88}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "zbuflinefunc", scope: !123, file: !122, line: 118, baseType: !204, size: 64, offset: 1728)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !202, !29, !29, !88, !88}
!207 = !DILocalVariable(name: "zspan", arg: 1, scope: !117, file: !3, line: 92, type: !120)
!208 = !DILocation(line: 92, column: 29, scope: !117)
!209 = !DILocalVariable(name: "rectx", arg: 2, scope: !117, file: !3, line: 92, type: !29)
!210 = !DILocation(line: 92, column: 40, scope: !117)
!211 = !DILocalVariable(name: "recty", arg: 3, scope: !117, file: !3, line: 92, type: !29)
!212 = !DILocation(line: 92, column: 51, scope: !117)
!213 = !DILocalVariable(name: "clipcrop", arg: 4, scope: !117, file: !3, line: 92, type: !21)
!214 = !DILocation(line: 92, column: 64, scope: !117)
!215 = !DILocation(line: 94, column: 9, scope: !117)
!216 = !DILocation(line: 94, column: 2, scope: !117)
!217 = !DILocation(line: 96, column: 16, scope: !117)
!218 = !DILocation(line: 96, column: 2, scope: !117)
!219 = !DILocation(line: 96, column: 9, scope: !117)
!220 = !DILocation(line: 96, column: 14, scope: !117)
!221 = !DILocation(line: 97, column: 16, scope: !117)
!222 = !DILocation(line: 97, column: 2, scope: !117)
!223 = !DILocation(line: 97, column: 9, scope: !117)
!224 = !DILocation(line: 97, column: 14, scope: !117)
!225 = !DILocation(line: 99, column: 16, scope: !117)
!226 = !DILocation(line: 99, column: 28, scope: !117)
!227 = !DILocation(line: 99, column: 33, scope: !117)
!228 = !DILocation(line: 99, column: 2, scope: !117)
!229 = !DILocation(line: 99, column: 9, scope: !117)
!230 = !DILocation(line: 99, column: 14, scope: !117)
!231 = !DILocation(line: 100, column: 16, scope: !117)
!232 = !DILocation(line: 100, column: 28, scope: !117)
!233 = !DILocation(line: 100, column: 33, scope: !117)
!234 = !DILocation(line: 100, column: 2, scope: !117)
!235 = !DILocation(line: 100, column: 9, scope: !117)
!236 = !DILocation(line: 100, column: 14, scope: !117)
!237 = !DILocation(line: 102, column: 19, scope: !117)
!238 = !DILocation(line: 102, column: 2, scope: !117)
!239 = !DILocation(line: 102, column: 9, scope: !117)
!240 = !DILocation(line: 102, column: 17, scope: !117)
!241 = !DILocation(line: 103, column: 1, scope: !117)
!242 = distinct !DISubprogram(name: "zbuf_free_span", scope: !3, file: !3, line: 105, type: !243, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!243 = !DISubroutineType(types: !244)
!244 = !{null, !120}
!245 = !DILocalVariable(name: "zspan", arg: 1, scope: !242, file: !3, line: 105, type: !120)
!246 = !DILocation(line: 105, column: 28, scope: !242)
!247 = !DILocation(line: 107, column: 6, scope: !248)
!248 = distinct !DILexicalBlock(scope: !242, file: !3, line: 107, column: 6)
!249 = !DILocation(line: 107, column: 6, scope: !242)
!250 = !DILocation(line: 108, column: 7, scope: !251)
!251 = distinct !DILexicalBlock(scope: !252, file: !3, line: 108, column: 7)
!252 = distinct !DILexicalBlock(scope: !248, file: !3, line: 107, column: 13)
!253 = !DILocation(line: 108, column: 14, scope: !251)
!254 = !DILocation(line: 108, column: 7, scope: !252)
!255 = !DILocation(line: 108, column: 21, scope: !251)
!256 = !DILocation(line: 108, column: 31, scope: !251)
!257 = !DILocation(line: 108, column: 38, scope: !251)
!258 = !DILocation(line: 109, column: 7, scope: !259)
!259 = distinct !DILexicalBlock(scope: !252, file: !3, line: 109, column: 7)
!260 = !DILocation(line: 109, column: 14, scope: !259)
!261 = !DILocation(line: 109, column: 7, scope: !252)
!262 = !DILocation(line: 109, column: 21, scope: !259)
!263 = !DILocation(line: 109, column: 31, scope: !259)
!264 = !DILocation(line: 109, column: 38, scope: !259)
!265 = !DILocation(line: 110, column: 17, scope: !252)
!266 = !DILocation(line: 110, column: 24, scope: !252)
!267 = !DILocation(line: 110, column: 29, scope: !252)
!268 = !DILocation(line: 110, column: 3, scope: !252)
!269 = !DILocation(line: 110, column: 10, scope: !252)
!270 = !DILocation(line: 110, column: 15, scope: !252)
!271 = !DILocation(line: 111, column: 2, scope: !252)
!272 = !DILocation(line: 112, column: 1, scope: !242)
!273 = distinct !DISubprogram(name: "fillrect", scope: !3, file: !3, line: 205, type: !274, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !81, !29, !29, !29}
!276 = !DILocalVariable(name: "rect", arg: 1, scope: !273, file: !3, line: 205, type: !81)
!277 = !DILocation(line: 205, column: 20, scope: !273)
!278 = !DILocalVariable(name: "x", arg: 2, scope: !273, file: !3, line: 205, type: !29)
!279 = !DILocation(line: 205, column: 30, scope: !273)
!280 = !DILocalVariable(name: "y", arg: 3, scope: !273, file: !3, line: 205, type: !29)
!281 = !DILocation(line: 205, column: 37, scope: !273)
!282 = !DILocalVariable(name: "val", arg: 4, scope: !273, file: !3, line: 205, type: !29)
!283 = !DILocation(line: 205, column: 44, scope: !273)
!284 = !DILocalVariable(name: "len", scope: !273, file: !3, line: 207, type: !29)
!285 = !DILocation(line: 207, column: 6, scope: !273)
!286 = !DILocalVariable(name: "drect", scope: !273, file: !3, line: 207, type: !81)
!287 = !DILocation(line: 207, column: 12, scope: !273)
!288 = !DILocation(line: 209, column: 7, scope: !273)
!289 = !DILocation(line: 209, column: 9, scope: !273)
!290 = !DILocation(line: 209, column: 8, scope: !273)
!291 = !DILocation(line: 209, column: 5, scope: !273)
!292 = !DILocation(line: 210, column: 9, scope: !273)
!293 = !DILocation(line: 210, column: 7, scope: !273)
!294 = !DILocation(line: 211, column: 2, scope: !273)
!295 = !DILocation(line: 211, column: 9, scope: !273)
!296 = !DILocation(line: 211, column: 12, scope: !273)
!297 = !DILocation(line: 212, column: 6, scope: !298)
!298 = distinct !DILexicalBlock(scope: !273, file: !3, line: 211, column: 16)
!299 = !DILocation(line: 213, column: 11, scope: !298)
!300 = !DILocation(line: 213, column: 4, scope: !298)
!301 = !DILocation(line: 213, column: 9, scope: !298)
!302 = !DILocation(line: 214, column: 8, scope: !298)
!303 = distinct !{!303, !294, !304}
!304 = !DILocation(line: 215, column: 2, scope: !273)
!305 = !DILocation(line: 216, column: 1, scope: !273)
!306 = distinct !DISubprogram(name: "testclip", scope: !3, file: !3, line: 245, type: !307, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!307 = !DISubroutineType(types: !308)
!308 = !{!29, !88}
!309 = !DILocalVariable(name: "v", arg: 1, scope: !306, file: !3, line: 245, type: !88)
!310 = !DILocation(line: 245, column: 26, scope: !306)
!311 = !DILocalVariable(name: "abs4", scope: !306, file: !3, line: 247, type: !21)
!312 = !DILocation(line: 247, column: 8, scope: !306)
!313 = !DILocalVariable(name: "c", scope: !306, file: !3, line: 248, type: !12)
!314 = !DILocation(line: 248, column: 8, scope: !306)
!315 = !DILocation(line: 252, column: 14, scope: !306)
!316 = !DILocation(line: 252, column: 8, scope: !306)
!317 = !DILocation(line: 252, column: 20, scope: !306)
!318 = !DILocation(line: 252, column: 6, scope: !306)
!319 = !DILocation(line: 254, column: 7, scope: !320)
!320 = distinct !DILexicalBlock(scope: !306, file: !3, line: 254, column: 7)
!321 = !DILocation(line: 254, column: 15, scope: !320)
!322 = !DILocation(line: 254, column: 14, scope: !320)
!323 = !DILocation(line: 254, column: 12, scope: !320)
!324 = !DILocation(line: 254, column: 7, scope: !306)
!325 = !DILocation(line: 254, column: 22, scope: !320)
!326 = !DILocation(line: 254, column: 21, scope: !320)
!327 = !DILocation(line: 255, column: 12, scope: !328)
!328 = distinct !DILexicalBlock(scope: !320, file: !3, line: 255, column: 12)
!329 = !DILocation(line: 255, column: 19, scope: !328)
!330 = !DILocation(line: 255, column: 17, scope: !328)
!331 = !DILocation(line: 255, column: 12, scope: !320)
!332 = !DILocation(line: 255, column: 26, scope: !328)
!333 = !DILocation(line: 255, column: 25, scope: !328)
!334 = !DILocation(line: 257, column: 7, scope: !335)
!335 = distinct !DILexicalBlock(scope: !306, file: !3, line: 257, column: 7)
!336 = !DILocation(line: 257, column: 14, scope: !335)
!337 = !DILocation(line: 257, column: 12, scope: !335)
!338 = !DILocation(line: 257, column: 7, scope: !306)
!339 = !DILocation(line: 257, column: 21, scope: !335)
!340 = !DILocation(line: 257, column: 20, scope: !335)
!341 = !DILocation(line: 258, column: 12, scope: !342)
!342 = distinct !DILexicalBlock(scope: !335, file: !3, line: 258, column: 12)
!343 = !DILocation(line: 258, column: 20, scope: !342)
!344 = !DILocation(line: 258, column: 19, scope: !342)
!345 = !DILocation(line: 258, column: 17, scope: !342)
!346 = !DILocation(line: 258, column: 12, scope: !335)
!347 = !DILocation(line: 258, column: 27, scope: !342)
!348 = !DILocation(line: 258, column: 26, scope: !342)
!349 = !DILocation(line: 260, column: 6, scope: !350)
!350 = distinct !DILexicalBlock(scope: !306, file: !3, line: 260, column: 6)
!351 = !DILocation(line: 260, column: 14, scope: !350)
!352 = !DILocation(line: 260, column: 13, scope: !350)
!353 = !DILocation(line: 260, column: 11, scope: !350)
!354 = !DILocation(line: 260, column: 6, scope: !306)
!355 = !DILocation(line: 260, column: 21, scope: !350)
!356 = !DILocation(line: 260, column: 20, scope: !350)
!357 = !DILocation(line: 261, column: 11, scope: !358)
!358 = distinct !DILexicalBlock(scope: !350, file: !3, line: 261, column: 11)
!359 = !DILocation(line: 261, column: 17, scope: !358)
!360 = !DILocation(line: 261, column: 15, scope: !358)
!361 = !DILocation(line: 261, column: 11, scope: !350)
!362 = !DILocation(line: 261, column: 24, scope: !358)
!363 = !DILocation(line: 261, column: 23, scope: !358)
!364 = !DILocation(line: 263, column: 9, scope: !306)
!365 = !DILocation(line: 263, column: 2, scope: !306)
!366 = distinct !DISubprogram(name: "freepsA", scope: !3, file: !3, line: 282, type: !367, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!367 = !DISubroutineType(types: !368)
!368 = !{null, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !183, line: 71, baseType: !182)
!371 = !DILocalVariable(name: "lb", arg: 1, scope: !366, file: !3, line: 282, type: !369)
!372 = !DILocation(line: 282, column: 24, scope: !366)
!373 = !DILocalVariable(name: "psm", scope: !366, file: !3, line: 284, type: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstrMain", file: !122, line: 86, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstrMain", file: !122, line: 83, size: 192, elements: !377)
!377 = !{!378, !380, !381}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !376, file: !122, line: 84, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !376, file: !122, line: 84, baseType: !379, size: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !376, file: !122, line: 85, baseType: !79, size: 64, offset: 128)
!382 = !DILocation(line: 284, column: 15, scope: !366)
!383 = !DILocalVariable(name: "psmnext", scope: !366, file: !3, line: 284, type: !374)
!384 = !DILocation(line: 284, column: 21, scope: !366)
!385 = !DILocation(line: 286, column: 12, scope: !386)
!386 = distinct !DILexicalBlock(scope: !366, file: !3, line: 286, column: 2)
!387 = !DILocation(line: 286, column: 16, scope: !386)
!388 = !DILocation(line: 286, column: 10, scope: !386)
!389 = !DILocation(line: 286, column: 7, scope: !386)
!390 = !DILocation(line: 286, column: 23, scope: !391)
!391 = distinct !DILexicalBlock(scope: !386, file: !3, line: 286, column: 2)
!392 = !DILocation(line: 286, column: 2, scope: !386)
!393 = !DILocation(line: 287, column: 12, scope: !394)
!394 = distinct !DILexicalBlock(scope: !391, file: !3, line: 286, column: 42)
!395 = !DILocation(line: 287, column: 17, scope: !394)
!396 = !DILocation(line: 287, column: 10, scope: !394)
!397 = !DILocation(line: 288, column: 7, scope: !398)
!398 = distinct !DILexicalBlock(scope: !394, file: !3, line: 288, column: 7)
!399 = !DILocation(line: 288, column: 12, scope: !398)
!400 = !DILocation(line: 288, column: 7, scope: !394)
!401 = !DILocation(line: 289, column: 4, scope: !398)
!402 = !DILocation(line: 289, column: 14, scope: !398)
!403 = !DILocation(line: 289, column: 19, scope: !398)
!404 = !DILocation(line: 290, column: 3, scope: !394)
!405 = !DILocation(line: 290, column: 13, scope: !394)
!406 = !DILocation(line: 291, column: 2, scope: !394)
!407 = !DILocation(line: 286, column: 33, scope: !391)
!408 = !DILocation(line: 286, column: 31, scope: !391)
!409 = !DILocation(line: 286, column: 2, scope: !391)
!410 = distinct !{!410, !392, !411}
!411 = !DILocation(line: 291, column: 2, scope: !386)
!412 = !DILocation(line: 292, column: 1, scope: !366)
!413 = distinct !DISubprogram(name: "hoco_to_zco", scope: !3, file: !3, line: 900, type: !414, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!414 = !DISubroutineType(types: !415)
!415 = !{null, !120, !31, !88}
!416 = !DILocalVariable(name: "zspan", arg: 1, scope: !413, file: !3, line: 900, type: !120)
!417 = !DILocation(line: 900, column: 25, scope: !413)
!418 = !DILocalVariable(name: "zco", arg: 2, scope: !413, file: !3, line: 900, type: !31)
!419 = !DILocation(line: 900, column: 38, scope: !413)
!420 = !DILocalVariable(name: "hoco", arg: 3, scope: !413, file: !3, line: 900, type: !88)
!421 = !DILocation(line: 900, column: 58, scope: !413)
!422 = !DILocalVariable(name: "div", scope: !413, file: !3, line: 902, type: !21)
!423 = !DILocation(line: 902, column: 8, scope: !413)
!424 = !DILocation(line: 904, column: 12, scope: !413)
!425 = !DILocation(line: 904, column: 11, scope: !413)
!426 = !DILocation(line: 904, column: 5, scope: !413)
!427 = !DILocation(line: 905, column: 10, scope: !413)
!428 = !DILocation(line: 905, column: 17, scope: !413)
!429 = !DILocation(line: 905, column: 29, scope: !413)
!430 = !DILocation(line: 905, column: 37, scope: !413)
!431 = !DILocation(line: 905, column: 36, scope: !413)
!432 = !DILocation(line: 905, column: 28, scope: !413)
!433 = !DILocation(line: 905, column: 22, scope: !413)
!434 = !DILocation(line: 905, column: 44, scope: !413)
!435 = !DILocation(line: 905, column: 51, scope: !413)
!436 = !DILocation(line: 905, column: 42, scope: !413)
!437 = !DILocation(line: 905, column: 2, scope: !413)
!438 = !DILocation(line: 905, column: 8, scope: !413)
!439 = !DILocation(line: 906, column: 10, scope: !413)
!440 = !DILocation(line: 906, column: 17, scope: !413)
!441 = !DILocation(line: 906, column: 29, scope: !413)
!442 = !DILocation(line: 906, column: 37, scope: !413)
!443 = !DILocation(line: 906, column: 36, scope: !413)
!444 = !DILocation(line: 906, column: 28, scope: !413)
!445 = !DILocation(line: 906, column: 22, scope: !413)
!446 = !DILocation(line: 906, column: 44, scope: !413)
!447 = !DILocation(line: 906, column: 51, scope: !413)
!448 = !DILocation(line: 906, column: 42, scope: !413)
!449 = !DILocation(line: 906, column: 2, scope: !413)
!450 = !DILocation(line: 906, column: 8, scope: !413)
!451 = !DILocation(line: 907, column: 23, scope: !413)
!452 = !DILocation(line: 907, column: 31, scope: !413)
!453 = !DILocation(line: 907, column: 30, scope: !413)
!454 = !DILocation(line: 907, column: 21, scope: !413)
!455 = !DILocation(line: 907, column: 2, scope: !413)
!456 = !DILocation(line: 907, column: 8, scope: !413)
!457 = !DILocation(line: 908, column: 1, scope: !413)
!458 = distinct !DISubprogram(name: "zbufclipwire", scope: !3, file: !3, line: 910, type: !459, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!459 = !DISubroutineType(types: !460)
!460 = !{null, !120, !29, !29, !29, !88, !88, !88, !88, !461, !461, !461, !461}
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !29)
!462 = !DILocalVariable(name: "zspan", arg: 1, scope: !458, file: !3, line: 910, type: !120)
!463 = !DILocation(line: 910, column: 26, scope: !458)
!464 = !DILocalVariable(name: "obi", arg: 2, scope: !458, file: !3, line: 910, type: !29)
!465 = !DILocation(line: 910, column: 37, scope: !458)
!466 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !458, file: !3, line: 910, type: !29)
!467 = !DILocation(line: 910, column: 46, scope: !458)
!468 = !DILocalVariable(name: "ec", arg: 4, scope: !458, file: !3, line: 910, type: !29)
!469 = !DILocation(line: 910, column: 57, scope: !458)
!470 = !DILocalVariable(name: "ho1", arg: 5, scope: !458, file: !3, line: 911, type: !88)
!471 = !DILocation(line: 911, column: 31, scope: !458)
!472 = !DILocalVariable(name: "ho2", arg: 6, scope: !458, file: !3, line: 911, type: !88)
!473 = !DILocation(line: 911, column: 51, scope: !458)
!474 = !DILocalVariable(name: "ho3", arg: 7, scope: !458, file: !3, line: 911, type: !88)
!475 = !DILocation(line: 911, column: 71, scope: !458)
!476 = !DILocalVariable(name: "ho4", arg: 8, scope: !458, file: !3, line: 911, type: !88)
!477 = !DILocation(line: 911, column: 91, scope: !458)
!478 = !DILocalVariable(name: "c1", arg: 9, scope: !458, file: !3, line: 912, type: !461)
!479 = !DILocation(line: 912, column: 29, scope: !458)
!480 = !DILocalVariable(name: "c2", arg: 10, scope: !458, file: !3, line: 912, type: !461)
!481 = !DILocation(line: 912, column: 43, scope: !458)
!482 = !DILocalVariable(name: "c3", arg: 11, scope: !458, file: !3, line: 912, type: !461)
!483 = !DILocation(line: 912, column: 57, scope: !458)
!484 = !DILocalVariable(name: "c4", arg: 12, scope: !458, file: !3, line: 912, type: !461)
!485 = !DILocation(line: 912, column: 71, scope: !458)
!486 = !DILocalVariable(name: "vez", scope: !458, file: !3, line: 914, type: !487)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 640, elements: !488)
!488 = !{!489}
!489 = !DISubrange(count: 20)
!490 = !DILocation(line: 914, column: 8, scope: !458)
!491 = !DILocalVariable(name: "and", scope: !458, file: !3, line: 915, type: !29)
!492 = !DILocation(line: 915, column: 6, scope: !458)
!493 = !DILocalVariable(name: "or", scope: !458, file: !3, line: 915, type: !29)
!494 = !DILocation(line: 915, column: 11, scope: !458)
!495 = !DILocation(line: 918, column: 6, scope: !496)
!496 = distinct !DILexicalBlock(scope: !458, file: !3, line: 918, column: 6)
!497 = !DILocation(line: 918, column: 8, scope: !496)
!498 = !DILocation(line: 918, column: 6, scope: !458)
!499 = !DILocation(line: 918, column: 13, scope: !496)
!500 = !DILocation(line: 920, column: 6, scope: !501)
!501 = distinct !DILexicalBlock(scope: !458, file: !3, line: 920, column: 6)
!502 = !DILocation(line: 920, column: 6, scope: !458)
!503 = !DILocation(line: 921, column: 9, scope: !504)
!504 = distinct !DILexicalBlock(scope: !501, file: !3, line: 920, column: 11)
!505 = !DILocation(line: 921, column: 14, scope: !504)
!506 = !DILocation(line: 921, column: 12, scope: !504)
!507 = !DILocation(line: 921, column: 19, scope: !504)
!508 = !DILocation(line: 921, column: 17, scope: !504)
!509 = !DILocation(line: 921, column: 24, scope: !504)
!510 = !DILocation(line: 921, column: 22, scope: !504)
!511 = !DILocation(line: 921, column: 6, scope: !504)
!512 = !DILocation(line: 922, column: 8, scope: !504)
!513 = !DILocation(line: 922, column: 13, scope: !504)
!514 = !DILocation(line: 922, column: 11, scope: !504)
!515 = !DILocation(line: 922, column: 18, scope: !504)
!516 = !DILocation(line: 922, column: 16, scope: !504)
!517 = !DILocation(line: 922, column: 23, scope: !504)
!518 = !DILocation(line: 922, column: 21, scope: !504)
!519 = !DILocation(line: 922, column: 5, scope: !504)
!520 = !DILocation(line: 923, column: 2, scope: !504)
!521 = !DILocation(line: 925, column: 9, scope: !522)
!522 = distinct !DILexicalBlock(scope: !501, file: !3, line: 924, column: 7)
!523 = !DILocation(line: 925, column: 14, scope: !522)
!524 = !DILocation(line: 925, column: 12, scope: !522)
!525 = !DILocation(line: 925, column: 19, scope: !522)
!526 = !DILocation(line: 925, column: 17, scope: !522)
!527 = !DILocation(line: 925, column: 6, scope: !522)
!528 = !DILocation(line: 926, column: 8, scope: !522)
!529 = !DILocation(line: 926, column: 13, scope: !522)
!530 = !DILocation(line: 926, column: 11, scope: !522)
!531 = !DILocation(line: 926, column: 18, scope: !522)
!532 = !DILocation(line: 926, column: 16, scope: !522)
!533 = !DILocation(line: 926, column: 5, scope: !522)
!534 = !DILocation(line: 929, column: 6, scope: !535)
!535 = distinct !DILexicalBlock(scope: !458, file: !3, line: 929, column: 6)
!536 = !DILocation(line: 929, column: 6, scope: !458)
!537 = !DILocation(line: 930, column: 7, scope: !538)
!538 = distinct !DILexicalBlock(scope: !539, file: !3, line: 930, column: 7)
!539 = distinct !DILexicalBlock(scope: !535, file: !3, line: 929, column: 10)
!540 = !DILocation(line: 930, column: 7, scope: !539)
!541 = !DILocation(line: 931, column: 4, scope: !542)
!542 = distinct !DILexicalBlock(scope: !538, file: !3, line: 930, column: 12)
!543 = !DILocation(line: 935, column: 8, scope: !544)
!544 = distinct !DILexicalBlock(scope: !545, file: !3, line: 935, column: 8)
!545 = distinct !DILexicalBlock(scope: !538, file: !3, line: 933, column: 8)
!546 = !DILocation(line: 935, column: 11, scope: !544)
!547 = !DILocation(line: 935, column: 8, scope: !545)
!548 = !DILocation(line: 936, column: 16, scope: !549)
!549 = distinct !DILexicalBlock(scope: !544, file: !3, line: 935, column: 22)
!550 = !DILocation(line: 936, column: 21, scope: !549)
!551 = !DILocation(line: 936, column: 5, scope: !549)
!552 = !DILocation(line: 937, column: 16, scope: !549)
!553 = !DILocation(line: 937, column: 19, scope: !549)
!554 = !DILocation(line: 937, column: 23, scope: !549)
!555 = !DILocation(line: 937, column: 5, scope: !549)
!556 = !DILocation(line: 938, column: 19, scope: !557)
!557 = distinct !DILexicalBlock(scope: !549, file: !3, line: 938, column: 10)
!558 = !DILocation(line: 938, column: 24, scope: !557)
!559 = !DILocation(line: 938, column: 27, scope: !557)
!560 = !DILocation(line: 938, column: 10, scope: !557)
!561 = !DILocation(line: 938, column: 10, scope: !549)
!562 = !DILocation(line: 939, column: 18, scope: !563)
!563 = distinct !DILexicalBlock(scope: !557, file: !3, line: 938, column: 32)
!564 = !DILocation(line: 939, column: 25, scope: !563)
!565 = !DILocation(line: 939, column: 30, scope: !563)
!566 = !DILocation(line: 939, column: 6, scope: !563)
!567 = !DILocation(line: 940, column: 18, scope: !563)
!568 = !DILocation(line: 940, column: 25, scope: !563)
!569 = !DILocation(line: 940, column: 28, scope: !563)
!570 = !DILocation(line: 940, column: 32, scope: !563)
!571 = !DILocation(line: 940, column: 35, scope: !563)
!572 = !DILocation(line: 940, column: 6, scope: !563)
!573 = !DILocation(line: 941, column: 6, scope: !563)
!574 = !DILocation(line: 941, column: 13, scope: !563)
!575 = !DILocation(line: 941, column: 26, scope: !563)
!576 = !DILocation(line: 941, column: 33, scope: !563)
!577 = !DILocation(line: 941, column: 38, scope: !563)
!578 = !DILocation(line: 941, column: 45, scope: !563)
!579 = !DILocation(line: 941, column: 50, scope: !563)
!580 = !DILocation(line: 941, column: 53, scope: !563)
!581 = !DILocation(line: 942, column: 5, scope: !563)
!582 = !DILocation(line: 943, column: 4, scope: !549)
!583 = !DILocation(line: 944, column: 8, scope: !584)
!584 = distinct !DILexicalBlock(scope: !545, file: !3, line: 944, column: 8)
!585 = !DILocation(line: 944, column: 11, scope: !584)
!586 = !DILocation(line: 944, column: 8, scope: !545)
!587 = !DILocation(line: 945, column: 16, scope: !588)
!588 = distinct !DILexicalBlock(scope: !584, file: !3, line: 944, column: 22)
!589 = !DILocation(line: 945, column: 21, scope: !588)
!590 = !DILocation(line: 945, column: 5, scope: !588)
!591 = !DILocation(line: 946, column: 16, scope: !588)
!592 = !DILocation(line: 946, column: 19, scope: !588)
!593 = !DILocation(line: 946, column: 23, scope: !588)
!594 = !DILocation(line: 946, column: 5, scope: !588)
!595 = !DILocation(line: 947, column: 19, scope: !596)
!596 = distinct !DILexicalBlock(scope: !588, file: !3, line: 947, column: 10)
!597 = !DILocation(line: 947, column: 24, scope: !596)
!598 = !DILocation(line: 947, column: 27, scope: !596)
!599 = !DILocation(line: 947, column: 10, scope: !596)
!600 = !DILocation(line: 947, column: 10, scope: !588)
!601 = !DILocation(line: 948, column: 18, scope: !602)
!602 = distinct !DILexicalBlock(scope: !596, file: !3, line: 947, column: 32)
!603 = !DILocation(line: 948, column: 25, scope: !602)
!604 = !DILocation(line: 948, column: 30, scope: !602)
!605 = !DILocation(line: 948, column: 6, scope: !602)
!606 = !DILocation(line: 949, column: 18, scope: !602)
!607 = !DILocation(line: 949, column: 25, scope: !602)
!608 = !DILocation(line: 949, column: 28, scope: !602)
!609 = !DILocation(line: 949, column: 32, scope: !602)
!610 = !DILocation(line: 949, column: 35, scope: !602)
!611 = !DILocation(line: 949, column: 6, scope: !602)
!612 = !DILocation(line: 950, column: 6, scope: !602)
!613 = !DILocation(line: 950, column: 13, scope: !602)
!614 = !DILocation(line: 950, column: 26, scope: !602)
!615 = !DILocation(line: 950, column: 33, scope: !602)
!616 = !DILocation(line: 950, column: 38, scope: !602)
!617 = !DILocation(line: 950, column: 45, scope: !602)
!618 = !DILocation(line: 950, column: 50, scope: !602)
!619 = !DILocation(line: 950, column: 53, scope: !602)
!620 = !DILocation(line: 951, column: 5, scope: !602)
!621 = !DILocation(line: 952, column: 4, scope: !588)
!622 = !DILocation(line: 953, column: 8, scope: !623)
!623 = distinct !DILexicalBlock(scope: !545, file: !3, line: 953, column: 8)
!624 = !DILocation(line: 953, column: 8, scope: !545)
!625 = !DILocation(line: 954, column: 9, scope: !626)
!626 = distinct !DILexicalBlock(scope: !627, file: !3, line: 954, column: 9)
!627 = distinct !DILexicalBlock(scope: !623, file: !3, line: 953, column: 13)
!628 = !DILocation(line: 954, column: 12, scope: !626)
!629 = !DILocation(line: 954, column: 9, scope: !627)
!630 = !DILocation(line: 955, column: 17, scope: !631)
!631 = distinct !DILexicalBlock(scope: !626, file: !3, line: 954, column: 23)
!632 = !DILocation(line: 955, column: 22, scope: !631)
!633 = !DILocation(line: 955, column: 6, scope: !631)
!634 = !DILocation(line: 956, column: 17, scope: !631)
!635 = !DILocation(line: 956, column: 20, scope: !631)
!636 = !DILocation(line: 956, column: 24, scope: !631)
!637 = !DILocation(line: 956, column: 6, scope: !631)
!638 = !DILocation(line: 957, column: 20, scope: !639)
!639 = distinct !DILexicalBlock(scope: !631, file: !3, line: 957, column: 11)
!640 = !DILocation(line: 957, column: 25, scope: !639)
!641 = !DILocation(line: 957, column: 28, scope: !639)
!642 = !DILocation(line: 957, column: 11, scope: !639)
!643 = !DILocation(line: 957, column: 11, scope: !631)
!644 = !DILocation(line: 958, column: 19, scope: !645)
!645 = distinct !DILexicalBlock(scope: !639, file: !3, line: 957, column: 33)
!646 = !DILocation(line: 958, column: 26, scope: !645)
!647 = !DILocation(line: 958, column: 31, scope: !645)
!648 = !DILocation(line: 958, column: 7, scope: !645)
!649 = !DILocation(line: 959, column: 19, scope: !645)
!650 = !DILocation(line: 959, column: 26, scope: !645)
!651 = !DILocation(line: 959, column: 29, scope: !645)
!652 = !DILocation(line: 959, column: 33, scope: !645)
!653 = !DILocation(line: 959, column: 36, scope: !645)
!654 = !DILocation(line: 959, column: 7, scope: !645)
!655 = !DILocation(line: 960, column: 7, scope: !645)
!656 = !DILocation(line: 960, column: 14, scope: !645)
!657 = !DILocation(line: 960, column: 27, scope: !645)
!658 = !DILocation(line: 960, column: 34, scope: !645)
!659 = !DILocation(line: 960, column: 39, scope: !645)
!660 = !DILocation(line: 960, column: 46, scope: !645)
!661 = !DILocation(line: 960, column: 51, scope: !645)
!662 = !DILocation(line: 960, column: 54, scope: !645)
!663 = !DILocation(line: 961, column: 6, scope: !645)
!664 = !DILocation(line: 962, column: 5, scope: !631)
!665 = !DILocation(line: 963, column: 9, scope: !666)
!666 = distinct !DILexicalBlock(scope: !627, file: !3, line: 963, column: 9)
!667 = !DILocation(line: 963, column: 12, scope: !666)
!668 = !DILocation(line: 963, column: 9, scope: !627)
!669 = !DILocation(line: 964, column: 17, scope: !670)
!670 = distinct !DILexicalBlock(scope: !666, file: !3, line: 963, column: 23)
!671 = !DILocation(line: 964, column: 22, scope: !670)
!672 = !DILocation(line: 964, column: 6, scope: !670)
!673 = !DILocation(line: 965, column: 17, scope: !670)
!674 = !DILocation(line: 965, column: 20, scope: !670)
!675 = !DILocation(line: 965, column: 24, scope: !670)
!676 = !DILocation(line: 965, column: 6, scope: !670)
!677 = !DILocation(line: 966, column: 20, scope: !678)
!678 = distinct !DILexicalBlock(scope: !670, file: !3, line: 966, column: 11)
!679 = !DILocation(line: 966, column: 25, scope: !678)
!680 = !DILocation(line: 966, column: 28, scope: !678)
!681 = !DILocation(line: 966, column: 11, scope: !678)
!682 = !DILocation(line: 966, column: 11, scope: !670)
!683 = !DILocation(line: 967, column: 19, scope: !684)
!684 = distinct !DILexicalBlock(scope: !678, file: !3, line: 966, column: 33)
!685 = !DILocation(line: 967, column: 26, scope: !684)
!686 = !DILocation(line: 967, column: 31, scope: !684)
!687 = !DILocation(line: 967, column: 7, scope: !684)
!688 = !DILocation(line: 968, column: 19, scope: !684)
!689 = !DILocation(line: 968, column: 26, scope: !684)
!690 = !DILocation(line: 968, column: 29, scope: !684)
!691 = !DILocation(line: 968, column: 33, scope: !684)
!692 = !DILocation(line: 968, column: 36, scope: !684)
!693 = !DILocation(line: 968, column: 7, scope: !684)
!694 = !DILocation(line: 969, column: 7, scope: !684)
!695 = !DILocation(line: 969, column: 14, scope: !684)
!696 = !DILocation(line: 969, column: 27, scope: !684)
!697 = !DILocation(line: 969, column: 34, scope: !684)
!698 = !DILocation(line: 969, column: 39, scope: !684)
!699 = !DILocation(line: 969, column: 46, scope: !684)
!700 = !DILocation(line: 969, column: 51, scope: !684)
!701 = !DILocation(line: 969, column: 54, scope: !684)
!702 = !DILocation(line: 970, column: 6, scope: !684)
!703 = !DILocation(line: 971, column: 5, scope: !670)
!704 = !DILocation(line: 972, column: 4, scope: !627)
!705 = !DILocation(line: 974, column: 9, scope: !706)
!706 = distinct !DILexicalBlock(scope: !707, file: !3, line: 974, column: 9)
!707 = distinct !DILexicalBlock(scope: !623, file: !3, line: 973, column: 9)
!708 = !DILocation(line: 974, column: 12, scope: !706)
!709 = !DILocation(line: 974, column: 9, scope: !707)
!710 = !DILocation(line: 975, column: 17, scope: !711)
!711 = distinct !DILexicalBlock(scope: !706, file: !3, line: 974, column: 23)
!712 = !DILocation(line: 975, column: 22, scope: !711)
!713 = !DILocation(line: 975, column: 6, scope: !711)
!714 = !DILocation(line: 976, column: 17, scope: !711)
!715 = !DILocation(line: 976, column: 20, scope: !711)
!716 = !DILocation(line: 976, column: 24, scope: !711)
!717 = !DILocation(line: 976, column: 6, scope: !711)
!718 = !DILocation(line: 977, column: 20, scope: !719)
!719 = distinct !DILexicalBlock(scope: !711, file: !3, line: 977, column: 11)
!720 = !DILocation(line: 977, column: 25, scope: !719)
!721 = !DILocation(line: 977, column: 28, scope: !719)
!722 = !DILocation(line: 977, column: 11, scope: !719)
!723 = !DILocation(line: 977, column: 11, scope: !711)
!724 = !DILocation(line: 978, column: 19, scope: !725)
!725 = distinct !DILexicalBlock(scope: !719, file: !3, line: 977, column: 33)
!726 = !DILocation(line: 978, column: 26, scope: !725)
!727 = !DILocation(line: 978, column: 31, scope: !725)
!728 = !DILocation(line: 978, column: 7, scope: !725)
!729 = !DILocation(line: 979, column: 19, scope: !725)
!730 = !DILocation(line: 979, column: 26, scope: !725)
!731 = !DILocation(line: 979, column: 29, scope: !725)
!732 = !DILocation(line: 979, column: 33, scope: !725)
!733 = !DILocation(line: 979, column: 36, scope: !725)
!734 = !DILocation(line: 979, column: 7, scope: !725)
!735 = !DILocation(line: 980, column: 7, scope: !725)
!736 = !DILocation(line: 980, column: 14, scope: !725)
!737 = !DILocation(line: 980, column: 27, scope: !725)
!738 = !DILocation(line: 980, column: 34, scope: !725)
!739 = !DILocation(line: 980, column: 39, scope: !725)
!740 = !DILocation(line: 980, column: 46, scope: !725)
!741 = !DILocation(line: 980, column: 51, scope: !725)
!742 = !DILocation(line: 980, column: 54, scope: !725)
!743 = !DILocation(line: 981, column: 6, scope: !725)
!744 = !DILocation(line: 982, column: 5, scope: !711)
!745 = !DILocation(line: 985, column: 4, scope: !545)
!746 = !DILocation(line: 989, column: 14, scope: !458)
!747 = !DILocation(line: 989, column: 21, scope: !458)
!748 = !DILocation(line: 989, column: 26, scope: !458)
!749 = !DILocation(line: 989, column: 2, scope: !458)
!750 = !DILocation(line: 990, column: 14, scope: !458)
!751 = !DILocation(line: 990, column: 21, scope: !458)
!752 = !DILocation(line: 990, column: 24, scope: !458)
!753 = !DILocation(line: 990, column: 28, scope: !458)
!754 = !DILocation(line: 990, column: 2, scope: !458)
!755 = !DILocation(line: 991, column: 14, scope: !458)
!756 = !DILocation(line: 991, column: 21, scope: !458)
!757 = !DILocation(line: 991, column: 24, scope: !458)
!758 = !DILocation(line: 991, column: 28, scope: !458)
!759 = !DILocation(line: 991, column: 2, scope: !458)
!760 = !DILocation(line: 992, column: 6, scope: !761)
!761 = distinct !DILexicalBlock(scope: !458, file: !3, line: 992, column: 6)
!762 = !DILocation(line: 992, column: 6, scope: !458)
!763 = !DILocation(line: 993, column: 15, scope: !764)
!764 = distinct !DILexicalBlock(scope: !761, file: !3, line: 992, column: 11)
!765 = !DILocation(line: 993, column: 22, scope: !764)
!766 = !DILocation(line: 993, column: 25, scope: !764)
!767 = !DILocation(line: 993, column: 30, scope: !764)
!768 = !DILocation(line: 993, column: 3, scope: !764)
!769 = !DILocation(line: 995, column: 7, scope: !770)
!770 = distinct !DILexicalBlock(scope: !764, file: !3, line: 995, column: 7)
!771 = !DILocation(line: 995, column: 10, scope: !770)
!772 = !DILocation(line: 995, column: 7, scope: !764)
!773 = !DILocation(line: 995, column: 22, scope: !770)
!774 = !DILocation(line: 995, column: 29, scope: !770)
!775 = !DILocation(line: 995, column: 42, scope: !770)
!776 = !DILocation(line: 995, column: 49, scope: !770)
!777 = !DILocation(line: 995, column: 54, scope: !770)
!778 = !DILocation(line: 995, column: 61, scope: !770)
!779 = !DILocation(line: 995, column: 64, scope: !770)
!780 = !DILocation(line: 995, column: 68, scope: !770)
!781 = !DILocation(line: 995, column: 71, scope: !770)
!782 = !DILocation(line: 996, column: 7, scope: !783)
!783 = distinct !DILexicalBlock(scope: !764, file: !3, line: 996, column: 7)
!784 = !DILocation(line: 996, column: 10, scope: !783)
!785 = !DILocation(line: 996, column: 7, scope: !764)
!786 = !DILocation(line: 996, column: 22, scope: !783)
!787 = !DILocation(line: 996, column: 29, scope: !783)
!788 = !DILocation(line: 996, column: 42, scope: !783)
!789 = !DILocation(line: 996, column: 49, scope: !783)
!790 = !DILocation(line: 996, column: 54, scope: !783)
!791 = !DILocation(line: 996, column: 61, scope: !783)
!792 = !DILocation(line: 996, column: 64, scope: !783)
!793 = !DILocation(line: 996, column: 69, scope: !783)
!794 = !DILocation(line: 997, column: 2, scope: !764)
!795 = !DILocation(line: 999, column: 7, scope: !796)
!796 = distinct !DILexicalBlock(scope: !797, file: !3, line: 999, column: 7)
!797 = distinct !DILexicalBlock(scope: !761, file: !3, line: 998, column: 7)
!798 = !DILocation(line: 999, column: 10, scope: !796)
!799 = !DILocation(line: 999, column: 7, scope: !797)
!800 = !DILocation(line: 999, column: 22, scope: !796)
!801 = !DILocation(line: 999, column: 29, scope: !796)
!802 = !DILocation(line: 999, column: 42, scope: !796)
!803 = !DILocation(line: 999, column: 49, scope: !796)
!804 = !DILocation(line: 999, column: 54, scope: !796)
!805 = !DILocation(line: 999, column: 61, scope: !796)
!806 = !DILocation(line: 999, column: 64, scope: !796)
!807 = !DILocation(line: 999, column: 68, scope: !796)
!808 = !DILocation(line: 1002, column: 6, scope: !809)
!809 = distinct !DILexicalBlock(scope: !458, file: !3, line: 1002, column: 6)
!810 = !DILocation(line: 1002, column: 9, scope: !809)
!811 = !DILocation(line: 1002, column: 6, scope: !458)
!812 = !DILocation(line: 1002, column: 21, scope: !809)
!813 = !DILocation(line: 1002, column: 28, scope: !809)
!814 = !DILocation(line: 1002, column: 41, scope: !809)
!815 = !DILocation(line: 1002, column: 48, scope: !809)
!816 = !DILocation(line: 1002, column: 53, scope: !809)
!817 = !DILocation(line: 1002, column: 60, scope: !809)
!818 = !DILocation(line: 1002, column: 65, scope: !809)
!819 = !DILocation(line: 1002, column: 68, scope: !809)
!820 = !DILocation(line: 1003, column: 6, scope: !821)
!821 = distinct !DILexicalBlock(scope: !458, file: !3, line: 1003, column: 6)
!822 = !DILocation(line: 1003, column: 9, scope: !821)
!823 = !DILocation(line: 1003, column: 6, scope: !458)
!824 = !DILocation(line: 1003, column: 21, scope: !821)
!825 = !DILocation(line: 1003, column: 28, scope: !821)
!826 = !DILocation(line: 1003, column: 41, scope: !821)
!827 = !DILocation(line: 1003, column: 48, scope: !821)
!828 = !DILocation(line: 1003, column: 53, scope: !821)
!829 = !DILocation(line: 1003, column: 60, scope: !821)
!830 = !DILocation(line: 1003, column: 63, scope: !821)
!831 = !DILocation(line: 1003, column: 67, scope: !821)
!832 = !DILocation(line: 1003, column: 70, scope: !821)
!833 = !DILocation(line: 1005, column: 1, scope: !458)
!834 = distinct !DISubprogram(name: "copy_v4_v4", scope: !835, file: !835, line: 71, type: !836, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!835 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!836 = !DISubroutineType(types: !837)
!837 = !{null, !31, !88}
!838 = !DILocalVariable(name: "r", arg: 1, scope: !834, file: !835, line: 71, type: !31)
!839 = !DILocation(line: 71, column: 31, scope: !834)
!840 = !DILocalVariable(name: "a", arg: 2, scope: !834, file: !835, line: 71, type: !88)
!841 = !DILocation(line: 71, column: 49, scope: !834)
!842 = !DILocation(line: 73, column: 9, scope: !834)
!843 = !DILocation(line: 73, column: 2, scope: !834)
!844 = !DILocation(line: 73, column: 7, scope: !834)
!845 = !DILocation(line: 74, column: 9, scope: !834)
!846 = !DILocation(line: 74, column: 2, scope: !834)
!847 = !DILocation(line: 74, column: 7, scope: !834)
!848 = !DILocation(line: 75, column: 9, scope: !834)
!849 = !DILocation(line: 75, column: 2, scope: !834)
!850 = !DILocation(line: 75, column: 7, scope: !834)
!851 = !DILocation(line: 76, column: 9, scope: !834)
!852 = !DILocation(line: 76, column: 2, scope: !834)
!853 = !DILocation(line: 76, column: 7, scope: !834)
!854 = !DILocation(line: 77, column: 1, scope: !834)
!855 = distinct !DISubprogram(name: "clipline", scope: !3, file: !3, line: 850, type: !856, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!856 = !DISubroutineType(types: !857)
!857 = !{!29, !31, !31}
!858 = !DILocalVariable(name: "v1", arg: 1, scope: !855, file: !3, line: 850, type: !31)
!859 = !DILocation(line: 850, column: 27, scope: !855)
!860 = !DILocalVariable(name: "v2", arg: 2, scope: !855, file: !3, line: 850, type: !31)
!861 = !DILocation(line: 850, column: 40, scope: !855)
!862 = !DILocalVariable(name: "dz", scope: !855, file: !3, line: 852, type: !21)
!863 = !DILocation(line: 852, column: 8, scope: !855)
!864 = !DILocalVariable(name: "dw", scope: !855, file: !3, line: 852, type: !21)
!865 = !DILocation(line: 852, column: 12, scope: !855)
!866 = !DILocalVariable(name: "u1", scope: !855, file: !3, line: 852, type: !21)
!867 = !DILocation(line: 852, column: 16, scope: !855)
!868 = !DILocalVariable(name: "u2", scope: !855, file: !3, line: 852, type: !21)
!869 = !DILocation(line: 852, column: 24, scope: !855)
!870 = !DILocalVariable(name: "dx", scope: !855, file: !3, line: 853, type: !21)
!871 = !DILocation(line: 853, column: 8, scope: !855)
!872 = !DILocalVariable(name: "dy", scope: !855, file: !3, line: 853, type: !21)
!873 = !DILocation(line: 853, column: 12, scope: !855)
!874 = !DILocalVariable(name: "v13", scope: !855, file: !3, line: 853, type: !21)
!875 = !DILocation(line: 853, column: 16, scope: !855)
!876 = !DILocation(line: 855, column: 6, scope: !855)
!877 = !DILocation(line: 855, column: 12, scope: !855)
!878 = !DILocation(line: 855, column: 11, scope: !855)
!879 = !DILocation(line: 855, column: 4, scope: !855)
!880 = !DILocation(line: 856, column: 6, scope: !855)
!881 = !DILocation(line: 856, column: 12, scope: !855)
!882 = !DILocation(line: 856, column: 11, scope: !855)
!883 = !DILocation(line: 856, column: 4, scope: !855)
!884 = !DILocation(line: 862, column: 17, scope: !885)
!885 = distinct !DILexicalBlock(scope: !855, file: !3, line: 862, column: 6)
!886 = !DILocation(line: 862, column: 16, scope: !885)
!887 = !DILocation(line: 862, column: 22, scope: !885)
!888 = !DILocation(line: 862, column: 21, scope: !885)
!889 = !DILocation(line: 862, column: 26, scope: !885)
!890 = !DILocation(line: 862, column: 33, scope: !885)
!891 = !DILocation(line: 862, column: 6, scope: !885)
!892 = !DILocation(line: 862, column: 6, scope: !855)
!893 = !DILocation(line: 863, column: 17, scope: !894)
!894 = distinct !DILexicalBlock(scope: !895, file: !3, line: 863, column: 7)
!895 = distinct !DILexicalBlock(scope: !885, file: !3, line: 862, column: 51)
!896 = !DILocation(line: 863, column: 22, scope: !894)
!897 = !DILocation(line: 863, column: 21, scope: !894)
!898 = !DILocation(line: 863, column: 26, scope: !894)
!899 = !DILocation(line: 863, column: 34, scope: !894)
!900 = !DILocation(line: 863, column: 33, scope: !894)
!901 = !DILocation(line: 863, column: 7, scope: !894)
!902 = !DILocation(line: 863, column: 7, scope: !895)
!903 = !DILocation(line: 865, column: 8, scope: !904)
!904 = distinct !DILexicalBlock(scope: !894, file: !3, line: 863, column: 52)
!905 = !DILocation(line: 865, column: 14, scope: !904)
!906 = !DILocation(line: 865, column: 13, scope: !904)
!907 = !DILocation(line: 865, column: 6, scope: !904)
!908 = !DILocation(line: 866, column: 15, scope: !904)
!909 = !DILocation(line: 866, column: 21, scope: !904)
!910 = !DILocation(line: 866, column: 20, scope: !904)
!911 = !DILocation(line: 866, column: 13, scope: !904)
!912 = !DILocation(line: 866, column: 6, scope: !904)
!913 = !DILocation(line: 867, column: 15, scope: !904)
!914 = !DILocation(line: 867, column: 14, scope: !904)
!915 = !DILocation(line: 867, column: 7, scope: !904)
!916 = !DILocation(line: 869, column: 19, scope: !917)
!917 = distinct !DILexicalBlock(scope: !904, file: !3, line: 869, column: 8)
!918 = !DILocation(line: 869, column: 18, scope: !917)
!919 = !DILocation(line: 869, column: 24, scope: !917)
!920 = !DILocation(line: 869, column: 23, scope: !917)
!921 = !DILocation(line: 869, column: 28, scope: !917)
!922 = !DILocation(line: 869, column: 35, scope: !917)
!923 = !DILocation(line: 869, column: 8, scope: !917)
!924 = !DILocation(line: 869, column: 8, scope: !904)
!925 = !DILocation(line: 870, column: 19, scope: !926)
!926 = distinct !DILexicalBlock(scope: !927, file: !3, line: 870, column: 9)
!927 = distinct !DILexicalBlock(scope: !917, file: !3, line: 869, column: 51)
!928 = !DILocation(line: 870, column: 24, scope: !926)
!929 = !DILocation(line: 870, column: 23, scope: !926)
!930 = !DILocation(line: 870, column: 28, scope: !926)
!931 = !DILocation(line: 870, column: 34, scope: !926)
!932 = !DILocation(line: 870, column: 33, scope: !926)
!933 = !DILocation(line: 870, column: 9, scope: !926)
!934 = !DILocation(line: 870, column: 9, scope: !927)
!935 = !DILocation(line: 872, column: 10, scope: !936)
!936 = distinct !DILexicalBlock(scope: !926, file: !3, line: 870, column: 52)
!937 = !DILocation(line: 872, column: 16, scope: !936)
!938 = !DILocation(line: 872, column: 15, scope: !936)
!939 = !DILocation(line: 872, column: 8, scope: !936)
!940 = !DILocation(line: 874, column: 21, scope: !941)
!941 = distinct !DILexicalBlock(scope: !936, file: !3, line: 874, column: 10)
!942 = !DILocation(line: 874, column: 20, scope: !941)
!943 = !DILocation(line: 874, column: 26, scope: !941)
!944 = !DILocation(line: 874, column: 25, scope: !941)
!945 = !DILocation(line: 874, column: 30, scope: !941)
!946 = !DILocation(line: 874, column: 37, scope: !941)
!947 = !DILocation(line: 874, column: 10, scope: !941)
!948 = !DILocation(line: 874, column: 10, scope: !936)
!949 = !DILocation(line: 875, column: 21, scope: !950)
!950 = distinct !DILexicalBlock(scope: !951, file: !3, line: 875, column: 11)
!951 = distinct !DILexicalBlock(scope: !941, file: !3, line: 874, column: 53)
!952 = !DILocation(line: 875, column: 26, scope: !950)
!953 = !DILocation(line: 875, column: 25, scope: !950)
!954 = !DILocation(line: 875, column: 30, scope: !950)
!955 = !DILocation(line: 875, column: 36, scope: !950)
!956 = !DILocation(line: 875, column: 35, scope: !950)
!957 = !DILocation(line: 875, column: 11, scope: !950)
!958 = !DILocation(line: 875, column: 11, scope: !951)
!959 = !DILocation(line: 877, column: 12, scope: !960)
!960 = distinct !DILexicalBlock(scope: !961, file: !3, line: 877, column: 12)
!961 = distinct !DILexicalBlock(scope: !950, file: !3, line: 875, column: 54)
!962 = !DILocation(line: 877, column: 14, scope: !960)
!963 = !DILocation(line: 877, column: 12, scope: !961)
!964 = !DILocation(line: 878, column: 16, scope: !965)
!965 = distinct !DILexicalBlock(scope: !960, file: !3, line: 877, column: 21)
!966 = !DILocation(line: 878, column: 22, scope: !965)
!967 = !DILocation(line: 878, column: 25, scope: !965)
!968 = !DILocation(line: 878, column: 24, scope: !965)
!969 = !DILocation(line: 878, column: 21, scope: !965)
!970 = !DILocation(line: 878, column: 9, scope: !965)
!971 = !DILocation(line: 878, column: 14, scope: !965)
!972 = !DILocation(line: 879, column: 16, scope: !965)
!973 = !DILocation(line: 879, column: 22, scope: !965)
!974 = !DILocation(line: 879, column: 25, scope: !965)
!975 = !DILocation(line: 879, column: 24, scope: !965)
!976 = !DILocation(line: 879, column: 21, scope: !965)
!977 = !DILocation(line: 879, column: 9, scope: !965)
!978 = !DILocation(line: 879, column: 14, scope: !965)
!979 = !DILocation(line: 880, column: 16, scope: !965)
!980 = !DILocation(line: 880, column: 22, scope: !965)
!981 = !DILocation(line: 880, column: 25, scope: !965)
!982 = !DILocation(line: 880, column: 24, scope: !965)
!983 = !DILocation(line: 880, column: 21, scope: !965)
!984 = !DILocation(line: 880, column: 9, scope: !965)
!985 = !DILocation(line: 880, column: 14, scope: !965)
!986 = !DILocation(line: 881, column: 16, scope: !965)
!987 = !DILocation(line: 881, column: 22, scope: !965)
!988 = !DILocation(line: 881, column: 25, scope: !965)
!989 = !DILocation(line: 881, column: 24, scope: !965)
!990 = !DILocation(line: 881, column: 21, scope: !965)
!991 = !DILocation(line: 881, column: 9, scope: !965)
!992 = !DILocation(line: 881, column: 14, scope: !965)
!993 = !DILocation(line: 882, column: 8, scope: !965)
!994 = !DILocation(line: 883, column: 12, scope: !995)
!995 = distinct !DILexicalBlock(scope: !961, file: !3, line: 883, column: 12)
!996 = !DILocation(line: 883, column: 14, scope: !995)
!997 = !DILocation(line: 883, column: 12, scope: !961)
!998 = !DILocation(line: 884, column: 16, scope: !999)
!999 = distinct !DILexicalBlock(scope: !995, file: !3, line: 883, column: 21)
!1000 = !DILocation(line: 884, column: 22, scope: !999)
!1001 = !DILocation(line: 884, column: 25, scope: !999)
!1002 = !DILocation(line: 884, column: 24, scope: !999)
!1003 = !DILocation(line: 884, column: 21, scope: !999)
!1004 = !DILocation(line: 884, column: 9, scope: !999)
!1005 = !DILocation(line: 884, column: 14, scope: !999)
!1006 = !DILocation(line: 885, column: 16, scope: !999)
!1007 = !DILocation(line: 885, column: 22, scope: !999)
!1008 = !DILocation(line: 885, column: 25, scope: !999)
!1009 = !DILocation(line: 885, column: 24, scope: !999)
!1010 = !DILocation(line: 885, column: 21, scope: !999)
!1011 = !DILocation(line: 885, column: 9, scope: !999)
!1012 = !DILocation(line: 885, column: 14, scope: !999)
!1013 = !DILocation(line: 886, column: 16, scope: !999)
!1014 = !DILocation(line: 886, column: 22, scope: !999)
!1015 = !DILocation(line: 886, column: 25, scope: !999)
!1016 = !DILocation(line: 886, column: 24, scope: !999)
!1017 = !DILocation(line: 886, column: 21, scope: !999)
!1018 = !DILocation(line: 886, column: 9, scope: !999)
!1019 = !DILocation(line: 886, column: 14, scope: !999)
!1020 = !DILocation(line: 887, column: 16, scope: !999)
!1021 = !DILocation(line: 887, column: 22, scope: !999)
!1022 = !DILocation(line: 887, column: 25, scope: !999)
!1023 = !DILocation(line: 887, column: 24, scope: !999)
!1024 = !DILocation(line: 887, column: 21, scope: !999)
!1025 = !DILocation(line: 887, column: 9, scope: !999)
!1026 = !DILocation(line: 887, column: 14, scope: !999)
!1027 = !DILocation(line: 888, column: 8, scope: !999)
!1028 = !DILocation(line: 889, column: 8, scope: !961)
!1029 = !DILocation(line: 891, column: 6, scope: !951)
!1030 = !DILocation(line: 892, column: 5, scope: !936)
!1031 = !DILocation(line: 893, column: 4, scope: !927)
!1032 = !DILocation(line: 894, column: 3, scope: !904)
!1033 = !DILocation(line: 895, column: 2, scope: !895)
!1034 = !DILocation(line: 897, column: 2, scope: !855)
!1035 = !DILocation(line: 898, column: 1, scope: !855)
!1036 = distinct !DISubprogram(name: "zbufsinglewire", scope: !3, file: !3, line: 1007, type: !1037, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !120, !29, !29, !88, !88}
!1039 = !DILocalVariable(name: "zspan", arg: 1, scope: !1036, file: !3, line: 1007, type: !120)
!1040 = !DILocation(line: 1007, column: 28, scope: !1036)
!1041 = !DILocalVariable(name: "obi", arg: 2, scope: !1036, file: !3, line: 1007, type: !29)
!1042 = !DILocation(line: 1007, column: 39, scope: !1036)
!1043 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !1036, file: !3, line: 1007, type: !29)
!1044 = !DILocation(line: 1007, column: 48, scope: !1036)
!1045 = !DILocalVariable(name: "ho1", arg: 4, scope: !1036, file: !3, line: 1007, type: !88)
!1046 = !DILocation(line: 1007, column: 67, scope: !1036)
!1047 = !DILocalVariable(name: "ho2", arg: 5, scope: !1036, file: !3, line: 1007, type: !88)
!1048 = !DILocation(line: 1007, column: 87, scope: !1036)
!1049 = !DILocalVariable(name: "f1", scope: !1036, file: !3, line: 1009, type: !176)
!1050 = !DILocation(line: 1009, column: 8, scope: !1036)
!1051 = !DILocalVariable(name: "f2", scope: !1036, file: !3, line: 1009, type: !176)
!1052 = !DILocation(line: 1009, column: 15, scope: !1036)
!1053 = !DILocalVariable(name: "c1", scope: !1036, file: !3, line: 1010, type: !29)
!1054 = !DILocation(line: 1010, column: 6, scope: !1036)
!1055 = !DILocalVariable(name: "c2", scope: !1036, file: !3, line: 1010, type: !29)
!1056 = !DILocation(line: 1010, column: 10, scope: !1036)
!1057 = !DILocation(line: 1012, column: 15, scope: !1036)
!1058 = !DILocation(line: 1012, column: 6, scope: !1036)
!1059 = !DILocation(line: 1012, column: 4, scope: !1036)
!1060 = !DILocation(line: 1013, column: 15, scope: !1036)
!1061 = !DILocation(line: 1013, column: 6, scope: !1036)
!1062 = !DILocation(line: 1013, column: 4, scope: !1036)
!1063 = !DILocation(line: 1015, column: 6, scope: !1064)
!1064 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 1015, column: 6)
!1065 = !DILocation(line: 1015, column: 11, scope: !1064)
!1066 = !DILocation(line: 1015, column: 9, scope: !1064)
!1067 = !DILocation(line: 1015, column: 6, scope: !1036)
!1068 = !DILocation(line: 1016, column: 9, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !3, line: 1016, column: 7)
!1070 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1015, column: 15)
!1071 = !DILocation(line: 1016, column: 14, scope: !1069)
!1072 = !DILocation(line: 1016, column: 12, scope: !1069)
!1073 = !DILocation(line: 1016, column: 7, scope: !1070)
!1074 = !DILocation(line: 1017, column: 15, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 1016, column: 19)
!1076 = !DILocation(line: 1017, column: 19, scope: !1075)
!1077 = !DILocation(line: 1017, column: 4, scope: !1075)
!1078 = !DILocation(line: 1018, column: 15, scope: !1075)
!1079 = !DILocation(line: 1018, column: 19, scope: !1075)
!1080 = !DILocation(line: 1018, column: 4, scope: !1075)
!1081 = !DILocation(line: 1020, column: 17, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1075, file: !3, line: 1020, column: 8)
!1083 = !DILocation(line: 1020, column: 21, scope: !1082)
!1084 = !DILocation(line: 1020, column: 8, scope: !1082)
!1085 = !DILocation(line: 1020, column: 8, scope: !1075)
!1086 = !DILocation(line: 1021, column: 17, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 1020, column: 26)
!1088 = !DILocation(line: 1021, column: 24, scope: !1087)
!1089 = !DILocation(line: 1021, column: 28, scope: !1087)
!1090 = !DILocation(line: 1021, column: 5, scope: !1087)
!1091 = !DILocation(line: 1022, column: 17, scope: !1087)
!1092 = !DILocation(line: 1022, column: 24, scope: !1087)
!1093 = !DILocation(line: 1022, column: 28, scope: !1087)
!1094 = !DILocation(line: 1022, column: 5, scope: !1087)
!1095 = !DILocation(line: 1023, column: 5, scope: !1087)
!1096 = !DILocation(line: 1023, column: 12, scope: !1087)
!1097 = !DILocation(line: 1023, column: 25, scope: !1087)
!1098 = !DILocation(line: 1023, column: 32, scope: !1087)
!1099 = !DILocation(line: 1023, column: 37, scope: !1087)
!1100 = !DILocation(line: 1023, column: 44, scope: !1087)
!1101 = !DILocation(line: 1023, column: 48, scope: !1087)
!1102 = !DILocation(line: 1024, column: 4, scope: !1087)
!1103 = !DILocation(line: 1025, column: 3, scope: !1075)
!1104 = !DILocation(line: 1026, column: 2, scope: !1070)
!1105 = !DILocation(line: 1028, column: 15, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1027, column: 7)
!1107 = !DILocation(line: 1028, column: 22, scope: !1106)
!1108 = !DILocation(line: 1028, column: 26, scope: !1106)
!1109 = !DILocation(line: 1028, column: 3, scope: !1106)
!1110 = !DILocation(line: 1029, column: 15, scope: !1106)
!1111 = !DILocation(line: 1029, column: 22, scope: !1106)
!1112 = !DILocation(line: 1029, column: 26, scope: !1106)
!1113 = !DILocation(line: 1029, column: 3, scope: !1106)
!1114 = !DILocation(line: 1031, column: 3, scope: !1106)
!1115 = !DILocation(line: 1031, column: 10, scope: !1106)
!1116 = !DILocation(line: 1031, column: 23, scope: !1106)
!1117 = !DILocation(line: 1031, column: 30, scope: !1106)
!1118 = !DILocation(line: 1031, column: 35, scope: !1106)
!1119 = !DILocation(line: 1031, column: 42, scope: !1106)
!1120 = !DILocation(line: 1031, column: 46, scope: !1106)
!1121 = !DILocation(line: 1033, column: 1, scope: !1036)
!1122 = distinct !DISubprogram(name: "zspan_scanconvert_strand", scope: !3, file: !3, line: 1413, type: !1123, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !120, !79, !31, !31, !31, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !79, !29, !29, !21, !21, !21}
!1128 = !DILocalVariable(name: "zspan", arg: 1, scope: !1122, file: !3, line: 1413, type: !120)
!1129 = !DILocation(line: 1413, column: 38, scope: !1122)
!1130 = !DILocalVariable(name: "handle", arg: 2, scope: !1122, file: !3, line: 1413, type: !79)
!1131 = !DILocation(line: 1413, column: 51, scope: !1122)
!1132 = !DILocalVariable(name: "v1", arg: 3, scope: !1122, file: !3, line: 1413, type: !31)
!1133 = !DILocation(line: 1413, column: 66, scope: !1122)
!1134 = !DILocalVariable(name: "v2", arg: 4, scope: !1122, file: !3, line: 1413, type: !31)
!1135 = !DILocation(line: 1413, column: 77, scope: !1122)
!1136 = !DILocalVariable(name: "v3", arg: 5, scope: !1122, file: !3, line: 1413, type: !31)
!1137 = !DILocation(line: 1413, column: 88, scope: !1122)
!1138 = !DILocalVariable(name: "func", arg: 6, scope: !1122, file: !3, line: 1413, type: !1125)
!1139 = !DILocation(line: 1413, column: 99, scope: !1122)
!1140 = !DILocalVariable(name: "x0", scope: !1122, file: !3, line: 1415, type: !21)
!1141 = !DILocation(line: 1415, column: 8, scope: !1122)
!1142 = !DILocalVariable(name: "y0", scope: !1122, file: !3, line: 1415, type: !21)
!1143 = !DILocation(line: 1415, column: 12, scope: !1122)
!1144 = !DILocalVariable(name: "x1", scope: !1122, file: !3, line: 1415, type: !21)
!1145 = !DILocation(line: 1415, column: 16, scope: !1122)
!1146 = !DILocalVariable(name: "y1", scope: !1122, file: !3, line: 1415, type: !21)
!1147 = !DILocation(line: 1415, column: 20, scope: !1122)
!1148 = !DILocalVariable(name: "x2", scope: !1122, file: !3, line: 1415, type: !21)
!1149 = !DILocation(line: 1415, column: 24, scope: !1122)
!1150 = !DILocalVariable(name: "y2", scope: !1122, file: !3, line: 1415, type: !21)
!1151 = !DILocation(line: 1415, column: 28, scope: !1122)
!1152 = !DILocalVariable(name: "z0", scope: !1122, file: !3, line: 1415, type: !21)
!1153 = !DILocation(line: 1415, column: 32, scope: !1122)
!1154 = !DILocalVariable(name: "z1", scope: !1122, file: !3, line: 1415, type: !21)
!1155 = !DILocation(line: 1415, column: 36, scope: !1122)
!1156 = !DILocalVariable(name: "z2", scope: !1122, file: !3, line: 1415, type: !21)
!1157 = !DILocation(line: 1415, column: 40, scope: !1122)
!1158 = !DILocalVariable(name: "z", scope: !1122, file: !3, line: 1415, type: !21)
!1159 = !DILocation(line: 1415, column: 44, scope: !1122)
!1160 = !DILocalVariable(name: "u", scope: !1122, file: !3, line: 1416, type: !21)
!1161 = !DILocation(line: 1416, column: 8, scope: !1122)
!1162 = !DILocalVariable(name: "v", scope: !1122, file: !3, line: 1416, type: !21)
!1163 = !DILocation(line: 1416, column: 11, scope: !1122)
!1164 = !DILocalVariable(name: "uxd", scope: !1122, file: !3, line: 1416, type: !21)
!1165 = !DILocation(line: 1416, column: 14, scope: !1122)
!1166 = !DILocalVariable(name: "uyd", scope: !1122, file: !3, line: 1416, type: !21)
!1167 = !DILocation(line: 1416, column: 19, scope: !1122)
!1168 = !DILocalVariable(name: "vxd", scope: !1122, file: !3, line: 1416, type: !21)
!1169 = !DILocation(line: 1416, column: 24, scope: !1122)
!1170 = !DILocalVariable(name: "vyd", scope: !1122, file: !3, line: 1416, type: !21)
!1171 = !DILocation(line: 1416, column: 29, scope: !1122)
!1172 = !DILocalVariable(name: "uy0", scope: !1122, file: !3, line: 1416, type: !21)
!1173 = !DILocation(line: 1416, column: 34, scope: !1122)
!1174 = !DILocalVariable(name: "vy0", scope: !1122, file: !3, line: 1416, type: !21)
!1175 = !DILocation(line: 1416, column: 39, scope: !1122)
!1176 = !DILocalVariable(name: "zxd", scope: !1122, file: !3, line: 1416, type: !21)
!1177 = !DILocation(line: 1416, column: 44, scope: !1122)
!1178 = !DILocalVariable(name: "zyd", scope: !1122, file: !3, line: 1416, type: !21)
!1179 = !DILocation(line: 1416, column: 49, scope: !1122)
!1180 = !DILocalVariable(name: "zy0", scope: !1122, file: !3, line: 1416, type: !21)
!1181 = !DILocation(line: 1416, column: 54, scope: !1122)
!1182 = !DILocalVariable(name: "xx1", scope: !1122, file: !3, line: 1416, type: !21)
!1183 = !DILocation(line: 1416, column: 59, scope: !1122)
!1184 = !DILocalVariable(name: "span1", scope: !1122, file: !3, line: 1417, type: !88)
!1185 = !DILocation(line: 1417, column: 15, scope: !1122)
!1186 = !DILocalVariable(name: "span2", scope: !1122, file: !3, line: 1417, type: !88)
!1187 = !DILocation(line: 1417, column: 23, scope: !1122)
!1188 = !DILocalVariable(name: "x", scope: !1122, file: !3, line: 1418, type: !29)
!1189 = !DILocation(line: 1418, column: 6, scope: !1122)
!1190 = !DILocalVariable(name: "y", scope: !1122, file: !3, line: 1418, type: !29)
!1191 = !DILocation(line: 1418, column: 9, scope: !1122)
!1192 = !DILocalVariable(name: "sn1", scope: !1122, file: !3, line: 1418, type: !29)
!1193 = !DILocation(line: 1418, column: 12, scope: !1122)
!1194 = !DILocalVariable(name: "sn2", scope: !1122, file: !3, line: 1418, type: !29)
!1195 = !DILocation(line: 1418, column: 17, scope: !1122)
!1196 = !DILocalVariable(name: "rectx", scope: !1122, file: !3, line: 1418, type: !29)
!1197 = !DILocation(line: 1418, column: 22, scope: !1122)
!1198 = !DILocation(line: 1418, column: 29, scope: !1122)
!1199 = !DILocation(line: 1418, column: 36, scope: !1122)
!1200 = !DILocalVariable(name: "my0", scope: !1122, file: !3, line: 1418, type: !29)
!1201 = !DILocation(line: 1418, column: 43, scope: !1122)
!1202 = !DILocalVariable(name: "my2", scope: !1122, file: !3, line: 1418, type: !29)
!1203 = !DILocation(line: 1418, column: 48, scope: !1122)
!1204 = !DILocation(line: 1421, column: 17, scope: !1122)
!1205 = !DILocation(line: 1421, column: 2, scope: !1122)
!1206 = !DILocation(line: 1424, column: 19, scope: !1122)
!1207 = !DILocation(line: 1424, column: 26, scope: !1122)
!1208 = !DILocation(line: 1424, column: 30, scope: !1122)
!1209 = !DILocation(line: 1424, column: 2, scope: !1122)
!1210 = !DILocation(line: 1425, column: 19, scope: !1122)
!1211 = !DILocation(line: 1425, column: 26, scope: !1122)
!1212 = !DILocation(line: 1425, column: 30, scope: !1122)
!1213 = !DILocation(line: 1425, column: 2, scope: !1122)
!1214 = !DILocation(line: 1426, column: 19, scope: !1122)
!1215 = !DILocation(line: 1426, column: 26, scope: !1122)
!1216 = !DILocation(line: 1426, column: 30, scope: !1122)
!1217 = !DILocation(line: 1426, column: 2, scope: !1122)
!1218 = !DILocation(line: 1429, column: 6, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1429, column: 6)
!1220 = !DILocation(line: 1429, column: 13, scope: !1219)
!1221 = !DILocation(line: 1429, column: 18, scope: !1219)
!1222 = !DILocation(line: 1429, column: 25, scope: !1219)
!1223 = !DILocation(line: 1429, column: 28, scope: !1219)
!1224 = !DILocation(line: 1429, column: 35, scope: !1219)
!1225 = !DILocation(line: 1429, column: 40, scope: !1219)
!1226 = !DILocation(line: 1429, column: 6, scope: !1122)
!1227 = !DILocation(line: 1429, column: 48, scope: !1219)
!1228 = !DILocation(line: 1431, column: 6, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1431, column: 6)
!1230 = !DILocation(line: 1431, column: 13, scope: !1229)
!1231 = !DILocation(line: 1431, column: 21, scope: !1229)
!1232 = !DILocation(line: 1431, column: 28, scope: !1229)
!1233 = !DILocation(line: 1431, column: 19, scope: !1229)
!1234 = !DILocation(line: 1431, column: 6, scope: !1122)
!1235 = !DILocation(line: 1431, column: 40, scope: !1229)
!1236 = !DILocation(line: 1431, column: 47, scope: !1229)
!1237 = !DILocation(line: 1431, column: 38, scope: !1229)
!1238 = !DILocation(line: 1431, column: 35, scope: !1229)
!1239 = !DILocation(line: 1431, column: 64, scope: !1229)
!1240 = !DILocation(line: 1431, column: 71, scope: !1229)
!1241 = !DILocation(line: 1431, column: 62, scope: !1229)
!1242 = !DILocation(line: 1432, column: 6, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1432, column: 6)
!1244 = !DILocation(line: 1432, column: 13, scope: !1243)
!1245 = !DILocation(line: 1432, column: 21, scope: !1243)
!1246 = !DILocation(line: 1432, column: 28, scope: !1243)
!1247 = !DILocation(line: 1432, column: 19, scope: !1243)
!1248 = !DILocation(line: 1432, column: 6, scope: !1122)
!1249 = !DILocation(line: 1432, column: 40, scope: !1243)
!1250 = !DILocation(line: 1432, column: 47, scope: !1243)
!1251 = !DILocation(line: 1432, column: 38, scope: !1243)
!1252 = !DILocation(line: 1432, column: 35, scope: !1243)
!1253 = !DILocation(line: 1432, column: 64, scope: !1243)
!1254 = !DILocation(line: 1432, column: 71, scope: !1243)
!1255 = !DILocation(line: 1432, column: 62, scope: !1243)
!1256 = !DILocation(line: 1435, column: 6, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1435, column: 6)
!1258 = !DILocation(line: 1435, column: 10, scope: !1257)
!1259 = !DILocation(line: 1435, column: 9, scope: !1257)
!1260 = !DILocation(line: 1435, column: 6, scope: !1122)
!1261 = !DILocation(line: 1435, column: 15, scope: !1257)
!1262 = !DILocation(line: 1438, column: 6, scope: !1122)
!1263 = !DILocation(line: 1438, column: 13, scope: !1122)
!1264 = !DILocation(line: 1438, column: 11, scope: !1122)
!1265 = !DILocation(line: 1438, column: 4, scope: !1122)
!1266 = !DILocation(line: 1439, column: 6, scope: !1122)
!1267 = !DILocation(line: 1439, column: 13, scope: !1122)
!1268 = !DILocation(line: 1439, column: 11, scope: !1122)
!1269 = !DILocation(line: 1439, column: 4, scope: !1122)
!1270 = !DILocation(line: 1440, column: 6, scope: !1122)
!1271 = !DILocation(line: 1440, column: 13, scope: !1122)
!1272 = !DILocation(line: 1440, column: 11, scope: !1122)
!1273 = !DILocation(line: 1440, column: 4, scope: !1122)
!1274 = !DILocation(line: 1441, column: 6, scope: !1122)
!1275 = !DILocation(line: 1441, column: 13, scope: !1122)
!1276 = !DILocation(line: 1441, column: 11, scope: !1122)
!1277 = !DILocation(line: 1441, column: 4, scope: !1122)
!1278 = !DILocation(line: 1442, column: 6, scope: !1122)
!1279 = !DILocation(line: 1442, column: 13, scope: !1122)
!1280 = !DILocation(line: 1442, column: 11, scope: !1122)
!1281 = !DILocation(line: 1442, column: 4, scope: !1122)
!1282 = !DILocation(line: 1443, column: 6, scope: !1122)
!1283 = !DILocation(line: 1443, column: 13, scope: !1122)
!1284 = !DILocation(line: 1443, column: 11, scope: !1122)
!1285 = !DILocation(line: 1443, column: 4, scope: !1122)
!1286 = !DILocation(line: 1445, column: 6, scope: !1122)
!1287 = !DILocation(line: 1445, column: 9, scope: !1122)
!1288 = !DILocation(line: 1445, column: 8, scope: !1122)
!1289 = !DILocation(line: 1445, column: 12, scope: !1122)
!1290 = !DILocation(line: 1445, column: 15, scope: !1122)
!1291 = !DILocation(line: 1445, column: 14, scope: !1122)
!1292 = !DILocation(line: 1445, column: 11, scope: !1122)
!1293 = !DILocation(line: 1445, column: 4, scope: !1122)
!1294 = !DILocation(line: 1446, column: 6, scope: !1122)
!1295 = !DILocation(line: 1446, column: 9, scope: !1122)
!1296 = !DILocation(line: 1446, column: 8, scope: !1122)
!1297 = !DILocation(line: 1446, column: 12, scope: !1122)
!1298 = !DILocation(line: 1446, column: 15, scope: !1122)
!1299 = !DILocation(line: 1446, column: 14, scope: !1122)
!1300 = !DILocation(line: 1446, column: 11, scope: !1122)
!1301 = !DILocation(line: 1446, column: 4, scope: !1122)
!1302 = !DILocation(line: 1447, column: 6, scope: !1122)
!1303 = !DILocation(line: 1447, column: 9, scope: !1122)
!1304 = !DILocation(line: 1447, column: 8, scope: !1122)
!1305 = !DILocation(line: 1447, column: 12, scope: !1122)
!1306 = !DILocation(line: 1447, column: 15, scope: !1122)
!1307 = !DILocation(line: 1447, column: 14, scope: !1122)
!1308 = !DILocation(line: 1447, column: 11, scope: !1122)
!1309 = !DILocation(line: 1447, column: 4, scope: !1122)
!1310 = !DILocation(line: 1449, column: 6, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1449, column: 6)
!1312 = !DILocation(line: 1449, column: 8, scope: !1311)
!1313 = !DILocation(line: 1449, column: 6, scope: !1122)
!1314 = !DILocation(line: 1449, column: 16, scope: !1311)
!1315 = !DILocation(line: 1451, column: 8, scope: !1122)
!1316 = !DILocation(line: 1451, column: 11, scope: !1122)
!1317 = !DILocation(line: 1451, column: 10, scope: !1122)
!1318 = !DILocation(line: 1451, column: 19, scope: !1122)
!1319 = !DILocation(line: 1451, column: 22, scope: !1122)
!1320 = !DILocation(line: 1451, column: 21, scope: !1122)
!1321 = !DILocation(line: 1451, column: 17, scope: !1122)
!1322 = !DILocation(line: 1451, column: 29, scope: !1122)
!1323 = !DILocation(line: 1451, column: 28, scope: !1122)
!1324 = !DILocation(line: 1451, column: 34, scope: !1122)
!1325 = !DILocation(line: 1451, column: 32, scope: !1122)
!1326 = !DILocation(line: 1451, column: 5, scope: !1122)
!1327 = !DILocation(line: 1452, column: 16, scope: !1122)
!1328 = !DILocation(line: 1452, column: 8, scope: !1122)
!1329 = !DILocation(line: 1452, column: 7, scope: !1122)
!1330 = !DILocation(line: 1452, column: 27, scope: !1122)
!1331 = !DILocation(line: 1452, column: 19, scope: !1122)
!1332 = !DILocation(line: 1452, column: 18, scope: !1122)
!1333 = !DILocation(line: 1452, column: 5, scope: !1122)
!1334 = !DILocation(line: 1453, column: 16, scope: !1122)
!1335 = !DILocation(line: 1453, column: 8, scope: !1122)
!1336 = !DILocation(line: 1453, column: 7, scope: !1122)
!1337 = !DILocation(line: 1453, column: 27, scope: !1122)
!1338 = !DILocation(line: 1453, column: 19, scope: !1122)
!1339 = !DILocation(line: 1453, column: 18, scope: !1122)
!1340 = !DILocation(line: 1453, column: 5, scope: !1122)
!1341 = !DILocation(line: 1454, column: 16, scope: !1122)
!1342 = !DILocation(line: 1454, column: 8, scope: !1122)
!1343 = !DILocation(line: 1454, column: 21, scope: !1122)
!1344 = !DILocation(line: 1454, column: 20, scope: !1122)
!1345 = !DILocation(line: 1454, column: 35, scope: !1122)
!1346 = !DILocation(line: 1454, column: 27, scope: !1122)
!1347 = !DILocation(line: 1454, column: 25, scope: !1122)
!1348 = !DILocation(line: 1454, column: 7, scope: !1122)
!1349 = !DILocation(line: 1454, column: 5, scope: !1122)
!1350 = !DILocation(line: 1456, column: 4, scope: !1122)
!1351 = !DILocation(line: 1457, column: 4, scope: !1122)
!1352 = !DILocation(line: 1459, column: 6, scope: !1122)
!1353 = !DILocation(line: 1459, column: 9, scope: !1122)
!1354 = !DILocation(line: 1459, column: 8, scope: !1122)
!1355 = !DILocation(line: 1459, column: 12, scope: !1122)
!1356 = !DILocation(line: 1459, column: 15, scope: !1122)
!1357 = !DILocation(line: 1459, column: 14, scope: !1122)
!1358 = !DILocation(line: 1459, column: 11, scope: !1122)
!1359 = !DILocation(line: 1459, column: 4, scope: !1122)
!1360 = !DILocation(line: 1460, column: 6, scope: !1122)
!1361 = !DILocation(line: 1460, column: 9, scope: !1122)
!1362 = !DILocation(line: 1460, column: 8, scope: !1122)
!1363 = !DILocation(line: 1460, column: 12, scope: !1122)
!1364 = !DILocation(line: 1460, column: 15, scope: !1122)
!1365 = !DILocation(line: 1460, column: 14, scope: !1122)
!1366 = !DILocation(line: 1460, column: 11, scope: !1122)
!1367 = !DILocation(line: 1460, column: 4, scope: !1122)
!1368 = !DILocation(line: 1462, column: 8, scope: !1122)
!1369 = !DILocation(line: 1462, column: 11, scope: !1122)
!1370 = !DILocation(line: 1462, column: 10, scope: !1122)
!1371 = !DILocation(line: 1462, column: 19, scope: !1122)
!1372 = !DILocation(line: 1462, column: 22, scope: !1122)
!1373 = !DILocation(line: 1462, column: 21, scope: !1122)
!1374 = !DILocation(line: 1462, column: 17, scope: !1122)
!1375 = !DILocation(line: 1462, column: 29, scope: !1122)
!1376 = !DILocation(line: 1462, column: 28, scope: !1122)
!1377 = !DILocation(line: 1462, column: 32, scope: !1122)
!1378 = !DILocation(line: 1462, column: 5, scope: !1122)
!1379 = !DILocation(line: 1463, column: 16, scope: !1122)
!1380 = !DILocation(line: 1463, column: 8, scope: !1122)
!1381 = !DILocation(line: 1463, column: 7, scope: !1122)
!1382 = !DILocation(line: 1463, column: 27, scope: !1122)
!1383 = !DILocation(line: 1463, column: 19, scope: !1122)
!1384 = !DILocation(line: 1463, column: 18, scope: !1122)
!1385 = !DILocation(line: 1463, column: 5, scope: !1122)
!1386 = !DILocation(line: 1464, column: 16, scope: !1122)
!1387 = !DILocation(line: 1464, column: 8, scope: !1122)
!1388 = !DILocation(line: 1464, column: 7, scope: !1122)
!1389 = !DILocation(line: 1464, column: 27, scope: !1122)
!1390 = !DILocation(line: 1464, column: 19, scope: !1122)
!1391 = !DILocation(line: 1464, column: 18, scope: !1122)
!1392 = !DILocation(line: 1464, column: 5, scope: !1122)
!1393 = !DILocation(line: 1465, column: 16, scope: !1122)
!1394 = !DILocation(line: 1465, column: 8, scope: !1122)
!1395 = !DILocation(line: 1465, column: 21, scope: !1122)
!1396 = !DILocation(line: 1465, column: 20, scope: !1122)
!1397 = !DILocation(line: 1465, column: 35, scope: !1122)
!1398 = !DILocation(line: 1465, column: 27, scope: !1122)
!1399 = !DILocation(line: 1465, column: 25, scope: !1122)
!1400 = !DILocation(line: 1465, column: 7, scope: !1122)
!1401 = !DILocation(line: 1465, column: 5, scope: !1122)
!1402 = !DILocation(line: 1467, column: 4, scope: !1122)
!1403 = !DILocation(line: 1468, column: 4, scope: !1122)
!1404 = !DILocation(line: 1470, column: 6, scope: !1122)
!1405 = !DILocation(line: 1470, column: 9, scope: !1122)
!1406 = !DILocation(line: 1470, column: 8, scope: !1122)
!1407 = !DILocation(line: 1470, column: 12, scope: !1122)
!1408 = !DILocation(line: 1470, column: 15, scope: !1122)
!1409 = !DILocation(line: 1470, column: 14, scope: !1122)
!1410 = !DILocation(line: 1470, column: 11, scope: !1122)
!1411 = !DILocation(line: 1470, column: 4, scope: !1122)
!1412 = !DILocation(line: 1471, column: 6, scope: !1122)
!1413 = !DILocation(line: 1471, column: 9, scope: !1122)
!1414 = !DILocation(line: 1471, column: 8, scope: !1122)
!1415 = !DILocation(line: 1471, column: 12, scope: !1122)
!1416 = !DILocation(line: 1471, column: 15, scope: !1122)
!1417 = !DILocation(line: 1471, column: 14, scope: !1122)
!1418 = !DILocation(line: 1471, column: 11, scope: !1122)
!1419 = !DILocation(line: 1471, column: 4, scope: !1122)
!1420 = !DILocation(line: 1473, column: 8, scope: !1122)
!1421 = !DILocation(line: 1473, column: 11, scope: !1122)
!1422 = !DILocation(line: 1473, column: 10, scope: !1122)
!1423 = !DILocation(line: 1473, column: 19, scope: !1122)
!1424 = !DILocation(line: 1473, column: 22, scope: !1122)
!1425 = !DILocation(line: 1473, column: 21, scope: !1122)
!1426 = !DILocation(line: 1473, column: 17, scope: !1122)
!1427 = !DILocation(line: 1473, column: 29, scope: !1122)
!1428 = !DILocation(line: 1473, column: 28, scope: !1122)
!1429 = !DILocation(line: 1473, column: 5, scope: !1122)
!1430 = !DILocation(line: 1474, column: 16, scope: !1122)
!1431 = !DILocation(line: 1474, column: 8, scope: !1122)
!1432 = !DILocation(line: 1474, column: 7, scope: !1122)
!1433 = !DILocation(line: 1474, column: 27, scope: !1122)
!1434 = !DILocation(line: 1474, column: 19, scope: !1122)
!1435 = !DILocation(line: 1474, column: 18, scope: !1122)
!1436 = !DILocation(line: 1474, column: 5, scope: !1122)
!1437 = !DILocation(line: 1475, column: 16, scope: !1122)
!1438 = !DILocation(line: 1475, column: 8, scope: !1122)
!1439 = !DILocation(line: 1475, column: 7, scope: !1122)
!1440 = !DILocation(line: 1475, column: 27, scope: !1122)
!1441 = !DILocation(line: 1475, column: 19, scope: !1122)
!1442 = !DILocation(line: 1475, column: 18, scope: !1122)
!1443 = !DILocation(line: 1475, column: 5, scope: !1122)
!1444 = !DILocation(line: 1476, column: 16, scope: !1122)
!1445 = !DILocation(line: 1476, column: 8, scope: !1122)
!1446 = !DILocation(line: 1476, column: 21, scope: !1122)
!1447 = !DILocation(line: 1476, column: 20, scope: !1122)
!1448 = !DILocation(line: 1476, column: 35, scope: !1122)
!1449 = !DILocation(line: 1476, column: 27, scope: !1122)
!1450 = !DILocation(line: 1476, column: 25, scope: !1122)
!1451 = !DILocation(line: 1476, column: 7, scope: !1122)
!1452 = !DILocation(line: 1476, column: 5, scope: !1122)
!1453 = !DILocation(line: 1479, column: 8, scope: !1122)
!1454 = !DILocation(line: 1479, column: 14, scope: !1122)
!1455 = !DILocation(line: 1479, column: 12, scope: !1122)
!1456 = !DILocation(line: 1479, column: 18, scope: !1122)
!1457 = !DILocation(line: 1479, column: 5, scope: !1122)
!1458 = !DILocation(line: 1480, column: 6, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1480, column: 6)
!1460 = !DILocation(line: 1480, column: 13, scope: !1459)
!1461 = !DILocation(line: 1480, column: 19, scope: !1459)
!1462 = !DILocation(line: 1480, column: 26, scope: !1459)
!1463 = !DILocation(line: 1480, column: 33, scope: !1459)
!1464 = !DILocation(line: 1480, column: 39, scope: !1459)
!1465 = !DILocation(line: 1480, column: 24, scope: !1459)
!1466 = !DILocation(line: 1480, column: 6, scope: !1122)
!1467 = !DILocation(line: 1481, column: 10, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 1480, column: 45)
!1469 = !DILocation(line: 1481, column: 17, scope: !1468)
!1470 = !DILocation(line: 1481, column: 23, scope: !1468)
!1471 = !DILocation(line: 1481, column: 22, scope: !1468)
!1472 = !DILocation(line: 1481, column: 8, scope: !1468)
!1473 = !DILocation(line: 1482, column: 10, scope: !1468)
!1474 = !DILocation(line: 1482, column: 17, scope: !1468)
!1475 = !DILocation(line: 1482, column: 23, scope: !1468)
!1476 = !DILocation(line: 1482, column: 22, scope: !1468)
!1477 = !DILocation(line: 1482, column: 8, scope: !1468)
!1478 = !DILocation(line: 1483, column: 2, scope: !1468)
!1479 = !DILocation(line: 1485, column: 10, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 1484, column: 7)
!1481 = !DILocation(line: 1485, column: 17, scope: !1480)
!1482 = !DILocation(line: 1485, column: 23, scope: !1480)
!1483 = !DILocation(line: 1485, column: 22, scope: !1480)
!1484 = !DILocation(line: 1485, column: 8, scope: !1480)
!1485 = !DILocation(line: 1486, column: 10, scope: !1480)
!1486 = !DILocation(line: 1486, column: 17, scope: !1480)
!1487 = !DILocation(line: 1486, column: 23, scope: !1480)
!1488 = !DILocation(line: 1486, column: 22, scope: !1480)
!1489 = !DILocation(line: 1486, column: 8, scope: !1480)
!1490 = !DILocation(line: 1489, column: 9, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1122, file: !3, line: 1489, column: 2)
!1492 = !DILocation(line: 1489, column: 8, scope: !1491)
!1493 = !DILocation(line: 1489, column: 7, scope: !1491)
!1494 = !DILocation(line: 1489, column: 14, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 1489, column: 2)
!1496 = !DILocation(line: 1489, column: 17, scope: !1495)
!1497 = !DILocation(line: 1489, column: 15, scope: !1495)
!1498 = !DILocation(line: 1489, column: 2, scope: !1491)
!1499 = !DILocation(line: 1491, column: 15, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 1489, column: 45)
!1501 = !DILocation(line: 1491, column: 14, scope: !1500)
!1502 = !DILocation(line: 1491, column: 8, scope: !1500)
!1503 = !DILocation(line: 1491, column: 6, scope: !1500)
!1504 = !DILocation(line: 1492, column: 15, scope: !1500)
!1505 = !DILocation(line: 1492, column: 14, scope: !1500)
!1506 = !DILocation(line: 1492, column: 8, scope: !1500)
!1507 = !DILocation(line: 1492, column: 6, scope: !1500)
!1508 = !DILocation(line: 1493, column: 6, scope: !1500)
!1509 = !DILocation(line: 1495, column: 7, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1495, column: 7)
!1511 = !DILocation(line: 1495, column: 12, scope: !1510)
!1512 = !DILocation(line: 1495, column: 10, scope: !1510)
!1513 = !DILocation(line: 1495, column: 7, scope: !1500)
!1514 = !DILocation(line: 1495, column: 24, scope: !1510)
!1515 = !DILocation(line: 1495, column: 29, scope: !1510)
!1516 = !DILocation(line: 1495, column: 22, scope: !1510)
!1517 = !DILocation(line: 1495, column: 19, scope: !1510)
!1518 = !DILocation(line: 1496, column: 7, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1496, column: 7)
!1520 = !DILocation(line: 1496, column: 10, scope: !1519)
!1521 = !DILocation(line: 1496, column: 7, scope: !1500)
!1522 = !DILocation(line: 1496, column: 17, scope: !1519)
!1523 = !DILocation(line: 1496, column: 14, scope: !1519)
!1524 = !DILocation(line: 1498, column: 14, scope: !1500)
!1525 = !DILocation(line: 1498, column: 6, scope: !1500)
!1526 = !DILocation(line: 1498, column: 18, scope: !1500)
!1527 = !DILocation(line: 1498, column: 17, scope: !1500)
!1528 = !DILocation(line: 1498, column: 24, scope: !1500)
!1529 = !DILocation(line: 1498, column: 22, scope: !1500)
!1530 = !DILocation(line: 1498, column: 4, scope: !1500)
!1531 = !DILocation(line: 1499, column: 14, scope: !1500)
!1532 = !DILocation(line: 1499, column: 6, scope: !1500)
!1533 = !DILocation(line: 1499, column: 18, scope: !1500)
!1534 = !DILocation(line: 1499, column: 17, scope: !1500)
!1535 = !DILocation(line: 1499, column: 24, scope: !1500)
!1536 = !DILocation(line: 1499, column: 22, scope: !1500)
!1537 = !DILocation(line: 1499, column: 4, scope: !1500)
!1538 = !DILocation(line: 1500, column: 14, scope: !1500)
!1539 = !DILocation(line: 1500, column: 6, scope: !1500)
!1540 = !DILocation(line: 1500, column: 18, scope: !1500)
!1541 = !DILocation(line: 1500, column: 17, scope: !1500)
!1542 = !DILocation(line: 1500, column: 24, scope: !1500)
!1543 = !DILocation(line: 1500, column: 22, scope: !1500)
!1544 = !DILocation(line: 1500, column: 4, scope: !1500)
!1545 = !DILocation(line: 1502, column: 11, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1502, column: 3)
!1547 = !DILocation(line: 1502, column: 9, scope: !1546)
!1548 = !DILocation(line: 1502, column: 8, scope: !1546)
!1549 = !DILocation(line: 1502, column: 16, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 1502, column: 3)
!1551 = !DILocation(line: 1502, column: 19, scope: !1550)
!1552 = !DILocation(line: 1502, column: 17, scope: !1550)
!1553 = !DILocation(line: 1502, column: 3, scope: !1546)
!1554 = !DILocation(line: 1503, column: 4, scope: !1550)
!1555 = !DILocation(line: 1503, column: 9, scope: !1550)
!1556 = !DILocation(line: 1503, column: 17, scope: !1550)
!1557 = !DILocation(line: 1503, column: 20, scope: !1550)
!1558 = !DILocation(line: 1503, column: 23, scope: !1550)
!1559 = !DILocation(line: 1503, column: 26, scope: !1550)
!1560 = !DILocation(line: 1503, column: 29, scope: !1550)
!1561 = !DILocation(line: 1502, column: 25, scope: !1550)
!1562 = !DILocation(line: 1502, column: 32, scope: !1550)
!1563 = !DILocation(line: 1502, column: 30, scope: !1550)
!1564 = !DILocation(line: 1502, column: 40, scope: !1550)
!1565 = !DILocation(line: 1502, column: 38, scope: !1550)
!1566 = !DILocation(line: 1502, column: 48, scope: !1550)
!1567 = !DILocation(line: 1502, column: 46, scope: !1550)
!1568 = !DILocation(line: 1502, column: 3, scope: !1550)
!1569 = distinct !{!1569, !1553, !1570}
!1570 = !DILocation(line: 1503, column: 30, scope: !1546)
!1571 = !DILocation(line: 1505, column: 10, scope: !1500)
!1572 = !DILocation(line: 1505, column: 7, scope: !1500)
!1573 = !DILocation(line: 1506, column: 10, scope: !1500)
!1574 = !DILocation(line: 1506, column: 7, scope: !1500)
!1575 = !DILocation(line: 1507, column: 10, scope: !1500)
!1576 = !DILocation(line: 1507, column: 7, scope: !1500)
!1577 = !DILocation(line: 1508, column: 2, scope: !1500)
!1578 = !DILocation(line: 1489, column: 23, scope: !1495)
!1579 = !DILocation(line: 1489, column: 32, scope: !1495)
!1580 = !DILocation(line: 1489, column: 41, scope: !1495)
!1581 = !DILocation(line: 1489, column: 2, scope: !1495)
!1582 = distinct !{!1582, !1498, !1583}
!1583 = !DILocation(line: 1508, column: 2, scope: !1491)
!1584 = !DILocation(line: 1509, column: 1, scope: !1122)
!1585 = distinct !DISubprogram(name: "zbuf_init_span", scope: !3, file: !3, line: 115, type: !243, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!1586 = !DILocalVariable(name: "zspan", arg: 1, scope: !1585, file: !3, line: 115, type: !120)
!1587 = !DILocation(line: 115, column: 35, scope: !1585)
!1588 = !DILocation(line: 117, column: 30, scope: !1585)
!1589 = !DILocation(line: 117, column: 37, scope: !1585)
!1590 = !DILocation(line: 117, column: 42, scope: !1585)
!1591 = !DILocation(line: 117, column: 16, scope: !1585)
!1592 = !DILocation(line: 117, column: 23, scope: !1585)
!1593 = !DILocation(line: 117, column: 28, scope: !1585)
!1594 = !DILocation(line: 117, column: 2, scope: !1585)
!1595 = !DILocation(line: 117, column: 9, scope: !1585)
!1596 = !DILocation(line: 117, column: 14, scope: !1585)
!1597 = !DILocation(line: 118, column: 16, scope: !1585)
!1598 = !DILocation(line: 118, column: 23, scope: !1585)
!1599 = !DILocation(line: 118, column: 28, scope: !1585)
!1600 = !DILocation(line: 118, column: 2, scope: !1585)
!1601 = !DILocation(line: 118, column: 9, scope: !1585)
!1602 = !DILocation(line: 118, column: 14, scope: !1585)
!1603 = !DILocation(line: 119, column: 44, scope: !1585)
!1604 = !DILocation(line: 119, column: 51, scope: !1585)
!1605 = !DILocation(line: 119, column: 56, scope: !1585)
!1606 = !DILocation(line: 119, column: 30, scope: !1585)
!1607 = !DILocation(line: 119, column: 37, scope: !1585)
!1608 = !DILocation(line: 119, column: 42, scope: !1585)
!1609 = !DILocation(line: 119, column: 16, scope: !1585)
!1610 = !DILocation(line: 119, column: 23, scope: !1585)
!1611 = !DILocation(line: 119, column: 28, scope: !1585)
!1612 = !DILocation(line: 119, column: 2, scope: !1585)
!1613 = !DILocation(line: 119, column: 9, scope: !1585)
!1614 = !DILocation(line: 119, column: 14, scope: !1585)
!1615 = !DILocation(line: 120, column: 1, scope: !1585)
!1616 = distinct !DISubprogram(name: "zbuf_add_to_span", scope: !3, file: !3, line: 122, type: !1617, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !120, !88, !88}
!1619 = !DILocalVariable(name: "zspan", arg: 1, scope: !1616, file: !3, line: 122, type: !120)
!1620 = !DILocation(line: 122, column: 37, scope: !1616)
!1621 = !DILocalVariable(name: "v1", arg: 2, scope: !1616, file: !3, line: 122, type: !88)
!1622 = !DILocation(line: 122, column: 56, scope: !1616)
!1623 = !DILocalVariable(name: "v2", arg: 3, scope: !1616, file: !3, line: 122, type: !88)
!1624 = !DILocation(line: 122, column: 75, scope: !1616)
!1625 = !DILocalVariable(name: "minv", scope: !1616, file: !3, line: 124, type: !88)
!1626 = !DILocation(line: 124, column: 15, scope: !1616)
!1627 = !DILocalVariable(name: "maxv", scope: !1616, file: !3, line: 124, type: !88)
!1628 = !DILocation(line: 124, column: 22, scope: !1616)
!1629 = !DILocalVariable(name: "span", scope: !1616, file: !3, line: 125, type: !31)
!1630 = !DILocation(line: 125, column: 9, scope: !1616)
!1631 = !DILocalVariable(name: "xx1", scope: !1616, file: !3, line: 126, type: !21)
!1632 = !DILocation(line: 126, column: 8, scope: !1616)
!1633 = !DILocalVariable(name: "dx0", scope: !1616, file: !3, line: 126, type: !21)
!1634 = !DILocation(line: 126, column: 13, scope: !1616)
!1635 = !DILocalVariable(name: "xs0", scope: !1616, file: !3, line: 126, type: !21)
!1636 = !DILocation(line: 126, column: 18, scope: !1616)
!1637 = !DILocalVariable(name: "y", scope: !1616, file: !3, line: 127, type: !29)
!1638 = !DILocation(line: 127, column: 6, scope: !1616)
!1639 = !DILocalVariable(name: "my0", scope: !1616, file: !3, line: 127, type: !29)
!1640 = !DILocation(line: 127, column: 9, scope: !1616)
!1641 = !DILocalVariable(name: "my2", scope: !1616, file: !3, line: 127, type: !29)
!1642 = !DILocation(line: 127, column: 14, scope: !1616)
!1643 = !DILocation(line: 129, column: 6, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 129, column: 6)
!1645 = !DILocation(line: 129, column: 12, scope: !1644)
!1646 = !DILocation(line: 129, column: 11, scope: !1644)
!1647 = !DILocation(line: 129, column: 6, scope: !1616)
!1648 = !DILocation(line: 130, column: 9, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 129, column: 19)
!1650 = !DILocation(line: 130, column: 7, scope: !1649)
!1651 = !DILocation(line: 130, column: 19, scope: !1649)
!1652 = !DILocation(line: 130, column: 17, scope: !1649)
!1653 = !DILocation(line: 131, column: 2, scope: !1649)
!1654 = !DILocation(line: 133, column: 9, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 132, column: 7)
!1656 = !DILocation(line: 133, column: 7, scope: !1655)
!1657 = !DILocation(line: 133, column: 19, scope: !1655)
!1658 = !DILocation(line: 133, column: 17, scope: !1655)
!1659 = !DILocation(line: 136, column: 12, scope: !1616)
!1660 = !DILocation(line: 136, column: 7, scope: !1616)
!1661 = !DILocation(line: 136, column: 5, scope: !1616)
!1662 = !DILocation(line: 137, column: 13, scope: !1616)
!1663 = !DILocation(line: 137, column: 7, scope: !1616)
!1664 = !DILocation(line: 137, column: 5, scope: !1616)
!1665 = !DILocation(line: 139, column: 6, scope: !1666)
!1666 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 139, column: 6)
!1667 = !DILocation(line: 139, column: 9, scope: !1666)
!1668 = !DILocation(line: 139, column: 12, scope: !1666)
!1669 = !DILocation(line: 139, column: 15, scope: !1666)
!1670 = !DILocation(line: 139, column: 21, scope: !1666)
!1671 = !DILocation(line: 139, column: 28, scope: !1666)
!1672 = !DILocation(line: 139, column: 18, scope: !1666)
!1673 = !DILocation(line: 139, column: 6, scope: !1616)
!1674 = !DILocation(line: 139, column: 35, scope: !1666)
!1675 = !DILocation(line: 142, column: 6, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 142, column: 6)
!1677 = !DILocation(line: 142, column: 11, scope: !1676)
!1678 = !DILocation(line: 142, column: 18, scope: !1676)
!1679 = !DILocation(line: 142, column: 9, scope: !1676)
!1680 = !DILocation(line: 142, column: 6, scope: !1616)
!1681 = !DILocation(line: 142, column: 30, scope: !1676)
!1682 = !DILocation(line: 142, column: 37, scope: !1676)
!1683 = !DILocation(line: 142, column: 42, scope: !1676)
!1684 = !DILocation(line: 142, column: 28, scope: !1676)
!1685 = !DILocation(line: 142, column: 25, scope: !1676)
!1686 = !DILocation(line: 144, column: 6, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 144, column: 6)
!1688 = !DILocation(line: 144, column: 9, scope: !1687)
!1689 = !DILocation(line: 144, column: 6, scope: !1616)
!1690 = !DILocation(line: 144, column: 16, scope: !1687)
!1691 = !DILocation(line: 144, column: 13, scope: !1687)
!1692 = !DILocation(line: 146, column: 6, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 146, column: 6)
!1694 = !DILocation(line: 146, column: 10, scope: !1693)
!1695 = !DILocation(line: 146, column: 9, scope: !1693)
!1696 = !DILocation(line: 146, column: 6, scope: !1616)
!1697 = !DILocation(line: 146, column: 15, scope: !1693)
!1698 = !DILocation(line: 149, column: 7, scope: !1616)
!1699 = !DILocation(line: 149, column: 15, scope: !1616)
!1700 = !DILocation(line: 149, column: 14, scope: !1616)
!1701 = !DILocation(line: 149, column: 5, scope: !1616)
!1702 = !DILocation(line: 150, column: 6, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 150, column: 6)
!1704 = !DILocation(line: 150, column: 9, scope: !1703)
!1705 = !DILocation(line: 150, column: 6, scope: !1616)
!1706 = !DILocation(line: 151, column: 9, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 150, column: 23)
!1708 = !DILocation(line: 151, column: 17, scope: !1707)
!1709 = !DILocation(line: 151, column: 16, scope: !1707)
!1710 = !DILocation(line: 151, column: 26, scope: !1707)
!1711 = !DILocation(line: 151, column: 25, scope: !1707)
!1712 = !DILocation(line: 151, column: 6, scope: !1707)
!1713 = !DILocation(line: 152, column: 8, scope: !1707)
!1714 = !DILocation(line: 152, column: 13, scope: !1707)
!1715 = !DILocation(line: 152, column: 21, scope: !1707)
!1716 = !DILocation(line: 152, column: 20, scope: !1707)
!1717 = !DILocation(line: 152, column: 11, scope: !1707)
!1718 = !DILocation(line: 152, column: 28, scope: !1707)
!1719 = !DILocation(line: 152, column: 26, scope: !1707)
!1720 = !DILocation(line: 152, column: 6, scope: !1707)
!1721 = !DILocation(line: 153, column: 2, scope: !1707)
!1722 = !DILocation(line: 155, column: 7, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1703, file: !3, line: 154, column: 7)
!1724 = !DILocation(line: 156, column: 16, scope: !1723)
!1725 = !DILocation(line: 156, column: 25, scope: !1723)
!1726 = !DILocation(line: 156, column: 9, scope: !1723)
!1727 = !DILocation(line: 156, column: 7, scope: !1723)
!1728 = !DILocation(line: 160, column: 6, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 160, column: 6)
!1730 = !DILocation(line: 160, column: 13, scope: !1729)
!1731 = !DILocation(line: 160, column: 19, scope: !1729)
!1732 = !DILocation(line: 160, column: 6, scope: !1616)
!1733 = !DILocation(line: 161, column: 9, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1729, file: !3, line: 160, column: 28)
!1735 = !DILocation(line: 161, column: 16, scope: !1734)
!1736 = !DILocation(line: 161, column: 7, scope: !1734)
!1737 = !DILocation(line: 162, column: 2, scope: !1734)
!1738 = !DILocation(line: 164, column: 8, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1740, file: !3, line: 164, column: 8)
!1740 = distinct !DILexicalBlock(scope: !1729, file: !3, line: 163, column: 7)
!1741 = !DILocation(line: 164, column: 16, scope: !1739)
!1742 = !DILocation(line: 164, column: 23, scope: !1739)
!1743 = !DILocation(line: 164, column: 13, scope: !1739)
!1744 = !DILocation(line: 164, column: 29, scope: !1739)
!1745 = !DILocation(line: 164, column: 32, scope: !1739)
!1746 = !DILocation(line: 164, column: 38, scope: !1739)
!1747 = !DILocation(line: 164, column: 45, scope: !1739)
!1748 = !DILocation(line: 164, column: 36, scope: !1739)
!1749 = !DILocation(line: 164, column: 8, scope: !1740)
!1750 = !DILocation(line: 165, column: 10, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 164, column: 52)
!1752 = !DILocation(line: 165, column: 17, scope: !1751)
!1753 = !DILocation(line: 165, column: 8, scope: !1751)
!1754 = !DILocation(line: 166, column: 3, scope: !1751)
!1755 = !DILocation(line: 168, column: 10, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1739, file: !3, line: 167, column: 8)
!1757 = !DILocation(line: 168, column: 17, scope: !1756)
!1758 = !DILocation(line: 168, column: 8, scope: !1756)
!1759 = !DILocation(line: 172, column: 6, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 172, column: 6)
!1761 = !DILocation(line: 172, column: 12, scope: !1760)
!1762 = !DILocation(line: 172, column: 19, scope: !1760)
!1763 = !DILocation(line: 172, column: 10, scope: !1760)
!1764 = !DILocation(line: 172, column: 6, scope: !1616)
!1765 = !DILocation(line: 174, column: 7, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 174, column: 7)
!1767 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 172, column: 26)
!1768 = !DILocation(line: 174, column: 14, scope: !1766)
!1769 = !DILocation(line: 174, column: 19, scope: !1766)
!1770 = !DILocation(line: 174, column: 26, scope: !1766)
!1771 = !DILocation(line: 174, column: 29, scope: !1766)
!1772 = !DILocation(line: 174, column: 36, scope: !1766)
!1773 = !DILocation(line: 174, column: 47, scope: !1766)
!1774 = !DILocation(line: 174, column: 45, scope: !1766)
!1775 = !DILocation(line: 174, column: 7, scope: !1767)
!1776 = !DILocation(line: 175, column: 18, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1766, file: !3, line: 174, column: 57)
!1778 = !DILocation(line: 175, column: 4, scope: !1777)
!1779 = !DILocation(line: 175, column: 11, scope: !1777)
!1780 = !DILocation(line: 175, column: 16, scope: !1777)
!1781 = !DILocation(line: 176, column: 3, scope: !1777)
!1782 = !DILocation(line: 177, column: 7, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 177, column: 7)
!1784 = !DILocation(line: 177, column: 14, scope: !1783)
!1785 = !DILocation(line: 177, column: 19, scope: !1783)
!1786 = !DILocation(line: 177, column: 26, scope: !1783)
!1787 = !DILocation(line: 177, column: 29, scope: !1783)
!1788 = !DILocation(line: 177, column: 36, scope: !1783)
!1789 = !DILocation(line: 177, column: 47, scope: !1783)
!1790 = !DILocation(line: 177, column: 45, scope: !1783)
!1791 = !DILocation(line: 177, column: 7, scope: !1767)
!1792 = !DILocation(line: 178, column: 18, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1783, file: !3, line: 177, column: 57)
!1794 = !DILocation(line: 178, column: 4, scope: !1793)
!1795 = !DILocation(line: 178, column: 11, scope: !1793)
!1796 = !DILocation(line: 178, column: 16, scope: !1793)
!1797 = !DILocation(line: 179, column: 3, scope: !1793)
!1798 = !DILocation(line: 180, column: 7, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 180, column: 7)
!1800 = !DILocation(line: 180, column: 11, scope: !1799)
!1801 = !DILocation(line: 180, column: 18, scope: !1799)
!1802 = !DILocation(line: 180, column: 10, scope: !1799)
!1803 = !DILocation(line: 180, column: 7, scope: !1767)
!1804 = !DILocation(line: 180, column: 39, scope: !1799)
!1805 = !DILocation(line: 180, column: 25, scope: !1799)
!1806 = !DILocation(line: 180, column: 32, scope: !1799)
!1807 = !DILocation(line: 180, column: 37, scope: !1799)
!1808 = !DILocation(line: 181, column: 7, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 181, column: 7)
!1810 = !DILocation(line: 181, column: 11, scope: !1809)
!1811 = !DILocation(line: 181, column: 18, scope: !1809)
!1812 = !DILocation(line: 181, column: 10, scope: !1809)
!1813 = !DILocation(line: 181, column: 7, scope: !1767)
!1814 = !DILocation(line: 181, column: 39, scope: !1809)
!1815 = !DILocation(line: 181, column: 25, scope: !1809)
!1816 = !DILocation(line: 181, column: 32, scope: !1809)
!1817 = !DILocation(line: 181, column: 37, scope: !1809)
!1818 = !DILocation(line: 182, column: 2, scope: !1767)
!1819 = !DILocation(line: 185, column: 7, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 185, column: 7)
!1821 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 183, column: 7)
!1822 = !DILocation(line: 185, column: 14, scope: !1820)
!1823 = !DILocation(line: 185, column: 19, scope: !1820)
!1824 = !DILocation(line: 185, column: 26, scope: !1820)
!1825 = !DILocation(line: 185, column: 29, scope: !1820)
!1826 = !DILocation(line: 185, column: 36, scope: !1820)
!1827 = !DILocation(line: 185, column: 47, scope: !1820)
!1828 = !DILocation(line: 185, column: 45, scope: !1820)
!1829 = !DILocation(line: 185, column: 7, scope: !1821)
!1830 = !DILocation(line: 186, column: 18, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 185, column: 57)
!1832 = !DILocation(line: 186, column: 4, scope: !1831)
!1833 = !DILocation(line: 186, column: 11, scope: !1831)
!1834 = !DILocation(line: 186, column: 16, scope: !1831)
!1835 = !DILocation(line: 187, column: 3, scope: !1831)
!1836 = !DILocation(line: 188, column: 7, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 188, column: 7)
!1838 = !DILocation(line: 188, column: 14, scope: !1837)
!1839 = !DILocation(line: 188, column: 19, scope: !1837)
!1840 = !DILocation(line: 188, column: 26, scope: !1837)
!1841 = !DILocation(line: 188, column: 29, scope: !1837)
!1842 = !DILocation(line: 188, column: 36, scope: !1837)
!1843 = !DILocation(line: 188, column: 47, scope: !1837)
!1844 = !DILocation(line: 188, column: 45, scope: !1837)
!1845 = !DILocation(line: 188, column: 7, scope: !1821)
!1846 = !DILocation(line: 189, column: 18, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 188, column: 57)
!1848 = !DILocation(line: 189, column: 4, scope: !1847)
!1849 = !DILocation(line: 189, column: 11, scope: !1847)
!1850 = !DILocation(line: 189, column: 16, scope: !1847)
!1851 = !DILocation(line: 190, column: 3, scope: !1847)
!1852 = !DILocation(line: 191, column: 7, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 191, column: 7)
!1854 = !DILocation(line: 191, column: 11, scope: !1853)
!1855 = !DILocation(line: 191, column: 18, scope: !1853)
!1856 = !DILocation(line: 191, column: 10, scope: !1853)
!1857 = !DILocation(line: 191, column: 7, scope: !1821)
!1858 = !DILocation(line: 191, column: 39, scope: !1853)
!1859 = !DILocation(line: 191, column: 25, scope: !1853)
!1860 = !DILocation(line: 191, column: 32, scope: !1853)
!1861 = !DILocation(line: 191, column: 37, scope: !1853)
!1862 = !DILocation(line: 192, column: 7, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 192, column: 7)
!1864 = !DILocation(line: 192, column: 11, scope: !1863)
!1865 = !DILocation(line: 192, column: 18, scope: !1863)
!1866 = !DILocation(line: 192, column: 10, scope: !1863)
!1867 = !DILocation(line: 192, column: 7, scope: !1821)
!1868 = !DILocation(line: 192, column: 39, scope: !1863)
!1869 = !DILocation(line: 192, column: 25, scope: !1863)
!1870 = !DILocation(line: 192, column: 32, scope: !1863)
!1871 = !DILocation(line: 192, column: 37, scope: !1863)
!1872 = !DILocation(line: 195, column: 9, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 195, column: 2)
!1874 = !DILocation(line: 195, column: 8, scope: !1873)
!1875 = !DILocation(line: 195, column: 7, scope: !1873)
!1876 = !DILocation(line: 195, column: 14, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 195, column: 2)
!1878 = !DILocation(line: 195, column: 17, scope: !1877)
!1879 = !DILocation(line: 195, column: 15, scope: !1877)
!1880 = !DILocation(line: 195, column: 2, scope: !1873)
!1881 = !DILocation(line: 197, column: 12, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 195, column: 38)
!1883 = !DILocation(line: 197, column: 3, scope: !1882)
!1884 = !DILocation(line: 197, column: 8, scope: !1882)
!1885 = !DILocation(line: 197, column: 10, scope: !1882)
!1886 = !DILocation(line: 198, column: 2, scope: !1882)
!1887 = !DILocation(line: 195, column: 23, scope: !1877)
!1888 = !DILocation(line: 195, column: 33, scope: !1877)
!1889 = !DILocation(line: 195, column: 30, scope: !1877)
!1890 = !DILocation(line: 195, column: 2, scope: !1877)
!1891 = distinct !{!1891, !1880, !1892}
!1892 = !DILocation(line: 198, column: 2, scope: !1873)
!1893 = !DILocation(line: 199, column: 1, scope: !1616)
!1894 = distinct !DISubprogram(name: "zspan_scanconvert", scope: !3, file: !3, line: 1513, type: !1895, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !120, !79, !31, !31, !31, !1897}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !79, !29, !29, !21, !21}
!1900 = !DILocalVariable(name: "zspan", arg: 1, scope: !1894, file: !3, line: 1513, type: !120)
!1901 = !DILocation(line: 1513, column: 31, scope: !1894)
!1902 = !DILocalVariable(name: "handle", arg: 2, scope: !1894, file: !3, line: 1513, type: !79)
!1903 = !DILocation(line: 1513, column: 44, scope: !1894)
!1904 = !DILocalVariable(name: "v1", arg: 3, scope: !1894, file: !3, line: 1513, type: !31)
!1905 = !DILocation(line: 1513, column: 59, scope: !1894)
!1906 = !DILocalVariable(name: "v2", arg: 4, scope: !1894, file: !3, line: 1513, type: !31)
!1907 = !DILocation(line: 1513, column: 70, scope: !1894)
!1908 = !DILocalVariable(name: "v3", arg: 5, scope: !1894, file: !3, line: 1513, type: !31)
!1909 = !DILocation(line: 1513, column: 81, scope: !1894)
!1910 = !DILocalVariable(name: "func", arg: 6, scope: !1894, file: !3, line: 1513, type: !1897)
!1911 = !DILocation(line: 1513, column: 92, scope: !1894)
!1912 = !DILocalVariable(name: "x0", scope: !1894, file: !3, line: 1515, type: !21)
!1913 = !DILocation(line: 1515, column: 8, scope: !1894)
!1914 = !DILocalVariable(name: "y0", scope: !1894, file: !3, line: 1515, type: !21)
!1915 = !DILocation(line: 1515, column: 12, scope: !1894)
!1916 = !DILocalVariable(name: "x1", scope: !1894, file: !3, line: 1515, type: !21)
!1917 = !DILocation(line: 1515, column: 16, scope: !1894)
!1918 = !DILocalVariable(name: "y1", scope: !1894, file: !3, line: 1515, type: !21)
!1919 = !DILocation(line: 1515, column: 20, scope: !1894)
!1920 = !DILocalVariable(name: "x2", scope: !1894, file: !3, line: 1515, type: !21)
!1921 = !DILocation(line: 1515, column: 24, scope: !1894)
!1922 = !DILocalVariable(name: "y2", scope: !1894, file: !3, line: 1515, type: !21)
!1923 = !DILocation(line: 1515, column: 28, scope: !1894)
!1924 = !DILocalVariable(name: "z0", scope: !1894, file: !3, line: 1515, type: !21)
!1925 = !DILocation(line: 1515, column: 32, scope: !1894)
!1926 = !DILocalVariable(name: "z1", scope: !1894, file: !3, line: 1515, type: !21)
!1927 = !DILocation(line: 1515, column: 36, scope: !1894)
!1928 = !DILocalVariable(name: "z2", scope: !1894, file: !3, line: 1515, type: !21)
!1929 = !DILocation(line: 1515, column: 40, scope: !1894)
!1930 = !DILocalVariable(name: "u", scope: !1894, file: !3, line: 1516, type: !21)
!1931 = !DILocation(line: 1516, column: 8, scope: !1894)
!1932 = !DILocalVariable(name: "v", scope: !1894, file: !3, line: 1516, type: !21)
!1933 = !DILocation(line: 1516, column: 11, scope: !1894)
!1934 = !DILocalVariable(name: "uxd", scope: !1894, file: !3, line: 1516, type: !21)
!1935 = !DILocation(line: 1516, column: 14, scope: !1894)
!1936 = !DILocalVariable(name: "uyd", scope: !1894, file: !3, line: 1516, type: !21)
!1937 = !DILocation(line: 1516, column: 19, scope: !1894)
!1938 = !DILocalVariable(name: "vxd", scope: !1894, file: !3, line: 1516, type: !21)
!1939 = !DILocation(line: 1516, column: 24, scope: !1894)
!1940 = !DILocalVariable(name: "vyd", scope: !1894, file: !3, line: 1516, type: !21)
!1941 = !DILocation(line: 1516, column: 29, scope: !1894)
!1942 = !DILocalVariable(name: "uy0", scope: !1894, file: !3, line: 1516, type: !21)
!1943 = !DILocation(line: 1516, column: 34, scope: !1894)
!1944 = !DILocalVariable(name: "vy0", scope: !1894, file: !3, line: 1516, type: !21)
!1945 = !DILocation(line: 1516, column: 39, scope: !1894)
!1946 = !DILocalVariable(name: "xx1", scope: !1894, file: !3, line: 1516, type: !21)
!1947 = !DILocation(line: 1516, column: 44, scope: !1894)
!1948 = !DILocalVariable(name: "span1", scope: !1894, file: !3, line: 1517, type: !88)
!1949 = !DILocation(line: 1517, column: 15, scope: !1894)
!1950 = !DILocalVariable(name: "span2", scope: !1894, file: !3, line: 1517, type: !88)
!1951 = !DILocation(line: 1517, column: 23, scope: !1894)
!1952 = !DILocalVariable(name: "x", scope: !1894, file: !3, line: 1518, type: !29)
!1953 = !DILocation(line: 1518, column: 6, scope: !1894)
!1954 = !DILocalVariable(name: "y", scope: !1894, file: !3, line: 1518, type: !29)
!1955 = !DILocation(line: 1518, column: 9, scope: !1894)
!1956 = !DILocalVariable(name: "sn1", scope: !1894, file: !3, line: 1518, type: !29)
!1957 = !DILocation(line: 1518, column: 12, scope: !1894)
!1958 = !DILocalVariable(name: "sn2", scope: !1894, file: !3, line: 1518, type: !29)
!1959 = !DILocation(line: 1518, column: 17, scope: !1894)
!1960 = !DILocalVariable(name: "rectx", scope: !1894, file: !3, line: 1518, type: !29)
!1961 = !DILocation(line: 1518, column: 22, scope: !1894)
!1962 = !DILocation(line: 1518, column: 29, scope: !1894)
!1963 = !DILocation(line: 1518, column: 36, scope: !1894)
!1964 = !DILocalVariable(name: "my0", scope: !1894, file: !3, line: 1518, type: !29)
!1965 = !DILocation(line: 1518, column: 43, scope: !1894)
!1966 = !DILocalVariable(name: "my2", scope: !1894, file: !3, line: 1518, type: !29)
!1967 = !DILocation(line: 1518, column: 48, scope: !1894)
!1968 = !DILocation(line: 1521, column: 17, scope: !1894)
!1969 = !DILocation(line: 1521, column: 2, scope: !1894)
!1970 = !DILocation(line: 1524, column: 19, scope: !1894)
!1971 = !DILocation(line: 1524, column: 26, scope: !1894)
!1972 = !DILocation(line: 1524, column: 30, scope: !1894)
!1973 = !DILocation(line: 1524, column: 2, scope: !1894)
!1974 = !DILocation(line: 1525, column: 19, scope: !1894)
!1975 = !DILocation(line: 1525, column: 26, scope: !1894)
!1976 = !DILocation(line: 1525, column: 30, scope: !1894)
!1977 = !DILocation(line: 1525, column: 2, scope: !1894)
!1978 = !DILocation(line: 1526, column: 19, scope: !1894)
!1979 = !DILocation(line: 1526, column: 26, scope: !1894)
!1980 = !DILocation(line: 1526, column: 30, scope: !1894)
!1981 = !DILocation(line: 1526, column: 2, scope: !1894)
!1982 = !DILocation(line: 1529, column: 6, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1529, column: 6)
!1984 = !DILocation(line: 1529, column: 13, scope: !1983)
!1985 = !DILocation(line: 1529, column: 18, scope: !1983)
!1986 = !DILocation(line: 1529, column: 25, scope: !1983)
!1987 = !DILocation(line: 1529, column: 28, scope: !1983)
!1988 = !DILocation(line: 1529, column: 35, scope: !1983)
!1989 = !DILocation(line: 1529, column: 40, scope: !1983)
!1990 = !DILocation(line: 1529, column: 6, scope: !1894)
!1991 = !DILocation(line: 1529, column: 48, scope: !1983)
!1992 = !DILocation(line: 1531, column: 6, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1531, column: 6)
!1994 = !DILocation(line: 1531, column: 13, scope: !1993)
!1995 = !DILocation(line: 1531, column: 21, scope: !1993)
!1996 = !DILocation(line: 1531, column: 28, scope: !1993)
!1997 = !DILocation(line: 1531, column: 19, scope: !1993)
!1998 = !DILocation(line: 1531, column: 6, scope: !1894)
!1999 = !DILocation(line: 1531, column: 40, scope: !1993)
!2000 = !DILocation(line: 1531, column: 47, scope: !1993)
!2001 = !DILocation(line: 1531, column: 38, scope: !1993)
!2002 = !DILocation(line: 1531, column: 35, scope: !1993)
!2003 = !DILocation(line: 1531, column: 64, scope: !1993)
!2004 = !DILocation(line: 1531, column: 71, scope: !1993)
!2005 = !DILocation(line: 1531, column: 62, scope: !1993)
!2006 = !DILocation(line: 1532, column: 6, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1532, column: 6)
!2008 = !DILocation(line: 1532, column: 13, scope: !2007)
!2009 = !DILocation(line: 1532, column: 21, scope: !2007)
!2010 = !DILocation(line: 1532, column: 28, scope: !2007)
!2011 = !DILocation(line: 1532, column: 19, scope: !2007)
!2012 = !DILocation(line: 1532, column: 6, scope: !1894)
!2013 = !DILocation(line: 1532, column: 40, scope: !2007)
!2014 = !DILocation(line: 1532, column: 47, scope: !2007)
!2015 = !DILocation(line: 1532, column: 38, scope: !2007)
!2016 = !DILocation(line: 1532, column: 35, scope: !2007)
!2017 = !DILocation(line: 1532, column: 64, scope: !2007)
!2018 = !DILocation(line: 1532, column: 71, scope: !2007)
!2019 = !DILocation(line: 1532, column: 62, scope: !2007)
!2020 = !DILocation(line: 1535, column: 6, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1535, column: 6)
!2022 = !DILocation(line: 1535, column: 10, scope: !2021)
!2023 = !DILocation(line: 1535, column: 9, scope: !2021)
!2024 = !DILocation(line: 1535, column: 6, scope: !1894)
!2025 = !DILocation(line: 1535, column: 15, scope: !2021)
!2026 = !DILocation(line: 1538, column: 6, scope: !1894)
!2027 = !DILocation(line: 1538, column: 13, scope: !1894)
!2028 = !DILocation(line: 1538, column: 11, scope: !1894)
!2029 = !DILocation(line: 1538, column: 4, scope: !1894)
!2030 = !DILocation(line: 1539, column: 6, scope: !1894)
!2031 = !DILocation(line: 1539, column: 13, scope: !1894)
!2032 = !DILocation(line: 1539, column: 11, scope: !1894)
!2033 = !DILocation(line: 1539, column: 4, scope: !1894)
!2034 = !DILocation(line: 1540, column: 6, scope: !1894)
!2035 = !DILocation(line: 1540, column: 13, scope: !1894)
!2036 = !DILocation(line: 1540, column: 11, scope: !1894)
!2037 = !DILocation(line: 1540, column: 4, scope: !1894)
!2038 = !DILocation(line: 1541, column: 6, scope: !1894)
!2039 = !DILocation(line: 1541, column: 13, scope: !1894)
!2040 = !DILocation(line: 1541, column: 11, scope: !1894)
!2041 = !DILocation(line: 1541, column: 4, scope: !1894)
!2042 = !DILocation(line: 1543, column: 4, scope: !1894)
!2043 = !DILocation(line: 1544, column: 4, scope: !1894)
!2044 = !DILocation(line: 1546, column: 6, scope: !1894)
!2045 = !DILocation(line: 1546, column: 9, scope: !1894)
!2046 = !DILocation(line: 1546, column: 8, scope: !1894)
!2047 = !DILocation(line: 1546, column: 12, scope: !1894)
!2048 = !DILocation(line: 1546, column: 15, scope: !1894)
!2049 = !DILocation(line: 1546, column: 14, scope: !1894)
!2050 = !DILocation(line: 1546, column: 11, scope: !1894)
!2051 = !DILocation(line: 1546, column: 4, scope: !1894)
!2052 = !DILocation(line: 1547, column: 6, scope: !1894)
!2053 = !DILocation(line: 1547, column: 9, scope: !1894)
!2054 = !DILocation(line: 1547, column: 8, scope: !1894)
!2055 = !DILocation(line: 1547, column: 12, scope: !1894)
!2056 = !DILocation(line: 1547, column: 15, scope: !1894)
!2057 = !DILocation(line: 1547, column: 14, scope: !1894)
!2058 = !DILocation(line: 1547, column: 11, scope: !1894)
!2059 = !DILocation(line: 1547, column: 4, scope: !1894)
!2060 = !DILocation(line: 1548, column: 6, scope: !1894)
!2061 = !DILocation(line: 1548, column: 9, scope: !1894)
!2062 = !DILocation(line: 1548, column: 8, scope: !1894)
!2063 = !DILocation(line: 1548, column: 12, scope: !1894)
!2064 = !DILocation(line: 1548, column: 15, scope: !1894)
!2065 = !DILocation(line: 1548, column: 14, scope: !1894)
!2066 = !DILocation(line: 1548, column: 11, scope: !1894)
!2067 = !DILocation(line: 1548, column: 4, scope: !1894)
!2068 = !DILocation(line: 1550, column: 6, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1550, column: 6)
!2070 = !DILocation(line: 1550, column: 8, scope: !2069)
!2071 = !DILocation(line: 1550, column: 6, scope: !1894)
!2072 = !DILocation(line: 1550, column: 16, scope: !2069)
!2073 = !DILocation(line: 1552, column: 8, scope: !1894)
!2074 = !DILocation(line: 1552, column: 11, scope: !1894)
!2075 = !DILocation(line: 1552, column: 10, scope: !1894)
!2076 = !DILocation(line: 1552, column: 19, scope: !1894)
!2077 = !DILocation(line: 1552, column: 22, scope: !1894)
!2078 = !DILocation(line: 1552, column: 21, scope: !1894)
!2079 = !DILocation(line: 1552, column: 17, scope: !1894)
!2080 = !DILocation(line: 1552, column: 29, scope: !1894)
!2081 = !DILocation(line: 1552, column: 28, scope: !1894)
!2082 = !DILocation(line: 1552, column: 32, scope: !1894)
!2083 = !DILocation(line: 1552, column: 5, scope: !1894)
!2084 = !DILocation(line: 1553, column: 16, scope: !1894)
!2085 = !DILocation(line: 1553, column: 8, scope: !1894)
!2086 = !DILocation(line: 1553, column: 7, scope: !1894)
!2087 = !DILocation(line: 1553, column: 27, scope: !1894)
!2088 = !DILocation(line: 1553, column: 19, scope: !1894)
!2089 = !DILocation(line: 1553, column: 18, scope: !1894)
!2090 = !DILocation(line: 1553, column: 5, scope: !1894)
!2091 = !DILocation(line: 1554, column: 16, scope: !1894)
!2092 = !DILocation(line: 1554, column: 8, scope: !1894)
!2093 = !DILocation(line: 1554, column: 7, scope: !1894)
!2094 = !DILocation(line: 1554, column: 27, scope: !1894)
!2095 = !DILocation(line: 1554, column: 19, scope: !1894)
!2096 = !DILocation(line: 1554, column: 18, scope: !1894)
!2097 = !DILocation(line: 1554, column: 5, scope: !1894)
!2098 = !DILocation(line: 1555, column: 16, scope: !1894)
!2099 = !DILocation(line: 1555, column: 8, scope: !1894)
!2100 = !DILocation(line: 1555, column: 21, scope: !1894)
!2101 = !DILocation(line: 1555, column: 20, scope: !1894)
!2102 = !DILocation(line: 1555, column: 35, scope: !1894)
!2103 = !DILocation(line: 1555, column: 27, scope: !1894)
!2104 = !DILocation(line: 1555, column: 25, scope: !1894)
!2105 = !DILocation(line: 1555, column: 7, scope: !1894)
!2106 = !DILocation(line: 1555, column: 5, scope: !1894)
!2107 = !DILocation(line: 1557, column: 4, scope: !1894)
!2108 = !DILocation(line: 1558, column: 4, scope: !1894)
!2109 = !DILocation(line: 1560, column: 6, scope: !1894)
!2110 = !DILocation(line: 1560, column: 9, scope: !1894)
!2111 = !DILocation(line: 1560, column: 8, scope: !1894)
!2112 = !DILocation(line: 1560, column: 12, scope: !1894)
!2113 = !DILocation(line: 1560, column: 15, scope: !1894)
!2114 = !DILocation(line: 1560, column: 14, scope: !1894)
!2115 = !DILocation(line: 1560, column: 11, scope: !1894)
!2116 = !DILocation(line: 1560, column: 4, scope: !1894)
!2117 = !DILocation(line: 1561, column: 6, scope: !1894)
!2118 = !DILocation(line: 1561, column: 9, scope: !1894)
!2119 = !DILocation(line: 1561, column: 8, scope: !1894)
!2120 = !DILocation(line: 1561, column: 12, scope: !1894)
!2121 = !DILocation(line: 1561, column: 15, scope: !1894)
!2122 = !DILocation(line: 1561, column: 14, scope: !1894)
!2123 = !DILocation(line: 1561, column: 11, scope: !1894)
!2124 = !DILocation(line: 1561, column: 4, scope: !1894)
!2125 = !DILocation(line: 1563, column: 8, scope: !1894)
!2126 = !DILocation(line: 1563, column: 11, scope: !1894)
!2127 = !DILocation(line: 1563, column: 10, scope: !1894)
!2128 = !DILocation(line: 1563, column: 19, scope: !1894)
!2129 = !DILocation(line: 1563, column: 22, scope: !1894)
!2130 = !DILocation(line: 1563, column: 21, scope: !1894)
!2131 = !DILocation(line: 1563, column: 17, scope: !1894)
!2132 = !DILocation(line: 1563, column: 29, scope: !1894)
!2133 = !DILocation(line: 1563, column: 28, scope: !1894)
!2134 = !DILocation(line: 1563, column: 5, scope: !1894)
!2135 = !DILocation(line: 1564, column: 16, scope: !1894)
!2136 = !DILocation(line: 1564, column: 8, scope: !1894)
!2137 = !DILocation(line: 1564, column: 7, scope: !1894)
!2138 = !DILocation(line: 1564, column: 27, scope: !1894)
!2139 = !DILocation(line: 1564, column: 19, scope: !1894)
!2140 = !DILocation(line: 1564, column: 18, scope: !1894)
!2141 = !DILocation(line: 1564, column: 5, scope: !1894)
!2142 = !DILocation(line: 1565, column: 16, scope: !1894)
!2143 = !DILocation(line: 1565, column: 8, scope: !1894)
!2144 = !DILocation(line: 1565, column: 7, scope: !1894)
!2145 = !DILocation(line: 1565, column: 27, scope: !1894)
!2146 = !DILocation(line: 1565, column: 19, scope: !1894)
!2147 = !DILocation(line: 1565, column: 18, scope: !1894)
!2148 = !DILocation(line: 1565, column: 5, scope: !1894)
!2149 = !DILocation(line: 1566, column: 16, scope: !1894)
!2150 = !DILocation(line: 1566, column: 8, scope: !1894)
!2151 = !DILocation(line: 1566, column: 21, scope: !1894)
!2152 = !DILocation(line: 1566, column: 20, scope: !1894)
!2153 = !DILocation(line: 1566, column: 35, scope: !1894)
!2154 = !DILocation(line: 1566, column: 27, scope: !1894)
!2155 = !DILocation(line: 1566, column: 25, scope: !1894)
!2156 = !DILocation(line: 1566, column: 7, scope: !1894)
!2157 = !DILocation(line: 1566, column: 5, scope: !1894)
!2158 = !DILocation(line: 1569, column: 8, scope: !1894)
!2159 = !DILocation(line: 1569, column: 14, scope: !1894)
!2160 = !DILocation(line: 1569, column: 12, scope: !1894)
!2161 = !DILocation(line: 1569, column: 18, scope: !1894)
!2162 = !DILocation(line: 1569, column: 5, scope: !1894)
!2163 = !DILocation(line: 1570, column: 6, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1570, column: 6)
!2165 = !DILocation(line: 1570, column: 13, scope: !2164)
!2166 = !DILocation(line: 1570, column: 19, scope: !2164)
!2167 = !DILocation(line: 1570, column: 26, scope: !2164)
!2168 = !DILocation(line: 1570, column: 33, scope: !2164)
!2169 = !DILocation(line: 1570, column: 39, scope: !2164)
!2170 = !DILocation(line: 1570, column: 24, scope: !2164)
!2171 = !DILocation(line: 1570, column: 6, scope: !1894)
!2172 = !DILocation(line: 1571, column: 10, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2164, file: !3, line: 1570, column: 45)
!2174 = !DILocation(line: 1571, column: 17, scope: !2173)
!2175 = !DILocation(line: 1571, column: 23, scope: !2173)
!2176 = !DILocation(line: 1571, column: 22, scope: !2173)
!2177 = !DILocation(line: 1571, column: 8, scope: !2173)
!2178 = !DILocation(line: 1572, column: 10, scope: !2173)
!2179 = !DILocation(line: 1572, column: 17, scope: !2173)
!2180 = !DILocation(line: 1572, column: 23, scope: !2173)
!2181 = !DILocation(line: 1572, column: 22, scope: !2173)
!2182 = !DILocation(line: 1572, column: 8, scope: !2173)
!2183 = !DILocation(line: 1573, column: 2, scope: !2173)
!2184 = !DILocation(line: 1575, column: 10, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2164, file: !3, line: 1574, column: 7)
!2186 = !DILocation(line: 1575, column: 17, scope: !2185)
!2187 = !DILocation(line: 1575, column: 23, scope: !2185)
!2188 = !DILocation(line: 1575, column: 22, scope: !2185)
!2189 = !DILocation(line: 1575, column: 8, scope: !2185)
!2190 = !DILocation(line: 1576, column: 10, scope: !2185)
!2191 = !DILocation(line: 1576, column: 17, scope: !2185)
!2192 = !DILocation(line: 1576, column: 23, scope: !2185)
!2193 = !DILocation(line: 1576, column: 22, scope: !2185)
!2194 = !DILocation(line: 1576, column: 8, scope: !2185)
!2195 = !DILocation(line: 1579, column: 9, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 1579, column: 2)
!2197 = !DILocation(line: 1579, column: 8, scope: !2196)
!2198 = !DILocation(line: 1579, column: 7, scope: !2196)
!2199 = !DILocation(line: 1579, column: 14, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 1579, column: 2)
!2201 = !DILocation(line: 1579, column: 17, scope: !2200)
!2202 = !DILocation(line: 1579, column: 15, scope: !2200)
!2203 = !DILocation(line: 1579, column: 2, scope: !2196)
!2204 = !DILocation(line: 1581, column: 15, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 1579, column: 45)
!2206 = !DILocation(line: 1581, column: 14, scope: !2205)
!2207 = !DILocation(line: 1581, column: 8, scope: !2205)
!2208 = !DILocation(line: 1581, column: 6, scope: !2205)
!2209 = !DILocation(line: 1582, column: 15, scope: !2205)
!2210 = !DILocation(line: 1582, column: 14, scope: !2205)
!2211 = !DILocation(line: 1582, column: 8, scope: !2205)
!2212 = !DILocation(line: 1582, column: 6, scope: !2205)
!2213 = !DILocation(line: 1583, column: 6, scope: !2205)
!2214 = !DILocation(line: 1585, column: 7, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 1585, column: 7)
!2216 = !DILocation(line: 1585, column: 12, scope: !2215)
!2217 = !DILocation(line: 1585, column: 10, scope: !2215)
!2218 = !DILocation(line: 1585, column: 7, scope: !2205)
!2219 = !DILocation(line: 1585, column: 24, scope: !2215)
!2220 = !DILocation(line: 1585, column: 29, scope: !2215)
!2221 = !DILocation(line: 1585, column: 22, scope: !2215)
!2222 = !DILocation(line: 1585, column: 19, scope: !2215)
!2223 = !DILocation(line: 1586, column: 7, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 1586, column: 7)
!2225 = !DILocation(line: 1586, column: 10, scope: !2224)
!2226 = !DILocation(line: 1586, column: 7, scope: !2205)
!2227 = !DILocation(line: 1586, column: 17, scope: !2224)
!2228 = !DILocation(line: 1586, column: 14, scope: !2224)
!2229 = !DILocation(line: 1588, column: 14, scope: !2205)
!2230 = !DILocation(line: 1588, column: 6, scope: !2205)
!2231 = !DILocation(line: 1588, column: 18, scope: !2205)
!2232 = !DILocation(line: 1588, column: 17, scope: !2205)
!2233 = !DILocation(line: 1588, column: 24, scope: !2205)
!2234 = !DILocation(line: 1588, column: 22, scope: !2205)
!2235 = !DILocation(line: 1588, column: 4, scope: !2205)
!2236 = !DILocation(line: 1589, column: 14, scope: !2205)
!2237 = !DILocation(line: 1589, column: 6, scope: !2205)
!2238 = !DILocation(line: 1589, column: 18, scope: !2205)
!2239 = !DILocation(line: 1589, column: 17, scope: !2205)
!2240 = !DILocation(line: 1589, column: 24, scope: !2205)
!2241 = !DILocation(line: 1589, column: 22, scope: !2205)
!2242 = !DILocation(line: 1589, column: 4, scope: !2205)
!2243 = !DILocation(line: 1591, column: 11, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 1591, column: 3)
!2245 = !DILocation(line: 1591, column: 9, scope: !2244)
!2246 = !DILocation(line: 1591, column: 8, scope: !2244)
!2247 = !DILocation(line: 1591, column: 16, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 1591, column: 3)
!2249 = !DILocation(line: 1591, column: 19, scope: !2248)
!2250 = !DILocation(line: 1591, column: 17, scope: !2248)
!2251 = !DILocation(line: 1591, column: 3, scope: !2244)
!2252 = !DILocation(line: 1592, column: 4, scope: !2248)
!2253 = !DILocation(line: 1592, column: 9, scope: !2248)
!2254 = !DILocation(line: 1592, column: 17, scope: !2248)
!2255 = !DILocation(line: 1592, column: 20, scope: !2248)
!2256 = !DILocation(line: 1592, column: 23, scope: !2248)
!2257 = !DILocation(line: 1592, column: 26, scope: !2248)
!2258 = !DILocation(line: 1591, column: 25, scope: !2248)
!2259 = !DILocation(line: 1591, column: 32, scope: !2248)
!2260 = !DILocation(line: 1591, column: 30, scope: !2248)
!2261 = !DILocation(line: 1591, column: 40, scope: !2248)
!2262 = !DILocation(line: 1591, column: 38, scope: !2248)
!2263 = !DILocation(line: 1591, column: 3, scope: !2248)
!2264 = distinct !{!2264, !2251, !2265}
!2265 = !DILocation(line: 1592, column: 27, scope: !2244)
!2266 = !DILocation(line: 1594, column: 10, scope: !2205)
!2267 = !DILocation(line: 1594, column: 7, scope: !2205)
!2268 = !DILocation(line: 1595, column: 10, scope: !2205)
!2269 = !DILocation(line: 1595, column: 7, scope: !2205)
!2270 = !DILocation(line: 1596, column: 2, scope: !2205)
!2271 = !DILocation(line: 1579, column: 23, scope: !2200)
!2272 = !DILocation(line: 1579, column: 32, scope: !2200)
!2273 = !DILocation(line: 1579, column: 41, scope: !2200)
!2274 = !DILocation(line: 1579, column: 2, scope: !2200)
!2275 = distinct !{!2275, !2203, !2276}
!2276 = !DILocation(line: 1596, column: 2, scope: !2196)
!2277 = !DILocation(line: 1597, column: 1, scope: !1894)
!2278 = distinct !DISubprogram(name: "projectverto", scope: !3, file: !3, line: 1711, type: !2279, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !88, !2281, !31}
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!2282 = !DILocalVariable(name: "v1", arg: 1, scope: !2278, file: !3, line: 1711, type: !88)
!2283 = !DILocation(line: 1711, column: 31, scope: !2278)
!2284 = !DILocalVariable(name: "winmat", arg: 2, scope: !2278, file: !3, line: 1711, type: !2281)
!2285 = !DILocation(line: 1711, column: 44, scope: !2278)
!2286 = !DILocalVariable(name: "adr", arg: 3, scope: !2278, file: !3, line: 1711, type: !31)
!2287 = !DILocation(line: 1711, column: 64, scope: !2278)
!2288 = !DILocalVariable(name: "x", scope: !2278, file: !3, line: 1714, type: !21)
!2289 = !DILocation(line: 1714, column: 8, scope: !2278)
!2290 = !DILocalVariable(name: "y", scope: !2278, file: !3, line: 1714, type: !21)
!2291 = !DILocation(line: 1714, column: 11, scope: !2278)
!2292 = !DILocalVariable(name: "z", scope: !2278, file: !3, line: 1714, type: !21)
!2293 = !DILocation(line: 1714, column: 14, scope: !2278)
!2294 = !DILocation(line: 1716, column: 6, scope: !2278)
!2295 = !DILocation(line: 1716, column: 4, scope: !2278)
!2296 = !DILocation(line: 1717, column: 6, scope: !2278)
!2297 = !DILocation(line: 1717, column: 4, scope: !2278)
!2298 = !DILocation(line: 1718, column: 6, scope: !2278)
!2299 = !DILocation(line: 1718, column: 4, scope: !2278)
!2300 = !DILocation(line: 1719, column: 11, scope: !2278)
!2301 = !DILocation(line: 1719, column: 15, scope: !2278)
!2302 = !DILocation(line: 1719, column: 13, scope: !2278)
!2303 = !DILocation(line: 1719, column: 30, scope: !2278)
!2304 = !DILocation(line: 1719, column: 34, scope: !2278)
!2305 = !DILocation(line: 1719, column: 32, scope: !2278)
!2306 = !DILocation(line: 1719, column: 28, scope: !2278)
!2307 = !DILocation(line: 1719, column: 49, scope: !2278)
!2308 = !DILocation(line: 1719, column: 47, scope: !2278)
!2309 = !DILocation(line: 1719, column: 2, scope: !2278)
!2310 = !DILocation(line: 1719, column: 9, scope: !2278)
!2311 = !DILocation(line: 1720, column: 11, scope: !2278)
!2312 = !DILocation(line: 1720, column: 15, scope: !2278)
!2313 = !DILocation(line: 1720, column: 13, scope: !2278)
!2314 = !DILocation(line: 1720, column: 30, scope: !2278)
!2315 = !DILocation(line: 1720, column: 34, scope: !2278)
!2316 = !DILocation(line: 1720, column: 32, scope: !2278)
!2317 = !DILocation(line: 1720, column: 28, scope: !2278)
!2318 = !DILocation(line: 1720, column: 49, scope: !2278)
!2319 = !DILocation(line: 1720, column: 47, scope: !2278)
!2320 = !DILocation(line: 1720, column: 2, scope: !2278)
!2321 = !DILocation(line: 1720, column: 9, scope: !2278)
!2322 = !DILocation(line: 1721, column: 30, scope: !2278)
!2323 = !DILocation(line: 1721, column: 34, scope: !2278)
!2324 = !DILocation(line: 1721, column: 32, scope: !2278)
!2325 = !DILocation(line: 1721, column: 49, scope: !2278)
!2326 = !DILocation(line: 1721, column: 47, scope: !2278)
!2327 = !DILocation(line: 1721, column: 2, scope: !2278)
!2328 = !DILocation(line: 1721, column: 9, scope: !2278)
!2329 = !DILocation(line: 1722, column: 30, scope: !2278)
!2330 = !DILocation(line: 1722, column: 34, scope: !2278)
!2331 = !DILocation(line: 1722, column: 32, scope: !2278)
!2332 = !DILocation(line: 1722, column: 49, scope: !2278)
!2333 = !DILocation(line: 1722, column: 47, scope: !2278)
!2334 = !DILocation(line: 1722, column: 2, scope: !2278)
!2335 = !DILocation(line: 1722, column: 9, scope: !2278)
!2336 = !DILocation(line: 1725, column: 1, scope: !2278)
!2337 = distinct !DISubprogram(name: "projectvert", scope: !3, file: !3, line: 1729, type: !2279, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!2338 = !DILocalVariable(name: "v1", arg: 1, scope: !2337, file: !3, line: 1729, type: !88)
!2339 = !DILocation(line: 1729, column: 30, scope: !2337)
!2340 = !DILocalVariable(name: "winmat", arg: 2, scope: !2337, file: !3, line: 1729, type: !2281)
!2341 = !DILocation(line: 1729, column: 43, scope: !2337)
!2342 = !DILocalVariable(name: "adr", arg: 3, scope: !2337, file: !3, line: 1729, type: !31)
!2343 = !DILocation(line: 1729, column: 63, scope: !2337)
!2344 = !DILocalVariable(name: "x", scope: !2337, file: !3, line: 1732, type: !21)
!2345 = !DILocation(line: 1732, column: 8, scope: !2337)
!2346 = !DILocalVariable(name: "y", scope: !2337, file: !3, line: 1732, type: !21)
!2347 = !DILocation(line: 1732, column: 11, scope: !2337)
!2348 = !DILocalVariable(name: "z", scope: !2337, file: !3, line: 1732, type: !21)
!2349 = !DILocation(line: 1732, column: 14, scope: !2337)
!2350 = !DILocation(line: 1734, column: 6, scope: !2337)
!2351 = !DILocation(line: 1734, column: 4, scope: !2337)
!2352 = !DILocation(line: 1735, column: 6, scope: !2337)
!2353 = !DILocation(line: 1735, column: 4, scope: !2337)
!2354 = !DILocation(line: 1736, column: 6, scope: !2337)
!2355 = !DILocation(line: 1736, column: 4, scope: !2337)
!2356 = !DILocation(line: 1737, column: 11, scope: !2337)
!2357 = !DILocation(line: 1737, column: 15, scope: !2337)
!2358 = !DILocation(line: 1737, column: 13, scope: !2337)
!2359 = !DILocation(line: 1737, column: 30, scope: !2337)
!2360 = !DILocation(line: 1737, column: 34, scope: !2337)
!2361 = !DILocation(line: 1737, column: 32, scope: !2337)
!2362 = !DILocation(line: 1737, column: 28, scope: !2337)
!2363 = !DILocation(line: 1737, column: 49, scope: !2337)
!2364 = !DILocation(line: 1737, column: 53, scope: !2337)
!2365 = !DILocation(line: 1737, column: 51, scope: !2337)
!2366 = !DILocation(line: 1737, column: 47, scope: !2337)
!2367 = !DILocation(line: 1737, column: 68, scope: !2337)
!2368 = !DILocation(line: 1737, column: 66, scope: !2337)
!2369 = !DILocation(line: 1737, column: 2, scope: !2337)
!2370 = !DILocation(line: 1737, column: 9, scope: !2337)
!2371 = !DILocation(line: 1738, column: 11, scope: !2337)
!2372 = !DILocation(line: 1738, column: 15, scope: !2337)
!2373 = !DILocation(line: 1738, column: 13, scope: !2337)
!2374 = !DILocation(line: 1738, column: 30, scope: !2337)
!2375 = !DILocation(line: 1738, column: 34, scope: !2337)
!2376 = !DILocation(line: 1738, column: 32, scope: !2337)
!2377 = !DILocation(line: 1738, column: 28, scope: !2337)
!2378 = !DILocation(line: 1738, column: 49, scope: !2337)
!2379 = !DILocation(line: 1738, column: 53, scope: !2337)
!2380 = !DILocation(line: 1738, column: 51, scope: !2337)
!2381 = !DILocation(line: 1738, column: 47, scope: !2337)
!2382 = !DILocation(line: 1738, column: 68, scope: !2337)
!2383 = !DILocation(line: 1738, column: 66, scope: !2337)
!2384 = !DILocation(line: 1738, column: 2, scope: !2337)
!2385 = !DILocation(line: 1738, column: 9, scope: !2337)
!2386 = !DILocation(line: 1739, column: 11, scope: !2337)
!2387 = !DILocation(line: 1739, column: 15, scope: !2337)
!2388 = !DILocation(line: 1739, column: 13, scope: !2337)
!2389 = !DILocation(line: 1739, column: 30, scope: !2337)
!2390 = !DILocation(line: 1739, column: 34, scope: !2337)
!2391 = !DILocation(line: 1739, column: 32, scope: !2337)
!2392 = !DILocation(line: 1739, column: 28, scope: !2337)
!2393 = !DILocation(line: 1739, column: 49, scope: !2337)
!2394 = !DILocation(line: 1739, column: 53, scope: !2337)
!2395 = !DILocation(line: 1739, column: 51, scope: !2337)
!2396 = !DILocation(line: 1739, column: 47, scope: !2337)
!2397 = !DILocation(line: 1739, column: 68, scope: !2337)
!2398 = !DILocation(line: 1739, column: 66, scope: !2337)
!2399 = !DILocation(line: 1739, column: 2, scope: !2337)
!2400 = !DILocation(line: 1739, column: 9, scope: !2337)
!2401 = !DILocation(line: 1740, column: 11, scope: !2337)
!2402 = !DILocation(line: 1740, column: 15, scope: !2337)
!2403 = !DILocation(line: 1740, column: 13, scope: !2337)
!2404 = !DILocation(line: 1740, column: 30, scope: !2337)
!2405 = !DILocation(line: 1740, column: 34, scope: !2337)
!2406 = !DILocation(line: 1740, column: 32, scope: !2337)
!2407 = !DILocation(line: 1740, column: 28, scope: !2337)
!2408 = !DILocation(line: 1740, column: 49, scope: !2337)
!2409 = !DILocation(line: 1740, column: 53, scope: !2337)
!2410 = !DILocation(line: 1740, column: 51, scope: !2337)
!2411 = !DILocation(line: 1740, column: 47, scope: !2337)
!2412 = !DILocation(line: 1740, column: 68, scope: !2337)
!2413 = !DILocation(line: 1740, column: 66, scope: !2337)
!2414 = !DILocation(line: 1740, column: 2, scope: !2337)
!2415 = !DILocation(line: 1740, column: 9, scope: !2337)
!2416 = !DILocation(line: 1741, column: 1, scope: !2337)
!2417 = distinct !DISubprogram(name: "zbuf_render_project", scope: !3, file: !3, line: 1822, type: !2418, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !2281, !88, !31}
!2420 = !DILocalVariable(name: "winmat", arg: 1, scope: !2417, file: !3, line: 1822, type: !2281)
!2421 = !DILocation(line: 1822, column: 32, scope: !2417)
!2422 = !DILocalVariable(name: "co", arg: 2, scope: !2417, file: !3, line: 1822, type: !88)
!2423 = !DILocation(line: 1822, column: 58, scope: !2417)
!2424 = !DILocalVariable(name: "ho", arg: 3, scope: !2417, file: !3, line: 1822, type: !31)
!2425 = !DILocation(line: 1822, column: 71, scope: !2417)
!2426 = !DILocalVariable(name: "vec", scope: !2417, file: !3, line: 1824, type: !2427)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 96, elements: !2428)
!2428 = !{!2429}
!2429 = !DISubrange(count: 3)
!2430 = !DILocation(line: 1824, column: 8, scope: !2417)
!2431 = !DILocation(line: 1826, column: 13, scope: !2417)
!2432 = !DILocation(line: 1826, column: 18, scope: !2417)
!2433 = !DILocation(line: 1826, column: 2, scope: !2417)
!2434 = !DILocation(line: 1827, column: 14, scope: !2417)
!2435 = !DILocation(line: 1827, column: 19, scope: !2417)
!2436 = !DILocation(line: 1827, column: 27, scope: !2417)
!2437 = !DILocation(line: 1827, column: 2, scope: !2417)
!2438 = !DILocation(line: 1828, column: 1, scope: !2417)
!2439 = distinct !DISubprogram(name: "copy_v3_v3", scope: !835, file: !835, line: 64, type: !836, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!2440 = !DILocalVariable(name: "r", arg: 1, scope: !2439, file: !835, line: 64, type: !31)
!2441 = !DILocation(line: 64, column: 31, scope: !2439)
!2442 = !DILocalVariable(name: "a", arg: 2, scope: !2439, file: !835, line: 64, type: !88)
!2443 = !DILocation(line: 64, column: 49, scope: !2439)
!2444 = !DILocation(line: 66, column: 9, scope: !2439)
!2445 = !DILocation(line: 66, column: 2, scope: !2439)
!2446 = !DILocation(line: 66, column: 7, scope: !2439)
!2447 = !DILocation(line: 67, column: 9, scope: !2439)
!2448 = !DILocation(line: 67, column: 2, scope: !2439)
!2449 = !DILocation(line: 67, column: 7, scope: !2439)
!2450 = !DILocation(line: 68, column: 9, scope: !2439)
!2451 = !DILocation(line: 68, column: 2, scope: !2439)
!2452 = !DILocation(line: 68, column: 7, scope: !2439)
!2453 = !DILocation(line: 69, column: 1, scope: !2439)
!2454 = distinct !DISubprogram(name: "zbuf_make_winmat", scope: !3, file: !3, line: 1830, type: !2455, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{null, !2457, !2281}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !2459, line: 58, baseType: !2460)
!2459 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !2461, line: 126, size: 49920, elements: !2462)
!2461 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2462 = !{!2463, !2465, !2466, !2470, !2471, !2472, !2473, !2474, !2475, !2477, !4197, !4198, !4199, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4249, !4252, !4253, !4254, !4256, !4314, !4317, !4319, !4321, !4322, !4323, !4324, !4325, !4328, !4331, !4334, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4385, !4386, !4387, !4388, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4629, !4633, !4634, !4635, !4636, !4641, !4642, !4646, !4647, !4678, !4679, !4680, !4681, !4685, !4686, !4687, !4688, !4689, !4692, !4693}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2460, file: !2461, line: 128, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2460, file: !2461, line: 128, baseType: !2464, size: 64, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2460, file: !2461, line: 129, baseType: !2467, size: 592, offset: 128)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 592, elements: !2468)
!2468 = !{!2469}
!2469 = !DISubrange(count: 74)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !2460, file: !2461, line: 130, baseType: !29, size: 32, offset: 736)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2460, file: !2461, line: 133, baseType: !12, size: 16, offset: 768)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2460, file: !2461, line: 133, baseType: !12, size: 16, offset: 784)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2460, file: !2461, line: 133, baseType: !12, size: 16, offset: 800)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !2460, file: !2461, line: 133, baseType: !12, size: 16, offset: 816)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !2460, file: !2461, line: 136, baseType: !2476, size: 8, offset: 832)
!2476 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2460, file: !2461, line: 139, baseType: !2478, size: 64, offset: 896)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !2459, line: 148, baseType: !2480)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !2459, line: 110, size: 1152, elements: !2481)
!2481 = !{!2482, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2501, !2502, !2503, !2504, !2506, !4193, !4194, !4195, !4196}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2480, file: !2459, line: 111, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2480, file: !2459, line: 111, baseType: !2483, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2480, file: !2459, line: 114, baseType: !29, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2480, file: !2459, line: 114, baseType: !29, size: 32, offset: 160)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2480, file: !2459, line: 115, baseType: !12, size: 16, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !2480, file: !2459, line: 115, baseType: !12, size: 16, offset: 208)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !2480, file: !2459, line: 118, baseType: !81, size: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !2480, file: !2459, line: 120, baseType: !31, size: 64, offset: 320)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !2480, file: !2459, line: 122, baseType: !31, size: 64, offset: 384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !2480, file: !2459, line: 125, baseType: !2493, size: 128, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !2494, line: 89, baseType: !2495)
!2494 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !2494, line: 86, size: 128, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2495, file: !2494, line: 87, baseType: !29, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2495, file: !2494, line: 87, baseType: !29, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2495, file: !2494, line: 88, baseType: !29, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2495, file: !2494, line: 88, baseType: !29, size: 32, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2480, file: !2459, line: 127, baseType: !29, size: 32, offset: 576)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2480, file: !2459, line: 127, baseType: !29, size: 32, offset: 608)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2480, file: !2459, line: 130, baseType: !370, size: 128, offset: 640)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !2480, file: !2459, line: 133, baseType: !2505, size: 128, offset: 768)
!2505 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2493)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !2480, file: !2459, line: 134, baseType: !2507, size: 64, offset: 896)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2509)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !2459, line: 108, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !2459, line: 85, size: 1600, elements: !2511)
!2511 = !{!2512, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2510, file: !2459, line: 86, baseType: !2513, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2510, file: !2459, line: 86, baseType: !2513, size: 64, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2510, file: !2459, line: 89, baseType: !2467, size: 592, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2510, file: !2459, line: 90, baseType: !36, size: 32, offset: 736)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !2510, file: !2459, line: 90, baseType: !36, size: 32, offset: 768)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !2510, file: !2459, line: 90, baseType: !36, size: 32, offset: 800)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !2510, file: !2459, line: 91, baseType: !29, size: 32, offset: 832)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !2510, file: !2459, line: 91, baseType: !29, size: 32, offset: 864)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !2510, file: !2459, line: 91, baseType: !29, size: 32, offset: 896)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !2510, file: !2459, line: 93, baseType: !2523, size: 64, offset: 960)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !2525, line: 93, size: 7552, elements: !2526)
!2525 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2526 = !{!2527, !2589, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2639, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4183}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2524, file: !2525, line: 94, baseType: !2528, size: 960)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !2529, line: 130, baseType: !2530)
!2529 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !2529, line: 117, size: 960, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2536, !2555, !2559, !2560, !2561, !2562, !2563}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2530, file: !2529, line: 118, baseType: !79, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2530, file: !2529, line: 118, baseType: !79, size: 64, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !2530, file: !2529, line: 119, baseType: !2535, size: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2530, file: !2529, line: 120, baseType: !2537, size: 64, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !2529, line: 136, size: 17600, elements: !2539)
!2539 = !{!2540, !2541, !2543, !2546, !2550, !2551, !2552}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2538, file: !2529, line: 137, baseType: !2528, size: 960)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !2538, file: !2529, line: 138, baseType: !2542, size: 64, offset: 960)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !2538, file: !2529, line: 139, baseType: !2544, size: 64, offset: 1024)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !2529, line: 43, flags: DIFlagFwdDecl)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2538, file: !2529, line: 140, baseType: !2547, size: 8192, offset: 1088)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 8192, elements: !2548)
!2548 = !{!2549}
!2549 = !DISubrange(count: 1024)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2538, file: !2529, line: 141, baseType: !2547, size: 8192, offset: 9280)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2538, file: !2529, line: 148, baseType: !2537, size: 64, offset: 17472)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2538, file: !2529, line: 150, baseType: !2553, size: 64, offset: 17536)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !2529, line: 45, flags: DIFlagFwdDecl)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2530, file: !2529, line: 121, baseType: !2556, size: 528, offset: 256)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 528, elements: !2557)
!2557 = !{!2558}
!2558 = !DISubrange(count: 66)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2530, file: !2529, line: 126, baseType: !12, size: 16, offset: 784)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2530, file: !2529, line: 127, baseType: !29, size: 32, offset: 800)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !2530, file: !2529, line: 128, baseType: !29, size: 32, offset: 832)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2530, file: !2529, line: 128, baseType: !29, size: 32, offset: 864)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2530, file: !2529, line: 129, baseType: !2564, size: 64, offset: 896)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !2529, line: 75, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !2529, line: 62, size: 1024, elements: !2567)
!2567 = !{!2568, !2570, !2571, !2572, !2573, !2574, !2578, !2579, !2587, !2588}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !2529, line: 63, baseType: !2569, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2566, file: !2529, line: 63, baseType: !2569, size: 64, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2566, file: !2529, line: 64, baseType: !26, size: 8, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2566, file: !2529, line: 64, baseType: !26, size: 8, offset: 136)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2566, file: !2529, line: 65, baseType: !12, size: 16, offset: 144)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2566, file: !2529, line: 66, baseType: !2575, size: 512, offset: 160)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 512, elements: !2576)
!2576 = !{!2577}
!2577 = !DISubrange(count: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !2566, file: !2529, line: 67, baseType: !29, size: 32, offset: 672)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2566, file: !2529, line: 69, baseType: !2580, size: 256, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !2529, line: 60, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !2529, line: 48, size: 256, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2581, file: !2529, line: 49, baseType: !79, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2581, file: !2529, line: 58, baseType: !370, size: 128, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2581, file: !2529, line: 59, baseType: !29, size: 32, offset: 192)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !2581, file: !2529, line: 59, baseType: !29, size: 32, offset: 224)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2566, file: !2529, line: 70, baseType: !29, size: 32, offset: 960)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !2566, file: !2529, line: 74, baseType: !29, size: 32, offset: 992)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2524, file: !2525, line: 95, baseType: !2590, size: 64, offset: 960)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !2592, line: 42, flags: DIFlagFwdDecl)
!2592 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !2524, file: !2525, line: 97, baseType: !12, size: 16, offset: 1024)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2524, file: !2525, line: 97, baseType: !12, size: 16, offset: 1040)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2524, file: !2525, line: 99, baseType: !21, size: 32, offset: 1056)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2524, file: !2525, line: 99, baseType: !21, size: 32, offset: 1088)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2524, file: !2525, line: 99, baseType: !21, size: 32, offset: 1120)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2524, file: !2525, line: 100, baseType: !21, size: 32, offset: 1152)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2524, file: !2525, line: 100, baseType: !21, size: 32, offset: 1184)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2524, file: !2525, line: 100, baseType: !21, size: 32, offset: 1216)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2524, file: !2525, line: 101, baseType: !21, size: 32, offset: 1248)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2524, file: !2525, line: 101, baseType: !21, size: 32, offset: 1280)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2524, file: !2525, line: 101, baseType: !21, size: 32, offset: 1312)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2524, file: !2525, line: 102, baseType: !21, size: 32, offset: 1344)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2524, file: !2525, line: 102, baseType: !21, size: 32, offset: 1376)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2524, file: !2525, line: 102, baseType: !21, size: 32, offset: 1408)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2524, file: !2525, line: 103, baseType: !21, size: 32, offset: 1440)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2524, file: !2525, line: 103, baseType: !21, size: 32, offset: 1472)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2524, file: !2525, line: 103, baseType: !21, size: 32, offset: 1504)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2524, file: !2525, line: 103, baseType: !21, size: 32, offset: 1536)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2524, file: !2525, line: 103, baseType: !21, size: 32, offset: 1568)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2524, file: !2525, line: 104, baseType: !21, size: 32, offset: 1600)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2524, file: !2525, line: 104, baseType: !21, size: 32, offset: 1632)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2524, file: !2525, line: 104, baseType: !21, size: 32, offset: 1664)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2524, file: !2525, line: 104, baseType: !21, size: 32, offset: 1696)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2524, file: !2525, line: 104, baseType: !21, size: 32, offset: 1728)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2524, file: !2525, line: 105, baseType: !21, size: 32, offset: 1760)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !2524, file: !2525, line: 108, baseType: !2619, size: 704, offset: 1792)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !2525, line: 53, size: 704, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !2619, file: !2525, line: 54, baseType: !21, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !2619, file: !2525, line: 55, baseType: !21, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !2619, file: !2525, line: 56, baseType: !21, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !2619, file: !2525, line: 57, baseType: !21, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !2619, file: !2525, line: 59, baseType: !2427, size: 96, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !2619, file: !2525, line: 60, baseType: !2427, size: 96, offset: 224)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !2619, file: !2525, line: 61, baseType: !2427, size: 96, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !2619, file: !2525, line: 63, baseType: !21, size: 32, offset: 416)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !2619, file: !2525, line: 64, baseType: !21, size: 32, offset: 448)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !2619, file: !2525, line: 65, baseType: !21, size: 32, offset: 480)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !2619, file: !2525, line: 67, baseType: !12, size: 16, offset: 512)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !2619, file: !2525, line: 68, baseType: !12, size: 16, offset: 528)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !2619, file: !2525, line: 69, baseType: !12, size: 16, offset: 544)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !2619, file: !2525, line: 70, baseType: !12, size: 16, offset: 560)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !2619, file: !2525, line: 72, baseType: !21, size: 32, offset: 576)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !2619, file: !2525, line: 73, baseType: !21, size: 32, offset: 608)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !2619, file: !2525, line: 74, baseType: !21, size: 32, offset: 640)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !2619, file: !2525, line: 75, baseType: !21, size: 32, offset: 672)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !2524, file: !2525, line: 109, baseType: !2640, size: 128, offset: 2496)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !2525, line: 79, size: 128, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2640, file: !2525, line: 80, baseType: !29, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !2640, file: !2525, line: 81, baseType: !29, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !2640, file: !2525, line: 82, baseType: !29, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2640, file: !2525, line: 83, baseType: !29, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !2524, file: !2525, line: 111, baseType: !21, size: 32, offset: 2624)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !2524, file: !2525, line: 111, baseType: !21, size: 32, offset: 2656)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !2524, file: !2525, line: 112, baseType: !21, size: 32, offset: 2688)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !2524, file: !2525, line: 112, baseType: !21, size: 32, offset: 2720)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2524, file: !2525, line: 113, baseType: !21, size: 32, offset: 2752)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !2524, file: !2525, line: 114, baseType: !21, size: 32, offset: 2784)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !2524, file: !2525, line: 114, baseType: !21, size: 32, offset: 2816)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !2524, file: !2525, line: 115, baseType: !12, size: 16, offset: 2848)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !2524, file: !2525, line: 115, baseType: !12, size: 16, offset: 2864)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2524, file: !2525, line: 116, baseType: !12, size: 16, offset: 2880)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !2524, file: !2525, line: 117, baseType: !26, size: 8, offset: 2896)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !2524, file: !2525, line: 117, baseType: !26, size: 8, offset: 2904)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !2524, file: !2525, line: 119, baseType: !21, size: 32, offset: 2912)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !2524, file: !2525, line: 119, baseType: !21, size: 32, offset: 2944)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !2524, file: !2525, line: 120, baseType: !12, size: 16, offset: 2976)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !2524, file: !2525, line: 120, baseType: !12, size: 16, offset: 2992)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !2524, file: !2525, line: 121, baseType: !21, size: 32, offset: 3008)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !2524, file: !2525, line: 121, baseType: !21, size: 32, offset: 3040)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !2524, file: !2525, line: 122, baseType: !21, size: 32, offset: 3072)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !2524, file: !2525, line: 123, baseType: !21, size: 32, offset: 3104)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !2524, file: !2525, line: 124, baseType: !12, size: 16, offset: 3136)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !2524, file: !2525, line: 125, baseType: !12, size: 16, offset: 3152)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2524, file: !2525, line: 127, baseType: !29, size: 32, offset: 3168)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !2524, file: !2525, line: 127, baseType: !29, size: 32, offset: 3200)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2524, file: !2525, line: 128, baseType: !29, size: 32, offset: 3232)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !2524, file: !2525, line: 128, baseType: !29, size: 32, offset: 3264)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2524, file: !2525, line: 129, baseType: !12, size: 16, offset: 3296)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !2524, file: !2525, line: 129, baseType: !12, size: 16, offset: 3312)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2524, file: !2525, line: 129, baseType: !12, size: 16, offset: 3328)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2524, file: !2525, line: 129, baseType: !12, size: 16, offset: 3344)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2524, file: !2525, line: 130, baseType: !21, size: 32, offset: 3360)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !2524, file: !2525, line: 130, baseType: !21, size: 32, offset: 3392)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !2524, file: !2525, line: 130, baseType: !21, size: 32, offset: 3424)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !2524, file: !2525, line: 130, baseType: !21, size: 32, offset: 3456)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !2524, file: !2525, line: 131, baseType: !21, size: 32, offset: 3488)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !2524, file: !2525, line: 131, baseType: !21, size: 32, offset: 3520)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !2524, file: !2525, line: 131, baseType: !21, size: 32, offset: 3552)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !2524, file: !2525, line: 131, baseType: !21, size: 32, offset: 3584)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !2524, file: !2525, line: 132, baseType: !21, size: 32, offset: 3616)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !2524, file: !2525, line: 132, baseType: !21, size: 32, offset: 3648)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !2524, file: !2525, line: 133, baseType: !2575, size: 512, offset: 3680)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !2524, file: !2525, line: 135, baseType: !21, size: 32, offset: 4192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !2524, file: !2525, line: 136, baseType: !21, size: 32, offset: 4224)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !2524, file: !2525, line: 137, baseType: !21, size: 32, offset: 4256)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !2524, file: !2525, line: 138, baseType: !29, size: 32, offset: 4288)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !2524, file: !2525, line: 141, baseType: !26, size: 8, offset: 4320)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2524, file: !2525, line: 141, baseType: !26, size: 8, offset: 4328)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !2524, file: !2525, line: 141, baseType: !26, size: 8, offset: 4336)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2524, file: !2525, line: 141, baseType: !26, size: 8, offset: 4344)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !2524, file: !2525, line: 142, baseType: !12, size: 16, offset: 4352)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2524, file: !2525, line: 142, baseType: !12, size: 16, offset: 4368)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !2524, file: !2525, line: 142, baseType: !12, size: 16, offset: 4384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !2524, file: !2525, line: 145, baseType: !26, size: 8, offset: 4400)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2524, file: !2525, line: 145, baseType: !26, size: 8, offset: 4408)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !2524, file: !2525, line: 148, baseType: !12, size: 16, offset: 4416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !2524, file: !2525, line: 148, baseType: !12, size: 16, offset: 4432)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !2524, file: !2525, line: 149, baseType: !21, size: 32, offset: 4448)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !2524, file: !2525, line: 149, baseType: !21, size: 32, offset: 4480)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2524, file: !2525, line: 152, baseType: !176, size: 128, offset: 4512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !2524, file: !2525, line: 153, baseType: !21, size: 32, offset: 4640)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !2524, file: !2525, line: 154, baseType: !21, size: 32, offset: 4672)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2524, file: !2525, line: 157, baseType: !12, size: 16, offset: 4704)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2524, file: !2525, line: 157, baseType: !12, size: 16, offset: 4720)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !2524, file: !2525, line: 160, baseType: !2710, size: 64, offset: 4736)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !2712, line: 113, size: 6208, elements: !2713)
!2712 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2723}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2711, file: !2712, line: 114, baseType: !12, size: 16)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2711, file: !2712, line: 114, baseType: !12, size: 16, offset: 16)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !2711, file: !2712, line: 115, baseType: !26, size: 8, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !2711, file: !2712, line: 115, baseType: !26, size: 8, offset: 40)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !2711, file: !2712, line: 116, baseType: !26, size: 8, offset: 48)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2711, file: !2712, line: 117, baseType: !2720, size: 8, offset: 56)
!2720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 8, elements: !2721)
!2721 = !{!2722}
!2722 = !DISubrange(count: 1)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2711, file: !2712, line: 119, baseType: !2724, size: 6144, offset: 64)
!2724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2725, size: 6144, elements: !2734)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !2712, line: 109, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !2712, line: 106, size: 192, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2726, file: !2712, line: 107, baseType: !21, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2726, file: !2712, line: 107, baseType: !21, size: 32, offset: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2726, file: !2712, line: 107, baseType: !21, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2726, file: !2712, line: 107, baseType: !21, size: 32, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2726, file: !2712, line: 107, baseType: !21, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2726, file: !2712, line: 108, baseType: !29, size: 32, offset: 160)
!2734 = !{!2735}
!2735 = !DISubrange(count: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !2524, file: !2525, line: 161, baseType: !2710, size: 64, offset: 4800)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !2524, file: !2525, line: 162, baseType: !26, size: 8, offset: 4864)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !2524, file: !2525, line: 162, baseType: !26, size: 8, offset: 4872)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !2524, file: !2525, line: 163, baseType: !26, size: 8, offset: 4880)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !2524, file: !2525, line: 163, baseType: !26, size: 8, offset: 4888)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !2524, file: !2525, line: 164, baseType: !12, size: 16, offset: 4896)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2524, file: !2525, line: 164, baseType: !12, size: 16, offset: 4912)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !2524, file: !2525, line: 165, baseType: !21, size: 32, offset: 4928)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !2524, file: !2525, line: 165, baseType: !21, size: 32, offset: 4960)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2524, file: !2525, line: 167, baseType: !2746, size: 1152, offset: 4992)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2747, size: 1152, elements: !4141)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !2712, line: 57, size: 2496, elements: !2749)
!2749 = !{!2750, !2751, !2752, !2753, !2754, !3936, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2748, file: !2712, line: 59, baseType: !12, size: 16)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2748, file: !2712, line: 59, baseType: !12, size: 16, offset: 16)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !2748, file: !2712, line: 59, baseType: !12, size: 16, offset: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !2748, file: !2712, line: 59, baseType: !12, size: 16, offset: 48)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2748, file: !2712, line: 60, baseType: !2755, size: 64, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !2757, line: 115, size: 11392, elements: !2758)
!2757 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2758 = !{!2759, !2760, !2761, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2778, !2788, !2802, !2803, !2844, !2845, !2848, !2849, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2873, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2961, !2964, !2968, !2969, !2970, !2971, !2972, !2975, !2978, !2982, !2983, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2998, !3001, !3004, !3924, !3925}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2756, file: !2757, line: 116, baseType: !2528, size: 960)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2756, file: !2757, line: 117, baseType: !2590, size: 64, offset: 960)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2756, file: !2757, line: 119, baseType: !2762, size: 64, offset: 1024)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !2757, line: 57, flags: DIFlagFwdDecl)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2756, file: !2757, line: 121, baseType: !12, size: 16, offset: 1088)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !2756, file: !2757, line: 121, baseType: !12, size: 16, offset: 1104)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !2756, file: !2757, line: 122, baseType: !29, size: 32, offset: 1120)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !2756, file: !2757, line: 122, baseType: !29, size: 32, offset: 1152)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !2756, file: !2757, line: 122, baseType: !29, size: 32, offset: 1184)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !2756, file: !2757, line: 123, baseType: !2575, size: 512, offset: 1216)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2756, file: !2757, line: 124, baseType: !2755, size: 64, offset: 1728)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !2756, file: !2757, line: 124, baseType: !2755, size: 64, offset: 1792)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2756, file: !2757, line: 127, baseType: !2755, size: 64, offset: 1856)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !2756, file: !2757, line: 127, baseType: !2755, size: 64, offset: 1920)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !2756, file: !2757, line: 127, baseType: !2755, size: 64, offset: 1984)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2756, file: !2757, line: 128, baseType: !2776, size: 64, offset: 2048)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !2592, line: 45, flags: DIFlagFwdDecl)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2756, file: !2757, line: 130, baseType: !2779, size: 64, offset: 2112)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !2757, line: 97, size: 832, elements: !2781)
!2781 = !{!2782, !2786, !2787}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2780, file: !2757, line: 98, baseType: !2783, size: 768)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 768, elements: !2784)
!2784 = !{!2785, !2429}
!2785 = !DISubrange(count: 8)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2780, file: !2757, line: 99, baseType: !29, size: 32, offset: 768)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2780, file: !2757, line: 99, baseType: !29, size: 32, offset: 800)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2756, file: !2757, line: 131, baseType: !2789, size: 64, offset: 2176)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !2791, line: 486, size: 1600, elements: !2792)
!2791 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2792 = !{!2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2790, file: !2791, line: 487, baseType: !2528, size: 960)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !2790, file: !2791, line: 489, baseType: !370, size: 128, offset: 960)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2790, file: !2791, line: 490, baseType: !370, size: 128, offset: 1088)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2790, file: !2791, line: 491, baseType: !370, size: 128, offset: 1216)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2790, file: !2791, line: 492, baseType: !370, size: 128, offset: 1344)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2790, file: !2791, line: 494, baseType: !29, size: 32, offset: 1472)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !2790, file: !2791, line: 495, baseType: !29, size: 32, offset: 1504)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !2790, file: !2791, line: 497, baseType: !29, size: 32, offset: 1536)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2790, file: !2791, line: 498, baseType: !29, size: 32, offset: 1568)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !2756, file: !2757, line: 132, baseType: !2789, size: 64, offset: 2240)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !2756, file: !2757, line: 133, baseType: !2804, size: 64, offset: 2304)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !2791, line: 334, size: 1728, elements: !2806)
!2806 = !{!2807, !2808, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2843}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2805, file: !2791, line: 335, baseType: !370, size: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !2805, file: !2791, line: 336, baseType: !2809, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !2791, line: 47, flags: DIFlagFwdDecl)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2805, file: !2791, line: 338, baseType: !12, size: 16, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2805, file: !2791, line: 338, baseType: !12, size: 16, offset: 208)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !2805, file: !2791, line: 339, baseType: !36, size: 32, offset: 224)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2805, file: !2791, line: 340, baseType: !29, size: 32, offset: 256)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2805, file: !2791, line: 342, baseType: !21, size: 32, offset: 288)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !2805, file: !2791, line: 343, baseType: !2427, size: 96, offset: 320)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !2805, file: !2791, line: 344, baseType: !2427, size: 96, offset: 416)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !2805, file: !2791, line: 347, baseType: !370, size: 128, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !2805, file: !2791, line: 349, baseType: !29, size: 32, offset: 640)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !2805, file: !2791, line: 350, baseType: !29, size: 32, offset: 672)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !2805, file: !2791, line: 351, baseType: !79, size: 64, offset: 704)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !2805, file: !2791, line: 352, baseType: !79, size: 64, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2805, file: !2791, line: 354, baseType: !2824, size: 384, offset: 832)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !2791, line: 116, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !2791, line: 94, size: 384, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !2825, file: !2791, line: 96, baseType: !29, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !2825, file: !2791, line: 96, baseType: !29, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !2825, file: !2791, line: 97, baseType: !29, size: 32, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !2825, file: !2791, line: 97, baseType: !29, size: 32, offset: 96)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !2825, file: !2791, line: 99, baseType: !12, size: 16, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !2825, file: !2791, line: 100, baseType: !12, size: 16, offset: 144)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !2825, file: !2791, line: 102, baseType: !12, size: 16, offset: 160)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2825, file: !2791, line: 105, baseType: !12, size: 16, offset: 176)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !2825, file: !2791, line: 108, baseType: !12, size: 16, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !2825, file: !2791, line: 109, baseType: !12, size: 16, offset: 208)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !2825, file: !2791, line: 111, baseType: !12, size: 16, offset: 224)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !2825, file: !2791, line: 112, baseType: !12, size: 16, offset: 240)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !2825, file: !2791, line: 114, baseType: !29, size: 32, offset: 256)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !2825, file: !2791, line: 114, baseType: !29, size: 32, offset: 288)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !2825, file: !2791, line: 115, baseType: !29, size: 32, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !2825, file: !2791, line: 115, baseType: !29, size: 32, offset: 352)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !2805, file: !2791, line: 355, baseType: !2575, size: 512, offset: 1216)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2756, file: !2757, line: 134, baseType: !79, size: 64, offset: 2368)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2756, file: !2757, line: 136, baseType: !2846, size: 64, offset: 2432)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !44, line: 61, flags: DIFlagFwdDecl)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2756, file: !2757, line: 138, baseType: !2824, size: 384, offset: 2496)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !2756, file: !2757, line: 139, baseType: !2850, size: 64, offset: 2880)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !2791, line: 80, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !2791, line: 72, size: 192, elements: !2853)
!2853 = !{!2854, !2861, !2862, !2863, !2864}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2852, file: !2791, line: 73, baseType: !2855, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !2791, line: 59, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !2791, line: 56, size: 128, elements: !2858)
!2858 = !{!2859, !2860}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2857, file: !2791, line: 57, baseType: !2427, size: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2857, file: !2791, line: 58, baseType: !29, size: 32, offset: 96)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2852, file: !2791, line: 74, baseType: !29, size: 32, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2852, file: !2791, line: 76, baseType: !29, size: 32, offset: 96)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2852, file: !2791, line: 77, baseType: !29, size: 32, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2852, file: !2791, line: 79, baseType: !29, size: 32, offset: 160)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !2756, file: !2757, line: 141, baseType: !370, size: 128, offset: 2944)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !2756, file: !2757, line: 142, baseType: !370, size: 128, offset: 3072)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !2756, file: !2757, line: 143, baseType: !370, size: 128, offset: 3200)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2756, file: !2757, line: 144, baseType: !370, size: 128, offset: 3328)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2756, file: !2757, line: 146, baseType: !29, size: 32, offset: 3456)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !2756, file: !2757, line: 147, baseType: !29, size: 32, offset: 3488)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2756, file: !2757, line: 150, baseType: !2872, size: 64, offset: 3520)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !2756, file: !2757, line: 151, baseType: !2874, size: 64, offset: 3584)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2756, file: !2757, line: 152, baseType: !29, size: 32, offset: 3648)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !2756, file: !2757, line: 153, baseType: !29, size: 32, offset: 3680)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2756, file: !2757, line: 156, baseType: !2427, size: 96, offset: 3712)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !2756, file: !2757, line: 156, baseType: !2427, size: 96, offset: 3808)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !2756, file: !2757, line: 156, baseType: !2427, size: 96, offset: 3904)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2756, file: !2757, line: 157, baseType: !2427, size: 96, offset: 4000)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !2756, file: !2757, line: 158, baseType: !2427, size: 96, offset: 4096)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !2756, file: !2757, line: 159, baseType: !2427, size: 96, offset: 4192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2756, file: !2757, line: 160, baseType: !2427, size: 96, offset: 4288)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !2756, file: !2757, line: 160, baseType: !2427, size: 96, offset: 4384)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2756, file: !2757, line: 161, baseType: !176, size: 128, offset: 4480)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !2756, file: !2757, line: 161, baseType: !176, size: 128, offset: 4608)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !2756, file: !2757, line: 162, baseType: !2427, size: 96, offset: 4736)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !2756, file: !2757, line: 162, baseType: !2427, size: 96, offset: 4832)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !2756, file: !2757, line: 163, baseType: !21, size: 32, offset: 4928)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !2756, file: !2757, line: 163, baseType: !21, size: 32, offset: 4960)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2756, file: !2757, line: 164, baseType: !2892, size: 512, offset: 4992)
!2892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 512, elements: !2893)
!2893 = !{!155, !155}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !2756, file: !2757, line: 165, baseType: !2892, size: 512, offset: 5504)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !2756, file: !2757, line: 166, baseType: !2892, size: 512, offset: 6016)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2756, file: !2757, line: 167, baseType: !2892, size: 512, offset: 6528)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !2756, file: !2757, line: 176, baseType: !2892, size: 512, offset: 7040)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2756, file: !2757, line: 178, baseType: !36, size: 32, offset: 7552)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2756, file: !2757, line: 180, baseType: !12, size: 16, offset: 7584)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !2756, file: !2757, line: 181, baseType: !12, size: 16, offset: 7600)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !2756, file: !2757, line: 183, baseType: !12, size: 16, offset: 7616)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !2756, file: !2757, line: 183, baseType: !12, size: 16, offset: 7632)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2756, file: !2757, line: 184, baseType: !12, size: 16, offset: 7648)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !2756, file: !2757, line: 184, baseType: !12, size: 16, offset: 7664)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !2756, file: !2757, line: 185, baseType: !12, size: 16, offset: 7680)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !2756, file: !2757, line: 186, baseType: !12, size: 16, offset: 7696)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !2756, file: !2757, line: 187, baseType: !12, size: 16, offset: 7712)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !2756, file: !2757, line: 188, baseType: !26, size: 8, offset: 7728)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !2756, file: !2757, line: 189, baseType: !26, size: 8, offset: 7736)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !2756, file: !2757, line: 192, baseType: !29, size: 32, offset: 7744)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !2756, file: !2757, line: 192, baseType: !29, size: 32, offset: 7776)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !2756, file: !2757, line: 192, baseType: !29, size: 32, offset: 7808)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !2756, file: !2757, line: 192, baseType: !29, size: 32, offset: 7840)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2756, file: !2757, line: 194, baseType: !29, size: 32, offset: 7872)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2756, file: !2757, line: 202, baseType: !21, size: 32, offset: 7904)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !2756, file: !2757, line: 202, baseType: !21, size: 32, offset: 7936)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !2756, file: !2757, line: 202, baseType: !21, size: 32, offset: 7968)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !2756, file: !2757, line: 211, baseType: !21, size: 32, offset: 8000)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !2756, file: !2757, line: 212, baseType: !21, size: 32, offset: 8032)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2756, file: !2757, line: 213, baseType: !21, size: 32, offset: 8064)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !2756, file: !2757, line: 214, baseType: !21, size: 32, offset: 8096)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !2756, file: !2757, line: 215, baseType: !21, size: 32, offset: 8128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !2756, file: !2757, line: 216, baseType: !21, size: 32, offset: 8160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !2756, file: !2757, line: 219, baseType: !21, size: 32, offset: 8192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !2756, file: !2757, line: 220, baseType: !21, size: 32, offset: 8224)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !2756, file: !2757, line: 221, baseType: !21, size: 32, offset: 8256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !2756, file: !2757, line: 224, baseType: !103, size: 16, offset: 8288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !2756, file: !2757, line: 224, baseType: !103, size: 16, offset: 8304)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2756, file: !2757, line: 226, baseType: !12, size: 16, offset: 8320)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !2756, file: !2757, line: 228, baseType: !26, size: 8, offset: 8336)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !2756, file: !2757, line: 229, baseType: !26, size: 8, offset: 8344)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !2756, file: !2757, line: 231, baseType: !12, size: 16, offset: 8352)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !2756, file: !2757, line: 232, baseType: !26, size: 8, offset: 8368)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !2756, file: !2757, line: 233, baseType: !26, size: 8, offset: 8376)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !2756, file: !2757, line: 234, baseType: !21, size: 32, offset: 8384)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !2756, file: !2757, line: 235, baseType: !21, size: 32, offset: 8416)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2756, file: !2757, line: 237, baseType: !370, size: 128, offset: 8448)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !2756, file: !2757, line: 238, baseType: !370, size: 128, offset: 8576)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !2756, file: !2757, line: 239, baseType: !370, size: 128, offset: 8704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !2756, file: !2757, line: 240, baseType: !370, size: 128, offset: 8832)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !2756, file: !2757, line: 242, baseType: !21, size: 32, offset: 8960)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2756, file: !2757, line: 244, baseType: !12, size: 16, offset: 8992)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !2756, file: !2757, line: 245, baseType: !103, size: 16, offset: 9008)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2756, file: !2757, line: 246, baseType: !176, size: 128, offset: 9024)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !2756, file: !2757, line: 248, baseType: !29, size: 32, offset: 9152)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !2756, file: !2757, line: 249, baseType: !29, size: 32, offset: 9184)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !2756, file: !2757, line: 251, baseType: !2948, size: 64, offset: 9216)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !2757, line: 251, flags: DIFlagFwdDecl)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !2756, file: !2757, line: 253, baseType: !26, size: 8, offset: 9280)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2756, file: !2757, line: 254, baseType: !26, size: 8, offset: 9288)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !2756, file: !2757, line: 255, baseType: !12, size: 16, offset: 9296)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !2756, file: !2757, line: 256, baseType: !2427, size: 96, offset: 9312)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2756, file: !2757, line: 258, baseType: !370, size: 128, offset: 9408)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !2756, file: !2757, line: 259, baseType: !370, size: 128, offset: 9536)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !2756, file: !2757, line: 260, baseType: !370, size: 128, offset: 9664)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !2756, file: !2757, line: 261, baseType: !370, size: 128, offset: 9792)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2756, file: !2757, line: 263, baseType: !2959, size: 64, offset: 9920)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !2757, line: 52, flags: DIFlagFwdDecl)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2756, file: !2757, line: 264, baseType: !2962, size: 64, offset: 9984)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !2757, line: 53, flags: DIFlagFwdDecl)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !2756, file: !2757, line: 265, baseType: !2965, size: 64, offset: 10048)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2967, line: 43, flags: DIFlagFwdDecl)
!2967 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !2756, file: !2757, line: 267, baseType: !26, size: 8, offset: 10112)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !2756, file: !2757, line: 268, baseType: !26, size: 8, offset: 10120)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2756, file: !2757, line: 269, baseType: !12, size: 16, offset: 10128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !2756, file: !2757, line: 270, baseType: !21, size: 32, offset: 10144)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !2756, file: !2757, line: 272, baseType: !2973, size: 64, offset: 10176)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !2757, line: 54, flags: DIFlagFwdDecl)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !2756, file: !2757, line: 275, baseType: !2976, size: 64, offset: 10240)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !2757, line: 275, flags: DIFlagFwdDecl)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !2756, file: !2757, line: 277, baseType: !2979, size: 64, offset: 10304)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !2981, line: 40, flags: DIFlagFwdDecl)
!2981 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_render_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2756, file: !2757, line: 277, baseType: !2979, size: 64, offset: 10368)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2756, file: !2757, line: 278, baseType: !2984, size: 64, offset: 10432)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2985, line: 27, baseType: !2986)
!2985 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2987, line: 45, baseType: !2988)
!2987 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2988 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !2756, file: !2757, line: 279, baseType: !2984, size: 64, offset: 10496)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2756, file: !2757, line: 280, baseType: !36, size: 32, offset: 10560)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !2756, file: !2757, line: 281, baseType: !36, size: 32, offset: 10592)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !2756, file: !2757, line: 283, baseType: !370, size: 128, offset: 10624)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !2756, file: !2757, line: 284, baseType: !370, size: 128, offset: 10752)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !2756, file: !2757, line: 285, baseType: !369, size: 64, offset: 10880)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !2756, file: !2757, line: 287, baseType: !2996, size: 64, offset: 10944)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !2757, line: 59, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !2756, file: !2757, line: 288, baseType: !2999, size: 64, offset: 11008)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !2757, line: 288, flags: DIFlagFwdDecl)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !2756, file: !2757, line: 290, baseType: !3002, size: 64, offset: 11072)
!3002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 64, elements: !3003)
!3003 = !{!112}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2756, file: !2757, line: 291, baseType: !3005, size: 64, offset: 11136)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !3007, line: 65, baseType: !3008)
!3007 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !3007, line: 50, size: 320, elements: !3009)
!3009 = !{!3010, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3008, file: !3007, line: 51, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !44, line: 1216, size: 39680, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3184, !3185, !3186, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3213, !3499, !3502, !3784, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3806, !3807, !3808, !3809, !3810, !3818, !3885, !3892, !3893, !3900, !3903, !3904, !3905, !3906, !3907, !3908}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3012, file: !44, line: 1217, baseType: !2528, size: 960)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3012, file: !44, line: 1218, baseType: !2590, size: 64, offset: 960)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3012, file: !44, line: 1220, baseType: !2755, size: 64, offset: 1024)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3012, file: !44, line: 1221, baseType: !3018, size: 64, offset: 1088)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !3020, line: 52, size: 4224, elements: !3021)
!3020 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3097, !3113}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3019, file: !3020, line: 53, baseType: !2528, size: 960)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3019, file: !3020, line: 54, baseType: !2590, size: 64, offset: 960)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !3019, file: !3020, line: 56, baseType: !12, size: 16, offset: 1024)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !3019, file: !3020, line: 56, baseType: !12, size: 16, offset: 1040)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3019, file: !3020, line: 57, baseType: !12, size: 16, offset: 1056)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !3019, file: !3020, line: 57, baseType: !12, size: 16, offset: 1072)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !3019, file: !3020, line: 59, baseType: !21, size: 32, offset: 1088)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !3019, file: !3020, line: 59, baseType: !21, size: 32, offset: 1120)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !3019, file: !3020, line: 59, baseType: !21, size: 32, offset: 1152)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !3019, file: !3020, line: 60, baseType: !21, size: 32, offset: 1184)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !3019, file: !3020, line: 60, baseType: !21, size: 32, offset: 1216)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !3019, file: !3020, line: 60, baseType: !21, size: 32, offset: 1248)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !3019, file: !3020, line: 61, baseType: !21, size: 32, offset: 1280)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !3019, file: !3020, line: 61, baseType: !21, size: 32, offset: 1312)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !3019, file: !3020, line: 61, baseType: !21, size: 32, offset: 1344)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !3019, file: !3020, line: 68, baseType: !21, size: 32, offset: 1376)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !3019, file: !3020, line: 68, baseType: !21, size: 32, offset: 1408)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3019, file: !3020, line: 68, baseType: !21, size: 32, offset: 1440)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !3019, file: !3020, line: 69, baseType: !21, size: 32, offset: 1472)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !3019, file: !3020, line: 69, baseType: !21, size: 32, offset: 1504)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3019, file: !3020, line: 74, baseType: !21, size: 32, offset: 1536)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3019, file: !3020, line: 79, baseType: !21, size: 32, offset: 1568)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !3019, file: !3020, line: 81, baseType: !12, size: 16, offset: 1600)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3019, file: !3020, line: 91, baseType: !12, size: 16, offset: 1616)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3019, file: !3020, line: 92, baseType: !12, size: 16, offset: 1632)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3019, file: !3020, line: 93, baseType: !12, size: 16, offset: 1648)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3019, file: !3020, line: 94, baseType: !12, size: 16, offset: 1664)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3019, file: !3020, line: 94, baseType: !12, size: 16, offset: 1680)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3019, file: !3020, line: 94, baseType: !12, size: 16, offset: 1696)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3019, file: !3020, line: 94, baseType: !12, size: 16, offset: 1712)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !3019, file: !3020, line: 96, baseType: !21, size: 32, offset: 1728)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !3019, file: !3020, line: 96, baseType: !21, size: 32, offset: 1760)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !3019, file: !3020, line: 96, baseType: !21, size: 32, offset: 1792)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !3019, file: !3020, line: 96, baseType: !21, size: 32, offset: 1824)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !3019, file: !3020, line: 98, baseType: !21, size: 32, offset: 1856)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !3019, file: !3020, line: 98, baseType: !21, size: 32, offset: 1888)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !3019, file: !3020, line: 98, baseType: !21, size: 32, offset: 1920)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !3019, file: !3020, line: 98, baseType: !21, size: 32, offset: 1952)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !3019, file: !3020, line: 99, baseType: !21, size: 32, offset: 1984)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !3019, file: !3020, line: 99, baseType: !21, size: 32, offset: 2016)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !3019, file: !3020, line: 100, baseType: !21, size: 32, offset: 2048)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !3019, file: !3020, line: 100, baseType: !21, size: 32, offset: 2080)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !3019, file: !3020, line: 103, baseType: !12, size: 16, offset: 2112)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !3019, file: !3020, line: 103, baseType: !12, size: 16, offset: 2128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !3019, file: !3020, line: 103, baseType: !12, size: 16, offset: 2144)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !3019, file: !3020, line: 103, baseType: !12, size: 16, offset: 2160)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !3019, file: !3020, line: 106, baseType: !21, size: 32, offset: 2176)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !3019, file: !3020, line: 106, baseType: !21, size: 32, offset: 2208)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !3019, file: !3020, line: 106, baseType: !21, size: 32, offset: 2240)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !3019, file: !3020, line: 106, baseType: !21, size: 32, offset: 2272)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !3019, file: !3020, line: 107, baseType: !12, size: 16, offset: 2304)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !3019, file: !3020, line: 107, baseType: !12, size: 16, offset: 2320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !3019, file: !3020, line: 107, baseType: !12, size: 16, offset: 2336)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !3019, file: !3020, line: 107, baseType: !12, size: 16, offset: 2352)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !3019, file: !3020, line: 108, baseType: !21, size: 32, offset: 2368)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !3019, file: !3020, line: 108, baseType: !21, size: 32, offset: 2400)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !3019, file: !3020, line: 109, baseType: !21, size: 32, offset: 2432)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !3019, file: !3020, line: 109, baseType: !21, size: 32, offset: 2464)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !3019, file: !3020, line: 110, baseType: !21, size: 32, offset: 2496)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !3019, file: !3020, line: 110, baseType: !21, size: 32, offset: 2528)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !3019, file: !3020, line: 110, baseType: !21, size: 32, offset: 2560)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !3019, file: !3020, line: 111, baseType: !12, size: 16, offset: 2592)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !3019, file: !3020, line: 111, baseType: !12, size: 16, offset: 2608)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !3019, file: !3020, line: 112, baseType: !12, size: 16, offset: 2624)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !3019, file: !3020, line: 112, baseType: !12, size: 16, offset: 2640)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !3019, file: !3020, line: 112, baseType: !12, size: 16, offset: 2656)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3019, file: !3020, line: 115, baseType: !12, size: 16, offset: 2672)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !3019, file: !3020, line: 118, baseType: !31, size: 64, offset: 2688)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !3019, file: !3020, line: 118, baseType: !31, size: 64, offset: 2752)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3019, file: !3020, line: 121, baseType: !2776, size: 64, offset: 2816)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3019, file: !3020, line: 122, baseType: !2746, size: 1152, offset: 2880)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !3019, file: !3020, line: 123, baseType: !12, size: 16, offset: 4032)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3019, file: !3020, line: 123, baseType: !12, size: 16, offset: 4048)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3019, file: !3020, line: 123, baseType: !3096, size: 32, offset: 4064)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 32, elements: !3003)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3019, file: !3020, line: 126, baseType: !3098, size: 64, offset: 4096)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !2529, line: 159, size: 448, elements: !3100)
!3100 = !{!3101, !3103, !3104, !3105, !3106, !3109}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3099, file: !2529, line: 161, baseType: !3102, size: 64)
!3102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 64, elements: !3003)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3099, file: !2529, line: 162, baseType: !3102, size: 64, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3099, file: !2529, line: 163, baseType: !3096, size: 32, offset: 128)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !3099, file: !2529, line: 164, baseType: !3096, size: 32, offset: 160)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !3099, file: !2529, line: 165, baseType: !3107, size: 128, offset: 192)
!3107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3108, size: 128, elements: !3003)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !3099, file: !2529, line: 166, baseType: !3110, size: 128, offset: 320)
!3110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3111, size: 128, elements: !3003)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !2529, line: 46, flags: DIFlagFwdDecl)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3019, file: !3020, line: 129, baseType: !3114, size: 64, offset: 4160)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !8, line: 328, size: 3456, elements: !3116)
!3116 = !{!3117, !3118, !3119, !3122, !3123, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3150, !3151, !3152, !3155, !3160, !3161, !3164, !3168, !3172, !3176, !3180, !3181, !3182, !3183}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3115, file: !8, line: 329, baseType: !2528, size: 960)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3115, file: !8, line: 330, baseType: !2590, size: 64, offset: 960)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !3115, file: !8, line: 332, baseType: !3120, size: 64, offset: 1024)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !8, line: 332, flags: DIFlagFwdDecl)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3115, file: !8, line: 333, baseType: !2575, size: 512, offset: 1088)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !3115, file: !8, line: 335, baseType: !3124, size: 64, offset: 1600)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !8, line: 335, flags: DIFlagFwdDecl)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3115, file: !8, line: 337, baseType: !2846, size: 64, offset: 1664)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !3115, file: !8, line: 338, baseType: !3002, size: 64, offset: 1728)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3115, file: !8, line: 340, baseType: !370, size: 128, offset: 1792)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3115, file: !8, line: 340, baseType: !370, size: 128, offset: 1920)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3115, file: !8, line: 342, baseType: !29, size: 32, offset: 2048)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3115, file: !8, line: 342, baseType: !29, size: 32, offset: 2080)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !3115, file: !8, line: 343, baseType: !29, size: 32, offset: 2112)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3115, file: !8, line: 345, baseType: !29, size: 32, offset: 2144)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3115, file: !8, line: 346, baseType: !29, size: 32, offset: 2176)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !3115, file: !8, line: 347, baseType: !12, size: 16, offset: 2208)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3115, file: !8, line: 348, baseType: !12, size: 16, offset: 2224)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3115, file: !8, line: 349, baseType: !29, size: 32, offset: 2240)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !3115, file: !8, line: 351, baseType: !29, size: 32, offset: 2272)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !3115, file: !8, line: 353, baseType: !12, size: 16, offset: 2304)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !3115, file: !8, line: 354, baseType: !12, size: 16, offset: 2320)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !3115, file: !8, line: 355, baseType: !29, size: 32, offset: 2336)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !3115, file: !8, line: 357, baseType: !3143, size: 128, offset: 2368)
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !2494, line: 95, baseType: !3144)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !2494, line: 92, size: 128, elements: !3145)
!3145 = !{!3146, !3147, !3148, !3149}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !3144, file: !2494, line: 93, baseType: !21, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !3144, file: !2494, line: 93, baseType: !21, size: 32, offset: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !3144, file: !2494, line: 94, baseType: !21, size: 32, offset: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !3144, file: !2494, line: 94, baseType: !21, size: 32, offset: 96)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !3115, file: !8, line: 363, baseType: !370, size: 128, offset: 2496)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !3115, file: !8, line: 363, baseType: !370, size: 128, offset: 2624)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !3115, file: !8, line: 368, baseType: !3153, size: 64, offset: 2752)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !8, line: 48, flags: DIFlagFwdDecl)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !3115, file: !8, line: 372, baseType: !3156, size: 32, offset: 2816)
!3156 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !8, line: 274, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !8, line: 271, size: 32, elements: !3158)
!3158 = !{!3159}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3157, file: !8, line: 273, baseType: !36, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3115, file: !8, line: 373, baseType: !29, size: 32, offset: 2848)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !3115, file: !8, line: 382, baseType: !3162, size: 64, offset: 2880)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !8, line: 46, flags: DIFlagFwdDecl)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !3115, file: !8, line: 385, baseType: !3165, size: 64, offset: 2944)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{null, !79, !21}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !3115, file: !8, line: 386, baseType: !3169, size: 64, offset: 3008)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{null, !79, !2874}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !3115, file: !8, line: 387, baseType: !3173, size: 64, offset: 3072)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!29, !79}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !3115, file: !8, line: 388, baseType: !3177, size: 64, offset: 3136)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{null, !79}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !3115, file: !8, line: 389, baseType: !79, size: 64, offset: 3200)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !3115, file: !8, line: 389, baseType: !79, size: 64, offset: 3264)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !3115, file: !8, line: 389, baseType: !79, size: 64, offset: 3328)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !3115, file: !8, line: 389, baseType: !79, size: 64, offset: 3392)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !3012, file: !44, line: 1223, baseType: !3011, size: 64, offset: 1152)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3012, file: !44, line: 1225, baseType: !370, size: 128, offset: 1216)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !3012, file: !44, line: 1226, baseType: !3187, size: 64, offset: 1344)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !44, line: 69, size: 320, elements: !3189)
!3189 = !{!3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3188, file: !44, line: 70, baseType: !3187, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3188, file: !44, line: 70, baseType: !3187, size: 64, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3188, file: !44, line: 71, baseType: !36, size: 32, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !3188, file: !44, line: 71, baseType: !36, size: 32, offset: 160)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3188, file: !44, line: 72, baseType: !29, size: 32, offset: 192)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !3188, file: !44, line: 73, baseType: !12, size: 16, offset: 224)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !3188, file: !44, line: 73, baseType: !12, size: 16, offset: 240)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3188, file: !44, line: 74, baseType: !2755, size: 64, offset: 256)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !3012, file: !44, line: 1227, baseType: !2755, size: 64, offset: 1408)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3012, file: !44, line: 1229, baseType: !2427, size: 96, offset: 1472)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !3012, file: !44, line: 1230, baseType: !2427, size: 96, offset: 1568)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !3012, file: !44, line: 1231, baseType: !2427, size: 96, offset: 1664)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !3012, file: !44, line: 1231, baseType: !2427, size: 96, offset: 1760)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3012, file: !44, line: 1233, baseType: !36, size: 32, offset: 1856)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !3012, file: !44, line: 1234, baseType: !29, size: 32, offset: 1888)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !3012, file: !44, line: 1235, baseType: !36, size: 32, offset: 1920)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3012, file: !44, line: 1237, baseType: !12, size: 16, offset: 1952)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3012, file: !44, line: 1239, baseType: !26, size: 8, offset: 1968)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3012, file: !44, line: 1240, baseType: !2720, size: 8, offset: 1976)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3012, file: !44, line: 1242, baseType: !3114, size: 64, offset: 1984)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !3012, file: !44, line: 1244, baseType: !3211, size: 64, offset: 2048)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !44, line: 59, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !3012, file: !44, line: 1246, baseType: !3214, size: 64, offset: 2112)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !44, line: 1067, size: 5184, elements: !3216)
!3216 = !{!3217, !3255, !3256, !3271, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3293, !3371, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3482}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !3215, file: !44, line: 1068, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !44, line: 934, baseType: !3220)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !44, line: 925, size: 576, elements: !3221)
!3221 = !{!3222, !3238, !3239, !3240, !3241, !3242, !3254}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3220, file: !44, line: 926, baseType: !3223, size: 320)
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !44, line: 830, baseType: !3224)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !44, line: 813, size: 320, elements: !3225)
!3225 = !{!3226, !3229, !3232, !3233, !3235, !3236, !3237}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3224, file: !44, line: 814, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !44, line: 51, flags: DIFlagFwdDecl)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !3224, file: !44, line: 815, baseType: !3230, size: 64, offset: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !44, line: 815, flags: DIFlagFwdDecl)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !3224, file: !44, line: 818, baseType: !79, size: 64, offset: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !3224, file: !44, line: 819, baseType: !3234, size: 32, offset: 192)
!3234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2476, size: 32, elements: !154)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3224, file: !44, line: 822, baseType: !29, size: 32, offset: 224)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !3224, file: !44, line: 826, baseType: !29, size: 32, offset: 256)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !3224, file: !44, line: 829, baseType: !29, size: 32, offset: 288)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3220, file: !44, line: 928, baseType: !12, size: 16, offset: 320)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3220, file: !44, line: 928, baseType: !12, size: 16, offset: 336)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3220, file: !44, line: 929, baseType: !29, size: 32, offset: 352)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !3220, file: !44, line: 930, baseType: !3108, size: 64, offset: 384)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !3220, file: !44, line: 931, baseType: !3243, size: 64, offset: 448)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !35, line: 59, size: 128, elements: !3245)
!3245 = !{!3246, !3252, !3253}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !3244, file: !35, line: 60, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !35, line: 54, size: 64, elements: !3249)
!3249 = !{!3250, !3251}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !3248, file: !35, line: 55, baseType: !29, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3248, file: !35, line: 56, baseType: !21, size: 32, offset: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !3244, file: !35, line: 61, baseType: !29, size: 32, offset: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3244, file: !35, line: 62, baseType: !29, size: 32, offset: 96)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3220, file: !44, line: 933, baseType: !79, size: 64, offset: 512)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !3215, file: !44, line: 1069, baseType: !3218, size: 64, offset: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !3215, file: !44, line: 1070, baseType: !3257, size: 64, offset: 128)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !44, line: 916, baseType: !3259)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !44, line: 891, size: 704, elements: !3260)
!3260 = !{!3261, !3262, !3263, !3265, !3266, !3267, !3268, !3269, !3270}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3259, file: !44, line: 892, baseType: !3223, size: 320)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3259, file: !44, line: 896, baseType: !29, size: 32, offset: 320)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !3259, file: !44, line: 900, baseType: !3264, size: 96, offset: 352)
!3264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 96, elements: !2428)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !3259, file: !44, line: 903, baseType: !21, size: 32, offset: 448)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !3259, file: !44, line: 906, baseType: !29, size: 32, offset: 480)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !3259, file: !44, line: 909, baseType: !21, size: 32, offset: 512)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !3259, file: !44, line: 912, baseType: !21, size: 32, offset: 544)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !3259, file: !44, line: 914, baseType: !2755, size: 64, offset: 576)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3259, file: !44, line: 915, baseType: !79, size: 64, offset: 640)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !3215, file: !44, line: 1071, baseType: !3272, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !44, line: 920, baseType: !3274)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !44, line: 918, size: 320, elements: !3275)
!3275 = !{!3276}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3274, file: !44, line: 919, baseType: !3223, size: 320)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !3215, file: !44, line: 1075, baseType: !21, size: 32, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !3215, file: !44, line: 1077, baseType: !21, size: 32, offset: 288)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !3215, file: !44, line: 1078, baseType: !21, size: 32, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !3215, file: !44, line: 1079, baseType: !12, size: 16, offset: 352)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3215, file: !44, line: 1082, baseType: !12, size: 16, offset: 368)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !3215, file: !44, line: 1085, baseType: !26, size: 8, offset: 384)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !3215, file: !44, line: 1086, baseType: !26, size: 8, offset: 392)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !3215, file: !44, line: 1087, baseType: !26, size: 8, offset: 400)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !3215, file: !44, line: 1088, baseType: !26, size: 8, offset: 408)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !3215, file: !44, line: 1090, baseType: !21, size: 32, offset: 416)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !3215, file: !44, line: 1093, baseType: !12, size: 16, offset: 448)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !3215, file: !44, line: 1096, baseType: !26, size: 8, offset: 464)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3215, file: !44, line: 1098, baseType: !3290, size: 40, offset: 472)
!3290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 40, elements: !3291)
!3291 = !{!3292}
!3292 = !DISubrange(count: 5)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !3215, file: !44, line: 1101, baseType: !3294, size: 832, offset: 512)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !44, line: 836, size: 832, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3367, !3368, !3369, !3370}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !3294, file: !44, line: 837, baseType: !3223, size: 320)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3294, file: !44, line: 839, baseType: !12, size: 16, offset: 320)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !3294, file: !44, line: 839, baseType: !12, size: 16, offset: 336)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !3294, file: !44, line: 842, baseType: !12, size: 16, offset: 352)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !3294, file: !44, line: 842, baseType: !12, size: 16, offset: 368)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !3294, file: !44, line: 843, baseType: !3096, size: 32, offset: 384)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3294, file: !44, line: 845, baseType: !29, size: 32, offset: 416)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3294, file: !44, line: 847, baseType: !79, size: 64, offset: 448)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !3294, file: !44, line: 848, baseType: !3305, size: 64, offset: 512)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !3007, line: 77, size: 15424, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3313, !3314, !3317, !3318, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3356, !3357, !3361}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3306, file: !3007, line: 78, baseType: !2528, size: 960)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3306, file: !3007, line: 80, baseType: !2547, size: 8192, offset: 960)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3306, file: !3007, line: 82, baseType: !3311, size: 64, offset: 9152)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !3007, line: 43, flags: DIFlagFwdDecl)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !3306, file: !3007, line: 83, baseType: !3111, size: 64, offset: 9216)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !3306, file: !3007, line: 86, baseType: !3315, size: 64, offset: 9280)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !3007, line: 41, flags: DIFlagFwdDecl)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !3306, file: !3007, line: 87, baseType: !2483, size: 64, offset: 9344)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !3306, file: !3007, line: 89, baseType: !3319, size: 512, offset: 9408)
!3319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2483, size: 512, elements: !3320)
!3320 = !{!2785}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !3306, file: !3007, line: 90, baseType: !12, size: 16, offset: 9920)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !3306, file: !3007, line: 90, baseType: !12, size: 16, offset: 9936)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3306, file: !3007, line: 92, baseType: !12, size: 16, offset: 9952)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3306, file: !3007, line: 92, baseType: !12, size: 16, offset: 9968)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3306, file: !3007, line: 93, baseType: !12, size: 16, offset: 9984)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3306, file: !3007, line: 93, baseType: !12, size: 16, offset: 10000)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !3306, file: !3007, line: 94, baseType: !29, size: 32, offset: 10016)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !3306, file: !3007, line: 97, baseType: !12, size: 16, offset: 10048)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !3306, file: !3007, line: 97, baseType: !12, size: 16, offset: 10064)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !3306, file: !3007, line: 98, baseType: !12, size: 16, offset: 10080)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !3306, file: !3007, line: 98, baseType: !12, size: 16, offset: 10096)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !3306, file: !3007, line: 99, baseType: !12, size: 16, offset: 10112)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !3306, file: !3007, line: 99, baseType: !12, size: 16, offset: 10128)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !3306, file: !3007, line: 100, baseType: !36, size: 32, offset: 10144)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !3306, file: !3007, line: 101, baseType: !3108, size: 64, offset: 10176)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !3306, file: !3007, line: 103, baseType: !2553, size: 64, offset: 10240)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3306, file: !3007, line: 104, baseType: !3098, size: 64, offset: 10304)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !3306, file: !3007, line: 107, baseType: !21, size: 32, offset: 10368)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !3306, file: !3007, line: 108, baseType: !29, size: 32, offset: 10400)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !3306, file: !3007, line: 109, baseType: !12, size: 16, offset: 10432)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3306, file: !3007, line: 110, baseType: !12, size: 16, offset: 10448)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !3306, file: !3007, line: 113, baseType: !29, size: 32, offset: 10464)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !3306, file: !3007, line: 113, baseType: !29, size: 32, offset: 10496)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !3306, file: !3007, line: 114, baseType: !26, size: 8, offset: 10528)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !3306, file: !3007, line: 114, baseType: !26, size: 8, offset: 10536)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !3306, file: !3007, line: 115, baseType: !12, size: 16, offset: 10544)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !3306, file: !3007, line: 116, baseType: !176, size: 128, offset: 10560)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !3306, file: !3007, line: 119, baseType: !21, size: 32, offset: 10688)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !3306, file: !3007, line: 119, baseType: !21, size: 32, offset: 10720)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !3306, file: !3007, line: 122, baseType: !3351, size: 512, offset: 10752)
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !3352, line: 182, baseType: !3353)
!3352 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !3352, line: 180, size: 512, elements: !3354)
!3354 = !{!3355}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3353, file: !3352, line: 181, baseType: !2575, size: 512)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !3306, file: !3007, line: 123, baseType: !26, size: 8, offset: 11264)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3306, file: !3007, line: 125, baseType: !3358, size: 56, offset: 11272)
!3358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 56, elements: !3359)
!3359 = !{!3360}
!3360 = !DISubrange(count: 7)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !3306, file: !3007, line: 126, baseType: !3362, size: 4096, offset: 11328)
!3362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3363, size: 4096, elements: !3320)
!3363 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !3007, line: 69, baseType: !3364)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !3007, line: 67, size: 512, elements: !3365)
!3365 = !{!3366}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3364, file: !3007, line: 68, baseType: !2575, size: 512)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !3294, file: !44, line: 849, baseType: !3305, size: 64, offset: 576)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !3294, file: !44, line: 850, baseType: !3305, size: 64, offset: 640)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !3294, file: !44, line: 851, baseType: !2427, size: 96, offset: 704)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3294, file: !44, line: 852, baseType: !21, size: 32, offset: 800)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3215, file: !44, line: 1104, baseType: !3372, size: 1344, offset: 1344)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !44, line: 867, size: 1344, elements: !3373)
!3373 = !{!3374, !3375, !3376, !3377, !3378, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3372, file: !44, line: 868, baseType: !12, size: 16)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !3372, file: !44, line: 869, baseType: !12, size: 16, offset: 16)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !3372, file: !44, line: 870, baseType: !12, size: 16, offset: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !3372, file: !44, line: 871, baseType: !12, size: 16, offset: 48)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3372, file: !44, line: 873, baseType: !3379, size: 896, offset: 64)
!3379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3380, size: 896, elements: !3359)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !44, line: 864, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !44, line: 859, size: 128, elements: !3382)
!3382 = !{!3383, !3384, !3385, !3386, !3387, !3388}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3381, file: !44, line: 860, baseType: !12, size: 16)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3381, file: !44, line: 861, baseType: !12, size: 16, offset: 16)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !3381, file: !44, line: 861, baseType: !12, size: 16, offset: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3381, file: !44, line: 861, baseType: !12, size: 16, offset: 48)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3381, file: !44, line: 862, baseType: !29, size: 32, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3381, file: !44, line: 863, baseType: !21, size: 32, offset: 96)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !3372, file: !44, line: 874, baseType: !79, size: 64, offset: 960)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !3372, file: !44, line: 876, baseType: !21, size: 32, offset: 1024)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3372, file: !44, line: 876, baseType: !21, size: 32, offset: 1056)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3372, file: !44, line: 878, baseType: !29, size: 32, offset: 1088)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !3372, file: !44, line: 879, baseType: !29, size: 32, offset: 1120)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !3372, file: !44, line: 881, baseType: !29, size: 32, offset: 1152)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !3372, file: !44, line: 881, baseType: !29, size: 32, offset: 1184)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3372, file: !44, line: 883, baseType: !3011, size: 64, offset: 1216)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3372, file: !44, line: 884, baseType: !2755, size: 64, offset: 1280)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !3215, file: !44, line: 1107, baseType: !21, size: 32, offset: 2688)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !3215, file: !44, line: 1110, baseType: !21, size: 32, offset: 2720)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !3215, file: !44, line: 1113, baseType: !12, size: 16, offset: 2752)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !3215, file: !44, line: 1113, baseType: !12, size: 16, offset: 2768)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !3215, file: !44, line: 1116, baseType: !26, size: 8, offset: 2784)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3215, file: !44, line: 1117, baseType: !2720, size: 8, offset: 2792)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !3215, file: !44, line: 1120, baseType: !12, size: 16, offset: 2800)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !3215, file: !44, line: 1121, baseType: !21, size: 32, offset: 2816)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !3215, file: !44, line: 1122, baseType: !21, size: 32, offset: 2848)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !3215, file: !44, line: 1123, baseType: !21, size: 32, offset: 2880)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !3215, file: !44, line: 1124, baseType: !21, size: 32, offset: 2912)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !3215, file: !44, line: 1125, baseType: !21, size: 32, offset: 2944)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !3215, file: !44, line: 1126, baseType: !21, size: 32, offset: 2976)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !3215, file: !44, line: 1127, baseType: !21, size: 32, offset: 3008)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !3215, file: !44, line: 1128, baseType: !21, size: 32, offset: 3040)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !3215, file: !44, line: 1129, baseType: !21, size: 32, offset: 3072)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !3215, file: !44, line: 1130, baseType: !21, size: 32, offset: 3104)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !3215, file: !44, line: 1131, baseType: !12, size: 16, offset: 3136)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !3215, file: !44, line: 1132, baseType: !26, size: 8, offset: 3152)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !3215, file: !44, line: 1133, baseType: !26, size: 8, offset: 3160)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !3215, file: !44, line: 1134, baseType: !3419, size: 24, offset: 3168)
!3419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 24, elements: !2428)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !3215, file: !44, line: 1135, baseType: !26, size: 8, offset: 3192)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !3215, file: !44, line: 1138, baseType: !2755, size: 64, offset: 3200)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !3215, file: !44, line: 1139, baseType: !26, size: 8, offset: 3264)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !3215, file: !44, line: 1140, baseType: !26, size: 8, offset: 3272)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !3215, file: !44, line: 1141, baseType: !26, size: 8, offset: 3280)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !3215, file: !44, line: 1142, baseType: !26, size: 8, offset: 3288)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !3215, file: !44, line: 1143, baseType: !26, size: 8, offset: 3296)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !3215, file: !44, line: 1144, baseType: !3428, size: 64, offset: 3304)
!3428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 64, elements: !3320)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !3215, file: !44, line: 1145, baseType: !3428, size: 64, offset: 3368)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !3215, file: !44, line: 1148, baseType: !26, size: 8, offset: 3432)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !3215, file: !44, line: 1149, baseType: !26, size: 8, offset: 3440)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !3215, file: !44, line: 1152, baseType: !26, size: 8, offset: 3448)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !3215, file: !44, line: 1152, baseType: !26, size: 8, offset: 3456)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !3215, file: !44, line: 1153, baseType: !26, size: 8, offset: 3464)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !3215, file: !44, line: 1154, baseType: !12, size: 16, offset: 3472)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !3215, file: !44, line: 1154, baseType: !12, size: 16, offset: 3488)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !3215, file: !44, line: 1155, baseType: !12, size: 16, offset: 3504)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !3215, file: !44, line: 1155, baseType: !12, size: 16, offset: 3520)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !3215, file: !44, line: 1156, baseType: !26, size: 8, offset: 3536)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !3215, file: !44, line: 1157, baseType: !26, size: 8, offset: 3544)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !3215, file: !44, line: 1159, baseType: !26, size: 8, offset: 3552)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !3215, file: !44, line: 1160, baseType: !26, size: 8, offset: 3560)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !3215, file: !44, line: 1161, baseType: !26, size: 8, offset: 3568)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !3215, file: !44, line: 1162, baseType: !26, size: 8, offset: 3576)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !3215, file: !44, line: 1165, baseType: !29, size: 32, offset: 3584)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !3215, file: !44, line: 1166, baseType: !29, size: 32, offset: 3616)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !3215, file: !44, line: 1167, baseType: !29, size: 32, offset: 3648)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !3215, file: !44, line: 1168, baseType: !29, size: 32, offset: 3680)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !3215, file: !44, line: 1171, baseType: !12, size: 16, offset: 3712)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !3215, file: !44, line: 1171, baseType: !12, size: 16, offset: 3728)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !3215, file: !44, line: 1172, baseType: !29, size: 32, offset: 3744)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !3215, file: !44, line: 1173, baseType: !21, size: 32, offset: 3776)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !3215, file: !44, line: 1174, baseType: !21, size: 32, offset: 3808)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !3215, file: !44, line: 1177, baseType: !3455, size: 1024, offset: 3840)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !44, line: 963, size: 1024, elements: !3456)
!3456 = !{!3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3480, !3481}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3455, file: !44, line: 965, baseType: !29, size: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !3455, file: !44, line: 968, baseType: !21, size: 32, offset: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3455, file: !44, line: 971, baseType: !21, size: 32, offset: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3455, file: !44, line: 974, baseType: !21, size: 32, offset: 96)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !3455, file: !44, line: 977, baseType: !2427, size: 96, offset: 128)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !3455, file: !44, line: 979, baseType: !2427, size: 96, offset: 224)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3455, file: !44, line: 982, baseType: !29, size: 32, offset: 320)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !3455, file: !44, line: 987, baseType: !3002, size: 64, offset: 352)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !3455, file: !44, line: 989, baseType: !21, size: 32, offset: 416)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !3455, file: !44, line: 994, baseType: !29, size: 32, offset: 448)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !3455, file: !44, line: 995, baseType: !29, size: 32, offset: 480)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !3455, file: !44, line: 997, baseType: !26, size: 8, offset: 512)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3455, file: !44, line: 998, baseType: !3358, size: 56, offset: 520)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !3455, file: !44, line: 1000, baseType: !21, size: 32, offset: 576)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !3455, file: !44, line: 1003, baseType: !3002, size: 64, offset: 608)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !3455, file: !44, line: 1006, baseType: !29, size: 32, offset: 672)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !3455, file: !44, line: 1009, baseType: !21, size: 32, offset: 704)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !3455, file: !44, line: 1012, baseType: !3002, size: 64, offset: 736)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !3455, file: !44, line: 1015, baseType: !3002, size: 64, offset: 800)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !3455, file: !44, line: 1018, baseType: !29, size: 32, offset: 864)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !3455, file: !44, line: 1019, baseType: !3478, size: 64, offset: 896)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !44, line: 63, flags: DIFlagFwdDecl)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !3455, file: !44, line: 1023, baseType: !21, size: 32, offset: 960)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3455, file: !44, line: 1024, baseType: !29, size: 32, offset: 992)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !3215, file: !44, line: 1179, baseType: !3483, size: 320, offset: 4864)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !44, line: 1043, size: 320, elements: !3484)
!3484 = !{!3485, !3486, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3483, file: !44, line: 1044, baseType: !26, size: 8)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !3483, file: !44, line: 1045, baseType: !3487, size: 16, offset: 8)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 16, elements: !3003)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !3483, file: !44, line: 1048, baseType: !26, size: 8, offset: 24)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !3483, file: !44, line: 1049, baseType: !21, size: 32, offset: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !3483, file: !44, line: 1049, baseType: !21, size: 32, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !3483, file: !44, line: 1052, baseType: !21, size: 32, offset: 96)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !3483, file: !44, line: 1052, baseType: !21, size: 32, offset: 128)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !3483, file: !44, line: 1053, baseType: !26, size: 8, offset: 160)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !3483, file: !44, line: 1054, baseType: !3419, size: 24, offset: 168)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !3483, file: !44, line: 1057, baseType: !21, size: 32, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !3483, file: !44, line: 1057, baseType: !21, size: 32, offset: 224)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !3483, file: !44, line: 1060, baseType: !21, size: 32, offset: 256)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !3483, file: !44, line: 1060, baseType: !21, size: 32, offset: 288)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3012, file: !44, line: 1247, baseType: !3500, size: 64, offset: 2176)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !44, line: 60, flags: DIFlagFwdDecl)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3012, file: !44, line: 1251, baseType: !3503, size: 31872, offset: 2240)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !44, line: 403, size: 31872, elements: !3504)
!3504 = !{!3505, !3580, !3600, !3609, !3629, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3762, !3763, !3764, !3766, !3782, !3783}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3503, file: !44, line: 404, baseType: !3506, size: 1984)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !44, line: 259, size: 1984, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3525, !3575}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !3506, file: !44, line: 260, baseType: !26, size: 8)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3506, file: !44, line: 263, baseType: !26, size: 8, offset: 8)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3506, file: !44, line: 266, baseType: !26, size: 8, offset: 16)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3506, file: !44, line: 267, baseType: !26, size: 8, offset: 24)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !3506, file: !44, line: 269, baseType: !26, size: 8, offset: 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !3506, file: !44, line: 270, baseType: !26, size: 8, offset: 40)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !3506, file: !44, line: 276, baseType: !26, size: 8, offset: 48)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !3506, file: !44, line: 279, baseType: !26, size: 8, offset: 56)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !3506, file: !44, line: 280, baseType: !12, size: 16, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !3506, file: !44, line: 280, baseType: !12, size: 16, offset: 80)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !3506, file: !44, line: 281, baseType: !21, size: 32, offset: 96)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !3506, file: !44, line: 284, baseType: !26, size: 8, offset: 128)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !3506, file: !44, line: 285, baseType: !26, size: 8, offset: 136)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3506, file: !44, line: 287, baseType: !3522, size: 48, offset: 144)
!3522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 48, elements: !3523)
!3523 = !{!3524}
!3524 = !DISubrange(count: 6)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !3506, file: !44, line: 290, baseType: !3526, size: 1280, offset: 192)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !3352, line: 174, baseType: !3527)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !3352, line: 166, size: 1280, elements: !3528)
!3528 = !{!3529, !3530, !3531, !3532, !3533, !3534, !3535, !3574}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3527, file: !3352, line: 167, baseType: !29, size: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3527, file: !3352, line: 167, baseType: !29, size: 32, offset: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !3527, file: !3352, line: 168, baseType: !2575, size: 512, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !3527, file: !3352, line: 169, baseType: !2575, size: 512, offset: 576)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !3527, file: !3352, line: 170, baseType: !21, size: 32, offset: 1088)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !3527, file: !3352, line: 171, baseType: !21, size: 32, offset: 1120)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !3527, file: !3352, line: 172, baseType: !3536, size: 64, offset: 1152)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !3352, line: 72, size: 3072, elements: !3538)
!3538 = !{!3539, !3540, !3541, !3542, !3543, !3544, !3545, !3570, !3571, !3572, !3573}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3537, file: !3352, line: 73, baseType: !29, size: 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3537, file: !3352, line: 73, baseType: !29, size: 32, offset: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !3537, file: !3352, line: 74, baseType: !29, size: 32, offset: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !3537, file: !3352, line: 75, baseType: !29, size: 32, offset: 96)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !3537, file: !3352, line: 77, baseType: !3143, size: 128, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !3537, file: !3352, line: 77, baseType: !3143, size: 128, offset: 256)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !3537, file: !3352, line: 79, baseType: !3546, size: 2304, offset: 384)
!3546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3547, size: 2304, elements: !154)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !3352, line: 67, baseType: !3548)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !3352, line: 55, size: 576, elements: !3549)
!3549 = !{!3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3566, !3567, !3568, !3569}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3548, file: !3352, line: 56, baseType: !12, size: 16)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3548, file: !3352, line: 56, baseType: !12, size: 16, offset: 16)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3548, file: !3352, line: 58, baseType: !21, size: 32, offset: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !3548, file: !3352, line: 59, baseType: !21, size: 32, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !3548, file: !3352, line: 59, baseType: !21, size: 32, offset: 96)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !3548, file: !3352, line: 60, baseType: !3002, size: 64, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !3548, file: !3352, line: 60, baseType: !3002, size: 64, offset: 192)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3548, file: !3352, line: 61, baseType: !3558, size: 64, offset: 256)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !3352, line: 47, baseType: !3560)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !3352, line: 44, size: 96, elements: !3561)
!3561 = !{!3562, !3563, !3564, !3565}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3560, file: !3352, line: 45, baseType: !21, size: 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3560, file: !3352, line: 45, baseType: !21, size: 32, offset: 32)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3560, file: !3352, line: 46, baseType: !12, size: 16, offset: 64)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !3560, file: !3352, line: 46, baseType: !12, size: 16, offset: 80)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !3548, file: !3352, line: 62, baseType: !3558, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !3548, file: !3352, line: 64, baseType: !3558, size: 64, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !3548, file: !3352, line: 65, baseType: !3002, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !3548, file: !3352, line: 66, baseType: !3002, size: 64, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !3537, file: !3352, line: 80, baseType: !2427, size: 96, offset: 2688)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !3537, file: !3352, line: 80, baseType: !2427, size: 96, offset: 2784)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !3537, file: !3352, line: 81, baseType: !2427, size: 96, offset: 2880)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !3537, file: !3352, line: 83, baseType: !2427, size: 96, offset: 2976)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3527, file: !3352, line: 173, baseType: !79, size: 64, offset: 1216)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !3506, file: !44, line: 291, baseType: !3576, size: 512, offset: 1472)
!3576 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !3352, line: 178, baseType: !3577)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !3352, line: 176, size: 512, elements: !3578)
!3578 = !{!3579}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !3577, file: !3352, line: 177, baseType: !2575, size: 512)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !3503, file: !44, line: 406, baseType: !3581, size: 64, offset: 1984)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !44, line: 80, size: 1472, elements: !3583)
!3583 = !{!3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !3582, file: !44, line: 81, baseType: !79, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !3582, file: !44, line: 82, baseType: !79, size: 64, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !3582, file: !44, line: 83, baseType: !36, size: 32, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !3582, file: !44, line: 84, baseType: !36, size: 32, offset: 160)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !3582, file: !44, line: 86, baseType: !36, size: 32, offset: 192)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !3582, file: !44, line: 87, baseType: !36, size: 32, offset: 224)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !3582, file: !44, line: 88, baseType: !36, size: 32, offset: 256)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !3582, file: !44, line: 89, baseType: !36, size: 32, offset: 288)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !3582, file: !44, line: 90, baseType: !36, size: 32, offset: 320)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !3582, file: !44, line: 91, baseType: !36, size: 32, offset: 352)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !3582, file: !44, line: 92, baseType: !36, size: 32, offset: 384)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3582, file: !44, line: 93, baseType: !36, size: 32, offset: 416)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !3582, file: !44, line: 95, baseType: !3597, size: 1024, offset: 448)
!3597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 1024, elements: !3598)
!3598 = !{!3599}
!3599 = !DISubrange(count: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !3503, file: !44, line: 407, baseType: !3601, size: 64, offset: 2048)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !44, line: 98, size: 1216, elements: !3603)
!3603 = !{!3604, !3605, !3606, !3607, !3608}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !3602, file: !44, line: 100, baseType: !79, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3602, file: !44, line: 101, baseType: !79, size: 64, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !3602, file: !44, line: 103, baseType: !36, size: 32, offset: 128)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3602, file: !44, line: 104, baseType: !36, size: 32, offset: 160)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !3602, file: !44, line: 106, baseType: !3597, size: 1024, offset: 192)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !3503, file: !44, line: 408, baseType: !3610, size: 512, offset: 2112)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !44, line: 109, size: 512, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !3610, file: !44, line: 111, baseType: !29, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !3610, file: !44, line: 112, baseType: !29, size: 32, offset: 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3610, file: !44, line: 115, baseType: !29, size: 32, offset: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !3610, file: !44, line: 116, baseType: !29, size: 32, offset: 96)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !3610, file: !44, line: 117, baseType: !29, size: 32, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !3610, file: !44, line: 118, baseType: !29, size: 32, offset: 160)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !3610, file: !44, line: 119, baseType: !29, size: 32, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !3610, file: !44, line: 120, baseType: !29, size: 32, offset: 224)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !3610, file: !44, line: 121, baseType: !29, size: 32, offset: 256)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !3610, file: !44, line: 122, baseType: !29, size: 32, offset: 288)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !3610, file: !44, line: 125, baseType: !29, size: 32, offset: 320)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !3610, file: !44, line: 126, baseType: !29, size: 32, offset: 352)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !3610, file: !44, line: 127, baseType: !12, size: 16, offset: 384)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !3610, file: !44, line: 128, baseType: !12, size: 16, offset: 400)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !3610, file: !44, line: 129, baseType: !29, size: 32, offset: 416)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !3610, file: !44, line: 130, baseType: !29, size: 32, offset: 448)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3610, file: !44, line: 131, baseType: !29, size: 32, offset: 480)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !3503, file: !44, line: 409, baseType: !3630, size: 576, offset: 2624)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !44, line: 134, size: 576, elements: !3631)
!3631 = !{!3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3630, file: !44, line: 135, baseType: !29, size: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !3630, file: !44, line: 136, baseType: !29, size: 32, offset: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !3630, file: !44, line: 137, baseType: !29, size: 32, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !3630, file: !44, line: 138, baseType: !29, size: 32, offset: 96)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !3630, file: !44, line: 139, baseType: !29, size: 32, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !3630, file: !44, line: 140, baseType: !29, size: 32, offset: 160)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !3630, file: !44, line: 141, baseType: !29, size: 32, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !3630, file: !44, line: 142, baseType: !29, size: 32, offset: 224)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !3630, file: !44, line: 143, baseType: !21, size: 32, offset: 256)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !3630, file: !44, line: 144, baseType: !29, size: 32, offset: 288)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3630, file: !44, line: 145, baseType: !29, size: 32, offset: 320)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !3630, file: !44, line: 147, baseType: !29, size: 32, offset: 352)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !3630, file: !44, line: 148, baseType: !29, size: 32, offset: 384)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !3630, file: !44, line: 149, baseType: !29, size: 32, offset: 416)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !3630, file: !44, line: 150, baseType: !29, size: 32, offset: 448)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !3630, file: !44, line: 151, baseType: !29, size: 32, offset: 480)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3630, file: !44, line: 152, baseType: !2564, size: 64, offset: 512)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3503, file: !44, line: 411, baseType: !29, size: 32, offset: 3200)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3503, file: !44, line: 411, baseType: !29, size: 32, offset: 3232)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !3503, file: !44, line: 411, baseType: !29, size: 32, offset: 3264)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !3503, file: !44, line: 412, baseType: !21, size: 32, offset: 3296)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !3503, file: !44, line: 413, baseType: !29, size: 32, offset: 3328)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !3503, file: !44, line: 413, baseType: !29, size: 32, offset: 3360)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !3503, file: !44, line: 415, baseType: !29, size: 32, offset: 3392)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !3503, file: !44, line: 415, baseType: !29, size: 32, offset: 3424)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3503, file: !44, line: 416, baseType: !12, size: 16, offset: 3456)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !3503, file: !44, line: 416, baseType: !12, size: 16, offset: 3472)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !3503, file: !44, line: 418, baseType: !21, size: 32, offset: 3488)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !3503, file: !44, line: 418, baseType: !21, size: 32, offset: 3520)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !3503, file: !44, line: 421, baseType: !21, size: 32, offset: 3552)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !3503, file: !44, line: 421, baseType: !21, size: 32, offset: 3584)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !3503, file: !44, line: 421, baseType: !21, size: 32, offset: 3616)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !3503, file: !44, line: 425, baseType: !12, size: 16, offset: 3648)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3503, file: !44, line: 425, baseType: !12, size: 16, offset: 3664)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3503, file: !44, line: 425, baseType: !12, size: 16, offset: 3680)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3503, file: !44, line: 426, baseType: !12, size: 16, offset: 3696)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3503, file: !44, line: 428, baseType: !12, size: 16, offset: 3712)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3503, file: !44, line: 428, baseType: !12, size: 16, offset: 3728)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !3503, file: !44, line: 431, baseType: !29, size: 32, offset: 3744)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3503, file: !44, line: 433, baseType: !12, size: 16, offset: 3776)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !3503, file: !44, line: 435, baseType: !12, size: 16, offset: 3792)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !3503, file: !44, line: 437, baseType: !12, size: 16, offset: 3808)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3503, file: !44, line: 439, baseType: !12, size: 16, offset: 3824)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !3503, file: !44, line: 441, baseType: !12, size: 16, offset: 3840)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !3503, file: !44, line: 443, baseType: !12, size: 16, offset: 3856)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !3503, file: !44, line: 449, baseType: !29, size: 32, offset: 3872)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !3503, file: !44, line: 453, baseType: !29, size: 32, offset: 3904)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !3503, file: !44, line: 458, baseType: !12, size: 16, offset: 3936)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !3503, file: !44, line: 462, baseType: !12, size: 16, offset: 3952)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !3503, file: !44, line: 467, baseType: !29, size: 32, offset: 3968)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !3503, file: !44, line: 467, baseType: !29, size: 32, offset: 4000)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3503, file: !44, line: 469, baseType: !12, size: 16, offset: 4032)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !3503, file: !44, line: 469, baseType: !12, size: 16, offset: 4048)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !3503, file: !44, line: 469, baseType: !12, size: 16, offset: 4064)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !3503, file: !44, line: 469, baseType: !12, size: 16, offset: 4080)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !3503, file: !44, line: 474, baseType: !12, size: 16, offset: 4096)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !3503, file: !44, line: 475, baseType: !26, size: 8, offset: 4112)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !3503, file: !44, line: 476, baseType: !26, size: 8, offset: 4120)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !3503, file: !44, line: 481, baseType: !29, size: 32, offset: 4128)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3503, file: !44, line: 486, baseType: !29, size: 32, offset: 4160)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !3503, file: !44, line: 491, baseType: !29, size: 32, offset: 4192)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !3503, file: !44, line: 496, baseType: !12, size: 16, offset: 4224)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3503, file: !44, line: 498, baseType: !12, size: 16, offset: 4240)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !3503, file: !44, line: 501, baseType: !12, size: 16, offset: 4256)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3503, file: !44, line: 502, baseType: !12, size: 16, offset: 4272)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !3503, file: !44, line: 508, baseType: !12, size: 16, offset: 4288)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !3503, file: !44, line: 513, baseType: !12, size: 16, offset: 4304)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !3503, file: !44, line: 515, baseType: !12, size: 16, offset: 4320)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !3503, file: !44, line: 515, baseType: !12, size: 16, offset: 4336)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !3503, file: !44, line: 519, baseType: !3143, size: 128, offset: 4352)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !3503, file: !44, line: 519, baseType: !3143, size: 128, offset: 4480)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !3503, file: !44, line: 520, baseType: !2493, size: 128, offset: 4608)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3503, file: !44, line: 523, baseType: !370, size: 128, offset: 4736)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !3503, file: !44, line: 524, baseType: !12, size: 16, offset: 4864)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !3503, file: !44, line: 527, baseType: !12, size: 16, offset: 4880)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !3503, file: !44, line: 532, baseType: !21, size: 32, offset: 4896)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !3503, file: !44, line: 532, baseType: !21, size: 32, offset: 4928)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !3503, file: !44, line: 534, baseType: !21, size: 32, offset: 4960)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !3503, file: !44, line: 538, baseType: !21, size: 32, offset: 4992)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !3503, file: !44, line: 542, baseType: !29, size: 32, offset: 5024)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !3503, file: !44, line: 545, baseType: !21, size: 32, offset: 5056)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !3503, file: !44, line: 545, baseType: !21, size: 32, offset: 5088)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !3503, file: !44, line: 545, baseType: !21, size: 32, offset: 5120)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !3503, file: !44, line: 548, baseType: !21, size: 32, offset: 5152)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !3503, file: !44, line: 551, baseType: !12, size: 16, offset: 5184)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !3503, file: !44, line: 551, baseType: !12, size: 16, offset: 5200)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !3503, file: !44, line: 551, baseType: !12, size: 16, offset: 5216)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !3503, file: !44, line: 551, baseType: !12, size: 16, offset: 5232)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !3503, file: !44, line: 552, baseType: !12, size: 16, offset: 5248)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !3503, file: !44, line: 552, baseType: !12, size: 16, offset: 5264)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !3503, file: !44, line: 553, baseType: !21, size: 32, offset: 5280)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !3503, file: !44, line: 553, baseType: !21, size: 32, offset: 5312)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !3503, file: !44, line: 554, baseType: !12, size: 16, offset: 5344)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !3503, file: !44, line: 554, baseType: !12, size: 16, offset: 5360)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !3503, file: !44, line: 555, baseType: !21, size: 32, offset: 5376)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !3503, file: !44, line: 555, baseType: !21, size: 32, offset: 5408)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !3503, file: !44, line: 558, baseType: !2547, size: 8192, offset: 5440)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3503, file: !44, line: 561, baseType: !29, size: 32, offset: 13632)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !3503, file: !44, line: 562, baseType: !12, size: 16, offset: 13664)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3503, file: !44, line: 562, baseType: !12, size: 16, offset: 13680)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !3503, file: !44, line: 565, baseType: !3733, size: 6144, offset: 13696)
!3733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 6144, elements: !3734)
!3734 = !{!3735}
!3735 = !DISubrange(count: 768)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !3503, file: !44, line: 568, baseType: !176, size: 128, offset: 19840)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !3503, file: !44, line: 569, baseType: !176, size: 128, offset: 19968)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !3503, file: !44, line: 572, baseType: !26, size: 8, offset: 20096)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !3503, file: !44, line: 573, baseType: !26, size: 8, offset: 20104)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !3503, file: !44, line: 574, baseType: !26, size: 8, offset: 20112)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !3503, file: !44, line: 575, baseType: !3290, size: 40, offset: 20120)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !3503, file: !44, line: 578, baseType: !29, size: 32, offset: 20160)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !3503, file: !44, line: 579, baseType: !12, size: 16, offset: 20192)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !3503, file: !44, line: 580, baseType: !12, size: 16, offset: 20208)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !3503, file: !44, line: 581, baseType: !21, size: 32, offset: 20224)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !3503, file: !44, line: 582, baseType: !21, size: 32, offset: 20256)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !3503, file: !44, line: 585, baseType: !12, size: 16, offset: 20288)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !3503, file: !44, line: 585, baseType: !12, size: 16, offset: 20304)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !3503, file: !44, line: 586, baseType: !21, size: 32, offset: 20320)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !3503, file: !44, line: 589, baseType: !12, size: 16, offset: 20352)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !3503, file: !44, line: 589, baseType: !12, size: 16, offset: 20368)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !3503, file: !44, line: 590, baseType: !29, size: 32, offset: 20384)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !3503, file: !44, line: 593, baseType: !12, size: 16, offset: 20416)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !3503, file: !44, line: 593, baseType: !12, size: 16, offset: 20432)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !3503, file: !44, line: 594, baseType: !12, size: 16, offset: 20448)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !3503, file: !44, line: 594, baseType: !12, size: 16, offset: 20464)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !3503, file: !44, line: 595, baseType: !21, size: 32, offset: 20480)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3503, file: !44, line: 596, baseType: !21, size: 32, offset: 20512)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !3503, file: !44, line: 597, baseType: !3760, size: 64, offset: 20544)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2967, line: 44, flags: DIFlagFwdDecl)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !3503, file: !44, line: 600, baseType: !29, size: 32, offset: 20608)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !3503, file: !44, line: 601, baseType: !21, size: 32, offset: 20640)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !3503, file: !44, line: 604, baseType: !3765, size: 256, offset: 20672)
!3765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 256, elements: !2734)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !3503, file: !44, line: 607, baseType: !3767, size: 10880, offset: 20928)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !44, line: 364, size: 10880, elements: !3768)
!3768 = !{!3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3767, file: !44, line: 365, baseType: !3506, size: 1984)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !3767, file: !44, line: 367, baseType: !2547, size: 8192, offset: 1984)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3767, file: !44, line: 369, baseType: !12, size: 16, offset: 10176)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3767, file: !44, line: 369, baseType: !12, size: 16, offset: 10192)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3767, file: !44, line: 370, baseType: !12, size: 16, offset: 10208)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3767, file: !44, line: 370, baseType: !12, size: 16, offset: 10224)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !3767, file: !44, line: 372, baseType: !21, size: 32, offset: 10240)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3767, file: !44, line: 373, baseType: !21, size: 32, offset: 10272)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !3767, file: !44, line: 375, baseType: !3419, size: 24, offset: 10304)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !3767, file: !44, line: 376, baseType: !26, size: 8, offset: 10328)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !3767, file: !44, line: 378, baseType: !26, size: 8, offset: 10336)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3767, file: !44, line: 379, baseType: !3419, size: 24, offset: 10344)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !3767, file: !44, line: 381, baseType: !2575, size: 512, offset: 10368)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !3503, file: !44, line: 609, baseType: !29, size: 32, offset: 31808)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3503, file: !44, line: 610, baseType: !29, size: 32, offset: 31840)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !3012, file: !44, line: 1252, baseType: !3785, size: 256, offset: 34112)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !44, line: 158, size: 256, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !3785, file: !44, line: 159, baseType: !29, size: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3785, file: !44, line: 160, baseType: !21, size: 32, offset: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !3785, file: !44, line: 161, baseType: !21, size: 32, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !3785, file: !44, line: 162, baseType: !21, size: 32, offset: 96)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !3785, file: !44, line: 163, baseType: !29, size: 32, offset: 128)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3785, file: !44, line: 164, baseType: !12, size: 16, offset: 160)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3785, file: !44, line: 165, baseType: !12, size: 16, offset: 176)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3785, file: !44, line: 166, baseType: !21, size: 32, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3785, file: !44, line: 167, baseType: !21, size: 32, offset: 224)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !3012, file: !44, line: 1254, baseType: !370, size: 128, offset: 34368)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !3012, file: !44, line: 1255, baseType: !370, size: 128, offset: 34496)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !3012, file: !44, line: 1257, baseType: !79, size: 64, offset: 34624)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !3012, file: !44, line: 1258, baseType: !79, size: 64, offset: 34688)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !3012, file: !44, line: 1259, baseType: !79, size: 64, offset: 34752)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !3012, file: !44, line: 1260, baseType: !79, size: 64, offset: 34816)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !3012, file: !44, line: 1262, baseType: !79, size: 64, offset: 34880)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !3012, file: !44, line: 1265, baseType: !3804, size: 64, offset: 34944)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !44, line: 1265, flags: DIFlagFwdDecl)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !3012, file: !44, line: 1266, baseType: !12, size: 16, offset: 35008)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3012, file: !44, line: 1267, baseType: !12, size: 16, offset: 35024)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !3012, file: !44, line: 1270, baseType: !29, size: 32, offset: 35040)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !3012, file: !44, line: 1271, baseType: !370, size: 128, offset: 35072)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3012, file: !44, line: 1274, baseType: !3811, size: 128, offset: 35200)
!3811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !44, line: 650, size: 128, elements: !3812)
!3812 = !{!3813, !3814, !3815, !3816, !3817}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3811, file: !44, line: 651, baseType: !2427, size: 96)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3811, file: !44, line: 652, baseType: !26, size: 8, offset: 96)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3811, file: !44, line: 652, baseType: !26, size: 8, offset: 104)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3811, file: !44, line: 652, baseType: !26, size: 8, offset: 112)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3811, file: !44, line: 652, baseType: !26, size: 8, offset: 120)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !3012, file: !44, line: 1275, baseType: !3819, size: 1472, offset: 35328)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !44, line: 676, size: 1472, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3833, !3843, !3844, !3845, !3846, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3819, file: !44, line: 679, baseType: !3811, size: 128)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3819, file: !44, line: 680, baseType: !12, size: 16, offset: 128)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3819, file: !44, line: 680, baseType: !12, size: 16, offset: 144)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3819, file: !44, line: 680, baseType: !12, size: 16, offset: 160)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3819, file: !44, line: 680, baseType: !12, size: 16, offset: 176)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3819, file: !44, line: 681, baseType: !12, size: 16, offset: 192)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3819, file: !44, line: 681, baseType: !12, size: 16, offset: 208)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3819, file: !44, line: 681, baseType: !12, size: 16, offset: 224)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3819, file: !44, line: 681, baseType: !12, size: 16, offset: 240)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3819, file: !44, line: 682, baseType: !12, size: 16, offset: 256)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3819, file: !44, line: 682, baseType: !3832, size: 48, offset: 272)
!3832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 48, elements: !2428)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3819, file: !44, line: 685, baseType: !3834, size: 192, offset: 320)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !44, line: 633, size: 192, elements: !3835)
!3835 = !{!3836, !3837, !3838, !3839, !3840, !3841, !3842}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3834, file: !44, line: 634, baseType: !12, size: 16)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3834, file: !44, line: 634, baseType: !12, size: 16, offset: 16)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3834, file: !44, line: 635, baseType: !12, size: 16, offset: 32)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3834, file: !44, line: 635, baseType: !12, size: 16, offset: 48)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3834, file: !44, line: 636, baseType: !21, size: 32, offset: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3834, file: !44, line: 636, baseType: !21, size: 32, offset: 96)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3834, file: !44, line: 637, baseType: !3760, size: 64, offset: 128)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3819, file: !44, line: 686, baseType: !12, size: 16, offset: 512)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3819, file: !44, line: 686, baseType: !12, size: 16, offset: 528)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3819, file: !44, line: 687, baseType: !21, size: 32, offset: 544)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3819, file: !44, line: 688, baseType: !3847, size: 448, offset: 576)
!3847 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !44, line: 674, baseType: !3848)
!3848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !44, line: 659, size: 448, elements: !3849)
!3849 = !{!3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3848, file: !44, line: 660, baseType: !21, size: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3848, file: !44, line: 661, baseType: !21, size: 32, offset: 32)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3848, file: !44, line: 662, baseType: !21, size: 32, offset: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3848, file: !44, line: 663, baseType: !21, size: 32, offset: 96)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3848, file: !44, line: 664, baseType: !21, size: 32, offset: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3848, file: !44, line: 665, baseType: !21, size: 32, offset: 160)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3848, file: !44, line: 666, baseType: !21, size: 32, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3848, file: !44, line: 667, baseType: !21, size: 32, offset: 224)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3848, file: !44, line: 668, baseType: !21, size: 32, offset: 256)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3848, file: !44, line: 669, baseType: !21, size: 32, offset: 288)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3848, file: !44, line: 670, baseType: !29, size: 32, offset: 320)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3848, file: !44, line: 671, baseType: !21, size: 32, offset: 352)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3848, file: !44, line: 672, baseType: !21, size: 32, offset: 384)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3848, file: !44, line: 673, baseType: !12, size: 16, offset: 416)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3848, file: !44, line: 673, baseType: !12, size: 16, offset: 432)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3819, file: !44, line: 692, baseType: !21, size: 32, offset: 1024)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3819, file: !44, line: 697, baseType: !21, size: 32, offset: 1056)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3819, file: !44, line: 703, baseType: !29, size: 32, offset: 1088)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3819, file: !44, line: 704, baseType: !12, size: 16, offset: 1120)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3819, file: !44, line: 704, baseType: !12, size: 16, offset: 1136)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3819, file: !44, line: 705, baseType: !12, size: 16, offset: 1152)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3819, file: !44, line: 706, baseType: !12, size: 16, offset: 1168)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3819, file: !44, line: 707, baseType: !12, size: 16, offset: 1184)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3819, file: !44, line: 708, baseType: !12, size: 16, offset: 1200)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3819, file: !44, line: 709, baseType: !12, size: 16, offset: 1216)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3819, file: !44, line: 709, baseType: !12, size: 16, offset: 1232)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3819, file: !44, line: 709, baseType: !12, size: 16, offset: 1248)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3819, file: !44, line: 709, baseType: !12, size: 16, offset: 1264)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3819, file: !44, line: 710, baseType: !12, size: 16, offset: 1280)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3819, file: !44, line: 711, baseType: !12, size: 16, offset: 1296)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3819, file: !44, line: 712, baseType: !21, size: 32, offset: 1312)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3819, file: !44, line: 713, baseType: !21, size: 32, offset: 1344)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3819, file: !44, line: 713, baseType: !21, size: 32, offset: 1376)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3819, file: !44, line: 713, baseType: !21, size: 32, offset: 1408)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3819, file: !44, line: 713, baseType: !21, size: 32, offset: 1440)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !3012, file: !44, line: 1278, baseType: !3886, size: 64, offset: 36800)
!3886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !44, line: 1197, size: 64, elements: !3887)
!3887 = !{!3888, !3889, !3890, !3891}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3886, file: !44, line: 1199, baseType: !21, size: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3886, file: !44, line: 1200, baseType: !26, size: 8, offset: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3886, file: !44, line: 1201, baseType: !26, size: 8, offset: 40)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3886, file: !44, line: 1202, baseType: !12, size: 16, offset: 48)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !3012, file: !44, line: 1281, baseType: !2846, size: 64, offset: 36864)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !3012, file: !44, line: 1284, baseType: !3894, size: 192, offset: 36928)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !44, line: 1208, size: 192, elements: !3895)
!3895 = !{!3896, !3897, !3898, !3899}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3894, file: !44, line: 1209, baseType: !2427, size: 96)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3894, file: !44, line: 1210, baseType: !29, size: 32, offset: 96)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3894, file: !44, line: 1210, baseType: !29, size: 32, offset: 128)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3894, file: !44, line: 1210, baseType: !29, size: 32, offset: 160)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3012, file: !44, line: 1287, baseType: !3901, size: 64, offset: 37120)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !44, line: 62, flags: DIFlagFwdDecl)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !3012, file: !44, line: 1289, baseType: !2984, size: 64, offset: 37184)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !3012, file: !44, line: 1290, baseType: !2984, size: 64, offset: 37248)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !3012, file: !44, line: 1293, baseType: !3526, size: 1280, offset: 37312)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !3012, file: !44, line: 1294, baseType: !3576, size: 512, offset: 38592)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !3012, file: !44, line: 1295, baseType: !3351, size: 512, offset: 39104)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !3012, file: !44, line: 1298, baseType: !3909, size: 64, offset: 39616)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !44, line: 1298, flags: DIFlagFwdDecl)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !3008, file: !3007, line: 53, baseType: !29, size: 32, offset: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !3008, file: !3007, line: 54, baseType: !29, size: 32, offset: 96)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3008, file: !3007, line: 55, baseType: !29, size: 32, offset: 128)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3008, file: !3007, line: 55, baseType: !29, size: 32, offset: 160)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !3008, file: !3007, line: 56, baseType: !26, size: 8, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !3008, file: !3007, line: 56, baseType: !26, size: 8, offset: 200)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3008, file: !3007, line: 57, baseType: !26, size: 8, offset: 208)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3008, file: !3007, line: 57, baseType: !26, size: 8, offset: 216)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !3008, file: !3007, line: 59, baseType: !12, size: 16, offset: 224)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3008, file: !3007, line: 59, baseType: !12, size: 16, offset: 240)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !3008, file: !3007, line: 59, baseType: !12, size: 16, offset: 256)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3008, file: !3007, line: 61, baseType: !12, size: 16, offset: 272)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3008, file: !3007, line: 63, baseType: !29, size: 32, offset: 288)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !2756, file: !2757, line: 293, baseType: !370, size: 128, offset: 11200)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !2756, file: !2757, line: 294, baseType: !3926, size: 64, offset: 11328)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !2757, line: 113, baseType: !3928)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !2757, line: 108, size: 256, elements: !3929)
!3929 = !{!3930, !3932, !3933, !3934, !3935}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3928, file: !2757, line: 109, baseType: !3931, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3928, file: !2757, line: 109, baseType: !3931, size: 64, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3928, file: !2757, line: 110, baseType: !2755, size: 64, offset: 128)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3928, file: !2757, line: 111, baseType: !29, size: 32, offset: 192)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3928, file: !2757, line: 112, baseType: !21, size: 32, offset: 224)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2748, file: !2712, line: 61, baseType: !3937, size: 64, offset: 128)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !2712, line: 202, size: 3328, elements: !3939)
!3939 = !{!3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !4022, !4023, !4052, !4072, !4080, !4081}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3938, file: !2712, line: 203, baseType: !2528, size: 960)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3938, file: !2712, line: 204, baseType: !2590, size: 64, offset: 960)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !3938, file: !2712, line: 206, baseType: !21, size: 32, offset: 1024)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !3938, file: !2712, line: 206, baseType: !21, size: 32, offset: 1056)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1088)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1120)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1152)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1184)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1216)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !3938, file: !2712, line: 207, baseType: !21, size: 32, offset: 1248)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !3938, file: !2712, line: 208, baseType: !21, size: 32, offset: 1280)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3938, file: !2712, line: 208, baseType: !21, size: 32, offset: 1312)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !3938, file: !2712, line: 211, baseType: !21, size: 32, offset: 1344)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !3938, file: !2712, line: 211, baseType: !21, size: 32, offset: 1376)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !3938, file: !2712, line: 211, baseType: !21, size: 32, offset: 1408)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !3938, file: !2712, line: 211, baseType: !21, size: 32, offset: 1440)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !3938, file: !2712, line: 211, baseType: !21, size: 32, offset: 1472)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !3938, file: !2712, line: 214, baseType: !21, size: 32, offset: 1504)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !3938, file: !2712, line: 214, baseType: !21, size: 32, offset: 1536)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !3938, file: !2712, line: 217, baseType: !21, size: 32, offset: 1568)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !3938, file: !2712, line: 218, baseType: !21, size: 32, offset: 1600)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !3938, file: !2712, line: 219, baseType: !21, size: 32, offset: 1632)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !3938, file: !2712, line: 220, baseType: !21, size: 32, offset: 1664)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !3938, file: !2712, line: 221, baseType: !21, size: 32, offset: 1696)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !3938, file: !2712, line: 222, baseType: !12, size: 16, offset: 1728)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !3938, file: !2712, line: 222, baseType: !12, size: 16, offset: 1744)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !3938, file: !2712, line: 224, baseType: !12, size: 16, offset: 1760)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !3938, file: !2712, line: 224, baseType: !12, size: 16, offset: 1776)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !3938, file: !2712, line: 227, baseType: !12, size: 16, offset: 1792)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !3938, file: !2712, line: 227, baseType: !12, size: 16, offset: 1808)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !3938, file: !2712, line: 229, baseType: !12, size: 16, offset: 1824)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3938, file: !2712, line: 229, baseType: !12, size: 16, offset: 1840)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3938, file: !2712, line: 230, baseType: !12, size: 16, offset: 1856)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3938, file: !2712, line: 230, baseType: !12, size: 16, offset: 1872)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !3938, file: !2712, line: 232, baseType: !21, size: 32, offset: 1888)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !3938, file: !2712, line: 232, baseType: !21, size: 32, offset: 1920)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !3938, file: !2712, line: 232, baseType: !21, size: 32, offset: 1952)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !3938, file: !2712, line: 232, baseType: !21, size: 32, offset: 1984)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !3938, file: !2712, line: 233, baseType: !29, size: 32, offset: 2016)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !3938, file: !2712, line: 234, baseType: !29, size: 32, offset: 2048)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !3938, file: !2712, line: 235, baseType: !12, size: 16, offset: 2080)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !3938, file: !2712, line: 235, baseType: !12, size: 16, offset: 2096)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3938, file: !2712, line: 236, baseType: !12, size: 16, offset: 2112)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !3938, file: !2712, line: 239, baseType: !12, size: 16, offset: 2128)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3938, file: !2712, line: 240, baseType: !29, size: 32, offset: 2144)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !3938, file: !2712, line: 241, baseType: !29, size: 32, offset: 2176)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3938, file: !2712, line: 241, baseType: !29, size: 32, offset: 2208)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3938, file: !2712, line: 241, baseType: !29, size: 32, offset: 2240)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !3938, file: !2712, line: 243, baseType: !21, size: 32, offset: 2272)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !3938, file: !2712, line: 243, baseType: !21, size: 32, offset: 2304)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3938, file: !2712, line: 244, baseType: !21, size: 32, offset: 2336)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3938, file: !2712, line: 246, baseType: !3008, size: 320, offset: 2368)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3938, file: !2712, line: 248, baseType: !3114, size: 64, offset: 2688)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3938, file: !2712, line: 249, baseType: !2776, size: 64, offset: 2752)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3938, file: !2712, line: 250, baseType: !3305, size: 64, offset: 2816)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3938, file: !2712, line: 251, baseType: !2710, size: 64, offset: 2880)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3938, file: !2712, line: 252, baseType: !3997, size: 64, offset: 2944)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !2712, line: 122, size: 1600, elements: !3999)
!3999 = !{!4000, !4001, !4002, !4006, !4007, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3998, file: !2712, line: 123, baseType: !2755, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3998, file: !2712, line: 124, baseType: !3305, size: 64, offset: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !3998, file: !2712, line: 125, baseType: !4003, size: 384, offset: 128)
!4003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4004, size: 384, elements: !3523)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !3352, line: 136, flags: DIFlagFwdDecl)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3998, file: !2712, line: 126, baseType: !2892, size: 512, offset: 512)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !3998, file: !2712, line: 127, baseType: !4008, size: 288, offset: 1024)
!4008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 288, elements: !4009)
!4009 = !{!2429, !2429}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3998, file: !2712, line: 128, baseType: !12, size: 16, offset: 1312)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3998, file: !2712, line: 128, baseType: !12, size: 16, offset: 1328)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3998, file: !2712, line: 129, baseType: !21, size: 32, offset: 1344)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3998, file: !2712, line: 129, baseType: !21, size: 32, offset: 1376)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !3998, file: !2712, line: 130, baseType: !21, size: 32, offset: 1408)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !3998, file: !2712, line: 131, baseType: !36, size: 32, offset: 1440)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !3998, file: !2712, line: 132, baseType: !12, size: 16, offset: 1472)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3998, file: !2712, line: 132, baseType: !12, size: 16, offset: 1488)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3998, file: !2712, line: 133, baseType: !29, size: 32, offset: 1504)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !3998, file: !2712, line: 133, baseType: !29, size: 32, offset: 1536)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3998, file: !2712, line: 134, baseType: !12, size: 16, offset: 1568)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !3998, file: !2712, line: 134, baseType: !12, size: 16, offset: 1584)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3938, file: !2712, line: 253, baseType: !3098, size: 64, offset: 3008)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3938, file: !2712, line: 254, baseType: !4024, size: 64, offset: 3072)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !2712, line: 137, size: 832, elements: !4026)
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4025, file: !2712, line: 138, baseType: !12, size: 16)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !4025, file: !2712, line: 140, baseType: !12, size: 16, offset: 16)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !4025, file: !2712, line: 141, baseType: !21, size: 32, offset: 32)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4025, file: !2712, line: 142, baseType: !21, size: 32, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4025, file: !2712, line: 143, baseType: !12, size: 16, offset: 96)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !4025, file: !2712, line: 144, baseType: !12, size: 16, offset: 112)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !4025, file: !2712, line: 145, baseType: !29, size: 32, offset: 128)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !4025, file: !2712, line: 147, baseType: !29, size: 32, offset: 160)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4025, file: !2712, line: 149, baseType: !2755, size: 64, offset: 192)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !4025, file: !2712, line: 150, baseType: !29, size: 32, offset: 256)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !4025, file: !2712, line: 151, baseType: !12, size: 16, offset: 288)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !4025, file: !2712, line: 152, baseType: !12, size: 16, offset: 304)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !4025, file: !2712, line: 154, baseType: !79, size: 64, offset: 320)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !4025, file: !2712, line: 155, baseType: !31, size: 64, offset: 384)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !4025, file: !2712, line: 157, baseType: !21, size: 32, offset: 448)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !4025, file: !2712, line: 158, baseType: !12, size: 16, offset: 480)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !4025, file: !2712, line: 159, baseType: !12, size: 16, offset: 496)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !4025, file: !2712, line: 160, baseType: !12, size: 16, offset: 512)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !4025, file: !2712, line: 161, baseType: !3832, size: 48, offset: 528)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !4025, file: !2712, line: 162, baseType: !21, size: 32, offset: 576)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !4025, file: !2712, line: 164, baseType: !21, size: 32, offset: 608)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !4025, file: !2712, line: 164, baseType: !21, size: 32, offset: 640)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !4025, file: !2712, line: 164, baseType: !21, size: 32, offset: 672)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !4025, file: !2712, line: 165, baseType: !2710, size: 64, offset: 704)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !4025, file: !2712, line: 167, baseType: !3536, size: 64, offset: 768)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3938, file: !2712, line: 255, baseType: !4053, size: 64, offset: 3136)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !2712, line: 170, size: 8704, elements: !4055)
!4055 = !{!4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !4054, file: !2712, line: 171, baseType: !3264, size: 96)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !4054, file: !2712, line: 172, baseType: !29, size: 32, offset: 96)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !4054, file: !2712, line: 173, baseType: !12, size: 16, offset: 128)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4054, file: !2712, line: 174, baseType: !12, size: 16, offset: 144)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !4054, file: !2712, line: 175, baseType: !12, size: 16, offset: 160)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !4054, file: !2712, line: 176, baseType: !12, size: 16, offset: 176)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !4054, file: !2712, line: 177, baseType: !12, size: 16, offset: 192)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4054, file: !2712, line: 178, baseType: !12, size: 16, offset: 208)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !4054, file: !2712, line: 179, baseType: !29, size: 32, offset: 224)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4054, file: !2712, line: 181, baseType: !2755, size: 64, offset: 256)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !4054, file: !2712, line: 182, baseType: !21, size: 32, offset: 320)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !4054, file: !2712, line: 183, baseType: !29, size: 32, offset: 352)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !4054, file: !2712, line: 184, baseType: !2547, size: 8192, offset: 384)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !4054, file: !2712, line: 187, baseType: !31, size: 64, offset: 8576)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !4054, file: !2712, line: 188, baseType: !29, size: 32, offset: 8640)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4054, file: !2712, line: 189, baseType: !29, size: 32, offset: 8672)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !3938, file: !2712, line: 256, baseType: !4073, size: 64, offset: 3200)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !2712, line: 193, size: 640, elements: !4075)
!4075 = !{!4076, !4077, !4078, !4079}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4074, file: !2712, line: 194, baseType: !2755, size: 64)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !4074, file: !2712, line: 195, baseType: !2575, size: 512, offset: 64)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !4074, file: !2712, line: 197, baseType: !29, size: 32, offset: 576)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4074, file: !2712, line: 198, baseType: !29, size: 32, offset: 608)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3938, file: !2712, line: 258, baseType: !26, size: 8, offset: 3264)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3938, file: !2712, line: 259, baseType: !3358, size: 56, offset: 3272)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2748, file: !2712, line: 62, baseType: !2575, size: 512, offset: 192)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !2748, file: !2712, line: 64, baseType: !26, size: 8, offset: 704)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !2748, file: !2712, line: 64, baseType: !26, size: 8, offset: 712)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !2748, file: !2712, line: 64, baseType: !26, size: 8, offset: 720)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !2748, file: !2712, line: 64, baseType: !26, size: 8, offset: 728)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2748, file: !2712, line: 65, baseType: !2427, size: 96, offset: 736)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2748, file: !2712, line: 65, baseType: !2427, size: 96, offset: 832)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2748, file: !2712, line: 65, baseType: !21, size: 32, offset: 928)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2748, file: !2712, line: 67, baseType: !12, size: 16, offset: 960)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2748, file: !2712, line: 67, baseType: !12, size: 16, offset: 976)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !2748, file: !2712, line: 67, baseType: !12, size: 16, offset: 992)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !2748, file: !2712, line: 67, baseType: !12, size: 16, offset: 1008)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !2748, file: !2712, line: 68, baseType: !12, size: 16, offset: 1024)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !2748, file: !2712, line: 68, baseType: !12, size: 16, offset: 1040)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !2748, file: !2712, line: 69, baseType: !26, size: 8, offset: 1056)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2748, file: !2712, line: 69, baseType: !3358, size: 56, offset: 1064)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2748, file: !2712, line: 70, baseType: !21, size: 32, offset: 1120)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2748, file: !2712, line: 70, baseType: !21, size: 32, offset: 1152)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2748, file: !2712, line: 70, baseType: !21, size: 32, offset: 1184)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2748, file: !2712, line: 70, baseType: !21, size: 32, offset: 1216)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !2748, file: !2712, line: 71, baseType: !21, size: 32, offset: 1248)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2748, file: !2712, line: 71, baseType: !21, size: 32, offset: 1280)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !2748, file: !2712, line: 74, baseType: !21, size: 32, offset: 1312)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !2748, file: !2712, line: 74, baseType: !21, size: 32, offset: 1344)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !2748, file: !2712, line: 77, baseType: !21, size: 32, offset: 1376)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !2748, file: !2712, line: 77, baseType: !21, size: 32, offset: 1408)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !2748, file: !2712, line: 77, baseType: !21, size: 32, offset: 1440)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !2748, file: !2712, line: 78, baseType: !21, size: 32, offset: 1472)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !2748, file: !2712, line: 78, baseType: !21, size: 32, offset: 1504)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !2748, file: !2712, line: 78, baseType: !21, size: 32, offset: 1536)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !2748, file: !2712, line: 79, baseType: !21, size: 32, offset: 1568)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !2748, file: !2712, line: 79, baseType: !21, size: 32, offset: 1600)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !2748, file: !2712, line: 79, baseType: !21, size: 32, offset: 1632)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !2748, file: !2712, line: 79, baseType: !21, size: 32, offset: 1664)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !2748, file: !2712, line: 80, baseType: !21, size: 32, offset: 1696)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !2748, file: !2712, line: 80, baseType: !21, size: 32, offset: 1728)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !2748, file: !2712, line: 80, baseType: !21, size: 32, offset: 1760)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !2748, file: !2712, line: 81, baseType: !21, size: 32, offset: 1792)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !2748, file: !2712, line: 81, baseType: !21, size: 32, offset: 1824)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !2748, file: !2712, line: 81, baseType: !21, size: 32, offset: 1856)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !2748, file: !2712, line: 82, baseType: !21, size: 32, offset: 1888)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !2748, file: !2712, line: 82, baseType: !21, size: 32, offset: 1920)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !2748, file: !2712, line: 82, baseType: !21, size: 32, offset: 1952)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !2748, file: !2712, line: 85, baseType: !21, size: 32, offset: 1984)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !2748, file: !2712, line: 85, baseType: !21, size: 32, offset: 2016)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !2748, file: !2712, line: 85, baseType: !21, size: 32, offset: 2048)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !2748, file: !2712, line: 85, baseType: !21, size: 32, offset: 2080)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !2748, file: !2712, line: 86, baseType: !21, size: 32, offset: 2112)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !2748, file: !2712, line: 86, baseType: !21, size: 32, offset: 2144)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !2748, file: !2712, line: 86, baseType: !21, size: 32, offset: 2176)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !2748, file: !2712, line: 86, baseType: !21, size: 32, offset: 2208)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !2748, file: !2712, line: 87, baseType: !21, size: 32, offset: 2240)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !2748, file: !2712, line: 87, baseType: !21, size: 32, offset: 2272)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !2748, file: !2712, line: 87, baseType: !21, size: 32, offset: 2304)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !2748, file: !2712, line: 87, baseType: !21, size: 32, offset: 2336)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !2748, file: !2712, line: 90, baseType: !21, size: 32, offset: 2368)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !2748, file: !2712, line: 93, baseType: !21, size: 32, offset: 2400)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !2748, file: !2712, line: 93, baseType: !21, size: 32, offset: 2432)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !2748, file: !2712, line: 93, baseType: !21, size: 32, offset: 2464)
!4141 = !{!4142}
!4142 = !DISubrange(count: 18)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2524, file: !2525, line: 168, baseType: !3114, size: 64, offset: 6144)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2524, file: !2525, line: 169, baseType: !2776, size: 64, offset: 6208)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2524, file: !2525, line: 170, baseType: !2965, size: 64, offset: 6272)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2524, file: !2525, line: 171, baseType: !3098, size: 64, offset: 6336)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2524, file: !2525, line: 174, baseType: !21, size: 32, offset: 6400)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !2524, file: !2525, line: 174, baseType: !21, size: 32, offset: 6432)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !2524, file: !2525, line: 174, baseType: !21, size: 32, offset: 6464)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !2524, file: !2525, line: 175, baseType: !21, size: 32, offset: 6496)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !2524, file: !2525, line: 175, baseType: !21, size: 32, offset: 6528)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !2524, file: !2525, line: 176, baseType: !12, size: 16, offset: 6560)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2524, file: !2525, line: 176, baseType: !12, size: 16, offset: 6576)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !2524, file: !2525, line: 179, baseType: !2427, size: 96, offset: 6592)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !2524, file: !2525, line: 179, baseType: !2427, size: 96, offset: 6688)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !2524, file: !2525, line: 180, baseType: !21, size: 32, offset: 6784)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !2524, file: !2525, line: 180, baseType: !21, size: 32, offset: 6816)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !2524, file: !2525, line: 180, baseType: !21, size: 32, offset: 6848)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !2524, file: !2525, line: 181, baseType: !21, size: 32, offset: 6880)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !2524, file: !2525, line: 181, baseType: !21, size: 32, offset: 6912)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !2524, file: !2525, line: 182, baseType: !21, size: 32, offset: 6944)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !2524, file: !2525, line: 182, baseType: !21, size: 32, offset: 6976)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !2524, file: !2525, line: 183, baseType: !12, size: 16, offset: 7008)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !2524, file: !2525, line: 183, baseType: !12, size: 16, offset: 7024)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !2524, file: !2525, line: 185, baseType: !29, size: 32, offset: 7040)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !2524, file: !2525, line: 186, baseType: !12, size: 16, offset: 7072)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2524, file: !2525, line: 187, baseType: !12, size: 16, offset: 7088)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !2524, file: !2525, line: 190, baseType: !176, size: 128, offset: 7104)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !2524, file: !2525, line: 191, baseType: !12, size: 16, offset: 7232)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !2524, file: !2525, line: 192, baseType: !12, size: 16, offset: 7248)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !2524, file: !2525, line: 195, baseType: !12, size: 16, offset: 7264)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !2524, file: !2525, line: 196, baseType: !12, size: 16, offset: 7280)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !2524, file: !2525, line: 197, baseType: !12, size: 16, offset: 7296)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2524, file: !2525, line: 198, baseType: !3832, size: 48, offset: 7312)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !2524, file: !2525, line: 200, baseType: !4176, size: 64, offset: 7360)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !2525, line: 86, size: 192, elements: !4178)
!4178 = !{!4179, !4180, !4181, !4182}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !4177, file: !2525, line: 87, baseType: !3305, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !4177, file: !2525, line: 88, baseType: !2874, size: 64, offset: 64)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4177, file: !2525, line: 89, baseType: !29, size: 32, offset: 128)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4177, file: !2525, line: 90, baseType: !29, size: 32, offset: 160)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !2524, file: !2525, line: 202, baseType: !370, size: 128, offset: 7424)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !2510, file: !2459, line: 94, baseType: !2965, size: 64, offset: 1024)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !2510, file: !2459, line: 96, baseType: !31, size: 64, offset: 1088)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !2510, file: !2459, line: 97, baseType: !31, size: 64, offset: 1152)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !2510, file: !2459, line: 98, baseType: !31, size: 64, offset: 1216)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !2510, file: !2459, line: 99, baseType: !81, size: 64, offset: 1280)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2510, file: !2459, line: 101, baseType: !29, size: 32, offset: 1344)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2510, file: !2459, line: 101, baseType: !29, size: 32, offset: 1376)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !2510, file: !2459, line: 104, baseType: !79, size: 64, offset: 1408)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !2510, file: !2459, line: 106, baseType: !370, size: 128, offset: 1472)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !2480, file: !2459, line: 137, baseType: !29, size: 32, offset: 960)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2480, file: !2459, line: 140, baseType: !29, size: 32, offset: 992)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !2480, file: !2459, line: 143, baseType: !29, size: 32, offset: 1024)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2480, file: !2459, line: 146, baseType: !2874, size: 64, offset: 1088)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !2460, file: !2461, line: 141, baseType: !2478, size: 64, offset: 960)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !2460, file: !2461, line: 143, baseType: !370, size: 128, offset: 1024)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !2460, file: !2461, line: 147, baseType: !4200, size: 32, offset: 1152)
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !4201, line: 148, baseType: !4202)
!4201 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4202 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !4203, line: 10, baseType: !4204)
!4203 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2985, line: 26, baseType: !4205)
!4205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !2987, line: 42, baseType: !36)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2460, file: !2461, line: 150, baseType: !29, size: 32, offset: 1184)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2460, file: !2461, line: 150, baseType: !29, size: 32, offset: 1216)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2460, file: !2461, line: 152, baseType: !2493, size: 128, offset: 1248)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !2460, file: !2461, line: 153, baseType: !3143, size: 128, offset: 1376)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !2460, file: !2461, line: 154, baseType: !21, size: 32, offset: 1504)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !2460, file: !2461, line: 154, baseType: !21, size: 32, offset: 1536)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !2460, file: !2461, line: 155, baseType: !21, size: 32, offset: 1568)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2460, file: !2461, line: 158, baseType: !29, size: 32, offset: 1600)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2460, file: !2461, line: 158, baseType: !29, size: 32, offset: 1632)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !2460, file: !2461, line: 162, baseType: !29, size: 32, offset: 1664)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !2460, file: !2461, line: 162, baseType: !29, size: 32, offset: 1696)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !2460, file: !2461, line: 165, baseType: !21, size: 32, offset: 1728)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !2460, file: !2461, line: 167, baseType: !21, size: 32, offset: 1760)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !2460, file: !2461, line: 167, baseType: !21, size: 32, offset: 1792)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !2460, file: !2461, line: 167, baseType: !21, size: 32, offset: 1824)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !2460, file: !2461, line: 167, baseType: !21, size: 32, offset: 1856)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !2460, file: !2461, line: 167, baseType: !21, size: 32, offset: 1888)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !2460, file: !2461, line: 170, baseType: !2427, size: 96, offset: 1920)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2460, file: !2461, line: 171, baseType: !4008, size: 288, offset: 2016)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2460, file: !2461, line: 172, baseType: !2892, size: 512, offset: 2304)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2460, file: !2461, line: 172, baseType: !2892, size: 512, offset: 2816)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !2460, file: !2461, line: 173, baseType: !2892, size: 512, offset: 3328)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2460, file: !2461, line: 174, baseType: !2892, size: 512, offset: 3840)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2460, file: !2461, line: 177, baseType: !21, size: 32, offset: 4352)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2460, file: !2461, line: 178, baseType: !21, size: 32, offset: 4384)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2460, file: !2461, line: 181, baseType: !4232, size: 64, offset: 4416)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !2461, line: 77, baseType: !4234)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !2461, line: 72, size: 3776, elements: !4235)
!4235 = !{!4236, !4240, !4244, !4245, !4248}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !4234, file: !2461, line: 73, baseType: !4237, size: 512)
!4237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 512, elements: !4238)
!4238 = !{!4239}
!4239 = !DISubrange(count: 16)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !4234, file: !2461, line: 74, baseType: !4241, size: 576, offset: 512)
!4241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 576, elements: !4242)
!4242 = !{!4243}
!4243 = !DISubrange(count: 9)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !4234, file: !2461, line: 74, baseType: !4241, size: 576, offset: 1088)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !4234, file: !2461, line: 75, baseType: !4246, size: 2048, offset: 1664)
!4246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 2048, elements: !4247)
!4247 = !{!111}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !4234, file: !2461, line: 75, baseType: !2874, size: 64, offset: 3712)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !2460, file: !2461, line: 182, baseType: !4250, size: 2048, offset: 4480)
!4250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2048, elements: !4251)
!4251 = !{!2735, !112}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !2460, file: !2461, line: 183, baseType: !4250, size: 2048, offset: 6528)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !2460, file: !2461, line: 184, baseType: !369, size: 64, offset: 8576)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !2460, file: !2461, line: 187, baseType: !4255, size: 32, offset: 8640)
!4255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 32, elements: !2721)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2460, file: !2461, line: 190, baseType: !4257, size: 64, offset: 8704)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !4259, line: 53, size: 15232, elements: !4260)
!4259 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4260 = !{!4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4311}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4258, file: !4259, line: 54, baseType: !4257, size: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4258, file: !4259, line: 54, baseType: !4257, size: 64, offset: 64)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4258, file: !4259, line: 55, baseType: !2547, size: 8192, offset: 128)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !4258, file: !4259, line: 56, baseType: !12, size: 16, offset: 8320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !4258, file: !4259, line: 56, baseType: !12, size: 16, offset: 8336)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !4258, file: !4259, line: 57, baseType: !12, size: 16, offset: 8352)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !4258, file: !4259, line: 57, baseType: !12, size: 16, offset: 8368)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !4258, file: !4259, line: 58, baseType: !2984, size: 64, offset: 8384)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !4258, file: !4259, line: 59, baseType: !4270, size: 128, offset: 8448)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 128, elements: !4238)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !4258, file: !4259, line: 60, baseType: !12, size: 16, offset: 8576)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !4258, file: !4259, line: 62, baseType: !2537, size: 64, offset: 8640)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4258, file: !4259, line: 63, baseType: !370, size: 128, offset: 8704)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !4258, file: !4259, line: 64, baseType: !370, size: 128, offset: 8832)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4258, file: !4259, line: 65, baseType: !370, size: 128, offset: 8960)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !4258, file: !4259, line: 66, baseType: !370, size: 128, offset: 9088)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !4258, file: !4259, line: 67, baseType: !370, size: 128, offset: 9216)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !4258, file: !4259, line: 68, baseType: !370, size: 128, offset: 9344)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4258, file: !4259, line: 69, baseType: !370, size: 128, offset: 9472)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !4258, file: !4259, line: 70, baseType: !370, size: 128, offset: 9600)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4258, file: !4259, line: 71, baseType: !370, size: 128, offset: 9728)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !4258, file: !4259, line: 72, baseType: !370, size: 128, offset: 9856)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !4258, file: !4259, line: 73, baseType: !370, size: 128, offset: 9984)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4258, file: !4259, line: 74, baseType: !370, size: 128, offset: 10112)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4258, file: !4259, line: 75, baseType: !370, size: 128, offset: 10240)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4258, file: !4259, line: 76, baseType: !370, size: 128, offset: 10368)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !4258, file: !4259, line: 77, baseType: !370, size: 128, offset: 10496)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !4258, file: !4259, line: 78, baseType: !370, size: 128, offset: 10624)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !4258, file: !4259, line: 79, baseType: !370, size: 128, offset: 10752)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !4258, file: !4259, line: 80, baseType: !370, size: 128, offset: 10880)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4258, file: !4259, line: 81, baseType: !370, size: 128, offset: 11008)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !4258, file: !4259, line: 82, baseType: !370, size: 128, offset: 11136)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !4258, file: !4259, line: 83, baseType: !370, size: 128, offset: 11264)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4258, file: !4259, line: 84, baseType: !370, size: 128, offset: 11392)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !4258, file: !4259, line: 85, baseType: !370, size: 128, offset: 11520)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4258, file: !4259, line: 86, baseType: !370, size: 128, offset: 11648)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4258, file: !4259, line: 87, baseType: !370, size: 128, offset: 11776)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !4258, file: !4259, line: 88, baseType: !370, size: 128, offset: 11904)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !4258, file: !4259, line: 89, baseType: !370, size: 128, offset: 12032)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !4258, file: !4259, line: 90, baseType: !370, size: 128, offset: 12160)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !4258, file: !4259, line: 91, baseType: !370, size: 128, offset: 12288)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !4258, file: !4259, line: 92, baseType: !370, size: 128, offset: 12416)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !4258, file: !4259, line: 93, baseType: !370, size: 128, offset: 12544)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !4258, file: !4259, line: 94, baseType: !370, size: 128, offset: 12672)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4258, file: !4259, line: 95, baseType: !370, size: 128, offset: 12800)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !4258, file: !4259, line: 96, baseType: !370, size: 128, offset: 12928)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !4258, file: !4259, line: 98, baseType: !4246, size: 2048, offset: 13056)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !4258, file: !4259, line: 101, baseType: !4309, size: 64, offset: 15104)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !4259, line: 49, flags: DIFlagFwdDecl)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4258, file: !4259, line: 103, baseType: !4312, size: 64, offset: 15168)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !4259, line: 51, flags: DIFlagFwdDecl)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2460, file: !2461, line: 191, baseType: !4315, size: 64, offset: 8768)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !44, line: 1299, baseType: !3012)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2460, file: !2461, line: 192, baseType: !4318, size: 31872, offset: 8832)
!4318 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !44, line: 611, baseType: !3503)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !2460, file: !2461, line: 193, baseType: !4320, size: 4224, offset: 40704)
!4320 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !3020, line: 131, baseType: !3019)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !2460, file: !2461, line: 194, baseType: !2755, size: 64, offset: 44928)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2460, file: !2461, line: 195, baseType: !36, size: 32, offset: 44992)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !2460, file: !2461, line: 195, baseType: !36, size: 32, offset: 45024)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !2460, file: !2461, line: 197, baseType: !370, size: 128, offset: 45056)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2460, file: !2461, line: 200, baseType: !4326, size: 64, offset: 45184)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2461, line: 65, flags: DIFlagFwdDecl)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2460, file: !2461, line: 203, baseType: !4329, size: 64, offset: 45248)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !2461, line: 63, flags: DIFlagFwdDecl)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2460, file: !2461, line: 204, baseType: !4332, size: 64, offset: 45312)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !2461, line: 64, flags: DIFlagFwdDecl)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2460, file: !2461, line: 205, baseType: !4335, size: 64, offset: 45376)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !2461, line: 205, flags: DIFlagFwdDecl)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !2460, file: !2461, line: 206, baseType: !21, size: 32, offset: 45440)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !2460, file: !2461, line: 209, baseType: !79, size: 64, offset: 45504)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !2460, file: !2461, line: 210, baseType: !370, size: 128, offset: 45568)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !2460, file: !2461, line: 213, baseType: !21, size: 32, offset: 45696)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !2460, file: !2461, line: 213, baseType: !21, size: 32, offset: 45728)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2460, file: !2461, line: 216, baseType: !29, size: 32, offset: 45760)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2460, file: !2461, line: 216, baseType: !29, size: 32, offset: 45792)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2460, file: !2461, line: 216, baseType: !29, size: 32, offset: 45824)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2460, file: !2461, line: 216, baseType: !29, size: 32, offset: 45856)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2460, file: !2461, line: 216, baseType: !29, size: 32, offset: 45888)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !2460, file: !2461, line: 217, baseType: !4348, size: 64, offset: 45952)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !2461, line: 413, size: 1024, elements: !4351)
!4351 = !{!4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !4350, file: !2461, line: 414, baseType: !12, size: 16)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !4350, file: !2461, line: 414, baseType: !12, size: 16, offset: 16)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 96)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 128)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 160)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 192)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !4350, file: !2461, line: 415, baseType: !21, size: 32, offset: 224)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4350, file: !2461, line: 415, baseType: !2427, size: 96, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4350, file: !2461, line: 415, baseType: !2427, size: 96, offset: 352)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !4350, file: !2461, line: 416, baseType: !21, size: 32, offset: 448)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4350, file: !2461, line: 416, baseType: !21, size: 32, offset: 480)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4350, file: !2461, line: 416, baseType: !21, size: 32, offset: 512)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4350, file: !2461, line: 416, baseType: !21, size: 32, offset: 544)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !4350, file: !2461, line: 417, baseType: !29, size: 32, offset: 576)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !4350, file: !2461, line: 417, baseType: !29, size: 32, offset: 608)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !4350, file: !2461, line: 418, baseType: !29, size: 32, offset: 640)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !4350, file: !2461, line: 419, baseType: !26, size: 8, offset: 672)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4350, file: !2461, line: 419, baseType: !26, size: 8, offset: 680)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4350, file: !2461, line: 419, baseType: !26, size: 8, offset: 688)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !4350, file: !2461, line: 419, baseType: !26, size: 8, offset: 696)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !4350, file: !2461, line: 420, baseType: !26, size: 8, offset: 704)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !4350, file: !2461, line: 420, baseType: !26, size: 8, offset: 712)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !4350, file: !2461, line: 420, baseType: !26, size: 8, offset: 720)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !4350, file: !2461, line: 421, baseType: !12, size: 16, offset: 736)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !4350, file: !2461, line: 422, baseType: !21, size: 32, offset: 768)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !4350, file: !2461, line: 423, baseType: !29, size: 32, offset: 800)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4350, file: !2461, line: 424, baseType: !36, size: 32, offset: 832)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4350, file: !2461, line: 425, baseType: !2523, size: 64, offset: 896)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4350, file: !2461, line: 426, baseType: !4383, size: 64, offset: 960)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2981, line: 41, flags: DIFlagFwdDecl)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !2460, file: !2461, line: 219, baseType: !370, size: 128, offset: 46016)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !2460, file: !2461, line: 220, baseType: !370, size: 128, offset: 46144)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !2460, file: !2461, line: 222, baseType: !370, size: 128, offset: 46272)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !2460, file: !2461, line: 224, baseType: !4389, size: 64, offset: 46400)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !2461, line: 345, size: 2304, elements: !4391)
!4391 = !{!4392, !4393, !4394, !4587, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4611, !4612, !4613, !4614}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4390, file: !2461, line: 346, baseType: !4389, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4390, file: !2461, line: 346, baseType: !4389, size: 64, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !4390, file: !2461, line: 348, baseType: !4395, size: 64, offset: 128)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !2461, line: 343, baseType: !4397)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !2461, line: 315, size: 2240, elements: !4398)
!4398 = !{!4399, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4441, !4496, !4574, !4575, !4576, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4397, file: !2461, line: 316, baseType: !4400, size: 64)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4397, file: !2461, line: 316, baseType: !4400, size: 64, offset: 64)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4397, file: !2461, line: 317, baseType: !2755, size: 64, offset: 128)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !4397, file: !2461, line: 317, baseType: !2755, size: 64, offset: 192)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !4397, file: !2461, line: 318, baseType: !3011, size: 64, offset: 256)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4397, file: !2461, line: 319, baseType: !29, size: 32, offset: 320)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !4397, file: !2461, line: 319, baseType: !29, size: 32, offset: 352)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4397, file: !2461, line: 319, baseType: !29, size: 32, offset: 384)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4397, file: !2461, line: 319, baseType: !29, size: 32, offset: 416)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !4397, file: !2461, line: 321, baseType: !4410, size: 192, offset: 448)
!4410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 192, elements: !4411)
!4411 = !{!112, !2429}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4397, file: !2461, line: 323, baseType: !29, size: 32, offset: 640)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !4397, file: !2461, line: 323, baseType: !29, size: 32, offset: 672)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !4397, file: !2461, line: 323, baseType: !29, size: 32, offset: 704)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !4397, file: !2461, line: 323, baseType: !29, size: 32, offset: 736)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !4397, file: !2461, line: 324, baseType: !29, size: 32, offset: 768)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !4397, file: !2461, line: 324, baseType: !29, size: 32, offset: 800)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !4397, file: !2461, line: 324, baseType: !29, size: 32, offset: 832)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !4397, file: !2461, line: 324, baseType: !29, size: 32, offset: 864)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !4397, file: !2461, line: 325, baseType: !4421, size: 64, offset: 896)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !4423, line: 60, size: 448, elements: !4424)
!4423 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4424 = !{!4425, !4435, !4436, !4437, !4438, !4439, !4440}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4422, file: !4423, line: 61, baseType: !4426, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !2461, line: 372, size: 384, elements: !4428)
!4428 = !{!4429, !4430, !4431, !4432, !4433, !4434}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4427, file: !2461, line: 373, baseType: !2427, size: 96)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4427, file: !2461, line: 374, baseType: !2427, size: 96, offset: 96)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !4427, file: !2461, line: 375, baseType: !31, size: 64, offset: 192)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4427, file: !2461, line: 376, baseType: !36, size: 32, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !4427, file: !2461, line: 378, baseType: !21, size: 32, offset: 288)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4427, file: !2461, line: 379, baseType: !29, size: 32, offset: 320)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !4422, file: !4423, line: 62, baseType: !31, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !4422, file: !4423, line: 63, baseType: !31, size: 64, offset: 128)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !4422, file: !4423, line: 64, baseType: !31, size: 64, offset: 192)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !4422, file: !4423, line: 65, baseType: !31, size: 64, offset: 256)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !4422, file: !4423, line: 66, baseType: !31, size: 64, offset: 320)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !4422, file: !4423, line: 68, baseType: !81, size: 64, offset: 384)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !4397, file: !2461, line: 326, baseType: !4442, size: 64, offset: 960)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !4423, line: 71, size: 512, elements: !4444)
!4444 = !{!4445, !4459, !4472, !4480, !4481, !4482, !4483, !4484, !4485}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !4443, file: !4423, line: 72, baseType: !4446, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !2461, line: 400, size: 512, elements: !4448)
!4448 = !{!4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4447, file: !2461, line: 401, baseType: !4426, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4447, file: !2461, line: 401, baseType: !4426, size: 64, offset: 64)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4447, file: !2461, line: 401, baseType: !4426, size: 64, offset: 128)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4447, file: !2461, line: 401, baseType: !4426, size: 64, offset: 192)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4447, file: !2461, line: 402, baseType: !2427, size: 96, offset: 256)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4447, file: !2461, line: 403, baseType: !2523, size: 64, offset: 384)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !4447, file: !2461, line: 404, baseType: !26, size: 8, offset: 448)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4447, file: !2461, line: 405, baseType: !26, size: 8, offset: 456)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !4447, file: !2461, line: 405, baseType: !26, size: 8, offset: 464)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4447, file: !2461, line: 410, baseType: !29, size: 32, offset: 480)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !4443, file: !4423, line: 73, baseType: !4460, size: 64, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !35, line: 160, size: 384, elements: !4462)
!4462 = !{!4463, !4466, !4467, !4468, !4469, !4470, !4471}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4461, file: !35, line: 161, baseType: !4464, size: 256)
!4464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 256, elements: !4465)
!4465 = !{!155, !112}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4461, file: !35, line: 162, baseType: !3305, size: 64, offset: 256)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4461, file: !35, line: 163, baseType: !26, size: 8, offset: 320)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4461, file: !35, line: 163, baseType: !26, size: 8, offset: 328)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4461, file: !35, line: 164, baseType: !12, size: 16, offset: 336)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4461, file: !35, line: 164, baseType: !12, size: 16, offset: 352)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !4461, file: !35, line: 164, baseType: !12, size: 16, offset: 368)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4443, file: !4423, line: 74, baseType: !4473, size: 64, offset: 128)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !35, line: 74, size: 32, elements: !4475)
!4475 = !{!4476, !4477, !4478, !4479}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4474, file: !35, line: 75, baseType: !26, size: 8)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4474, file: !35, line: 75, baseType: !26, size: 8, offset: 8)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4474, file: !35, line: 75, baseType: !26, size: 8, offset: 16)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4474, file: !35, line: 75, baseType: !26, size: 8, offset: 24)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !4443, file: !4423, line: 76, baseType: !81, size: 64, offset: 192)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !4443, file: !4423, line: 77, baseType: !29, size: 32, offset: 256)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !4443, file: !4423, line: 77, baseType: !29, size: 32, offset: 288)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !4443, file: !4423, line: 78, baseType: !31, size: 64, offset: 320)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !4443, file: !4423, line: 79, baseType: !31, size: 64, offset: 384)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !4443, file: !4423, line: 80, baseType: !4486, size: 64, offset: 448)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !2461, line: 394, size: 448, elements: !4489)
!4489 = !{!4490, !4491, !4492, !4493, !4494, !4495}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !4488, file: !2461, line: 395, baseType: !2427, size: 96)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !4488, file: !2461, line: 395, baseType: !2427, size: 96, offset: 96)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !4488, file: !2461, line: 396, baseType: !2427, size: 96, offset: 192)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !4488, file: !2461, line: 396, baseType: !2427, size: 96, offset: 288)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !4488, file: !2461, line: 396, baseType: !21, size: 32, offset: 384)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4488, file: !2461, line: 397, baseType: !29, size: 32, offset: 416)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !4397, file: !2461, line: 327, baseType: !4497, size: 64, offset: 1024)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !4423, line: 83, size: 512, elements: !4499)
!4499 = !{!4500, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !4498, file: !4423, line: 84, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !2461, line: 475, size: 384, elements: !4503)
!4503 = !{!4504, !4511, !4561, !4562, !4563, !4564, !4565}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4502, file: !2461, line: 476, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !2461, line: 434, baseType: !4507)
!4507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !2461, line: 431, size: 128, elements: !4508)
!4508 = !{!4509, !4510}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4507, file: !2461, line: 432, baseType: !2427, size: 96)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !4507, file: !2461, line: 433, baseType: !21, size: 32, offset: 96)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4502, file: !2461, line: 477, baseType: !4512, size: 64, offset: 64)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !2461, line: 473, baseType: !4514)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !2461, line: 455, size: 1344, elements: !4515)
!4515 = !{!4516, !4518, !4519, !4521, !4528, !4529, !4530, !4531, !4532, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4514, file: !2461, line: 456, baseType: !4517, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4514, file: !2461, line: 456, baseType: !4517, size: 64, offset: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4514, file: !2461, line: 457, baseType: !4520, size: 64, offset: 128)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !4514, file: !2461, line: 458, baseType: !4522, size: 64, offset: 192)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !2461, line: 450, size: 256, elements: !4524)
!4524 = !{!4525, !4526, !4527}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4523, file: !2461, line: 451, baseType: !29, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4523, file: !2461, line: 451, baseType: !29, size: 32, offset: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !4523, file: !2461, line: 452, baseType: !4410, size: 192, offset: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4514, file: !2461, line: 459, baseType: !29, size: 32, offset: 256)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !4514, file: !2461, line: 459, baseType: !29, size: 32, offset: 288)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !4514, file: !2461, line: 461, baseType: !4400, size: 64, offset: 320)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !4514, file: !2461, line: 462, baseType: !2523, size: 64, offset: 384)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !4514, file: !2461, line: 463, baseType: !4533, size: 64, offset: 448)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !2461, line: 436, size: 2880, elements: !4535)
!4535 = !{!4536, !4537, !4538, !4539, !4541, !4543, !4544, !4545, !4546, !4547, !4548, !4549}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4534, file: !2461, line: 437, baseType: !4533, size: 64)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4534, file: !2461, line: 437, baseType: !4533, size: 64, offset: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !4534, file: !2461, line: 438, baseType: !4396, size: 2240, offset: 128)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !4534, file: !2461, line: 439, baseType: !4540, size: 64, offset: 2368)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4534, file: !2461, line: 440, baseType: !4542, size: 64, offset: 2432)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !4534, file: !2461, line: 442, baseType: !4542, size: 64, offset: 2496)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !4534, file: !2461, line: 443, baseType: !4542, size: 64, offset: 2560)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !4534, file: !2461, line: 444, baseType: !4542, size: 64, offset: 2624)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !4534, file: !2461, line: 446, baseType: !4542, size: 64, offset: 2688)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !4534, file: !2461, line: 446, baseType: !4542, size: 64, offset: 2752)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4534, file: !2461, line: 447, baseType: !29, size: 32, offset: 2816)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4534, file: !2461, line: 447, baseType: !29, size: 32, offset: 2848)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4514, file: !2461, line: 464, baseType: !36, size: 32, offset: 512)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !4514, file: !2461, line: 465, baseType: !29, size: 32, offset: 544)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4514, file: !2461, line: 466, baseType: !29, size: 32, offset: 576)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !4514, file: !2461, line: 466, baseType: !29, size: 32, offset: 608)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !4514, file: !2461, line: 467, baseType: !21, size: 32, offset: 640)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !4514, file: !2461, line: 467, baseType: !21, size: 32, offset: 672)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !4514, file: !2461, line: 467, baseType: !21, size: 32, offset: 704)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !4514, file: !2461, line: 469, baseType: !21, size: 32, offset: 736)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4514, file: !2461, line: 471, baseType: !2892, size: 512, offset: 768)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4514, file: !2461, line: 472, baseType: !29, size: 32, offset: 1280)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4514, file: !2461, line: 472, baseType: !29, size: 32, offset: 1312)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4502, file: !2461, line: 478, baseType: !29, size: 32, offset: 128)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4502, file: !2461, line: 478, baseType: !29, size: 32, offset: 160)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4502, file: !2461, line: 479, baseType: !29, size: 32, offset: 192)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4502, file: !2461, line: 479, baseType: !29, size: 32, offset: 224)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !4502, file: !2461, line: 480, baseType: !2427, size: 96, offset: 256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !4498, file: !4423, line: 85, baseType: !31, size: 64, offset: 64)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !4498, file: !4423, line: 86, baseType: !31, size: 64, offset: 128)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !4498, file: !4423, line: 87, baseType: !31, size: 64, offset: 192)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !4498, file: !4423, line: 88, baseType: !81, size: 64, offset: 256)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4498, file: !4423, line: 89, baseType: !4473, size: 64, offset: 320)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4498, file: !4423, line: 90, baseType: !31, size: 64, offset: 384)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !4498, file: !4423, line: 91, baseType: !29, size: 32, offset: 448)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !4498, file: !4423, line: 91, baseType: !29, size: 32, offset: 480)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !4397, file: !2461, line: 328, baseType: !4348, size: 64, offset: 1088)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !4397, file: !2461, line: 329, baseType: !4517, size: 64, offset: 1152)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !4397, file: !2461, line: 331, baseType: !4577, size: 64, offset: 1216)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4397, file: !2461, line: 332, baseType: !4577, size: 64, offset: 1280)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !4397, file: !2461, line: 333, baseType: !29, size: 32, offset: 1344)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !4397, file: !2461, line: 333, baseType: !29, size: 32, offset: 1376)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !4397, file: !2461, line: 333, baseType: !29, size: 32, offset: 1408)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !4397, file: !2461, line: 335, baseType: !2892, size: 512, offset: 1440)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !4397, file: !2461, line: 338, baseType: !4329, size: 64, offset: 1984)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !4397, file: !2461, line: 339, baseType: !4332, size: 64, offset: 2048)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !4397, file: !2461, line: 340, baseType: !4335, size: 64, offset: 2112)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !4397, file: !2461, line: 341, baseType: !4389, size: 64, offset: 2176)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4390, file: !2461, line: 349, baseType: !4588, size: 64, offset: 192)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !2757, line: 295, baseType: !2756)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !4390, file: !2461, line: 349, baseType: !4588, size: 64, offset: 256)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4390, file: !2461, line: 350, baseType: !29, size: 32, offset: 320)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !4390, file: !2461, line: 350, baseType: !29, size: 32, offset: 352)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4390, file: !2461, line: 350, baseType: !29, size: 32, offset: 384)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4390, file: !2461, line: 352, baseType: !2892, size: 512, offset: 416)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !4390, file: !2461, line: 352, baseType: !2892, size: 512, offset: 928)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !4390, file: !2461, line: 353, baseType: !4008, size: 288, offset: 1440)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4390, file: !2461, line: 354, baseType: !12, size: 16, offset: 1728)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !4390, file: !2461, line: 356, baseType: !2427, size: 96, offset: 1760)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !4390, file: !2461, line: 356, baseType: !3002, size: 64, offset: 1856)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !4390, file: !2461, line: 357, baseType: !2281, size: 64, offset: 1920)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !4390, file: !2461, line: 359, baseType: !4602, size: 64, offset: 1984)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !2461, line: 513, size: 448, elements: !4604)
!4604 = !{!4605, !4606, !4607, !4608, !4609, !4610}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !4603, file: !2461, line: 514, baseType: !3264, size: 96)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !4603, file: !2461, line: 515, baseType: !31, size: 64, offset: 128)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !4603, file: !2461, line: 515, baseType: !31, size: 64, offset: 192)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !4603, file: !2461, line: 516, baseType: !31, size: 64, offset: 256)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !4603, file: !2461, line: 517, baseType: !31, size: 64, offset: 320)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !4603, file: !2461, line: 518, baseType: !31, size: 64, offset: 384)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !4390, file: !2461, line: 361, baseType: !31, size: 64, offset: 2048)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !4390, file: !2461, line: 362, baseType: !29, size: 32, offset: 2112)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !4390, file: !2461, line: 365, baseType: !4329, size: 64, offset: 2176)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !4390, file: !2461, line: 366, baseType: !29, size: 32, offset: 2240)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !2460, file: !2461, line: 225, baseType: !370, size: 128, offset: 46464)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !2460, file: !2461, line: 226, baseType: !29, size: 32, offset: 46592)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !2460, file: !2461, line: 228, baseType: !3305, size: 64, offset: 46656)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !2460, file: !2461, line: 230, baseType: !2809, size: 64, offset: 46720)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !2460, file: !2461, line: 232, baseType: !2809, size: 64, offset: 46784)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !2460, file: !2461, line: 233, baseType: !369, size: 64, offset: 46848)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !2460, file: !2461, line: 234, baseType: !2523, size: 64, offset: 46912)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !2460, file: !2461, line: 236, baseType: !370, size: 128, offset: 46976)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !2460, file: !2461, line: 238, baseType: !2755, size: 64, offset: 47104)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !2460, file: !2461, line: 239, baseType: !370, size: 128, offset: 47168)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !2460, file: !2461, line: 240, baseType: !370, size: 128, offset: 47296)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !2460, file: !2461, line: 250, baseType: !4627, size: 64, offset: 47424)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2461, line: 57, flags: DIFlagFwdDecl)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !2460, file: !2461, line: 253, baseType: !4630, size: 64, offset: 47488)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !79, !2478}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !2460, file: !2461, line: 254, baseType: !79, size: 64, offset: 47552)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !2460, file: !2461, line: 255, baseType: !4630, size: 64, offset: 47616)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !2460, file: !2461, line: 256, baseType: !79, size: 64, offset: 47680)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !2460, file: !2461, line: 257, baseType: !4637, size: 64, offset: 47744)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{null, !79, !2478, !4640}
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !2460, file: !2461, line: 258, baseType: !79, size: 64, offset: 47808)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !2460, file: !2461, line: 259, baseType: !4643, size: 64, offset: 47872)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{null, !79, !3011}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !2460, file: !2461, line: 260, baseType: !79, size: 64, offset: 47936)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !2460, file: !2461, line: 262, baseType: !4648, size: 64, offset: 48000)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{null, !79, !4651}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !2459, line: 160, baseType: !4653)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !2459, line: 151, size: 1216, elements: !4654)
!4654 = !{!4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4674, !4675, !4676, !4677}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !4653, file: !2459, line: 152, baseType: !29, size: 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 96)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 128)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 160)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !4653, file: !2459, line: 153, baseType: !29, size: 32, offset: 192)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 224)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 240)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 256)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 272)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 288)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !4653, file: !2459, line: 154, baseType: !12, size: 16, offset: 304)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !4653, file: !2459, line: 155, baseType: !2476, size: 8, offset: 320)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !4653, file: !2459, line: 156, baseType: !80, size: 64, offset: 384)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !4653, file: !2459, line: 156, baseType: !80, size: 64, offset: 448)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !4653, file: !2459, line: 157, baseType: !4672, size: 64, offset: 512)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !4653, file: !2459, line: 157, baseType: !4672, size: 64, offset: 576)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !4653, file: !2459, line: 158, baseType: !2575, size: 512, offset: 640)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !4653, file: !2459, line: 159, baseType: !21, size: 32, offset: 1152)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !4653, file: !2459, line: 159, baseType: !21, size: 32, offset: 1184)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !2460, file: !2461, line: 263, baseType: !79, size: 64, offset: 48064)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2460, file: !2461, line: 264, baseType: !3165, size: 64, offset: 48128)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !2460, file: !2461, line: 265, baseType: !79, size: 64, offset: 48192)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !2460, file: !2461, line: 267, baseType: !4682, size: 64, offset: 48256)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{null, !79, !29}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !2460, file: !2461, line: 268, baseType: !79, size: 64, offset: 48320)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2460, file: !2461, line: 269, baseType: !3173, size: 64, offset: 48384)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !2460, file: !2461, line: 270, baseType: !79, size: 64, offset: 48448)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2460, file: !2461, line: 272, baseType: !4652, size: 1216, offset: 48512)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2460, file: !2461, line: 274, baseType: !4690, size: 64, offset: 49728)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !2459, line: 45, flags: DIFlagFwdDecl)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2460, file: !2461, line: 276, baseType: !4383, size: 64, offset: 49792)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2460, file: !2461, line: 277, baseType: !4309, size: 64, offset: 49856)
!4694 = !DILocalVariable(name: "re", arg: 1, scope: !2454, file: !3, line: 1830, type: !2457)
!4695 = !DILocation(line: 1830, column: 31, scope: !2454)
!4696 = !DILocalVariable(name: "winmat", arg: 2, scope: !2454, file: !3, line: 1830, type: !2281)
!4697 = !DILocation(line: 1830, column: 41, scope: !2454)
!4698 = !DILocation(line: 1832, column: 6, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 1832, column: 6)
!4700 = !DILocation(line: 1832, column: 10, scope: !4699)
!4701 = !DILocation(line: 1832, column: 12, scope: !4699)
!4702 = !DILocation(line: 1832, column: 17, scope: !4699)
!4703 = !DILocation(line: 1832, column: 6, scope: !2454)
!4704 = !DILocalVariable(name: "panomat", scope: !4705, file: !3, line: 1833, type: !2892)
!4705 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 1832, column: 31)
!4706 = !DILocation(line: 1833, column: 9, scope: !4705)
!4707 = !DILocation(line: 1835, column: 11, scope: !4705)
!4708 = !DILocation(line: 1835, column: 3, scope: !4705)
!4709 = !DILocation(line: 1837, column: 18, scope: !4705)
!4710 = !DILocation(line: 1837, column: 22, scope: !4705)
!4711 = !DILocation(line: 1837, column: 3, scope: !4705)
!4712 = !DILocation(line: 1837, column: 16, scope: !4705)
!4713 = !DILocation(line: 1838, column: 18, scope: !4705)
!4714 = !DILocation(line: 1838, column: 22, scope: !4705)
!4715 = !DILocation(line: 1838, column: 3, scope: !4705)
!4716 = !DILocation(line: 1838, column: 16, scope: !4705)
!4717 = !DILocation(line: 1839, column: 19, scope: !4705)
!4718 = !DILocation(line: 1839, column: 23, scope: !4705)
!4719 = !DILocation(line: 1839, column: 18, scope: !4705)
!4720 = !DILocation(line: 1839, column: 3, scope: !4705)
!4721 = !DILocation(line: 1839, column: 16, scope: !4705)
!4722 = !DILocation(line: 1840, column: 18, scope: !4705)
!4723 = !DILocation(line: 1840, column: 22, scope: !4705)
!4724 = !DILocation(line: 1840, column: 3, scope: !4705)
!4725 = !DILocation(line: 1840, column: 16, scope: !4705)
!4726 = !DILocation(line: 1842, column: 15, scope: !4705)
!4727 = !DILocation(line: 1842, column: 23, scope: !4705)
!4728 = !DILocation(line: 1842, column: 27, scope: !4705)
!4729 = !DILocation(line: 1842, column: 35, scope: !4705)
!4730 = !DILocation(line: 1842, column: 3, scope: !4705)
!4731 = !DILocation(line: 1843, column: 2, scope: !4705)
!4732 = !DILocation(line: 1845, column: 14, scope: !4699)
!4733 = !DILocation(line: 1845, column: 22, scope: !4699)
!4734 = !DILocation(line: 1845, column: 26, scope: !4699)
!4735 = !DILocation(line: 1845, column: 3, scope: !4699)
!4736 = !DILocation(line: 1846, column: 1, scope: !2454)
!4737 = distinct !DISubprogram(name: "zbufclip", scope: !3, file: !3, line: 1850, type: !4738, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{null, !120, !29, !29, !88, !88, !88, !461, !461, !461}
!4740 = !DILocalVariable(name: "zspan", arg: 1, scope: !4737, file: !3, line: 1850, type: !120)
!4741 = !DILocation(line: 1850, column: 22, scope: !4737)
!4742 = !DILocalVariable(name: "obi", arg: 2, scope: !4737, file: !3, line: 1850, type: !29)
!4743 = !DILocation(line: 1850, column: 33, scope: !4737)
!4744 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !4737, file: !3, line: 1850, type: !29)
!4745 = !DILocation(line: 1850, column: 42, scope: !4737)
!4746 = !DILocalVariable(name: "f1", arg: 4, scope: !4737, file: !3, line: 1851, type: !88)
!4747 = !DILocation(line: 1851, column: 27, scope: !4737)
!4748 = !DILocalVariable(name: "f2", arg: 5, scope: !4737, file: !3, line: 1851, type: !88)
!4749 = !DILocation(line: 1851, column: 46, scope: !4737)
!4750 = !DILocalVariable(name: "f3", arg: 6, scope: !4737, file: !3, line: 1851, type: !88)
!4751 = !DILocation(line: 1851, column: 65, scope: !4737)
!4752 = !DILocalVariable(name: "c1", arg: 7, scope: !4737, file: !3, line: 1852, type: !461)
!4753 = !DILocation(line: 1852, column: 25, scope: !4737)
!4754 = !DILocalVariable(name: "c2", arg: 8, scope: !4737, file: !3, line: 1852, type: !461)
!4755 = !DILocation(line: 1852, column: 39, scope: !4737)
!4756 = !DILocalVariable(name: "c3", arg: 9, scope: !4737, file: !3, line: 1852, type: !461)
!4757 = !DILocation(line: 1852, column: 53, scope: !4737)
!4758 = !DILocalVariable(name: "vlzp", scope: !4737, file: !3, line: 1854, type: !4759)
!4759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 6144, elements: !4760)
!4760 = !{!2735, !2429}
!4761 = !DILocation(line: 1854, column: 9, scope: !4737)
!4762 = !DILocalVariable(name: "lambda", scope: !4737, file: !3, line: 1854, type: !4763)
!4763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 192, elements: !4764)
!4764 = !{!2429, !112}
!4765 = !DILocation(line: 1854, column: 22, scope: !4737)
!4766 = !DILocalVariable(name: "vez", scope: !4737, file: !3, line: 1855, type: !4767)
!4767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 12800, elements: !4768)
!4768 = !{!4769}
!4769 = !DISubrange(count: 400)
!4770 = !DILocation(line: 1855, column: 8, scope: !4737)
!4771 = !DILocalVariable(name: "trias", scope: !4737, file: !3, line: 1855, type: !4772)
!4772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 2560, elements: !4773)
!4773 = !{!4774}
!4774 = !DISubrange(count: 40)
!4775 = !DILocation(line: 1855, column: 19, scope: !4737)
!4776 = !DILocation(line: 1857, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 1857, column: 6)
!4778 = !DILocation(line: 1857, column: 11, scope: !4777)
!4779 = !DILocation(line: 1857, column: 9, scope: !4777)
!4780 = !DILocation(line: 1857, column: 16, scope: !4777)
!4781 = !DILocation(line: 1857, column: 14, scope: !4777)
!4782 = !DILocation(line: 1857, column: 6, scope: !4737)
!4783 = !DILocation(line: 1858, column: 7, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 1858, column: 7)
!4785 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 1857, column: 20)
!4786 = !DILocation(line: 1858, column: 12, scope: !4784)
!4787 = !DILocation(line: 1858, column: 10, scope: !4784)
!4788 = !DILocation(line: 1858, column: 17, scope: !4784)
!4789 = !DILocation(line: 1858, column: 15, scope: !4784)
!4790 = !DILocation(line: 1858, column: 7, scope: !4785)
!4791 = !DILocation(line: 1859, column: 4, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 1858, column: 21)
!4793 = !DILocalVariable(name: "arg", scope: !4794, file: !3, line: 1862, type: !29)
!4794 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 1861, column: 8)
!4795 = !DILocation(line: 1862, column: 8, scope: !4794)
!4796 = !DILocalVariable(name: "v", scope: !4794, file: !3, line: 1862, type: !29)
!4797 = !DILocation(line: 1862, column: 13, scope: !4794)
!4798 = !DILocalVariable(name: "b", scope: !4794, file: !3, line: 1862, type: !29)
!4799 = !DILocation(line: 1862, column: 16, scope: !4794)
!4800 = !DILocalVariable(name: "clipflag", scope: !4794, file: !3, line: 1862, type: !3264)
!4801 = !DILocation(line: 1862, column: 19, scope: !4794)
!4802 = !DILocalVariable(name: "b1", scope: !4794, file: !3, line: 1862, type: !29)
!4803 = !DILocation(line: 1862, column: 32, scope: !4794)
!4804 = !DILocalVariable(name: "b2", scope: !4794, file: !3, line: 1862, type: !29)
!4805 = !DILocation(line: 1862, column: 36, scope: !4794)
!4806 = !DILocalVariable(name: "b3", scope: !4794, file: !3, line: 1862, type: !29)
!4807 = !DILocation(line: 1862, column: 40, scope: !4794)
!4808 = !DILocalVariable(name: "c4", scope: !4794, file: !3, line: 1862, type: !29)
!4809 = !DILocation(line: 1862, column: 44, scope: !4794)
!4810 = !DILocalVariable(name: "clve", scope: !4794, file: !3, line: 1862, type: !29)
!4811 = !DILocation(line: 1862, column: 48, scope: !4794)
!4812 = !DILocalVariable(name: "clvlo", scope: !4794, file: !3, line: 1862, type: !29)
!4813 = !DILocation(line: 1862, column: 56, scope: !4794)
!4814 = !DILocalVariable(name: "clvl", scope: !4794, file: !3, line: 1862, type: !29)
!4815 = !DILocation(line: 1862, column: 63, scope: !4794)
!4816 = !DILocalVariable(name: "fp", scope: !4794, file: !3, line: 1863, type: !31)
!4817 = !DILocation(line: 1863, column: 11, scope: !4794)
!4818 = !DILocation(line: 1865, column: 12, scope: !4794)
!4819 = !DILocation(line: 1865, column: 4, scope: !4794)
!4820 = !DILocation(line: 1865, column: 10, scope: !4794)
!4821 = !DILocation(line: 1865, column: 27, scope: !4794)
!4822 = !DILocation(line: 1865, column: 19, scope: !4794)
!4823 = !DILocation(line: 1865, column: 25, scope: !4794)
!4824 = !DILocation(line: 1865, column: 42, scope: !4794)
!4825 = !DILocation(line: 1865, column: 34, scope: !4794)
!4826 = !DILocation(line: 1865, column: 40, scope: !4794)
!4827 = !DILocation(line: 1865, column: 57, scope: !4794)
!4828 = !DILocation(line: 1865, column: 49, scope: !4794)
!4829 = !DILocation(line: 1865, column: 55, scope: !4794)
!4830 = !DILocation(line: 1866, column: 12, scope: !4794)
!4831 = !DILocation(line: 1866, column: 4, scope: !4794)
!4832 = !DILocation(line: 1866, column: 10, scope: !4794)
!4833 = !DILocation(line: 1866, column: 27, scope: !4794)
!4834 = !DILocation(line: 1866, column: 19, scope: !4794)
!4835 = !DILocation(line: 1866, column: 25, scope: !4794)
!4836 = !DILocation(line: 1866, column: 42, scope: !4794)
!4837 = !DILocation(line: 1866, column: 34, scope: !4794)
!4838 = !DILocation(line: 1866, column: 40, scope: !4794)
!4839 = !DILocation(line: 1866, column: 57, scope: !4794)
!4840 = !DILocation(line: 1866, column: 49, scope: !4794)
!4841 = !DILocation(line: 1866, column: 55, scope: !4794)
!4842 = !DILocation(line: 1867, column: 12, scope: !4794)
!4843 = !DILocation(line: 1867, column: 4, scope: !4794)
!4844 = !DILocation(line: 1867, column: 10, scope: !4794)
!4845 = !DILocation(line: 1867, column: 27, scope: !4794)
!4846 = !DILocation(line: 1867, column: 19, scope: !4794)
!4847 = !DILocation(line: 1867, column: 25, scope: !4794)
!4848 = !DILocation(line: 1867, column: 43, scope: !4794)
!4849 = !DILocation(line: 1867, column: 34, scope: !4794)
!4850 = !DILocation(line: 1867, column: 41, scope: !4794)
!4851 = !DILocation(line: 1867, column: 58, scope: !4794)
!4852 = !DILocation(line: 1867, column: 49, scope: !4794)
!4853 = !DILocation(line: 1867, column: 56, scope: !4794)
!4854 = !DILocation(line: 1869, column: 16, scope: !4794)
!4855 = !DILocation(line: 1869, column: 4, scope: !4794)
!4856 = !DILocation(line: 1869, column: 14, scope: !4794)
!4857 = !DILocation(line: 1870, column: 16, scope: !4794)
!4858 = !DILocation(line: 1870, column: 19, scope: !4794)
!4859 = !DILocation(line: 1870, column: 4, scope: !4794)
!4860 = !DILocation(line: 1870, column: 14, scope: !4794)
!4861 = !DILocation(line: 1871, column: 16, scope: !4794)
!4862 = !DILocation(line: 1871, column: 19, scope: !4794)
!4863 = !DILocation(line: 1871, column: 4, scope: !4794)
!4864 = !DILocation(line: 1871, column: 14, scope: !4794)
!4865 = !DILocation(line: 1873, column: 20, scope: !4794)
!4866 = !DILocation(line: 1873, column: 23, scope: !4794)
!4867 = !DILocation(line: 1873, column: 32, scope: !4794)
!4868 = !DILocation(line: 1873, column: 35, scope: !4794)
!4869 = !DILocation(line: 1873, column: 29, scope: !4794)
!4870 = !DILocation(line: 1873, column: 44, scope: !4794)
!4871 = !DILocation(line: 1873, column: 47, scope: !4794)
!4872 = !DILocation(line: 1873, column: 41, scope: !4794)
!4873 = !DILocation(line: 1873, column: 4, scope: !4794)
!4874 = !DILocation(line: 1873, column: 15, scope: !4794)
!4875 = !DILocation(line: 1874, column: 8, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1874, column: 8)
!4877 = !DILocation(line: 1874, column: 19, scope: !4876)
!4878 = !DILocation(line: 1874, column: 8, scope: !4794)
!4879 = !DILocation(line: 1875, column: 21, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 1874, column: 24)
!4881 = !DILocation(line: 1875, column: 24, scope: !4880)
!4882 = !DILocation(line: 1875, column: 32, scope: !4880)
!4883 = !DILocation(line: 1875, column: 35, scope: !4880)
!4884 = !DILocation(line: 1875, column: 29, scope: !4880)
!4885 = !DILocation(line: 1875, column: 43, scope: !4880)
!4886 = !DILocation(line: 1875, column: 46, scope: !4880)
!4887 = !DILocation(line: 1875, column: 40, scope: !4880)
!4888 = !DILocation(line: 1875, column: 5, scope: !4880)
!4889 = !DILocation(line: 1875, column: 16, scope: !4880)
!4890 = !DILocation(line: 1876, column: 21, scope: !4880)
!4891 = !DILocation(line: 1876, column: 24, scope: !4880)
!4892 = !DILocation(line: 1876, column: 33, scope: !4880)
!4893 = !DILocation(line: 1876, column: 36, scope: !4880)
!4894 = !DILocation(line: 1876, column: 30, scope: !4880)
!4895 = !DILocation(line: 1876, column: 45, scope: !4880)
!4896 = !DILocation(line: 1876, column: 48, scope: !4880)
!4897 = !DILocation(line: 1876, column: 42, scope: !4880)
!4898 = !DILocation(line: 1876, column: 5, scope: !4880)
!4899 = !DILocation(line: 1876, column: 16, scope: !4880)
!4900 = !DILocation(line: 1877, column: 4, scope: !4880)
!4901 = !DILocation(line: 1878, column: 21, scope: !4876)
!4902 = !DILocation(line: 1878, column: 32, scope: !4876)
!4903 = !DILocation(line: 1878, column: 9, scope: !4876)
!4904 = !DILocation(line: 1878, column: 20, scope: !4876)
!4905 = !DILocation(line: 1880, column: 10, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1880, column: 4)
!4907 = !DILocation(line: 1880, column: 9, scope: !4906)
!4908 = !DILocation(line: 1880, column: 13, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 1880, column: 4)
!4910 = !DILocation(line: 1880, column: 14, scope: !4909)
!4911 = !DILocation(line: 1880, column: 4, scope: !4906)
!4912 = !DILocation(line: 1882, column: 18, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 1882, column: 9)
!4914 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 1880, column: 22)
!4915 = !DILocation(line: 1882, column: 9, scope: !4913)
!4916 = !DILocation(line: 1882, column: 9, scope: !4914)
!4917 = !DILocation(line: 1884, column: 13, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 1882, column: 22)
!4919 = !DILocation(line: 1884, column: 11, scope: !4918)
!4920 = !DILocation(line: 1886, column: 12, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1886, column: 6)
!4922 = !DILocation(line: 1886, column: 11, scope: !4921)
!4923 = !DILocation(line: 1886, column: 16, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 1886, column: 6)
!4925 = !DILocation(line: 1886, column: 18, scope: !4924)
!4926 = !DILocation(line: 1886, column: 17, scope: !4924)
!4927 = !DILocation(line: 1886, column: 6, scope: !4921)
!4928 = !DILocation(line: 1888, column: 16, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 1888, column: 11)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1886, column: 30)
!4931 = !DILocation(line: 1888, column: 11, scope: !4929)
!4932 = !DILocation(line: 1888, column: 21, scope: !4929)
!4933 = !DILocation(line: 1888, column: 11, scope: !4930)
!4934 = !DILocation(line: 1889, column: 15, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1888, column: 29)
!4936 = !DILocation(line: 1889, column: 10, scope: !4935)
!4937 = !DILocation(line: 1891, column: 12, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1891, column: 12)
!4939 = !DILocation(line: 1891, column: 13, scope: !4938)
!4940 = !DILocation(line: 1891, column: 12, scope: !4935)
!4941 = !DILocation(line: 1891, column: 21, scope: !4938)
!4942 = !DILocation(line: 1891, column: 18, scope: !4938)
!4943 = !DILocation(line: 1892, column: 17, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1892, column: 17)
!4945 = !DILocation(line: 1892, column: 18, scope: !4944)
!4946 = !DILocation(line: 1892, column: 17, scope: !4938)
!4947 = !DILocation(line: 1892, column: 26, scope: !4944)
!4948 = !DILocation(line: 1892, column: 23, scope: !4944)
!4949 = !DILocation(line: 1893, column: 16, scope: !4944)
!4950 = !DILocation(line: 1895, column: 17, scope: !4935)
!4951 = !DILocation(line: 1895, column: 33, scope: !4935)
!4952 = !DILocation(line: 1895, column: 28, scope: !4935)
!4953 = !DILocation(line: 1895, column: 45, scope: !4935)
!4954 = !DILocation(line: 1895, column: 40, scope: !4935)
!4955 = !DILocation(line: 1895, column: 62, scope: !4935)
!4956 = !DILocation(line: 1895, column: 67, scope: !4935)
!4957 = !DILocation(line: 1895, column: 74, scope: !4935)
!4958 = !DILocation(line: 1895, column: 8, scope: !4935)
!4959 = !DILocation(line: 1896, column: 17, scope: !4935)
!4960 = !DILocation(line: 1896, column: 33, scope: !4935)
!4961 = !DILocation(line: 1896, column: 28, scope: !4935)
!4962 = !DILocation(line: 1896, column: 45, scope: !4935)
!4963 = !DILocation(line: 1896, column: 40, scope: !4935)
!4964 = !DILocation(line: 1896, column: 62, scope: !4935)
!4965 = !DILocation(line: 1896, column: 67, scope: !4935)
!4966 = !DILocation(line: 1896, column: 74, scope: !4935)
!4967 = !DILocation(line: 1896, column: 8, scope: !4935)
!4968 = !DILocation(line: 1897, column: 17, scope: !4935)
!4969 = !DILocation(line: 1897, column: 33, scope: !4935)
!4970 = !DILocation(line: 1897, column: 28, scope: !4935)
!4971 = !DILocation(line: 1897, column: 45, scope: !4935)
!4972 = !DILocation(line: 1897, column: 40, scope: !4935)
!4973 = !DILocation(line: 1897, column: 62, scope: !4935)
!4974 = !DILocation(line: 1897, column: 67, scope: !4935)
!4975 = !DILocation(line: 1897, column: 74, scope: !4935)
!4976 = !DILocation(line: 1897, column: 8, scope: !4935)
!4977 = !DILocation(line: 1899, column: 12, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1899, column: 12)
!4979 = !DILocation(line: 1899, column: 14, scope: !4978)
!4980 = !DILocation(line: 1899, column: 18, scope: !4978)
!4981 = !DILocation(line: 1899, column: 21, scope: !4978)
!4982 = !DILocation(line: 1899, column: 23, scope: !4978)
!4983 = !DILocation(line: 1899, column: 12, scope: !4935)
!4984 = !DILocation(line: 1901, column: 29, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1899, column: 28)
!4986 = !DILocation(line: 1901, column: 24, scope: !4985)
!4987 = !DILocation(line: 1901, column: 14, scope: !4985)
!4988 = !DILocation(line: 1901, column: 9, scope: !4985)
!4989 = !DILocation(line: 1901, column: 22, scope: !4985)
!4990 = !DILocation(line: 1902, column: 29, scope: !4985)
!4991 = !DILocation(line: 1902, column: 24, scope: !4985)
!4992 = !DILocation(line: 1902, column: 14, scope: !4985)
!4993 = !DILocation(line: 1902, column: 9, scope: !4985)
!4994 = !DILocation(line: 1902, column: 22, scope: !4985)
!4995 = !DILocation(line: 1903, column: 29, scope: !4985)
!4996 = !DILocation(line: 1903, column: 24, scope: !4985)
!4997 = !DILocation(line: 1903, column: 14, scope: !4985)
!4998 = !DILocation(line: 1903, column: 9, scope: !4985)
!4999 = !DILocation(line: 1903, column: 22, scope: !4985)
!5000 = !DILocation(line: 1904, column: 14, scope: !4985)
!5001 = !DILocation(line: 1904, column: 9, scope: !4985)
!5002 = !DILocation(line: 1904, column: 19, scope: !4985)
!5003 = !DILocation(line: 1905, column: 13, scope: !4985)
!5004 = !DILocation(line: 1906, column: 8, scope: !4985)
!5005 = !DILocation(line: 1907, column: 17, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1907, column: 17)
!5007 = !DILocation(line: 1907, column: 19, scope: !5006)
!5008 = !DILocation(line: 1907, column: 17, scope: !4978)
!5009 = !DILocation(line: 1908, column: 14, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1907, column: 24)
!5011 = !DILocation(line: 1908, column: 9, scope: !5010)
!5012 = !DILocation(line: 1908, column: 19, scope: !5010)
!5013 = !DILocation(line: 1910, column: 8, scope: !5010)
!5014 = !DILocation(line: 1912, column: 11, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1911, column: 13)
!5016 = !DILocation(line: 1913, column: 22, scope: !5015)
!5017 = !DILocation(line: 1913, column: 27, scope: !5015)
!5018 = !DILocation(line: 1913, column: 38, scope: !5015)
!5019 = !DILocation(line: 1913, column: 50, scope: !5015)
!5020 = !DILocation(line: 1913, column: 45, scope: !5015)
!5021 = !DILocation(line: 1913, column: 62, scope: !5015)
!5022 = !DILocation(line: 1913, column: 57, scope: !5015)
!5023 = !DILocation(line: 1913, column: 9, scope: !5015)
!5024 = !DILocation(line: 1914, column: 22, scope: !5015)
!5025 = !DILocation(line: 1914, column: 27, scope: !5015)
!5026 = !DILocation(line: 1914, column: 38, scope: !5015)
!5027 = !DILocation(line: 1914, column: 50, scope: !5015)
!5028 = !DILocation(line: 1914, column: 45, scope: !5015)
!5029 = !DILocation(line: 1914, column: 62, scope: !5015)
!5030 = !DILocation(line: 1914, column: 57, scope: !5015)
!5031 = !DILocation(line: 1914, column: 9, scope: !5015)
!5032 = !DILocation(line: 1915, column: 22, scope: !5015)
!5033 = !DILocation(line: 1915, column: 27, scope: !5015)
!5034 = !DILocation(line: 1915, column: 38, scope: !5015)
!5035 = !DILocation(line: 1915, column: 50, scope: !5015)
!5036 = !DILocation(line: 1915, column: 45, scope: !5015)
!5037 = !DILocation(line: 1915, column: 62, scope: !5015)
!5038 = !DILocation(line: 1915, column: 57, scope: !5015)
!5039 = !DILocation(line: 1915, column: 9, scope: !5015)
!5040 = !DILocation(line: 1918, column: 13, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 1918, column: 13)
!5042 = !DILocation(line: 1918, column: 14, scope: !5041)
!5043 = !DILocation(line: 1918, column: 13, scope: !5015)
!5044 = !DILocation(line: 1919, column: 23, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 1918, column: 19)
!5046 = !DILocation(line: 1919, column: 34, scope: !5045)
!5047 = !DILocation(line: 1919, column: 10, scope: !5045)
!5048 = !DILocation(line: 1919, column: 21, scope: !5045)
!5049 = !DILocation(line: 1920, column: 14, scope: !5045)
!5050 = !DILocation(line: 1920, column: 12, scope: !5045)
!5051 = !DILocation(line: 1921, column: 17, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1921, column: 10)
!5053 = !DILocation(line: 1921, column: 15, scope: !5052)
!5054 = !DILocation(line: 1921, column: 21, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1921, column: 10)
!5056 = !DILocation(line: 1921, column: 24, scope: !5055)
!5057 = !DILocation(line: 1921, column: 23, scope: !5055)
!5058 = !DILocation(line: 1921, column: 10, scope: !5052)
!5059 = !DILocation(line: 1922, column: 24, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1921, column: 36)
!5061 = !DILocation(line: 1922, column: 15, scope: !5060)
!5062 = !DILocation(line: 1922, column: 13, scope: !5060)
!5063 = !DILocation(line: 1923, column: 27, scope: !5060)
!5064 = !DILocation(line: 1923, column: 30, scope: !5060)
!5065 = !DILocation(line: 1923, column: 11, scope: !5060)
!5066 = !DILocation(line: 1923, column: 23, scope: !5060)
!5067 = !DILocation(line: 1924, column: 27, scope: !5060)
!5068 = !DILocation(line: 1924, column: 30, scope: !5060)
!5069 = !DILocation(line: 1924, column: 11, scope: !5060)
!5070 = !DILocation(line: 1924, column: 23, scope: !5060)
!5071 = !DILocation(line: 1925, column: 13, scope: !5060)
!5072 = !DILocation(line: 1926, column: 10, scope: !5060)
!5073 = !DILocation(line: 1921, column: 32, scope: !5055)
!5074 = !DILocation(line: 1921, column: 10, scope: !5055)
!5075 = distinct !{!5075, !5058, !5076}
!5076 = !DILocation(line: 1926, column: 10, scope: !5052)
!5077 = !DILocation(line: 1927, column: 9, scope: !5045)
!5078 = !DILocation(line: 1929, column: 14, scope: !5015)
!5079 = !DILocation(line: 1929, column: 9, scope: !5015)
!5080 = !DILocation(line: 1929, column: 19, scope: !5015)
!5081 = !DILocation(line: 1930, column: 13, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 1930, column: 13)
!5083 = !DILocation(line: 1930, column: 15, scope: !5082)
!5084 = !DILocation(line: 1930, column: 13, scope: !5015)
!5085 = !DILocation(line: 1931, column: 17, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1931, column: 10)
!5087 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 1930, column: 19)
!5088 = !DILocation(line: 1931, column: 15, scope: !5086)
!5089 = !DILocation(line: 1931, column: 21, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 1931, column: 10)
!5091 = !DILocation(line: 1931, column: 25, scope: !5090)
!5092 = !DILocation(line: 1931, column: 23, scope: !5090)
!5093 = !DILocation(line: 1931, column: 10, scope: !5086)
!5094 = !DILocation(line: 1932, column: 26, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 1931, column: 35)
!5096 = !DILocation(line: 1932, column: 16, scope: !5095)
!5097 = !DILocation(line: 1932, column: 11, scope: !5095)
!5098 = !DILocation(line: 1932, column: 24, scope: !5095)
!5099 = !DILocation(line: 1933, column: 32, scope: !5095)
!5100 = !DILocation(line: 1933, column: 34, scope: !5095)
!5101 = !DILocation(line: 1933, column: 26, scope: !5095)
!5102 = !DILocation(line: 1933, column: 16, scope: !5095)
!5103 = !DILocation(line: 1933, column: 11, scope: !5095)
!5104 = !DILocation(line: 1933, column: 24, scope: !5095)
!5105 = !DILocation(line: 1934, column: 32, scope: !5095)
!5106 = !DILocation(line: 1934, column: 34, scope: !5095)
!5107 = !DILocation(line: 1934, column: 26, scope: !5095)
!5108 = !DILocation(line: 1934, column: 16, scope: !5095)
!5109 = !DILocation(line: 1934, column: 11, scope: !5095)
!5110 = !DILocation(line: 1934, column: 24, scope: !5095)
!5111 = !DILocation(line: 1935, column: 15, scope: !5095)
!5112 = !DILocation(line: 1936, column: 10, scope: !5095)
!5113 = !DILocation(line: 1931, column: 31, scope: !5090)
!5114 = !DILocation(line: 1931, column: 10, scope: !5090)
!5115 = distinct !{!5115, !5093, !5116}
!5116 = !DILocation(line: 1936, column: 10, scope: !5086)
!5117 = !DILocation(line: 1937, column: 9, scope: !5087)
!5118 = !DILocation(line: 1939, column: 7, scope: !4935)
!5119 = !DILocation(line: 1940, column: 6, scope: !4930)
!5120 = !DILocation(line: 1886, column: 26, scope: !4924)
!5121 = !DILocation(line: 1886, column: 6, scope: !4924)
!5122 = distinct !{!5122, !4927, !5123}
!5123 = !DILocation(line: 1940, column: 6, scope: !4921)
!5124 = !DILocation(line: 1941, column: 5, scope: !4918)
!5125 = !DILocation(line: 1942, column: 4, scope: !4914)
!5126 = !DILocation(line: 1880, column: 18, scope: !4909)
!5127 = !DILocation(line: 1880, column: 4, scope: !4909)
!5128 = distinct !{!5128, !4911, !5129}
!5129 = !DILocation(line: 1942, column: 4, scope: !4906)
!5130 = !DILocation(line: 1948, column: 9, scope: !4794)
!5131 = !DILocation(line: 1948, column: 7, scope: !4794)
!5132 = !DILocation(line: 1949, column: 11, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1949, column: 4)
!5134 = !DILocation(line: 1949, column: 9, scope: !5133)
!5135 = !DILocation(line: 1949, column: 16, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1949, column: 4)
!5137 = !DILocation(line: 1949, column: 20, scope: !5136)
!5138 = !DILocation(line: 1949, column: 18, scope: !5136)
!5139 = !DILocation(line: 1949, column: 4, scope: !5133)
!5140 = !DILocation(line: 1950, column: 17, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1949, column: 31)
!5142 = !DILocation(line: 1950, column: 24, scope: !5141)
!5143 = !DILocation(line: 1950, column: 28, scope: !5141)
!5144 = !DILocation(line: 1950, column: 5, scope: !5141)
!5145 = !DILocation(line: 1951, column: 8, scope: !5141)
!5146 = !DILocation(line: 1952, column: 4, scope: !5141)
!5147 = !DILocation(line: 1949, column: 27, scope: !5136)
!5148 = !DILocation(line: 1949, column: 4, scope: !5136)
!5149 = distinct !{!5149, !5139, !5150}
!5150 = !DILocation(line: 1952, column: 4, scope: !5133)
!5151 = !DILocation(line: 1953, column: 11, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 1953, column: 4)
!5153 = !DILocation(line: 1953, column: 9, scope: !5152)
!5154 = !DILocation(line: 1953, column: 16, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1953, column: 4)
!5156 = !DILocation(line: 1953, column: 20, scope: !5155)
!5157 = !DILocation(line: 1953, column: 18, scope: !5155)
!5158 = !DILocation(line: 1953, column: 4, scope: !5152)
!5159 = !DILocation(line: 1954, column: 14, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1954, column: 9)
!5161 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 1953, column: 31)
!5162 = !DILocation(line: 1954, column: 9, scope: !5160)
!5163 = !DILocation(line: 1954, column: 9, scope: !5161)
!5164 = !DILocation(line: 1955, column: 6, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1954, column: 21)
!5166 = !DILocation(line: 1955, column: 13, scope: !5165)
!5167 = !DILocation(line: 1955, column: 22, scope: !5165)
!5168 = !DILocation(line: 1955, column: 29, scope: !5165)
!5169 = !DILocation(line: 1955, column: 34, scope: !5165)
!5170 = !DILocation(line: 1955, column: 46, scope: !5165)
!5171 = !DILocation(line: 1955, column: 41, scope: !5165)
!5172 = !DILocation(line: 1955, column: 58, scope: !5165)
!5173 = !DILocation(line: 1955, column: 53, scope: !5165)
!5174 = !DILocation(line: 1955, column: 70, scope: !5165)
!5175 = !DILocation(line: 1955, column: 65, scope: !5165)
!5176 = !DILocation(line: 1956, column: 5, scope: !5165)
!5177 = !DILocation(line: 1957, column: 4, scope: !5161)
!5178 = !DILocation(line: 1953, column: 27, scope: !5155)
!5179 = !DILocation(line: 1953, column: 4, scope: !5155)
!5180 = distinct !{!5180, !5158, !5181}
!5181 = !DILocation(line: 1957, column: 4, scope: !5152)
!5182 = !DILocation(line: 1958, column: 4, scope: !4794)
!5183 = !DILocation(line: 1963, column: 14, scope: !4737)
!5184 = !DILocation(line: 1963, column: 21, scope: !4737)
!5185 = !DILocation(line: 1963, column: 26, scope: !4737)
!5186 = !DILocation(line: 1963, column: 2, scope: !4737)
!5187 = !DILocation(line: 1964, column: 14, scope: !4737)
!5188 = !DILocation(line: 1964, column: 21, scope: !4737)
!5189 = !DILocation(line: 1964, column: 24, scope: !4737)
!5190 = !DILocation(line: 1964, column: 28, scope: !4737)
!5191 = !DILocation(line: 1964, column: 2, scope: !4737)
!5192 = !DILocation(line: 1965, column: 14, scope: !4737)
!5193 = !DILocation(line: 1965, column: 21, scope: !4737)
!5194 = !DILocation(line: 1965, column: 24, scope: !4737)
!5195 = !DILocation(line: 1965, column: 28, scope: !4737)
!5196 = !DILocation(line: 1965, column: 2, scope: !4737)
!5197 = !DILocation(line: 1966, column: 2, scope: !4737)
!5198 = !DILocation(line: 1966, column: 9, scope: !4737)
!5199 = !DILocation(line: 1966, column: 18, scope: !4737)
!5200 = !DILocation(line: 1966, column: 25, scope: !4737)
!5201 = !DILocation(line: 1966, column: 30, scope: !4737)
!5202 = !DILocation(line: 1966, column: 37, scope: !4737)
!5203 = !DILocation(line: 1966, column: 42, scope: !4737)
!5204 = !DILocation(line: 1966, column: 45, scope: !4737)
!5205 = !DILocation(line: 1966, column: 49, scope: !4737)
!5206 = !DILocation(line: 1966, column: 52, scope: !4737)
!5207 = !DILocation(line: 1967, column: 1, scope: !4737)
!5208 = distinct !DISubprogram(name: "clippyra", scope: !3, file: !3, line: 1614, type: !5209, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{null, !31, !31, !31, !81, !81, !29, !21}
!5211 = !DILocalVariable(name: "lambda", arg: 1, scope: !5208, file: !3, line: 1614, type: !31)
!5212 = !DILocation(line: 1614, column: 29, scope: !5208)
!5213 = !DILocalVariable(name: "v1", arg: 2, scope: !5208, file: !3, line: 1614, type: !31)
!5214 = !DILocation(line: 1614, column: 44, scope: !5208)
!5215 = !DILocalVariable(name: "v2", arg: 3, scope: !5208, file: !3, line: 1614, type: !31)
!5216 = !DILocation(line: 1614, column: 55, scope: !5208)
!5217 = !DILocalVariable(name: "b2", arg: 4, scope: !5208, file: !3, line: 1614, type: !81)
!5218 = !DILocation(line: 1614, column: 64, scope: !5208)
!5219 = !DILocalVariable(name: "b3", arg: 5, scope: !5208, file: !3, line: 1614, type: !81)
!5220 = !DILocation(line: 1614, column: 73, scope: !5208)
!5221 = !DILocalVariable(name: "a", arg: 6, scope: !5208, file: !3, line: 1614, type: !29)
!5222 = !DILocation(line: 1614, column: 81, scope: !5208)
!5223 = !DILocalVariable(name: "clipcrop", arg: 7, scope: !5208, file: !3, line: 1614, type: !21)
!5224 = !DILocation(line: 1614, column: 90, scope: !5208)
!5225 = !DILocalVariable(name: "da", scope: !5208, file: !3, line: 1616, type: !21)
!5226 = !DILocation(line: 1616, column: 8, scope: !5208)
!5227 = !DILocalVariable(name: "dw", scope: !5208, file: !3, line: 1616, type: !21)
!5228 = !DILocation(line: 1616, column: 12, scope: !5208)
!5229 = !DILocalVariable(name: "u1", scope: !5208, file: !3, line: 1616, type: !21)
!5230 = !DILocation(line: 1616, column: 16, scope: !5208)
!5231 = !DILocalVariable(name: "u2", scope: !5208, file: !3, line: 1616, type: !21)
!5232 = !DILocation(line: 1616, column: 24, scope: !5208)
!5233 = !DILocalVariable(name: "v13", scope: !5208, file: !3, line: 1617, type: !21)
!5234 = !DILocation(line: 1617, column: 8, scope: !5208)
!5235 = !DILocation(line: 1619, column: 2, scope: !5208)
!5236 = !DILocation(line: 1619, column: 11, scope: !5208)
!5237 = !DILocation(line: 1620, column: 2, scope: !5208)
!5238 = !DILocation(line: 1620, column: 11, scope: !5208)
!5239 = !DILocation(line: 1622, column: 6, scope: !5208)
!5240 = !DILocation(line: 1622, column: 9, scope: !5208)
!5241 = !DILocation(line: 1622, column: 12, scope: !5208)
!5242 = !DILocation(line: 1622, column: 15, scope: !5208)
!5243 = !DILocation(line: 1622, column: 11, scope: !5208)
!5244 = !DILocation(line: 1622, column: 4, scope: !5208)
!5245 = !DILocation(line: 1625, column: 6, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1625, column: 6)
!5247 = !DILocation(line: 1625, column: 7, scope: !5246)
!5248 = !DILocation(line: 1625, column: 6, scope: !5208)
!5249 = !DILocation(line: 1626, column: 8, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1625, column: 12)
!5251 = !DILocation(line: 1626, column: 14, scope: !5250)
!5252 = !DILocation(line: 1626, column: 13, scope: !5250)
!5253 = !DILocation(line: 1626, column: 5, scope: !5250)
!5254 = !DILocation(line: 1627, column: 8, scope: !5250)
!5255 = !DILocation(line: 1627, column: 6, scope: !5250)
!5256 = !DILocation(line: 1628, column: 2, scope: !5250)
!5257 = !DILocation(line: 1630, column: 7, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 1629, column: 7)
!5259 = !DILocation(line: 1630, column: 17, scope: !5258)
!5260 = !DILocation(line: 1630, column: 23, scope: !5258)
!5261 = !DILocation(line: 1630, column: 22, scope: !5258)
!5262 = !DILocation(line: 1630, column: 15, scope: !5258)
!5263 = !DILocation(line: 1630, column: 5, scope: !5258)
!5264 = !DILocation(line: 1631, column: 8, scope: !5258)
!5265 = !DILocation(line: 1631, column: 17, scope: !5258)
!5266 = !DILocation(line: 1631, column: 16, scope: !5258)
!5267 = !DILocation(line: 1631, column: 6, scope: !5258)
!5268 = !DILocation(line: 1640, column: 17, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1640, column: 6)
!5270 = !DILocation(line: 1640, column: 16, scope: !5269)
!5271 = !DILocation(line: 1640, column: 22, scope: !5269)
!5272 = !DILocation(line: 1640, column: 21, scope: !5269)
!5273 = !DILocation(line: 1640, column: 26, scope: !5269)
!5274 = !DILocation(line: 1640, column: 31, scope: !5269)
!5275 = !DILocation(line: 1640, column: 34, scope: !5269)
!5276 = !DILocation(line: 1640, column: 6, scope: !5269)
!5277 = !DILocation(line: 1640, column: 6, scope: !5208)
!5278 = !DILocation(line: 1641, column: 17, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 1641, column: 7)
!5280 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 1640, column: 49)
!5281 = !DILocation(line: 1641, column: 22, scope: !5279)
!5282 = !DILocation(line: 1641, column: 21, scope: !5279)
!5283 = !DILocation(line: 1641, column: 26, scope: !5279)
!5284 = !DILocation(line: 1641, column: 32, scope: !5279)
!5285 = !DILocation(line: 1641, column: 35, scope: !5279)
!5286 = !DILocation(line: 1641, column: 31, scope: !5279)
!5287 = !DILocation(line: 1641, column: 7, scope: !5279)
!5288 = !DILocation(line: 1641, column: 7, scope: !5280)
!5289 = !DILocation(line: 1642, column: 5, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1641, column: 50)
!5291 = !DILocation(line: 1642, column: 7, scope: !5290)
!5292 = !DILocation(line: 1643, column: 8, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 1643, column: 8)
!5294 = !DILocation(line: 1643, column: 10, scope: !5293)
!5295 = !DILocation(line: 1643, column: 8, scope: !5290)
!5296 = !DILocation(line: 1644, column: 16, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1643, column: 17)
!5298 = !DILocation(line: 1644, column: 5, scope: !5297)
!5299 = !DILocation(line: 1644, column: 14, scope: !5297)
!5300 = !DILocation(line: 1645, column: 6, scope: !5297)
!5301 = !DILocation(line: 1645, column: 8, scope: !5297)
!5302 = !DILocation(line: 1646, column: 4, scope: !5297)
!5303 = !DILocation(line: 1647, column: 9, scope: !5293)
!5304 = !DILocation(line: 1647, column: 18, scope: !5293)
!5305 = !DILocation(line: 1648, column: 8, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 1648, column: 8)
!5307 = !DILocation(line: 1648, column: 10, scope: !5306)
!5308 = !DILocation(line: 1648, column: 8, scope: !5290)
!5309 = !DILocation(line: 1649, column: 17, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1648, column: 17)
!5311 = !DILocation(line: 1649, column: 5, scope: !5310)
!5312 = !DILocation(line: 1649, column: 15, scope: !5310)
!5313 = !DILocation(line: 1650, column: 6, scope: !5310)
!5314 = !DILocation(line: 1650, column: 9, scope: !5310)
!5315 = !DILocation(line: 1651, column: 4, scope: !5310)
!5316 = !DILocation(line: 1653, column: 5, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1652, column: 9)
!5318 = !DILocation(line: 1653, column: 15, scope: !5317)
!5319 = !DILocation(line: 1655, column: 3, scope: !5290)
!5320 = !DILocation(line: 1656, column: 2, scope: !5280)
!5321 = !DILocation(line: 1657, column: 1, scope: !5208)
!5322 = distinct !DISubprogram(name: "makevertpyra", scope: !3, file: !3, line: 1674, type: !5323, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{null, !31, !31, !5325, !31, !31, !81, !81}
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!5326 = !DILocalVariable(name: "vez", arg: 1, scope: !5322, file: !3, line: 1674, type: !31)
!5327 = !DILocation(line: 1674, column: 33, scope: !5322)
!5328 = !DILocalVariable(name: "lambda", arg: 2, scope: !5322, file: !3, line: 1674, type: !31)
!5329 = !DILocation(line: 1674, column: 45, scope: !5322)
!5330 = !DILocalVariable(name: "trias", arg: 3, scope: !5322, file: !3, line: 1674, type: !5325)
!5331 = !DILocation(line: 1674, column: 61, scope: !5322)
!5332 = !DILocalVariable(name: "v1", arg: 4, scope: !5322, file: !3, line: 1674, type: !31)
!5333 = !DILocation(line: 1674, column: 75, scope: !5322)
!5334 = !DILocalVariable(name: "v2", arg: 5, scope: !5322, file: !3, line: 1674, type: !31)
!5335 = !DILocation(line: 1674, column: 86, scope: !5322)
!5336 = !DILocalVariable(name: "b1", arg: 6, scope: !5322, file: !3, line: 1674, type: !81)
!5337 = !DILocation(line: 1674, column: 95, scope: !5322)
!5338 = !DILocalVariable(name: "clve", arg: 7, scope: !5322, file: !3, line: 1674, type: !81)
!5339 = !DILocation(line: 1674, column: 104, scope: !5322)
!5340 = !DILocalVariable(name: "l1", scope: !5322, file: !3, line: 1676, type: !21)
!5341 = !DILocation(line: 1676, column: 8, scope: !5322)
!5342 = !DILocalVariable(name: "l2", scope: !5322, file: !3, line: 1676, type: !21)
!5343 = !DILocation(line: 1676, column: 12, scope: !5322)
!5344 = !DILocalVariable(name: "adr", scope: !5322, file: !3, line: 1676, type: !31)
!5345 = !DILocation(line: 1676, column: 17, scope: !5322)
!5346 = !DILocation(line: 1678, column: 6, scope: !5322)
!5347 = !DILocation(line: 1678, column: 4, scope: !5322)
!5348 = !DILocation(line: 1679, column: 6, scope: !5322)
!5349 = !DILocation(line: 1679, column: 4, scope: !5322)
!5350 = !DILocation(line: 1681, column: 6, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1681, column: 6)
!5352 = !DILocation(line: 1681, column: 8, scope: !5351)
!5353 = !DILocation(line: 1681, column: 6, scope: !5322)
!5354 = !DILocation(line: 1682, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1682, column: 7)
!5356 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 1681, column: 18)
!5357 = !DILocation(line: 1682, column: 9, scope: !5355)
!5358 = !DILocation(line: 1682, column: 7, scope: !5356)
!5359 = !DILocation(line: 1683, column: 9, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1682, column: 18)
!5361 = !DILocation(line: 1683, column: 17, scope: !5360)
!5362 = !DILocation(line: 1683, column: 16, scope: !5360)
!5363 = !DILocation(line: 1683, column: 14, scope: !5360)
!5364 = !DILocation(line: 1683, column: 12, scope: !5360)
!5365 = !DILocation(line: 1683, column: 7, scope: !5360)
!5366 = !DILocation(line: 1684, column: 15, scope: !5360)
!5367 = !DILocation(line: 1684, column: 4, scope: !5360)
!5368 = !DILocation(line: 1684, column: 11, scope: !5360)
!5369 = !DILocation(line: 1684, column: 10, scope: !5360)
!5370 = !DILocation(line: 1684, column: 14, scope: !5360)
!5371 = !DILocation(line: 1685, column: 6, scope: !5360)
!5372 = !DILocation(line: 1685, column: 11, scope: !5360)
!5373 = !DILocation(line: 1686, column: 12, scope: !5360)
!5374 = !DILocation(line: 1686, column: 18, scope: !5360)
!5375 = !DILocation(line: 1686, column: 22, scope: !5360)
!5376 = !DILocation(line: 1686, column: 28, scope: !5360)
!5377 = !DILocation(line: 1686, column: 27, scope: !5360)
!5378 = !DILocation(line: 1686, column: 20, scope: !5360)
!5379 = !DILocation(line: 1686, column: 17, scope: !5360)
!5380 = !DILocation(line: 1686, column: 4, scope: !5360)
!5381 = !DILocation(line: 1686, column: 10, scope: !5360)
!5382 = !DILocation(line: 1687, column: 12, scope: !5360)
!5383 = !DILocation(line: 1687, column: 18, scope: !5360)
!5384 = !DILocation(line: 1687, column: 22, scope: !5360)
!5385 = !DILocation(line: 1687, column: 28, scope: !5360)
!5386 = !DILocation(line: 1687, column: 27, scope: !5360)
!5387 = !DILocation(line: 1687, column: 20, scope: !5360)
!5388 = !DILocation(line: 1687, column: 17, scope: !5360)
!5389 = !DILocation(line: 1687, column: 4, scope: !5360)
!5390 = !DILocation(line: 1687, column: 10, scope: !5360)
!5391 = !DILocation(line: 1688, column: 12, scope: !5360)
!5392 = !DILocation(line: 1688, column: 18, scope: !5360)
!5393 = !DILocation(line: 1688, column: 22, scope: !5360)
!5394 = !DILocation(line: 1688, column: 28, scope: !5360)
!5395 = !DILocation(line: 1688, column: 27, scope: !5360)
!5396 = !DILocation(line: 1688, column: 20, scope: !5360)
!5397 = !DILocation(line: 1688, column: 17, scope: !5360)
!5398 = !DILocation(line: 1688, column: 4, scope: !5360)
!5399 = !DILocation(line: 1688, column: 10, scope: !5360)
!5400 = !DILocation(line: 1689, column: 12, scope: !5360)
!5401 = !DILocation(line: 1689, column: 18, scope: !5360)
!5402 = !DILocation(line: 1689, column: 22, scope: !5360)
!5403 = !DILocation(line: 1689, column: 28, scope: !5360)
!5404 = !DILocation(line: 1689, column: 27, scope: !5360)
!5405 = !DILocation(line: 1689, column: 20, scope: !5360)
!5406 = !DILocation(line: 1689, column: 17, scope: !5360)
!5407 = !DILocation(line: 1689, column: 4, scope: !5360)
!5408 = !DILocation(line: 1689, column: 10, scope: !5360)
!5409 = !DILocation(line: 1690, column: 3, scope: !5360)
!5410 = !DILocation(line: 1691, column: 20, scope: !5355)
!5411 = !DILocation(line: 1691, column: 8, scope: !5355)
!5412 = !DILocation(line: 1691, column: 15, scope: !5355)
!5413 = !DILocation(line: 1691, column: 14, scope: !5355)
!5414 = !DILocation(line: 1691, column: 18, scope: !5355)
!5415 = !DILocation(line: 1693, column: 5, scope: !5356)
!5416 = !DILocation(line: 1693, column: 8, scope: !5356)
!5417 = !DILocation(line: 1694, column: 2, scope: !5356)
!5418 = !DILocation(line: 1695, column: 6, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1695, column: 6)
!5420 = !DILocation(line: 1695, column: 8, scope: !5419)
!5421 = !DILocation(line: 1695, column: 6, scope: !5322)
!5422 = !DILocation(line: 1696, column: 7, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 1696, column: 7)
!5424 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 1695, column: 18)
!5425 = !DILocation(line: 1696, column: 9, scope: !5423)
!5426 = !DILocation(line: 1696, column: 7, scope: !5424)
!5427 = !DILocation(line: 1697, column: 9, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1696, column: 18)
!5429 = !DILocation(line: 1697, column: 17, scope: !5428)
!5430 = !DILocation(line: 1697, column: 16, scope: !5428)
!5431 = !DILocation(line: 1697, column: 14, scope: !5428)
!5432 = !DILocation(line: 1697, column: 12, scope: !5428)
!5433 = !DILocation(line: 1697, column: 7, scope: !5428)
!5434 = !DILocation(line: 1698, column: 15, scope: !5428)
!5435 = !DILocation(line: 1698, column: 4, scope: !5428)
!5436 = !DILocation(line: 1698, column: 11, scope: !5428)
!5437 = !DILocation(line: 1698, column: 10, scope: !5428)
!5438 = !DILocation(line: 1698, column: 14, scope: !5428)
!5439 = !DILocation(line: 1699, column: 6, scope: !5428)
!5440 = !DILocation(line: 1699, column: 11, scope: !5428)
!5441 = !DILocation(line: 1700, column: 12, scope: !5428)
!5442 = !DILocation(line: 1700, column: 18, scope: !5428)
!5443 = !DILocation(line: 1700, column: 22, scope: !5428)
!5444 = !DILocation(line: 1700, column: 28, scope: !5428)
!5445 = !DILocation(line: 1700, column: 27, scope: !5428)
!5446 = !DILocation(line: 1700, column: 20, scope: !5428)
!5447 = !DILocation(line: 1700, column: 17, scope: !5428)
!5448 = !DILocation(line: 1700, column: 4, scope: !5428)
!5449 = !DILocation(line: 1700, column: 10, scope: !5428)
!5450 = !DILocation(line: 1701, column: 12, scope: !5428)
!5451 = !DILocation(line: 1701, column: 18, scope: !5428)
!5452 = !DILocation(line: 1701, column: 22, scope: !5428)
!5453 = !DILocation(line: 1701, column: 28, scope: !5428)
!5454 = !DILocation(line: 1701, column: 27, scope: !5428)
!5455 = !DILocation(line: 1701, column: 20, scope: !5428)
!5456 = !DILocation(line: 1701, column: 17, scope: !5428)
!5457 = !DILocation(line: 1701, column: 4, scope: !5428)
!5458 = !DILocation(line: 1701, column: 10, scope: !5428)
!5459 = !DILocation(line: 1702, column: 12, scope: !5428)
!5460 = !DILocation(line: 1702, column: 18, scope: !5428)
!5461 = !DILocation(line: 1702, column: 22, scope: !5428)
!5462 = !DILocation(line: 1702, column: 28, scope: !5428)
!5463 = !DILocation(line: 1702, column: 27, scope: !5428)
!5464 = !DILocation(line: 1702, column: 20, scope: !5428)
!5465 = !DILocation(line: 1702, column: 17, scope: !5428)
!5466 = !DILocation(line: 1702, column: 4, scope: !5428)
!5467 = !DILocation(line: 1702, column: 10, scope: !5428)
!5468 = !DILocation(line: 1703, column: 12, scope: !5428)
!5469 = !DILocation(line: 1703, column: 18, scope: !5428)
!5470 = !DILocation(line: 1703, column: 22, scope: !5428)
!5471 = !DILocation(line: 1703, column: 28, scope: !5428)
!5472 = !DILocation(line: 1703, column: 27, scope: !5428)
!5473 = !DILocation(line: 1703, column: 20, scope: !5428)
!5474 = !DILocation(line: 1703, column: 17, scope: !5428)
!5475 = !DILocation(line: 1703, column: 4, scope: !5428)
!5476 = !DILocation(line: 1703, column: 10, scope: !5428)
!5477 = !DILocation(line: 1704, column: 6, scope: !5428)
!5478 = !DILocation(line: 1704, column: 9, scope: !5428)
!5479 = !DILocation(line: 1705, column: 3, scope: !5428)
!5480 = !DILocation(line: 1706, column: 2, scope: !5424)
!5481 = !DILocation(line: 1707, column: 1, scope: !5322)
!5482 = distinct !DISubprogram(name: "zbufclip4", scope: !3, file: !3, line: 1969, type: !5483, scopeLine: 1972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{null, !120, !29, !29, !88, !88, !88, !88, !461, !461, !461, !461}
!5485 = !DILocalVariable(name: "zspan", arg: 1, scope: !5482, file: !3, line: 1969, type: !120)
!5486 = !DILocation(line: 1969, column: 23, scope: !5482)
!5487 = !DILocalVariable(name: "obi", arg: 2, scope: !5482, file: !3, line: 1969, type: !29)
!5488 = !DILocation(line: 1969, column: 34, scope: !5482)
!5489 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !5482, file: !3, line: 1969, type: !29)
!5490 = !DILocation(line: 1969, column: 43, scope: !5482)
!5491 = !DILocalVariable(name: "f1", arg: 4, scope: !5482, file: !3, line: 1970, type: !88)
!5492 = !DILocation(line: 1970, column: 28, scope: !5482)
!5493 = !DILocalVariable(name: "f2", arg: 5, scope: !5482, file: !3, line: 1970, type: !88)
!5494 = !DILocation(line: 1970, column: 47, scope: !5482)
!5495 = !DILocalVariable(name: "f3", arg: 6, scope: !5482, file: !3, line: 1970, type: !88)
!5496 = !DILocation(line: 1970, column: 66, scope: !5482)
!5497 = !DILocalVariable(name: "f4", arg: 7, scope: !5482, file: !3, line: 1970, type: !88)
!5498 = !DILocation(line: 1970, column: 85, scope: !5482)
!5499 = !DILocalVariable(name: "c1", arg: 8, scope: !5482, file: !3, line: 1971, type: !461)
!5500 = !DILocation(line: 1971, column: 26, scope: !5482)
!5501 = !DILocalVariable(name: "c2", arg: 9, scope: !5482, file: !3, line: 1971, type: !461)
!5502 = !DILocation(line: 1971, column: 40, scope: !5482)
!5503 = !DILocalVariable(name: "c3", arg: 10, scope: !5482, file: !3, line: 1971, type: !461)
!5504 = !DILocation(line: 1971, column: 54, scope: !5482)
!5505 = !DILocalVariable(name: "c4", arg: 11, scope: !5482, file: !3, line: 1971, type: !461)
!5506 = !DILocation(line: 1971, column: 68, scope: !5482)
!5507 = !DILocalVariable(name: "vez", scope: !5482, file: !3, line: 1973, type: !4237)
!5508 = !DILocation(line: 1973, column: 8, scope: !5482)
!5509 = !DILocation(line: 1975, column: 6, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1975, column: 6)
!5511 = !DILocation(line: 1975, column: 11, scope: !5510)
!5512 = !DILocation(line: 1975, column: 9, scope: !5510)
!5513 = !DILocation(line: 1975, column: 16, scope: !5510)
!5514 = !DILocation(line: 1975, column: 14, scope: !5510)
!5515 = !DILocation(line: 1975, column: 21, scope: !5510)
!5516 = !DILocation(line: 1975, column: 19, scope: !5510)
!5517 = !DILocation(line: 1975, column: 6, scope: !5482)
!5518 = !DILocation(line: 1976, column: 7, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1976, column: 7)
!5520 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 1975, column: 25)
!5521 = !DILocation(line: 1976, column: 12, scope: !5519)
!5522 = !DILocation(line: 1976, column: 10, scope: !5519)
!5523 = !DILocation(line: 1976, column: 17, scope: !5519)
!5524 = !DILocation(line: 1976, column: 15, scope: !5519)
!5525 = !DILocation(line: 1976, column: 22, scope: !5519)
!5526 = !DILocation(line: 1976, column: 20, scope: !5519)
!5527 = !DILocation(line: 1976, column: 7, scope: !5520)
!5528 = !DILocation(line: 1977, column: 4, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1976, column: 26)
!5530 = !DILocation(line: 1980, column: 13, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1979, column: 8)
!5532 = !DILocation(line: 1980, column: 20, scope: !5531)
!5533 = !DILocation(line: 1980, column: 25, scope: !5531)
!5534 = !DILocation(line: 1980, column: 32, scope: !5531)
!5535 = !DILocation(line: 1980, column: 36, scope: !5531)
!5536 = !DILocation(line: 1980, column: 40, scope: !5531)
!5537 = !DILocation(line: 1980, column: 44, scope: !5531)
!5538 = !DILocation(line: 1980, column: 48, scope: !5531)
!5539 = !DILocation(line: 1980, column: 52, scope: !5531)
!5540 = !DILocation(line: 1980, column: 4, scope: !5531)
!5541 = !DILocation(line: 1981, column: 13, scope: !5531)
!5542 = !DILocation(line: 1981, column: 20, scope: !5531)
!5543 = !DILocation(line: 1981, column: 25, scope: !5531)
!5544 = !DILocation(line: 1981, column: 32, scope: !5531)
!5545 = !DILocation(line: 1981, column: 36, scope: !5531)
!5546 = !DILocation(line: 1981, column: 40, scope: !5531)
!5547 = !DILocation(line: 1981, column: 44, scope: !5531)
!5548 = !DILocation(line: 1981, column: 48, scope: !5531)
!5549 = !DILocation(line: 1981, column: 52, scope: !5531)
!5550 = !DILocation(line: 1981, column: 4, scope: !5531)
!5551 = !DILocation(line: 1983, column: 3, scope: !5520)
!5552 = !DILocation(line: 1987, column: 14, scope: !5482)
!5553 = !DILocation(line: 1987, column: 21, scope: !5482)
!5554 = !DILocation(line: 1987, column: 26, scope: !5482)
!5555 = !DILocation(line: 1987, column: 2, scope: !5482)
!5556 = !DILocation(line: 1988, column: 14, scope: !5482)
!5557 = !DILocation(line: 1988, column: 21, scope: !5482)
!5558 = !DILocation(line: 1988, column: 24, scope: !5482)
!5559 = !DILocation(line: 1988, column: 28, scope: !5482)
!5560 = !DILocation(line: 1988, column: 2, scope: !5482)
!5561 = !DILocation(line: 1989, column: 14, scope: !5482)
!5562 = !DILocation(line: 1989, column: 21, scope: !5482)
!5563 = !DILocation(line: 1989, column: 24, scope: !5482)
!5564 = !DILocation(line: 1989, column: 28, scope: !5482)
!5565 = !DILocation(line: 1989, column: 2, scope: !5482)
!5566 = !DILocation(line: 1990, column: 14, scope: !5482)
!5567 = !DILocation(line: 1990, column: 21, scope: !5482)
!5568 = !DILocation(line: 1990, column: 24, scope: !5482)
!5569 = !DILocation(line: 1990, column: 29, scope: !5482)
!5570 = !DILocation(line: 1990, column: 2, scope: !5482)
!5571 = !DILocation(line: 1992, column: 2, scope: !5482)
!5572 = !DILocation(line: 1992, column: 9, scope: !5482)
!5573 = !DILocation(line: 1992, column: 18, scope: !5482)
!5574 = !DILocation(line: 1992, column: 25, scope: !5482)
!5575 = !DILocation(line: 1992, column: 30, scope: !5482)
!5576 = !DILocation(line: 1992, column: 37, scope: !5482)
!5577 = !DILocation(line: 1992, column: 42, scope: !5482)
!5578 = !DILocation(line: 1992, column: 45, scope: !5482)
!5579 = !DILocation(line: 1992, column: 49, scope: !5482)
!5580 = !DILocation(line: 1992, column: 52, scope: !5482)
!5581 = !DILocation(line: 1992, column: 56, scope: !5482)
!5582 = !DILocation(line: 1992, column: 59, scope: !5482)
!5583 = !DILocation(line: 1993, column: 1, scope: !5482)
!5584 = distinct !DISubprogram(name: "zbuffer_solid", scope: !3, file: !3, line: 2072, type: !5585, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{null, !5587, !5618, !5619, !79}
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPart", file: !2461, line: 117, baseType: !5589)
!5589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPart", file: !2461, line: 93, size: 1280, elements: !5590)
!5590 = !{!5591, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5589, file: !2461, line: 94, baseType: !5592, size: 64)
!5592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5589, file: !2461, line: 94, baseType: !5592, size: 64, offset: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5589, file: !2461, line: 96, baseType: !2478, size: 64, offset: 128)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !5589, file: !2461, line: 97, baseType: !370, size: 128, offset: 192)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !5589, file: !2461, line: 99, baseType: !81, size: 64, offset: 320)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !5589, file: !2461, line: 100, baseType: !81, size: 64, offset: 384)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !5589, file: !2461, line: 101, baseType: !81, size: 64, offset: 448)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !5589, file: !2461, line: 102, baseType: !81, size: 64, offset: 512)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "rectdaps", scope: !5589, file: !2461, line: 103, baseType: !5601, size: 64, offset: 576)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !5603, line: 87, baseType: !5604)
!5603 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!5604 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "rectbacko", scope: !5589, file: !2461, line: 104, baseType: !81, size: 64, offset: 640)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackp", scope: !5589, file: !2461, line: 105, baseType: !81, size: 64, offset: 704)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackz", scope: !5589, file: !2461, line: 106, baseType: !81, size: 64, offset: 768)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "rectall", scope: !5589, file: !2461, line: 107, baseType: !5601, size: 64, offset: 832)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !5589, file: !2461, line: 109, baseType: !2493, size: 128, offset: 896)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !5589, file: !2461, line: 110, baseType: !29, size: 32, offset: 1024)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !5589, file: !2461, line: 110, baseType: !29, size: 32, offset: 1056)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5589, file: !2461, line: 111, baseType: !29, size: 32, offset: 1088)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !5589, file: !2461, line: 112, baseType: !12, size: 16, offset: 1120)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5589, file: !2461, line: 112, baseType: !12, size: 16, offset: 1136)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !5589, file: !2461, line: 113, baseType: !12, size: 16, offset: 1152)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5589, file: !2461, line: 114, baseType: !12, size: 16, offset: 1168)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "clipflag", scope: !5589, file: !2461, line: 116, baseType: !2874, size: 64, offset: 1216)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{null, !5587, !120, !29, !79}
!5622 = !DILocalVariable(name: "pa", arg: 1, scope: !5584, file: !3, line: 2072, type: !5587)
!5623 = !DILocation(line: 2072, column: 32, scope: !5584)
!5624 = !DILocalVariable(name: "rl", arg: 2, scope: !5584, file: !3, line: 2072, type: !5618)
!5625 = !DILocation(line: 2072, column: 49, scope: !5584)
!5626 = !DILocalVariable(name: "fillfunc", arg: 3, scope: !5584, file: !3, line: 2072, type: !5619)
!5627 = !DILocation(line: 2072, column: 59, scope: !5584)
!5628 = !DILocalVariable(name: "data", arg: 4, scope: !5584, file: !3, line: 2072, type: !79)
!5629 = !DILocation(line: 2072, column: 112, scope: !5584)
!5630 = !DILocalVariable(name: "cache", scope: !5584, file: !3, line: 2074, type: !5631)
!5631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5632, size: 49152, elements: !4247)
!5632 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZbufProjectCache", file: !3, line: 1750, baseType: !5633)
!5633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZbufProjectCache", file: !3, line: 1747, size: 192, elements: !5634)
!5634 = !{!5635, !5636, !5637}
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5633, file: !3, line: 1748, baseType: !29, size: 32)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !5633, file: !3, line: 1748, baseType: !29, size: 32, offset: 32)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "ho", scope: !5633, file: !3, line: 1749, baseType: !176, size: 128, offset: 64)
!5638 = !DILocation(line: 2074, column: 19, scope: !5584)
!5639 = !DILocalVariable(name: "zspans", scope: !5584, file: !3, line: 2075, type: !5640)
!5640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 28672, elements: !4238)
!5641 = !DILocation(line: 2075, column: 8, scope: !5584)
!5642 = !DILocalVariable(name: "zspan", scope: !5584, file: !3, line: 2075, type: !120)
!5643 = !DILocation(line: 2075, column: 21, scope: !5584)
!5644 = !DILocalVariable(name: "vlr", scope: !5584, file: !3, line: 2076, type: !5645)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !2461, line: 411, baseType: !4447)
!5647 = !DILocation(line: 2076, column: 11, scope: !5584)
!5648 = !DILocalVariable(name: "v1", scope: !5584, file: !3, line: 2077, type: !5649)
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertRen", file: !2461, line: 380, baseType: !4427)
!5651 = !DILocation(line: 2077, column: 11, scope: !5584)
!5652 = !DILocalVariable(name: "v2", scope: !5584, file: !3, line: 2077, type: !5649)
!5653 = !DILocation(line: 2077, column: 16, scope: !5584)
!5654 = !DILocalVariable(name: "v3", scope: !5584, file: !3, line: 2077, type: !5649)
!5655 = !DILocation(line: 2077, column: 21, scope: !5584)
!5656 = !DILocalVariable(name: "v4", scope: !5584, file: !3, line: 2077, type: !5649)
!5657 = !DILocation(line: 2077, column: 26, scope: !5584)
!5658 = !DILocalVariable(name: "ma", scope: !5584, file: !3, line: 2078, type: !5659)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !2525, line: 203, baseType: !2524)
!5661 = !DILocation(line: 2078, column: 12, scope: !5584)
!5662 = !DILocalVariable(name: "obi", scope: !5584, file: !3, line: 2079, type: !5663)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !2461, line: 368, baseType: !4390)
!5665 = !DILocation(line: 2079, column: 21, scope: !5584)
!5666 = !DILocalVariable(name: "obr", scope: !5584, file: !3, line: 2080, type: !4395)
!5667 = !DILocation(line: 2080, column: 13, scope: !5584)
!5668 = !DILocalVariable(name: "obwinmat", scope: !5584, file: !3, line: 2081, type: !2892)
!5669 = !DILocation(line: 2081, column: 8, scope: !5584)
!5670 = !DILocalVariable(name: "winmat", scope: !5584, file: !3, line: 2081, type: !2892)
!5671 = !DILocation(line: 2081, column: 24, scope: !5584)
!5672 = !DILocalVariable(name: "bounds", scope: !5584, file: !3, line: 2081, type: !176)
!5673 = !DILocation(line: 2081, column: 38, scope: !5584)
!5674 = !DILocalVariable(name: "ho1", scope: !5584, file: !3, line: 2082, type: !176)
!5675 = !DILocation(line: 2082, column: 8, scope: !5584)
!5676 = !DILocalVariable(name: "ho2", scope: !5584, file: !3, line: 2082, type: !176)
!5677 = !DILocation(line: 2082, column: 16, scope: !5584)
!5678 = !DILocalVariable(name: "ho3", scope: !5584, file: !3, line: 2082, type: !176)
!5679 = !DILocation(line: 2082, column: 24, scope: !5584)
!5680 = !DILocalVariable(name: "ho4", scope: !5584, file: !3, line: 2082, type: !176)
!5681 = !DILocation(line: 2082, column: 32, scope: !5584)
!5682 = !DILocalVariable(name: "lay", scope: !5584, file: !3, line: 2083, type: !36)
!5683 = !DILocation(line: 2083, column: 15, scope: !5584)
!5684 = !DILocation(line: 2083, column: 20, scope: !5584)
!5685 = !DILocation(line: 2083, column: 24, scope: !5584)
!5686 = !DILocalVariable(name: "lay_zmask", scope: !5584, file: !3, line: 2083, type: !36)
!5687 = !DILocation(line: 2083, column: 29, scope: !5584)
!5688 = !DILocation(line: 2083, column: 40, scope: !5584)
!5689 = !DILocation(line: 2083, column: 44, scope: !5584)
!5690 = !DILocalVariable(name: "i", scope: !5584, file: !3, line: 2084, type: !29)
!5691 = !DILocation(line: 2084, column: 6, scope: !5584)
!5692 = !DILocalVariable(name: "v", scope: !5584, file: !3, line: 2084, type: !29)
!5693 = !DILocation(line: 2084, column: 9, scope: !5584)
!5694 = !DILocalVariable(name: "zvlnr", scope: !5584, file: !3, line: 2084, type: !29)
!5695 = !DILocation(line: 2084, column: 12, scope: !5584)
!5696 = !DILocalVariable(name: "zsample", scope: !5584, file: !3, line: 2084, type: !29)
!5697 = !DILocation(line: 2084, column: 19, scope: !5584)
!5698 = !DILocalVariable(name: "samples", scope: !5584, file: !3, line: 2084, type: !29)
!5699 = !DILocation(line: 2084, column: 28, scope: !5584)
!5700 = !DILocalVariable(name: "c1", scope: !5584, file: !3, line: 2084, type: !29)
!5701 = !DILocation(line: 2084, column: 37, scope: !5584)
!5702 = !DILocalVariable(name: "c2", scope: !5584, file: !3, line: 2084, type: !29)
!5703 = !DILocation(line: 2084, column: 41, scope: !5584)
!5704 = !DILocalVariable(name: "c3", scope: !5584, file: !3, line: 2084, type: !29)
!5705 = !DILocation(line: 2084, column: 45, scope: !5584)
!5706 = !DILocalVariable(name: "c4", scope: !5584, file: !3, line: 2084, type: !29)
!5707 = !DILocation(line: 2084, column: 49, scope: !5584)
!5708 = !DILocalVariable(name: "nofill", scope: !5584, file: !3, line: 2085, type: !12)
!5709 = !DILocation(line: 2085, column: 8, scope: !5584)
!5710 = !DILocalVariable(name: "env", scope: !5584, file: !3, line: 2085, type: !12)
!5711 = !DILocation(line: 2085, column: 18, scope: !5584)
!5712 = !DILocalVariable(name: "wire", scope: !5584, file: !3, line: 2085, type: !12)
!5713 = !DILocation(line: 2085, column: 25, scope: !5584)
!5714 = !DILocalVariable(name: "zmaskpass", scope: !5584, file: !3, line: 2085, type: !12)
!5715 = !DILocation(line: 2085, column: 33, scope: !5584)
!5716 = !DILocalVariable(name: "all_z", scope: !5584, file: !3, line: 2086, type: !12)
!5717 = !DILocation(line: 2086, column: 8, scope: !5584)
!5718 = !DILocation(line: 2086, column: 16, scope: !5584)
!5719 = !DILocation(line: 2086, column: 20, scope: !5584)
!5720 = !DILocation(line: 2086, column: 28, scope: !5584)
!5721 = !DILocation(line: 2086, column: 45, scope: !5584)
!5722 = !DILocation(line: 2086, column: 50, scope: !5584)
!5723 = !DILocation(line: 2086, column: 54, scope: !5584)
!5724 = !DILocation(line: 2086, column: 62, scope: !5584)
!5725 = !DILocation(line: 2086, column: 48, scope: !5584)
!5726 = !DILocation(line: 0, scope: !5584)
!5727 = !DILocation(line: 2086, column: 15, scope: !5584)
!5728 = !DILocalVariable(name: "neg_zmask", scope: !5584, file: !3, line: 2087, type: !12)
!5729 = !DILocation(line: 2087, column: 8, scope: !5584)
!5730 = !DILocation(line: 2087, column: 20, scope: !5584)
!5731 = !DILocation(line: 2087, column: 24, scope: !5584)
!5732 = !DILocation(line: 2087, column: 32, scope: !5584)
!5733 = !DILocation(line: 2087, column: 49, scope: !5584)
!5734 = !DILocation(line: 2087, column: 53, scope: !5584)
!5735 = !DILocation(line: 2087, column: 57, scope: !5584)
!5736 = !DILocation(line: 2087, column: 65, scope: !5584)
!5737 = !DILocation(line: 2087, column: 19, scope: !5584)
!5738 = !DILocation(line: 2089, column: 23, scope: !5584)
!5739 = !DILocation(line: 2089, column: 2, scope: !5584)
!5740 = !DILocation(line: 2091, column: 14, scope: !5584)
!5741 = !DILocation(line: 2091, column: 12, scope: !5584)
!5742 = !DILocation(line: 2091, column: 21, scope: !5584)
!5743 = !DILocation(line: 2091, column: 19, scope: !5584)
!5744 = !DILocation(line: 2091, column: 9, scope: !5584)
!5745 = !DILocation(line: 2092, column: 11, scope: !5584)
!5746 = !DILocation(line: 2092, column: 9, scope: !5584)
!5747 = !DILocation(line: 2094, column: 14, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 2094, column: 2)
!5749 = !DILocation(line: 2094, column: 7, scope: !5748)
!5750 = !DILocation(line: 2094, column: 18, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 2094, column: 2)
!5752 = !DILocation(line: 2094, column: 26, scope: !5751)
!5753 = !DILocation(line: 2094, column: 25, scope: !5751)
!5754 = !DILocation(line: 2094, column: 2, scope: !5748)
!5755 = !DILocation(line: 2095, column: 18, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 2094, column: 46)
!5757 = !DILocation(line: 2095, column: 11, scope: !5756)
!5758 = !DILocation(line: 2095, column: 8, scope: !5756)
!5759 = !DILocation(line: 2097, column: 25, scope: !5756)
!5760 = !DILocation(line: 2097, column: 33, scope: !5756)
!5761 = !DILocation(line: 2097, column: 39, scope: !5756)
!5762 = !DILocation(line: 2097, column: 43, scope: !5756)
!5763 = !DILocation(line: 2097, column: 3, scope: !5756)
!5764 = !DILocation(line: 2098, column: 19, scope: !5756)
!5765 = !DILocation(line: 2098, column: 26, scope: !5756)
!5766 = !DILocation(line: 2098, column: 30, scope: !5756)
!5767 = !DILocation(line: 2098, column: 37, scope: !5756)
!5768 = !DILocation(line: 2098, column: 41, scope: !5756)
!5769 = !DILocation(line: 2098, column: 50, scope: !5756)
!5770 = !DILocation(line: 2098, column: 3, scope: !5756)
!5771 = !DILocation(line: 2101, column: 27, scope: !5756)
!5772 = !DILocation(line: 2101, column: 18, scope: !5756)
!5773 = !DILocation(line: 2101, column: 32, scope: !5756)
!5774 = !DILocation(line: 2101, column: 3, scope: !5756)
!5775 = !DILocation(line: 2101, column: 10, scope: !5756)
!5776 = !DILocation(line: 2101, column: 15, scope: !5756)
!5777 = !DILocation(line: 2102, column: 27, scope: !5756)
!5778 = !DILocation(line: 2102, column: 18, scope: !5756)
!5779 = !DILocation(line: 2102, column: 32, scope: !5756)
!5780 = !DILocation(line: 2102, column: 3, scope: !5756)
!5781 = !DILocation(line: 2102, column: 10, scope: !5756)
!5782 = !DILocation(line: 2102, column: 15, scope: !5756)
!5783 = !DILocation(line: 2104, column: 9, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2104, column: 7)
!5785 = !DILocation(line: 2104, column: 7, scope: !5784)
!5786 = !DILocation(line: 2104, column: 7, scope: !5756)
!5787 = !DILocation(line: 2105, column: 19, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 2104, column: 14)
!5789 = !DILocation(line: 2105, column: 23, scope: !5788)
!5790 = !DILocation(line: 2105, column: 32, scope: !5788)
!5791 = !DILocation(line: 2105, column: 18, scope: !5788)
!5792 = !DILocation(line: 2105, column: 45, scope: !5788)
!5793 = !DILocation(line: 2105, column: 49, scope: !5788)
!5794 = !DILocation(line: 2105, column: 56, scope: !5788)
!5795 = !DILocation(line: 2105, column: 55, scope: !5788)
!5796 = !DILocation(line: 2105, column: 39, scope: !5788)
!5797 = !DILocation(line: 2105, column: 37, scope: !5788)
!5798 = !DILocation(line: 2105, column: 4, scope: !5788)
!5799 = !DILocation(line: 2105, column: 11, scope: !5788)
!5800 = !DILocation(line: 2105, column: 16, scope: !5788)
!5801 = !DILocation(line: 2106, column: 19, scope: !5788)
!5802 = !DILocation(line: 2106, column: 23, scope: !5788)
!5803 = !DILocation(line: 2106, column: 32, scope: !5788)
!5804 = !DILocation(line: 2106, column: 18, scope: !5788)
!5805 = !DILocation(line: 2106, column: 45, scope: !5788)
!5806 = !DILocation(line: 2106, column: 49, scope: !5788)
!5807 = !DILocation(line: 2106, column: 56, scope: !5788)
!5808 = !DILocation(line: 2106, column: 55, scope: !5788)
!5809 = !DILocation(line: 2106, column: 39, scope: !5788)
!5810 = !DILocation(line: 2106, column: 37, scope: !5788)
!5811 = !DILocation(line: 2106, column: 4, scope: !5788)
!5812 = !DILocation(line: 2106, column: 11, scope: !5788)
!5813 = !DILocation(line: 2106, column: 16, scope: !5788)
!5814 = !DILocation(line: 2107, column: 3, scope: !5788)
!5815 = !DILocation(line: 2108, column: 16, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 2108, column: 12)
!5817 = !DILocation(line: 2108, column: 12, scope: !5816)
!5818 = !DILocation(line: 2108, column: 12, scope: !5784)
!5819 = !DILocation(line: 2109, column: 19, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 2108, column: 25)
!5821 = !DILocation(line: 2109, column: 23, scope: !5820)
!5822 = !DILocation(line: 2109, column: 32, scope: !5820)
!5823 = !DILocation(line: 2109, column: 18, scope: !5820)
!5824 = !DILocation(line: 2109, column: 55, scope: !5820)
!5825 = !DILocation(line: 2109, column: 51, scope: !5820)
!5826 = !DILocation(line: 2109, column: 62, scope: !5820)
!5827 = !DILocation(line: 2109, column: 39, scope: !5820)
!5828 = !DILocation(line: 2109, column: 37, scope: !5820)
!5829 = !DILocation(line: 2109, column: 4, scope: !5820)
!5830 = !DILocation(line: 2109, column: 11, scope: !5820)
!5831 = !DILocation(line: 2109, column: 16, scope: !5820)
!5832 = !DILocation(line: 2110, column: 19, scope: !5820)
!5833 = !DILocation(line: 2110, column: 23, scope: !5820)
!5834 = !DILocation(line: 2110, column: 32, scope: !5820)
!5835 = !DILocation(line: 2110, column: 18, scope: !5820)
!5836 = !DILocation(line: 2110, column: 55, scope: !5820)
!5837 = !DILocation(line: 2110, column: 51, scope: !5820)
!5838 = !DILocation(line: 2110, column: 62, scope: !5820)
!5839 = !DILocation(line: 2110, column: 39, scope: !5820)
!5840 = !DILocation(line: 2110, column: 37, scope: !5820)
!5841 = !DILocation(line: 2110, column: 4, scope: !5820)
!5842 = !DILocation(line: 2110, column: 11, scope: !5820)
!5843 = !DILocation(line: 2110, column: 16, scope: !5820)
!5844 = !DILocation(line: 2111, column: 3, scope: !5820)
!5845 = !DILocation(line: 2113, column: 19, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 2112, column: 8)
!5847 = !DILocation(line: 2113, column: 23, scope: !5846)
!5848 = !DILocation(line: 2113, column: 32, scope: !5846)
!5849 = !DILocation(line: 2113, column: 18, scope: !5846)
!5850 = !DILocation(line: 2113, column: 4, scope: !5846)
!5851 = !DILocation(line: 2113, column: 11, scope: !5846)
!5852 = !DILocation(line: 2113, column: 16, scope: !5846)
!5853 = !DILocation(line: 2114, column: 19, scope: !5846)
!5854 = !DILocation(line: 2114, column: 23, scope: !5846)
!5855 = !DILocation(line: 2114, column: 32, scope: !5846)
!5856 = !DILocation(line: 2114, column: 18, scope: !5846)
!5857 = !DILocation(line: 2114, column: 4, scope: !5846)
!5858 = !DILocation(line: 2114, column: 11, scope: !5846)
!5859 = !DILocation(line: 2114, column: 16, scope: !5846)
!5860 = !DILocation(line: 2117, column: 3, scope: !5756)
!5861 = !DILocation(line: 2117, column: 10, scope: !5756)
!5862 = !DILocation(line: 2117, column: 16, scope: !5756)
!5863 = !DILocation(line: 2118, column: 3, scope: !5756)
!5864 = !DILocation(line: 2118, column: 10, scope: !5756)
!5865 = !DILocation(line: 2118, column: 16, scope: !5756)
!5866 = !DILocation(line: 2121, column: 7, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2121, column: 7)
!5868 = !DILocation(line: 2121, column: 18, scope: !5867)
!5869 = !DILocation(line: 2121, column: 25, scope: !5867)
!5870 = !DILocation(line: 2121, column: 15, scope: !5867)
!5871 = !DILocation(line: 2121, column: 7, scope: !5756)
!5872 = !DILocation(line: 2122, column: 18, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2121, column: 29)
!5874 = !DILocation(line: 2122, column: 22, scope: !5873)
!5875 = !DILocation(line: 2122, column: 4, scope: !5873)
!5876 = !DILocation(line: 2122, column: 11, scope: !5873)
!5877 = !DILocation(line: 2122, column: 16, scope: !5873)
!5878 = !DILocation(line: 2123, column: 18, scope: !5873)
!5879 = !DILocation(line: 2123, column: 22, scope: !5873)
!5880 = !DILocation(line: 2123, column: 4, scope: !5873)
!5881 = !DILocation(line: 2123, column: 11, scope: !5873)
!5882 = !DILocation(line: 2123, column: 16, scope: !5873)
!5883 = !DILocation(line: 2125, column: 8, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 2125, column: 8)
!5885 = !DILocation(line: 2125, column: 8, scope: !5873)
!5886 = !DILocation(line: 2126, column: 19, scope: !5884)
!5887 = !DILocation(line: 2126, column: 23, scope: !5884)
!5888 = !DILocation(line: 2126, column: 5, scope: !5884)
!5889 = !DILocation(line: 2126, column: 12, scope: !5884)
!5890 = !DILocation(line: 2126, column: 17, scope: !5884)
!5891 = !DILocation(line: 2128, column: 19, scope: !5884)
!5892 = !DILocation(line: 2128, column: 23, scope: !5884)
!5893 = !DILocation(line: 2128, column: 5, scope: !5884)
!5894 = !DILocation(line: 2128, column: 12, scope: !5884)
!5895 = !DILocation(line: 2128, column: 17, scope: !5884)
!5896 = !DILocation(line: 2129, column: 3, scope: !5873)
!5897 = !DILocation(line: 2131, column: 18, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2130, column: 8)
!5899 = !DILocation(line: 2131, column: 42, scope: !5898)
!5900 = !DILocation(line: 2131, column: 46, scope: !5898)
!5901 = !DILocation(line: 2131, column: 41, scope: !5898)
!5902 = !DILocation(line: 2131, column: 52, scope: !5898)
!5903 = !DILocation(line: 2131, column: 56, scope: !5898)
!5904 = !DILocation(line: 2131, column: 51, scope: !5898)
!5905 = !DILocation(line: 2131, column: 4, scope: !5898)
!5906 = !DILocation(line: 2131, column: 11, scope: !5898)
!5907 = !DILocation(line: 2131, column: 16, scope: !5898)
!5908 = !DILocation(line: 2132, column: 18, scope: !5898)
!5909 = !DILocation(line: 2132, column: 42, scope: !5898)
!5910 = !DILocation(line: 2132, column: 46, scope: !5898)
!5911 = !DILocation(line: 2132, column: 41, scope: !5898)
!5912 = !DILocation(line: 2132, column: 52, scope: !5898)
!5913 = !DILocation(line: 2132, column: 56, scope: !5898)
!5914 = !DILocation(line: 2132, column: 51, scope: !5898)
!5915 = !DILocation(line: 2132, column: 4, scope: !5898)
!5916 = !DILocation(line: 2132, column: 11, scope: !5898)
!5917 = !DILocation(line: 2132, column: 16, scope: !5898)
!5918 = !DILocation(line: 2133, column: 18, scope: !5898)
!5919 = !DILocation(line: 2133, column: 42, scope: !5898)
!5920 = !DILocation(line: 2133, column: 46, scope: !5898)
!5921 = !DILocation(line: 2133, column: 41, scope: !5898)
!5922 = !DILocation(line: 2133, column: 52, scope: !5898)
!5923 = !DILocation(line: 2133, column: 56, scope: !5898)
!5924 = !DILocation(line: 2133, column: 51, scope: !5898)
!5925 = !DILocation(line: 2133, column: 4, scope: !5898)
!5926 = !DILocation(line: 2133, column: 11, scope: !5898)
!5927 = !DILocation(line: 2133, column: 16, scope: !5898)
!5928 = !DILocation(line: 2136, column: 12, scope: !5756)
!5929 = !DILocation(line: 2136, column: 19, scope: !5756)
!5930 = !DILocation(line: 2136, column: 26, scope: !5756)
!5931 = !DILocation(line: 2136, column: 30, scope: !5756)
!5932 = !DILocation(line: 2136, column: 37, scope: !5756)
!5933 = !DILocation(line: 2136, column: 41, scope: !5756)
!5934 = !DILocation(line: 2136, column: 3, scope: !5756)
!5935 = !DILocation(line: 2137, column: 12, scope: !5756)
!5936 = !DILocation(line: 2137, column: 19, scope: !5756)
!5937 = !DILocation(line: 2137, column: 26, scope: !5756)
!5938 = !DILocation(line: 2137, column: 30, scope: !5756)
!5939 = !DILocation(line: 2137, column: 37, scope: !5756)
!5940 = !DILocation(line: 2137, column: 41, scope: !5756)
!5941 = !DILocation(line: 2137, column: 3, scope: !5756)
!5942 = !DILocation(line: 2138, column: 12, scope: !5756)
!5943 = !DILocation(line: 2138, column: 19, scope: !5756)
!5944 = !DILocation(line: 2138, column: 26, scope: !5756)
!5945 = !DILocation(line: 2138, column: 30, scope: !5756)
!5946 = !DILocation(line: 2138, column: 37, scope: !5756)
!5947 = !DILocation(line: 2138, column: 41, scope: !5756)
!5948 = !DILocation(line: 2138, column: 3, scope: !5756)
!5949 = !DILocation(line: 2139, column: 2, scope: !5756)
!5950 = !DILocation(line: 2094, column: 42, scope: !5751)
!5951 = !DILocation(line: 2094, column: 2, scope: !5751)
!5952 = distinct !{!5952, !5754, !5953}
!5953 = !DILocation(line: 2139, column: 2, scope: !5748)
!5954 = !DILocation(line: 2142, column: 6, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 2142, column: 6)
!5956 = !DILocation(line: 2142, column: 10, scope: !5955)
!5957 = !DILocation(line: 2142, column: 18, scope: !5955)
!5958 = !DILocation(line: 2142, column: 6, scope: !5584)
!5959 = !DILocation(line: 2143, column: 12, scope: !5955)
!5960 = !DILocation(line: 2143, column: 3, scope: !5955)
!5961 = !DILocation(line: 2145, column: 2, scope: !5584)
!5962 = !DILocation(line: 2145, column: 9, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2145, column: 2)
!5964 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 2145, column: 2)
!5965 = !DILocation(line: 2145, column: 19, scope: !5963)
!5966 = !DILocation(line: 2145, column: 2, scope: !5964)
!5967 = !DILocation(line: 2146, column: 5, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2145, column: 37)
!5969 = !DILocation(line: 2149, column: 15, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 2149, column: 3)
!5971 = !DILocation(line: 2149, column: 8, scope: !5970)
!5972 = !DILocation(line: 2149, column: 19, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 2149, column: 3)
!5974 = !DILocation(line: 2149, column: 27, scope: !5973)
!5975 = !DILocation(line: 2149, column: 26, scope: !5973)
!5976 = !DILocation(line: 2149, column: 3, scope: !5970)
!5977 = !DILocation(line: 2150, column: 19, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 2149, column: 47)
!5979 = !DILocation(line: 2150, column: 12, scope: !5978)
!5980 = !DILocation(line: 2150, column: 9, scope: !5978)
!5981 = !DILocation(line: 2152, column: 8, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2152, column: 8)
!5983 = !DILocation(line: 2152, column: 18, scope: !5982)
!5984 = !DILocation(line: 2152, column: 21, scope: !5982)
!5985 = !DILocation(line: 2152, column: 8, scope: !5978)
!5986 = !DILocation(line: 2153, column: 5, scope: !5982)
!5987 = !DILocation(line: 2153, column: 12, scope: !5982)
!5988 = !DILocation(line: 2153, column: 20, scope: !5982)
!5989 = !DILocation(line: 2155, column: 5, scope: !5982)
!5990 = !DILocation(line: 2155, column: 12, scope: !5982)
!5991 = !DILocation(line: 2155, column: 20, scope: !5982)
!5992 = !DILocation(line: 2156, column: 4, scope: !5978)
!5993 = !DILocation(line: 2156, column: 11, scope: !5978)
!5994 = !DILocation(line: 2156, column: 23, scope: !5978)
!5995 = !DILocation(line: 2157, column: 3, scope: !5978)
!5996 = !DILocation(line: 2149, column: 43, scope: !5973)
!5997 = !DILocation(line: 2149, column: 3, scope: !5973)
!5998 = distinct !{!5998, !5976, !5999}
!5999 = !DILocation(line: 2157, column: 3, scope: !5970)
!6000 = !DILocation(line: 2160, column: 9, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 2160, column: 3)
!6002 = !DILocation(line: 2160, column: 33, scope: !6001)
!6003 = !DILocation(line: 2160, column: 17, scope: !6001)
!6004 = !DILocation(line: 2160, column: 16, scope: !6001)
!6005 = !DILocation(line: 2160, column: 8, scope: !6001)
!6006 = !DILocation(line: 2160, column: 40, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2160, column: 3)
!6008 = !DILocation(line: 2160, column: 3, scope: !6001)
!6009 = !DILocation(line: 2161, column: 9, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 2160, column: 65)
!6011 = !DILocation(line: 2161, column: 14, scope: !6010)
!6012 = !DILocation(line: 2161, column: 7, scope: !6010)
!6013 = !DILocation(line: 2164, column: 8, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2164, column: 8)
!6015 = !DILocation(line: 2164, column: 8, scope: !6010)
!6016 = !DILocation(line: 2165, column: 10, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2165, column: 9)
!6018 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2164, column: 19)
!6019 = !DILocation(line: 2165, column: 15, scope: !6017)
!6020 = !DILocation(line: 2165, column: 21, scope: !6017)
!6021 = !DILocation(line: 2165, column: 19, scope: !6017)
!6022 = !DILocation(line: 2165, column: 31, scope: !6017)
!6023 = !DILocation(line: 2165, column: 9, scope: !6018)
!6024 = !DILocation(line: 2166, column: 6, scope: !6017)
!6025 = !DILocation(line: 2167, column: 4, scope: !6018)
!6026 = !DILocation(line: 2168, column: 14, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2168, column: 13)
!6028 = !DILocation(line: 2168, column: 20, scope: !6027)
!6029 = !DILocation(line: 2168, column: 25, scope: !6027)
!6030 = !DILocation(line: 2168, column: 30, scope: !6027)
!6031 = !DILocation(line: 2168, column: 37, scope: !6027)
!6032 = !DILocation(line: 2168, column: 41, scope: !6027)
!6033 = !DILocation(line: 2168, column: 40, scope: !6027)
!6034 = !DILocation(line: 2168, column: 34, scope: !6027)
!6035 = !DILocation(line: 2168, column: 13, scope: !6014)
!6036 = !DILocation(line: 2169, column: 5, scope: !6027)
!6037 = !DILocation(line: 2171, column: 8, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2171, column: 8)
!6039 = !DILocation(line: 2171, column: 13, scope: !6038)
!6040 = !DILocation(line: 2171, column: 18, scope: !6038)
!6041 = !DILocation(line: 2171, column: 8, scope: !6010)
!6042 = !DILocation(line: 2172, column: 17, scope: !6038)
!6043 = !DILocation(line: 2172, column: 27, scope: !6038)
!6044 = !DILocation(line: 2172, column: 35, scope: !6038)
!6045 = !DILocation(line: 2172, column: 40, scope: !6038)
!6046 = !DILocation(line: 2172, column: 5, scope: !6038)
!6047 = !DILocation(line: 2174, column: 16, scope: !6038)
!6048 = !DILocation(line: 2174, column: 26, scope: !6038)
!6049 = !DILocation(line: 2174, column: 5, scope: !6038)
!6050 = !DILocation(line: 2176, column: 27, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2176, column: 8)
!6052 = !DILocation(line: 2176, column: 32, scope: !6051)
!6053 = !DILocation(line: 2176, column: 37, scope: !6051)
!6054 = !DILocation(line: 2176, column: 47, scope: !6051)
!6055 = !DILocation(line: 2176, column: 55, scope: !6051)
!6056 = !DILocation(line: 2176, column: 8, scope: !6051)
!6057 = !DILocation(line: 2176, column: 8, scope: !6010)
!6058 = !DILocation(line: 2177, column: 5, scope: !6051)
!6059 = !DILocation(line: 2179, column: 29, scope: !6010)
!6060 = !DILocation(line: 2179, column: 36, scope: !6010)
!6061 = !DILocation(line: 2179, column: 41, scope: !6010)
!6062 = !DILocation(line: 2179, column: 4, scope: !6010)
!6063 = !DILocation(line: 2181, column: 10, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2181, column: 4)
!6065 = !DILocation(line: 2181, column: 9, scope: !6064)
!6066 = !DILocation(line: 2181, column: 14, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 2181, column: 4)
!6068 = !DILocation(line: 2181, column: 16, scope: !6067)
!6069 = !DILocation(line: 2181, column: 21, scope: !6067)
!6070 = !DILocation(line: 2181, column: 15, scope: !6067)
!6071 = !DILocation(line: 2181, column: 4, scope: !6064)
!6072 = !DILocation(line: 2182, column: 10, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 2182, column: 9)
!6074 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2181, column: 35)
!6075 = !DILocation(line: 2182, column: 12, scope: !6073)
!6076 = !DILocation(line: 2182, column: 18, scope: !6073)
!6077 = !DILocation(line: 2182, column: 9, scope: !6074)
!6078 = !DILocation(line: 2182, column: 28, scope: !6073)
!6079 = !DILocation(line: 2182, column: 33, scope: !6073)
!6080 = !DILocation(line: 2182, column: 43, scope: !6073)
!6081 = !DILocation(line: 2182, column: 44, scope: !6073)
!6082 = !DILocation(line: 2182, column: 49, scope: !6073)
!6083 = !DILocation(line: 2182, column: 26, scope: !6073)
!6084 = !DILocation(line: 2182, column: 23, scope: !6073)
!6085 = !DILocation(line: 2183, column: 13, scope: !6073)
!6086 = !DILocation(line: 2186, column: 9, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 2186, column: 9)
!6088 = !DILocation(line: 2186, column: 14, scope: !6087)
!6089 = !DILocation(line: 2186, column: 20, scope: !6087)
!6090 = !DILocation(line: 2186, column: 18, scope: !6087)
!6091 = !DILocation(line: 2186, column: 9, scope: !6074)
!6092 = !DILocation(line: 2187, column: 10, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 2187, column: 10)
!6094 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 2186, column: 25)
!6095 = !DILocation(line: 2187, column: 15, scope: !6093)
!6096 = !DILocation(line: 2187, column: 20, scope: !6093)
!6097 = !DILocation(line: 2187, column: 18, scope: !6093)
!6098 = !DILocation(line: 2187, column: 10, scope: !6094)
!6099 = !DILocation(line: 2188, column: 11, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 2187, column: 24)
!6101 = !DILocation(line: 2188, column: 16, scope: !6100)
!6102 = !DILocation(line: 2188, column: 9, scope: !6100)
!6103 = !DILocation(line: 2189, column: 16, scope: !6100)
!6104 = !DILocation(line: 2189, column: 20, scope: !6100)
!6105 = !DILocation(line: 2189, column: 25, scope: !6100)
!6106 = !DILocation(line: 2189, column: 40, scope: !6100)
!6107 = !DILocation(line: 2189, column: 45, scope: !6100)
!6108 = !DILocation(line: 2189, column: 49, scope: !6100)
!6109 = !DILocation(line: 2189, column: 54, scope: !6100)
!6110 = !DILocation(line: 2189, column: 67, scope: !6100)
!6111 = !DILocation(line: 2189, column: 71, scope: !6100)
!6112 = !DILocation(line: 2189, column: 75, scope: !6100)
!6113 = !DILocation(line: 2189, column: 80, scope: !6100)
!6114 = !DILocation(line: 0, scope: !6100)
!6115 = !DILocation(line: 2189, column: 15, scope: !6100)
!6116 = !DILocation(line: 2189, column: 13, scope: !6100)
!6117 = !DILocation(line: 2190, column: 13, scope: !6100)
!6118 = !DILocation(line: 2190, column: 17, scope: !6100)
!6119 = !DILocation(line: 2190, column: 22, scope: !6100)
!6120 = !DILocation(line: 2190, column: 12, scope: !6100)
!6121 = !DILocation(line: 2190, column: 10, scope: !6100)
!6122 = !DILocation(line: 2191, column: 14, scope: !6100)
!6123 = !DILocation(line: 2191, column: 18, scope: !6100)
!6124 = !DILocation(line: 2191, column: 32, scope: !6100)
!6125 = !DILocation(line: 2191, column: 13, scope: !6100)
!6126 = !DILocation(line: 2191, column: 11, scope: !6100)
!6127 = !DILocation(line: 2193, column: 19, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 2193, column: 7)
!6129 = !DILocation(line: 2193, column: 12, scope: !6128)
!6130 = !DILocation(line: 2193, column: 23, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 2193, column: 7)
!6132 = !DILocation(line: 2193, column: 31, scope: !6131)
!6133 = !DILocation(line: 2193, column: 30, scope: !6131)
!6134 = !DILocation(line: 2193, column: 7, scope: !6128)
!6135 = !DILocation(line: 2194, column: 12, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 2194, column: 12)
!6137 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 2193, column: 51)
!6138 = !DILocation(line: 2194, column: 16, scope: !6136)
!6139 = !DILocation(line: 2194, column: 21, scope: !6136)
!6140 = !DILocation(line: 2194, column: 31, scope: !6136)
!6141 = !DILocation(line: 2194, column: 35, scope: !6136)
!6142 = !DILocation(line: 2194, column: 45, scope: !6136)
!6143 = !DILocation(line: 2194, column: 48, scope: !6136)
!6144 = !DILocation(line: 2194, column: 12, scope: !6137)
!6145 = !DILocation(line: 2195, column: 16, scope: !6136)
!6146 = !DILocation(line: 2195, column: 9, scope: !6136)
!6147 = !DILocation(line: 2195, column: 25, scope: !6136)
!6148 = !DILocation(line: 2195, column: 33, scope: !6136)
!6149 = !DILocation(line: 2197, column: 16, scope: !6136)
!6150 = !DILocation(line: 2197, column: 9, scope: !6136)
!6151 = !DILocation(line: 2197, column: 25, scope: !6136)
!6152 = !DILocation(line: 2197, column: 33, scope: !6136)
!6153 = !DILocation(line: 2198, column: 7, scope: !6137)
!6154 = !DILocation(line: 2193, column: 47, scope: !6131)
!6155 = !DILocation(line: 2193, column: 7, scope: !6131)
!6156 = distinct !{!6156, !6134, !6157}
!6157 = !DILocation(line: 2198, column: 7, scope: !6128)
!6158 = !DILocation(line: 2199, column: 6, scope: !6100)
!6159 = !DILocation(line: 2200, column: 5, scope: !6094)
!6160 = !DILocation(line: 2201, column: 14, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 2201, column: 14)
!6162 = !DILocation(line: 2201, column: 20, scope: !6161)
!6163 = !DILocation(line: 2201, column: 24, scope: !6161)
!6164 = !DILocation(line: 2201, column: 29, scope: !6161)
!6165 = !DILocation(line: 2201, column: 35, scope: !6161)
!6166 = !DILocation(line: 2201, column: 33, scope: !6161)
!6167 = !DILocation(line: 2201, column: 14, scope: !6087)
!6168 = !DILocation(line: 2202, column: 9, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 2201, column: 47)
!6170 = !DILocation(line: 2203, column: 12, scope: !6169)
!6171 = !DILocation(line: 2204, column: 8, scope: !6169)
!6172 = !DILocation(line: 2205, column: 5, scope: !6169)
!6173 = !DILocation(line: 2207, column: 12, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 2206, column: 10)
!6175 = !DILocation(line: 2208, column: 8, scope: !6174)
!6176 = !DILocation(line: 2211, column: 11, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 2211, column: 9)
!6178 = !DILocation(line: 2211, column: 16, scope: !6177)
!6179 = !DILocation(line: 2211, column: 21, scope: !6177)
!6180 = !DILocation(line: 2211, column: 33, scope: !6177)
!6181 = !DILocation(line: 2211, column: 36, scope: !6177)
!6182 = !DILocation(line: 2211, column: 42, scope: !6177)
!6183 = !DILocation(line: 2211, column: 9, scope: !6074)
!6184 = !DILocalVariable(name: "partclip", scope: !6185, file: !3, line: 2212, type: !103)
!6185 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2211, column: 47)
!6186 = !DILocation(line: 2212, column: 21, scope: !6185)
!6187 = !DILocation(line: 2214, column: 10, scope: !6185)
!6188 = !DILocation(line: 2214, column: 15, scope: !6185)
!6189 = !DILocation(line: 2214, column: 8, scope: !6185)
!6190 = !DILocation(line: 2215, column: 10, scope: !6185)
!6191 = !DILocation(line: 2215, column: 15, scope: !6185)
!6192 = !DILocation(line: 2215, column: 8, scope: !6185)
!6193 = !DILocation(line: 2216, column: 10, scope: !6185)
!6194 = !DILocation(line: 2216, column: 15, scope: !6185)
!6195 = !DILocation(line: 2216, column: 8, scope: !6185)
!6196 = !DILocation(line: 2217, column: 10, scope: !6185)
!6197 = !DILocation(line: 2217, column: 15, scope: !6185)
!6198 = !DILocation(line: 2217, column: 8, scope: !6185)
!6199 = !DILocation(line: 2219, column: 28, scope: !6185)
!6200 = !DILocation(line: 2219, column: 35, scope: !6185)
!6201 = !DILocation(line: 2219, column: 39, scope: !6185)
!6202 = !DILocation(line: 2219, column: 46, scope: !6185)
!6203 = !DILocation(line: 2219, column: 56, scope: !6185)
!6204 = !DILocation(line: 2219, column: 64, scope: !6185)
!6205 = !DILocation(line: 2219, column: 68, scope: !6185)
!6206 = !DILocation(line: 2219, column: 72, scope: !6185)
!6207 = !DILocation(line: 2219, column: 10, scope: !6185)
!6208 = !DILocation(line: 2219, column: 8, scope: !6185)
!6209 = !DILocation(line: 2220, column: 28, scope: !6185)
!6210 = !DILocation(line: 2220, column: 35, scope: !6185)
!6211 = !DILocation(line: 2220, column: 39, scope: !6185)
!6212 = !DILocation(line: 2220, column: 46, scope: !6185)
!6213 = !DILocation(line: 2220, column: 56, scope: !6185)
!6214 = !DILocation(line: 2220, column: 64, scope: !6185)
!6215 = !DILocation(line: 2220, column: 68, scope: !6185)
!6216 = !DILocation(line: 2220, column: 72, scope: !6185)
!6217 = !DILocation(line: 2220, column: 10, scope: !6185)
!6218 = !DILocation(line: 2220, column: 8, scope: !6185)
!6219 = !DILocation(line: 2221, column: 28, scope: !6185)
!6220 = !DILocation(line: 2221, column: 35, scope: !6185)
!6221 = !DILocation(line: 2221, column: 39, scope: !6185)
!6222 = !DILocation(line: 2221, column: 46, scope: !6185)
!6223 = !DILocation(line: 2221, column: 56, scope: !6185)
!6224 = !DILocation(line: 2221, column: 64, scope: !6185)
!6225 = !DILocation(line: 2221, column: 68, scope: !6185)
!6226 = !DILocation(line: 2221, column: 72, scope: !6185)
!6227 = !DILocation(line: 2221, column: 10, scope: !6185)
!6228 = !DILocation(line: 2221, column: 8, scope: !6185)
!6229 = !DILocation(line: 2224, column: 16, scope: !6185)
!6230 = !DILocation(line: 2224, column: 21, scope: !6185)
!6231 = !DILocation(line: 2224, column: 19, scope: !6185)
!6232 = !DILocation(line: 2224, column: 26, scope: !6185)
!6233 = !DILocation(line: 2224, column: 24, scope: !6185)
!6234 = !DILocation(line: 2224, column: 14, scope: !6185)
!6235 = !DILocation(line: 2225, column: 10, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 2225, column: 10)
!6237 = !DILocation(line: 2225, column: 10, scope: !6185)
!6238 = !DILocation(line: 2226, column: 29, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 2225, column: 14)
!6240 = !DILocation(line: 2226, column: 36, scope: !6239)
!6241 = !DILocation(line: 2226, column: 40, scope: !6239)
!6242 = !DILocation(line: 2226, column: 47, scope: !6239)
!6243 = !DILocation(line: 2226, column: 57, scope: !6239)
!6244 = !DILocation(line: 2226, column: 65, scope: !6239)
!6245 = !DILocation(line: 2226, column: 69, scope: !6239)
!6246 = !DILocation(line: 2226, column: 73, scope: !6239)
!6247 = !DILocation(line: 2226, column: 11, scope: !6239)
!6248 = !DILocation(line: 2226, column: 9, scope: !6239)
!6249 = !DILocation(line: 2227, column: 19, scope: !6239)
!6250 = !DILocation(line: 2227, column: 16, scope: !6239)
!6251 = !DILocation(line: 2228, column: 6, scope: !6239)
!6252 = !DILocation(line: 2230, column: 10, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 2230, column: 10)
!6254 = !DILocation(line: 2230, column: 18, scope: !6253)
!6255 = !DILocation(line: 2230, column: 10, scope: !6185)
!6256 = !DILocation(line: 2232, column: 11, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2232, column: 11)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2230, column: 23)
!6259 = !DILocation(line: 2232, column: 11, scope: !6258)
!6260 = !DILocation(line: 2232, column: 21, scope: !6257)
!6261 = !DILocation(line: 2232, column: 16, scope: !6257)
!6262 = !DILocation(line: 2233, column: 19, scope: !6257)
!6263 = !DILocation(line: 2233, column: 20, scope: !6257)
!6264 = !DILocation(line: 2233, column: 17, scope: !6257)
!6265 = !DILocation(line: 2235, column: 20, scope: !6258)
!6266 = !DILocation(line: 2235, column: 11, scope: !6258)
!6267 = !DILocation(line: 2235, column: 9, scope: !6258)
!6268 = !DILocation(line: 2236, column: 20, scope: !6258)
!6269 = !DILocation(line: 2236, column: 11, scope: !6258)
!6270 = !DILocation(line: 2236, column: 9, scope: !6258)
!6271 = !DILocation(line: 2237, column: 20, scope: !6258)
!6272 = !DILocation(line: 2237, column: 11, scope: !6258)
!6273 = !DILocation(line: 2237, column: 9, scope: !6258)
!6274 = !DILocation(line: 2238, column: 11, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2238, column: 11)
!6276 = !DILocation(line: 2238, column: 11, scope: !6258)
!6277 = !DILocation(line: 2239, column: 21, scope: !6275)
!6278 = !DILocation(line: 2239, column: 12, scope: !6275)
!6279 = !DILocation(line: 2239, column: 10, scope: !6275)
!6280 = !DILocation(line: 2239, column: 8, scope: !6275)
!6281 = !DILocation(line: 2241, column: 19, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2241, column: 7)
!6283 = !DILocation(line: 2241, column: 12, scope: !6282)
!6284 = !DILocation(line: 2241, column: 23, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 2241, column: 7)
!6286 = !DILocation(line: 2241, column: 31, scope: !6285)
!6287 = !DILocation(line: 2241, column: 30, scope: !6285)
!6288 = !DILocation(line: 2241, column: 7, scope: !6282)
!6289 = !DILocation(line: 2242, column: 23, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 2241, column: 51)
!6291 = !DILocation(line: 2242, column: 16, scope: !6290)
!6292 = !DILocation(line: 2242, column: 13, scope: !6290)
!6293 = !DILocation(line: 2244, column: 12, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2244, column: 12)
!6295 = !DILocation(line: 2244, column: 12, scope: !6290)
!6296 = !DILocation(line: 2245, column: 13, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 2245, column: 13)
!6298 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2244, column: 18)
!6299 = !DILocation(line: 2245, column: 13, scope: !6298)
!6300 = !DILocation(line: 2246, column: 23, scope: !6297)
!6301 = !DILocation(line: 2246, column: 30, scope: !6297)
!6302 = !DILocation(line: 2246, column: 33, scope: !6297)
!6303 = !DILocation(line: 2246, column: 40, scope: !6297)
!6304 = !DILocation(line: 2246, column: 45, scope: !6297)
!6305 = !DILocation(line: 2246, column: 49, scope: !6297)
!6306 = !DILocation(line: 2246, column: 54, scope: !6297)
!6307 = !DILocation(line: 2246, column: 59, scope: !6297)
!6308 = !DILocation(line: 2246, column: 64, scope: !6297)
!6309 = !DILocation(line: 2246, column: 69, scope: !6297)
!6310 = !DILocation(line: 2246, column: 73, scope: !6297)
!6311 = !DILocation(line: 2246, column: 77, scope: !6297)
!6312 = !DILocation(line: 2246, column: 81, scope: !6297)
!6313 = !DILocation(line: 2246, column: 10, scope: !6297)
!6314 = !DILocation(line: 2248, column: 23, scope: !6297)
!6315 = !DILocation(line: 2248, column: 30, scope: !6297)
!6316 = !DILocation(line: 2248, column: 33, scope: !6297)
!6317 = !DILocation(line: 2248, column: 40, scope: !6297)
!6318 = !DILocation(line: 2248, column: 45, scope: !6297)
!6319 = !DILocation(line: 2248, column: 49, scope: !6297)
!6320 = !DILocation(line: 2248, column: 54, scope: !6297)
!6321 = !DILocation(line: 2248, column: 59, scope: !6297)
!6322 = !DILocation(line: 2248, column: 70, scope: !6297)
!6323 = !DILocation(line: 2248, column: 74, scope: !6297)
!6324 = !DILocation(line: 2248, column: 78, scope: !6297)
!6325 = !DILocation(line: 2248, column: 10, scope: !6297)
!6326 = !DILocation(line: 2249, column: 8, scope: !6298)
!6327 = !DILocation(line: 2252, column: 13, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 2252, column: 13)
!6329 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2250, column: 13)
!6330 = !DILocation(line: 2252, column: 16, scope: !6328)
!6331 = !DILocation(line: 2252, column: 20, scope: !6328)
!6332 = !DILocation(line: 2252, column: 25, scope: !6328)
!6333 = !DILocation(line: 2252, column: 30, scope: !6328)
!6334 = !DILocation(line: 2252, column: 13, scope: !6329)
!6335 = !DILocation(line: 2253, column: 20, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 2252, column: 43)
!6337 = !DILocation(line: 2253, column: 27, scope: !6336)
!6338 = !DILocation(line: 2253, column: 30, scope: !6336)
!6339 = !DILocation(line: 2253, column: 37, scope: !6336)
!6340 = !DILocation(line: 2253, column: 42, scope: !6336)
!6341 = !DILocation(line: 2253, column: 47, scope: !6336)
!6342 = !DILocation(line: 2253, column: 52, scope: !6336)
!6343 = !DILocation(line: 2253, column: 57, scope: !6336)
!6344 = !DILocation(line: 2253, column: 61, scope: !6336)
!6345 = !DILocation(line: 2253, column: 65, scope: !6336)
!6346 = !DILocation(line: 2253, column: 69, scope: !6336)
!6347 = !DILocation(line: 2253, column: 10, scope: !6336)
!6348 = !DILocation(line: 2254, column: 9, scope: !6336)
!6349 = !DILocation(line: 2256, column: 19, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 2255, column: 14)
!6351 = !DILocation(line: 2256, column: 26, scope: !6350)
!6352 = !DILocation(line: 2256, column: 29, scope: !6350)
!6353 = !DILocation(line: 2256, column: 36, scope: !6350)
!6354 = !DILocation(line: 2256, column: 41, scope: !6350)
!6355 = !DILocation(line: 2256, column: 46, scope: !6350)
!6356 = !DILocation(line: 2256, column: 51, scope: !6350)
!6357 = !DILocation(line: 2256, column: 55, scope: !6350)
!6358 = !DILocation(line: 2256, column: 59, scope: !6350)
!6359 = !DILocation(line: 2256, column: 10, scope: !6350)
!6360 = !DILocation(line: 2257, column: 14, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 2257, column: 14)
!6362 = !DILocation(line: 2257, column: 14, scope: !6350)
!6363 = !DILocation(line: 2258, column: 20, scope: !6361)
!6364 = !DILocation(line: 2258, column: 27, scope: !6361)
!6365 = !DILocation(line: 2258, column: 31, scope: !6361)
!6366 = !DILocation(line: 2258, column: 30, scope: !6361)
!6367 = !DILocation(line: 2258, column: 37, scope: !6361)
!6368 = !DILocation(line: 2258, column: 44, scope: !6361)
!6369 = !DILocation(line: 2258, column: 49, scope: !6361)
!6370 = !DILocation(line: 2258, column: 64, scope: !6361)
!6371 = !DILocation(line: 2258, column: 69, scope: !6361)
!6372 = !DILocation(line: 2258, column: 74, scope: !6361)
!6373 = !DILocation(line: 2258, column: 79, scope: !6361)
!6374 = !DILocation(line: 2258, column: 83, scope: !6361)
!6375 = !DILocation(line: 2258, column: 87, scope: !6361)
!6376 = !DILocation(line: 2258, column: 11, scope: !6361)
!6377 = !DILocation(line: 2261, column: 7, scope: !6290)
!6378 = !DILocation(line: 2241, column: 47, scope: !6285)
!6379 = !DILocation(line: 2241, column: 7, scope: !6285)
!6380 = distinct !{!6380, !6288, !6381}
!6381 = !DILocation(line: 2261, column: 7, scope: !6282)
!6382 = !DILocation(line: 2262, column: 6, scope: !6258)
!6383 = !DILocation(line: 2263, column: 5, scope: !6185)
!6384 = !DILocation(line: 2264, column: 4, scope: !6074)
!6385 = !DILocation(line: 2181, column: 31, scope: !6067)
!6386 = !DILocation(line: 2181, column: 4, scope: !6067)
!6387 = distinct !{!6387, !6071, !6388}
!6388 = !DILocation(line: 2264, column: 4, scope: !6064)
!6389 = !DILocation(line: 2265, column: 3, scope: !6010)
!6390 = !DILocation(line: 2160, column: 46, scope: !6007)
!6391 = !DILocation(line: 2160, column: 54, scope: !6007)
!6392 = !DILocation(line: 2160, column: 59, scope: !6007)
!6393 = !DILocation(line: 2160, column: 53, scope: !6007)
!6394 = !DILocation(line: 2160, column: 3, scope: !6007)
!6395 = distinct !{!6395, !6008, !6396}
!6396 = !DILocation(line: 2265, column: 3, scope: !6001)
!6397 = !DILocation(line: 2268, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 2268, column: 7)
!6399 = !DILocation(line: 2268, column: 7, scope: !5968)
!6400 = !DILocation(line: 2269, column: 16, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 2269, column: 4)
!6402 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2268, column: 18)
!6403 = !DILocation(line: 2269, column: 9, scope: !6401)
!6404 = !DILocation(line: 2269, column: 20, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2269, column: 4)
!6406 = !DILocation(line: 2269, column: 28, scope: !6405)
!6407 = !DILocation(line: 2269, column: 27, scope: !6405)
!6408 = !DILocation(line: 2269, column: 4, scope: !6401)
!6409 = !DILocation(line: 2270, column: 20, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2269, column: 48)
!6411 = !DILocation(line: 2270, column: 13, scope: !6410)
!6412 = !DILocation(line: 2270, column: 10, scope: !6410)
!6413 = !DILocation(line: 2272, column: 9, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 2272, column: 9)
!6415 = !DILocation(line: 2272, column: 9, scope: !6410)
!6416 = !DILocation(line: 2273, column: 23, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2272, column: 20)
!6418 = !DILocation(line: 2273, column: 30, scope: !6417)
!6419 = !DILocation(line: 2273, column: 6, scope: !6417)
!6420 = !DILocation(line: 2273, column: 13, scope: !6417)
!6421 = !DILocation(line: 2273, column: 21, scope: !6417)
!6422 = !DILocation(line: 2274, column: 10, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 2274, column: 10)
!6424 = !DILocation(line: 2274, column: 21, scope: !6423)
!6425 = !DILocation(line: 2274, column: 28, scope: !6423)
!6426 = !DILocation(line: 2274, column: 18, scope: !6423)
!6427 = !DILocation(line: 2274, column: 10, scope: !6417)
!6428 = !DILocation(line: 2275, column: 21, scope: !6423)
!6429 = !DILocation(line: 2275, column: 25, scope: !6423)
!6430 = !DILocation(line: 2275, column: 7, scope: !6423)
!6431 = !DILocation(line: 2275, column: 14, scope: !6423)
!6432 = !DILocation(line: 2275, column: 19, scope: !6423)
!6433 = !DILocation(line: 2277, column: 21, scope: !6423)
!6434 = !DILocation(line: 2277, column: 45, scope: !6423)
!6435 = !DILocation(line: 2277, column: 49, scope: !6423)
!6436 = !DILocation(line: 2277, column: 44, scope: !6423)
!6437 = !DILocation(line: 2277, column: 55, scope: !6423)
!6438 = !DILocation(line: 2277, column: 59, scope: !6423)
!6439 = !DILocation(line: 2277, column: 54, scope: !6423)
!6440 = !DILocation(line: 2277, column: 7, scope: !6423)
!6441 = !DILocation(line: 2277, column: 14, scope: !6423)
!6442 = !DILocation(line: 2277, column: 19, scope: !6423)
!6443 = !DILocation(line: 2278, column: 15, scope: !6417)
!6444 = !DILocation(line: 2278, column: 22, scope: !6417)
!6445 = !DILocation(line: 2278, column: 29, scope: !6417)
!6446 = !DILocation(line: 2278, column: 33, scope: !6417)
!6447 = !DILocation(line: 2278, column: 40, scope: !6417)
!6448 = !DILocation(line: 2278, column: 44, scope: !6417)
!6449 = !DILocation(line: 2278, column: 6, scope: !6417)
!6450 = !DILocation(line: 2280, column: 17, scope: !6417)
!6451 = !DILocation(line: 2280, column: 24, scope: !6417)
!6452 = !DILocation(line: 2280, column: 34, scope: !6417)
!6453 = !DILocation(line: 2280, column: 41, scope: !6417)
!6454 = !DILocation(line: 2280, column: 48, scope: !6417)
!6455 = !DILocation(line: 2280, column: 52, scope: !6417)
!6456 = !DILocation(line: 2280, column: 59, scope: !6417)
!6457 = !DILocation(line: 2280, column: 63, scope: !6417)
!6458 = !DILocation(line: 2280, column: 6, scope: !6417)
!6459 = !DILocation(line: 2281, column: 5, scope: !6417)
!6460 = !DILocation(line: 2283, column: 17, scope: !6414)
!6461 = !DILocation(line: 2283, column: 24, scope: !6414)
!6462 = !DILocation(line: 2283, column: 31, scope: !6414)
!6463 = !DILocation(line: 2283, column: 38, scope: !6414)
!6464 = !DILocation(line: 2283, column: 45, scope: !6414)
!6465 = !DILocation(line: 2283, column: 49, scope: !6414)
!6466 = !DILocation(line: 2283, column: 56, scope: !6414)
!6467 = !DILocation(line: 2283, column: 60, scope: !6414)
!6468 = !DILocation(line: 2283, column: 6, scope: !6414)
!6469 = !DILocation(line: 2284, column: 4, scope: !6410)
!6470 = !DILocation(line: 2269, column: 44, scope: !6405)
!6471 = !DILocation(line: 2269, column: 4, scope: !6405)
!6472 = distinct !{!6472, !6408, !6473}
!6473 = !DILocation(line: 2284, column: 4, scope: !6401)
!6474 = !DILocation(line: 2285, column: 3, scope: !6402)
!6475 = !DILocation(line: 2286, column: 2, scope: !5968)
!6476 = !DILocation(line: 2145, column: 33, scope: !5963)
!6477 = !DILocation(line: 2145, column: 2, scope: !5963)
!6478 = distinct !{!6478, !5966, !6479}
!6479 = !DILocation(line: 2286, column: 2, scope: !5964)
!6480 = !DILocation(line: 2288, column: 14, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 2288, column: 2)
!6482 = !DILocation(line: 2288, column: 7, scope: !6481)
!6483 = !DILocation(line: 2288, column: 18, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2288, column: 2)
!6485 = !DILocation(line: 2288, column: 26, scope: !6484)
!6486 = !DILocation(line: 2288, column: 25, scope: !6484)
!6487 = !DILocation(line: 2288, column: 2, scope: !6481)
!6488 = !DILocation(line: 2289, column: 18, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2288, column: 46)
!6490 = !DILocation(line: 2289, column: 11, scope: !6489)
!6491 = !DILocation(line: 2289, column: 8, scope: !6489)
!6492 = !DILocation(line: 2291, column: 7, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2291, column: 7)
!6494 = !DILocation(line: 2291, column: 7, scope: !6489)
!6495 = !DILocation(line: 2292, column: 4, scope: !6493)
!6496 = !DILocation(line: 2292, column: 13, scope: !6493)
!6497 = !DILocation(line: 2292, column: 17, scope: !6493)
!6498 = !DILocation(line: 2292, column: 24, scope: !6493)
!6499 = !DILocation(line: 2292, column: 28, scope: !6493)
!6500 = !DILocation(line: 2292, column: 35, scope: !6493)
!6501 = !DILocation(line: 2292, column: 34, scope: !6493)
!6502 = !DILocation(line: 2292, column: 44, scope: !6493)
!6503 = !DILocation(line: 2294, column: 7, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2294, column: 7)
!6505 = !DILocation(line: 2294, column: 18, scope: !6504)
!6506 = !DILocation(line: 2294, column: 25, scope: !6504)
!6507 = !DILocation(line: 2294, column: 15, scope: !6504)
!6508 = !DILocation(line: 2294, column: 7, scope: !6489)
!6509 = !DILocation(line: 2295, column: 4, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 2294, column: 29)
!6511 = !DILocation(line: 2295, column: 14, scope: !6510)
!6512 = !DILocation(line: 2295, column: 21, scope: !6510)
!6513 = !DILocation(line: 2296, column: 4, scope: !6510)
!6514 = !DILocation(line: 2296, column: 14, scope: !6510)
!6515 = !DILocation(line: 2296, column: 21, scope: !6510)
!6516 = !DILocation(line: 2297, column: 4, scope: !6510)
!6517 = !DILocation(line: 2297, column: 14, scope: !6510)
!6518 = !DILocation(line: 2297, column: 21, scope: !6510)
!6519 = !DILocation(line: 2298, column: 8, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2298, column: 8)
!6521 = !DILocation(line: 2298, column: 15, scope: !6520)
!6522 = !DILocation(line: 2298, column: 8, scope: !6510)
!6523 = !DILocation(line: 2299, column: 5, scope: !6520)
!6524 = !DILocation(line: 2299, column: 15, scope: !6520)
!6525 = !DILocation(line: 2299, column: 22, scope: !6520)
!6526 = !DILocation(line: 2300, column: 3, scope: !6510)
!6527 = !DILocation(line: 2302, column: 18, scope: !6489)
!6528 = !DILocation(line: 2302, column: 3, scope: !6489)
!6529 = !DILocation(line: 2303, column: 2, scope: !6489)
!6530 = !DILocation(line: 2288, column: 42, scope: !6484)
!6531 = !DILocation(line: 2288, column: 2, scope: !6484)
!6532 = distinct !{!6532, !6487, !6533}
!6533 = !DILocation(line: 2303, column: 2, scope: !6481)
!6534 = !DILocation(line: 2304, column: 1, scope: !5584)
!6535 = distinct !DISubprogram(name: "zbuffer_part_bounds", scope: !3, file: !3, line: 1785, type: !6536, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{null, !29, !29, !5587, !31}
!6538 = !DILocalVariable(name: "winx", arg: 1, scope: !6535, file: !3, line: 1785, type: !29)
!6539 = !DILocation(line: 1785, column: 37, scope: !6535)
!6540 = !DILocalVariable(name: "winy", arg: 2, scope: !6535, file: !3, line: 1785, type: !29)
!6541 = !DILocation(line: 1785, column: 47, scope: !6535)
!6542 = !DILocalVariable(name: "pa", arg: 3, scope: !6535, file: !3, line: 1785, type: !5587)
!6543 = !DILocation(line: 1785, column: 65, scope: !6535)
!6544 = !DILocalVariable(name: "bounds", arg: 4, scope: !6535, file: !3, line: 1785, type: !31)
!6545 = !DILocation(line: 1785, column: 76, scope: !6535)
!6546 = !DILocation(line: 1787, column: 16, scope: !6535)
!6547 = !DILocation(line: 1787, column: 20, scope: !6535)
!6548 = !DILocation(line: 1787, column: 29, scope: !6535)
!6549 = !DILocation(line: 1787, column: 15, scope: !6535)
!6550 = !DILocation(line: 1787, column: 36, scope: !6535)
!6551 = !DILocation(line: 1787, column: 34, scope: !6535)
!6552 = !DILocation(line: 1787, column: 40, scope: !6535)
!6553 = !DILocation(line: 1787, column: 13, scope: !6535)
!6554 = !DILocation(line: 1787, column: 51, scope: !6535)
!6555 = !DILocation(line: 1787, column: 44, scope: !6535)
!6556 = !DILocation(line: 1787, column: 43, scope: !6535)
!6557 = !DILocation(line: 1787, column: 2, scope: !6535)
!6558 = !DILocation(line: 1787, column: 11, scope: !6535)
!6559 = !DILocation(line: 1788, column: 16, scope: !6535)
!6560 = !DILocation(line: 1788, column: 20, scope: !6535)
!6561 = !DILocation(line: 1788, column: 29, scope: !6535)
!6562 = !DILocation(line: 1788, column: 15, scope: !6535)
!6563 = !DILocation(line: 1788, column: 36, scope: !6535)
!6564 = !DILocation(line: 1788, column: 34, scope: !6535)
!6565 = !DILocation(line: 1788, column: 40, scope: !6535)
!6566 = !DILocation(line: 1788, column: 13, scope: !6535)
!6567 = !DILocation(line: 1788, column: 51, scope: !6535)
!6568 = !DILocation(line: 1788, column: 44, scope: !6535)
!6569 = !DILocation(line: 1788, column: 43, scope: !6535)
!6570 = !DILocation(line: 1788, column: 2, scope: !6535)
!6571 = !DILocation(line: 1788, column: 11, scope: !6535)
!6572 = !DILocation(line: 1789, column: 16, scope: !6535)
!6573 = !DILocation(line: 1789, column: 20, scope: !6535)
!6574 = !DILocation(line: 1789, column: 29, scope: !6535)
!6575 = !DILocation(line: 1789, column: 15, scope: !6535)
!6576 = !DILocation(line: 1789, column: 36, scope: !6535)
!6577 = !DILocation(line: 1789, column: 34, scope: !6535)
!6578 = !DILocation(line: 1789, column: 40, scope: !6535)
!6579 = !DILocation(line: 1789, column: 13, scope: !6535)
!6580 = !DILocation(line: 1789, column: 51, scope: !6535)
!6581 = !DILocation(line: 1789, column: 44, scope: !6535)
!6582 = !DILocation(line: 1789, column: 43, scope: !6535)
!6583 = !DILocation(line: 1789, column: 2, scope: !6535)
!6584 = !DILocation(line: 1789, column: 11, scope: !6535)
!6585 = !DILocation(line: 1790, column: 16, scope: !6535)
!6586 = !DILocation(line: 1790, column: 20, scope: !6535)
!6587 = !DILocation(line: 1790, column: 29, scope: !6535)
!6588 = !DILocation(line: 1790, column: 15, scope: !6535)
!6589 = !DILocation(line: 1790, column: 36, scope: !6535)
!6590 = !DILocation(line: 1790, column: 34, scope: !6535)
!6591 = !DILocation(line: 1790, column: 40, scope: !6535)
!6592 = !DILocation(line: 1790, column: 13, scope: !6535)
!6593 = !DILocation(line: 1790, column: 51, scope: !6535)
!6594 = !DILocation(line: 1790, column: 44, scope: !6535)
!6595 = !DILocation(line: 1790, column: 43, scope: !6535)
!6596 = !DILocation(line: 1790, column: 2, scope: !6535)
!6597 = !DILocation(line: 1790, column: 11, scope: !6535)
!6598 = !DILocation(line: 1791, column: 1, scope: !6535)
!6599 = distinct !DISubprogram(name: "zbuffillGLinv4", scope: !3, file: !3, line: 1049, type: !6600, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{null, !120, !29, !29, !88, !88, !88, !88}
!6602 = !DILocalVariable(name: "zspan", arg: 1, scope: !6599, file: !3, line: 1049, type: !120)
!6603 = !DILocation(line: 1049, column: 35, scope: !6599)
!6604 = !DILocalVariable(name: "obi", arg: 2, scope: !6599, file: !3, line: 1049, type: !29)
!6605 = !DILocation(line: 1049, column: 46, scope: !6599)
!6606 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !6599, file: !3, line: 1049, type: !29)
!6607 = !DILocation(line: 1049, column: 55, scope: !6599)
!6608 = !DILocalVariable(name: "v1", arg: 4, scope: !6599, file: !3, line: 1050, type: !88)
!6609 = !DILocation(line: 1050, column: 41, scope: !6599)
!6610 = !DILocalVariable(name: "v2", arg: 5, scope: !6599, file: !3, line: 1050, type: !88)
!6611 = !DILocation(line: 1050, column: 58, scope: !6599)
!6612 = !DILocalVariable(name: "v3", arg: 6, scope: !6599, file: !3, line: 1050, type: !88)
!6613 = !DILocation(line: 1050, column: 75, scope: !6599)
!6614 = !DILocalVariable(name: "v4", arg: 7, scope: !6599, file: !3, line: 1050, type: !88)
!6615 = !DILocation(line: 1050, column: 92, scope: !6599)
!6616 = !DILocalVariable(name: "zxd", scope: !6599, file: !3, line: 1052, type: !80)
!6617 = !DILocation(line: 1052, column: 9, scope: !6599)
!6618 = !DILocalVariable(name: "zyd", scope: !6599, file: !3, line: 1052, type: !80)
!6619 = !DILocation(line: 1052, column: 14, scope: !6599)
!6620 = !DILocalVariable(name: "zy0", scope: !6599, file: !3, line: 1052, type: !80)
!6621 = !DILocation(line: 1052, column: 19, scope: !6599)
!6622 = !DILocalVariable(name: "zverg", scope: !6599, file: !3, line: 1052, type: !80)
!6623 = !DILocation(line: 1052, column: 24, scope: !6599)
!6624 = !DILocalVariable(name: "x0", scope: !6599, file: !3, line: 1053, type: !21)
!6625 = !DILocation(line: 1053, column: 8, scope: !6599)
!6626 = !DILocalVariable(name: "y0", scope: !6599, file: !3, line: 1053, type: !21)
!6627 = !DILocation(line: 1053, column: 12, scope: !6599)
!6628 = !DILocalVariable(name: "z0", scope: !6599, file: !3, line: 1053, type: !21)
!6629 = !DILocation(line: 1053, column: 16, scope: !6599)
!6630 = !DILocalVariable(name: "x1", scope: !6599, file: !3, line: 1054, type: !21)
!6631 = !DILocation(line: 1054, column: 8, scope: !6599)
!6632 = !DILocalVariable(name: "y1", scope: !6599, file: !3, line: 1054, type: !21)
!6633 = !DILocation(line: 1054, column: 12, scope: !6599)
!6634 = !DILocalVariable(name: "z1", scope: !6599, file: !3, line: 1054, type: !21)
!6635 = !DILocation(line: 1054, column: 16, scope: !6599)
!6636 = !DILocalVariable(name: "x2", scope: !6599, file: !3, line: 1054, type: !21)
!6637 = !DILocation(line: 1054, column: 20, scope: !6599)
!6638 = !DILocalVariable(name: "y2", scope: !6599, file: !3, line: 1054, type: !21)
!6639 = !DILocation(line: 1054, column: 24, scope: !6599)
!6640 = !DILocalVariable(name: "z2", scope: !6599, file: !3, line: 1054, type: !21)
!6641 = !DILocation(line: 1054, column: 28, scope: !6599)
!6642 = !DILocalVariable(name: "xx1", scope: !6599, file: !3, line: 1054, type: !21)
!6643 = !DILocation(line: 1054, column: 32, scope: !6599)
!6644 = !DILocalVariable(name: "span1", scope: !6599, file: !3, line: 1055, type: !88)
!6645 = !DILocation(line: 1055, column: 15, scope: !6599)
!6646 = !DILocalVariable(name: "span2", scope: !6599, file: !3, line: 1055, type: !88)
!6647 = !DILocation(line: 1055, column: 23, scope: !6599)
!6648 = !DILocalVariable(name: "rectoofs", scope: !6599, file: !3, line: 1056, type: !81)
!6649 = !DILocation(line: 1056, column: 7, scope: !6599)
!6650 = !DILocalVariable(name: "ro", scope: !6599, file: !3, line: 1056, type: !81)
!6651 = !DILocation(line: 1056, column: 18, scope: !6599)
!6652 = !DILocalVariable(name: "rectpofs", scope: !6599, file: !3, line: 1057, type: !81)
!6653 = !DILocation(line: 1057, column: 7, scope: !6599)
!6654 = !DILocalVariable(name: "rp", scope: !6599, file: !3, line: 1057, type: !81)
!6655 = !DILocation(line: 1057, column: 18, scope: !6599)
!6656 = !DILocalVariable(name: "rectmaskofs", scope: !6599, file: !3, line: 1058, type: !6657)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!6658 = !DILocation(line: 1058, column: 13, scope: !6599)
!6659 = !DILocalVariable(name: "rm", scope: !6599, file: !3, line: 1058, type: !6657)
!6660 = !DILocation(line: 1058, column: 27, scope: !6599)
!6661 = !DILocalVariable(name: "rz", scope: !6599, file: !3, line: 1059, type: !81)
!6662 = !DILocation(line: 1059, column: 7, scope: !6599)
!6663 = !DILocalVariable(name: "x", scope: !6599, file: !3, line: 1059, type: !29)
!6664 = !DILocation(line: 1059, column: 11, scope: !6599)
!6665 = !DILocalVariable(name: "y", scope: !6599, file: !3, line: 1059, type: !29)
!6666 = !DILocation(line: 1059, column: 14, scope: !6599)
!6667 = !DILocalVariable(name: "sn1", scope: !6599, file: !3, line: 1060, type: !29)
!6668 = !DILocation(line: 1060, column: 6, scope: !6599)
!6669 = !DILocalVariable(name: "sn2", scope: !6599, file: !3, line: 1060, type: !29)
!6670 = !DILocation(line: 1060, column: 11, scope: !6599)
!6671 = !DILocalVariable(name: "rectx", scope: !6599, file: !3, line: 1060, type: !29)
!6672 = !DILocation(line: 1060, column: 16, scope: !6599)
!6673 = !DILocalVariable(name: "rectzofs", scope: !6599, file: !3, line: 1060, type: !81)
!6674 = !DILocation(line: 1060, column: 24, scope: !6599)
!6675 = !DILocalVariable(name: "my0", scope: !6599, file: !3, line: 1060, type: !29)
!6676 = !DILocation(line: 1060, column: 34, scope: !6599)
!6677 = !DILocalVariable(name: "my2", scope: !6599, file: !3, line: 1060, type: !29)
!6678 = !DILocation(line: 1060, column: 39, scope: !6599)
!6679 = !DILocation(line: 1063, column: 17, scope: !6599)
!6680 = !DILocation(line: 1063, column: 2, scope: !6599)
!6681 = !DILocation(line: 1066, column: 19, scope: !6599)
!6682 = !DILocation(line: 1066, column: 26, scope: !6599)
!6683 = !DILocation(line: 1066, column: 30, scope: !6599)
!6684 = !DILocation(line: 1066, column: 2, scope: !6599)
!6685 = !DILocation(line: 1067, column: 19, scope: !6599)
!6686 = !DILocation(line: 1067, column: 26, scope: !6599)
!6687 = !DILocation(line: 1067, column: 30, scope: !6599)
!6688 = !DILocation(line: 1067, column: 2, scope: !6599)
!6689 = !DILocation(line: 1068, column: 6, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1068, column: 6)
!6691 = !DILocation(line: 1068, column: 6, scope: !6599)
!6692 = !DILocation(line: 1069, column: 20, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 1068, column: 10)
!6694 = !DILocation(line: 1069, column: 27, scope: !6693)
!6695 = !DILocation(line: 1069, column: 31, scope: !6693)
!6696 = !DILocation(line: 1069, column: 3, scope: !6693)
!6697 = !DILocation(line: 1070, column: 20, scope: !6693)
!6698 = !DILocation(line: 1070, column: 27, scope: !6693)
!6699 = !DILocation(line: 1070, column: 31, scope: !6693)
!6700 = !DILocation(line: 1070, column: 3, scope: !6693)
!6701 = !DILocation(line: 1071, column: 2, scope: !6693)
!6702 = !DILocation(line: 1073, column: 20, scope: !6690)
!6703 = !DILocation(line: 1073, column: 27, scope: !6690)
!6704 = !DILocation(line: 1073, column: 31, scope: !6690)
!6705 = !DILocation(line: 1073, column: 3, scope: !6690)
!6706 = !DILocation(line: 1076, column: 6, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1076, column: 6)
!6708 = !DILocation(line: 1076, column: 13, scope: !6707)
!6709 = !DILocation(line: 1076, column: 18, scope: !6707)
!6710 = !DILocation(line: 1076, column: 25, scope: !6707)
!6711 = !DILocation(line: 1076, column: 28, scope: !6707)
!6712 = !DILocation(line: 1076, column: 35, scope: !6707)
!6713 = !DILocation(line: 1076, column: 40, scope: !6707)
!6714 = !DILocation(line: 1076, column: 6, scope: !6599)
!6715 = !DILocation(line: 1076, column: 48, scope: !6707)
!6716 = !DILocation(line: 1078, column: 6, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1078, column: 6)
!6718 = !DILocation(line: 1078, column: 13, scope: !6717)
!6719 = !DILocation(line: 1078, column: 21, scope: !6717)
!6720 = !DILocation(line: 1078, column: 28, scope: !6717)
!6721 = !DILocation(line: 1078, column: 19, scope: !6717)
!6722 = !DILocation(line: 1078, column: 6, scope: !6599)
!6723 = !DILocation(line: 1078, column: 40, scope: !6717)
!6724 = !DILocation(line: 1078, column: 47, scope: !6717)
!6725 = !DILocation(line: 1078, column: 38, scope: !6717)
!6726 = !DILocation(line: 1078, column: 35, scope: !6717)
!6727 = !DILocation(line: 1078, column: 64, scope: !6717)
!6728 = !DILocation(line: 1078, column: 71, scope: !6717)
!6729 = !DILocation(line: 1078, column: 62, scope: !6717)
!6730 = !DILocation(line: 1079, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1079, column: 6)
!6732 = !DILocation(line: 1079, column: 13, scope: !6731)
!6733 = !DILocation(line: 1079, column: 21, scope: !6731)
!6734 = !DILocation(line: 1079, column: 28, scope: !6731)
!6735 = !DILocation(line: 1079, column: 19, scope: !6731)
!6736 = !DILocation(line: 1079, column: 6, scope: !6599)
!6737 = !DILocation(line: 1079, column: 40, scope: !6731)
!6738 = !DILocation(line: 1079, column: 47, scope: !6731)
!6739 = !DILocation(line: 1079, column: 38, scope: !6731)
!6740 = !DILocation(line: 1079, column: 35, scope: !6731)
!6741 = !DILocation(line: 1079, column: 64, scope: !6731)
!6742 = !DILocation(line: 1079, column: 71, scope: !6731)
!6743 = !DILocation(line: 1079, column: 62, scope: !6731)
!6744 = !DILocation(line: 1082, column: 6, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1082, column: 6)
!6746 = !DILocation(line: 1082, column: 10, scope: !6745)
!6747 = !DILocation(line: 1082, column: 9, scope: !6745)
!6748 = !DILocation(line: 1082, column: 6, scope: !6599)
!6749 = !DILocation(line: 1082, column: 15, scope: !6745)
!6750 = !DILocation(line: 1086, column: 6, scope: !6599)
!6751 = !DILocation(line: 1086, column: 13, scope: !6599)
!6752 = !DILocation(line: 1086, column: 11, scope: !6599)
!6753 = !DILocation(line: 1086, column: 4, scope: !6599)
!6754 = !DILocation(line: 1087, column: 6, scope: !6599)
!6755 = !DILocation(line: 1087, column: 13, scope: !6599)
!6756 = !DILocation(line: 1087, column: 11, scope: !6599)
!6757 = !DILocation(line: 1087, column: 4, scope: !6599)
!6758 = !DILocation(line: 1088, column: 6, scope: !6599)
!6759 = !DILocation(line: 1088, column: 13, scope: !6599)
!6760 = !DILocation(line: 1088, column: 11, scope: !6599)
!6761 = !DILocation(line: 1088, column: 4, scope: !6599)
!6762 = !DILocation(line: 1089, column: 6, scope: !6599)
!6763 = !DILocation(line: 1089, column: 13, scope: !6599)
!6764 = !DILocation(line: 1089, column: 11, scope: !6599)
!6765 = !DILocation(line: 1089, column: 4, scope: !6599)
!6766 = !DILocation(line: 1090, column: 6, scope: !6599)
!6767 = !DILocation(line: 1090, column: 13, scope: !6599)
!6768 = !DILocation(line: 1090, column: 11, scope: !6599)
!6769 = !DILocation(line: 1090, column: 4, scope: !6599)
!6770 = !DILocation(line: 1091, column: 6, scope: !6599)
!6771 = !DILocation(line: 1091, column: 13, scope: !6599)
!6772 = !DILocation(line: 1091, column: 11, scope: !6599)
!6773 = !DILocation(line: 1091, column: 4, scope: !6599)
!6774 = !DILocation(line: 1092, column: 6, scope: !6599)
!6775 = !DILocation(line: 1092, column: 9, scope: !6599)
!6776 = !DILocation(line: 1092, column: 8, scope: !6599)
!6777 = !DILocation(line: 1092, column: 12, scope: !6599)
!6778 = !DILocation(line: 1092, column: 15, scope: !6599)
!6779 = !DILocation(line: 1092, column: 14, scope: !6599)
!6780 = !DILocation(line: 1092, column: 11, scope: !6599)
!6781 = !DILocation(line: 1092, column: 4, scope: !6599)
!6782 = !DILocation(line: 1093, column: 6, scope: !6599)
!6783 = !DILocation(line: 1093, column: 9, scope: !6599)
!6784 = !DILocation(line: 1093, column: 8, scope: !6599)
!6785 = !DILocation(line: 1093, column: 12, scope: !6599)
!6786 = !DILocation(line: 1093, column: 15, scope: !6599)
!6787 = !DILocation(line: 1093, column: 14, scope: !6599)
!6788 = !DILocation(line: 1093, column: 11, scope: !6599)
!6789 = !DILocation(line: 1093, column: 4, scope: !6599)
!6790 = !DILocation(line: 1094, column: 6, scope: !6599)
!6791 = !DILocation(line: 1094, column: 9, scope: !6599)
!6792 = !DILocation(line: 1094, column: 8, scope: !6599)
!6793 = !DILocation(line: 1094, column: 12, scope: !6599)
!6794 = !DILocation(line: 1094, column: 15, scope: !6599)
!6795 = !DILocation(line: 1094, column: 14, scope: !6599)
!6796 = !DILocation(line: 1094, column: 11, scope: !6599)
!6797 = !DILocation(line: 1094, column: 4, scope: !6599)
!6798 = !DILocation(line: 1096, column: 6, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1096, column: 6)
!6800 = !DILocation(line: 1096, column: 8, scope: !6799)
!6801 = !DILocation(line: 1096, column: 6, scope: !6599)
!6802 = !DILocation(line: 1096, column: 16, scope: !6799)
!6803 = !DILocation(line: 1098, column: 8, scope: !6599)
!6804 = !DILocation(line: 1098, column: 11, scope: !6599)
!6805 = !DILocation(line: 1098, column: 10, scope: !6599)
!6806 = !DILocation(line: 1098, column: 19, scope: !6599)
!6807 = !DILocation(line: 1098, column: 22, scope: !6599)
!6808 = !DILocation(line: 1098, column: 21, scope: !6599)
!6809 = !DILocation(line: 1098, column: 17, scope: !6599)
!6810 = !DILocation(line: 1098, column: 29, scope: !6599)
!6811 = !DILocation(line: 1098, column: 28, scope: !6599)
!6812 = !DILocation(line: 1098, column: 34, scope: !6599)
!6813 = !DILocation(line: 1098, column: 32, scope: !6599)
!6814 = !DILocation(line: 1098, column: 5, scope: !6599)
!6815 = !DILocation(line: 1100, column: 16, scope: !6599)
!6816 = !DILocation(line: 1100, column: 8, scope: !6599)
!6817 = !DILocation(line: 1100, column: 7, scope: !6599)
!6818 = !DILocation(line: 1100, column: 27, scope: !6599)
!6819 = !DILocation(line: 1100, column: 19, scope: !6599)
!6820 = !DILocation(line: 1100, column: 18, scope: !6599)
!6821 = !DILocation(line: 1100, column: 5, scope: !6599)
!6822 = !DILocation(line: 1101, column: 16, scope: !6599)
!6823 = !DILocation(line: 1101, column: 8, scope: !6599)
!6824 = !DILocation(line: 1101, column: 7, scope: !6599)
!6825 = !DILocation(line: 1101, column: 27, scope: !6599)
!6826 = !DILocation(line: 1101, column: 19, scope: !6599)
!6827 = !DILocation(line: 1101, column: 18, scope: !6599)
!6828 = !DILocation(line: 1101, column: 5, scope: !6599)
!6829 = !DILocation(line: 1102, column: 16, scope: !6599)
!6830 = !DILocation(line: 1102, column: 8, scope: !6599)
!6831 = !DILocation(line: 1102, column: 21, scope: !6599)
!6832 = !DILocation(line: 1102, column: 20, scope: !6599)
!6833 = !DILocation(line: 1102, column: 35, scope: !6599)
!6834 = !DILocation(line: 1102, column: 27, scope: !6599)
!6835 = !DILocation(line: 1102, column: 25, scope: !6599)
!6836 = !DILocation(line: 1102, column: 5, scope: !6599)
!6837 = !DILocation(line: 1105, column: 9, scope: !6599)
!6838 = !DILocation(line: 1105, column: 16, scope: !6599)
!6839 = !DILocation(line: 1105, column: 7, scope: !6599)
!6840 = !DILocation(line: 1106, column: 13, scope: !6599)
!6841 = !DILocation(line: 1106, column: 20, scope: !6599)
!6842 = !DILocation(line: 1106, column: 26, scope: !6599)
!6843 = !DILocation(line: 1106, column: 32, scope: !6599)
!6844 = !DILocation(line: 1106, column: 31, scope: !6599)
!6845 = !DILocation(line: 1106, column: 25, scope: !6599)
!6846 = !DILocation(line: 1106, column: 10, scope: !6599)
!6847 = !DILocation(line: 1107, column: 13, scope: !6599)
!6848 = !DILocation(line: 1107, column: 20, scope: !6599)
!6849 = !DILocation(line: 1107, column: 26, scope: !6599)
!6850 = !DILocation(line: 1107, column: 32, scope: !6599)
!6851 = !DILocation(line: 1107, column: 31, scope: !6599)
!6852 = !DILocation(line: 1107, column: 25, scope: !6599)
!6853 = !DILocation(line: 1107, column: 10, scope: !6599)
!6854 = !DILocation(line: 1108, column: 13, scope: !6599)
!6855 = !DILocation(line: 1108, column: 20, scope: !6599)
!6856 = !DILocation(line: 1108, column: 26, scope: !6599)
!6857 = !DILocation(line: 1108, column: 32, scope: !6599)
!6858 = !DILocation(line: 1108, column: 31, scope: !6599)
!6859 = !DILocation(line: 1108, column: 25, scope: !6599)
!6860 = !DILocation(line: 1108, column: 10, scope: !6599)
!6861 = !DILocation(line: 1109, column: 16, scope: !6599)
!6862 = !DILocation(line: 1109, column: 23, scope: !6599)
!6863 = !DILocation(line: 1109, column: 32, scope: !6599)
!6864 = !DILocation(line: 1109, column: 38, scope: !6599)
!6865 = !DILocation(line: 1109, column: 37, scope: !6599)
!6866 = !DILocation(line: 1109, column: 31, scope: !6599)
!6867 = !DILocation(line: 1109, column: 13, scope: !6599)
!6868 = !DILocation(line: 1112, column: 8, scope: !6599)
!6869 = !DILocation(line: 1112, column: 14, scope: !6599)
!6870 = !DILocation(line: 1112, column: 12, scope: !6599)
!6871 = !DILocation(line: 1112, column: 18, scope: !6599)
!6872 = !DILocation(line: 1112, column: 5, scope: !6599)
!6873 = !DILocation(line: 1113, column: 6, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1113, column: 6)
!6875 = !DILocation(line: 1113, column: 13, scope: !6874)
!6876 = !DILocation(line: 1113, column: 19, scope: !6874)
!6877 = !DILocation(line: 1113, column: 26, scope: !6874)
!6878 = !DILocation(line: 1113, column: 33, scope: !6874)
!6879 = !DILocation(line: 1113, column: 39, scope: !6874)
!6880 = !DILocation(line: 1113, column: 24, scope: !6874)
!6881 = !DILocation(line: 1113, column: 6, scope: !6599)
!6882 = !DILocation(line: 1114, column: 10, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 1113, column: 45)
!6884 = !DILocation(line: 1114, column: 17, scope: !6883)
!6885 = !DILocation(line: 1114, column: 23, scope: !6883)
!6886 = !DILocation(line: 1114, column: 22, scope: !6883)
!6887 = !DILocation(line: 1114, column: 8, scope: !6883)
!6888 = !DILocation(line: 1115, column: 10, scope: !6883)
!6889 = !DILocation(line: 1115, column: 17, scope: !6883)
!6890 = !DILocation(line: 1115, column: 23, scope: !6883)
!6891 = !DILocation(line: 1115, column: 22, scope: !6883)
!6892 = !DILocation(line: 1115, column: 8, scope: !6883)
!6893 = !DILocation(line: 1116, column: 2, scope: !6883)
!6894 = !DILocation(line: 1118, column: 10, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 1117, column: 7)
!6896 = !DILocation(line: 1118, column: 17, scope: !6895)
!6897 = !DILocation(line: 1118, column: 23, scope: !6895)
!6898 = !DILocation(line: 1118, column: 22, scope: !6895)
!6899 = !DILocation(line: 1118, column: 8, scope: !6895)
!6900 = !DILocation(line: 1119, column: 10, scope: !6895)
!6901 = !DILocation(line: 1119, column: 17, scope: !6895)
!6902 = !DILocation(line: 1119, column: 23, scope: !6895)
!6903 = !DILocation(line: 1119, column: 22, scope: !6895)
!6904 = !DILocation(line: 1119, column: 8, scope: !6895)
!6905 = !DILocation(line: 1122, column: 9, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1122, column: 2)
!6907 = !DILocation(line: 1122, column: 8, scope: !6906)
!6908 = !DILocation(line: 1122, column: 7, scope: !6906)
!6909 = !DILocation(line: 1122, column: 14, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1122, column: 2)
!6911 = !DILocation(line: 1122, column: 17, scope: !6910)
!6912 = !DILocation(line: 1122, column: 15, scope: !6910)
!6913 = !DILocation(line: 1122, column: 2, scope: !6906)
!6914 = !DILocation(line: 1124, column: 15, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1122, column: 45)
!6916 = !DILocation(line: 1124, column: 14, scope: !6915)
!6917 = !DILocation(line: 1124, column: 8, scope: !6915)
!6918 = !DILocation(line: 1124, column: 6, scope: !6915)
!6919 = !DILocation(line: 1125, column: 15, scope: !6915)
!6920 = !DILocation(line: 1125, column: 14, scope: !6915)
!6921 = !DILocation(line: 1125, column: 8, scope: !6915)
!6922 = !DILocation(line: 1125, column: 6, scope: !6915)
!6923 = !DILocation(line: 1126, column: 6, scope: !6915)
!6924 = !DILocation(line: 1128, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 1128, column: 7)
!6926 = !DILocation(line: 1128, column: 12, scope: !6925)
!6927 = !DILocation(line: 1128, column: 10, scope: !6925)
!6928 = !DILocation(line: 1128, column: 7, scope: !6915)
!6929 = !DILocation(line: 1128, column: 24, scope: !6925)
!6930 = !DILocation(line: 1128, column: 29, scope: !6925)
!6931 = !DILocation(line: 1128, column: 22, scope: !6925)
!6932 = !DILocation(line: 1128, column: 19, scope: !6925)
!6933 = !DILocation(line: 1129, column: 7, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 1129, column: 7)
!6935 = !DILocation(line: 1129, column: 10, scope: !6934)
!6936 = !DILocation(line: 1129, column: 7, scope: !6915)
!6937 = !DILocation(line: 1129, column: 17, scope: !6934)
!6938 = !DILocation(line: 1129, column: 14, scope: !6934)
!6939 = !DILocation(line: 1131, column: 7, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 1131, column: 7)
!6941 = !DILocation(line: 1131, column: 12, scope: !6940)
!6942 = !DILocation(line: 1131, column: 10, scope: !6940)
!6943 = !DILocation(line: 1131, column: 7, scope: !6915)
!6944 = !DILocalVariable(name: "intzverg", scope: !6945, file: !3, line: 1132, type: !29)
!6945 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1131, column: 17)
!6946 = !DILocation(line: 1132, column: 8, scope: !6945)
!6947 = !DILocation(line: 1134, column: 19, scope: !6945)
!6948 = !DILocation(line: 1134, column: 11, scope: !6945)
!6949 = !DILocation(line: 1134, column: 23, scope: !6945)
!6950 = !DILocation(line: 1134, column: 22, scope: !6945)
!6951 = !DILocation(line: 1134, column: 29, scope: !6945)
!6952 = !DILocation(line: 1134, column: 27, scope: !6945)
!6953 = !DILocation(line: 1134, column: 9, scope: !6945)
!6954 = !DILocation(line: 1135, column: 8, scope: !6945)
!6955 = !DILocation(line: 1135, column: 17, scope: !6945)
!6956 = !DILocation(line: 1135, column: 16, scope: !6945)
!6957 = !DILocation(line: 1135, column: 6, scope: !6945)
!6958 = !DILocation(line: 1136, column: 8, scope: !6945)
!6959 = !DILocation(line: 1136, column: 17, scope: !6945)
!6960 = !DILocation(line: 1136, column: 16, scope: !6945)
!6961 = !DILocation(line: 1136, column: 6, scope: !6945)
!6962 = !DILocation(line: 1137, column: 8, scope: !6945)
!6963 = !DILocation(line: 1137, column: 17, scope: !6945)
!6964 = !DILocation(line: 1137, column: 16, scope: !6945)
!6965 = !DILocation(line: 1137, column: 6, scope: !6945)
!6966 = !DILocation(line: 1138, column: 8, scope: !6945)
!6967 = !DILocation(line: 1138, column: 20, scope: !6945)
!6968 = !DILocation(line: 1138, column: 19, scope: !6945)
!6969 = !DILocation(line: 1138, column: 6, scope: !6945)
!6970 = !DILocation(line: 1139, column: 7, scope: !6945)
!6971 = !DILocation(line: 1139, column: 11, scope: !6945)
!6972 = !DILocation(line: 1139, column: 10, scope: !6945)
!6973 = !DILocation(line: 1139, column: 5, scope: !6945)
!6974 = !DILocation(line: 1141, column: 4, scope: !6945)
!6975 = !DILocation(line: 1141, column: 11, scope: !6945)
!6976 = !DILocation(line: 1141, column: 12, scope: !6945)
!6977 = !DILocation(line: 1142, column: 20, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1141, column: 17)
!6979 = !DILocation(line: 1142, column: 15, scope: !6978)
!6980 = !DILocation(line: 1142, column: 13, scope: !6978)
!6981 = !DILocation(line: 1144, column: 10, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 1144, column: 10)
!6983 = !DILocation(line: 1144, column: 22, scope: !6982)
!6984 = !DILocation(line: 1144, column: 21, scope: !6982)
!6985 = !DILocation(line: 1144, column: 19, scope: !6982)
!6986 = !DILocation(line: 1144, column: 25, scope: !6982)
!6987 = !DILocation(line: 1144, column: 29, scope: !6982)
!6988 = !DILocation(line: 1144, column: 28, scope: !6982)
!6989 = !DILocation(line: 1144, column: 31, scope: !6982)
!6990 = !DILocation(line: 1144, column: 10, scope: !6978)
!6991 = !DILocation(line: 1145, column: 11, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 1145, column: 10)
!6993 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1144, column: 45)
!6994 = !DILocation(line: 1145, column: 18, scope: !6992)
!6995 = !DILocation(line: 1145, column: 27, scope: !6992)
!6996 = !DILocation(line: 1145, column: 30, scope: !6992)
!6997 = !DILocation(line: 1145, column: 42, scope: !6992)
!6998 = !DILocation(line: 1145, column: 41, scope: !6992)
!6999 = !DILocation(line: 1145, column: 39, scope: !6992)
!7000 = !DILocation(line: 1145, column: 10, scope: !6993)
!7001 = !DILocation(line: 1146, column: 12, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 1145, column: 46)
!7003 = !DILocation(line: 1146, column: 8, scope: !7002)
!7004 = !DILocation(line: 1146, column: 10, scope: !7002)
!7005 = !DILocation(line: 1147, column: 12, scope: !7002)
!7006 = !DILocation(line: 1147, column: 8, scope: !7002)
!7007 = !DILocation(line: 1147, column: 10, scope: !7002)
!7008 = !DILocation(line: 1148, column: 12, scope: !7002)
!7009 = !DILocation(line: 1148, column: 8, scope: !7002)
!7010 = !DILocation(line: 1148, column: 10, scope: !7002)
!7011 = !DILocation(line: 1149, column: 6, scope: !7002)
!7012 = !DILocation(line: 1150, column: 5, scope: !6993)
!7013 = !DILocation(line: 1151, column: 13, scope: !6978)
!7014 = !DILocation(line: 1151, column: 10, scope: !6978)
!7015 = !DILocation(line: 1152, column: 7, scope: !6978)
!7016 = !DILocation(line: 1153, column: 7, scope: !6978)
!7017 = !DILocation(line: 1154, column: 7, scope: !6978)
!7018 = !DILocation(line: 1155, column: 7, scope: !6978)
!7019 = !DILocation(line: 1156, column: 6, scope: !6978)
!7020 = distinct !{!7020, !6974, !7021}
!7021 = !DILocation(line: 1157, column: 4, scope: !6945)
!7022 = !DILocation(line: 1158, column: 3, scope: !6945)
!7023 = !DILocation(line: 1160, column: 8, scope: !6915)
!7024 = !DILocation(line: 1160, column: 6, scope: !6915)
!7025 = !DILocation(line: 1161, column: 14, scope: !6915)
!7026 = !DILocation(line: 1161, column: 11, scope: !6915)
!7027 = !DILocation(line: 1162, column: 14, scope: !6915)
!7028 = !DILocation(line: 1162, column: 11, scope: !6915)
!7029 = !DILocation(line: 1163, column: 14, scope: !6915)
!7030 = !DILocation(line: 1163, column: 11, scope: !6915)
!7031 = !DILocation(line: 1164, column: 17, scope: !6915)
!7032 = !DILocation(line: 1164, column: 14, scope: !6915)
!7033 = !DILocation(line: 1165, column: 2, scope: !6915)
!7034 = !DILocation(line: 1122, column: 23, scope: !6910)
!7035 = !DILocation(line: 1122, column: 32, scope: !6910)
!7036 = !DILocation(line: 1122, column: 41, scope: !6910)
!7037 = !DILocation(line: 1122, column: 2, scope: !6910)
!7038 = distinct !{!7038, !6913, !7039}
!7039 = !DILocation(line: 1165, column: 2, scope: !6906)
!7040 = !DILocation(line: 1166, column: 1, scope: !6599)
!7041 = distinct !DISubprogram(name: "zbuffillGL4", scope: !3, file: !3, line: 1172, type: !6600, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!7042 = !DILocalVariable(name: "zspan", arg: 1, scope: !7041, file: !3, line: 1172, type: !120)
!7043 = !DILocation(line: 1172, column: 32, scope: !7041)
!7044 = !DILocalVariable(name: "obi", arg: 2, scope: !7041, file: !3, line: 1172, type: !29)
!7045 = !DILocation(line: 1172, column: 43, scope: !7041)
!7046 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !7041, file: !3, line: 1172, type: !29)
!7047 = !DILocation(line: 1172, column: 52, scope: !7041)
!7048 = !DILocalVariable(name: "v1", arg: 4, scope: !7041, file: !3, line: 1173, type: !88)
!7049 = !DILocation(line: 1173, column: 38, scope: !7041)
!7050 = !DILocalVariable(name: "v2", arg: 5, scope: !7041, file: !3, line: 1173, type: !88)
!7051 = !DILocation(line: 1173, column: 55, scope: !7041)
!7052 = !DILocalVariable(name: "v3", arg: 6, scope: !7041, file: !3, line: 1173, type: !88)
!7053 = !DILocation(line: 1173, column: 72, scope: !7041)
!7054 = !DILocalVariable(name: "v4", arg: 7, scope: !7041, file: !3, line: 1173, type: !88)
!7055 = !DILocation(line: 1173, column: 89, scope: !7041)
!7056 = !DILocalVariable(name: "zxd", scope: !7041, file: !3, line: 1175, type: !80)
!7057 = !DILocation(line: 1175, column: 9, scope: !7041)
!7058 = !DILocalVariable(name: "zyd", scope: !7041, file: !3, line: 1175, type: !80)
!7059 = !DILocation(line: 1175, column: 14, scope: !7041)
!7060 = !DILocalVariable(name: "zy0", scope: !7041, file: !3, line: 1175, type: !80)
!7061 = !DILocation(line: 1175, column: 19, scope: !7041)
!7062 = !DILocalVariable(name: "zverg", scope: !7041, file: !3, line: 1175, type: !80)
!7063 = !DILocation(line: 1175, column: 24, scope: !7041)
!7064 = !DILocalVariable(name: "x0", scope: !7041, file: !3, line: 1176, type: !21)
!7065 = !DILocation(line: 1176, column: 8, scope: !7041)
!7066 = !DILocalVariable(name: "y0", scope: !7041, file: !3, line: 1176, type: !21)
!7067 = !DILocation(line: 1176, column: 12, scope: !7041)
!7068 = !DILocalVariable(name: "z0", scope: !7041, file: !3, line: 1176, type: !21)
!7069 = !DILocation(line: 1176, column: 16, scope: !7041)
!7070 = !DILocalVariable(name: "x1", scope: !7041, file: !3, line: 1177, type: !21)
!7071 = !DILocation(line: 1177, column: 8, scope: !7041)
!7072 = !DILocalVariable(name: "y1", scope: !7041, file: !3, line: 1177, type: !21)
!7073 = !DILocation(line: 1177, column: 12, scope: !7041)
!7074 = !DILocalVariable(name: "z1", scope: !7041, file: !3, line: 1177, type: !21)
!7075 = !DILocation(line: 1177, column: 16, scope: !7041)
!7076 = !DILocalVariable(name: "x2", scope: !7041, file: !3, line: 1177, type: !21)
!7077 = !DILocation(line: 1177, column: 20, scope: !7041)
!7078 = !DILocalVariable(name: "y2", scope: !7041, file: !3, line: 1177, type: !21)
!7079 = !DILocation(line: 1177, column: 24, scope: !7041)
!7080 = !DILocalVariable(name: "z2", scope: !7041, file: !3, line: 1177, type: !21)
!7081 = !DILocation(line: 1177, column: 28, scope: !7041)
!7082 = !DILocalVariable(name: "xx1", scope: !7041, file: !3, line: 1177, type: !21)
!7083 = !DILocation(line: 1177, column: 32, scope: !7041)
!7084 = !DILocalVariable(name: "span1", scope: !7041, file: !3, line: 1178, type: !88)
!7085 = !DILocation(line: 1178, column: 15, scope: !7041)
!7086 = !DILocalVariable(name: "span2", scope: !7041, file: !3, line: 1178, type: !88)
!7087 = !DILocation(line: 1178, column: 23, scope: !7041)
!7088 = !DILocalVariable(name: "rectoofs", scope: !7041, file: !3, line: 1179, type: !81)
!7089 = !DILocation(line: 1179, column: 7, scope: !7041)
!7090 = !DILocalVariable(name: "ro", scope: !7041, file: !3, line: 1179, type: !81)
!7091 = !DILocation(line: 1179, column: 18, scope: !7041)
!7092 = !DILocalVariable(name: "rectpofs", scope: !7041, file: !3, line: 1180, type: !81)
!7093 = !DILocation(line: 1180, column: 7, scope: !7041)
!7094 = !DILocalVariable(name: "rp", scope: !7041, file: !3, line: 1180, type: !81)
!7095 = !DILocation(line: 1180, column: 18, scope: !7041)
!7096 = !DILocalVariable(name: "rectmaskofs", scope: !7041, file: !3, line: 1181, type: !6657)
!7097 = !DILocation(line: 1181, column: 13, scope: !7041)
!7098 = !DILocalVariable(name: "rm", scope: !7041, file: !3, line: 1181, type: !6657)
!7099 = !DILocation(line: 1181, column: 27, scope: !7041)
!7100 = !DILocalVariable(name: "rz", scope: !7041, file: !3, line: 1182, type: !81)
!7101 = !DILocation(line: 1182, column: 7, scope: !7041)
!7102 = !DILocalVariable(name: "x", scope: !7041, file: !3, line: 1182, type: !29)
!7103 = !DILocation(line: 1182, column: 11, scope: !7041)
!7104 = !DILocalVariable(name: "y", scope: !7041, file: !3, line: 1182, type: !29)
!7105 = !DILocation(line: 1182, column: 14, scope: !7041)
!7106 = !DILocalVariable(name: "sn1", scope: !7041, file: !3, line: 1183, type: !29)
!7107 = !DILocation(line: 1183, column: 6, scope: !7041)
!7108 = !DILocalVariable(name: "sn2", scope: !7041, file: !3, line: 1183, type: !29)
!7109 = !DILocation(line: 1183, column: 11, scope: !7041)
!7110 = !DILocalVariable(name: "rectx", scope: !7041, file: !3, line: 1183, type: !29)
!7111 = !DILocation(line: 1183, column: 16, scope: !7041)
!7112 = !DILocalVariable(name: "rectzofs", scope: !7041, file: !3, line: 1183, type: !81)
!7113 = !DILocation(line: 1183, column: 24, scope: !7041)
!7114 = !DILocalVariable(name: "my0", scope: !7041, file: !3, line: 1183, type: !29)
!7115 = !DILocation(line: 1183, column: 34, scope: !7041)
!7116 = !DILocalVariable(name: "my2", scope: !7041, file: !3, line: 1183, type: !29)
!7117 = !DILocation(line: 1183, column: 39, scope: !7041)
!7118 = !DILocation(line: 1186, column: 17, scope: !7041)
!7119 = !DILocation(line: 1186, column: 2, scope: !7041)
!7120 = !DILocation(line: 1189, column: 19, scope: !7041)
!7121 = !DILocation(line: 1189, column: 26, scope: !7041)
!7122 = !DILocation(line: 1189, column: 30, scope: !7041)
!7123 = !DILocation(line: 1189, column: 2, scope: !7041)
!7124 = !DILocation(line: 1190, column: 19, scope: !7041)
!7125 = !DILocation(line: 1190, column: 26, scope: !7041)
!7126 = !DILocation(line: 1190, column: 30, scope: !7041)
!7127 = !DILocation(line: 1190, column: 2, scope: !7041)
!7128 = !DILocation(line: 1191, column: 6, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1191, column: 6)
!7130 = !DILocation(line: 1191, column: 6, scope: !7041)
!7131 = !DILocation(line: 1192, column: 20, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1191, column: 10)
!7133 = !DILocation(line: 1192, column: 27, scope: !7132)
!7134 = !DILocation(line: 1192, column: 31, scope: !7132)
!7135 = !DILocation(line: 1192, column: 3, scope: !7132)
!7136 = !DILocation(line: 1193, column: 20, scope: !7132)
!7137 = !DILocation(line: 1193, column: 27, scope: !7132)
!7138 = !DILocation(line: 1193, column: 31, scope: !7132)
!7139 = !DILocation(line: 1193, column: 3, scope: !7132)
!7140 = !DILocation(line: 1194, column: 2, scope: !7132)
!7141 = !DILocation(line: 1196, column: 20, scope: !7129)
!7142 = !DILocation(line: 1196, column: 27, scope: !7129)
!7143 = !DILocation(line: 1196, column: 31, scope: !7129)
!7144 = !DILocation(line: 1196, column: 3, scope: !7129)
!7145 = !DILocation(line: 1199, column: 6, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1199, column: 6)
!7147 = !DILocation(line: 1199, column: 13, scope: !7146)
!7148 = !DILocation(line: 1199, column: 18, scope: !7146)
!7149 = !DILocation(line: 1199, column: 25, scope: !7146)
!7150 = !DILocation(line: 1199, column: 28, scope: !7146)
!7151 = !DILocation(line: 1199, column: 35, scope: !7146)
!7152 = !DILocation(line: 1199, column: 40, scope: !7146)
!7153 = !DILocation(line: 1199, column: 6, scope: !7041)
!7154 = !DILocation(line: 1199, column: 48, scope: !7146)
!7155 = !DILocation(line: 1201, column: 6, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1201, column: 6)
!7157 = !DILocation(line: 1201, column: 13, scope: !7156)
!7158 = !DILocation(line: 1201, column: 21, scope: !7156)
!7159 = !DILocation(line: 1201, column: 28, scope: !7156)
!7160 = !DILocation(line: 1201, column: 19, scope: !7156)
!7161 = !DILocation(line: 1201, column: 6, scope: !7041)
!7162 = !DILocation(line: 1201, column: 40, scope: !7156)
!7163 = !DILocation(line: 1201, column: 47, scope: !7156)
!7164 = !DILocation(line: 1201, column: 38, scope: !7156)
!7165 = !DILocation(line: 1201, column: 35, scope: !7156)
!7166 = !DILocation(line: 1201, column: 64, scope: !7156)
!7167 = !DILocation(line: 1201, column: 71, scope: !7156)
!7168 = !DILocation(line: 1201, column: 62, scope: !7156)
!7169 = !DILocation(line: 1202, column: 6, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1202, column: 6)
!7171 = !DILocation(line: 1202, column: 13, scope: !7170)
!7172 = !DILocation(line: 1202, column: 21, scope: !7170)
!7173 = !DILocation(line: 1202, column: 28, scope: !7170)
!7174 = !DILocation(line: 1202, column: 19, scope: !7170)
!7175 = !DILocation(line: 1202, column: 6, scope: !7041)
!7176 = !DILocation(line: 1202, column: 40, scope: !7170)
!7177 = !DILocation(line: 1202, column: 47, scope: !7170)
!7178 = !DILocation(line: 1202, column: 38, scope: !7170)
!7179 = !DILocation(line: 1202, column: 35, scope: !7170)
!7180 = !DILocation(line: 1202, column: 64, scope: !7170)
!7181 = !DILocation(line: 1202, column: 71, scope: !7170)
!7182 = !DILocation(line: 1202, column: 62, scope: !7170)
!7183 = !DILocation(line: 1205, column: 6, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1205, column: 6)
!7185 = !DILocation(line: 1205, column: 10, scope: !7184)
!7186 = !DILocation(line: 1205, column: 9, scope: !7184)
!7187 = !DILocation(line: 1205, column: 6, scope: !7041)
!7188 = !DILocation(line: 1205, column: 15, scope: !7184)
!7189 = !DILocation(line: 1209, column: 6, scope: !7041)
!7190 = !DILocation(line: 1209, column: 13, scope: !7041)
!7191 = !DILocation(line: 1209, column: 11, scope: !7041)
!7192 = !DILocation(line: 1209, column: 4, scope: !7041)
!7193 = !DILocation(line: 1210, column: 6, scope: !7041)
!7194 = !DILocation(line: 1210, column: 13, scope: !7041)
!7195 = !DILocation(line: 1210, column: 11, scope: !7041)
!7196 = !DILocation(line: 1210, column: 4, scope: !7041)
!7197 = !DILocation(line: 1211, column: 6, scope: !7041)
!7198 = !DILocation(line: 1211, column: 13, scope: !7041)
!7199 = !DILocation(line: 1211, column: 11, scope: !7041)
!7200 = !DILocation(line: 1211, column: 4, scope: !7041)
!7201 = !DILocation(line: 1212, column: 6, scope: !7041)
!7202 = !DILocation(line: 1212, column: 13, scope: !7041)
!7203 = !DILocation(line: 1212, column: 11, scope: !7041)
!7204 = !DILocation(line: 1212, column: 4, scope: !7041)
!7205 = !DILocation(line: 1213, column: 6, scope: !7041)
!7206 = !DILocation(line: 1213, column: 13, scope: !7041)
!7207 = !DILocation(line: 1213, column: 11, scope: !7041)
!7208 = !DILocation(line: 1213, column: 4, scope: !7041)
!7209 = !DILocation(line: 1214, column: 6, scope: !7041)
!7210 = !DILocation(line: 1214, column: 13, scope: !7041)
!7211 = !DILocation(line: 1214, column: 11, scope: !7041)
!7212 = !DILocation(line: 1214, column: 4, scope: !7041)
!7213 = !DILocation(line: 1215, column: 6, scope: !7041)
!7214 = !DILocation(line: 1215, column: 9, scope: !7041)
!7215 = !DILocation(line: 1215, column: 8, scope: !7041)
!7216 = !DILocation(line: 1215, column: 12, scope: !7041)
!7217 = !DILocation(line: 1215, column: 15, scope: !7041)
!7218 = !DILocation(line: 1215, column: 14, scope: !7041)
!7219 = !DILocation(line: 1215, column: 11, scope: !7041)
!7220 = !DILocation(line: 1215, column: 4, scope: !7041)
!7221 = !DILocation(line: 1216, column: 6, scope: !7041)
!7222 = !DILocation(line: 1216, column: 9, scope: !7041)
!7223 = !DILocation(line: 1216, column: 8, scope: !7041)
!7224 = !DILocation(line: 1216, column: 12, scope: !7041)
!7225 = !DILocation(line: 1216, column: 15, scope: !7041)
!7226 = !DILocation(line: 1216, column: 14, scope: !7041)
!7227 = !DILocation(line: 1216, column: 11, scope: !7041)
!7228 = !DILocation(line: 1216, column: 4, scope: !7041)
!7229 = !DILocation(line: 1217, column: 6, scope: !7041)
!7230 = !DILocation(line: 1217, column: 9, scope: !7041)
!7231 = !DILocation(line: 1217, column: 8, scope: !7041)
!7232 = !DILocation(line: 1217, column: 12, scope: !7041)
!7233 = !DILocation(line: 1217, column: 15, scope: !7041)
!7234 = !DILocation(line: 1217, column: 14, scope: !7041)
!7235 = !DILocation(line: 1217, column: 11, scope: !7041)
!7236 = !DILocation(line: 1217, column: 4, scope: !7041)
!7237 = !DILocation(line: 1219, column: 6, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1219, column: 6)
!7239 = !DILocation(line: 1219, column: 8, scope: !7238)
!7240 = !DILocation(line: 1219, column: 6, scope: !7041)
!7241 = !DILocation(line: 1219, column: 16, scope: !7238)
!7242 = !DILocation(line: 1221, column: 8, scope: !7041)
!7243 = !DILocation(line: 1221, column: 11, scope: !7041)
!7244 = !DILocation(line: 1221, column: 10, scope: !7041)
!7245 = !DILocation(line: 1221, column: 19, scope: !7041)
!7246 = !DILocation(line: 1221, column: 22, scope: !7041)
!7247 = !DILocation(line: 1221, column: 21, scope: !7041)
!7248 = !DILocation(line: 1221, column: 17, scope: !7041)
!7249 = !DILocation(line: 1221, column: 29, scope: !7041)
!7250 = !DILocation(line: 1221, column: 28, scope: !7041)
!7251 = !DILocation(line: 1221, column: 34, scope: !7041)
!7252 = !DILocation(line: 1221, column: 32, scope: !7041)
!7253 = !DILocation(line: 1221, column: 5, scope: !7041)
!7254 = !DILocation(line: 1223, column: 16, scope: !7041)
!7255 = !DILocation(line: 1223, column: 8, scope: !7041)
!7256 = !DILocation(line: 1223, column: 7, scope: !7041)
!7257 = !DILocation(line: 1223, column: 27, scope: !7041)
!7258 = !DILocation(line: 1223, column: 19, scope: !7041)
!7259 = !DILocation(line: 1223, column: 18, scope: !7041)
!7260 = !DILocation(line: 1223, column: 5, scope: !7041)
!7261 = !DILocation(line: 1224, column: 16, scope: !7041)
!7262 = !DILocation(line: 1224, column: 8, scope: !7041)
!7263 = !DILocation(line: 1224, column: 7, scope: !7041)
!7264 = !DILocation(line: 1224, column: 27, scope: !7041)
!7265 = !DILocation(line: 1224, column: 19, scope: !7041)
!7266 = !DILocation(line: 1224, column: 18, scope: !7041)
!7267 = !DILocation(line: 1224, column: 5, scope: !7041)
!7268 = !DILocation(line: 1225, column: 16, scope: !7041)
!7269 = !DILocation(line: 1225, column: 8, scope: !7041)
!7270 = !DILocation(line: 1225, column: 21, scope: !7041)
!7271 = !DILocation(line: 1225, column: 20, scope: !7041)
!7272 = !DILocation(line: 1225, column: 35, scope: !7041)
!7273 = !DILocation(line: 1225, column: 27, scope: !7041)
!7274 = !DILocation(line: 1225, column: 25, scope: !7041)
!7275 = !DILocation(line: 1225, column: 5, scope: !7041)
!7276 = !DILocation(line: 1228, column: 9, scope: !7041)
!7277 = !DILocation(line: 1228, column: 16, scope: !7041)
!7278 = !DILocation(line: 1228, column: 7, scope: !7041)
!7279 = !DILocation(line: 1229, column: 13, scope: !7041)
!7280 = !DILocation(line: 1229, column: 20, scope: !7041)
!7281 = !DILocation(line: 1229, column: 26, scope: !7041)
!7282 = !DILocation(line: 1229, column: 32, scope: !7041)
!7283 = !DILocation(line: 1229, column: 31, scope: !7041)
!7284 = !DILocation(line: 1229, column: 25, scope: !7041)
!7285 = !DILocation(line: 1229, column: 10, scope: !7041)
!7286 = !DILocation(line: 1230, column: 13, scope: !7041)
!7287 = !DILocation(line: 1230, column: 20, scope: !7041)
!7288 = !DILocation(line: 1230, column: 26, scope: !7041)
!7289 = !DILocation(line: 1230, column: 32, scope: !7041)
!7290 = !DILocation(line: 1230, column: 31, scope: !7041)
!7291 = !DILocation(line: 1230, column: 25, scope: !7041)
!7292 = !DILocation(line: 1230, column: 10, scope: !7041)
!7293 = !DILocation(line: 1231, column: 13, scope: !7041)
!7294 = !DILocation(line: 1231, column: 20, scope: !7041)
!7295 = !DILocation(line: 1231, column: 26, scope: !7041)
!7296 = !DILocation(line: 1231, column: 32, scope: !7041)
!7297 = !DILocation(line: 1231, column: 31, scope: !7041)
!7298 = !DILocation(line: 1231, column: 25, scope: !7041)
!7299 = !DILocation(line: 1231, column: 10, scope: !7041)
!7300 = !DILocation(line: 1232, column: 16, scope: !7041)
!7301 = !DILocation(line: 1232, column: 23, scope: !7041)
!7302 = !DILocation(line: 1232, column: 32, scope: !7041)
!7303 = !DILocation(line: 1232, column: 38, scope: !7041)
!7304 = !DILocation(line: 1232, column: 37, scope: !7041)
!7305 = !DILocation(line: 1232, column: 31, scope: !7041)
!7306 = !DILocation(line: 1232, column: 13, scope: !7041)
!7307 = !DILocation(line: 1235, column: 8, scope: !7041)
!7308 = !DILocation(line: 1235, column: 14, scope: !7041)
!7309 = !DILocation(line: 1235, column: 12, scope: !7041)
!7310 = !DILocation(line: 1235, column: 18, scope: !7041)
!7311 = !DILocation(line: 1235, column: 5, scope: !7041)
!7312 = !DILocation(line: 1236, column: 6, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1236, column: 6)
!7314 = !DILocation(line: 1236, column: 13, scope: !7313)
!7315 = !DILocation(line: 1236, column: 19, scope: !7313)
!7316 = !DILocation(line: 1236, column: 26, scope: !7313)
!7317 = !DILocation(line: 1236, column: 33, scope: !7313)
!7318 = !DILocation(line: 1236, column: 39, scope: !7313)
!7319 = !DILocation(line: 1236, column: 24, scope: !7313)
!7320 = !DILocation(line: 1236, column: 6, scope: !7041)
!7321 = !DILocation(line: 1237, column: 10, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1236, column: 45)
!7323 = !DILocation(line: 1237, column: 17, scope: !7322)
!7324 = !DILocation(line: 1237, column: 23, scope: !7322)
!7325 = !DILocation(line: 1237, column: 22, scope: !7322)
!7326 = !DILocation(line: 1237, column: 8, scope: !7322)
!7327 = !DILocation(line: 1238, column: 10, scope: !7322)
!7328 = !DILocation(line: 1238, column: 17, scope: !7322)
!7329 = !DILocation(line: 1238, column: 23, scope: !7322)
!7330 = !DILocation(line: 1238, column: 22, scope: !7322)
!7331 = !DILocation(line: 1238, column: 8, scope: !7322)
!7332 = !DILocation(line: 1239, column: 2, scope: !7322)
!7333 = !DILocation(line: 1241, column: 10, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1240, column: 7)
!7335 = !DILocation(line: 1241, column: 17, scope: !7334)
!7336 = !DILocation(line: 1241, column: 23, scope: !7334)
!7337 = !DILocation(line: 1241, column: 22, scope: !7334)
!7338 = !DILocation(line: 1241, column: 8, scope: !7334)
!7339 = !DILocation(line: 1242, column: 10, scope: !7334)
!7340 = !DILocation(line: 1242, column: 17, scope: !7334)
!7341 = !DILocation(line: 1242, column: 23, scope: !7334)
!7342 = !DILocation(line: 1242, column: 22, scope: !7334)
!7343 = !DILocation(line: 1242, column: 8, scope: !7334)
!7344 = !DILocation(line: 1245, column: 9, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1245, column: 2)
!7346 = !DILocation(line: 1245, column: 8, scope: !7345)
!7347 = !DILocation(line: 1245, column: 7, scope: !7345)
!7348 = !DILocation(line: 1245, column: 14, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1245, column: 2)
!7350 = !DILocation(line: 1245, column: 17, scope: !7349)
!7351 = !DILocation(line: 1245, column: 15, scope: !7349)
!7352 = !DILocation(line: 1245, column: 2, scope: !7345)
!7353 = !DILocation(line: 1247, column: 15, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 1245, column: 45)
!7355 = !DILocation(line: 1247, column: 14, scope: !7354)
!7356 = !DILocation(line: 1247, column: 8, scope: !7354)
!7357 = !DILocation(line: 1247, column: 6, scope: !7354)
!7358 = !DILocation(line: 1248, column: 15, scope: !7354)
!7359 = !DILocation(line: 1248, column: 14, scope: !7354)
!7360 = !DILocation(line: 1248, column: 8, scope: !7354)
!7361 = !DILocation(line: 1248, column: 6, scope: !7354)
!7362 = !DILocation(line: 1249, column: 6, scope: !7354)
!7363 = !DILocation(line: 1251, column: 7, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 1251, column: 7)
!7365 = !DILocation(line: 1251, column: 12, scope: !7364)
!7366 = !DILocation(line: 1251, column: 10, scope: !7364)
!7367 = !DILocation(line: 1251, column: 7, scope: !7354)
!7368 = !DILocation(line: 1251, column: 24, scope: !7364)
!7369 = !DILocation(line: 1251, column: 29, scope: !7364)
!7370 = !DILocation(line: 1251, column: 22, scope: !7364)
!7371 = !DILocation(line: 1251, column: 19, scope: !7364)
!7372 = !DILocation(line: 1252, column: 7, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 1252, column: 7)
!7374 = !DILocation(line: 1252, column: 10, scope: !7373)
!7375 = !DILocation(line: 1252, column: 7, scope: !7354)
!7376 = !DILocation(line: 1252, column: 17, scope: !7373)
!7377 = !DILocation(line: 1252, column: 14, scope: !7373)
!7378 = !DILocation(line: 1254, column: 7, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 1254, column: 7)
!7380 = !DILocation(line: 1254, column: 12, scope: !7379)
!7381 = !DILocation(line: 1254, column: 10, scope: !7379)
!7382 = !DILocation(line: 1254, column: 7, scope: !7354)
!7383 = !DILocalVariable(name: "intzverg", scope: !7384, file: !3, line: 1255, type: !29)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 1254, column: 17)
!7385 = !DILocation(line: 1255, column: 8, scope: !7384)
!7386 = !DILocation(line: 1257, column: 19, scope: !7384)
!7387 = !DILocation(line: 1257, column: 11, scope: !7384)
!7388 = !DILocation(line: 1257, column: 23, scope: !7384)
!7389 = !DILocation(line: 1257, column: 22, scope: !7384)
!7390 = !DILocation(line: 1257, column: 29, scope: !7384)
!7391 = !DILocation(line: 1257, column: 27, scope: !7384)
!7392 = !DILocation(line: 1257, column: 9, scope: !7384)
!7393 = !DILocation(line: 1258, column: 8, scope: !7384)
!7394 = !DILocation(line: 1258, column: 17, scope: !7384)
!7395 = !DILocation(line: 1258, column: 16, scope: !7384)
!7396 = !DILocation(line: 1258, column: 6, scope: !7384)
!7397 = !DILocation(line: 1259, column: 8, scope: !7384)
!7398 = !DILocation(line: 1259, column: 17, scope: !7384)
!7399 = !DILocation(line: 1259, column: 16, scope: !7384)
!7400 = !DILocation(line: 1259, column: 6, scope: !7384)
!7401 = !DILocation(line: 1260, column: 8, scope: !7384)
!7402 = !DILocation(line: 1260, column: 17, scope: !7384)
!7403 = !DILocation(line: 1260, column: 16, scope: !7384)
!7404 = !DILocation(line: 1260, column: 6, scope: !7384)
!7405 = !DILocation(line: 1261, column: 8, scope: !7384)
!7406 = !DILocation(line: 1261, column: 20, scope: !7384)
!7407 = !DILocation(line: 1261, column: 19, scope: !7384)
!7408 = !DILocation(line: 1261, column: 6, scope: !7384)
!7409 = !DILocation(line: 1262, column: 7, scope: !7384)
!7410 = !DILocation(line: 1262, column: 11, scope: !7384)
!7411 = !DILocation(line: 1262, column: 10, scope: !7384)
!7412 = !DILocation(line: 1262, column: 5, scope: !7384)
!7413 = !DILocation(line: 1264, column: 4, scope: !7384)
!7414 = !DILocation(line: 1264, column: 11, scope: !7384)
!7415 = !DILocation(line: 1264, column: 12, scope: !7384)
!7416 = !DILocation(line: 1265, column: 20, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1264, column: 17)
!7418 = !DILocation(line: 1265, column: 15, scope: !7417)
!7419 = !DILocation(line: 1265, column: 13, scope: !7417)
!7420 = !DILocation(line: 1267, column: 9, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1267, column: 9)
!7422 = !DILocation(line: 1267, column: 21, scope: !7421)
!7423 = !DILocation(line: 1267, column: 20, scope: !7421)
!7424 = !DILocation(line: 1267, column: 18, scope: !7421)
!7425 = !DILocation(line: 1267, column: 9, scope: !7417)
!7426 = !DILocation(line: 1268, column: 11, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 1268, column: 10)
!7428 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1267, column: 25)
!7429 = !DILocation(line: 1268, column: 18, scope: !7427)
!7430 = !DILocation(line: 1268, column: 27, scope: !7427)
!7431 = !DILocation(line: 1268, column: 30, scope: !7427)
!7432 = !DILocation(line: 1268, column: 42, scope: !7427)
!7433 = !DILocation(line: 1268, column: 41, scope: !7427)
!7434 = !DILocation(line: 1268, column: 39, scope: !7427)
!7435 = !DILocation(line: 1268, column: 10, scope: !7428)
!7436 = !DILocation(line: 1269, column: 12, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 1268, column: 46)
!7438 = !DILocation(line: 1269, column: 8, scope: !7437)
!7439 = !DILocation(line: 1269, column: 10, scope: !7437)
!7440 = !DILocation(line: 1270, column: 12, scope: !7437)
!7441 = !DILocation(line: 1270, column: 8, scope: !7437)
!7442 = !DILocation(line: 1270, column: 10, scope: !7437)
!7443 = !DILocation(line: 1271, column: 12, scope: !7437)
!7444 = !DILocation(line: 1271, column: 8, scope: !7437)
!7445 = !DILocation(line: 1271, column: 10, scope: !7437)
!7446 = !DILocation(line: 1272, column: 6, scope: !7437)
!7447 = !DILocation(line: 1273, column: 5, scope: !7428)
!7448 = !DILocation(line: 1274, column: 13, scope: !7417)
!7449 = !DILocation(line: 1274, column: 10, scope: !7417)
!7450 = !DILocation(line: 1275, column: 7, scope: !7417)
!7451 = !DILocation(line: 1276, column: 7, scope: !7417)
!7452 = !DILocation(line: 1277, column: 7, scope: !7417)
!7453 = !DILocation(line: 1278, column: 7, scope: !7417)
!7454 = !DILocation(line: 1279, column: 6, scope: !7417)
!7455 = distinct !{!7455, !7413, !7456}
!7456 = !DILocation(line: 1280, column: 4, scope: !7384)
!7457 = !DILocation(line: 1281, column: 3, scope: !7384)
!7458 = !DILocation(line: 1283, column: 8, scope: !7354)
!7459 = !DILocation(line: 1283, column: 6, scope: !7354)
!7460 = !DILocation(line: 1284, column: 14, scope: !7354)
!7461 = !DILocation(line: 1284, column: 11, scope: !7354)
!7462 = !DILocation(line: 1285, column: 14, scope: !7354)
!7463 = !DILocation(line: 1285, column: 11, scope: !7354)
!7464 = !DILocation(line: 1286, column: 14, scope: !7354)
!7465 = !DILocation(line: 1286, column: 11, scope: !7354)
!7466 = !DILocation(line: 1287, column: 17, scope: !7354)
!7467 = !DILocation(line: 1287, column: 14, scope: !7354)
!7468 = !DILocation(line: 1288, column: 2, scope: !7354)
!7469 = !DILocation(line: 1245, column: 23, scope: !7349)
!7470 = !DILocation(line: 1245, column: 32, scope: !7349)
!7471 = !DILocation(line: 1245, column: 41, scope: !7349)
!7472 = !DILocation(line: 1245, column: 2, scope: !7349)
!7473 = distinct !{!7473, !7352, !7474}
!7474 = !DILocation(line: 1288, column: 2, scope: !7345)
!7475 = !DILocation(line: 1289, column: 1, scope: !7041)
!7476 = distinct !DISubprogram(name: "zbufline", scope: !3, file: !3, line: 592, type: !1037, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!7477 = !DILocalVariable(name: "zspan", arg: 1, scope: !7476, file: !3, line: 592, type: !120)
!7478 = !DILocation(line: 592, column: 29, scope: !7476)
!7479 = !DILocalVariable(name: "obi", arg: 2, scope: !7476, file: !3, line: 592, type: !29)
!7480 = !DILocation(line: 592, column: 40, scope: !7476)
!7481 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !7476, file: !3, line: 592, type: !29)
!7482 = !DILocation(line: 592, column: 49, scope: !7476)
!7483 = !DILocalVariable(name: "vec1", arg: 4, scope: !7476, file: !3, line: 592, type: !88)
!7484 = !DILocation(line: 592, column: 68, scope: !7476)
!7485 = !DILocalVariable(name: "vec2", arg: 5, scope: !7476, file: !3, line: 592, type: !88)
!7486 = !DILocation(line: 592, column: 89, scope: !7476)
!7487 = !DILocalVariable(name: "rectz", scope: !7476, file: !3, line: 594, type: !81)
!7488 = !DILocation(line: 594, column: 7, scope: !7476)
!7489 = !DILocalVariable(name: "rectp", scope: !7476, file: !3, line: 594, type: !81)
!7490 = !DILocation(line: 594, column: 15, scope: !7476)
!7491 = !DILocalVariable(name: "recto", scope: !7476, file: !3, line: 594, type: !81)
!7492 = !DILocation(line: 594, column: 23, scope: !7476)
!7493 = !DILocalVariable(name: "rectmask", scope: !7476, file: !3, line: 594, type: !81)
!7494 = !DILocation(line: 594, column: 31, scope: !7476)
!7495 = !DILocalVariable(name: "start", scope: !7476, file: !3, line: 595, type: !29)
!7496 = !DILocation(line: 595, column: 6, scope: !7476)
!7497 = !DILocalVariable(name: "end", scope: !7476, file: !3, line: 595, type: !29)
!7498 = !DILocation(line: 595, column: 13, scope: !7476)
!7499 = !DILocalVariable(name: "x", scope: !7476, file: !3, line: 595, type: !29)
!7500 = !DILocation(line: 595, column: 18, scope: !7476)
!7501 = !DILocalVariable(name: "y", scope: !7476, file: !3, line: 595, type: !29)
!7502 = !DILocation(line: 595, column: 21, scope: !7476)
!7503 = !DILocalVariable(name: "oldx", scope: !7476, file: !3, line: 595, type: !29)
!7504 = !DILocation(line: 595, column: 24, scope: !7476)
!7505 = !DILocalVariable(name: "oldy", scope: !7476, file: !3, line: 595, type: !29)
!7506 = !DILocation(line: 595, column: 30, scope: !7476)
!7507 = !DILocalVariable(name: "ofs", scope: !7476, file: !3, line: 595, type: !29)
!7508 = !DILocation(line: 595, column: 36, scope: !7476)
!7509 = !DILocalVariable(name: "dz", scope: !7476, file: !3, line: 596, type: !29)
!7510 = !DILocation(line: 596, column: 6, scope: !7476)
!7511 = !DILocalVariable(name: "vergz", scope: !7476, file: !3, line: 596, type: !29)
!7512 = !DILocation(line: 596, column: 10, scope: !7476)
!7513 = !DILocalVariable(name: "maxtest", scope: !7476, file: !3, line: 596, type: !29)
!7514 = !DILocation(line: 596, column: 17, scope: !7476)
!7515 = !DILocalVariable(name: "dx", scope: !7476, file: !3, line: 597, type: !21)
!7516 = !DILocation(line: 597, column: 8, scope: !7476)
!7517 = !DILocalVariable(name: "dy", scope: !7476, file: !3, line: 597, type: !21)
!7518 = !DILocation(line: 597, column: 12, scope: !7476)
!7519 = !DILocalVariable(name: "v1", scope: !7476, file: !3, line: 598, type: !2427)
!7520 = !DILocation(line: 598, column: 8, scope: !7476)
!7521 = !DILocalVariable(name: "v2", scope: !7476, file: !3, line: 598, type: !2427)
!7522 = !DILocation(line: 598, column: 15, scope: !7476)
!7523 = !DILocation(line: 600, column: 6, scope: !7476)
!7524 = !DILocation(line: 600, column: 14, scope: !7476)
!7525 = !DILocation(line: 600, column: 13, scope: !7476)
!7526 = !DILocation(line: 600, column: 4, scope: !7476)
!7527 = !DILocation(line: 601, column: 6, scope: !7476)
!7528 = !DILocation(line: 601, column: 14, scope: !7476)
!7529 = !DILocation(line: 601, column: 13, scope: !7476)
!7530 = !DILocation(line: 601, column: 4, scope: !7476)
!7531 = !DILocation(line: 603, column: 12, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 603, column: 6)
!7533 = !DILocation(line: 603, column: 6, scope: !7532)
!7534 = !DILocation(line: 603, column: 24, scope: !7532)
!7535 = !DILocation(line: 603, column: 18, scope: !7532)
!7536 = !DILocation(line: 603, column: 16, scope: !7532)
!7537 = !DILocation(line: 603, column: 6, scope: !7476)
!7538 = !DILocation(line: 606, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 606, column: 7)
!7540 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 603, column: 29)
!7541 = !DILocation(line: 606, column: 15, scope: !7539)
!7542 = !DILocation(line: 606, column: 14, scope: !7539)
!7543 = !DILocation(line: 606, column: 7, scope: !7540)
!7544 = !DILocation(line: 607, column: 15, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 606, column: 24)
!7546 = !DILocation(line: 607, column: 19, scope: !7545)
!7547 = !DILocation(line: 607, column: 4, scope: !7545)
!7548 = !DILocation(line: 608, column: 15, scope: !7545)
!7549 = !DILocation(line: 608, column: 19, scope: !7545)
!7550 = !DILocation(line: 608, column: 4, scope: !7545)
!7551 = !DILocation(line: 609, column: 3, scope: !7545)
!7552 = !DILocation(line: 611, column: 15, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 610, column: 8)
!7554 = !DILocation(line: 611, column: 19, scope: !7553)
!7555 = !DILocation(line: 611, column: 4, scope: !7553)
!7556 = !DILocation(line: 612, column: 15, scope: !7553)
!7557 = !DILocation(line: 612, column: 19, scope: !7553)
!7558 = !DILocation(line: 612, column: 4, scope: !7553)
!7559 = !DILocation(line: 613, column: 9, scope: !7553)
!7560 = !DILocation(line: 613, column: 8, scope: !7553)
!7561 = !DILocation(line: 613, column: 6, scope: !7553)
!7562 = !DILocation(line: 613, column: 18, scope: !7553)
!7563 = !DILocation(line: 613, column: 17, scope: !7553)
!7564 = !DILocation(line: 613, column: 15, scope: !7553)
!7565 = !DILocation(line: 616, column: 16, scope: !7540)
!7566 = !DILocation(line: 616, column: 10, scope: !7540)
!7567 = !DILocation(line: 616, column: 8, scope: !7540)
!7568 = !DILocation(line: 617, column: 8, scope: !7540)
!7569 = !DILocation(line: 617, column: 20, scope: !7540)
!7570 = !DILocation(line: 617, column: 14, scope: !7540)
!7571 = !DILocation(line: 617, column: 13, scope: !7540)
!7572 = !DILocation(line: 617, column: 6, scope: !7540)
!7573 = !DILocation(line: 618, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 618, column: 7)
!7575 = !DILocation(line: 618, column: 12, scope: !7574)
!7576 = !DILocation(line: 618, column: 19, scope: !7574)
!7577 = !DILocation(line: 618, column: 10, scope: !7574)
!7578 = !DILocation(line: 618, column: 7, scope: !7540)
!7579 = !DILocation(line: 618, column: 31, scope: !7574)
!7580 = !DILocation(line: 618, column: 38, scope: !7574)
!7581 = !DILocation(line: 618, column: 43, scope: !7574)
!7582 = !DILocation(line: 618, column: 29, scope: !7574)
!7583 = !DILocation(line: 618, column: 26, scope: !7574)
!7584 = !DILocation(line: 620, column: 15, scope: !7540)
!7585 = !DILocation(line: 620, column: 9, scope: !7540)
!7586 = !DILocation(line: 620, column: 7, scope: !7540)
!7587 = !DILocation(line: 621, column: 8, scope: !7540)
!7588 = !DILocation(line: 621, column: 5, scope: !7540)
!7589 = !DILocation(line: 623, column: 16, scope: !7540)
!7590 = !DILocation(line: 623, column: 10, scope: !7540)
!7591 = !DILocation(line: 623, column: 8, scope: !7540)
!7592 = !DILocation(line: 624, column: 14, scope: !7540)
!7593 = !DILocation(line: 624, column: 20, scope: !7540)
!7594 = !DILocation(line: 624, column: 19, scope: !7540)
!7595 = !DILocation(line: 624, column: 27, scope: !7540)
!7596 = !DILocation(line: 624, column: 26, scope: !7540)
!7597 = !DILocation(line: 624, column: 13, scope: !7540)
!7598 = !DILocation(line: 624, column: 7, scope: !7540)
!7599 = !DILocation(line: 624, column: 5, scope: !7540)
!7600 = !DILocation(line: 625, column: 7, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 625, column: 7)
!7602 = !DILocation(line: 625, column: 12, scope: !7601)
!7603 = !DILocation(line: 625, column: 24, scope: !7601)
!7604 = !DILocation(line: 625, column: 27, scope: !7601)
!7605 = !DILocation(line: 625, column: 29, scope: !7601)
!7606 = !DILocation(line: 625, column: 7, scope: !7540)
!7607 = !DILocation(line: 625, column: 40, scope: !7601)
!7608 = !DILocation(line: 625, column: 33, scope: !7601)
!7609 = !DILocation(line: 627, column: 10, scope: !7540)
!7610 = !DILocation(line: 627, column: 17, scope: !7540)
!7611 = !DILocation(line: 627, column: 25, scope: !7540)
!7612 = !DILocation(line: 627, column: 30, scope: !7540)
!7613 = !DILocation(line: 627, column: 37, scope: !7540)
!7614 = !DILocation(line: 627, column: 29, scope: !7540)
!7615 = !DILocation(line: 627, column: 23, scope: !7540)
!7616 = !DILocation(line: 627, column: 44, scope: !7540)
!7617 = !DILocation(line: 627, column: 42, scope: !7540)
!7618 = !DILocation(line: 627, column: 8, scope: !7540)
!7619 = !DILocation(line: 628, column: 10, scope: !7540)
!7620 = !DILocation(line: 628, column: 17, scope: !7540)
!7621 = !DILocation(line: 628, column: 25, scope: !7540)
!7622 = !DILocation(line: 628, column: 30, scope: !7540)
!7623 = !DILocation(line: 628, column: 37, scope: !7540)
!7624 = !DILocation(line: 628, column: 29, scope: !7540)
!7625 = !DILocation(line: 628, column: 23, scope: !7540)
!7626 = !DILocation(line: 628, column: 44, scope: !7540)
!7627 = !DILocation(line: 628, column: 42, scope: !7540)
!7628 = !DILocation(line: 628, column: 8, scope: !7540)
!7629 = !DILocation(line: 629, column: 10, scope: !7540)
!7630 = !DILocation(line: 629, column: 17, scope: !7540)
!7631 = !DILocation(line: 629, column: 25, scope: !7540)
!7632 = !DILocation(line: 629, column: 30, scope: !7540)
!7633 = !DILocation(line: 629, column: 37, scope: !7540)
!7634 = !DILocation(line: 629, column: 29, scope: !7540)
!7635 = !DILocation(line: 629, column: 23, scope: !7540)
!7636 = !DILocation(line: 629, column: 44, scope: !7540)
!7637 = !DILocation(line: 629, column: 42, scope: !7540)
!7638 = !DILocation(line: 629, column: 8, scope: !7540)
!7639 = !DILocation(line: 630, column: 13, scope: !7540)
!7640 = !DILocation(line: 630, column: 20, scope: !7540)
!7641 = !DILocation(line: 630, column: 31, scope: !7540)
!7642 = !DILocation(line: 630, column: 36, scope: !7540)
!7643 = !DILocation(line: 630, column: 43, scope: !7540)
!7644 = !DILocation(line: 630, column: 35, scope: !7540)
!7645 = !DILocation(line: 630, column: 29, scope: !7540)
!7646 = !DILocation(line: 630, column: 50, scope: !7540)
!7647 = !DILocation(line: 630, column: 48, scope: !7540)
!7648 = !DILocation(line: 630, column: 11, scope: !7540)
!7649 = !DILocation(line: 632, column: 7, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 632, column: 7)
!7651 = !DILocation(line: 632, column: 9, scope: !7650)
!7652 = !DILocation(line: 632, column: 7, scope: !7540)
!7653 = !DILocation(line: 632, column: 19, scope: !7650)
!7654 = !DILocation(line: 632, column: 26, scope: !7650)
!7655 = !DILocation(line: 632, column: 18, scope: !7650)
!7656 = !DILocation(line: 632, column: 16, scope: !7650)
!7657 = !DILocation(line: 632, column: 13, scope: !7650)
!7658 = !DILocation(line: 633, column: 13, scope: !7650)
!7659 = !DILocation(line: 633, column: 20, scope: !7650)
!7660 = !DILocation(line: 633, column: 11, scope: !7650)
!7661 = !DILocation(line: 635, column: 11, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 635, column: 3)
!7663 = !DILocation(line: 635, column: 9, scope: !7662)
!7664 = !DILocation(line: 635, column: 8, scope: !7662)
!7665 = !DILocation(line: 635, column: 18, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 635, column: 3)
!7667 = !DILocation(line: 635, column: 21, scope: !7666)
!7668 = !DILocation(line: 635, column: 19, scope: !7666)
!7669 = !DILocation(line: 635, column: 3, scope: !7662)
!7670 = !DILocation(line: 637, column: 13, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 635, column: 70)
!7672 = !DILocation(line: 637, column: 7, scope: !7671)
!7673 = !DILocation(line: 637, column: 5, scope: !7671)
!7674 = !DILocation(line: 638, column: 8, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 638, column: 8)
!7676 = !DILocation(line: 638, column: 11, scope: !7675)
!7677 = !DILocation(line: 638, column: 9, scope: !7675)
!7678 = !DILocation(line: 638, column: 8, scope: !7671)
!7679 = !DILocation(line: 639, column: 11, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 638, column: 17)
!7681 = !DILocation(line: 639, column: 9, scope: !7680)
!7682 = !DILocation(line: 640, column: 13, scope: !7680)
!7683 = !DILocation(line: 640, column: 10, scope: !7680)
!7684 = !DILocation(line: 641, column: 13, scope: !7680)
!7685 = !DILocation(line: 641, column: 10, scope: !7680)
!7686 = !DILocation(line: 642, column: 13, scope: !7680)
!7687 = !DILocation(line: 642, column: 10, scope: !7680)
!7688 = !DILocation(line: 643, column: 16, scope: !7680)
!7689 = !DILocation(line: 643, column: 13, scope: !7680)
!7690 = !DILocation(line: 644, column: 4, scope: !7680)
!7691 = !DILocation(line: 646, column: 8, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 646, column: 8)
!7693 = !DILocation(line: 646, column: 9, scope: !7692)
!7694 = !DILocation(line: 646, column: 13, scope: !7692)
!7695 = !DILocation(line: 646, column: 16, scope: !7692)
!7696 = !DILocation(line: 646, column: 17, scope: !7692)
!7697 = !DILocation(line: 646, column: 21, scope: !7692)
!7698 = !DILocation(line: 646, column: 24, scope: !7692)
!7699 = !DILocation(line: 646, column: 26, scope: !7692)
!7700 = !DILocation(line: 646, column: 33, scope: !7692)
!7701 = !DILocation(line: 646, column: 25, scope: !7692)
!7702 = !DILocation(line: 646, column: 8, scope: !7671)
!7703 = !DILocation(line: 647, column: 9, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 647, column: 9)
!7705 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 646, column: 40)
!7706 = !DILocation(line: 647, column: 16, scope: !7704)
!7707 = !DILocation(line: 647, column: 15, scope: !7704)
!7708 = !DILocation(line: 647, column: 14, scope: !7704)
!7709 = !DILocation(line: 647, column: 9, scope: !7705)
!7710 = !DILocation(line: 648, column: 11, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 648, column: 10)
!7712 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 647, column: 23)
!7713 = !DILocation(line: 648, column: 18, scope: !7711)
!7714 = !DILocation(line: 648, column: 27, scope: !7711)
!7715 = !DILocation(line: 648, column: 30, scope: !7711)
!7716 = !DILocation(line: 648, column: 37, scope: !7711)
!7717 = !DILocation(line: 648, column: 36, scope: !7711)
!7718 = !DILocation(line: 648, column: 35, scope: !7711)
!7719 = !DILocation(line: 648, column: 10, scope: !7712)
!7720 = !DILocation(line: 649, column: 15, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 648, column: 47)
!7722 = !DILocation(line: 649, column: 8, scope: !7721)
!7723 = !DILocation(line: 649, column: 13, scope: !7721)
!7724 = !DILocation(line: 650, column: 15, scope: !7721)
!7725 = !DILocation(line: 650, column: 8, scope: !7721)
!7726 = !DILocation(line: 650, column: 13, scope: !7721)
!7727 = !DILocation(line: 651, column: 15, scope: !7721)
!7728 = !DILocation(line: 651, column: 8, scope: !7721)
!7729 = !DILocation(line: 651, column: 13, scope: !7721)
!7730 = !DILocation(line: 652, column: 6, scope: !7721)
!7731 = !DILocation(line: 653, column: 5, scope: !7712)
!7732 = !DILocation(line: 654, column: 4, scope: !7705)
!7733 = !DILocation(line: 656, column: 12, scope: !7671)
!7734 = !DILocation(line: 656, column: 4, scope: !7671)
!7735 = !DILocation(line: 656, column: 9, scope: !7671)
!7736 = !DILocation(line: 658, column: 8, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 658, column: 8)
!7738 = !DILocation(line: 658, column: 16, scope: !7737)
!7739 = !DILocation(line: 658, column: 20, scope: !7737)
!7740 = !DILocation(line: 658, column: 41, scope: !7737)
!7741 = !DILocation(line: 658, column: 39, scope: !7737)
!7742 = !DILocation(line: 658, column: 26, scope: !7737)
!7743 = !DILocation(line: 658, column: 8, scope: !7671)
!7744 = !DILocation(line: 658, column: 51, scope: !7737)
!7745 = !DILocation(line: 658, column: 46, scope: !7737)
!7746 = !DILocation(line: 659, column: 17, scope: !7737)
!7747 = !DILocation(line: 659, column: 14, scope: !7737)
!7748 = !DILocation(line: 660, column: 3, scope: !7671)
!7749 = !DILocation(line: 635, column: 27, scope: !7666)
!7750 = !DILocation(line: 635, column: 36, scope: !7666)
!7751 = !DILocation(line: 635, column: 45, scope: !7666)
!7752 = !DILocation(line: 635, column: 54, scope: !7666)
!7753 = !DILocation(line: 635, column: 66, scope: !7666)
!7754 = !DILocation(line: 635, column: 3, scope: !7666)
!7755 = distinct !{!7755, !7669, !7756}
!7756 = !DILocation(line: 660, column: 3, scope: !7662)
!7757 = !DILocation(line: 661, column: 2, scope: !7540)
!7758 = !DILocation(line: 664, column: 7, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 664, column: 7)
!7760 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 662, column: 7)
!7761 = !DILocation(line: 664, column: 15, scope: !7759)
!7762 = !DILocation(line: 664, column: 14, scope: !7759)
!7763 = !DILocation(line: 664, column: 7, scope: !7760)
!7764 = !DILocation(line: 665, column: 15, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 664, column: 24)
!7766 = !DILocation(line: 665, column: 19, scope: !7765)
!7767 = !DILocation(line: 665, column: 4, scope: !7765)
!7768 = !DILocation(line: 666, column: 15, scope: !7765)
!7769 = !DILocation(line: 666, column: 19, scope: !7765)
!7770 = !DILocation(line: 666, column: 4, scope: !7765)
!7771 = !DILocation(line: 667, column: 3, scope: !7765)
!7772 = !DILocation(line: 669, column: 15, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 668, column: 8)
!7774 = !DILocation(line: 669, column: 19, scope: !7773)
!7775 = !DILocation(line: 669, column: 4, scope: !7773)
!7776 = !DILocation(line: 670, column: 15, scope: !7773)
!7777 = !DILocation(line: 670, column: 19, scope: !7773)
!7778 = !DILocation(line: 670, column: 4, scope: !7773)
!7779 = !DILocation(line: 671, column: 9, scope: !7773)
!7780 = !DILocation(line: 671, column: 8, scope: !7773)
!7781 = !DILocation(line: 671, column: 6, scope: !7773)
!7782 = !DILocation(line: 671, column: 18, scope: !7773)
!7783 = !DILocation(line: 671, column: 17, scope: !7773)
!7784 = !DILocation(line: 671, column: 15, scope: !7773)
!7785 = !DILocation(line: 674, column: 16, scope: !7760)
!7786 = !DILocation(line: 674, column: 10, scope: !7760)
!7787 = !DILocation(line: 674, column: 8, scope: !7760)
!7788 = !DILocation(line: 675, column: 8, scope: !7760)
!7789 = !DILocation(line: 675, column: 20, scope: !7760)
!7790 = !DILocation(line: 675, column: 14, scope: !7760)
!7791 = !DILocation(line: 675, column: 13, scope: !7760)
!7792 = !DILocation(line: 675, column: 6, scope: !7760)
!7793 = !DILocation(line: 677, column: 7, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 677, column: 7)
!7795 = !DILocation(line: 677, column: 12, scope: !7794)
!7796 = !DILocation(line: 677, column: 19, scope: !7794)
!7797 = !DILocation(line: 677, column: 10, scope: !7794)
!7798 = !DILocation(line: 677, column: 7, scope: !7760)
!7799 = !DILocation(line: 677, column: 31, scope: !7794)
!7800 = !DILocation(line: 677, column: 38, scope: !7794)
!7801 = !DILocation(line: 677, column: 43, scope: !7794)
!7802 = !DILocation(line: 677, column: 29, scope: !7794)
!7803 = !DILocation(line: 677, column: 26, scope: !7794)
!7804 = !DILocation(line: 679, column: 15, scope: !7760)
!7805 = !DILocation(line: 679, column: 9, scope: !7760)
!7806 = !DILocation(line: 679, column: 7, scope: !7760)
!7807 = !DILocation(line: 680, column: 8, scope: !7760)
!7808 = !DILocation(line: 680, column: 5, scope: !7760)
!7809 = !DILocation(line: 682, column: 16, scope: !7760)
!7810 = !DILocation(line: 682, column: 10, scope: !7760)
!7811 = !DILocation(line: 682, column: 8, scope: !7760)
!7812 = !DILocation(line: 683, column: 14, scope: !7760)
!7813 = !DILocation(line: 683, column: 20, scope: !7760)
!7814 = !DILocation(line: 683, column: 19, scope: !7760)
!7815 = !DILocation(line: 683, column: 27, scope: !7760)
!7816 = !DILocation(line: 683, column: 26, scope: !7760)
!7817 = !DILocation(line: 683, column: 13, scope: !7760)
!7818 = !DILocation(line: 683, column: 7, scope: !7760)
!7819 = !DILocation(line: 683, column: 5, scope: !7760)
!7820 = !DILocation(line: 684, column: 7, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 684, column: 7)
!7822 = !DILocation(line: 684, column: 12, scope: !7821)
!7823 = !DILocation(line: 684, column: 24, scope: !7821)
!7824 = !DILocation(line: 684, column: 27, scope: !7821)
!7825 = !DILocation(line: 684, column: 29, scope: !7821)
!7826 = !DILocation(line: 684, column: 7, scope: !7760)
!7827 = !DILocation(line: 684, column: 40, scope: !7821)
!7828 = !DILocation(line: 684, column: 33, scope: !7821)
!7829 = !DILocation(line: 686, column: 10, scope: !7760)
!7830 = !DILocation(line: 686, column: 17, scope: !7760)
!7831 = !DILocation(line: 686, column: 25, scope: !7760)
!7832 = !DILocation(line: 686, column: 31, scope: !7760)
!7833 = !DILocation(line: 686, column: 38, scope: !7760)
!7834 = !DILocation(line: 686, column: 30, scope: !7760)
!7835 = !DILocation(line: 686, column: 23, scope: !7760)
!7836 = !DILocation(line: 686, column: 45, scope: !7760)
!7837 = !DILocation(line: 686, column: 43, scope: !7760)
!7838 = !DILocation(line: 686, column: 8, scope: !7760)
!7839 = !DILocation(line: 687, column: 10, scope: !7760)
!7840 = !DILocation(line: 687, column: 17, scope: !7760)
!7841 = !DILocation(line: 687, column: 25, scope: !7760)
!7842 = !DILocation(line: 687, column: 31, scope: !7760)
!7843 = !DILocation(line: 687, column: 38, scope: !7760)
!7844 = !DILocation(line: 687, column: 30, scope: !7760)
!7845 = !DILocation(line: 687, column: 23, scope: !7760)
!7846 = !DILocation(line: 687, column: 45, scope: !7760)
!7847 = !DILocation(line: 687, column: 43, scope: !7760)
!7848 = !DILocation(line: 687, column: 8, scope: !7760)
!7849 = !DILocation(line: 688, column: 10, scope: !7760)
!7850 = !DILocation(line: 688, column: 17, scope: !7760)
!7851 = !DILocation(line: 688, column: 25, scope: !7760)
!7852 = !DILocation(line: 688, column: 31, scope: !7760)
!7853 = !DILocation(line: 688, column: 38, scope: !7760)
!7854 = !DILocation(line: 688, column: 30, scope: !7760)
!7855 = !DILocation(line: 688, column: 23, scope: !7760)
!7856 = !DILocation(line: 688, column: 45, scope: !7760)
!7857 = !DILocation(line: 688, column: 43, scope: !7760)
!7858 = !DILocation(line: 688, column: 8, scope: !7760)
!7859 = !DILocation(line: 689, column: 13, scope: !7760)
!7860 = !DILocation(line: 689, column: 20, scope: !7760)
!7861 = !DILocation(line: 689, column: 31, scope: !7760)
!7862 = !DILocation(line: 689, column: 37, scope: !7760)
!7863 = !DILocation(line: 689, column: 44, scope: !7760)
!7864 = !DILocation(line: 689, column: 36, scope: !7760)
!7865 = !DILocation(line: 689, column: 29, scope: !7760)
!7866 = !DILocation(line: 689, column: 51, scope: !7760)
!7867 = !DILocation(line: 689, column: 49, scope: !7760)
!7868 = !DILocation(line: 689, column: 11, scope: !7760)
!7869 = !DILocation(line: 691, column: 7, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 691, column: 7)
!7871 = !DILocation(line: 691, column: 9, scope: !7870)
!7872 = !DILocation(line: 691, column: 7, scope: !7760)
!7873 = !DILocation(line: 691, column: 16, scope: !7870)
!7874 = !DILocation(line: 691, column: 13, scope: !7870)
!7875 = !DILocation(line: 692, column: 11, scope: !7870)
!7876 = !DILocation(line: 694, column: 11, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 694, column: 3)
!7878 = !DILocation(line: 694, column: 9, scope: !7877)
!7879 = !DILocation(line: 694, column: 8, scope: !7877)
!7880 = !DILocation(line: 694, column: 18, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 694, column: 3)
!7882 = !DILocation(line: 694, column: 21, scope: !7881)
!7883 = !DILocation(line: 694, column: 19, scope: !7881)
!7884 = !DILocation(line: 694, column: 3, scope: !7877)
!7885 = !DILocation(line: 696, column: 13, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 694, column: 118)
!7887 = !DILocation(line: 696, column: 7, scope: !7886)
!7888 = !DILocation(line: 696, column: 5, scope: !7886)
!7889 = !DILocation(line: 697, column: 8, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 697, column: 8)
!7891 = !DILocation(line: 697, column: 11, scope: !7890)
!7892 = !DILocation(line: 697, column: 9, scope: !7890)
!7893 = !DILocation(line: 697, column: 8, scope: !7886)
!7894 = !DILocation(line: 698, column: 11, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 697, column: 17)
!7896 = !DILocation(line: 698, column: 9, scope: !7895)
!7897 = !DILocation(line: 699, column: 13, scope: !7895)
!7898 = !DILocation(line: 699, column: 10, scope: !7895)
!7899 = !DILocation(line: 700, column: 13, scope: !7895)
!7900 = !DILocation(line: 700, column: 10, scope: !7895)
!7901 = !DILocation(line: 701, column: 13, scope: !7895)
!7902 = !DILocation(line: 701, column: 10, scope: !7895)
!7903 = !DILocation(line: 702, column: 16, scope: !7895)
!7904 = !DILocation(line: 702, column: 13, scope: !7895)
!7905 = !DILocation(line: 703, column: 4, scope: !7895)
!7906 = !DILocation(line: 705, column: 8, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 705, column: 8)
!7908 = !DILocation(line: 705, column: 9, scope: !7907)
!7909 = !DILocation(line: 705, column: 13, scope: !7907)
!7910 = !DILocation(line: 705, column: 16, scope: !7907)
!7911 = !DILocation(line: 705, column: 17, scope: !7907)
!7912 = !DILocation(line: 705, column: 21, scope: !7907)
!7913 = !DILocation(line: 705, column: 24, scope: !7907)
!7914 = !DILocation(line: 705, column: 26, scope: !7907)
!7915 = !DILocation(line: 705, column: 33, scope: !7907)
!7916 = !DILocation(line: 705, column: 25, scope: !7907)
!7917 = !DILocation(line: 705, column: 8, scope: !7886)
!7918 = !DILocation(line: 706, column: 9, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 706, column: 9)
!7920 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 705, column: 40)
!7921 = !DILocation(line: 706, column: 16, scope: !7919)
!7922 = !DILocation(line: 706, column: 15, scope: !7919)
!7923 = !DILocation(line: 706, column: 14, scope: !7919)
!7924 = !DILocation(line: 706, column: 9, scope: !7920)
!7925 = !DILocation(line: 707, column: 11, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 707, column: 10)
!7927 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 706, column: 23)
!7928 = !DILocation(line: 707, column: 18, scope: !7926)
!7929 = !DILocation(line: 707, column: 27, scope: !7926)
!7930 = !DILocation(line: 707, column: 30, scope: !7926)
!7931 = !DILocation(line: 707, column: 37, scope: !7926)
!7932 = !DILocation(line: 707, column: 36, scope: !7926)
!7933 = !DILocation(line: 707, column: 35, scope: !7926)
!7934 = !DILocation(line: 707, column: 10, scope: !7927)
!7935 = !DILocation(line: 708, column: 15, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 707, column: 47)
!7937 = !DILocation(line: 708, column: 8, scope: !7936)
!7938 = !DILocation(line: 708, column: 13, scope: !7936)
!7939 = !DILocation(line: 709, column: 15, scope: !7936)
!7940 = !DILocation(line: 709, column: 8, scope: !7936)
!7941 = !DILocation(line: 709, column: 13, scope: !7936)
!7942 = !DILocation(line: 710, column: 15, scope: !7936)
!7943 = !DILocation(line: 710, column: 8, scope: !7936)
!7944 = !DILocation(line: 710, column: 13, scope: !7936)
!7945 = !DILocation(line: 711, column: 6, scope: !7936)
!7946 = !DILocation(line: 712, column: 5, scope: !7927)
!7947 = !DILocation(line: 713, column: 4, scope: !7920)
!7948 = !DILocation(line: 715, column: 12, scope: !7886)
!7949 = !DILocation(line: 715, column: 4, scope: !7886)
!7950 = !DILocation(line: 715, column: 9, scope: !7886)
!7951 = !DILocation(line: 716, column: 8, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 716, column: 8)
!7953 = !DILocation(line: 716, column: 16, scope: !7952)
!7954 = !DILocation(line: 716, column: 20, scope: !7952)
!7955 = !DILocation(line: 716, column: 41, scope: !7952)
!7956 = !DILocation(line: 716, column: 39, scope: !7952)
!7957 = !DILocation(line: 716, column: 26, scope: !7952)
!7958 = !DILocation(line: 716, column: 8, scope: !7886)
!7959 = !DILocation(line: 716, column: 51, scope: !7952)
!7960 = !DILocation(line: 716, column: 46, scope: !7952)
!7961 = !DILocation(line: 717, column: 17, scope: !7952)
!7962 = !DILocation(line: 717, column: 14, scope: !7952)
!7963 = !DILocation(line: 718, column: 3, scope: !7886)
!7964 = !DILocation(line: 694, column: 27, scope: !7881)
!7965 = !DILocation(line: 694, column: 38, scope: !7881)
!7966 = !DILocation(line: 694, column: 45, scope: !7881)
!7967 = !DILocation(line: 694, column: 36, scope: !7881)
!7968 = !DILocation(line: 694, column: 59, scope: !7881)
!7969 = !DILocation(line: 694, column: 66, scope: !7881)
!7970 = !DILocation(line: 694, column: 57, scope: !7881)
!7971 = !DILocation(line: 694, column: 80, scope: !7881)
!7972 = !DILocation(line: 694, column: 87, scope: !7881)
!7973 = !DILocation(line: 694, column: 78, scope: !7881)
!7974 = !DILocation(line: 694, column: 104, scope: !7881)
!7975 = !DILocation(line: 694, column: 111, scope: !7881)
!7976 = !DILocation(line: 694, column: 102, scope: !7881)
!7977 = !DILocation(line: 694, column: 3, scope: !7881)
!7978 = distinct !{!7978, !7884, !7979}
!7979 = !DILocation(line: 718, column: 3, scope: !7877)
!7980 = !DILocation(line: 720, column: 1, scope: !7476)
!7981 = distinct !DISubprogram(name: "zbuf_project_cache_clear", scope: !3, file: !3, line: 1752, type: !7982, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{null, !7984, !29}
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5632, size: 64)
!7985 = !DILocalVariable(name: "cache", arg: 1, scope: !7981, file: !3, line: 1752, type: !7984)
!7986 = !DILocation(line: 1752, column: 56, scope: !7981)
!7987 = !DILocalVariable(name: "size", arg: 2, scope: !7981, file: !3, line: 1752, type: !29)
!7988 = !DILocation(line: 1752, column: 67, scope: !7981)
!7989 = !DILocalVariable(name: "i", scope: !7981, file: !3, line: 1754, type: !29)
!7990 = !DILocation(line: 1754, column: 6, scope: !7981)
!7991 = !DILocation(line: 1756, column: 6, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 1756, column: 6)
!7993 = !DILocation(line: 1756, column: 11, scope: !7992)
!7994 = !DILocation(line: 1756, column: 6, scope: !7981)
!7995 = !DILocation(line: 1757, column: 7, scope: !7992)
!7996 = !DILocation(line: 1757, column: 3, scope: !7992)
!7997 = !DILocation(line: 1759, column: 9, scope: !7981)
!7998 = !DILocation(line: 1759, column: 2, scope: !7981)
!7999 = !DILocation(line: 1759, column: 44, scope: !7981)
!8000 = !DILocation(line: 1759, column: 43, scope: !7981)
!8001 = !DILocation(line: 1760, column: 8, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 1760, column: 2)
!8003 = !DILocation(line: 1760, column: 7, scope: !8002)
!8004 = !DILocation(line: 1760, column: 12, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1760, column: 2)
!8006 = !DILocation(line: 1760, column: 14, scope: !8005)
!8007 = !DILocation(line: 1760, column: 13, scope: !8005)
!8008 = !DILocation(line: 1760, column: 2, scope: !8002)
!8009 = !DILocation(line: 1761, column: 3, scope: !8005)
!8010 = !DILocation(line: 1761, column: 9, scope: !8005)
!8011 = !DILocation(line: 1761, column: 12, scope: !8005)
!8012 = !DILocation(line: 1761, column: 17, scope: !8005)
!8013 = !DILocation(line: 1760, column: 21, scope: !8005)
!8014 = !DILocation(line: 1760, column: 2, scope: !8005)
!8015 = distinct !{!8015, !8008, !8016}
!8016 = !DILocation(line: 1761, column: 20, scope: !8002)
!8017 = !DILocation(line: 1762, column: 1, scope: !7981)
!8018 = distinct !DISubprogram(name: "zbuf_part_project", scope: !3, file: !3, line: 1793, type: !8019, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!29, !7984, !29, !2281, !31, !31, !31}
!8021 = !DILocalVariable(name: "cache", arg: 1, scope: !8018, file: !3, line: 1793, type: !7984)
!8022 = !DILocation(line: 1793, column: 48, scope: !8018)
!8023 = !DILocalVariable(name: "index", arg: 2, scope: !8018, file: !3, line: 1793, type: !29)
!8024 = !DILocation(line: 1793, column: 59, scope: !8018)
!8025 = !DILocalVariable(name: "winmat", arg: 3, scope: !8018, file: !3, line: 1793, type: !2281)
!8026 = !DILocation(line: 1793, column: 72, scope: !8018)
!8027 = !DILocalVariable(name: "bounds", arg: 4, scope: !8018, file: !3, line: 1793, type: !31)
!8028 = !DILocation(line: 1793, column: 93, scope: !8018)
!8029 = !DILocalVariable(name: "co", arg: 5, scope: !8018, file: !3, line: 1793, type: !31)
!8030 = !DILocation(line: 1793, column: 108, scope: !8018)
!8031 = !DILocalVariable(name: "ho", arg: 6, scope: !8018, file: !3, line: 1793, type: !31)
!8032 = !DILocation(line: 1793, column: 119, scope: !8018)
!8033 = !DILocalVariable(name: "vec", scope: !8018, file: !3, line: 1795, type: !2427)
!8034 = !DILocation(line: 1795, column: 8, scope: !8018)
!8035 = !DILocalVariable(name: "cindex", scope: !8018, file: !3, line: 1796, type: !29)
!8036 = !DILocation(line: 1796, column: 6, scope: !8018)
!8037 = !DILocation(line: 1796, column: 14, scope: !8018)
!8038 = !DILocation(line: 1796, column: 20, scope: !8018)
!8039 = !DILocation(line: 1798, column: 6, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 1798, column: 6)
!8041 = !DILocation(line: 1798, column: 12, scope: !8040)
!8042 = !DILocation(line: 1798, column: 20, scope: !8040)
!8043 = !DILocation(line: 1798, column: 29, scope: !8040)
!8044 = !DILocation(line: 1798, column: 26, scope: !8040)
!8045 = !DILocation(line: 1798, column: 6, scope: !8018)
!8046 = !DILocation(line: 1799, column: 14, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1798, column: 36)
!8048 = !DILocation(line: 1799, column: 18, scope: !8047)
!8049 = !DILocation(line: 1799, column: 24, scope: !8047)
!8050 = !DILocation(line: 1799, column: 32, scope: !8047)
!8051 = !DILocation(line: 1799, column: 3, scope: !8047)
!8052 = !DILocation(line: 1800, column: 10, scope: !8047)
!8053 = !DILocation(line: 1800, column: 16, scope: !8047)
!8054 = !DILocation(line: 1800, column: 24, scope: !8047)
!8055 = !DILocation(line: 1800, column: 3, scope: !8047)
!8056 = !DILocalVariable(name: "wco", scope: !8057, file: !3, line: 1803, type: !21)
!8057 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1802, column: 7)
!8058 = !DILocation(line: 1803, column: 9, scope: !8057)
!8059 = !DILocalVariable(name: "clipflag", scope: !8057, file: !3, line: 1804, type: !29)
!8060 = !DILocation(line: 1804, column: 7, scope: !8057)
!8061 = !DILocation(line: 1805, column: 14, scope: !8057)
!8062 = !DILocation(line: 1805, column: 19, scope: !8057)
!8063 = !DILocation(line: 1805, column: 3, scope: !8057)
!8064 = !DILocation(line: 1806, column: 15, scope: !8057)
!8065 = !DILocation(line: 1806, column: 19, scope: !8057)
!8066 = !DILocation(line: 1806, column: 27, scope: !8057)
!8067 = !DILocation(line: 1806, column: 3, scope: !8057)
!8068 = !DILocation(line: 1808, column: 8, scope: !8057)
!8069 = !DILocation(line: 1808, column: 6, scope: !8057)
!8070 = !DILocation(line: 1809, column: 7, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 1809, column: 7)
!8072 = !DILocation(line: 1809, column: 15, scope: !8071)
!8073 = !DILocation(line: 1809, column: 25, scope: !8071)
!8074 = !DILocation(line: 1809, column: 24, scope: !8071)
!8075 = !DILocation(line: 1809, column: 13, scope: !8071)
!8076 = !DILocation(line: 1809, column: 7, scope: !8057)
!8077 = !DILocation(line: 1809, column: 39, scope: !8071)
!8078 = !DILocation(line: 1809, column: 30, scope: !8071)
!8079 = !DILocation(line: 1810, column: 12, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1810, column: 12)
!8081 = !DILocation(line: 1810, column: 20, scope: !8080)
!8082 = !DILocation(line: 1810, column: 30, scope: !8080)
!8083 = !DILocation(line: 1810, column: 29, scope: !8080)
!8084 = !DILocation(line: 1810, column: 18, scope: !8080)
!8085 = !DILocation(line: 1810, column: 12, scope: !8071)
!8086 = !DILocation(line: 1810, column: 44, scope: !8080)
!8087 = !DILocation(line: 1810, column: 35, scope: !8080)
!8088 = !DILocation(line: 1811, column: 7, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 1811, column: 7)
!8090 = !DILocation(line: 1811, column: 15, scope: !8089)
!8091 = !DILocation(line: 1811, column: 25, scope: !8089)
!8092 = !DILocation(line: 1811, column: 24, scope: !8089)
!8093 = !DILocation(line: 1811, column: 13, scope: !8089)
!8094 = !DILocation(line: 1811, column: 7, scope: !8057)
!8095 = !DILocation(line: 1811, column: 39, scope: !8089)
!8096 = !DILocation(line: 1811, column: 30, scope: !8089)
!8097 = !DILocation(line: 1812, column: 12, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1812, column: 12)
!8099 = !DILocation(line: 1812, column: 20, scope: !8098)
!8100 = !DILocation(line: 1812, column: 30, scope: !8098)
!8101 = !DILocation(line: 1812, column: 29, scope: !8098)
!8102 = !DILocation(line: 1812, column: 18, scope: !8098)
!8103 = !DILocation(line: 1812, column: 12, scope: !8089)
!8104 = !DILocation(line: 1812, column: 44, scope: !8098)
!8105 = !DILocation(line: 1812, column: 35, scope: !8098)
!8106 = !DILocation(line: 1814, column: 14, scope: !8057)
!8107 = !DILocation(line: 1814, column: 20, scope: !8057)
!8108 = !DILocation(line: 1814, column: 28, scope: !8057)
!8109 = !DILocation(line: 1814, column: 32, scope: !8057)
!8110 = !DILocation(line: 1814, column: 3, scope: !8057)
!8111 = !DILocation(line: 1815, column: 23, scope: !8057)
!8112 = !DILocation(line: 1815, column: 3, scope: !8057)
!8113 = !DILocation(line: 1815, column: 9, scope: !8057)
!8114 = !DILocation(line: 1815, column: 17, scope: !8057)
!8115 = !DILocation(line: 1815, column: 21, scope: !8057)
!8116 = !DILocation(line: 1816, column: 24, scope: !8057)
!8117 = !DILocation(line: 1816, column: 3, scope: !8057)
!8118 = !DILocation(line: 1816, column: 9, scope: !8057)
!8119 = !DILocation(line: 1816, column: 17, scope: !8057)
!8120 = !DILocation(line: 1816, column: 22, scope: !8057)
!8121 = !DILocation(line: 1818, column: 10, scope: !8057)
!8122 = !DILocation(line: 1818, column: 3, scope: !8057)
!8123 = !DILocation(line: 1820, column: 1, scope: !8018)
!8124 = distinct !DISubprogram(name: "zmask_rect", scope: !3, file: !3, line: 2000, type: !8125, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{null, !81, !81, !29, !29, !29}
!8127 = !DILocalVariable(name: "rectz", arg: 1, scope: !8124, file: !3, line: 2000, type: !81)
!8128 = !DILocation(line: 2000, column: 29, scope: !8124)
!8129 = !DILocalVariable(name: "rectp", arg: 2, scope: !8124, file: !3, line: 2000, type: !81)
!8130 = !DILocation(line: 2000, column: 41, scope: !8124)
!8131 = !DILocalVariable(name: "xs", arg: 3, scope: !8124, file: !3, line: 2000, type: !29)
!8132 = !DILocation(line: 2000, column: 52, scope: !8124)
!8133 = !DILocalVariable(name: "ys", arg: 4, scope: !8124, file: !3, line: 2000, type: !29)
!8134 = !DILocation(line: 2000, column: 60, scope: !8124)
!8135 = !DILocalVariable(name: "neg", arg: 5, scope: !8124, file: !3, line: 2000, type: !29)
!8136 = !DILocation(line: 2000, column: 68, scope: !8124)
!8137 = !DILocalVariable(name: "len", scope: !8124, file: !3, line: 2002, type: !29)
!8138 = !DILocation(line: 2002, column: 6, scope: !8124)
!8139 = !DILocalVariable(name: "x", scope: !8124, file: !3, line: 2002, type: !29)
!8140 = !DILocation(line: 2002, column: 13, scope: !8124)
!8141 = !DILocalVariable(name: "y", scope: !8124, file: !3, line: 2002, type: !29)
!8142 = !DILocation(line: 2002, column: 16, scope: !8124)
!8143 = !DILocalVariable(name: "temprectp", scope: !8124, file: !3, line: 2003, type: !81)
!8144 = !DILocation(line: 2003, column: 7, scope: !8124)
!8145 = !DILocalVariable(name: "row1", scope: !8124, file: !3, line: 2004, type: !29)
!8146 = !DILocation(line: 2004, column: 6, scope: !8124)
!8147 = !DILocalVariable(name: "row2", scope: !8124, file: !3, line: 2004, type: !29)
!8148 = !DILocation(line: 2004, column: 12, scope: !8124)
!8149 = !DILocalVariable(name: "row3", scope: !8124, file: !3, line: 2004, type: !29)
!8150 = !DILocation(line: 2004, column: 18, scope: !8124)
!8151 = !DILocalVariable(name: "curp", scope: !8124, file: !3, line: 2004, type: !81)
!8152 = !DILocation(line: 2004, column: 25, scope: !8124)
!8153 = !DILocalVariable(name: "curz", scope: !8124, file: !3, line: 2004, type: !81)
!8154 = !DILocation(line: 2004, column: 32, scope: !8124)
!8155 = !DILocation(line: 2006, column: 13, scope: !8124)
!8156 = !DILocation(line: 2006, column: 27, scope: !8124)
!8157 = !DILocation(line: 2006, column: 11, scope: !8124)
!8158 = !DILocation(line: 2010, column: 8, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 2010, column: 2)
!8160 = !DILocation(line: 2010, column: 7, scope: !8159)
!8161 = !DILocation(line: 2010, column: 12, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2010, column: 2)
!8163 = !DILocation(line: 2010, column: 15, scope: !8162)
!8164 = !DILocation(line: 2010, column: 13, scope: !8162)
!8165 = !DILocation(line: 2010, column: 2, scope: !8159)
!8166 = !DILocation(line: 2012, column: 10, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2010, column: 24)
!8168 = !DILocation(line: 2012, column: 11, scope: !8167)
!8169 = !DILocation(line: 2012, column: 15, scope: !8167)
!8170 = !DILocation(line: 2012, column: 14, scope: !8167)
!8171 = !DILocation(line: 2012, column: 7, scope: !8167)
!8172 = !DILocation(line: 2013, column: 9, scope: !8167)
!8173 = !DILocation(line: 2013, column: 16, scope: !8167)
!8174 = !DILocation(line: 2013, column: 14, scope: !8167)
!8175 = !DILocation(line: 2013, column: 7, scope: !8167)
!8176 = !DILocation(line: 2014, column: 9, scope: !8167)
!8177 = !DILocation(line: 2014, column: 16, scope: !8167)
!8178 = !DILocation(line: 2014, column: 14, scope: !8167)
!8179 = !DILocation(line: 2014, column: 7, scope: !8167)
!8180 = !DILocation(line: 2015, column: 7, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 2015, column: 7)
!8182 = !DILocation(line: 2015, column: 8, scope: !8181)
!8183 = !DILocation(line: 2015, column: 7, scope: !8167)
!8184 = !DILocation(line: 2016, column: 10, scope: !8181)
!8185 = !DILocation(line: 2016, column: 8, scope: !8181)
!8186 = !DILocation(line: 2016, column: 4, scope: !8181)
!8187 = !DILocation(line: 2017, column: 12, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 2017, column: 12)
!8189 = !DILocation(line: 2017, column: 15, scope: !8188)
!8190 = !DILocation(line: 2017, column: 13, scope: !8188)
!8191 = !DILocation(line: 2017, column: 12, scope: !8181)
!8192 = !DILocation(line: 2018, column: 10, scope: !8188)
!8193 = !DILocation(line: 2018, column: 8, scope: !8188)
!8194 = !DILocation(line: 2018, column: 4, scope: !8188)
!8195 = !DILocation(line: 2020, column: 9, scope: !8167)
!8196 = !DILocation(line: 2020, column: 18, scope: !8167)
!8197 = !DILocation(line: 2020, column: 19, scope: !8167)
!8198 = !DILocation(line: 2020, column: 23, scope: !8167)
!8199 = !DILocation(line: 2020, column: 22, scope: !8167)
!8200 = !DILocation(line: 2020, column: 15, scope: !8167)
!8201 = !DILocation(line: 2020, column: 7, scope: !8167)
!8202 = !DILocation(line: 2021, column: 9, scope: !8167)
!8203 = !DILocation(line: 2021, column: 18, scope: !8167)
!8204 = !DILocation(line: 2021, column: 19, scope: !8167)
!8205 = !DILocation(line: 2021, column: 23, scope: !8167)
!8206 = !DILocation(line: 2021, column: 22, scope: !8167)
!8207 = !DILocation(line: 2021, column: 15, scope: !8167)
!8208 = !DILocation(line: 2021, column: 7, scope: !8167)
!8209 = !DILocation(line: 2023, column: 9, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 2023, column: 3)
!8211 = !DILocation(line: 2023, column: 8, scope: !8210)
!8212 = !DILocation(line: 2023, column: 13, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2023, column: 3)
!8214 = !DILocation(line: 2023, column: 15, scope: !8213)
!8215 = !DILocation(line: 2023, column: 14, scope: !8213)
!8216 = !DILocation(line: 2023, column: 3, scope: !8210)
!8217 = !DILocation(line: 2024, column: 8, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2024, column: 8)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2023, column: 40)
!8220 = !DILocation(line: 2024, column: 15, scope: !8218)
!8221 = !DILocation(line: 2024, column: 8, scope: !8219)
!8222 = !DILocalVariable(name: "tot", scope: !8223, file: !3, line: 2025, type: !29)
!8223 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 2024, column: 20)
!8224 = !DILocation(line: 2025, column: 9, scope: !8223)
!8225 = !DILocalVariable(name: "z", scope: !8223, file: !3, line: 2026, type: !21)
!8226 = !DILocation(line: 2026, column: 11, scope: !8223)
!8227 = !DILocation(line: 2028, column: 5, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2028, column: 5)
!8229 = !DILocation(line: 2028, column: 5, scope: !8223)
!8230 = !DILocation(line: 2028, column: 5, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2028, column: 5)
!8232 = !DILocation(line: 2029, column: 5, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2029, column: 5)
!8234 = !DILocation(line: 2029, column: 5, scope: !8223)
!8235 = !DILocation(line: 2029, column: 5, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2029, column: 5)
!8237 = !DILocation(line: 2030, column: 5, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2030, column: 5)
!8239 = !DILocation(line: 2030, column: 5, scope: !8223)
!8240 = !DILocation(line: 2030, column: 5, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2030, column: 5)
!8242 = !DILocation(line: 2031, column: 5, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2031, column: 5)
!8244 = !DILocation(line: 2031, column: 5, scope: !8223)
!8245 = !DILocation(line: 2031, column: 5, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 2031, column: 5)
!8247 = !DILocation(line: 2032, column: 5, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2032, column: 5)
!8249 = !DILocation(line: 2032, column: 5, scope: !8223)
!8250 = !DILocation(line: 2032, column: 5, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 2032, column: 5)
!8252 = !DILocation(line: 2033, column: 9, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2033, column: 9)
!8254 = !DILocation(line: 2033, column: 12, scope: !8253)
!8255 = !DILocation(line: 2033, column: 14, scope: !8253)
!8256 = !DILocation(line: 2033, column: 10, scope: !8253)
!8257 = !DILocation(line: 2033, column: 9, scope: !8223)
!8258 = !DILocation(line: 2034, column: 6, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2034, column: 6)
!8260 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 2033, column: 18)
!8261 = !DILocation(line: 2034, column: 6, scope: !8260)
!8262 = !DILocation(line: 2034, column: 6, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2034, column: 6)
!8264 = !DILocation(line: 2035, column: 6, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2035, column: 6)
!8266 = !DILocation(line: 2035, column: 6, scope: !8260)
!8267 = !DILocation(line: 2035, column: 6, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2035, column: 6)
!8269 = !DILocation(line: 2036, column: 6, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2036, column: 6)
!8271 = !DILocation(line: 2036, column: 6, scope: !8260)
!8272 = !DILocation(line: 2036, column: 6, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2036, column: 6)
!8274 = !DILocation(line: 2037, column: 5, scope: !8260)
!8275 = !DILocation(line: 2038, column: 9, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2038, column: 9)
!8277 = !DILocation(line: 2038, column: 9, scope: !8223)
!8278 = !DILocation(line: 2039, column: 9, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 2038, column: 14)
!8280 = !DILocation(line: 2040, column: 21, scope: !8279)
!8281 = !DILocation(line: 2040, column: 30, scope: !8279)
!8282 = !DILocation(line: 2040, column: 23, scope: !8279)
!8283 = !DILocation(line: 2040, column: 22, scope: !8279)
!8284 = !DILocation(line: 2040, column: 15, scope: !8279)
!8285 = !DILocation(line: 2040, column: 6, scope: !8279)
!8286 = !DILocation(line: 2040, column: 13, scope: !8279)
!8287 = !DILocation(line: 2041, column: 6, scope: !8279)
!8288 = !DILocation(line: 2041, column: 13, scope: !8279)
!8289 = !DILocation(line: 2042, column: 5, scope: !8279)
!8290 = !DILocation(line: 2043, column: 4, scope: !8223)
!8291 = !DILocation(line: 2045, column: 8, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2045, column: 8)
!8293 = !DILocation(line: 2045, column: 9, scope: !8292)
!8294 = !DILocation(line: 2045, column: 8, scope: !8219)
!8295 = !DILocation(line: 2046, column: 9, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2045, column: 14)
!8297 = !DILocation(line: 2046, column: 17, scope: !8296)
!8298 = !DILocation(line: 2046, column: 25, scope: !8296)
!8299 = !DILocation(line: 2047, column: 4, scope: !8296)
!8300 = !DILocation(line: 2048, column: 3, scope: !8219)
!8301 = !DILocation(line: 2023, column: 20, scope: !8213)
!8302 = !DILocation(line: 2023, column: 28, scope: !8213)
!8303 = !DILocation(line: 2023, column: 36, scope: !8213)
!8304 = !DILocation(line: 2023, column: 3, scope: !8213)
!8305 = distinct !{!8305, !8216, !8306}
!8306 = !DILocation(line: 2048, column: 3, scope: !8210)
!8307 = !DILocation(line: 2049, column: 2, scope: !8167)
!8308 = !DILocation(line: 2010, column: 20, scope: !8162)
!8309 = !DILocation(line: 2010, column: 2, scope: !8162)
!8310 = distinct !{!8310, !8165, !8311}
!8311 = !DILocation(line: 2049, column: 2, scope: !8159)
!8312 = !DILocation(line: 2051, column: 2, scope: !8124)
!8313 = !DILocation(line: 2051, column: 12, scope: !8124)
!8314 = !DILocation(line: 2053, column: 6, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 2053, column: 6)
!8316 = !DILocation(line: 2053, column: 6, scope: !8124)
!8317 = !DILocation(line: 2055, column: 2, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2053, column: 11)
!8319 = !DILocation(line: 2058, column: 13, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 2058, column: 3)
!8321 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2056, column: 7)
!8322 = !DILocation(line: 2058, column: 16, scope: !8320)
!8323 = !DILocation(line: 2058, column: 15, scope: !8320)
!8324 = !DILocation(line: 2058, column: 19, scope: !8320)
!8325 = !DILocation(line: 2058, column: 11, scope: !8320)
!8326 = !DILocation(line: 2058, column: 8, scope: !8320)
!8327 = !DILocation(line: 2058, column: 23, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 2058, column: 3)
!8329 = !DILocation(line: 2058, column: 26, scope: !8328)
!8330 = !DILocation(line: 2058, column: 3, scope: !8320)
!8331 = !DILocation(line: 2059, column: 8, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 2059, column: 8)
!8333 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2058, column: 38)
!8334 = !DILocation(line: 2059, column: 14, scope: !8332)
!8335 = !DILocation(line: 2059, column: 18, scope: !8332)
!8336 = !DILocation(line: 2059, column: 8, scope: !8333)
!8337 = !DILocation(line: 2060, column: 5, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 2059, column: 23)
!8339 = !DILocation(line: 2060, column: 11, scope: !8338)
!8340 = !DILocation(line: 2060, column: 16, scope: !8338)
!8341 = !DILocation(line: 2061, column: 5, scope: !8338)
!8342 = !DILocation(line: 2061, column: 11, scope: !8338)
!8343 = !DILocation(line: 2061, column: 15, scope: !8338)
!8344 = !DILocation(line: 2062, column: 4, scope: !8338)
!8345 = !DILocation(line: 2063, column: 3, scope: !8333)
!8346 = !DILocation(line: 2058, column: 34, scope: !8328)
!8347 = !DILocation(line: 2058, column: 3, scope: !8328)
!8348 = distinct !{!8348, !8330, !8349}
!8349 = !DILocation(line: 2063, column: 3, scope: !8320)
!8350 = !DILocation(line: 2065, column: 1, scope: !8124)
!8351 = distinct !DISubprogram(name: "zbuffer_shadow", scope: !3, file: !3, line: 2306, type: !8352, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{null, !2457, !2281, !8354, !81, !29, !21, !21}
!8354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8355, size: 64)
!8355 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !2461, line: 615, baseType: !8356)
!8356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !2461, line: 540, size: 5376, elements: !8357)
!8357 = !{!8358, !8360, !8361, !8362, !8363, !8364, !8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385, !8386, !8387, !8388, !8389, !8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397, !8398, !8399, !8400, !8401, !8402, !8403, !8404, !8405, !8406, !8407, !8408, !8409, !8411, !8412, !8413, !8414, !8415, !8416, !8455, !8499, !8500, !8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8520, !8522, !8523, !8524}
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8356, file: !2461, line: 541, baseType: !8359, size: 64)
!8359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8356, size: 64)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8356, file: !2461, line: 541, baseType: !8359, size: 64, offset: 64)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !8356, file: !2461, line: 543, baseType: !21, size: 32, offset: 128)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !8356, file: !2461, line: 543, baseType: !21, size: 32, offset: 160)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !8356, file: !2461, line: 543, baseType: !21, size: 32, offset: 192)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8356, file: !2461, line: 544, baseType: !2427, size: 96, offset: 224)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8356, file: !2461, line: 545, baseType: !12, size: 16, offset: 320)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8356, file: !2461, line: 546, baseType: !29, size: 32, offset: 352)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !8356, file: !2461, line: 547, baseType: !21, size: 32, offset: 384)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !8356, file: !2461, line: 547, baseType: !21, size: 32, offset: 416)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !8356, file: !2461, line: 547, baseType: !21, size: 32, offset: 448)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !8356, file: !2461, line: 547, baseType: !21, size: 32, offset: 480)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !8356, file: !2461, line: 548, baseType: !21, size: 32, offset: 512)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !8356, file: !2461, line: 548, baseType: !21, size: 32, offset: 544)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !8356, file: !2461, line: 548, baseType: !21, size: 32, offset: 576)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !8356, file: !2461, line: 549, baseType: !21, size: 32, offset: 608)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !8356, file: !2461, line: 549, baseType: !21, size: 32, offset: 640)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !8356, file: !2461, line: 550, baseType: !29, size: 32, offset: 672)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !8356, file: !2461, line: 551, baseType: !21, size: 32, offset: 704)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !8356, file: !2461, line: 551, baseType: !21, size: 32, offset: 736)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8356, file: !2461, line: 552, baseType: !2427, size: 96, offset: 768)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !8356, file: !2461, line: 553, baseType: !21, size: 32, offset: 864)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !8356, file: !2461, line: 553, baseType: !21, size: 32, offset: 896)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !8356, file: !2461, line: 553, baseType: !21, size: 32, offset: 928)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !8356, file: !2461, line: 553, baseType: !21, size: 32, offset: 960)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !8356, file: !2461, line: 554, baseType: !21, size: 32, offset: 992)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !8356, file: !2461, line: 554, baseType: !21, size: 32, offset: 1024)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !8356, file: !2461, line: 556, baseType: !12, size: 16, offset: 1056)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !8356, file: !2461, line: 557, baseType: !21, size: 32, offset: 1088)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !8356, file: !2461, line: 557, baseType: !21, size: 32, offset: 1120)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !8356, file: !2461, line: 558, baseType: !3536, size: 64, offset: 1152)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !8356, file: !2461, line: 562, baseType: !12, size: 16, offset: 1216)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !8356, file: !2461, line: 564, baseType: !12, size: 16, offset: 1232)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !8356, file: !2461, line: 566, baseType: !21, size: 32, offset: 1248)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !8356, file: !2461, line: 568, baseType: !12, size: 16, offset: 1280)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !8356, file: !2461, line: 568, baseType: !12, size: 16, offset: 1296)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !8356, file: !2461, line: 570, baseType: !12, size: 16, offset: 1312)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !8356, file: !2461, line: 572, baseType: !12, size: 16, offset: 1328)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !8356, file: !2461, line: 574, baseType: !12, size: 16, offset: 1344)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !8356, file: !2461, line: 576, baseType: !21, size: 32, offset: 1376)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !8356, file: !2461, line: 578, baseType: !21, size: 32, offset: 1408)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !8356, file: !2461, line: 580, baseType: !21, size: 32, offset: 1440)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !8356, file: !2461, line: 582, baseType: !21, size: 32, offset: 1472)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1504)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1520)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1536)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1552)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1568)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1584)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !8356, file: !2461, line: 584, baseType: !12, size: 16, offset: 1600)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !8356, file: !2461, line: 585, baseType: !8410, size: 16, offset: 1616)
!8410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 16, elements: !2721)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !8356, file: !2461, line: 585, baseType: !8410, size: 16, offset: 1632)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !8356, file: !2461, line: 586, baseType: !21, size: 32, offset: 1664)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !8356, file: !2461, line: 586, baseType: !21, size: 32, offset: 1696)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !8356, file: !2461, line: 586, baseType: !21, size: 32, offset: 1728)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !8356, file: !2461, line: 587, baseType: !21, size: 32, offset: 1760)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !8356, file: !2461, line: 590, baseType: !8417, size: 64, offset: 1792)
!8417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8418, size: 64)
!8418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !8419, line: 32, size: 1792, elements: !8420)
!8419 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8420 = !{!8421, !8422, !8423, !8424, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8434, !8435, !8436, !8437, !8438, !8439, !8440, !8441, !8442, !8443, !8444, !8445, !8446, !8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454}
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !8418, file: !8419, line: 33, baseType: !12, size: 16)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !8418, file: !8419, line: 33, baseType: !12, size: 16, offset: 16)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !8418, file: !8419, line: 33, baseType: !12, size: 16, offset: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !8418, file: !8419, line: 34, baseType: !21, size: 32, offset: 64)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !8418, file: !8419, line: 35, baseType: !21, size: 32, offset: 96)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !8418, file: !8419, line: 35, baseType: !21, size: 32, offset: 128)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !8418, file: !8419, line: 37, baseType: !2427, size: 96, offset: 160)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !8418, file: !8419, line: 40, baseType: !21, size: 32, offset: 256)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !8418, file: !8419, line: 42, baseType: !21, size: 32, offset: 288)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !8418, file: !8419, line: 42, baseType: !21, size: 32, offset: 320)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !8418, file: !8419, line: 42, baseType: !21, size: 32, offset: 352)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !8418, file: !8419, line: 44, baseType: !8433, size: 160, offset: 384)
!8433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, elements: !3291)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !8418, file: !8419, line: 44, baseType: !8433, size: 160, offset: 544)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !8418, file: !8419, line: 44, baseType: !8433, size: 160, offset: 704)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !8418, file: !8419, line: 47, baseType: !21, size: 32, offset: 864)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !8418, file: !8419, line: 48, baseType: !21, size: 32, offset: 896)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !8418, file: !8419, line: 49, baseType: !21, size: 32, offset: 928)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !8418, file: !8419, line: 50, baseType: !21, size: 32, offset: 960)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !8418, file: !8419, line: 51, baseType: !21, size: 32, offset: 992)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !8418, file: !8419, line: 52, baseType: !21, size: 32, offset: 1024)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !8418, file: !8419, line: 53, baseType: !21, size: 32, offset: 1056)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !8418, file: !8419, line: 55, baseType: !21, size: 32, offset: 1088)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !8418, file: !8419, line: 57, baseType: !21, size: 32, offset: 1120)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !8418, file: !8419, line: 58, baseType: !21, size: 32, offset: 1152)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !8418, file: !8419, line: 59, baseType: !21, size: 32, offset: 1184)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !8418, file: !8419, line: 60, baseType: !21, size: 32, offset: 1216)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !8418, file: !8419, line: 61, baseType: !21, size: 32, offset: 1248)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !8418, file: !8419, line: 62, baseType: !21, size: 32, offset: 1280)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !8418, file: !8419, line: 64, baseType: !2427, size: 96, offset: 1312)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !8418, file: !8419, line: 65, baseType: !2427, size: 96, offset: 1408)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !8418, file: !8419, line: 66, baseType: !2427, size: 96, offset: 1504)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !8418, file: !8419, line: 67, baseType: !2427, size: 96, offset: 1600)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !8418, file: !8419, line: 68, baseType: !2427, size: 96, offset: 1696)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !8356, file: !2461, line: 592, baseType: !8456, size: 64, offset: 1856)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 64)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !2461, line: 297, size: 2240, elements: !8458)
!8458 = !{!8459, !8460, !8461, !8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !8457, file: !2461, line: 299, baseType: !12, size: 16)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !8457, file: !2461, line: 299, baseType: !12, size: 16, offset: 16)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !8457, file: !2461, line: 299, baseType: !12, size: 16, offset: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !8457, file: !2461, line: 300, baseType: !2892, size: 512, offset: 64)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !8457, file: !2461, line: 301, baseType: !2892, size: 512, offset: 576)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !8457, file: !2461, line: 302, baseType: !2892, size: 512, offset: 1088)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !8457, file: !2461, line: 303, baseType: !31, size: 64, offset: 1600)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !8457, file: !2461, line: 303, baseType: !31, size: 64, offset: 1664)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !8457, file: !2461, line: 304, baseType: !21, size: 32, offset: 1728)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !8457, file: !2461, line: 304, baseType: !21, size: 32, offset: 1760)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !8457, file: !2461, line: 304, baseType: !21, size: 32, offset: 1792)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !8457, file: !2461, line: 304, baseType: !21, size: 32, offset: 1824)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !8457, file: !2461, line: 304, baseType: !21, size: 32, offset: 1856)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8457, file: !2461, line: 305, baseType: !3264, size: 96, offset: 1888)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8457, file: !2461, line: 306, baseType: !29, size: 32, offset: 1984)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !8457, file: !2461, line: 306, baseType: !29, size: 32, offset: 2016)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !8457, file: !2461, line: 307, baseType: !370, size: 128, offset: 2048)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !8457, file: !2461, line: 310, baseType: !8477, size: 64, offset: 2176)
!8477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8478, size: 64, elements: !2721)
!8478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8479, size: 64)
!8479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !8480, line: 106, size: 320, elements: !8481)
!8480 = !DIFile(filename: "blender/source/blender/render/intern/include/shadbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8481 = !{!8482, !8483, !8494, !8495, !8496, !8497, !8498}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "shadfacs", scope: !8479, file: !8480, line: 107, baseType: !82, size: 64)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "shadfaca", scope: !8479, file: !8480, line: 108, baseType: !8484, size: 64, offset: 64)
!8484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8485, size: 64)
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8486, size: 64)
!8486 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBShadfacA", file: !8480, line: 103, baseType: !8487)
!8487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBShadfacA", file: !8480, line: 98, size: 192, elements: !8488)
!8488 = !{!8489, !8491, !8492, !8493}
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8487, file: !8480, line: 99, baseType: !8490, size: 64)
!8490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8487, size: 64)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !8487, file: !8480, line: 100, baseType: !29, size: 32, offset: 64)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !8487, file: !8480, line: 101, baseType: !29, size: 32, offset: 96)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !8487, file: !8480, line: 102, baseType: !21, size: 32, offset: 128)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "memarena", scope: !8479, file: !8480, line: 109, baseType: !4627, size: 64, offset: 128)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !8479, file: !8480, line: 110, baseType: !29, size: 32, offset: 192)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !8479, file: !8480, line: 110, baseType: !29, size: 32, offset: 224)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !8479, file: !8480, line: 110, baseType: !29, size: 32, offset: 256)
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !8479, file: !8480, line: 110, baseType: !29, size: 32, offset: 288)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !8356, file: !2461, line: 593, baseType: !31, size: 64, offset: 1920)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !8356, file: !2461, line: 595, baseType: !4008, size: 288, offset: 1984)
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !8356, file: !2461, line: 596, baseType: !21, size: 32, offset: 2272)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !8356, file: !2461, line: 597, baseType: !2427, size: 96, offset: 2304)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !8356, file: !2461, line: 597, baseType: !21, size: 32, offset: 2400)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !8356, file: !2461, line: 599, baseType: !2892, size: 512, offset: 2432)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !8356, file: !2461, line: 601, baseType: !4008, size: 288, offset: 2944)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !8356, file: !2461, line: 602, baseType: !2783, size: 768, offset: 3232)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !8356, file: !2461, line: 602, baseType: !21, size: 32, offset: 4000)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !8356, file: !2461, line: 605, baseType: !8509, size: 64, offset: 4032)
!8509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8510, size: 64)
!8510 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !2461, line: 538, baseType: !8511)
!8511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !2461, line: 536, size: 2560, elements: !8512)
!8512 = !{!8513}
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !8511, file: !2461, line: 537, baseType: !8514, size: 2560)
!8514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8515, size: 2560, elements: !4238)
!8515 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !2461, line: 534, baseType: !8516)
!8516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !2461, line: 531, size: 160, elements: !8517)
!8517 = !{!8518, !8519}
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !8516, file: !2461, line: 532, baseType: !29, size: 32)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !8516, file: !2461, line: 533, baseType: !176, size: 128, offset: 32)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !8356, file: !2461, line: 608, baseType: !8521, size: 64, offset: 4096)
!8521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4329, size: 64, elements: !2721)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !8356, file: !2461, line: 610, baseType: !2746, size: 1152, offset: 4160)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !8356, file: !2461, line: 613, baseType: !29, size: 32, offset: 5312)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !8356, file: !2461, line: 614, baseType: !29, size: 32, offset: 5344)
!8525 = !DILocalVariable(name: "re", arg: 1, scope: !8351, file: !3, line: 2306, type: !2457)
!8526 = !DILocation(line: 2306, column: 29, scope: !8351)
!8527 = !DILocalVariable(name: "winmat", arg: 2, scope: !8351, file: !3, line: 2306, type: !2281)
!8528 = !DILocation(line: 2306, column: 39, scope: !8351)
!8529 = !DILocalVariable(name: "lar", arg: 3, scope: !8351, file: !3, line: 2306, type: !8354)
!8530 = !DILocation(line: 2306, column: 62, scope: !8351)
!8531 = !DILocalVariable(name: "rectz", arg: 4, scope: !8351, file: !3, line: 2306, type: !81)
!8532 = !DILocation(line: 2306, column: 72, scope: !8351)
!8533 = !DILocalVariable(name: "size", arg: 5, scope: !8351, file: !3, line: 2306, type: !29)
!8534 = !DILocation(line: 2306, column: 83, scope: !8351)
!8535 = !DILocalVariable(name: "jitx", arg: 6, scope: !8351, file: !3, line: 2306, type: !21)
!8536 = !DILocation(line: 2306, column: 95, scope: !8351)
!8537 = !DILocalVariable(name: "jity", arg: 7, scope: !8351, file: !3, line: 2306, type: !21)
!8538 = !DILocation(line: 2306, column: 107, scope: !8351)
!8539 = !DILocalVariable(name: "cache", scope: !8351, file: !3, line: 2308, type: !5631)
!8540 = !DILocation(line: 2308, column: 19, scope: !8351)
!8541 = !DILocalVariable(name: "zspan", scope: !8351, file: !3, line: 2309, type: !121)
!8542 = !DILocation(line: 2309, column: 8, scope: !8351)
!8543 = !DILocalVariable(name: "obi", scope: !8351, file: !3, line: 2310, type: !5663)
!8544 = !DILocation(line: 2310, column: 21, scope: !8351)
!8545 = !DILocalVariable(name: "obr", scope: !8351, file: !3, line: 2311, type: !4395)
!8546 = !DILocation(line: 2311, column: 13, scope: !8351)
!8547 = !DILocalVariable(name: "vlr", scope: !8351, file: !3, line: 2312, type: !5645)
!8548 = !DILocation(line: 2312, column: 11, scope: !8351)
!8549 = !DILocalVariable(name: "ma", scope: !8351, file: !3, line: 2313, type: !5659)
!8550 = !DILocation(line: 2313, column: 12, scope: !8351)
!8551 = !DILocalVariable(name: "sseg", scope: !8351, file: !3, line: 2314, type: !8552)
!8552 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandSegment", file: !8553, line: 84, baseType: !8554)
!8553 = !DIFile(filename: "blender/source/blender/render/intern/include/strand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSegment", file: !8553, line: 75, size: 3584, elements: !8555)
!8555 = !{!8556, !8558, !8559, !8560, !8561, !8562, !8587, !8588}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !8554, file: !8553, line: 76, baseType: !8557, size: 256)
!8557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4520, size: 256, elements: !154)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !8554, file: !8553, line: 77, baseType: !4501, size: 64, offset: 256)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8554, file: !8553, line: 78, baseType: !4517, size: 64, offset: 320)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !8554, file: !8553, line: 79, baseType: !4389, size: 64, offset: 384)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "sqadaptcos", scope: !8554, file: !8553, line: 80, baseType: !21, size: 32, offset: 448)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "point1", scope: !8554, file: !8553, line: 82, baseType: !8563, size: 1536, offset: 480)
!8563 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandPoint", file: !8553, line: 73, baseType: !8564)
!8564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandPoint", file: !8553, line: 46, size: 1536, elements: !8565)
!8565 = !{!8566, !8567, !8568, !8569, !8570, !8571, !8572, !8573, !8574, !8575, !8576, !8577, !8578, !8579, !8580, !8581, !8582, !8583, !8584, !8585, !8586}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !8564, file: !8553, line: 48, baseType: !21, size: 32)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !8564, file: !8553, line: 51, baseType: !2427, size: 96, offset: 32)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !8564, file: !8553, line: 52, baseType: !2427, size: 96, offset: 128)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "tan", scope: !8564, file: !8553, line: 53, baseType: !2427, size: 96, offset: 224)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !8564, file: !8553, line: 54, baseType: !21, size: 32, offset: 320)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !8564, file: !8553, line: 55, baseType: !21, size: 32, offset: 352)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "dtco", scope: !8564, file: !8553, line: 58, baseType: !2427, size: 96, offset: 384)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "dsco", scope: !8564, file: !8553, line: 58, baseType: !2427, size: 96, offset: 480)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "dtstrandco", scope: !8564, file: !8553, line: 59, baseType: !21, size: 32, offset: 576)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "co1", scope: !8564, file: !8553, line: 62, baseType: !2427, size: 96, offset: 608)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "co2", scope: !8564, file: !8553, line: 62, baseType: !2427, size: 96, offset: 704)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "hoco1", scope: !8564, file: !8553, line: 63, baseType: !176, size: 128, offset: 800)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "hoco2", scope: !8564, file: !8553, line: 63, baseType: !176, size: 128, offset: 928)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "zco1", scope: !8564, file: !8553, line: 64, baseType: !2427, size: 96, offset: 1056)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "zco2", scope: !8564, file: !8553, line: 64, baseType: !2427, size: 96, offset: 1152)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "clip1", scope: !8564, file: !8553, line: 65, baseType: !29, size: 32, offset: 1248)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "clip2", scope: !8564, file: !8553, line: 65, baseType: !29, size: 32, offset: 1280)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "hoco", scope: !8564, file: !8553, line: 68, baseType: !176, size: 128, offset: 1312)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !8564, file: !8553, line: 69, baseType: !21, size: 32, offset: 1440)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !8564, file: !8553, line: 69, baseType: !21, size: 32, offset: 1472)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !8564, file: !8553, line: 72, baseType: !21, size: 32, offset: 1504)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "point2", scope: !8554, file: !8553, line: 82, baseType: !8563, size: 1536, offset: 2016)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "shaded", scope: !8554, file: !8553, line: 83, baseType: !29, size: 32, offset: 3552)
!8589 = !DILocation(line: 2314, column: 16, scope: !8351)
!8590 = !DILocalVariable(name: "strand", scope: !8351, file: !3, line: 2315, type: !8591)
!8591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8592, size: 64)
!8592 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandRen", file: !2461, line: 481, baseType: !4502)
!8593 = !DILocation(line: 2315, column: 13, scope: !8351)
!8594 = !DILocalVariable(name: "svert", scope: !8351, file: !3, line: 2316, type: !4505)
!8595 = !DILocation(line: 2316, column: 14, scope: !8351)
!8596 = !DILocalVariable(name: "sbound", scope: !8351, file: !3, line: 2317, type: !8597)
!8597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8598, size: 64)
!8598 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBound", file: !2461, line: 453, baseType: !4523)
!8599 = !DILocation(line: 2317, column: 15, scope: !8351)
!8600 = !DILocalVariable(name: "obwinmat", scope: !8351, file: !3, line: 2318, type: !2892)
!8601 = !DILocation(line: 2318, column: 8, scope: !8351)
!8602 = !DILocalVariable(name: "ho1", scope: !8351, file: !3, line: 2318, type: !176)
!8603 = !DILocation(line: 2318, column: 24, scope: !8351)
!8604 = !DILocalVariable(name: "ho2", scope: !8351, file: !3, line: 2318, type: !176)
!8605 = !DILocation(line: 2318, column: 32, scope: !8351)
!8606 = !DILocalVariable(name: "ho3", scope: !8351, file: !3, line: 2318, type: !176)
!8607 = !DILocation(line: 2318, column: 40, scope: !8351)
!8608 = !DILocalVariable(name: "ho4", scope: !8351, file: !3, line: 2318, type: !176)
!8609 = !DILocation(line: 2318, column: 48, scope: !8351)
!8610 = !DILocalVariable(name: "a", scope: !8351, file: !3, line: 2319, type: !29)
!8611 = !DILocation(line: 2319, column: 6, scope: !8351)
!8612 = !DILocalVariable(name: "b", scope: !8351, file: !3, line: 2319, type: !29)
!8613 = !DILocation(line: 2319, column: 9, scope: !8351)
!8614 = !DILocalVariable(name: "c", scope: !8351, file: !3, line: 2319, type: !29)
!8615 = !DILocation(line: 2319, column: 12, scope: !8351)
!8616 = !DILocalVariable(name: "i", scope: !8351, file: !3, line: 2319, type: !29)
!8617 = !DILocation(line: 2319, column: 15, scope: !8351)
!8618 = !DILocalVariable(name: "c1", scope: !8351, file: !3, line: 2319, type: !29)
!8619 = !DILocation(line: 2319, column: 18, scope: !8351)
!8620 = !DILocalVariable(name: "c2", scope: !8351, file: !3, line: 2319, type: !29)
!8621 = !DILocation(line: 2319, column: 22, scope: !8351)
!8622 = !DILocalVariable(name: "c3", scope: !8351, file: !3, line: 2319, type: !29)
!8623 = !DILocation(line: 2319, column: 26, scope: !8351)
!8624 = !DILocalVariable(name: "c4", scope: !8351, file: !3, line: 2319, type: !29)
!8625 = !DILocation(line: 2319, column: 30, scope: !8351)
!8626 = !DILocalVariable(name: "ok", scope: !8351, file: !3, line: 2319, type: !29)
!8627 = !DILocation(line: 2319, column: 34, scope: !8351)
!8628 = !DILocalVariable(name: "lay", scope: !8351, file: !3, line: 2319, type: !29)
!8629 = !DILocation(line: 2319, column: 40, scope: !8351)
!8630 = !DILocation(line: 2321, column: 6, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2321, column: 6)
!8632 = !DILocation(line: 2321, column: 11, scope: !8631)
!8633 = !DILocation(line: 2321, column: 16, scope: !8631)
!8634 = !DILocation(line: 2321, column: 6, scope: !8351)
!8635 = !DILocation(line: 2321, column: 51, scope: !8631)
!8636 = !DILocation(line: 2321, column: 56, scope: !8631)
!8637 = !DILocation(line: 2321, column: 49, scope: !8631)
!8638 = !DILocation(line: 2321, column: 46, scope: !8631)
!8639 = !DILocation(line: 2324, column: 26, scope: !8351)
!8640 = !DILocation(line: 2324, column: 32, scope: !8351)
!8641 = !DILocation(line: 2324, column: 2, scope: !8351)
!8642 = !DILocation(line: 2325, column: 24, scope: !8351)
!8643 = !DILocation(line: 2325, column: 17, scope: !8351)
!8644 = !DILocation(line: 2325, column: 29, scope: !8351)
!8645 = !DILocation(line: 2325, column: 8, scope: !8351)
!8646 = !DILocation(line: 2325, column: 13, scope: !8351)
!8647 = !DILocation(line: 2326, column: 24, scope: !8351)
!8648 = !DILocation(line: 2326, column: 17, scope: !8351)
!8649 = !DILocation(line: 2326, column: 29, scope: !8351)
!8650 = !DILocation(line: 2326, column: 8, scope: !8351)
!8651 = !DILocation(line: 2326, column: 13, scope: !8351)
!8652 = !DILocation(line: 2328, column: 15, scope: !8351)
!8653 = !DILocation(line: 2328, column: 20, scope: !8351)
!8654 = !DILocation(line: 2328, column: 8, scope: !8351)
!8655 = !DILocation(line: 2328, column: 13, scope: !8351)
!8656 = !DILocation(line: 2329, column: 15, scope: !8351)
!8657 = !DILocation(line: 2329, column: 20, scope: !8351)
!8658 = !DILocation(line: 2329, column: 8, scope: !8351)
!8659 = !DILocation(line: 2329, column: 13, scope: !8351)
!8660 = !DILocation(line: 2332, column: 15, scope: !8351)
!8661 = !DILocation(line: 2332, column: 8, scope: !8351)
!8662 = !DILocation(line: 2332, column: 13, scope: !8351)
!8663 = !DILocation(line: 2333, column: 11, scope: !8351)
!8664 = !DILocation(line: 2333, column: 18, scope: !8351)
!8665 = !DILocation(line: 2333, column: 24, scope: !8351)
!8666 = !DILocation(line: 2333, column: 2, scope: !8351)
!8667 = !DILocation(line: 2334, column: 6, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2334, column: 6)
!8669 = !DILocation(line: 2334, column: 11, scope: !8668)
!8670 = !DILocation(line: 2334, column: 18, scope: !8668)
!8671 = !DILocation(line: 2334, column: 6, scope: !8351)
!8672 = !DILocation(line: 2335, column: 17, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 2334, column: 40)
!8674 = !DILocation(line: 2335, column: 29, scope: !8673)
!8675 = !DILocation(line: 2335, column: 34, scope: !8673)
!8676 = !DILocation(line: 2335, column: 33, scope: !8673)
!8677 = !DILocation(line: 2335, column: 38, scope: !8673)
!8678 = !DILocation(line: 2335, column: 9, scope: !8673)
!8679 = !DILocation(line: 2335, column: 15, scope: !8673)
!8680 = !DILocation(line: 2336, column: 18, scope: !8673)
!8681 = !DILocation(line: 2336, column: 26, scope: !8673)
!8682 = !DILocation(line: 2336, column: 32, scope: !8673)
!8683 = !DILocation(line: 2336, column: 3, scope: !8673)
!8684 = !DILocation(line: 2337, column: 2, scope: !8673)
!8685 = !DILocation(line: 2340, column: 8, scope: !8351)
!8686 = !DILocation(line: 2340, column: 20, scope: !8351)
!8687 = !DILocation(line: 2341, column: 8, scope: !8351)
!8688 = !DILocation(line: 2341, column: 16, scope: !8351)
!8689 = !DILocation(line: 2343, column: 8, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2343, column: 2)
!8691 = !DILocation(line: 2343, column: 16, scope: !8690)
!8692 = !DILocation(line: 2343, column: 20, scope: !8690)
!8693 = !DILocation(line: 2343, column: 34, scope: !8690)
!8694 = !DILocation(line: 2343, column: 15, scope: !8690)
!8695 = !DILocation(line: 2343, column: 7, scope: !8690)
!8696 = !DILocation(line: 2343, column: 41, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2343, column: 2)
!8698 = !DILocation(line: 2343, column: 2, scope: !8690)
!8699 = !DILocation(line: 2344, column: 8, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 2343, column: 66)
!8701 = !DILocation(line: 2344, column: 13, scope: !8700)
!8702 = !DILocation(line: 2344, column: 6, scope: !8700)
!8703 = !DILocation(line: 2346, column: 7, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2346, column: 7)
!8705 = !DILocation(line: 2346, column: 12, scope: !8704)
!8706 = !DILocation(line: 2346, column: 16, scope: !8704)
!8707 = !DILocation(line: 2346, column: 20, scope: !8704)
!8708 = !DILocation(line: 2346, column: 14, scope: !8704)
!8709 = !DILocation(line: 2346, column: 7, scope: !8700)
!8710 = !DILocation(line: 2347, column: 4, scope: !8704)
!8711 = !DILocation(line: 2348, column: 14, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 2348, column: 12)
!8713 = !DILocation(line: 2348, column: 19, scope: !8712)
!8714 = !DILocation(line: 2348, column: 25, scope: !8712)
!8715 = !DILocation(line: 2348, column: 23, scope: !8712)
!8716 = !DILocation(line: 2348, column: 12, scope: !8704)
!8717 = !DILocation(line: 2349, column: 4, scope: !8712)
!8718 = !DILocation(line: 2351, column: 7, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2351, column: 7)
!8720 = !DILocation(line: 2351, column: 12, scope: !8719)
!8721 = !DILocation(line: 2351, column: 17, scope: !8719)
!8722 = !DILocation(line: 2351, column: 7, scope: !8700)
!8723 = !DILocation(line: 2352, column: 16, scope: !8719)
!8724 = !DILocation(line: 2352, column: 26, scope: !8719)
!8725 = !DILocation(line: 2352, column: 34, scope: !8719)
!8726 = !DILocation(line: 2352, column: 39, scope: !8719)
!8727 = !DILocation(line: 2352, column: 4, scope: !8719)
!8728 = !DILocation(line: 2354, column: 15, scope: !8719)
!8729 = !DILocation(line: 2354, column: 25, scope: !8719)
!8730 = !DILocation(line: 2354, column: 4, scope: !8719)
!8731 = !DILocation(line: 2356, column: 26, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2356, column: 7)
!8733 = !DILocation(line: 2356, column: 31, scope: !8732)
!8734 = !DILocation(line: 2356, column: 36, scope: !8732)
!8735 = !DILocation(line: 2356, column: 52, scope: !8732)
!8736 = !DILocation(line: 2356, column: 7, scope: !8732)
!8737 = !DILocation(line: 2356, column: 7, scope: !8700)
!8738 = !DILocation(line: 2357, column: 4, scope: !8732)
!8739 = !DILocation(line: 2359, column: 28, scope: !8700)
!8740 = !DILocation(line: 2359, column: 35, scope: !8700)
!8741 = !DILocation(line: 2359, column: 40, scope: !8700)
!8742 = !DILocation(line: 2359, column: 3, scope: !8700)
!8743 = !DILocation(line: 2362, column: 9, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2362, column: 3)
!8745 = !DILocation(line: 2362, column: 8, scope: !8744)
!8746 = !DILocation(line: 2362, column: 13, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 2362, column: 3)
!8748 = !DILocation(line: 2362, column: 15, scope: !8747)
!8749 = !DILocation(line: 2362, column: 20, scope: !8747)
!8750 = !DILocation(line: 2362, column: 14, scope: !8747)
!8751 = !DILocation(line: 2362, column: 3, scope: !8744)
!8752 = !DILocation(line: 2364, column: 9, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2364, column: 8)
!8754 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 2362, column: 34)
!8755 = !DILocation(line: 2364, column: 11, scope: !8753)
!8756 = !DILocation(line: 2364, column: 17, scope: !8753)
!8757 = !DILocation(line: 2364, column: 8, scope: !8754)
!8758 = !DILocation(line: 2364, column: 27, scope: !8753)
!8759 = !DILocation(line: 2364, column: 32, scope: !8753)
!8760 = !DILocation(line: 2364, column: 42, scope: !8753)
!8761 = !DILocation(line: 2364, column: 43, scope: !8753)
!8762 = !DILocation(line: 2364, column: 48, scope: !8753)
!8763 = !DILocation(line: 2364, column: 25, scope: !8753)
!8764 = !DILocation(line: 2364, column: 22, scope: !8753)
!8765 = !DILocation(line: 2365, column: 12, scope: !8753)
!8766 = !DILocation(line: 2368, column: 8, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2368, column: 8)
!8768 = !DILocation(line: 2368, column: 13, scope: !8767)
!8769 = !DILocation(line: 2368, column: 19, scope: !8767)
!8770 = !DILocation(line: 2368, column: 16, scope: !8767)
!8771 = !DILocation(line: 2368, column: 8, scope: !8754)
!8772 = !DILocation(line: 2369, column: 9, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 2368, column: 23)
!8774 = !DILocation(line: 2369, column: 14, scope: !8773)
!8775 = !DILocation(line: 2369, column: 7, scope: !8773)
!8776 = !DILocation(line: 2370, column: 7, scope: !8773)
!8777 = !DILocation(line: 2371, column: 10, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 2371, column: 9)
!8779 = !DILocation(line: 2371, column: 14, scope: !8778)
!8780 = !DILocation(line: 2371, column: 20, scope: !8778)
!8781 = !DILocation(line: 2371, column: 36, scope: !8778)
!8782 = !DILocation(line: 2371, column: 40, scope: !8778)
!8783 = !DILocation(line: 2371, column: 44, scope: !8778)
!8784 = !DILocation(line: 2371, column: 48, scope: !8778)
!8785 = !DILocation(line: 2371, column: 53, scope: !8778)
!8786 = !DILocation(line: 2371, column: 66, scope: !8778)
!8787 = !DILocation(line: 2371, column: 9, scope: !8773)
!8788 = !DILocation(line: 2371, column: 73, scope: !8778)
!8789 = !DILocation(line: 2371, column: 71, scope: !8778)
!8790 = !DILocation(line: 2372, column: 4, scope: !8773)
!8791 = !DILocation(line: 2374, column: 8, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2374, column: 8)
!8793 = !DILocation(line: 2374, column: 11, scope: !8792)
!8794 = !DILocation(line: 2374, column: 15, scope: !8792)
!8795 = !DILocation(line: 2374, column: 20, scope: !8792)
!8796 = !DILocation(line: 2374, column: 26, scope: !8792)
!8797 = !DILocation(line: 2374, column: 24, scope: !8792)
!8798 = !DILocation(line: 2374, column: 31, scope: !8792)
!8799 = !DILocation(line: 2374, column: 36, scope: !8792)
!8800 = !DILocation(line: 2374, column: 41, scope: !8792)
!8801 = !DILocation(line: 2374, column: 46, scope: !8792)
!8802 = !DILocation(line: 2374, column: 8, scope: !8754)
!8803 = !DILocation(line: 2375, column: 29, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2374, column: 59)
!8805 = !DILocation(line: 2375, column: 36, scope: !8804)
!8806 = !DILocation(line: 2375, column: 41, scope: !8804)
!8807 = !DILocation(line: 2375, column: 45, scope: !8804)
!8808 = !DILocation(line: 2375, column: 52, scope: !8804)
!8809 = !DILocation(line: 2375, column: 62, scope: !8804)
!8810 = !DILocation(line: 2375, column: 67, scope: !8804)
!8811 = !DILocation(line: 2375, column: 71, scope: !8804)
!8812 = !DILocation(line: 2375, column: 75, scope: !8804)
!8813 = !DILocation(line: 2375, column: 9, scope: !8804)
!8814 = !DILocation(line: 2375, column: 7, scope: !8804)
!8815 = !DILocation(line: 2376, column: 29, scope: !8804)
!8816 = !DILocation(line: 2376, column: 36, scope: !8804)
!8817 = !DILocation(line: 2376, column: 41, scope: !8804)
!8818 = !DILocation(line: 2376, column: 45, scope: !8804)
!8819 = !DILocation(line: 2376, column: 52, scope: !8804)
!8820 = !DILocation(line: 2376, column: 62, scope: !8804)
!8821 = !DILocation(line: 2376, column: 67, scope: !8804)
!8822 = !DILocation(line: 2376, column: 71, scope: !8804)
!8823 = !DILocation(line: 2376, column: 75, scope: !8804)
!8824 = !DILocation(line: 2376, column: 9, scope: !8804)
!8825 = !DILocation(line: 2376, column: 7, scope: !8804)
!8826 = !DILocation(line: 2377, column: 29, scope: !8804)
!8827 = !DILocation(line: 2377, column: 36, scope: !8804)
!8828 = !DILocation(line: 2377, column: 41, scope: !8804)
!8829 = !DILocation(line: 2377, column: 45, scope: !8804)
!8830 = !DILocation(line: 2377, column: 52, scope: !8804)
!8831 = !DILocation(line: 2377, column: 62, scope: !8804)
!8832 = !DILocation(line: 2377, column: 67, scope: !8804)
!8833 = !DILocation(line: 2377, column: 71, scope: !8804)
!8834 = !DILocation(line: 2377, column: 75, scope: !8804)
!8835 = !DILocation(line: 2377, column: 9, scope: !8804)
!8836 = !DILocation(line: 2377, column: 7, scope: !8804)
!8837 = !DILocation(line: 2379, column: 10, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 2379, column: 9)
!8839 = !DILocation(line: 2379, column: 14, scope: !8838)
!8840 = !DILocation(line: 2379, column: 28, scope: !8838)
!8841 = !DILocation(line: 2379, column: 45, scope: !8838)
!8842 = !DILocation(line: 2379, column: 49, scope: !8838)
!8843 = !DILocation(line: 2379, column: 54, scope: !8838)
!8844 = !DILocation(line: 2379, column: 59, scope: !8838)
!8845 = !DILocation(line: 2379, column: 9, scope: !8804)
!8846 = !DILocation(line: 2380, column: 10, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 2380, column: 10)
!8848 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2379, column: 72)
!8849 = !DILocation(line: 2380, column: 15, scope: !8847)
!8850 = !DILocation(line: 2380, column: 10, scope: !8848)
!8851 = !DILocation(line: 2381, column: 31, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 2380, column: 19)
!8853 = !DILocation(line: 2381, column: 38, scope: !8852)
!8854 = !DILocation(line: 2381, column: 43, scope: !8852)
!8855 = !DILocation(line: 2381, column: 47, scope: !8852)
!8856 = !DILocation(line: 2381, column: 54, scope: !8852)
!8857 = !DILocation(line: 2381, column: 64, scope: !8852)
!8858 = !DILocation(line: 2381, column: 69, scope: !8852)
!8859 = !DILocation(line: 2381, column: 73, scope: !8852)
!8860 = !DILocation(line: 2381, column: 77, scope: !8852)
!8861 = !DILocation(line: 2381, column: 11, scope: !8852)
!8862 = !DILocation(line: 2381, column: 9, scope: !8852)
!8863 = !DILocation(line: 2382, column: 31, scope: !8852)
!8864 = !DILocation(line: 2382, column: 32, scope: !8852)
!8865 = !DILocation(line: 2382, column: 36, scope: !8852)
!8866 = !DILocation(line: 2382, column: 41, scope: !8852)
!8867 = !DILocation(line: 2382, column: 45, scope: !8852)
!8868 = !DILocation(line: 2382, column: 50, scope: !8852)
!8869 = !DILocation(line: 2382, column: 55, scope: !8852)
!8870 = !DILocation(line: 2382, column: 60, scope: !8852)
!8871 = !DILocation(line: 2382, column: 65, scope: !8852)
!8872 = !DILocation(line: 2382, column: 69, scope: !8852)
!8873 = !DILocation(line: 2382, column: 73, scope: !8852)
!8874 = !DILocation(line: 2382, column: 77, scope: !8852)
!8875 = !DILocation(line: 2382, column: 7, scope: !8852)
!8876 = !DILocation(line: 2383, column: 6, scope: !8852)
!8877 = !DILocation(line: 2385, column: 31, scope: !8847)
!8878 = !DILocation(line: 2385, column: 32, scope: !8847)
!8879 = !DILocation(line: 2385, column: 36, scope: !8847)
!8880 = !DILocation(line: 2385, column: 41, scope: !8847)
!8881 = !DILocation(line: 2385, column: 45, scope: !8847)
!8882 = !DILocation(line: 2385, column: 50, scope: !8847)
!8883 = !DILocation(line: 2385, column: 55, scope: !8847)
!8884 = !DILocation(line: 2385, column: 66, scope: !8847)
!8885 = !DILocation(line: 2385, column: 70, scope: !8847)
!8886 = !DILocation(line: 2385, column: 74, scope: !8847)
!8887 = !DILocation(line: 2385, column: 7, scope: !8847)
!8888 = !DILocation(line: 2386, column: 5, scope: !8848)
!8889 = !DILocation(line: 2388, column: 10, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 2388, column: 10)
!8891 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2387, column: 10)
!8892 = !DILocation(line: 2388, column: 15, scope: !8890)
!8893 = !DILocation(line: 2388, column: 10, scope: !8891)
!8894 = !DILocation(line: 2389, column: 31, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2388, column: 19)
!8896 = !DILocation(line: 2389, column: 38, scope: !8895)
!8897 = !DILocation(line: 2389, column: 43, scope: !8895)
!8898 = !DILocation(line: 2389, column: 47, scope: !8895)
!8899 = !DILocation(line: 2389, column: 54, scope: !8895)
!8900 = !DILocation(line: 2389, column: 64, scope: !8895)
!8901 = !DILocation(line: 2389, column: 69, scope: !8895)
!8902 = !DILocation(line: 2389, column: 73, scope: !8895)
!8903 = !DILocation(line: 2389, column: 77, scope: !8895)
!8904 = !DILocation(line: 2389, column: 11, scope: !8895)
!8905 = !DILocation(line: 2389, column: 9, scope: !8895)
!8906 = !DILocation(line: 2390, column: 31, scope: !8895)
!8907 = !DILocation(line: 2390, column: 36, scope: !8895)
!8908 = !DILocation(line: 2390, column: 41, scope: !8895)
!8909 = !DILocation(line: 2390, column: 46, scope: !8895)
!8910 = !DILocation(line: 2390, column: 51, scope: !8895)
!8911 = !DILocation(line: 2390, column: 55, scope: !8895)
!8912 = !DILocation(line: 2390, column: 59, scope: !8895)
!8913 = !DILocation(line: 2390, column: 63, scope: !8895)
!8914 = !DILocation(line: 2390, column: 7, scope: !8895)
!8915 = !DILocation(line: 2391, column: 6, scope: !8895)
!8916 = !DILocation(line: 2393, column: 30, scope: !8890)
!8917 = !DILocation(line: 2393, column: 35, scope: !8890)
!8918 = !DILocation(line: 2393, column: 40, scope: !8890)
!8919 = !DILocation(line: 2393, column: 45, scope: !8890)
!8920 = !DILocation(line: 2393, column: 49, scope: !8890)
!8921 = !DILocation(line: 2393, column: 53, scope: !8890)
!8922 = !DILocation(line: 2393, column: 7, scope: !8890)
!8923 = !DILocation(line: 2395, column: 4, scope: !8804)
!8924 = !DILocation(line: 2397, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2397, column: 8)
!8926 = !DILocation(line: 2397, column: 11, scope: !8925)
!8927 = !DILocation(line: 2397, column: 17, scope: !8925)
!8928 = !DILocation(line: 2397, column: 23, scope: !8925)
!8929 = !DILocation(line: 2397, column: 26, scope: !8925)
!8930 = !DILocation(line: 2397, column: 30, scope: !8925)
!8931 = !DILocation(line: 2397, column: 41, scope: !8925)
!8932 = !DILocation(line: 2397, column: 45, scope: !8925)
!8933 = !DILocation(line: 2397, column: 8, scope: !8754)
!8934 = !DILocation(line: 2398, column: 5, scope: !8925)
!8935 = !DILocation(line: 2399, column: 3, scope: !8754)
!8936 = !DILocation(line: 2362, column: 30, scope: !8747)
!8937 = !DILocation(line: 2362, column: 3, scope: !8747)
!8938 = distinct !{!8938, !8751, !8939}
!8939 = !DILocation(line: 2399, column: 3, scope: !8744)
!8940 = !DILocation(line: 2402, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2402, column: 7)
!8942 = !DILocation(line: 2402, column: 12, scope: !8941)
!8943 = !DILocation(line: 2402, column: 7, scope: !8700)
!8944 = !DILocation(line: 2404, column: 12, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 2402, column: 23)
!8946 = !DILocation(line: 2404, column: 17, scope: !8945)
!8947 = !DILocation(line: 2404, column: 28, scope: !8945)
!8948 = !DILocation(line: 2404, column: 10, scope: !8945)
!8949 = !DILocation(line: 2405, column: 10, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 2405, column: 4)
!8951 = !DILocation(line: 2405, column: 9, scope: !8950)
!8952 = !DILocation(line: 2405, column: 14, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8950, file: !3, line: 2405, column: 4)
!8954 = !DILocation(line: 2405, column: 16, scope: !8953)
!8955 = !DILocation(line: 2405, column: 21, scope: !8953)
!8956 = !DILocation(line: 2405, column: 32, scope: !8953)
!8957 = !DILocation(line: 2405, column: 15, scope: !8953)
!8958 = !DILocation(line: 2405, column: 4, scope: !8950)
!8959 = !DILocation(line: 2406, column: 28, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2406, column: 9)
!8961 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 2405, column: 57)
!8962 = !DILocation(line: 2406, column: 36, scope: !8960)
!8963 = !DILocation(line: 2406, column: 52, scope: !8960)
!8964 = !DILocation(line: 2406, column: 9, scope: !8960)
!8965 = !DILocation(line: 2406, column: 9, scope: !8961)
!8966 = !DILocation(line: 2407, column: 6, scope: !8960)
!8967 = !DILocation(line: 2410, column: 12, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2410, column: 5)
!8969 = !DILocation(line: 2410, column: 20, scope: !8968)
!8970 = !DILocation(line: 2410, column: 11, scope: !8968)
!8971 = !DILocation(line: 2410, column: 10, scope: !8968)
!8972 = !DILocation(line: 2410, column: 27, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 2410, column: 5)
!8974 = !DILocation(line: 2410, column: 29, scope: !8973)
!8975 = !DILocation(line: 2410, column: 37, scope: !8973)
!8976 = !DILocation(line: 2410, column: 28, scope: !8973)
!8977 = !DILocation(line: 2410, column: 5, scope: !8968)
!8978 = !DILocation(line: 2411, column: 33, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 2410, column: 47)
!8980 = !DILocation(line: 2411, column: 38, scope: !8979)
!8981 = !DILocation(line: 2411, column: 14, scope: !8979)
!8982 = !DILocation(line: 2411, column: 12, scope: !8979)
!8983 = !DILocation(line: 2413, column: 16, scope: !8979)
!8984 = !DILocation(line: 2413, column: 11, scope: !8979)
!8985 = !DILocation(line: 2413, column: 14, scope: !8979)
!8986 = !DILocation(line: 2414, column: 19, scope: !8979)
!8987 = !DILocation(line: 2414, column: 27, scope: !8979)
!8988 = !DILocation(line: 2414, column: 11, scope: !8979)
!8989 = !DILocation(line: 2414, column: 17, scope: !8979)
!8990 = !DILocation(line: 2415, column: 28, scope: !8979)
!8991 = !DILocation(line: 2415, column: 36, scope: !8979)
!8992 = !DILocation(line: 2415, column: 11, scope: !8979)
!8993 = !DILocation(line: 2415, column: 21, scope: !8979)
!8994 = !DILocation(line: 2416, column: 30, scope: !8979)
!8995 = !DILocation(line: 2416, column: 11, scope: !8979)
!8996 = !DILocation(line: 2416, column: 22, scope: !8979)
!8997 = !DILocation(line: 2417, column: 19, scope: !8979)
!8998 = !DILocation(line: 2417, column: 11, scope: !8979)
!8999 = !DILocation(line: 2417, column: 17, scope: !8979)
!9000 = !DILocation(line: 2418, column: 13, scope: !8979)
!9001 = !DILocation(line: 2418, column: 21, scope: !8979)
!9002 = !DILocation(line: 2418, column: 11, scope: !8979)
!9003 = !DILocation(line: 2421, column: 15, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2421, column: 10)
!9005 = !DILocation(line: 2421, column: 23, scope: !9004)
!9006 = !DILocation(line: 2421, column: 28, scope: !9004)
!9007 = !DILocation(line: 2421, column: 25, scope: !9004)
!9008 = !DILocation(line: 2421, column: 10, scope: !8979)
!9009 = !DILocation(line: 2422, column: 16, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 2421, column: 32)
!9011 = !DILocation(line: 2422, column: 24, scope: !9010)
!9012 = !DILocation(line: 2422, column: 9, scope: !9010)
!9013 = !DILocation(line: 2423, column: 9, scope: !9010)
!9014 = !DILocation(line: 2424, column: 12, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 2424, column: 11)
!9016 = !DILocation(line: 2424, column: 16, scope: !9015)
!9017 = !DILocation(line: 2424, column: 22, scope: !9015)
!9018 = !DILocation(line: 2424, column: 38, scope: !9015)
!9019 = !DILocation(line: 2424, column: 42, scope: !9015)
!9020 = !DILocation(line: 2424, column: 46, scope: !9015)
!9021 = !DILocation(line: 2424, column: 50, scope: !9015)
!9022 = !DILocation(line: 2424, column: 55, scope: !9015)
!9023 = !DILocation(line: 2424, column: 68, scope: !9015)
!9024 = !DILocation(line: 2424, column: 11, scope: !9010)
!9025 = !DILocation(line: 2424, column: 75, scope: !9015)
!9026 = !DILocation(line: 2424, column: 73, scope: !9015)
!9027 = !DILocation(line: 2425, column: 6, scope: !9010)
!9028 = !DILocation(line: 2427, column: 10, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2427, column: 10)
!9030 = !DILocation(line: 2427, column: 13, scope: !9029)
!9031 = !DILocation(line: 2427, column: 22, scope: !9029)
!9032 = !DILocation(line: 2427, column: 30, scope: !9029)
!9033 = !DILocation(line: 2427, column: 36, scope: !9029)
!9034 = !DILocation(line: 2427, column: 34, scope: !9029)
!9035 = !DILocation(line: 2427, column: 10, scope: !8979)
!9036 = !DILocation(line: 2428, column: 32, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2427, column: 42)
!9038 = !DILocation(line: 2428, column: 39, scope: !9037)
!9039 = !DILocation(line: 2428, column: 47, scope: !9037)
!9040 = !DILocation(line: 2428, column: 7, scope: !9037)
!9041 = !DILocation(line: 2430, column: 13, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 2430, column: 7)
!9043 = !DILocation(line: 2430, column: 12, scope: !9042)
!9044 = !DILocation(line: 2430, column: 17, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 2430, column: 7)
!9046 = !DILocation(line: 2430, column: 19, scope: !9045)
!9047 = !DILocation(line: 2430, column: 27, scope: !9045)
!9048 = !DILocation(line: 2430, column: 34, scope: !9045)
!9049 = !DILocation(line: 2430, column: 18, scope: !9045)
!9050 = !DILocation(line: 2430, column: 7, scope: !9042)
!9051 = !DILocation(line: 2431, column: 20, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2430, column: 52)
!9053 = !DILocation(line: 2431, column: 22, scope: !9052)
!9054 = !DILocation(line: 2431, column: 19, scope: !9052)
!9055 = !DILocation(line: 2431, column: 29, scope: !9052)
!9056 = !DILocation(line: 2431, column: 34, scope: !9052)
!9057 = !DILocation(line: 2431, column: 39, scope: !9052)
!9058 = !DILocation(line: 2431, column: 13, scope: !9052)
!9059 = !DILocation(line: 2431, column: 8, scope: !9052)
!9060 = !DILocation(line: 2431, column: 17, scope: !9052)
!9061 = !DILocation(line: 2432, column: 19, scope: !9052)
!9062 = !DILocation(line: 2432, column: 13, scope: !9052)
!9063 = !DILocation(line: 2432, column: 8, scope: !9052)
!9064 = !DILocation(line: 2432, column: 17, scope: !9052)
!9065 = !DILocation(line: 2433, column: 19, scope: !9052)
!9066 = !DILocation(line: 2433, column: 24, scope: !9052)
!9067 = !DILocation(line: 2433, column: 13, scope: !9052)
!9068 = !DILocation(line: 2433, column: 8, scope: !9052)
!9069 = !DILocation(line: 2433, column: 17, scope: !9052)
!9070 = !DILocation(line: 2434, column: 20, scope: !9052)
!9071 = !DILocation(line: 2434, column: 24, scope: !9052)
!9072 = !DILocation(line: 2434, column: 32, scope: !9052)
!9073 = !DILocation(line: 2434, column: 39, scope: !9052)
!9074 = !DILocation(line: 2434, column: 22, scope: !9052)
!9075 = !DILocation(line: 2434, column: 19, scope: !9052)
!9076 = !DILocation(line: 2434, column: 44, scope: !9052)
!9077 = !DILocation(line: 2434, column: 49, scope: !9052)
!9078 = !DILocation(line: 2434, column: 53, scope: !9052)
!9079 = !DILocation(line: 2434, column: 58, scope: !9052)
!9080 = !DILocation(line: 2434, column: 13, scope: !9052)
!9081 = !DILocation(line: 2434, column: 8, scope: !9052)
!9082 = !DILocation(line: 2434, column: 17, scope: !9052)
!9083 = !DILocation(line: 2436, column: 32, scope: !9052)
!9084 = !DILocation(line: 2436, column: 44, scope: !9052)
!9085 = !DILocation(line: 2436, column: 39, scope: !9052)
!9086 = !DILocation(line: 2436, column: 49, scope: !9052)
!9087 = !DILocation(line: 2436, column: 57, scope: !9052)
!9088 = !DILocation(line: 2436, column: 48, scope: !9052)
!9089 = !DILocation(line: 2436, column: 63, scope: !9052)
!9090 = !DILocation(line: 2436, column: 78, scope: !9052)
!9091 = !DILocation(line: 2436, column: 73, scope: !9052)
!9092 = !DILocation(line: 2436, column: 84, scope: !9052)
!9093 = !DILocation(line: 2436, column: 88, scope: !9052)
!9094 = !DILocation(line: 2436, column: 12, scope: !9052)
!9095 = !DILocation(line: 2436, column: 10, scope: !9052)
!9096 = !DILocation(line: 2437, column: 32, scope: !9052)
!9097 = !DILocation(line: 2437, column: 44, scope: !9052)
!9098 = !DILocation(line: 2437, column: 39, scope: !9052)
!9099 = !DILocation(line: 2437, column: 49, scope: !9052)
!9100 = !DILocation(line: 2437, column: 57, scope: !9052)
!9101 = !DILocation(line: 2437, column: 48, scope: !9052)
!9102 = !DILocation(line: 2437, column: 63, scope: !9052)
!9103 = !DILocation(line: 2437, column: 78, scope: !9052)
!9104 = !DILocation(line: 2437, column: 73, scope: !9052)
!9105 = !DILocation(line: 2437, column: 84, scope: !9052)
!9106 = !DILocation(line: 2437, column: 88, scope: !9052)
!9107 = !DILocation(line: 2437, column: 12, scope: !9052)
!9108 = !DILocation(line: 2437, column: 10, scope: !9052)
!9109 = !DILocation(line: 2438, column: 32, scope: !9052)
!9110 = !DILocation(line: 2438, column: 44, scope: !9052)
!9111 = !DILocation(line: 2438, column: 39, scope: !9052)
!9112 = !DILocation(line: 2438, column: 49, scope: !9052)
!9113 = !DILocation(line: 2438, column: 57, scope: !9052)
!9114 = !DILocation(line: 2438, column: 48, scope: !9052)
!9115 = !DILocation(line: 2438, column: 63, scope: !9052)
!9116 = !DILocation(line: 2438, column: 78, scope: !9052)
!9117 = !DILocation(line: 2438, column: 73, scope: !9052)
!9118 = !DILocation(line: 2438, column: 84, scope: !9052)
!9119 = !DILocation(line: 2438, column: 88, scope: !9052)
!9120 = !DILocation(line: 2438, column: 12, scope: !9052)
!9121 = !DILocation(line: 2438, column: 10, scope: !9052)
!9122 = !DILocation(line: 2439, column: 32, scope: !9052)
!9123 = !DILocation(line: 2439, column: 44, scope: !9052)
!9124 = !DILocation(line: 2439, column: 39, scope: !9052)
!9125 = !DILocation(line: 2439, column: 49, scope: !9052)
!9126 = !DILocation(line: 2439, column: 57, scope: !9052)
!9127 = !DILocation(line: 2439, column: 48, scope: !9052)
!9128 = !DILocation(line: 2439, column: 63, scope: !9052)
!9129 = !DILocation(line: 2439, column: 78, scope: !9052)
!9130 = !DILocation(line: 2439, column: 73, scope: !9052)
!9131 = !DILocation(line: 2439, column: 84, scope: !9052)
!9132 = !DILocation(line: 2439, column: 88, scope: !9052)
!9133 = !DILocation(line: 2439, column: 12, scope: !9052)
!9134 = !DILocation(line: 2439, column: 10, scope: !9052)
!9135 = !DILocation(line: 2441, column: 14, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2441, column: 12)
!9137 = !DILocation(line: 2441, column: 19, scope: !9136)
!9138 = !DILocation(line: 2441, column: 17, scope: !9136)
!9139 = !DILocation(line: 2441, column: 24, scope: !9136)
!9140 = !DILocation(line: 2441, column: 22, scope: !9136)
!9141 = !DILocation(line: 2441, column: 29, scope: !9136)
!9142 = !DILocation(line: 2441, column: 27, scope: !9136)
!9143 = !DILocation(line: 2441, column: 12, scope: !9052)
!9144 = !DILocation(line: 2442, column: 31, scope: !9136)
!9145 = !DILocation(line: 2442, column: 35, scope: !9136)
!9146 = !DILocation(line: 2442, column: 9, scope: !9136)
!9147 = !DILocation(line: 2443, column: 7, scope: !9052)
!9148 = !DILocation(line: 2430, column: 39, scope: !9045)
!9149 = !DILocation(line: 2430, column: 48, scope: !9045)
!9150 = !DILocation(line: 2430, column: 7, scope: !9045)
!9151 = distinct !{!9151, !9050, !9152}
!9152 = !DILocation(line: 2443, column: 7, scope: !9042)
!9153 = !DILocation(line: 2444, column: 6, scope: !9037)
!9154 = !DILocation(line: 2446, column: 11, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2446, column: 10)
!9156 = !DILocation(line: 2446, column: 13, scope: !9155)
!9157 = !DILocation(line: 2446, column: 19, scope: !9155)
!9158 = !DILocation(line: 2446, column: 25, scope: !9155)
!9159 = !DILocation(line: 2446, column: 28, scope: !9155)
!9160 = !DILocation(line: 2446, column: 32, scope: !9155)
!9161 = !DILocation(line: 2446, column: 43, scope: !9155)
!9162 = !DILocation(line: 2446, column: 47, scope: !9155)
!9163 = !DILocation(line: 2446, column: 10, scope: !8979)
!9164 = !DILocation(line: 2447, column: 7, scope: !9155)
!9165 = !DILocation(line: 2448, column: 5, scope: !8979)
!9166 = !DILocation(line: 2410, column: 43, scope: !8973)
!9167 = !DILocation(line: 2410, column: 5, scope: !8973)
!9168 = distinct !{!9168, !8977, !9169}
!9169 = !DILocation(line: 2448, column: 5, scope: !8968)
!9170 = !DILocation(line: 2449, column: 4, scope: !8961)
!9171 = !DILocation(line: 2405, column: 43, scope: !8953)
!9172 = !DILocation(line: 2405, column: 53, scope: !8953)
!9173 = !DILocation(line: 2405, column: 4, scope: !8953)
!9174 = distinct !{!9174, !8958, !9175}
!9175 = !DILocation(line: 2449, column: 4, scope: !8950)
!9176 = !DILocation(line: 2450, column: 3, scope: !8945)
!9177 = !DILocation(line: 2452, column: 7, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2452, column: 7)
!9179 = !DILocation(line: 2452, column: 11, scope: !9178)
!9180 = !DILocation(line: 2452, column: 22, scope: !9178)
!9181 = !DILocation(line: 2452, column: 26, scope: !9178)
!9182 = !DILocation(line: 2452, column: 7, scope: !8700)
!9183 = !DILocation(line: 2453, column: 4, scope: !9178)
!9184 = !DILocation(line: 2454, column: 2, scope: !8700)
!9185 = !DILocation(line: 2343, column: 47, scope: !8697)
!9186 = !DILocation(line: 2343, column: 55, scope: !8697)
!9187 = !DILocation(line: 2343, column: 60, scope: !8697)
!9188 = !DILocation(line: 2343, column: 54, scope: !8697)
!9189 = !DILocation(line: 2343, column: 2, scope: !8697)
!9190 = distinct !{!9190, !8698, !9191}
!9191 = !DILocation(line: 2454, column: 2, scope: !8690)
!9192 = !DILocation(line: 2457, column: 6, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 2457, column: 6)
!9194 = !DILocation(line: 2457, column: 11, scope: !9193)
!9195 = !DILocation(line: 2457, column: 18, scope: !9193)
!9196 = !DILocation(line: 2457, column: 6, scope: !8351)
!9197 = !DILocation(line: 2458, column: 10, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2458, column: 3)
!9199 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 2457, column: 40)
!9200 = !DILocation(line: 2458, column: 15, scope: !9198)
!9201 = !DILocation(line: 2458, column: 14, scope: !9198)
!9202 = !DILocation(line: 2458, column: 20, scope: !9198)
!9203 = !DILocation(line: 2458, column: 9, scope: !9198)
!9204 = !DILocation(line: 2458, column: 8, scope: !9198)
!9205 = !DILocation(line: 2458, column: 24, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2458, column: 3)
!9207 = !DILocation(line: 2458, column: 25, scope: !9206)
!9208 = !DILocation(line: 2458, column: 3, scope: !9198)
!9209 = !DILocation(line: 2459, column: 15, scope: !9206)
!9210 = !DILocation(line: 2459, column: 21, scope: !9206)
!9211 = !DILocation(line: 2459, column: 23, scope: !9206)
!9212 = !DILocation(line: 2459, column: 37, scope: !9206)
!9213 = !DILocation(line: 2459, column: 44, scope: !9206)
!9214 = !DILocation(line: 2459, column: 31, scope: !9206)
!9215 = !DILocation(line: 2459, column: 46, scope: !9206)
!9216 = !DILocation(line: 2459, column: 28, scope: !9206)
!9217 = !DILocation(line: 2459, column: 4, scope: !9206)
!9218 = !DILocation(line: 2459, column: 10, scope: !9206)
!9219 = !DILocation(line: 2459, column: 12, scope: !9206)
!9220 = !DILocation(line: 2458, column: 31, scope: !9206)
!9221 = !DILocation(line: 2458, column: 3, scope: !9206)
!9222 = distinct !{!9222, !9208, !9223}
!9223 = !DILocation(line: 2459, column: 49, scope: !9198)
!9224 = !DILocation(line: 2461, column: 3, scope: !9199)
!9225 = !DILocation(line: 2461, column: 19, scope: !9199)
!9226 = !DILocation(line: 2461, column: 13, scope: !9199)
!9227 = !DILocation(line: 2462, column: 2, scope: !9199)
!9228 = !DILocation(line: 2464, column: 2, scope: !8351)
!9229 = !DILocation(line: 2465, column: 1, scope: !8351)
!9230 = distinct !DISubprogram(name: "zbufline_onlyZ", scope: !3, file: !3, line: 722, type: !1037, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!9231 = !DILocalVariable(name: "zspan", arg: 1, scope: !9230, file: !3, line: 722, type: !120)
!9232 = !DILocation(line: 722, column: 35, scope: !9230)
!9233 = !DILocalVariable(name: "UNUSED_obi", arg: 2, scope: !9230, file: !3, line: 722, type: !29)
!9234 = !DILocation(line: 722, column: 46, scope: !9230)
!9235 = !DILocalVariable(name: "UNUSED_zvlnr", arg: 3, scope: !9230, file: !3, line: 722, type: !29)
!9236 = !DILocation(line: 722, column: 63, scope: !9230)
!9237 = !DILocalVariable(name: "vec1", arg: 4, scope: !9230, file: !3, line: 722, type: !88)
!9238 = !DILocation(line: 722, column: 90, scope: !9230)
!9239 = !DILocalVariable(name: "vec2", arg: 5, scope: !9230, file: !3, line: 722, type: !88)
!9240 = !DILocation(line: 722, column: 111, scope: !9230)
!9241 = !DILocalVariable(name: "rectz", scope: !9230, file: !3, line: 724, type: !81)
!9242 = !DILocation(line: 724, column: 7, scope: !9230)
!9243 = !DILocalVariable(name: "rectz1", scope: !9230, file: !3, line: 724, type: !81)
!9244 = !DILocation(line: 724, column: 15, scope: !9230)
!9245 = !DILocalVariable(name: "start", scope: !9230, file: !3, line: 725, type: !29)
!9246 = !DILocation(line: 725, column: 6, scope: !9230)
!9247 = !DILocalVariable(name: "end", scope: !9230, file: !3, line: 725, type: !29)
!9248 = !DILocation(line: 725, column: 13, scope: !9230)
!9249 = !DILocalVariable(name: "x", scope: !9230, file: !3, line: 725, type: !29)
!9250 = !DILocation(line: 725, column: 18, scope: !9230)
!9251 = !DILocalVariable(name: "y", scope: !9230, file: !3, line: 725, type: !29)
!9252 = !DILocation(line: 725, column: 21, scope: !9230)
!9253 = !DILocalVariable(name: "oldx", scope: !9230, file: !3, line: 725, type: !29)
!9254 = !DILocation(line: 725, column: 24, scope: !9230)
!9255 = !DILocalVariable(name: "oldy", scope: !9230, file: !3, line: 725, type: !29)
!9256 = !DILocation(line: 725, column: 30, scope: !9230)
!9257 = !DILocalVariable(name: "ofs", scope: !9230, file: !3, line: 725, type: !29)
!9258 = !DILocation(line: 725, column: 36, scope: !9230)
!9259 = !DILocalVariable(name: "dz", scope: !9230, file: !3, line: 726, type: !29)
!9260 = !DILocation(line: 726, column: 6, scope: !9230)
!9261 = !DILocalVariable(name: "vergz", scope: !9230, file: !3, line: 726, type: !29)
!9262 = !DILocation(line: 726, column: 10, scope: !9230)
!9263 = !DILocalVariable(name: "maxtest", scope: !9230, file: !3, line: 726, type: !29)
!9264 = !DILocation(line: 726, column: 17, scope: !9230)
!9265 = !DILocalVariable(name: "dx", scope: !9230, file: !3, line: 727, type: !21)
!9266 = !DILocation(line: 727, column: 8, scope: !9230)
!9267 = !DILocalVariable(name: "dy", scope: !9230, file: !3, line: 727, type: !21)
!9268 = !DILocation(line: 727, column: 12, scope: !9230)
!9269 = !DILocalVariable(name: "v1", scope: !9230, file: !3, line: 728, type: !2427)
!9270 = !DILocation(line: 728, column: 8, scope: !9230)
!9271 = !DILocalVariable(name: "v2", scope: !9230, file: !3, line: 728, type: !2427)
!9272 = !DILocation(line: 728, column: 15, scope: !9230)
!9273 = !DILocation(line: 730, column: 6, scope: !9230)
!9274 = !DILocation(line: 730, column: 14, scope: !9230)
!9275 = !DILocation(line: 730, column: 13, scope: !9230)
!9276 = !DILocation(line: 730, column: 4, scope: !9230)
!9277 = !DILocation(line: 731, column: 6, scope: !9230)
!9278 = !DILocation(line: 731, column: 14, scope: !9230)
!9279 = !DILocation(line: 731, column: 13, scope: !9230)
!9280 = !DILocation(line: 731, column: 4, scope: !9230)
!9281 = !DILocation(line: 733, column: 12, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 733, column: 6)
!9283 = !DILocation(line: 733, column: 6, scope: !9282)
!9284 = !DILocation(line: 733, column: 24, scope: !9282)
!9285 = !DILocation(line: 733, column: 18, scope: !9282)
!9286 = !DILocation(line: 733, column: 16, scope: !9282)
!9287 = !DILocation(line: 733, column: 6, scope: !9230)
!9288 = !DILocation(line: 736, column: 7, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 736, column: 7)
!9290 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 733, column: 29)
!9291 = !DILocation(line: 736, column: 15, scope: !9289)
!9292 = !DILocation(line: 736, column: 14, scope: !9289)
!9293 = !DILocation(line: 736, column: 7, scope: !9290)
!9294 = !DILocation(line: 737, column: 15, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 736, column: 24)
!9296 = !DILocation(line: 737, column: 19, scope: !9295)
!9297 = !DILocation(line: 737, column: 4, scope: !9295)
!9298 = !DILocation(line: 738, column: 15, scope: !9295)
!9299 = !DILocation(line: 738, column: 19, scope: !9295)
!9300 = !DILocation(line: 738, column: 4, scope: !9295)
!9301 = !DILocation(line: 739, column: 3, scope: !9295)
!9302 = !DILocation(line: 741, column: 15, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 740, column: 8)
!9304 = !DILocation(line: 741, column: 19, scope: !9303)
!9305 = !DILocation(line: 741, column: 4, scope: !9303)
!9306 = !DILocation(line: 742, column: 15, scope: !9303)
!9307 = !DILocation(line: 742, column: 19, scope: !9303)
!9308 = !DILocation(line: 742, column: 4, scope: !9303)
!9309 = !DILocation(line: 743, column: 9, scope: !9303)
!9310 = !DILocation(line: 743, column: 8, scope: !9303)
!9311 = !DILocation(line: 743, column: 6, scope: !9303)
!9312 = !DILocation(line: 743, column: 18, scope: !9303)
!9313 = !DILocation(line: 743, column: 17, scope: !9303)
!9314 = !DILocation(line: 743, column: 15, scope: !9303)
!9315 = !DILocation(line: 746, column: 16, scope: !9290)
!9316 = !DILocation(line: 746, column: 10, scope: !9290)
!9317 = !DILocation(line: 746, column: 8, scope: !9290)
!9318 = !DILocation(line: 747, column: 8, scope: !9290)
!9319 = !DILocation(line: 747, column: 20, scope: !9290)
!9320 = !DILocation(line: 747, column: 14, scope: !9290)
!9321 = !DILocation(line: 747, column: 13, scope: !9290)
!9322 = !DILocation(line: 747, column: 6, scope: !9290)
!9323 = !DILocation(line: 748, column: 7, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 748, column: 7)
!9325 = !DILocation(line: 748, column: 12, scope: !9324)
!9326 = !DILocation(line: 748, column: 19, scope: !9324)
!9327 = !DILocation(line: 748, column: 10, scope: !9324)
!9328 = !DILocation(line: 748, column: 7, scope: !9290)
!9329 = !DILocation(line: 748, column: 31, scope: !9324)
!9330 = !DILocation(line: 748, column: 38, scope: !9324)
!9331 = !DILocation(line: 748, column: 43, scope: !9324)
!9332 = !DILocation(line: 748, column: 29, scope: !9324)
!9333 = !DILocation(line: 748, column: 26, scope: !9324)
!9334 = !DILocation(line: 750, column: 15, scope: !9290)
!9335 = !DILocation(line: 750, column: 9, scope: !9290)
!9336 = !DILocation(line: 750, column: 7, scope: !9290)
!9337 = !DILocation(line: 751, column: 8, scope: !9290)
!9338 = !DILocation(line: 751, column: 5, scope: !9290)
!9339 = !DILocation(line: 753, column: 16, scope: !9290)
!9340 = !DILocation(line: 753, column: 10, scope: !9290)
!9341 = !DILocation(line: 753, column: 8, scope: !9290)
!9342 = !DILocation(line: 754, column: 14, scope: !9290)
!9343 = !DILocation(line: 754, column: 20, scope: !9290)
!9344 = !DILocation(line: 754, column: 19, scope: !9290)
!9345 = !DILocation(line: 754, column: 27, scope: !9290)
!9346 = !DILocation(line: 754, column: 26, scope: !9290)
!9347 = !DILocation(line: 754, column: 13, scope: !9290)
!9348 = !DILocation(line: 754, column: 7, scope: !9290)
!9349 = !DILocation(line: 754, column: 5, scope: !9290)
!9350 = !DILocation(line: 755, column: 7, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 755, column: 7)
!9352 = !DILocation(line: 755, column: 12, scope: !9351)
!9353 = !DILocation(line: 755, column: 24, scope: !9351)
!9354 = !DILocation(line: 755, column: 27, scope: !9351)
!9355 = !DILocation(line: 755, column: 29, scope: !9351)
!9356 = !DILocation(line: 755, column: 7, scope: !9290)
!9357 = !DILocation(line: 755, column: 40, scope: !9351)
!9358 = !DILocation(line: 755, column: 33, scope: !9351)
!9359 = !DILocation(line: 757, column: 10, scope: !9290)
!9360 = !DILocation(line: 757, column: 17, scope: !9290)
!9361 = !DILocation(line: 757, column: 25, scope: !9290)
!9362 = !DILocation(line: 757, column: 30, scope: !9290)
!9363 = !DILocation(line: 757, column: 37, scope: !9290)
!9364 = !DILocation(line: 757, column: 29, scope: !9290)
!9365 = !DILocation(line: 757, column: 23, scope: !9290)
!9366 = !DILocation(line: 757, column: 44, scope: !9290)
!9367 = !DILocation(line: 757, column: 42, scope: !9290)
!9368 = !DILocation(line: 757, column: 8, scope: !9290)
!9369 = !DILocation(line: 758, column: 7, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 758, column: 7)
!9371 = !DILocation(line: 758, column: 14, scope: !9370)
!9372 = !DILocation(line: 758, column: 7, scope: !9290)
!9373 = !DILocation(line: 759, column: 12, scope: !9370)
!9374 = !DILocation(line: 759, column: 19, scope: !9370)
!9375 = !DILocation(line: 759, column: 28, scope: !9370)
!9376 = !DILocation(line: 759, column: 33, scope: !9370)
!9377 = !DILocation(line: 759, column: 40, scope: !9370)
!9378 = !DILocation(line: 759, column: 32, scope: !9370)
!9379 = !DILocation(line: 759, column: 26, scope: !9370)
!9380 = !DILocation(line: 759, column: 47, scope: !9370)
!9381 = !DILocation(line: 759, column: 45, scope: !9370)
!9382 = !DILocation(line: 759, column: 10, scope: !9370)
!9383 = !DILocation(line: 759, column: 4, scope: !9370)
!9384 = !DILocation(line: 761, column: 7, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 761, column: 7)
!9386 = !DILocation(line: 761, column: 9, scope: !9385)
!9387 = !DILocation(line: 761, column: 7, scope: !9290)
!9388 = !DILocation(line: 761, column: 19, scope: !9385)
!9389 = !DILocation(line: 761, column: 26, scope: !9385)
!9390 = !DILocation(line: 761, column: 18, scope: !9385)
!9391 = !DILocation(line: 761, column: 16, scope: !9385)
!9392 = !DILocation(line: 761, column: 13, scope: !9385)
!9393 = !DILocation(line: 762, column: 13, scope: !9385)
!9394 = !DILocation(line: 762, column: 20, scope: !9385)
!9395 = !DILocation(line: 762, column: 11, scope: !9385)
!9396 = !DILocation(line: 764, column: 11, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 764, column: 3)
!9398 = !DILocation(line: 764, column: 9, scope: !9397)
!9399 = !DILocation(line: 764, column: 8, scope: !9397)
!9400 = !DILocation(line: 764, column: 18, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 764, column: 3)
!9402 = !DILocation(line: 764, column: 21, scope: !9401)
!9403 = !DILocation(line: 764, column: 19, scope: !9401)
!9404 = !DILocation(line: 764, column: 3, scope: !9397)
!9405 = !DILocation(line: 766, column: 13, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 764, column: 40)
!9407 = !DILocation(line: 766, column: 7, scope: !9406)
!9408 = !DILocation(line: 766, column: 5, scope: !9406)
!9409 = !DILocation(line: 767, column: 8, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 767, column: 8)
!9411 = !DILocation(line: 767, column: 11, scope: !9410)
!9412 = !DILocation(line: 767, column: 9, scope: !9410)
!9413 = !DILocation(line: 767, column: 8, scope: !9406)
!9414 = !DILocation(line: 768, column: 11, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 767, column: 17)
!9416 = !DILocation(line: 768, column: 9, scope: !9415)
!9417 = !DILocation(line: 769, column: 13, scope: !9415)
!9418 = !DILocation(line: 769, column: 10, scope: !9415)
!9419 = !DILocation(line: 770, column: 9, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 770, column: 9)
!9421 = !DILocation(line: 770, column: 9, scope: !9415)
!9422 = !DILocation(line: 770, column: 26, scope: !9420)
!9423 = !DILocation(line: 770, column: 23, scope: !9420)
!9424 = !DILocation(line: 770, column: 17, scope: !9420)
!9425 = !DILocation(line: 771, column: 4, scope: !9415)
!9426 = !DILocation(line: 773, column: 8, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 773, column: 8)
!9428 = !DILocation(line: 773, column: 9, scope: !9427)
!9429 = !DILocation(line: 773, column: 13, scope: !9427)
!9430 = !DILocation(line: 773, column: 16, scope: !9427)
!9431 = !DILocation(line: 773, column: 17, scope: !9427)
!9432 = !DILocation(line: 773, column: 21, scope: !9427)
!9433 = !DILocation(line: 773, column: 24, scope: !9427)
!9434 = !DILocation(line: 773, column: 26, scope: !9427)
!9435 = !DILocation(line: 773, column: 33, scope: !9427)
!9436 = !DILocation(line: 773, column: 25, scope: !9427)
!9437 = !DILocation(line: 773, column: 8, scope: !9406)
!9438 = !DILocation(line: 774, column: 9, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 774, column: 9)
!9440 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 773, column: 40)
!9441 = !DILocation(line: 774, column: 18, scope: !9439)
!9442 = !DILocation(line: 774, column: 17, scope: !9439)
!9443 = !DILocation(line: 774, column: 15, scope: !9439)
!9444 = !DILocation(line: 774, column: 9, scope: !9440)
!9445 = !DILocation(line: 775, column: 10, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 775, column: 10)
!9447 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 774, column: 25)
!9448 = !DILocation(line: 775, column: 10, scope: !9447)
!9449 = !DILocation(line: 775, column: 28, scope: !9446)
!9450 = !DILocation(line: 775, column: 27, scope: !9446)
!9451 = !DILocation(line: 775, column: 19, scope: !9446)
!9452 = !DILocation(line: 775, column: 25, scope: !9446)
!9453 = !DILocation(line: 775, column: 18, scope: !9446)
!9454 = !DILocation(line: 776, column: 14, scope: !9447)
!9455 = !DILocation(line: 776, column: 7, scope: !9447)
!9456 = !DILocation(line: 776, column: 12, scope: !9447)
!9457 = !DILocation(line: 777, column: 5, scope: !9447)
!9458 = !DILocation(line: 778, column: 14, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 778, column: 14)
!9460 = !DILocation(line: 778, column: 21, scope: !9459)
!9461 = !DILocation(line: 778, column: 24, scope: !9459)
!9462 = !DILocation(line: 778, column: 33, scope: !9459)
!9463 = !DILocation(line: 778, column: 32, scope: !9459)
!9464 = !DILocation(line: 778, column: 30, scope: !9459)
!9465 = !DILocation(line: 778, column: 14, scope: !9439)
!9466 = !DILocation(line: 779, column: 15, scope: !9459)
!9467 = !DILocation(line: 779, column: 7, scope: !9459)
!9468 = !DILocation(line: 779, column: 13, scope: !9459)
!9469 = !DILocation(line: 779, column: 6, scope: !9459)
!9470 = !DILocation(line: 780, column: 4, scope: !9440)
!9471 = !DILocation(line: 782, column: 12, scope: !9406)
!9472 = !DILocation(line: 782, column: 4, scope: !9406)
!9473 = !DILocation(line: 782, column: 9, scope: !9406)
!9474 = !DILocation(line: 784, column: 8, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 784, column: 8)
!9476 = !DILocation(line: 784, column: 16, scope: !9475)
!9477 = !DILocation(line: 784, column: 20, scope: !9475)
!9478 = !DILocation(line: 784, column: 41, scope: !9475)
!9479 = !DILocation(line: 784, column: 39, scope: !9475)
!9480 = !DILocation(line: 784, column: 26, scope: !9475)
!9481 = !DILocation(line: 784, column: 8, scope: !9406)
!9482 = !DILocation(line: 784, column: 51, scope: !9475)
!9483 = !DILocation(line: 784, column: 46, scope: !9475)
!9484 = !DILocation(line: 785, column: 17, scope: !9475)
!9485 = !DILocation(line: 785, column: 14, scope: !9475)
!9486 = !DILocation(line: 787, column: 8, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 787, column: 8)
!9488 = !DILocation(line: 787, column: 8, scope: !9406)
!9489 = !DILocation(line: 787, column: 22, scope: !9487)
!9490 = !DILocation(line: 787, column: 16, scope: !9487)
!9491 = !DILocation(line: 788, column: 3, scope: !9406)
!9492 = !DILocation(line: 764, column: 27, scope: !9401)
!9493 = !DILocation(line: 764, column: 36, scope: !9401)
!9494 = !DILocation(line: 764, column: 3, scope: !9401)
!9495 = distinct !{!9495, !9404, !9496}
!9496 = !DILocation(line: 788, column: 3, scope: !9397)
!9497 = !DILocation(line: 789, column: 2, scope: !9290)
!9498 = !DILocation(line: 792, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 792, column: 7)
!9500 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 790, column: 7)
!9501 = !DILocation(line: 792, column: 15, scope: !9499)
!9502 = !DILocation(line: 792, column: 14, scope: !9499)
!9503 = !DILocation(line: 792, column: 7, scope: !9500)
!9504 = !DILocation(line: 793, column: 15, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 792, column: 24)
!9506 = !DILocation(line: 793, column: 19, scope: !9505)
!9507 = !DILocation(line: 793, column: 4, scope: !9505)
!9508 = !DILocation(line: 794, column: 15, scope: !9505)
!9509 = !DILocation(line: 794, column: 19, scope: !9505)
!9510 = !DILocation(line: 794, column: 4, scope: !9505)
!9511 = !DILocation(line: 795, column: 3, scope: !9505)
!9512 = !DILocation(line: 797, column: 15, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 796, column: 8)
!9514 = !DILocation(line: 797, column: 19, scope: !9513)
!9515 = !DILocation(line: 797, column: 4, scope: !9513)
!9516 = !DILocation(line: 798, column: 15, scope: !9513)
!9517 = !DILocation(line: 798, column: 19, scope: !9513)
!9518 = !DILocation(line: 798, column: 4, scope: !9513)
!9519 = !DILocation(line: 799, column: 9, scope: !9513)
!9520 = !DILocation(line: 799, column: 8, scope: !9513)
!9521 = !DILocation(line: 799, column: 6, scope: !9513)
!9522 = !DILocation(line: 799, column: 18, scope: !9513)
!9523 = !DILocation(line: 799, column: 17, scope: !9513)
!9524 = !DILocation(line: 799, column: 15, scope: !9513)
!9525 = !DILocation(line: 802, column: 16, scope: !9500)
!9526 = !DILocation(line: 802, column: 10, scope: !9500)
!9527 = !DILocation(line: 802, column: 8, scope: !9500)
!9528 = !DILocation(line: 803, column: 8, scope: !9500)
!9529 = !DILocation(line: 803, column: 20, scope: !9500)
!9530 = !DILocation(line: 803, column: 14, scope: !9500)
!9531 = !DILocation(line: 803, column: 13, scope: !9500)
!9532 = !DILocation(line: 803, column: 6, scope: !9500)
!9533 = !DILocation(line: 805, column: 7, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 805, column: 7)
!9535 = !DILocation(line: 805, column: 12, scope: !9534)
!9536 = !DILocation(line: 805, column: 19, scope: !9534)
!9537 = !DILocation(line: 805, column: 10, scope: !9534)
!9538 = !DILocation(line: 805, column: 7, scope: !9500)
!9539 = !DILocation(line: 805, column: 31, scope: !9534)
!9540 = !DILocation(line: 805, column: 38, scope: !9534)
!9541 = !DILocation(line: 805, column: 43, scope: !9534)
!9542 = !DILocation(line: 805, column: 29, scope: !9534)
!9543 = !DILocation(line: 805, column: 26, scope: !9534)
!9544 = !DILocation(line: 807, column: 15, scope: !9500)
!9545 = !DILocation(line: 807, column: 9, scope: !9500)
!9546 = !DILocation(line: 807, column: 7, scope: !9500)
!9547 = !DILocation(line: 808, column: 8, scope: !9500)
!9548 = !DILocation(line: 808, column: 5, scope: !9500)
!9549 = !DILocation(line: 810, column: 16, scope: !9500)
!9550 = !DILocation(line: 810, column: 10, scope: !9500)
!9551 = !DILocation(line: 810, column: 8, scope: !9500)
!9552 = !DILocation(line: 811, column: 14, scope: !9500)
!9553 = !DILocation(line: 811, column: 20, scope: !9500)
!9554 = !DILocation(line: 811, column: 19, scope: !9500)
!9555 = !DILocation(line: 811, column: 27, scope: !9500)
!9556 = !DILocation(line: 811, column: 26, scope: !9500)
!9557 = !DILocation(line: 811, column: 13, scope: !9500)
!9558 = !DILocation(line: 811, column: 7, scope: !9500)
!9559 = !DILocation(line: 811, column: 5, scope: !9500)
!9560 = !DILocation(line: 812, column: 7, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 812, column: 7)
!9562 = !DILocation(line: 812, column: 12, scope: !9561)
!9563 = !DILocation(line: 812, column: 24, scope: !9561)
!9564 = !DILocation(line: 812, column: 27, scope: !9561)
!9565 = !DILocation(line: 812, column: 29, scope: !9561)
!9566 = !DILocation(line: 812, column: 7, scope: !9500)
!9567 = !DILocation(line: 812, column: 40, scope: !9561)
!9568 = !DILocation(line: 812, column: 33, scope: !9561)
!9569 = !DILocation(line: 814, column: 10, scope: !9500)
!9570 = !DILocation(line: 814, column: 17, scope: !9500)
!9571 = !DILocation(line: 814, column: 25, scope: !9500)
!9572 = !DILocation(line: 814, column: 31, scope: !9500)
!9573 = !DILocation(line: 814, column: 38, scope: !9500)
!9574 = !DILocation(line: 814, column: 30, scope: !9500)
!9575 = !DILocation(line: 814, column: 23, scope: !9500)
!9576 = !DILocation(line: 814, column: 45, scope: !9500)
!9577 = !DILocation(line: 814, column: 43, scope: !9500)
!9578 = !DILocation(line: 814, column: 8, scope: !9500)
!9579 = !DILocation(line: 815, column: 7, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 815, column: 7)
!9581 = !DILocation(line: 815, column: 14, scope: !9580)
!9582 = !DILocation(line: 815, column: 7, scope: !9500)
!9583 = !DILocation(line: 816, column: 12, scope: !9580)
!9584 = !DILocation(line: 816, column: 19, scope: !9580)
!9585 = !DILocation(line: 816, column: 28, scope: !9580)
!9586 = !DILocation(line: 816, column: 34, scope: !9580)
!9587 = !DILocation(line: 816, column: 41, scope: !9580)
!9588 = !DILocation(line: 816, column: 33, scope: !9580)
!9589 = !DILocation(line: 816, column: 26, scope: !9580)
!9590 = !DILocation(line: 816, column: 48, scope: !9580)
!9591 = !DILocation(line: 816, column: 46, scope: !9580)
!9592 = !DILocation(line: 816, column: 10, scope: !9580)
!9593 = !DILocation(line: 816, column: 4, scope: !9580)
!9594 = !DILocation(line: 818, column: 7, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 818, column: 7)
!9596 = !DILocation(line: 818, column: 9, scope: !9595)
!9597 = !DILocation(line: 818, column: 7, scope: !9500)
!9598 = !DILocation(line: 818, column: 16, scope: !9595)
!9599 = !DILocation(line: 818, column: 13, scope: !9595)
!9600 = !DILocation(line: 819, column: 11, scope: !9595)
!9601 = !DILocation(line: 821, column: 11, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 821, column: 3)
!9603 = !DILocation(line: 821, column: 9, scope: !9602)
!9604 = !DILocation(line: 821, column: 8, scope: !9602)
!9605 = !DILocation(line: 821, column: 18, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 821, column: 3)
!9607 = !DILocation(line: 821, column: 21, scope: !9606)
!9608 = !DILocation(line: 821, column: 19, scope: !9606)
!9609 = !DILocation(line: 821, column: 3, scope: !9602)
!9610 = !DILocation(line: 823, column: 13, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 821, column: 52)
!9612 = !DILocation(line: 823, column: 7, scope: !9611)
!9613 = !DILocation(line: 823, column: 5, scope: !9611)
!9614 = !DILocation(line: 824, column: 8, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 824, column: 8)
!9616 = !DILocation(line: 824, column: 11, scope: !9615)
!9617 = !DILocation(line: 824, column: 9, scope: !9615)
!9618 = !DILocation(line: 824, column: 8, scope: !9611)
!9619 = !DILocation(line: 825, column: 11, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 824, column: 17)
!9621 = !DILocation(line: 825, column: 9, scope: !9620)
!9622 = !DILocation(line: 826, column: 13, scope: !9620)
!9623 = !DILocation(line: 826, column: 10, scope: !9620)
!9624 = !DILocation(line: 827, column: 9, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 827, column: 9)
!9626 = !DILocation(line: 827, column: 9, scope: !9620)
!9627 = !DILocation(line: 827, column: 26, scope: !9625)
!9628 = !DILocation(line: 827, column: 23, scope: !9625)
!9629 = !DILocation(line: 827, column: 17, scope: !9625)
!9630 = !DILocation(line: 828, column: 4, scope: !9620)
!9631 = !DILocation(line: 830, column: 8, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 830, column: 8)
!9633 = !DILocation(line: 830, column: 9, scope: !9632)
!9634 = !DILocation(line: 830, column: 13, scope: !9632)
!9635 = !DILocation(line: 830, column: 16, scope: !9632)
!9636 = !DILocation(line: 830, column: 17, scope: !9632)
!9637 = !DILocation(line: 830, column: 21, scope: !9632)
!9638 = !DILocation(line: 830, column: 24, scope: !9632)
!9639 = !DILocation(line: 830, column: 26, scope: !9632)
!9640 = !DILocation(line: 830, column: 33, scope: !9632)
!9641 = !DILocation(line: 830, column: 25, scope: !9632)
!9642 = !DILocation(line: 830, column: 8, scope: !9611)
!9643 = !DILocation(line: 831, column: 9, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 831, column: 9)
!9645 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 830, column: 40)
!9646 = !DILocation(line: 831, column: 18, scope: !9644)
!9647 = !DILocation(line: 831, column: 17, scope: !9644)
!9648 = !DILocation(line: 831, column: 15, scope: !9644)
!9649 = !DILocation(line: 831, column: 9, scope: !9645)
!9650 = !DILocation(line: 832, column: 10, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 832, column: 10)
!9652 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 831, column: 25)
!9653 = !DILocation(line: 832, column: 10, scope: !9652)
!9654 = !DILocation(line: 832, column: 28, scope: !9651)
!9655 = !DILocation(line: 832, column: 27, scope: !9651)
!9656 = !DILocation(line: 832, column: 19, scope: !9651)
!9657 = !DILocation(line: 832, column: 25, scope: !9651)
!9658 = !DILocation(line: 832, column: 18, scope: !9651)
!9659 = !DILocation(line: 833, column: 14, scope: !9652)
!9660 = !DILocation(line: 833, column: 7, scope: !9652)
!9661 = !DILocation(line: 833, column: 12, scope: !9652)
!9662 = !DILocation(line: 834, column: 5, scope: !9652)
!9663 = !DILocation(line: 835, column: 14, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 835, column: 14)
!9665 = !DILocation(line: 835, column: 21, scope: !9664)
!9666 = !DILocation(line: 835, column: 24, scope: !9664)
!9667 = !DILocation(line: 835, column: 33, scope: !9664)
!9668 = !DILocation(line: 835, column: 32, scope: !9664)
!9669 = !DILocation(line: 835, column: 30, scope: !9664)
!9670 = !DILocation(line: 835, column: 14, scope: !9644)
!9671 = !DILocation(line: 836, column: 15, scope: !9664)
!9672 = !DILocation(line: 836, column: 7, scope: !9664)
!9673 = !DILocation(line: 836, column: 13, scope: !9664)
!9674 = !DILocation(line: 836, column: 6, scope: !9664)
!9675 = !DILocation(line: 837, column: 4, scope: !9645)
!9676 = !DILocation(line: 839, column: 12, scope: !9611)
!9677 = !DILocation(line: 839, column: 4, scope: !9611)
!9678 = !DILocation(line: 839, column: 9, scope: !9611)
!9679 = !DILocation(line: 840, column: 8, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 840, column: 8)
!9681 = !DILocation(line: 840, column: 16, scope: !9680)
!9682 = !DILocation(line: 840, column: 20, scope: !9680)
!9683 = !DILocation(line: 840, column: 41, scope: !9680)
!9684 = !DILocation(line: 840, column: 39, scope: !9680)
!9685 = !DILocation(line: 840, column: 26, scope: !9680)
!9686 = !DILocation(line: 840, column: 8, scope: !9611)
!9687 = !DILocation(line: 840, column: 51, scope: !9680)
!9688 = !DILocation(line: 840, column: 46, scope: !9680)
!9689 = !DILocation(line: 841, column: 17, scope: !9680)
!9690 = !DILocation(line: 841, column: 14, scope: !9680)
!9691 = !DILocation(line: 843, column: 8, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 843, column: 8)
!9693 = !DILocation(line: 843, column: 8, scope: !9611)
!9694 = !DILocation(line: 844, column: 13, scope: !9692)
!9695 = !DILocation(line: 844, column: 20, scope: !9692)
!9696 = !DILocation(line: 844, column: 11, scope: !9692)
!9697 = !DILocation(line: 844, column: 5, scope: !9692)
!9698 = !DILocation(line: 845, column: 3, scope: !9611)
!9699 = !DILocation(line: 821, column: 27, scope: !9606)
!9700 = !DILocation(line: 821, column: 38, scope: !9606)
!9701 = !DILocation(line: 821, column: 45, scope: !9606)
!9702 = !DILocation(line: 821, column: 36, scope: !9606)
!9703 = !DILocation(line: 821, column: 3, scope: !9606)
!9704 = distinct !{!9704, !9609, !9705}
!9705 = !DILocation(line: 845, column: 3, scope: !9602)
!9706 = !DILocation(line: 847, column: 1, scope: !9230)
!9707 = distinct !DISubprogram(name: "zbuffillGL_onlyZ", scope: !3, file: !3, line: 1303, type: !6600, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!9708 = !DILocalVariable(name: "zspan", arg: 1, scope: !9707, file: !3, line: 1303, type: !120)
!9709 = !DILocation(line: 1303, column: 37, scope: !9707)
!9710 = !DILocalVariable(name: "UNUSED_obi", arg: 2, scope: !9707, file: !3, line: 1303, type: !29)
!9711 = !DILocation(line: 1303, column: 48, scope: !9707)
!9712 = !DILocalVariable(name: "UNUSED_zvlnr", arg: 3, scope: !9707, file: !3, line: 1303, type: !29)
!9713 = !DILocation(line: 1303, column: 65, scope: !9707)
!9714 = !DILocalVariable(name: "v1", arg: 4, scope: !9707, file: !3, line: 1304, type: !88)
!9715 = !DILocation(line: 1304, column: 43, scope: !9707)
!9716 = !DILocalVariable(name: "v2", arg: 5, scope: !9707, file: !3, line: 1304, type: !88)
!9717 = !DILocation(line: 1304, column: 60, scope: !9707)
!9718 = !DILocalVariable(name: "v3", arg: 6, scope: !9707, file: !3, line: 1304, type: !88)
!9719 = !DILocation(line: 1304, column: 77, scope: !9707)
!9720 = !DILocalVariable(name: "v4", arg: 7, scope: !9707, file: !3, line: 1304, type: !88)
!9721 = !DILocation(line: 1304, column: 94, scope: !9707)
!9722 = !DILocalVariable(name: "zxd", scope: !9707, file: !3, line: 1306, type: !80)
!9723 = !DILocation(line: 1306, column: 9, scope: !9707)
!9724 = !DILocalVariable(name: "zyd", scope: !9707, file: !3, line: 1306, type: !80)
!9725 = !DILocation(line: 1306, column: 14, scope: !9707)
!9726 = !DILocalVariable(name: "zy0", scope: !9707, file: !3, line: 1306, type: !80)
!9727 = !DILocation(line: 1306, column: 19, scope: !9707)
!9728 = !DILocalVariable(name: "zverg", scope: !9707, file: !3, line: 1306, type: !80)
!9729 = !DILocation(line: 1306, column: 24, scope: !9707)
!9730 = !DILocalVariable(name: "x0", scope: !9707, file: !3, line: 1307, type: !21)
!9731 = !DILocation(line: 1307, column: 8, scope: !9707)
!9732 = !DILocalVariable(name: "y0", scope: !9707, file: !3, line: 1307, type: !21)
!9733 = !DILocation(line: 1307, column: 12, scope: !9707)
!9734 = !DILocalVariable(name: "z0", scope: !9707, file: !3, line: 1307, type: !21)
!9735 = !DILocation(line: 1307, column: 16, scope: !9707)
!9736 = !DILocalVariable(name: "x1", scope: !9707, file: !3, line: 1308, type: !21)
!9737 = !DILocation(line: 1308, column: 8, scope: !9707)
!9738 = !DILocalVariable(name: "y1", scope: !9707, file: !3, line: 1308, type: !21)
!9739 = !DILocation(line: 1308, column: 12, scope: !9707)
!9740 = !DILocalVariable(name: "z1", scope: !9707, file: !3, line: 1308, type: !21)
!9741 = !DILocation(line: 1308, column: 16, scope: !9707)
!9742 = !DILocalVariable(name: "x2", scope: !9707, file: !3, line: 1308, type: !21)
!9743 = !DILocation(line: 1308, column: 20, scope: !9707)
!9744 = !DILocalVariable(name: "y2", scope: !9707, file: !3, line: 1308, type: !21)
!9745 = !DILocation(line: 1308, column: 24, scope: !9707)
!9746 = !DILocalVariable(name: "z2", scope: !9707, file: !3, line: 1308, type: !21)
!9747 = !DILocation(line: 1308, column: 28, scope: !9707)
!9748 = !DILocalVariable(name: "xx1", scope: !9707, file: !3, line: 1308, type: !21)
!9749 = !DILocation(line: 1308, column: 32, scope: !9707)
!9750 = !DILocalVariable(name: "span1", scope: !9707, file: !3, line: 1309, type: !88)
!9751 = !DILocation(line: 1309, column: 15, scope: !9707)
!9752 = !DILocalVariable(name: "span2", scope: !9707, file: !3, line: 1309, type: !88)
!9753 = !DILocation(line: 1309, column: 23, scope: !9707)
!9754 = !DILocalVariable(name: "rz", scope: !9707, file: !3, line: 1310, type: !81)
!9755 = !DILocation(line: 1310, column: 7, scope: !9707)
!9756 = !DILocalVariable(name: "rz1", scope: !9707, file: !3, line: 1310, type: !81)
!9757 = !DILocation(line: 1310, column: 12, scope: !9707)
!9758 = !DILocalVariable(name: "x", scope: !9707, file: !3, line: 1310, type: !29)
!9759 = !DILocation(line: 1310, column: 17, scope: !9707)
!9760 = !DILocalVariable(name: "y", scope: !9707, file: !3, line: 1310, type: !29)
!9761 = !DILocation(line: 1310, column: 20, scope: !9707)
!9762 = !DILocalVariable(name: "sn1", scope: !9707, file: !3, line: 1311, type: !29)
!9763 = !DILocation(line: 1311, column: 6, scope: !9707)
!9764 = !DILocalVariable(name: "sn2", scope: !9707, file: !3, line: 1311, type: !29)
!9765 = !DILocation(line: 1311, column: 11, scope: !9707)
!9766 = !DILocalVariable(name: "rectx", scope: !9707, file: !3, line: 1311, type: !29)
!9767 = !DILocation(line: 1311, column: 16, scope: !9707)
!9768 = !DILocalVariable(name: "rectzofs", scope: !9707, file: !3, line: 1311, type: !81)
!9769 = !DILocation(line: 1311, column: 24, scope: !9707)
!9770 = !DILocalVariable(name: "rectzofs1", scope: !9707, file: !3, line: 1311, type: !81)
!9771 = !DILocation(line: 1311, column: 35, scope: !9707)
!9772 = !DILocalVariable(name: "my0", scope: !9707, file: !3, line: 1311, type: !29)
!9773 = !DILocation(line: 1311, column: 52, scope: !9707)
!9774 = !DILocalVariable(name: "my2", scope: !9707, file: !3, line: 1311, type: !29)
!9775 = !DILocation(line: 1311, column: 57, scope: !9707)
!9776 = !DILocation(line: 1314, column: 17, scope: !9707)
!9777 = !DILocation(line: 1314, column: 2, scope: !9707)
!9778 = !DILocation(line: 1317, column: 19, scope: !9707)
!9779 = !DILocation(line: 1317, column: 26, scope: !9707)
!9780 = !DILocation(line: 1317, column: 30, scope: !9707)
!9781 = !DILocation(line: 1317, column: 2, scope: !9707)
!9782 = !DILocation(line: 1318, column: 19, scope: !9707)
!9783 = !DILocation(line: 1318, column: 26, scope: !9707)
!9784 = !DILocation(line: 1318, column: 30, scope: !9707)
!9785 = !DILocation(line: 1318, column: 2, scope: !9707)
!9786 = !DILocation(line: 1319, column: 6, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1319, column: 6)
!9788 = !DILocation(line: 1319, column: 6, scope: !9707)
!9789 = !DILocation(line: 1320, column: 20, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 1319, column: 10)
!9791 = !DILocation(line: 1320, column: 27, scope: !9790)
!9792 = !DILocation(line: 1320, column: 31, scope: !9790)
!9793 = !DILocation(line: 1320, column: 3, scope: !9790)
!9794 = !DILocation(line: 1321, column: 20, scope: !9790)
!9795 = !DILocation(line: 1321, column: 27, scope: !9790)
!9796 = !DILocation(line: 1321, column: 31, scope: !9790)
!9797 = !DILocation(line: 1321, column: 3, scope: !9790)
!9798 = !DILocation(line: 1322, column: 2, scope: !9790)
!9799 = !DILocation(line: 1324, column: 20, scope: !9787)
!9800 = !DILocation(line: 1324, column: 27, scope: !9787)
!9801 = !DILocation(line: 1324, column: 31, scope: !9787)
!9802 = !DILocation(line: 1324, column: 3, scope: !9787)
!9803 = !DILocation(line: 1327, column: 6, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1327, column: 6)
!9805 = !DILocation(line: 1327, column: 13, scope: !9804)
!9806 = !DILocation(line: 1327, column: 18, scope: !9804)
!9807 = !DILocation(line: 1327, column: 25, scope: !9804)
!9808 = !DILocation(line: 1327, column: 28, scope: !9804)
!9809 = !DILocation(line: 1327, column: 35, scope: !9804)
!9810 = !DILocation(line: 1327, column: 40, scope: !9804)
!9811 = !DILocation(line: 1327, column: 6, scope: !9707)
!9812 = !DILocation(line: 1327, column: 48, scope: !9804)
!9813 = !DILocation(line: 1329, column: 6, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1329, column: 6)
!9815 = !DILocation(line: 1329, column: 13, scope: !9814)
!9816 = !DILocation(line: 1329, column: 21, scope: !9814)
!9817 = !DILocation(line: 1329, column: 28, scope: !9814)
!9818 = !DILocation(line: 1329, column: 19, scope: !9814)
!9819 = !DILocation(line: 1329, column: 6, scope: !9707)
!9820 = !DILocation(line: 1329, column: 40, scope: !9814)
!9821 = !DILocation(line: 1329, column: 47, scope: !9814)
!9822 = !DILocation(line: 1329, column: 38, scope: !9814)
!9823 = !DILocation(line: 1329, column: 35, scope: !9814)
!9824 = !DILocation(line: 1329, column: 64, scope: !9814)
!9825 = !DILocation(line: 1329, column: 71, scope: !9814)
!9826 = !DILocation(line: 1329, column: 62, scope: !9814)
!9827 = !DILocation(line: 1330, column: 6, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1330, column: 6)
!9829 = !DILocation(line: 1330, column: 13, scope: !9828)
!9830 = !DILocation(line: 1330, column: 21, scope: !9828)
!9831 = !DILocation(line: 1330, column: 28, scope: !9828)
!9832 = !DILocation(line: 1330, column: 19, scope: !9828)
!9833 = !DILocation(line: 1330, column: 6, scope: !9707)
!9834 = !DILocation(line: 1330, column: 40, scope: !9828)
!9835 = !DILocation(line: 1330, column: 47, scope: !9828)
!9836 = !DILocation(line: 1330, column: 38, scope: !9828)
!9837 = !DILocation(line: 1330, column: 35, scope: !9828)
!9838 = !DILocation(line: 1330, column: 64, scope: !9828)
!9839 = !DILocation(line: 1330, column: 71, scope: !9828)
!9840 = !DILocation(line: 1330, column: 62, scope: !9828)
!9841 = !DILocation(line: 1333, column: 6, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1333, column: 6)
!9843 = !DILocation(line: 1333, column: 10, scope: !9842)
!9844 = !DILocation(line: 1333, column: 9, scope: !9842)
!9845 = !DILocation(line: 1333, column: 6, scope: !9707)
!9846 = !DILocation(line: 1333, column: 15, scope: !9842)
!9847 = !DILocation(line: 1337, column: 6, scope: !9707)
!9848 = !DILocation(line: 1337, column: 13, scope: !9707)
!9849 = !DILocation(line: 1337, column: 11, scope: !9707)
!9850 = !DILocation(line: 1337, column: 4, scope: !9707)
!9851 = !DILocation(line: 1338, column: 6, scope: !9707)
!9852 = !DILocation(line: 1338, column: 13, scope: !9707)
!9853 = !DILocation(line: 1338, column: 11, scope: !9707)
!9854 = !DILocation(line: 1338, column: 4, scope: !9707)
!9855 = !DILocation(line: 1339, column: 6, scope: !9707)
!9856 = !DILocation(line: 1339, column: 13, scope: !9707)
!9857 = !DILocation(line: 1339, column: 11, scope: !9707)
!9858 = !DILocation(line: 1339, column: 4, scope: !9707)
!9859 = !DILocation(line: 1340, column: 6, scope: !9707)
!9860 = !DILocation(line: 1340, column: 13, scope: !9707)
!9861 = !DILocation(line: 1340, column: 11, scope: !9707)
!9862 = !DILocation(line: 1340, column: 4, scope: !9707)
!9863 = !DILocation(line: 1341, column: 6, scope: !9707)
!9864 = !DILocation(line: 1341, column: 13, scope: !9707)
!9865 = !DILocation(line: 1341, column: 11, scope: !9707)
!9866 = !DILocation(line: 1341, column: 4, scope: !9707)
!9867 = !DILocation(line: 1342, column: 6, scope: !9707)
!9868 = !DILocation(line: 1342, column: 13, scope: !9707)
!9869 = !DILocation(line: 1342, column: 11, scope: !9707)
!9870 = !DILocation(line: 1342, column: 4, scope: !9707)
!9871 = !DILocation(line: 1343, column: 6, scope: !9707)
!9872 = !DILocation(line: 1343, column: 9, scope: !9707)
!9873 = !DILocation(line: 1343, column: 8, scope: !9707)
!9874 = !DILocation(line: 1343, column: 12, scope: !9707)
!9875 = !DILocation(line: 1343, column: 15, scope: !9707)
!9876 = !DILocation(line: 1343, column: 14, scope: !9707)
!9877 = !DILocation(line: 1343, column: 11, scope: !9707)
!9878 = !DILocation(line: 1343, column: 4, scope: !9707)
!9879 = !DILocation(line: 1344, column: 6, scope: !9707)
!9880 = !DILocation(line: 1344, column: 9, scope: !9707)
!9881 = !DILocation(line: 1344, column: 8, scope: !9707)
!9882 = !DILocation(line: 1344, column: 12, scope: !9707)
!9883 = !DILocation(line: 1344, column: 15, scope: !9707)
!9884 = !DILocation(line: 1344, column: 14, scope: !9707)
!9885 = !DILocation(line: 1344, column: 11, scope: !9707)
!9886 = !DILocation(line: 1344, column: 4, scope: !9707)
!9887 = !DILocation(line: 1345, column: 6, scope: !9707)
!9888 = !DILocation(line: 1345, column: 9, scope: !9707)
!9889 = !DILocation(line: 1345, column: 8, scope: !9707)
!9890 = !DILocation(line: 1345, column: 12, scope: !9707)
!9891 = !DILocation(line: 1345, column: 15, scope: !9707)
!9892 = !DILocation(line: 1345, column: 14, scope: !9707)
!9893 = !DILocation(line: 1345, column: 11, scope: !9707)
!9894 = !DILocation(line: 1345, column: 4, scope: !9707)
!9895 = !DILocation(line: 1347, column: 6, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1347, column: 6)
!9897 = !DILocation(line: 1347, column: 8, scope: !9896)
!9898 = !DILocation(line: 1347, column: 6, scope: !9707)
!9899 = !DILocation(line: 1347, column: 16, scope: !9896)
!9900 = !DILocation(line: 1349, column: 8, scope: !9707)
!9901 = !DILocation(line: 1349, column: 11, scope: !9707)
!9902 = !DILocation(line: 1349, column: 10, scope: !9707)
!9903 = !DILocation(line: 1349, column: 19, scope: !9707)
!9904 = !DILocation(line: 1349, column: 22, scope: !9707)
!9905 = !DILocation(line: 1349, column: 21, scope: !9707)
!9906 = !DILocation(line: 1349, column: 17, scope: !9707)
!9907 = !DILocation(line: 1349, column: 29, scope: !9707)
!9908 = !DILocation(line: 1349, column: 28, scope: !9707)
!9909 = !DILocation(line: 1349, column: 34, scope: !9707)
!9910 = !DILocation(line: 1349, column: 32, scope: !9707)
!9911 = !DILocation(line: 1349, column: 5, scope: !9707)
!9912 = !DILocation(line: 1351, column: 16, scope: !9707)
!9913 = !DILocation(line: 1351, column: 8, scope: !9707)
!9914 = !DILocation(line: 1351, column: 7, scope: !9707)
!9915 = !DILocation(line: 1351, column: 27, scope: !9707)
!9916 = !DILocation(line: 1351, column: 19, scope: !9707)
!9917 = !DILocation(line: 1351, column: 18, scope: !9707)
!9918 = !DILocation(line: 1351, column: 5, scope: !9707)
!9919 = !DILocation(line: 1352, column: 16, scope: !9707)
!9920 = !DILocation(line: 1352, column: 8, scope: !9707)
!9921 = !DILocation(line: 1352, column: 7, scope: !9707)
!9922 = !DILocation(line: 1352, column: 27, scope: !9707)
!9923 = !DILocation(line: 1352, column: 19, scope: !9707)
!9924 = !DILocation(line: 1352, column: 18, scope: !9707)
!9925 = !DILocation(line: 1352, column: 5, scope: !9707)
!9926 = !DILocation(line: 1353, column: 16, scope: !9707)
!9927 = !DILocation(line: 1353, column: 8, scope: !9707)
!9928 = !DILocation(line: 1353, column: 21, scope: !9707)
!9929 = !DILocation(line: 1353, column: 20, scope: !9707)
!9930 = !DILocation(line: 1353, column: 35, scope: !9707)
!9931 = !DILocation(line: 1353, column: 27, scope: !9707)
!9932 = !DILocation(line: 1353, column: 25, scope: !9707)
!9933 = !DILocation(line: 1353, column: 5, scope: !9707)
!9934 = !DILocation(line: 1356, column: 9, scope: !9707)
!9935 = !DILocation(line: 1356, column: 16, scope: !9707)
!9936 = !DILocation(line: 1356, column: 7, scope: !9707)
!9937 = !DILocation(line: 1357, column: 13, scope: !9707)
!9938 = !DILocation(line: 1357, column: 20, scope: !9707)
!9939 = !DILocation(line: 1357, column: 26, scope: !9707)
!9940 = !DILocation(line: 1357, column: 32, scope: !9707)
!9941 = !DILocation(line: 1357, column: 31, scope: !9707)
!9942 = !DILocation(line: 1357, column: 25, scope: !9707)
!9943 = !DILocation(line: 1357, column: 10, scope: !9707)
!9944 = !DILocation(line: 1358, column: 6, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1358, column: 6)
!9946 = !DILocation(line: 1358, column: 13, scope: !9945)
!9947 = !DILocation(line: 1358, column: 6, scope: !9707)
!9948 = !DILocation(line: 1359, column: 15, scope: !9945)
!9949 = !DILocation(line: 1359, column: 22, scope: !9945)
!9950 = !DILocation(line: 1359, column: 29, scope: !9945)
!9951 = !DILocation(line: 1359, column: 35, scope: !9945)
!9952 = !DILocation(line: 1359, column: 34, scope: !9945)
!9953 = !DILocation(line: 1359, column: 28, scope: !9945)
!9954 = !DILocation(line: 1359, column: 12, scope: !9945)
!9955 = !DILocation(line: 1359, column: 3, scope: !9945)
!9956 = !DILocation(line: 1362, column: 8, scope: !9707)
!9957 = !DILocation(line: 1362, column: 14, scope: !9707)
!9958 = !DILocation(line: 1362, column: 12, scope: !9707)
!9959 = !DILocation(line: 1362, column: 18, scope: !9707)
!9960 = !DILocation(line: 1362, column: 5, scope: !9707)
!9961 = !DILocation(line: 1363, column: 6, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1363, column: 6)
!9963 = !DILocation(line: 1363, column: 13, scope: !9962)
!9964 = !DILocation(line: 1363, column: 19, scope: !9962)
!9965 = !DILocation(line: 1363, column: 26, scope: !9962)
!9966 = !DILocation(line: 1363, column: 33, scope: !9962)
!9967 = !DILocation(line: 1363, column: 39, scope: !9962)
!9968 = !DILocation(line: 1363, column: 24, scope: !9962)
!9969 = !DILocation(line: 1363, column: 6, scope: !9707)
!9970 = !DILocation(line: 1364, column: 10, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 1363, column: 45)
!9972 = !DILocation(line: 1364, column: 17, scope: !9971)
!9973 = !DILocation(line: 1364, column: 23, scope: !9971)
!9974 = !DILocation(line: 1364, column: 22, scope: !9971)
!9975 = !DILocation(line: 1364, column: 8, scope: !9971)
!9976 = !DILocation(line: 1365, column: 10, scope: !9971)
!9977 = !DILocation(line: 1365, column: 17, scope: !9971)
!9978 = !DILocation(line: 1365, column: 23, scope: !9971)
!9979 = !DILocation(line: 1365, column: 22, scope: !9971)
!9980 = !DILocation(line: 1365, column: 8, scope: !9971)
!9981 = !DILocation(line: 1366, column: 2, scope: !9971)
!9982 = !DILocation(line: 1368, column: 10, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 1367, column: 7)
!9984 = !DILocation(line: 1368, column: 17, scope: !9983)
!9985 = !DILocation(line: 1368, column: 23, scope: !9983)
!9986 = !DILocation(line: 1368, column: 22, scope: !9983)
!9987 = !DILocation(line: 1368, column: 8, scope: !9983)
!9988 = !DILocation(line: 1369, column: 10, scope: !9983)
!9989 = !DILocation(line: 1369, column: 17, scope: !9983)
!9990 = !DILocation(line: 1369, column: 23, scope: !9983)
!9991 = !DILocation(line: 1369, column: 22, scope: !9983)
!9992 = !DILocation(line: 1369, column: 8, scope: !9983)
!9993 = !DILocation(line: 1372, column: 9, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1372, column: 2)
!9995 = !DILocation(line: 1372, column: 8, scope: !9994)
!9996 = !DILocation(line: 1372, column: 7, scope: !9994)
!9997 = !DILocation(line: 1372, column: 14, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 1372, column: 2)
!9999 = !DILocation(line: 1372, column: 17, scope: !9998)
!10000 = !DILocation(line: 1372, column: 15, scope: !9998)
!10001 = !DILocation(line: 1372, column: 2, scope: !9994)
!10002 = !DILocation(line: 1374, column: 15, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1372, column: 45)
!10004 = !DILocation(line: 1374, column: 14, scope: !10003)
!10005 = !DILocation(line: 1374, column: 8, scope: !10003)
!10006 = !DILocation(line: 1374, column: 6, scope: !10003)
!10007 = !DILocation(line: 1375, column: 15, scope: !10003)
!10008 = !DILocation(line: 1375, column: 14, scope: !10003)
!10009 = !DILocation(line: 1375, column: 8, scope: !10003)
!10010 = !DILocation(line: 1375, column: 6, scope: !10003)
!10011 = !DILocation(line: 1376, column: 6, scope: !10003)
!10012 = !DILocation(line: 1378, column: 7, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1378, column: 7)
!10014 = !DILocation(line: 1378, column: 12, scope: !10013)
!10015 = !DILocation(line: 1378, column: 10, scope: !10013)
!10016 = !DILocation(line: 1378, column: 7, scope: !10003)
!10017 = !DILocation(line: 1378, column: 24, scope: !10013)
!10018 = !DILocation(line: 1378, column: 29, scope: !10013)
!10019 = !DILocation(line: 1378, column: 22, scope: !10013)
!10020 = !DILocation(line: 1378, column: 19, scope: !10013)
!10021 = !DILocation(line: 1379, column: 7, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1379, column: 7)
!10023 = !DILocation(line: 1379, column: 10, scope: !10022)
!10024 = !DILocation(line: 1379, column: 7, scope: !10003)
!10025 = !DILocation(line: 1379, column: 17, scope: !10022)
!10026 = !DILocation(line: 1379, column: 14, scope: !10022)
!10027 = !DILocation(line: 1381, column: 7, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1381, column: 7)
!10029 = !DILocation(line: 1381, column: 12, scope: !10028)
!10030 = !DILocation(line: 1381, column: 10, scope: !10028)
!10031 = !DILocation(line: 1381, column: 7, scope: !10003)
!10032 = !DILocation(line: 1382, column: 19, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1381, column: 17)
!10034 = !DILocation(line: 1382, column: 11, scope: !10033)
!10035 = !DILocation(line: 1382, column: 23, scope: !10033)
!10036 = !DILocation(line: 1382, column: 22, scope: !10033)
!10037 = !DILocation(line: 1382, column: 29, scope: !10033)
!10038 = !DILocation(line: 1382, column: 27, scope: !10033)
!10039 = !DILocation(line: 1382, column: 9, scope: !10033)
!10040 = !DILocation(line: 1383, column: 8, scope: !10033)
!10041 = !DILocation(line: 1383, column: 17, scope: !10033)
!10042 = !DILocation(line: 1383, column: 16, scope: !10033)
!10043 = !DILocation(line: 1383, column: 6, scope: !10033)
!10044 = !DILocation(line: 1384, column: 9, scope: !10033)
!10045 = !DILocation(line: 1384, column: 19, scope: !10033)
!10046 = !DILocation(line: 1384, column: 18, scope: !10033)
!10047 = !DILocation(line: 1384, column: 7, scope: !10033)
!10048 = !DILocation(line: 1385, column: 7, scope: !10033)
!10049 = !DILocation(line: 1385, column: 11, scope: !10033)
!10050 = !DILocation(line: 1385, column: 10, scope: !10033)
!10051 = !DILocation(line: 1385, column: 5, scope: !10033)
!10052 = !DILocation(line: 1387, column: 4, scope: !10033)
!10053 = !DILocation(line: 1387, column: 11, scope: !10033)
!10054 = !DILocation(line: 1387, column: 12, scope: !10033)
!10055 = !DILocalVariable(name: "zvergi", scope: !10056, file: !3, line: 1388, type: !29)
!10056 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 1387, column: 17)
!10057 = !DILocation(line: 1388, column: 9, scope: !10056)
!10058 = !DILocation(line: 1388, column: 22, scope: !10056)
!10059 = !DILocation(line: 1388, column: 17, scope: !10056)
!10060 = !DILocation(line: 1391, column: 9, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 1391, column: 9)
!10062 = !DILocation(line: 1391, column: 19, scope: !10061)
!10063 = !DILocation(line: 1391, column: 18, scope: !10061)
!10064 = !DILocation(line: 1391, column: 16, scope: !10061)
!10065 = !DILocation(line: 1391, column: 9, scope: !10056)
!10066 = !DILocation(line: 1392, column: 10, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 1392, column: 10)
!10068 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1391, column: 23)
!10069 = !DILocation(line: 1392, column: 10, scope: !10068)
!10070 = !DILocation(line: 1392, column: 28, scope: !10067)
!10071 = !DILocation(line: 1392, column: 27, scope: !10067)
!10072 = !DILocation(line: 1392, column: 22, scope: !10067)
!10073 = !DILocation(line: 1392, column: 25, scope: !10067)
!10074 = !DILocation(line: 1392, column: 21, scope: !10067)
!10075 = !DILocation(line: 1393, column: 11, scope: !10068)
!10076 = !DILocation(line: 1393, column: 7, scope: !10068)
!10077 = !DILocation(line: 1393, column: 9, scope: !10068)
!10078 = !DILocation(line: 1394, column: 5, scope: !10068)
!10079 = !DILocation(line: 1395, column: 14, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1395, column: 14)
!10081 = !DILocation(line: 1395, column: 24, scope: !10080)
!10082 = !DILocation(line: 1395, column: 27, scope: !10080)
!10083 = !DILocation(line: 1395, column: 37, scope: !10080)
!10084 = !DILocation(line: 1395, column: 36, scope: !10080)
!10085 = !DILocation(line: 1395, column: 34, scope: !10080)
!10086 = !DILocation(line: 1395, column: 14, scope: !10061)
!10087 = !DILocation(line: 1396, column: 12, scope: !10080)
!10088 = !DILocation(line: 1396, column: 7, scope: !10080)
!10089 = !DILocation(line: 1396, column: 10, scope: !10080)
!10090 = !DILocation(line: 1396, column: 6, scope: !10080)
!10091 = !DILocation(line: 1398, column: 13, scope: !10056)
!10092 = !DILocation(line: 1398, column: 10, scope: !10056)
!10093 = !DILocation(line: 1400, column: 7, scope: !10056)
!10094 = !DILocation(line: 1401, column: 8, scope: !10056)
!10095 = !DILocation(line: 1402, column: 6, scope: !10056)
!10096 = distinct !{!10096, !10052, !10097}
!10097 = !DILocation(line: 1403, column: 4, scope: !10033)
!10098 = !DILocation(line: 1404, column: 3, scope: !10033)
!10099 = !DILocation(line: 1406, column: 8, scope: !10003)
!10100 = !DILocation(line: 1406, column: 6, scope: !10003)
!10101 = !DILocation(line: 1407, column: 14, scope: !10003)
!10102 = !DILocation(line: 1407, column: 11, scope: !10003)
!10103 = !DILocation(line: 1408, column: 7, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1408, column: 7)
!10105 = !DILocation(line: 1408, column: 7, scope: !10003)
!10106 = !DILocation(line: 1408, column: 30, scope: !10104)
!10107 = !DILocation(line: 1408, column: 27, scope: !10104)
!10108 = !DILocation(line: 1408, column: 18, scope: !10104)
!10109 = !DILocation(line: 1409, column: 2, scope: !10003)
!10110 = !DILocation(line: 1372, column: 23, scope: !9998)
!10111 = !DILocation(line: 1372, column: 32, scope: !9998)
!10112 = !DILocation(line: 1372, column: 41, scope: !9998)
!10113 = !DILocation(line: 1372, column: 2, scope: !9998)
!10114 = distinct !{!10114, !10001, !10115}
!10115 = !DILocation(line: 1409, column: 2, scope: !9994)
!10116 = !DILocation(line: 1410, column: 1, scope: !9707)
!10117 = distinct !DISubprogram(name: "zbuf_shadow_project", scope: !3, file: !3, line: 1764, type: !10118, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!29, !7984, !29, !2281, !31, !31}
!10120 = !DILocalVariable(name: "cache", arg: 1, scope: !10117, file: !3, line: 1764, type: !7984)
!10121 = !DILocation(line: 1764, column: 50, scope: !10117)
!10122 = !DILocalVariable(name: "index", arg: 2, scope: !10117, file: !3, line: 1764, type: !29)
!10123 = !DILocation(line: 1764, column: 61, scope: !10117)
!10124 = !DILocalVariable(name: "winmat", arg: 3, scope: !10117, file: !3, line: 1764, type: !2281)
!10125 = !DILocation(line: 1764, column: 74, scope: !10117)
!10126 = !DILocalVariable(name: "co", arg: 4, scope: !10117, file: !3, line: 1764, type: !31)
!10127 = !DILocation(line: 1764, column: 95, scope: !10117)
!10128 = !DILocalVariable(name: "ho", arg: 5, scope: !10117, file: !3, line: 1764, type: !31)
!10129 = !DILocation(line: 1764, column: 106, scope: !10117)
!10130 = !DILocalVariable(name: "cindex", scope: !10117, file: !3, line: 1766, type: !29)
!10131 = !DILocation(line: 1766, column: 6, scope: !10117)
!10132 = !DILocation(line: 1766, column: 14, scope: !10117)
!10133 = !DILocation(line: 1766, column: 20, scope: !10117)
!10134 = !DILocation(line: 1768, column: 6, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1768, column: 6)
!10136 = !DILocation(line: 1768, column: 12, scope: !10135)
!10137 = !DILocation(line: 1768, column: 20, scope: !10135)
!10138 = !DILocation(line: 1768, column: 29, scope: !10135)
!10139 = !DILocation(line: 1768, column: 26, scope: !10135)
!10140 = !DILocation(line: 1768, column: 6, scope: !10117)
!10141 = !DILocation(line: 1769, column: 14, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 1768, column: 36)
!10143 = !DILocation(line: 1769, column: 18, scope: !10142)
!10144 = !DILocation(line: 1769, column: 24, scope: !10142)
!10145 = !DILocation(line: 1769, column: 32, scope: !10142)
!10146 = !DILocation(line: 1769, column: 3, scope: !10142)
!10147 = !DILocation(line: 1770, column: 10, scope: !10142)
!10148 = !DILocation(line: 1770, column: 16, scope: !10142)
!10149 = !DILocation(line: 1770, column: 24, scope: !10142)
!10150 = !DILocation(line: 1770, column: 3, scope: !10142)
!10151 = !DILocalVariable(name: "clipflag", scope: !10152, file: !3, line: 1773, type: !29)
!10152 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 1772, column: 7)
!10153 = !DILocation(line: 1773, column: 7, scope: !10152)
!10154 = !DILocation(line: 1774, column: 15, scope: !10152)
!10155 = !DILocation(line: 1774, column: 19, scope: !10152)
!10156 = !DILocation(line: 1774, column: 27, scope: !10152)
!10157 = !DILocation(line: 1774, column: 3, scope: !10152)
!10158 = !DILocation(line: 1775, column: 22, scope: !10152)
!10159 = !DILocation(line: 1775, column: 13, scope: !10152)
!10160 = !DILocation(line: 1775, column: 11, scope: !10152)
!10161 = !DILocation(line: 1777, column: 14, scope: !10152)
!10162 = !DILocation(line: 1777, column: 20, scope: !10152)
!10163 = !DILocation(line: 1777, column: 28, scope: !10152)
!10164 = !DILocation(line: 1777, column: 32, scope: !10152)
!10165 = !DILocation(line: 1777, column: 3, scope: !10152)
!10166 = !DILocation(line: 1778, column: 23, scope: !10152)
!10167 = !DILocation(line: 1778, column: 3, scope: !10152)
!10168 = !DILocation(line: 1778, column: 9, scope: !10152)
!10169 = !DILocation(line: 1778, column: 17, scope: !10152)
!10170 = !DILocation(line: 1778, column: 21, scope: !10152)
!10171 = !DILocation(line: 1779, column: 24, scope: !10152)
!10172 = !DILocation(line: 1779, column: 3, scope: !10152)
!10173 = !DILocation(line: 1779, column: 9, scope: !10152)
!10174 = !DILocation(line: 1779, column: 17, scope: !10152)
!10175 = !DILocation(line: 1779, column: 22, scope: !10152)
!10176 = !DILocation(line: 1781, column: 10, scope: !10152)
!10177 = !DILocation(line: 1781, column: 3, scope: !10152)
!10178 = !DILocation(line: 1783, column: 1, scope: !10117)
!10179 = distinct !DISubprogram(name: "zbuffer_sss", scope: !3, file: !3, line: 2541, type: !10180, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !5587, !36, !79, !195}
!10182 = !DILocalVariable(name: "pa", arg: 1, scope: !10179, file: !3, line: 2541, type: !5587)
!10183 = !DILocation(line: 2541, column: 30, scope: !10179)
!10184 = !DILocalVariable(name: "lay", arg: 2, scope: !10179, file: !3, line: 2541, type: !36)
!10185 = !DILocation(line: 2541, column: 47, scope: !10179)
!10186 = !DILocalVariable(name: "handle", arg: 3, scope: !10179, file: !3, line: 2541, type: !79)
!10187 = !DILocation(line: 2541, column: 58, scope: !10179)
!10188 = !DILocalVariable(name: "func", arg: 4, scope: !10179, file: !3, line: 2541, type: !195)
!10189 = !DILocation(line: 2541, column: 73, scope: !10179)
!10190 = !DILocalVariable(name: "cache", scope: !10179, file: !3, line: 2543, type: !5631)
!10191 = !DILocation(line: 2543, column: 19, scope: !10179)
!10192 = !DILocalVariable(name: "zspan", scope: !10179, file: !3, line: 2544, type: !121)
!10193 = !DILocation(line: 2544, column: 8, scope: !10179)
!10194 = !DILocalVariable(name: "obi", scope: !10179, file: !3, line: 2545, type: !5663)
!10195 = !DILocation(line: 2545, column: 21, scope: !10179)
!10196 = !DILocalVariable(name: "obr", scope: !10179, file: !3, line: 2546, type: !4395)
!10197 = !DILocation(line: 2546, column: 13, scope: !10179)
!10198 = !DILocalVariable(name: "vlr", scope: !10179, file: !3, line: 2547, type: !5645)
!10199 = !DILocation(line: 2547, column: 11, scope: !10179)
!10200 = !DILocalVariable(name: "v1", scope: !10179, file: !3, line: 2548, type: !5649)
!10201 = !DILocation(line: 2548, column: 11, scope: !10179)
!10202 = !DILocalVariable(name: "v2", scope: !10179, file: !3, line: 2548, type: !5649)
!10203 = !DILocation(line: 2548, column: 16, scope: !10179)
!10204 = !DILocalVariable(name: "v3", scope: !10179, file: !3, line: 2548, type: !5649)
!10205 = !DILocation(line: 2548, column: 21, scope: !10179)
!10206 = !DILocalVariable(name: "v4", scope: !10179, file: !3, line: 2548, type: !5649)
!10207 = !DILocation(line: 2548, column: 26, scope: !10179)
!10208 = !DILocalVariable(name: "ma", scope: !10179, file: !3, line: 2549, type: !5659)
!10209 = !DILocation(line: 2549, column: 12, scope: !10179)
!10210 = !DILocalVariable(name: "sss_ma", scope: !10179, file: !3, line: 2549, type: !5659)
!10211 = !DILocation(line: 2549, column: 24, scope: !10179)
!10212 = !DILocation(line: 2549, column: 35, scope: !10179)
!10213 = !DILocalVariable(name: "obwinmat", scope: !10179, file: !3, line: 2550, type: !2892)
!10214 = !DILocation(line: 2550, column: 8, scope: !10179)
!10215 = !DILocalVariable(name: "winmat", scope: !10179, file: !3, line: 2550, type: !2892)
!10216 = !DILocation(line: 2550, column: 24, scope: !10179)
!10217 = !DILocalVariable(name: "bounds", scope: !10179, file: !3, line: 2550, type: !176)
!10218 = !DILocation(line: 2550, column: 38, scope: !10179)
!10219 = !DILocalVariable(name: "ho1", scope: !10179, file: !3, line: 2551, type: !176)
!10220 = !DILocation(line: 2551, column: 8, scope: !10179)
!10221 = !DILocalVariable(name: "ho2", scope: !10179, file: !3, line: 2551, type: !176)
!10222 = !DILocation(line: 2551, column: 16, scope: !10179)
!10223 = !DILocalVariable(name: "ho3", scope: !10179, file: !3, line: 2551, type: !176)
!10224 = !DILocation(line: 2551, column: 24, scope: !10179)
!10225 = !DILocalVariable(name: "ho4", scope: !10179, file: !3, line: 2551, type: !176)
!10226 = !DILocation(line: 2551, column: 32, scope: !10179)
!10227 = !DILocalVariable(name: "i", scope: !10179, file: !3, line: 2552, type: !29)
!10228 = !DILocation(line: 2552, column: 6, scope: !10179)
!10229 = !DILocalVariable(name: "v", scope: !10179, file: !3, line: 2552, type: !29)
!10230 = !DILocation(line: 2552, column: 9, scope: !10179)
!10231 = !DILocalVariable(name: "zvlnr", scope: !10179, file: !3, line: 2552, type: !29)
!10232 = !DILocation(line: 2552, column: 12, scope: !10179)
!10233 = !DILocalVariable(name: "c1", scope: !10179, file: !3, line: 2552, type: !29)
!10234 = !DILocation(line: 2552, column: 19, scope: !10179)
!10235 = !DILocalVariable(name: "c2", scope: !10179, file: !3, line: 2552, type: !29)
!10236 = !DILocation(line: 2552, column: 23, scope: !10179)
!10237 = !DILocalVariable(name: "c3", scope: !10179, file: !3, line: 2552, type: !29)
!10238 = !DILocation(line: 2552, column: 27, scope: !10179)
!10239 = !DILocalVariable(name: "c4", scope: !10179, file: !3, line: 2552, type: !29)
!10240 = !DILocation(line: 2552, column: 31, scope: !10179)
!10241 = !DILocalVariable(name: "nofill", scope: !10179, file: !3, line: 2553, type: !12)
!10242 = !DILocation(line: 2553, column: 8, scope: !10179)
!10243 = !DILocalVariable(name: "env", scope: !10179, file: !3, line: 2553, type: !12)
!10244 = !DILocation(line: 2553, column: 18, scope: !10179)
!10245 = !DILocalVariable(name: "wire", scope: !10179, file: !3, line: 2553, type: !12)
!10246 = !DILocation(line: 2553, column: 25, scope: !10179)
!10247 = !DILocation(line: 2555, column: 23, scope: !10179)
!10248 = !DILocation(line: 2555, column: 2, scope: !10179)
!10249 = !DILocation(line: 2556, column: 24, scope: !10179)
!10250 = !DILocation(line: 2556, column: 32, scope: !10179)
!10251 = !DILocation(line: 2556, column: 38, scope: !10179)
!10252 = !DILocation(line: 2556, column: 42, scope: !10179)
!10253 = !DILocation(line: 2556, column: 2, scope: !10179)
!10254 = !DILocation(line: 2557, column: 26, scope: !10179)
!10255 = !DILocation(line: 2557, column: 30, scope: !10179)
!10256 = !DILocation(line: 2557, column: 37, scope: !10179)
!10257 = !DILocation(line: 2557, column: 41, scope: !10179)
!10258 = !DILocation(line: 2557, column: 50, scope: !10179)
!10259 = !DILocation(line: 2557, column: 2, scope: !10179)
!10260 = !DILocation(line: 2559, column: 20, scope: !10179)
!10261 = !DILocation(line: 2559, column: 8, scope: !10179)
!10262 = !DILocation(line: 2559, column: 18, scope: !10179)
!10263 = !DILocation(line: 2560, column: 18, scope: !10179)
!10264 = !DILocation(line: 2560, column: 8, scope: !10179)
!10265 = !DILocation(line: 2560, column: 16, scope: !10179)
!10266 = !DILocation(line: 2563, column: 26, scope: !10179)
!10267 = !DILocation(line: 2563, column: 17, scope: !10179)
!10268 = !DILocation(line: 2563, column: 31, scope: !10179)
!10269 = !DILocation(line: 2563, column: 8, scope: !10179)
!10270 = !DILocation(line: 2563, column: 13, scope: !10179)
!10271 = !DILocation(line: 2564, column: 26, scope: !10179)
!10272 = !DILocation(line: 2564, column: 17, scope: !10179)
!10273 = !DILocation(line: 2564, column: 31, scope: !10179)
!10274 = !DILocation(line: 2564, column: 8, scope: !10179)
!10275 = !DILocation(line: 2564, column: 13, scope: !10179)
!10276 = !DILocation(line: 2567, column: 16, scope: !10179)
!10277 = !DILocation(line: 2567, column: 20, scope: !10179)
!10278 = !DILocation(line: 2567, column: 29, scope: !10179)
!10279 = !DILocation(line: 2567, column: 15, scope: !10179)
!10280 = !DILocation(line: 2567, column: 34, scope: !10179)
!10281 = !DILocation(line: 2567, column: 8, scope: !10179)
!10282 = !DILocation(line: 2567, column: 13, scope: !10179)
!10283 = !DILocation(line: 2568, column: 16, scope: !10179)
!10284 = !DILocation(line: 2568, column: 20, scope: !10179)
!10285 = !DILocation(line: 2568, column: 29, scope: !10179)
!10286 = !DILocation(line: 2568, column: 15, scope: !10179)
!10287 = !DILocation(line: 2568, column: 34, scope: !10179)
!10288 = !DILocation(line: 2568, column: 8, scope: !10179)
!10289 = !DILocation(line: 2568, column: 13, scope: !10179)
!10290 = !DILocation(line: 2571, column: 8, scope: !10179)
!10291 = !DILocation(line: 2571, column: 16, scope: !10179)
!10292 = !DILocation(line: 2574, column: 6, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 2574, column: 6)
!10294 = !DILocation(line: 2574, column: 10, scope: !10293)
!10295 = !DILocation(line: 2574, column: 6, scope: !10179)
!10296 = !DILocation(line: 2575, column: 12, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 2574, column: 17)
!10298 = !DILocation(line: 2575, column: 16, scope: !10297)
!10299 = !DILocation(line: 2575, column: 23, scope: !10297)
!10300 = !DILocation(line: 2575, column: 27, scope: !10297)
!10301 = !DILocation(line: 2575, column: 34, scope: !10297)
!10302 = !DILocation(line: 2575, column: 38, scope: !10297)
!10303 = !DILocation(line: 2575, column: 3, scope: !10297)
!10304 = !DILocation(line: 2576, column: 12, scope: !10297)
!10305 = !DILocation(line: 2576, column: 16, scope: !10297)
!10306 = !DILocation(line: 2576, column: 23, scope: !10297)
!10307 = !DILocation(line: 2576, column: 27, scope: !10297)
!10308 = !DILocation(line: 2576, column: 34, scope: !10297)
!10309 = !DILocation(line: 2576, column: 38, scope: !10297)
!10310 = !DILocation(line: 2576, column: 3, scope: !10297)
!10311 = !DILocation(line: 2577, column: 12, scope: !10297)
!10312 = !DILocation(line: 2577, column: 16, scope: !10297)
!10313 = !DILocation(line: 2577, column: 23, scope: !10297)
!10314 = !DILocation(line: 2577, column: 27, scope: !10297)
!10315 = !DILocation(line: 2577, column: 34, scope: !10297)
!10316 = !DILocation(line: 2577, column: 38, scope: !10297)
!10317 = !DILocation(line: 2577, column: 3, scope: !10297)
!10318 = !DILocation(line: 2578, column: 2, scope: !10297)
!10319 = !DILocation(line: 2579, column: 6, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 2579, column: 6)
!10321 = !DILocation(line: 2579, column: 10, scope: !10320)
!10322 = !DILocation(line: 2579, column: 6, scope: !10179)
!10323 = !DILocation(line: 2580, column: 12, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 2579, column: 21)
!10325 = !DILocation(line: 2580, column: 16, scope: !10324)
!10326 = !DILocation(line: 2580, column: 27, scope: !10324)
!10327 = !DILocation(line: 2580, column: 31, scope: !10324)
!10328 = !DILocation(line: 2580, column: 38, scope: !10324)
!10329 = !DILocation(line: 2580, column: 42, scope: !10324)
!10330 = !DILocation(line: 2580, column: 3, scope: !10324)
!10331 = !DILocation(line: 2581, column: 12, scope: !10324)
!10332 = !DILocation(line: 2581, column: 16, scope: !10324)
!10333 = !DILocation(line: 2581, column: 27, scope: !10324)
!10334 = !DILocation(line: 2581, column: 31, scope: !10324)
!10335 = !DILocation(line: 2581, column: 38, scope: !10324)
!10336 = !DILocation(line: 2581, column: 42, scope: !10324)
!10337 = !DILocation(line: 2581, column: 3, scope: !10324)
!10338 = !DILocation(line: 2582, column: 12, scope: !10324)
!10339 = !DILocation(line: 2582, column: 16, scope: !10324)
!10340 = !DILocation(line: 2582, column: 27, scope: !10324)
!10341 = !DILocation(line: 2582, column: 31, scope: !10324)
!10342 = !DILocation(line: 2582, column: 38, scope: !10324)
!10343 = !DILocation(line: 2582, column: 42, scope: !10324)
!10344 = !DILocation(line: 2582, column: 3, scope: !10324)
!10345 = !DILocation(line: 2583, column: 2, scope: !10324)
!10346 = !DILocation(line: 2585, column: 8, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 2585, column: 2)
!10348 = !DILocation(line: 2585, column: 32, scope: !10347)
!10349 = !DILocation(line: 2585, column: 16, scope: !10347)
!10350 = !DILocation(line: 2585, column: 15, scope: !10347)
!10351 = !DILocation(line: 2585, column: 7, scope: !10347)
!10352 = !DILocation(line: 2585, column: 39, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 2585, column: 2)
!10354 = !DILocation(line: 2585, column: 2, scope: !10347)
!10355 = !DILocation(line: 2586, column: 8, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 2585, column: 64)
!10357 = !DILocation(line: 2586, column: 13, scope: !10356)
!10358 = !DILocation(line: 2586, column: 6, scope: !10356)
!10359 = !DILocation(line: 2588, column: 9, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 2588, column: 7)
!10361 = !DILocation(line: 2588, column: 14, scope: !10360)
!10362 = !DILocation(line: 2588, column: 20, scope: !10360)
!10363 = !DILocation(line: 2588, column: 18, scope: !10360)
!10364 = !DILocation(line: 2588, column: 7, scope: !10356)
!10365 = !DILocation(line: 2589, column: 4, scope: !10360)
!10366 = !DILocation(line: 2591, column: 7, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 2591, column: 7)
!10368 = !DILocation(line: 2591, column: 12, scope: !10367)
!10369 = !DILocation(line: 2591, column: 17, scope: !10367)
!10370 = !DILocation(line: 2591, column: 7, scope: !10356)
!10371 = !DILocation(line: 2592, column: 16, scope: !10367)
!10372 = !DILocation(line: 2592, column: 26, scope: !10367)
!10373 = !DILocation(line: 2592, column: 34, scope: !10367)
!10374 = !DILocation(line: 2592, column: 39, scope: !10367)
!10375 = !DILocation(line: 2592, column: 4, scope: !10367)
!10376 = !DILocation(line: 2594, column: 15, scope: !10367)
!10377 = !DILocation(line: 2594, column: 25, scope: !10367)
!10378 = !DILocation(line: 2594, column: 4, scope: !10367)
!10379 = !DILocation(line: 2596, column: 26, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 2596, column: 7)
!10381 = !DILocation(line: 2596, column: 31, scope: !10380)
!10382 = !DILocation(line: 2596, column: 36, scope: !10380)
!10383 = !DILocation(line: 2596, column: 46, scope: !10380)
!10384 = !DILocation(line: 2596, column: 54, scope: !10380)
!10385 = !DILocation(line: 2596, column: 7, scope: !10380)
!10386 = !DILocation(line: 2596, column: 7, scope: !10356)
!10387 = !DILocation(line: 2597, column: 4, scope: !10380)
!10388 = !DILocation(line: 2599, column: 28, scope: !10356)
!10389 = !DILocation(line: 2599, column: 35, scope: !10356)
!10390 = !DILocation(line: 2599, column: 40, scope: !10356)
!10391 = !DILocation(line: 2599, column: 3, scope: !10356)
!10392 = !DILocation(line: 2601, column: 9, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 2601, column: 3)
!10394 = !DILocation(line: 2601, column: 8, scope: !10393)
!10395 = !DILocation(line: 2601, column: 13, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 2601, column: 3)
!10397 = !DILocation(line: 2601, column: 15, scope: !10396)
!10398 = !DILocation(line: 2601, column: 20, scope: !10396)
!10399 = !DILocation(line: 2601, column: 14, scope: !10396)
!10400 = !DILocation(line: 2601, column: 3, scope: !10393)
!10401 = !DILocation(line: 2602, column: 9, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 2602, column: 8)
!10403 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 2601, column: 34)
!10404 = !DILocation(line: 2602, column: 11, scope: !10402)
!10405 = !DILocation(line: 2602, column: 17, scope: !10402)
!10406 = !DILocation(line: 2602, column: 8, scope: !10403)
!10407 = !DILocation(line: 2602, column: 27, scope: !10402)
!10408 = !DILocation(line: 2602, column: 32, scope: !10402)
!10409 = !DILocation(line: 2602, column: 42, scope: !10402)
!10410 = !DILocation(line: 2602, column: 43, scope: !10402)
!10411 = !DILocation(line: 2602, column: 48, scope: !10402)
!10412 = !DILocation(line: 2602, column: 25, scope: !10402)
!10413 = !DILocation(line: 2602, column: 22, scope: !10402)
!10414 = !DILocation(line: 2603, column: 12, scope: !10402)
!10415 = !DILocation(line: 2605, column: 29, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 2605, column: 8)
!10417 = !DILocation(line: 2605, column: 34, scope: !10416)
!10418 = !DILocation(line: 2605, column: 39, scope: !10416)
!10419 = !DILocation(line: 2605, column: 8, scope: !10416)
!10420 = !DILocation(line: 2605, column: 8, scope: !10403)
!10421 = !DILocation(line: 2607, column: 9, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2607, column: 9)
!10423 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 2605, column: 48)
!10424 = !DILocation(line: 2607, column: 14, scope: !10422)
!10425 = !DILocation(line: 2607, column: 20, scope: !10422)
!10426 = !DILocation(line: 2607, column: 18, scope: !10422)
!10427 = !DILocation(line: 2607, column: 9, scope: !10423)
!10428 = !DILocation(line: 2608, column: 10, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2608, column: 10)
!10430 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 2607, column: 25)
!10431 = !DILocation(line: 2608, column: 15, scope: !10429)
!10432 = !DILocation(line: 2608, column: 20, scope: !10429)
!10433 = !DILocation(line: 2608, column: 18, scope: !10429)
!10434 = !DILocation(line: 2608, column: 10, scope: !10430)
!10435 = !DILocation(line: 2609, column: 11, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2608, column: 24)
!10437 = !DILocation(line: 2609, column: 16, scope: !10436)
!10438 = !DILocation(line: 2609, column: 9, scope: !10436)
!10439 = !DILocation(line: 2610, column: 15, scope: !10436)
!10440 = !DILocation(line: 2610, column: 19, scope: !10436)
!10441 = !DILocation(line: 2610, column: 24, scope: !10436)
!10442 = !DILocation(line: 2610, column: 13, scope: !10436)
!10443 = !DILocation(line: 2611, column: 13, scope: !10436)
!10444 = !DILocation(line: 2611, column: 17, scope: !10436)
!10445 = !DILocation(line: 2611, column: 22, scope: !10436)
!10446 = !DILocation(line: 2611, column: 12, scope: !10436)
!10447 = !DILocation(line: 2611, column: 10, scope: !10436)
!10448 = !DILocation(line: 2612, column: 14, scope: !10436)
!10449 = !DILocation(line: 2612, column: 18, scope: !10436)
!10450 = !DILocation(line: 2612, column: 32, scope: !10436)
!10451 = !DILocation(line: 2612, column: 13, scope: !10436)
!10452 = !DILocation(line: 2612, column: 11, scope: !10436)
!10453 = !DILocation(line: 2613, column: 6, scope: !10436)
!10454 = !DILocation(line: 2614, column: 5, scope: !10430)
!10455 = !DILocation(line: 2616, column: 12, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 2615, column: 10)
!10457 = !DILocation(line: 2617, column: 8, scope: !10456)
!10458 = !DILocation(line: 2620, column: 9, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2620, column: 9)
!10460 = !DILocation(line: 2620, column: 15, scope: !10459)
!10461 = !DILocation(line: 2620, column: 19, scope: !10459)
!10462 = !DILocation(line: 2620, column: 22, scope: !10459)
!10463 = !DILocation(line: 2620, column: 26, scope: !10459)
!10464 = !DILocation(line: 2620, column: 30, scope: !10459)
!10465 = !DILocation(line: 2620, column: 33, scope: !10459)
!10466 = !DILocation(line: 2620, column: 36, scope: !10459)
!10467 = !DILocation(line: 2620, column: 9, scope: !10423)
!10468 = !DILocalVariable(name: "partclip", scope: !10469, file: !3, line: 2621, type: !103)
!10469 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 2620, column: 41)
!10470 = !DILocation(line: 2621, column: 21, scope: !10469)
!10471 = !DILocation(line: 2623, column: 10, scope: !10469)
!10472 = !DILocation(line: 2623, column: 15, scope: !10469)
!10473 = !DILocation(line: 2623, column: 8, scope: !10469)
!10474 = !DILocation(line: 2624, column: 10, scope: !10469)
!10475 = !DILocation(line: 2624, column: 15, scope: !10469)
!10476 = !DILocation(line: 2624, column: 8, scope: !10469)
!10477 = !DILocation(line: 2625, column: 10, scope: !10469)
!10478 = !DILocation(line: 2625, column: 15, scope: !10469)
!10479 = !DILocation(line: 2625, column: 8, scope: !10469)
!10480 = !DILocation(line: 2626, column: 10, scope: !10469)
!10481 = !DILocation(line: 2626, column: 15, scope: !10469)
!10482 = !DILocation(line: 2626, column: 8, scope: !10469)
!10483 = !DILocation(line: 2628, column: 28, scope: !10469)
!10484 = !DILocation(line: 2628, column: 35, scope: !10469)
!10485 = !DILocation(line: 2628, column: 39, scope: !10469)
!10486 = !DILocation(line: 2628, column: 46, scope: !10469)
!10487 = !DILocation(line: 2628, column: 56, scope: !10469)
!10488 = !DILocation(line: 2628, column: 64, scope: !10469)
!10489 = !DILocation(line: 2628, column: 68, scope: !10469)
!10490 = !DILocation(line: 2628, column: 72, scope: !10469)
!10491 = !DILocation(line: 2628, column: 10, scope: !10469)
!10492 = !DILocation(line: 2628, column: 8, scope: !10469)
!10493 = !DILocation(line: 2629, column: 28, scope: !10469)
!10494 = !DILocation(line: 2629, column: 35, scope: !10469)
!10495 = !DILocation(line: 2629, column: 39, scope: !10469)
!10496 = !DILocation(line: 2629, column: 46, scope: !10469)
!10497 = !DILocation(line: 2629, column: 56, scope: !10469)
!10498 = !DILocation(line: 2629, column: 64, scope: !10469)
!10499 = !DILocation(line: 2629, column: 68, scope: !10469)
!10500 = !DILocation(line: 2629, column: 72, scope: !10469)
!10501 = !DILocation(line: 2629, column: 10, scope: !10469)
!10502 = !DILocation(line: 2629, column: 8, scope: !10469)
!10503 = !DILocation(line: 2630, column: 28, scope: !10469)
!10504 = !DILocation(line: 2630, column: 35, scope: !10469)
!10505 = !DILocation(line: 2630, column: 39, scope: !10469)
!10506 = !DILocation(line: 2630, column: 46, scope: !10469)
!10507 = !DILocation(line: 2630, column: 56, scope: !10469)
!10508 = !DILocation(line: 2630, column: 64, scope: !10469)
!10509 = !DILocation(line: 2630, column: 68, scope: !10469)
!10510 = !DILocation(line: 2630, column: 72, scope: !10469)
!10511 = !DILocation(line: 2630, column: 10, scope: !10469)
!10512 = !DILocation(line: 2630, column: 8, scope: !10469)
!10513 = !DILocation(line: 2633, column: 16, scope: !10469)
!10514 = !DILocation(line: 2633, column: 21, scope: !10469)
!10515 = !DILocation(line: 2633, column: 19, scope: !10469)
!10516 = !DILocation(line: 2633, column: 26, scope: !10469)
!10517 = !DILocation(line: 2633, column: 24, scope: !10469)
!10518 = !DILocation(line: 2633, column: 14, scope: !10469)
!10519 = !DILocation(line: 2634, column: 10, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2634, column: 10)
!10521 = !DILocation(line: 2634, column: 10, scope: !10469)
!10522 = !DILocation(line: 2635, column: 29, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 2634, column: 14)
!10524 = !DILocation(line: 2635, column: 36, scope: !10523)
!10525 = !DILocation(line: 2635, column: 40, scope: !10523)
!10526 = !DILocation(line: 2635, column: 47, scope: !10523)
!10527 = !DILocation(line: 2635, column: 57, scope: !10523)
!10528 = !DILocation(line: 2635, column: 65, scope: !10523)
!10529 = !DILocation(line: 2635, column: 69, scope: !10523)
!10530 = !DILocation(line: 2635, column: 73, scope: !10523)
!10531 = !DILocation(line: 2635, column: 11, scope: !10523)
!10532 = !DILocation(line: 2635, column: 9, scope: !10523)
!10533 = !DILocation(line: 2636, column: 19, scope: !10523)
!10534 = !DILocation(line: 2636, column: 16, scope: !10523)
!10535 = !DILocation(line: 2637, column: 6, scope: !10523)
!10536 = !DILocation(line: 2639, column: 10, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2639, column: 10)
!10538 = !DILocation(line: 2639, column: 18, scope: !10537)
!10539 = !DILocation(line: 2639, column: 10, scope: !10469)
!10540 = !DILocation(line: 2640, column: 20, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 2639, column: 23)
!10542 = !DILocation(line: 2640, column: 11, scope: !10541)
!10543 = !DILocation(line: 2640, column: 9, scope: !10541)
!10544 = !DILocation(line: 2641, column: 20, scope: !10541)
!10545 = !DILocation(line: 2641, column: 11, scope: !10541)
!10546 = !DILocation(line: 2641, column: 9, scope: !10541)
!10547 = !DILocation(line: 2642, column: 20, scope: !10541)
!10548 = !DILocation(line: 2642, column: 11, scope: !10541)
!10549 = !DILocation(line: 2642, column: 9, scope: !10541)
!10550 = !DILocation(line: 2644, column: 14, scope: !10541)
!10551 = !DILocation(line: 2644, column: 15, scope: !10541)
!10552 = !DILocation(line: 2644, column: 12, scope: !10541)
!10553 = !DILocation(line: 2645, column: 24, scope: !10541)
!10554 = !DILocation(line: 2645, column: 27, scope: !10541)
!10555 = !DILocation(line: 2645, column: 34, scope: !10541)
!10556 = !DILocation(line: 2645, column: 39, scope: !10541)
!10557 = !DILocation(line: 2645, column: 44, scope: !10541)
!10558 = !DILocation(line: 2645, column: 49, scope: !10541)
!10559 = !DILocation(line: 2645, column: 53, scope: !10541)
!10560 = !DILocation(line: 2645, column: 57, scope: !10541)
!10561 = !DILocation(line: 2645, column: 7, scope: !10541)
!10562 = !DILocation(line: 2646, column: 11, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2646, column: 11)
!10564 = !DILocation(line: 2646, column: 11, scope: !10541)
!10565 = !DILocation(line: 2647, column: 21, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2646, column: 15)
!10567 = !DILocation(line: 2647, column: 12, scope: !10566)
!10568 = !DILocation(line: 2647, column: 10, scope: !10566)
!10569 = !DILocation(line: 2648, column: 25, scope: !10566)
!10570 = !DILocation(line: 2648, column: 28, scope: !10566)
!10571 = !DILocation(line: 2648, column: 33, scope: !10566)
!10572 = !DILocation(line: 2648, column: 48, scope: !10566)
!10573 = !DILocation(line: 2648, column: 53, scope: !10566)
!10574 = !DILocation(line: 2648, column: 58, scope: !10566)
!10575 = !DILocation(line: 2648, column: 63, scope: !10566)
!10576 = !DILocation(line: 2648, column: 67, scope: !10566)
!10577 = !DILocation(line: 2648, column: 71, scope: !10566)
!10578 = !DILocation(line: 2648, column: 8, scope: !10566)
!10579 = !DILocation(line: 2649, column: 7, scope: !10566)
!10580 = !DILocation(line: 2650, column: 6, scope: !10541)
!10581 = !DILocation(line: 2651, column: 5, scope: !10469)
!10582 = !DILocation(line: 2652, column: 4, scope: !10423)
!10583 = !DILocation(line: 2653, column: 3, scope: !10403)
!10584 = !DILocation(line: 2601, column: 30, scope: !10396)
!10585 = !DILocation(line: 2601, column: 3, scope: !10396)
!10586 = distinct !{!10586, !10400, !10587}
!10587 = !DILocation(line: 2653, column: 3, scope: !10393)
!10588 = !DILocation(line: 2654, column: 2, scope: !10356)
!10589 = !DILocation(line: 2585, column: 45, scope: !10353)
!10590 = !DILocation(line: 2585, column: 53, scope: !10353)
!10591 = !DILocation(line: 2585, column: 58, scope: !10353)
!10592 = !DILocation(line: 2585, column: 52, scope: !10353)
!10593 = !DILocation(line: 2585, column: 2, scope: !10353)
!10594 = distinct !{!10594, !10354, !10595}
!10595 = !DILocation(line: 2654, column: 2, scope: !10347)
!10596 = !DILocation(line: 2656, column: 2, scope: !10179)
!10597 = !DILocation(line: 2657, column: 1, scope: !10179)
!10598 = distinct !DISubprogram(name: "zbuffill_sss", scope: !3, file: !3, line: 2467, type: !6600, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!10599 = !DILocalVariable(name: "zspan", arg: 1, scope: !10598, file: !3, line: 2467, type: !120)
!10600 = !DILocation(line: 2467, column: 33, scope: !10598)
!10601 = !DILocalVariable(name: "obi", arg: 2, scope: !10598, file: !3, line: 2467, type: !29)
!10602 = !DILocation(line: 2467, column: 44, scope: !10598)
!10603 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !10598, file: !3, line: 2467, type: !29)
!10604 = !DILocation(line: 2467, column: 53, scope: !10598)
!10605 = !DILocalVariable(name: "v1", arg: 4, scope: !10598, file: !3, line: 2468, type: !88)
!10606 = !DILocation(line: 2468, column: 39, scope: !10598)
!10607 = !DILocalVariable(name: "v2", arg: 5, scope: !10598, file: !3, line: 2468, type: !88)
!10608 = !DILocation(line: 2468, column: 56, scope: !10598)
!10609 = !DILocalVariable(name: "v3", arg: 6, scope: !10598, file: !3, line: 2468, type: !88)
!10610 = !DILocation(line: 2468, column: 73, scope: !10598)
!10611 = !DILocalVariable(name: "v4", arg: 7, scope: !10598, file: !3, line: 2468, type: !88)
!10612 = !DILocation(line: 2468, column: 90, scope: !10598)
!10613 = !DILocalVariable(name: "zxd", scope: !10598, file: !3, line: 2470, type: !80)
!10614 = !DILocation(line: 2470, column: 9, scope: !10598)
!10615 = !DILocalVariable(name: "zyd", scope: !10598, file: !3, line: 2470, type: !80)
!10616 = !DILocation(line: 2470, column: 14, scope: !10598)
!10617 = !DILocalVariable(name: "zy0", scope: !10598, file: !3, line: 2470, type: !80)
!10618 = !DILocation(line: 2470, column: 19, scope: !10598)
!10619 = !DILocalVariable(name: "z", scope: !10598, file: !3, line: 2470, type: !80)
!10620 = !DILocation(line: 2470, column: 24, scope: !10598)
!10621 = !DILocalVariable(name: "x0", scope: !10598, file: !3, line: 2471, type: !21)
!10622 = !DILocation(line: 2471, column: 8, scope: !10598)
!10623 = !DILocalVariable(name: "y0", scope: !10598, file: !3, line: 2471, type: !21)
!10624 = !DILocation(line: 2471, column: 12, scope: !10598)
!10625 = !DILocalVariable(name: "x1", scope: !10598, file: !3, line: 2471, type: !21)
!10626 = !DILocation(line: 2471, column: 16, scope: !10598)
!10627 = !DILocalVariable(name: "y1", scope: !10598, file: !3, line: 2471, type: !21)
!10628 = !DILocation(line: 2471, column: 20, scope: !10598)
!10629 = !DILocalVariable(name: "x2", scope: !10598, file: !3, line: 2471, type: !21)
!10630 = !DILocation(line: 2471, column: 24, scope: !10598)
!10631 = !DILocalVariable(name: "y2", scope: !10598, file: !3, line: 2471, type: !21)
!10632 = !DILocation(line: 2471, column: 28, scope: !10598)
!10633 = !DILocalVariable(name: "z0", scope: !10598, file: !3, line: 2471, type: !21)
!10634 = !DILocation(line: 2471, column: 32, scope: !10598)
!10635 = !DILocalVariable(name: "z1", scope: !10598, file: !3, line: 2471, type: !21)
!10636 = !DILocation(line: 2471, column: 36, scope: !10598)
!10637 = !DILocalVariable(name: "z2", scope: !10598, file: !3, line: 2471, type: !21)
!10638 = !DILocation(line: 2471, column: 40, scope: !10598)
!10639 = !DILocalVariable(name: "xx1", scope: !10598, file: !3, line: 2471, type: !21)
!10640 = !DILocation(line: 2471, column: 44, scope: !10598)
!10641 = !DILocalVariable(name: "span1", scope: !10598, file: !3, line: 2471, type: !31)
!10642 = !DILocation(line: 2471, column: 50, scope: !10598)
!10643 = !DILocalVariable(name: "span2", scope: !10598, file: !3, line: 2471, type: !31)
!10644 = !DILocation(line: 2471, column: 58, scope: !10598)
!10645 = !DILocalVariable(name: "x", scope: !10598, file: !3, line: 2472, type: !29)
!10646 = !DILocation(line: 2472, column: 6, scope: !10598)
!10647 = !DILocalVariable(name: "y", scope: !10598, file: !3, line: 2472, type: !29)
!10648 = !DILocation(line: 2472, column: 9, scope: !10598)
!10649 = !DILocalVariable(name: "sn1", scope: !10598, file: !3, line: 2472, type: !29)
!10650 = !DILocation(line: 2472, column: 12, scope: !10598)
!10651 = !DILocalVariable(name: "sn2", scope: !10598, file: !3, line: 2472, type: !29)
!10652 = !DILocation(line: 2472, column: 17, scope: !10598)
!10653 = !DILocalVariable(name: "rectx", scope: !10598, file: !3, line: 2472, type: !29)
!10654 = !DILocation(line: 2472, column: 22, scope: !10598)
!10655 = !DILocation(line: 2472, column: 29, scope: !10598)
!10656 = !DILocation(line: 2472, column: 36, scope: !10598)
!10657 = !DILocalVariable(name: "my0", scope: !10598, file: !3, line: 2472, type: !29)
!10658 = !DILocation(line: 2472, column: 43, scope: !10598)
!10659 = !DILocalVariable(name: "my2", scope: !10598, file: !3, line: 2472, type: !29)
!10660 = !DILocation(line: 2472, column: 48, scope: !10598)
!10661 = !DILocation(line: 2474, column: 17, scope: !10598)
!10662 = !DILocation(line: 2474, column: 2, scope: !10598)
!10663 = !DILocation(line: 2477, column: 19, scope: !10598)
!10664 = !DILocation(line: 2477, column: 26, scope: !10598)
!10665 = !DILocation(line: 2477, column: 30, scope: !10598)
!10666 = !DILocation(line: 2477, column: 2, scope: !10598)
!10667 = !DILocation(line: 2478, column: 19, scope: !10598)
!10668 = !DILocation(line: 2478, column: 26, scope: !10598)
!10669 = !DILocation(line: 2478, column: 30, scope: !10598)
!10670 = !DILocation(line: 2478, column: 2, scope: !10598)
!10671 = !DILocation(line: 2479, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2479, column: 6)
!10673 = !DILocation(line: 2479, column: 6, scope: !10598)
!10674 = !DILocation(line: 2480, column: 20, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 2479, column: 10)
!10676 = !DILocation(line: 2480, column: 27, scope: !10675)
!10677 = !DILocation(line: 2480, column: 31, scope: !10675)
!10678 = !DILocation(line: 2480, column: 3, scope: !10675)
!10679 = !DILocation(line: 2481, column: 20, scope: !10675)
!10680 = !DILocation(line: 2481, column: 27, scope: !10675)
!10681 = !DILocation(line: 2481, column: 31, scope: !10675)
!10682 = !DILocation(line: 2481, column: 3, scope: !10675)
!10683 = !DILocation(line: 2482, column: 2, scope: !10675)
!10684 = !DILocation(line: 2484, column: 20, scope: !10672)
!10685 = !DILocation(line: 2484, column: 27, scope: !10672)
!10686 = !DILocation(line: 2484, column: 31, scope: !10672)
!10687 = !DILocation(line: 2484, column: 3, scope: !10672)
!10688 = !DILocation(line: 2487, column: 6, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2487, column: 6)
!10690 = !DILocation(line: 2487, column: 13, scope: !10689)
!10691 = !DILocation(line: 2487, column: 18, scope: !10689)
!10692 = !DILocation(line: 2487, column: 25, scope: !10689)
!10693 = !DILocation(line: 2487, column: 28, scope: !10689)
!10694 = !DILocation(line: 2487, column: 35, scope: !10689)
!10695 = !DILocation(line: 2487, column: 40, scope: !10689)
!10696 = !DILocation(line: 2487, column: 6, scope: !10598)
!10697 = !DILocation(line: 2487, column: 48, scope: !10689)
!10698 = !DILocation(line: 2489, column: 6, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2489, column: 6)
!10700 = !DILocation(line: 2489, column: 13, scope: !10699)
!10701 = !DILocation(line: 2489, column: 21, scope: !10699)
!10702 = !DILocation(line: 2489, column: 28, scope: !10699)
!10703 = !DILocation(line: 2489, column: 19, scope: !10699)
!10704 = !DILocation(line: 2489, column: 6, scope: !10598)
!10705 = !DILocation(line: 2489, column: 40, scope: !10699)
!10706 = !DILocation(line: 2489, column: 47, scope: !10699)
!10707 = !DILocation(line: 2489, column: 38, scope: !10699)
!10708 = !DILocation(line: 2489, column: 35, scope: !10699)
!10709 = !DILocation(line: 2489, column: 64, scope: !10699)
!10710 = !DILocation(line: 2489, column: 71, scope: !10699)
!10711 = !DILocation(line: 2489, column: 62, scope: !10699)
!10712 = !DILocation(line: 2490, column: 6, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2490, column: 6)
!10714 = !DILocation(line: 2490, column: 13, scope: !10713)
!10715 = !DILocation(line: 2490, column: 21, scope: !10713)
!10716 = !DILocation(line: 2490, column: 28, scope: !10713)
!10717 = !DILocation(line: 2490, column: 19, scope: !10713)
!10718 = !DILocation(line: 2490, column: 6, scope: !10598)
!10719 = !DILocation(line: 2490, column: 40, scope: !10713)
!10720 = !DILocation(line: 2490, column: 47, scope: !10713)
!10721 = !DILocation(line: 2490, column: 38, scope: !10713)
!10722 = !DILocation(line: 2490, column: 35, scope: !10713)
!10723 = !DILocation(line: 2490, column: 64, scope: !10713)
!10724 = !DILocation(line: 2490, column: 71, scope: !10713)
!10725 = !DILocation(line: 2490, column: 62, scope: !10713)
!10726 = !DILocation(line: 2492, column: 6, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2492, column: 6)
!10728 = !DILocation(line: 2492, column: 10, scope: !10727)
!10729 = !DILocation(line: 2492, column: 9, scope: !10727)
!10730 = !DILocation(line: 2492, column: 6, scope: !10598)
!10731 = !DILocation(line: 2492, column: 15, scope: !10727)
!10732 = !DILocation(line: 2495, column: 6, scope: !10598)
!10733 = !DILocation(line: 2495, column: 13, scope: !10598)
!10734 = !DILocation(line: 2495, column: 11, scope: !10598)
!10735 = !DILocation(line: 2495, column: 4, scope: !10598)
!10736 = !DILocation(line: 2496, column: 6, scope: !10598)
!10737 = !DILocation(line: 2496, column: 13, scope: !10598)
!10738 = !DILocation(line: 2496, column: 11, scope: !10598)
!10739 = !DILocation(line: 2496, column: 4, scope: !10598)
!10740 = !DILocation(line: 2497, column: 6, scope: !10598)
!10741 = !DILocation(line: 2497, column: 13, scope: !10598)
!10742 = !DILocation(line: 2497, column: 11, scope: !10598)
!10743 = !DILocation(line: 2497, column: 4, scope: !10598)
!10744 = !DILocation(line: 2498, column: 6, scope: !10598)
!10745 = !DILocation(line: 2498, column: 13, scope: !10598)
!10746 = !DILocation(line: 2498, column: 11, scope: !10598)
!10747 = !DILocation(line: 2498, column: 4, scope: !10598)
!10748 = !DILocation(line: 2499, column: 6, scope: !10598)
!10749 = !DILocation(line: 2499, column: 13, scope: !10598)
!10750 = !DILocation(line: 2499, column: 11, scope: !10598)
!10751 = !DILocation(line: 2499, column: 4, scope: !10598)
!10752 = !DILocation(line: 2500, column: 6, scope: !10598)
!10753 = !DILocation(line: 2500, column: 13, scope: !10598)
!10754 = !DILocation(line: 2500, column: 11, scope: !10598)
!10755 = !DILocation(line: 2500, column: 4, scope: !10598)
!10756 = !DILocation(line: 2502, column: 6, scope: !10598)
!10757 = !DILocation(line: 2502, column: 9, scope: !10598)
!10758 = !DILocation(line: 2502, column: 8, scope: !10598)
!10759 = !DILocation(line: 2502, column: 12, scope: !10598)
!10760 = !DILocation(line: 2502, column: 15, scope: !10598)
!10761 = !DILocation(line: 2502, column: 14, scope: !10598)
!10762 = !DILocation(line: 2502, column: 11, scope: !10598)
!10763 = !DILocation(line: 2502, column: 4, scope: !10598)
!10764 = !DILocation(line: 2503, column: 6, scope: !10598)
!10765 = !DILocation(line: 2503, column: 9, scope: !10598)
!10766 = !DILocation(line: 2503, column: 8, scope: !10598)
!10767 = !DILocation(line: 2503, column: 12, scope: !10598)
!10768 = !DILocation(line: 2503, column: 15, scope: !10598)
!10769 = !DILocation(line: 2503, column: 14, scope: !10598)
!10770 = !DILocation(line: 2503, column: 11, scope: !10598)
!10771 = !DILocation(line: 2503, column: 4, scope: !10598)
!10772 = !DILocation(line: 2504, column: 6, scope: !10598)
!10773 = !DILocation(line: 2504, column: 9, scope: !10598)
!10774 = !DILocation(line: 2504, column: 8, scope: !10598)
!10775 = !DILocation(line: 2504, column: 12, scope: !10598)
!10776 = !DILocation(line: 2504, column: 15, scope: !10598)
!10777 = !DILocation(line: 2504, column: 14, scope: !10598)
!10778 = !DILocation(line: 2504, column: 11, scope: !10598)
!10779 = !DILocation(line: 2504, column: 4, scope: !10598)
!10780 = !DILocation(line: 2506, column: 6, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2506, column: 6)
!10782 = !DILocation(line: 2506, column: 8, scope: !10781)
!10783 = !DILocation(line: 2506, column: 6, scope: !10598)
!10784 = !DILocation(line: 2506, column: 16, scope: !10781)
!10785 = !DILocation(line: 2508, column: 8, scope: !10598)
!10786 = !DILocation(line: 2508, column: 11, scope: !10598)
!10787 = !DILocation(line: 2508, column: 10, scope: !10598)
!10788 = !DILocation(line: 2508, column: 19, scope: !10598)
!10789 = !DILocation(line: 2508, column: 22, scope: !10598)
!10790 = !DILocation(line: 2508, column: 21, scope: !10598)
!10791 = !DILocation(line: 2508, column: 17, scope: !10598)
!10792 = !DILocation(line: 2508, column: 29, scope: !10598)
!10793 = !DILocation(line: 2508, column: 28, scope: !10598)
!10794 = !DILocation(line: 2508, column: 34, scope: !10598)
!10795 = !DILocation(line: 2508, column: 32, scope: !10598)
!10796 = !DILocation(line: 2508, column: 5, scope: !10598)
!10797 = !DILocation(line: 2509, column: 16, scope: !10598)
!10798 = !DILocation(line: 2509, column: 8, scope: !10598)
!10799 = !DILocation(line: 2509, column: 7, scope: !10598)
!10800 = !DILocation(line: 2509, column: 27, scope: !10598)
!10801 = !DILocation(line: 2509, column: 19, scope: !10598)
!10802 = !DILocation(line: 2509, column: 18, scope: !10598)
!10803 = !DILocation(line: 2509, column: 5, scope: !10598)
!10804 = !DILocation(line: 2510, column: 16, scope: !10598)
!10805 = !DILocation(line: 2510, column: 8, scope: !10598)
!10806 = !DILocation(line: 2510, column: 7, scope: !10598)
!10807 = !DILocation(line: 2510, column: 27, scope: !10598)
!10808 = !DILocation(line: 2510, column: 19, scope: !10598)
!10809 = !DILocation(line: 2510, column: 18, scope: !10598)
!10810 = !DILocation(line: 2510, column: 5, scope: !10598)
!10811 = !DILocation(line: 2511, column: 16, scope: !10598)
!10812 = !DILocation(line: 2511, column: 8, scope: !10598)
!10813 = !DILocation(line: 2511, column: 21, scope: !10598)
!10814 = !DILocation(line: 2511, column: 20, scope: !10598)
!10815 = !DILocation(line: 2511, column: 35, scope: !10598)
!10816 = !DILocation(line: 2511, column: 27, scope: !10598)
!10817 = !DILocation(line: 2511, column: 25, scope: !10598)
!10818 = !DILocation(line: 2511, column: 5, scope: !10598)
!10819 = !DILocation(line: 2514, column: 8, scope: !10598)
!10820 = !DILocation(line: 2514, column: 14, scope: !10598)
!10821 = !DILocation(line: 2514, column: 12, scope: !10598)
!10822 = !DILocation(line: 2514, column: 18, scope: !10598)
!10823 = !DILocation(line: 2514, column: 5, scope: !10598)
!10824 = !DILocation(line: 2515, column: 6, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2515, column: 6)
!10826 = !DILocation(line: 2515, column: 13, scope: !10825)
!10827 = !DILocation(line: 2515, column: 19, scope: !10825)
!10828 = !DILocation(line: 2515, column: 26, scope: !10825)
!10829 = !DILocation(line: 2515, column: 33, scope: !10825)
!10830 = !DILocation(line: 2515, column: 39, scope: !10825)
!10831 = !DILocation(line: 2515, column: 24, scope: !10825)
!10832 = !DILocation(line: 2515, column: 6, scope: !10598)
!10833 = !DILocation(line: 2516, column: 10, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2515, column: 45)
!10835 = !DILocation(line: 2516, column: 17, scope: !10834)
!10836 = !DILocation(line: 2516, column: 23, scope: !10834)
!10837 = !DILocation(line: 2516, column: 22, scope: !10834)
!10838 = !DILocation(line: 2516, column: 8, scope: !10834)
!10839 = !DILocation(line: 2517, column: 10, scope: !10834)
!10840 = !DILocation(line: 2517, column: 17, scope: !10834)
!10841 = !DILocation(line: 2517, column: 23, scope: !10834)
!10842 = !DILocation(line: 2517, column: 22, scope: !10834)
!10843 = !DILocation(line: 2517, column: 8, scope: !10834)
!10844 = !DILocation(line: 2518, column: 2, scope: !10834)
!10845 = !DILocation(line: 2520, column: 10, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2519, column: 7)
!10847 = !DILocation(line: 2520, column: 17, scope: !10846)
!10848 = !DILocation(line: 2520, column: 23, scope: !10846)
!10849 = !DILocation(line: 2520, column: 22, scope: !10846)
!10850 = !DILocation(line: 2520, column: 8, scope: !10846)
!10851 = !DILocation(line: 2521, column: 10, scope: !10846)
!10852 = !DILocation(line: 2521, column: 17, scope: !10846)
!10853 = !DILocation(line: 2521, column: 23, scope: !10846)
!10854 = !DILocation(line: 2521, column: 22, scope: !10846)
!10855 = !DILocation(line: 2521, column: 8, scope: !10846)
!10856 = !DILocation(line: 2524, column: 9, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2524, column: 2)
!10858 = !DILocation(line: 2524, column: 8, scope: !10857)
!10859 = !DILocation(line: 2524, column: 7, scope: !10857)
!10860 = !DILocation(line: 2524, column: 14, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 2524, column: 2)
!10862 = !DILocation(line: 2524, column: 17, scope: !10861)
!10863 = !DILocation(line: 2524, column: 15, scope: !10861)
!10864 = !DILocation(line: 2524, column: 2, scope: !10857)
!10865 = !DILocation(line: 2525, column: 15, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 2524, column: 45)
!10867 = !DILocation(line: 2525, column: 14, scope: !10866)
!10868 = !DILocation(line: 2525, column: 8, scope: !10866)
!10869 = !DILocation(line: 2525, column: 6, scope: !10866)
!10870 = !DILocation(line: 2526, column: 15, scope: !10866)
!10871 = !DILocation(line: 2526, column: 14, scope: !10866)
!10872 = !DILocation(line: 2526, column: 8, scope: !10866)
!10873 = !DILocation(line: 2526, column: 6, scope: !10866)
!10874 = !DILocation(line: 2527, column: 6, scope: !10866)
!10875 = !DILocation(line: 2529, column: 7, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2529, column: 7)
!10877 = !DILocation(line: 2529, column: 12, scope: !10876)
!10878 = !DILocation(line: 2529, column: 10, scope: !10876)
!10879 = !DILocation(line: 2529, column: 7, scope: !10866)
!10880 = !DILocation(line: 2529, column: 24, scope: !10876)
!10881 = !DILocation(line: 2529, column: 29, scope: !10876)
!10882 = !DILocation(line: 2529, column: 22, scope: !10876)
!10883 = !DILocation(line: 2529, column: 19, scope: !10876)
!10884 = !DILocation(line: 2530, column: 7, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2530, column: 7)
!10886 = !DILocation(line: 2530, column: 10, scope: !10885)
!10887 = !DILocation(line: 2530, column: 7, scope: !10866)
!10888 = !DILocation(line: 2530, column: 17, scope: !10885)
!10889 = !DILocation(line: 2530, column: 14, scope: !10885)
!10890 = !DILocation(line: 2532, column: 14, scope: !10866)
!10891 = !DILocation(line: 2532, column: 6, scope: !10866)
!10892 = !DILocation(line: 2532, column: 18, scope: !10866)
!10893 = !DILocation(line: 2532, column: 17, scope: !10866)
!10894 = !DILocation(line: 2532, column: 24, scope: !10866)
!10895 = !DILocation(line: 2532, column: 22, scope: !10866)
!10896 = !DILocation(line: 2532, column: 4, scope: !10866)
!10897 = !DILocation(line: 2534, column: 11, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2534, column: 3)
!10899 = !DILocation(line: 2534, column: 9, scope: !10898)
!10900 = !DILocation(line: 2534, column: 8, scope: !10898)
!10901 = !DILocation(line: 2534, column: 16, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 2534, column: 3)
!10903 = !DILocation(line: 2534, column: 19, scope: !10902)
!10904 = !DILocation(line: 2534, column: 17, scope: !10902)
!10905 = !DILocation(line: 2534, column: 3, scope: !10898)
!10906 = !DILocation(line: 2535, column: 4, scope: !10902)
!10907 = !DILocation(line: 2535, column: 11, scope: !10902)
!10908 = !DILocation(line: 2535, column: 20, scope: !10902)
!10909 = !DILocation(line: 2535, column: 27, scope: !10902)
!10910 = !DILocation(line: 2535, column: 39, scope: !10902)
!10911 = !DILocation(line: 2535, column: 44, scope: !10902)
!10912 = !DILocation(line: 2535, column: 51, scope: !10902)
!10913 = !DILocation(line: 2535, column: 54, scope: !10902)
!10914 = !DILocation(line: 2535, column: 57, scope: !10902)
!10915 = !DILocation(line: 2534, column: 25, scope: !10902)
!10916 = !DILocation(line: 2534, column: 32, scope: !10902)
!10917 = !DILocation(line: 2534, column: 30, scope: !10902)
!10918 = !DILocation(line: 2534, column: 3, scope: !10902)
!10919 = distinct !{!10919, !10905, !10920}
!10920 = !DILocation(line: 2535, column: 58, scope: !10898)
!10921 = !DILocation(line: 2537, column: 10, scope: !10866)
!10922 = !DILocation(line: 2537, column: 7, scope: !10866)
!10923 = !DILocation(line: 2538, column: 2, scope: !10866)
!10924 = !DILocation(line: 2524, column: 23, scope: !10861)
!10925 = !DILocation(line: 2524, column: 32, scope: !10861)
!10926 = !DILocation(line: 2524, column: 41, scope: !10861)
!10927 = !DILocation(line: 2524, column: 2, scope: !10861)
!10928 = distinct !{!10928, !10864, !10929}
!10929 = !DILocation(line: 2538, column: 2, scope: !10857)
!10930 = !DILocation(line: 2539, column: 1, scope: !10598)
!10931 = distinct !DISubprogram(name: "antialias_tagbuf", scope: !3, file: !3, line: 2766, type: !10932, scopeLine: 2767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{null, !29, !29, !2874}
!10934 = !DILocalVariable(name: "xsize", arg: 1, scope: !10931, file: !3, line: 2766, type: !29)
!10935 = !DILocation(line: 2766, column: 27, scope: !10931)
!10936 = !DILocalVariable(name: "ysize", arg: 2, scope: !10931, file: !3, line: 2766, type: !29)
!10937 = !DILocation(line: 2766, column: 38, scope: !10931)
!10938 = !DILocalVariable(name: "rectmove", arg: 3, scope: !10931, file: !3, line: 2766, type: !2874)
!10939 = !DILocation(line: 2766, column: 51, scope: !10931)
!10940 = !DILocalVariable(name: "row1", scope: !10931, file: !3, line: 2768, type: !2874)
!10941 = !DILocation(line: 2768, column: 8, scope: !10931)
!10942 = !DILocalVariable(name: "row2", scope: !10931, file: !3, line: 2768, type: !2874)
!10943 = !DILocation(line: 2768, column: 15, scope: !10931)
!10944 = !DILocalVariable(name: "row3", scope: !10931, file: !3, line: 2768, type: !2874)
!10945 = !DILocation(line: 2768, column: 22, scope: !10931)
!10946 = !DILocalVariable(name: "prev", scope: !10931, file: !3, line: 2769, type: !26)
!10947 = !DILocation(line: 2769, column: 7, scope: !10931)
!10948 = !DILocalVariable(name: "next", scope: !10931, file: !3, line: 2769, type: !26)
!10949 = !DILocation(line: 2769, column: 13, scope: !10931)
!10950 = !DILocalVariable(name: "a", scope: !10931, file: !3, line: 2770, type: !29)
!10951 = !DILocation(line: 2770, column: 6, scope: !10931)
!10952 = !DILocalVariable(name: "x", scope: !10931, file: !3, line: 2770, type: !29)
!10953 = !DILocation(line: 2770, column: 9, scope: !10931)
!10954 = !DILocalVariable(name: "y", scope: !10931, file: !3, line: 2770, type: !29)
!10955 = !DILocation(line: 2770, column: 12, scope: !10931)
!10956 = !DILocalVariable(name: "step", scope: !10931, file: !3, line: 2770, type: !29)
!10957 = !DILocation(line: 2770, column: 15, scope: !10931)
!10958 = !DILocation(line: 2773, column: 8, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 2773, column: 2)
!10960 = !DILocation(line: 2773, column: 7, scope: !10959)
!10961 = !DILocation(line: 2773, column: 12, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 2773, column: 2)
!10963 = !DILocation(line: 2773, column: 14, scope: !10962)
!10964 = !DILocation(line: 2773, column: 13, scope: !10962)
!10965 = !DILocation(line: 2773, column: 2, scope: !10959)
!10966 = !DILocation(line: 2775, column: 9, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 2773, column: 26)
!10968 = !DILocation(line: 2775, column: 21, scope: !10967)
!10969 = !DILocation(line: 2775, column: 22, scope: !10967)
!10970 = !DILocation(line: 2775, column: 26, scope: !10967)
!10971 = !DILocation(line: 2775, column: 25, scope: !10967)
!10972 = !DILocation(line: 2775, column: 18, scope: !10967)
!10973 = !DILocation(line: 2775, column: 7, scope: !10967)
!10974 = !DILocation(line: 2776, column: 9, scope: !10967)
!10975 = !DILocation(line: 2776, column: 16, scope: !10967)
!10976 = !DILocation(line: 2776, column: 14, scope: !10967)
!10977 = !DILocation(line: 2776, column: 7, scope: !10967)
!10978 = !DILocation(line: 2777, column: 9, scope: !10967)
!10979 = !DILocation(line: 2777, column: 16, scope: !10967)
!10980 = !DILocation(line: 2777, column: 14, scope: !10967)
!10981 = !DILocation(line: 2777, column: 7, scope: !10967)
!10982 = !DILocation(line: 2778, column: 9, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 2778, column: 3)
!10984 = !DILocation(line: 2778, column: 8, scope: !10983)
!10985 = !DILocation(line: 2778, column: 13, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10983, file: !3, line: 2778, column: 3)
!10987 = !DILocation(line: 2778, column: 15, scope: !10986)
!10988 = !DILocation(line: 2778, column: 14, scope: !10986)
!10989 = !DILocation(line: 2778, column: 3, scope: !10983)
!10990 = !DILocation(line: 2779, column: 8, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 2779, column: 8)
!10992 = distinct !DILexicalBlock(scope: !10986, file: !3, line: 2778, column: 51)
!10993 = !DILocation(line: 2779, column: 8, scope: !10992)
!10994 = !DILocation(line: 2780, column: 9, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2780, column: 9)
!10996 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 2779, column: 17)
!10997 = !DILocation(line: 2780, column: 16, scope: !10995)
!10998 = !DILocation(line: 2780, column: 20, scope: !10995)
!10999 = !DILocation(line: 2780, column: 23, scope: !10995)
!11000 = !DILocation(line: 2780, column: 30, scope: !10995)
!11001 = !DILocation(line: 2780, column: 34, scope: !10995)
!11002 = !DILocation(line: 2780, column: 37, scope: !10995)
!11003 = !DILocation(line: 2780, column: 44, scope: !10995)
!11004 = !DILocation(line: 2780, column: 48, scope: !10995)
!11005 = !DILocation(line: 2780, column: 51, scope: !10995)
!11006 = !DILocation(line: 2780, column: 58, scope: !10995)
!11007 = !DILocation(line: 2780, column: 9, scope: !10996)
!11008 = !DILocation(line: 2781, column: 6, scope: !10995)
!11009 = !DILocation(line: 2781, column: 13, scope: !10995)
!11010 = !DILocation(line: 2782, column: 4, scope: !10996)
!11011 = !DILocation(line: 2783, column: 3, scope: !10992)
!11012 = !DILocation(line: 2778, column: 23, scope: !10986)
!11013 = !DILocation(line: 2778, column: 31, scope: !10986)
!11014 = !DILocation(line: 2778, column: 39, scope: !10986)
!11015 = !DILocation(line: 2778, column: 47, scope: !10986)
!11016 = !DILocation(line: 2778, column: 3, scope: !10986)
!11017 = distinct !{!11017, !10989, !11018}
!11018 = !DILocation(line: 2783, column: 3, scope: !10983)
!11019 = !DILocation(line: 2784, column: 2, scope: !10967)
!11020 = !DILocation(line: 2773, column: 22, scope: !10962)
!11021 = !DILocation(line: 2773, column: 2, scope: !10962)
!11022 = distinct !{!11022, !10965, !11023}
!11023 = !DILocation(line: 2784, column: 2, scope: !10959)
!11024 = !DILocation(line: 2787, column: 8, scope: !10931)
!11025 = !DILocation(line: 2787, column: 6, scope: !10931)
!11026 = !DILocation(line: 2788, column: 8, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 2788, column: 2)
!11028 = !DILocation(line: 2788, column: 7, scope: !11027)
!11029 = !DILocation(line: 2788, column: 12, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 2788, column: 2)
!11031 = !DILocation(line: 2788, column: 14, scope: !11030)
!11032 = !DILocation(line: 2788, column: 13, scope: !11030)
!11033 = !DILocation(line: 2788, column: 2, scope: !11027)
!11034 = !DILocation(line: 2789, column: 7, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 2788, column: 26)
!11036 = !DILocation(line: 2790, column: 9, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2790, column: 3)
!11038 = !DILocation(line: 2790, column: 8, scope: !11037)
!11039 = !DILocation(line: 2790, column: 13, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 2790, column: 3)
!11041 = !DILocation(line: 2790, column: 15, scope: !11040)
!11042 = !DILocation(line: 2790, column: 14, scope: !11040)
!11043 = !DILocation(line: 2790, column: 3, scope: !11037)
!11044 = !DILocation(line: 2791, column: 8, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 2791, column: 8)
!11046 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 2790, column: 35)
!11047 = !DILocation(line: 2791, column: 15, scope: !11045)
!11048 = !DILocation(line: 2791, column: 21, scope: !11045)
!11049 = !DILocation(line: 2791, column: 24, scope: !11045)
!11050 = !DILocation(line: 2791, column: 31, scope: !11045)
!11051 = !DILocation(line: 2791, column: 8, scope: !11046)
!11052 = !DILocation(line: 2793, column: 11, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 2791, column: 38)
!11054 = !DILocation(line: 2793, column: 9, scope: !11053)
!11055 = !DILocation(line: 2794, column: 9, scope: !11053)
!11056 = !DILocation(line: 2795, column: 5, scope: !11053)
!11057 = !DILocation(line: 2795, column: 12, scope: !11053)
!11058 = !DILocation(line: 2795, column: 14, scope: !11053)
!11059 = !DILocation(line: 2795, column: 13, scope: !11053)
!11060 = !DILocation(line: 2795, column: 19, scope: !11053)
!11061 = !DILocation(line: 2795, column: 18, scope: !11053)
!11062 = !DILocation(line: 2795, column: 25, scope: !11053)
!11063 = !DILocation(line: 2795, column: 28, scope: !11053)
!11064 = !DILocation(line: 2795, column: 33, scope: !11053)
!11065 = !DILocation(line: 2795, column: 38, scope: !11053)
!11066 = !DILocation(line: 0, scope: !11053)
!11067 = !DILocation(line: 2796, column: 10, scope: !11053)
!11068 = distinct !{!11068, !11056, !11067}
!11069 = !DILocation(line: 2798, column: 9, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2798, column: 9)
!11071 = !DILocation(line: 2798, column: 11, scope: !11070)
!11072 = !DILocation(line: 2798, column: 10, scope: !11070)
!11073 = !DILocation(line: 2798, column: 17, scope: !11070)
!11074 = !DILocation(line: 2798, column: 15, scope: !11070)
!11075 = !DILocation(line: 2798, column: 9, scope: !11053)
!11076 = !DILocation(line: 2800, column: 12, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 2798, column: 24)
!11078 = !DILocation(line: 2800, column: 17, scope: !11077)
!11079 = !DILocation(line: 2800, column: 10, scope: !11077)
!11080 = !DILocation(line: 2803, column: 12, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 2803, column: 6)
!11082 = !DILocation(line: 2803, column: 11, scope: !11081)
!11083 = !DILocation(line: 2803, column: 16, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 2803, column: 6)
!11085 = !DILocation(line: 2803, column: 18, scope: !11084)
!11086 = !DILocation(line: 2803, column: 17, scope: !11084)
!11087 = !DILocation(line: 2803, column: 6, scope: !11081)
!11088 = !DILocalVariable(name: "fac", scope: !11089, file: !3, line: 2804, type: !29)
!11089 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 2803, column: 29)
!11090 = !DILocation(line: 2804, column: 11, scope: !11089)
!11091 = !DILocalVariable(name: "mfac", scope: !11089, file: !3, line: 2804, type: !29)
!11092 = !DILocation(line: 2804, column: 16, scope: !11089)
!11093 = !DILocation(line: 2806, column: 14, scope: !11089)
!11094 = !DILocation(line: 2806, column: 15, scope: !11089)
!11095 = !DILocation(line: 2806, column: 18, scope: !11089)
!11096 = !DILocation(line: 2806, column: 24, scope: !11089)
!11097 = !DILocation(line: 2806, column: 28, scope: !11089)
!11098 = !DILocation(line: 2806, column: 22, scope: !11089)
!11099 = !DILocation(line: 2806, column: 10, scope: !11089)
!11100 = !DILocation(line: 2807, column: 17, scope: !11089)
!11101 = !DILocation(line: 2807, column: 16, scope: !11089)
!11102 = !DILocation(line: 2807, column: 11, scope: !11089)
!11103 = !DILocation(line: 2809, column: 17, scope: !11089)
!11104 = !DILocation(line: 2809, column: 22, scope: !11089)
!11105 = !DILocation(line: 2809, column: 21, scope: !11089)
!11106 = !DILocation(line: 2809, column: 29, scope: !11089)
!11107 = !DILocation(line: 2809, column: 34, scope: !11089)
!11108 = !DILocation(line: 2809, column: 33, scope: !11089)
!11109 = !DILocation(line: 2809, column: 27, scope: !11089)
!11110 = !DILocation(line: 2809, column: 38, scope: !11089)
!11111 = !DILocation(line: 2809, column: 16, scope: !11089)
!11112 = !DILocation(line: 2809, column: 7, scope: !11089)
!11113 = !DILocation(line: 2809, column: 12, scope: !11089)
!11114 = !DILocation(line: 2809, column: 14, scope: !11089)
!11115 = !DILocation(line: 2810, column: 6, scope: !11089)
!11116 = !DILocation(line: 2803, column: 25, scope: !11084)
!11117 = !DILocation(line: 2803, column: 6, scope: !11084)
!11118 = distinct !{!11118, !11087, !11119}
!11119 = !DILocation(line: 2810, column: 6, scope: !11081)
!11120 = !DILocation(line: 2811, column: 5, scope: !11077)
!11121 = !DILocation(line: 2812, column: 4, scope: !11053)
!11122 = !DILocation(line: 2813, column: 3, scope: !11046)
!11123 = !DILocation(line: 2790, column: 23, scope: !11040)
!11124 = !DILocation(line: 2790, column: 31, scope: !11040)
!11125 = !DILocation(line: 2790, column: 3, scope: !11040)
!11126 = distinct !{!11126, !11043, !11127}
!11127 = !DILocation(line: 2813, column: 3, scope: !11037)
!11128 = !DILocation(line: 2814, column: 2, scope: !11035)
!11129 = !DILocation(line: 2788, column: 22, scope: !11030)
!11130 = !DILocation(line: 2788, column: 2, scope: !11030)
!11131 = distinct !{!11131, !11033, !11132}
!11132 = !DILocation(line: 2814, column: 2, scope: !11027)
!11133 = !DILocation(line: 2818, column: 8, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 2818, column: 2)
!11135 = !DILocation(line: 2818, column: 7, scope: !11134)
!11136 = !DILocation(line: 2818, column: 12, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 2818, column: 2)
!11138 = !DILocation(line: 2818, column: 14, scope: !11137)
!11139 = !DILocation(line: 2818, column: 13, scope: !11137)
!11140 = !DILocation(line: 2818, column: 2, scope: !11134)
!11141 = !DILocation(line: 2819, column: 9, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !3, line: 2818, column: 26)
!11143 = !DILocation(line: 2819, column: 20, scope: !11142)
!11144 = !DILocation(line: 2819, column: 18, scope: !11142)
!11145 = !DILocation(line: 2819, column: 22, scope: !11142)
!11146 = !DILocation(line: 2819, column: 21, scope: !11142)
!11147 = !DILocation(line: 2819, column: 7, scope: !11142)
!11148 = !DILocation(line: 2821, column: 9, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 2821, column: 3)
!11150 = !DILocation(line: 2821, column: 8, scope: !11149)
!11151 = !DILocation(line: 2821, column: 13, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 2821, column: 3)
!11153 = !DILocation(line: 2821, column: 15, scope: !11152)
!11154 = !DILocation(line: 2821, column: 14, scope: !11152)
!11155 = !DILocation(line: 2821, column: 3, scope: !11149)
!11156 = !DILocation(line: 2822, column: 8, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 2822, column: 8)
!11158 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 2821, column: 40)
!11159 = !DILocation(line: 2822, column: 15, scope: !11157)
!11160 = !DILocation(line: 2822, column: 21, scope: !11157)
!11161 = !DILocation(line: 2822, column: 24, scope: !11157)
!11162 = !DILocation(line: 2822, column: 29, scope: !11157)
!11163 = !DILocation(line: 2822, column: 35, scope: !11157)
!11164 = !DILocation(line: 2822, column: 8, scope: !11158)
!11165 = !DILocation(line: 2824, column: 11, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11157, file: !3, line: 2822, column: 42)
!11167 = !DILocation(line: 2824, column: 17, scope: !11166)
!11168 = !DILocation(line: 2824, column: 16, scope: !11166)
!11169 = !DILocation(line: 2824, column: 9, scope: !11166)
!11170 = !DILocation(line: 2825, column: 9, scope: !11166)
!11171 = !DILocation(line: 2826, column: 5, scope: !11166)
!11172 = !DILocation(line: 2826, column: 12, scope: !11166)
!11173 = !DILocation(line: 2826, column: 14, scope: !11166)
!11174 = !DILocation(line: 2826, column: 13, scope: !11166)
!11175 = !DILocation(line: 2826, column: 19, scope: !11166)
!11176 = !DILocation(line: 2826, column: 18, scope: !11166)
!11177 = !DILocation(line: 2826, column: 25, scope: !11166)
!11178 = !DILocation(line: 2826, column: 28, scope: !11166)
!11179 = !DILocation(line: 2826, column: 33, scope: !11166)
!11180 = !DILocation(line: 2826, column: 38, scope: !11166)
!11181 = !DILocation(line: 2826, column: 37, scope: !11166)
!11182 = !DILocation(line: 2826, column: 44, scope: !11166)
!11183 = !DILocation(line: 0, scope: !11166)
!11184 = !DILocation(line: 2827, column: 10, scope: !11166)
!11185 = distinct !{!11185, !11171, !11184}
!11186 = !DILocation(line: 2829, column: 9, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 2829, column: 9)
!11188 = !DILocation(line: 2829, column: 11, scope: !11187)
!11189 = !DILocation(line: 2829, column: 10, scope: !11187)
!11190 = !DILocation(line: 2829, column: 17, scope: !11187)
!11191 = !DILocation(line: 2829, column: 15, scope: !11187)
!11192 = !DILocation(line: 2829, column: 9, scope: !11166)
!11193 = !DILocation(line: 2831, column: 12, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 2829, column: 24)
!11195 = !DILocation(line: 2831, column: 17, scope: !11194)
!11196 = !DILocation(line: 2831, column: 22, scope: !11194)
!11197 = !DILocation(line: 2831, column: 21, scope: !11194)
!11198 = !DILocation(line: 2831, column: 10, scope: !11194)
!11199 = !DILocation(line: 2833, column: 12, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11194, file: !3, line: 2833, column: 6)
!11201 = !DILocation(line: 2833, column: 11, scope: !11200)
!11202 = !DILocation(line: 2833, column: 16, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 2833, column: 6)
!11204 = !DILocation(line: 2833, column: 18, scope: !11203)
!11205 = !DILocation(line: 2833, column: 17, scope: !11203)
!11206 = !DILocation(line: 2833, column: 6, scope: !11200)
!11207 = !DILocalVariable(name: "fac", scope: !11208, file: !3, line: 2834, type: !29)
!11208 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 2833, column: 29)
!11209 = !DILocation(line: 2834, column: 11, scope: !11208)
!11210 = !DILocalVariable(name: "mfac", scope: !11208, file: !3, line: 2834, type: !29)
!11211 = !DILocation(line: 2834, column: 16, scope: !11208)
!11212 = !DILocation(line: 2836, column: 14, scope: !11208)
!11213 = !DILocation(line: 2836, column: 15, scope: !11208)
!11214 = !DILocation(line: 2836, column: 18, scope: !11208)
!11215 = !DILocation(line: 2836, column: 24, scope: !11208)
!11216 = !DILocation(line: 2836, column: 28, scope: !11208)
!11217 = !DILocation(line: 2836, column: 22, scope: !11208)
!11218 = !DILocation(line: 2836, column: 10, scope: !11208)
!11219 = !DILocation(line: 2837, column: 17, scope: !11208)
!11220 = !DILocation(line: 2837, column: 16, scope: !11208)
!11221 = !DILocation(line: 2837, column: 11, scope: !11208)
!11222 = !DILocation(line: 2839, column: 23, scope: !11208)
!11223 = !DILocation(line: 2839, column: 28, scope: !11208)
!11224 = !DILocation(line: 2839, column: 27, scope: !11208)
!11225 = !DILocation(line: 2839, column: 35, scope: !11208)
!11226 = !DILocation(line: 2839, column: 40, scope: !11208)
!11227 = !DILocation(line: 2839, column: 39, scope: !11208)
!11228 = !DILocation(line: 2839, column: 33, scope: !11208)
!11229 = !DILocation(line: 2839, column: 44, scope: !11208)
!11230 = !DILocation(line: 2839, column: 22, scope: !11208)
!11231 = !DILocation(line: 2839, column: 7, scope: !11208)
!11232 = !DILocation(line: 2839, column: 12, scope: !11208)
!11233 = !DILocation(line: 2839, column: 14, scope: !11208)
!11234 = !DILocation(line: 2839, column: 13, scope: !11208)
!11235 = !DILocation(line: 2839, column: 20, scope: !11208)
!11236 = !DILocation(line: 2840, column: 6, scope: !11208)
!11237 = !DILocation(line: 2833, column: 25, scope: !11203)
!11238 = !DILocation(line: 2833, column: 6, scope: !11203)
!11239 = distinct !{!11239, !11206, !11240}
!11240 = !DILocation(line: 2840, column: 6, scope: !11200)
!11241 = !DILocation(line: 2841, column: 5, scope: !11194)
!11242 = !DILocation(line: 2842, column: 4, scope: !11166)
!11243 = !DILocation(line: 2843, column: 3, scope: !11158)
!11244 = !DILocation(line: 2821, column: 23, scope: !11152)
!11245 = !DILocation(line: 2821, column: 33, scope: !11152)
!11246 = !DILocation(line: 2821, column: 31, scope: !11152)
!11247 = !DILocation(line: 2821, column: 3, scope: !11152)
!11248 = distinct !{!11248, !11155, !11249}
!11249 = !DILocation(line: 2843, column: 3, scope: !11149)
!11250 = !DILocation(line: 2844, column: 2, scope: !11142)
!11251 = !DILocation(line: 2818, column: 22, scope: !11137)
!11252 = !DILocation(line: 2818, column: 2, scope: !11137)
!11253 = distinct !{!11253, !11140, !11254}
!11254 = !DILocation(line: 2844, column: 2, scope: !11134)
!11255 = !DILocation(line: 2847, column: 8, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 2847, column: 2)
!11257 = !DILocation(line: 2847, column: 7, scope: !11256)
!11258 = !DILocation(line: 2847, column: 12, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 2847, column: 2)
!11260 = !DILocation(line: 2847, column: 14, scope: !11259)
!11261 = !DILocation(line: 2847, column: 13, scope: !11259)
!11262 = !DILocation(line: 2847, column: 2, scope: !11256)
!11263 = !DILocation(line: 2849, column: 9, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 2847, column: 26)
!11265 = !DILocation(line: 2849, column: 21, scope: !11264)
!11266 = !DILocation(line: 2849, column: 22, scope: !11264)
!11267 = !DILocation(line: 2849, column: 26, scope: !11264)
!11268 = !DILocation(line: 2849, column: 25, scope: !11264)
!11269 = !DILocation(line: 2849, column: 18, scope: !11264)
!11270 = !DILocation(line: 2849, column: 7, scope: !11264)
!11271 = !DILocation(line: 2850, column: 9, scope: !11264)
!11272 = !DILocation(line: 2850, column: 16, scope: !11264)
!11273 = !DILocation(line: 2850, column: 14, scope: !11264)
!11274 = !DILocation(line: 2850, column: 7, scope: !11264)
!11275 = !DILocation(line: 2851, column: 9, scope: !11264)
!11276 = !DILocation(line: 2851, column: 16, scope: !11264)
!11277 = !DILocation(line: 2851, column: 14, scope: !11264)
!11278 = !DILocation(line: 2851, column: 7, scope: !11264)
!11279 = !DILocation(line: 2852, column: 9, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11264, file: !3, line: 2852, column: 3)
!11281 = !DILocation(line: 2852, column: 8, scope: !11280)
!11282 = !DILocation(line: 2852, column: 13, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 2852, column: 3)
!11284 = !DILocation(line: 2852, column: 15, scope: !11283)
!11285 = !DILocation(line: 2852, column: 14, scope: !11283)
!11286 = !DILocation(line: 2852, column: 3, scope: !11280)
!11287 = !DILocation(line: 2853, column: 8, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 2853, column: 8)
!11289 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 2852, column: 51)
!11290 = !DILocation(line: 2853, column: 15, scope: !11288)
!11291 = !DILocation(line: 2853, column: 8, scope: !11289)
!11292 = !DILocation(line: 2854, column: 9, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 2854, column: 9)
!11294 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 2853, column: 20)
!11295 = !DILocation(line: 2854, column: 16, scope: !11293)
!11296 = !DILocation(line: 2854, column: 19, scope: !11293)
!11297 = !DILocation(line: 2854, column: 22, scope: !11293)
!11298 = !DILocation(line: 2854, column: 29, scope: !11293)
!11299 = !DILocation(line: 2854, column: 32, scope: !11293)
!11300 = !DILocation(line: 2854, column: 35, scope: !11293)
!11301 = !DILocation(line: 2854, column: 42, scope: !11293)
!11302 = !DILocation(line: 2854, column: 45, scope: !11293)
!11303 = !DILocation(line: 2854, column: 48, scope: !11293)
!11304 = !DILocation(line: 2854, column: 55, scope: !11293)
!11305 = !DILocation(line: 2854, column: 9, scope: !11294)
!11306 = !DILocation(line: 2855, column: 6, scope: !11293)
!11307 = !DILocation(line: 2855, column: 13, scope: !11293)
!11308 = !DILocation(line: 2856, column: 4, scope: !11294)
!11309 = !DILocation(line: 2857, column: 3, scope: !11289)
!11310 = !DILocation(line: 2852, column: 23, scope: !11283)
!11311 = !DILocation(line: 2852, column: 31, scope: !11283)
!11312 = !DILocation(line: 2852, column: 39, scope: !11283)
!11313 = !DILocation(line: 2852, column: 47, scope: !11283)
!11314 = !DILocation(line: 2852, column: 3, scope: !11283)
!11315 = distinct !{!11315, !11286, !11316}
!11316 = !DILocation(line: 2857, column: 3, scope: !11280)
!11317 = !DILocation(line: 2858, column: 2, scope: !11264)
!11318 = !DILocation(line: 2847, column: 22, scope: !11259)
!11319 = !DILocation(line: 2847, column: 2, scope: !11259)
!11320 = distinct !{!11320, !11262, !11321}
!11321 = !DILocation(line: 2858, column: 2, scope: !11256)
!11322 = !DILocation(line: 2859, column: 1, scope: !10931)
!11323 = !DILocalVariable(name: "nbd", arg: 1, scope: !2, file: !3, line: 2892, type: !6)
!11324 = !DILocation(line: 2892, column: 47, scope: !2)
!11325 = !DILocalVariable(name: "xsize", arg: 2, scope: !2, file: !3, line: 2892, type: !29)
!11326 = !DILocation(line: 2892, column: 56, scope: !2)
!11327 = !DILocalVariable(name: "ysize", arg: 3, scope: !2, file: !3, line: 2892, type: !29)
!11328 = !DILocation(line: 2892, column: 67, scope: !2)
!11329 = !DILocalVariable(name: "newrect", arg: 4, scope: !2, file: !3, line: 2892, type: !31)
!11330 = !DILocation(line: 2892, column: 81, scope: !2)
!11331 = !DILocalVariable(name: "imgrect", arg: 5, scope: !2, file: !3, line: 2892, type: !31)
!11332 = !DILocation(line: 2892, column: 97, scope: !2)
!11333 = !DILocalVariable(name: "vecbufrect", arg: 6, scope: !2, file: !3, line: 2892, type: !31)
!11334 = !DILocation(line: 2892, column: 113, scope: !2)
!11335 = !DILocalVariable(name: "zbufrect", arg: 7, scope: !2, file: !3, line: 2892, type: !31)
!11336 = !DILocation(line: 2892, column: 132, scope: !2)
!11337 = !DILocalVariable(name: "zspan", scope: !2, file: !3, line: 2894, type: !121)
!11338 = !DILocation(line: 2894, column: 8, scope: !2)
!11339 = !DILocalVariable(name: "rectdraw", scope: !2, file: !3, line: 2895, type: !83)
!11340 = !DILocation(line: 2895, column: 16, scope: !2)
!11341 = !DILocalVariable(name: "dr", scope: !2, file: !3, line: 2895, type: !83)
!11342 = !DILocation(line: 2895, column: 27, scope: !2)
!11343 = !DILocalVariable(name: "v1", scope: !2, file: !3, line: 2897, type: !2427)
!11344 = !DILocation(line: 2897, column: 8, scope: !2)
!11345 = !DILocalVariable(name: "v2", scope: !2, file: !3, line: 2897, type: !2427)
!11346 = !DILocation(line: 2897, column: 15, scope: !2)
!11347 = !DILocalVariable(name: "v3", scope: !2, file: !3, line: 2897, type: !2427)
!11348 = !DILocation(line: 2897, column: 22, scope: !2)
!11349 = !DILocalVariable(name: "v4", scope: !2, file: !3, line: 2897, type: !2427)
!11350 = !DILocation(line: 2897, column: 29, scope: !2)
!11351 = !DILocalVariable(name: "fx", scope: !2, file: !3, line: 2897, type: !21)
!11352 = !DILocation(line: 2897, column: 36, scope: !2)
!11353 = !DILocalVariable(name: "fy", scope: !2, file: !3, line: 2897, type: !21)
!11354 = !DILocation(line: 2897, column: 40, scope: !2)
!11355 = !DILocalVariable(name: "rectvz", scope: !2, file: !3, line: 2898, type: !31)
!11356 = !DILocation(line: 2898, column: 9, scope: !2)
!11357 = !DILocalVariable(name: "dvz", scope: !2, file: !3, line: 2898, type: !31)
!11358 = !DILocation(line: 2898, column: 18, scope: !2)
!11359 = !DILocalVariable(name: "dimg", scope: !2, file: !3, line: 2898, type: !31)
!11360 = !DILocation(line: 2898, column: 24, scope: !2)
!11361 = !DILocalVariable(name: "dvec1", scope: !2, file: !3, line: 2898, type: !31)
!11362 = !DILocation(line: 2898, column: 31, scope: !2)
!11363 = !DILocalVariable(name: "dvec2", scope: !2, file: !3, line: 2898, type: !31)
!11364 = !DILocation(line: 2898, column: 39, scope: !2)
!11365 = !DILocalVariable(name: "dz", scope: !2, file: !3, line: 2898, type: !31)
!11366 = !DILocation(line: 2898, column: 47, scope: !2)
!11367 = !DILocalVariable(name: "dz1", scope: !2, file: !3, line: 2898, type: !31)
!11368 = !DILocation(line: 2898, column: 52, scope: !2)
!11369 = !DILocalVariable(name: "dz2", scope: !2, file: !3, line: 2898, type: !31)
!11370 = !DILocation(line: 2898, column: 58, scope: !2)
!11371 = !DILocalVariable(name: "rectz", scope: !2, file: !3, line: 2898, type: !31)
!11372 = !DILocation(line: 2898, column: 64, scope: !2)
!11373 = !DILocalVariable(name: "minvecbufrect", scope: !2, file: !3, line: 2899, type: !31)
!11374 = !DILocation(line: 2899, column: 9, scope: !2)
!11375 = !DILocalVariable(name: "rectweight", scope: !2, file: !3, line: 2899, type: !31)
!11376 = !DILocation(line: 2899, column: 31, scope: !2)
!11377 = !DILocalVariable(name: "rw", scope: !2, file: !3, line: 2899, type: !31)
!11378 = !DILocation(line: 2899, column: 44, scope: !2)
!11379 = !DILocalVariable(name: "rectmax", scope: !2, file: !3, line: 2899, type: !31)
!11380 = !DILocation(line: 2899, column: 49, scope: !2)
!11381 = !DILocalVariable(name: "rm", scope: !2, file: !3, line: 2899, type: !31)
!11382 = !DILocation(line: 2899, column: 59, scope: !2)
!11383 = !DILocalVariable(name: "ro", scope: !2, file: !3, line: 2899, type: !31)
!11384 = !DILocation(line: 2899, column: 64, scope: !2)
!11385 = !DILocalVariable(name: "maxspeedsq", scope: !2, file: !3, line: 2900, type: !21)
!11386 = !DILocation(line: 2900, column: 8, scope: !2)
!11387 = !DILocation(line: 2900, column: 27, scope: !2)
!11388 = !DILocation(line: 2900, column: 32, scope: !2)
!11389 = !DILocation(line: 2900, column: 20, scope: !2)
!11390 = !DILocation(line: 2900, column: 41, scope: !2)
!11391 = !DILocation(line: 2900, column: 46, scope: !2)
!11392 = !DILocation(line: 2900, column: 40, scope: !2)
!11393 = !DILocalVariable(name: "y", scope: !2, file: !3, line: 2901, type: !29)
!11394 = !DILocation(line: 2901, column: 6, scope: !2)
!11395 = !DILocalVariable(name: "x", scope: !2, file: !3, line: 2901, type: !29)
!11396 = !DILocation(line: 2901, column: 9, scope: !2)
!11397 = !DILocalVariable(name: "step", scope: !2, file: !3, line: 2901, type: !29)
!11398 = !DILocation(line: 2901, column: 12, scope: !2)
!11399 = !DILocalVariable(name: "maxspeed", scope: !2, file: !3, line: 2901, type: !29)
!11400 = !DILocation(line: 2901, column: 18, scope: !2)
!11401 = !DILocation(line: 2901, column: 27, scope: !2)
!11402 = !DILocation(line: 2901, column: 32, scope: !2)
!11403 = !DILocalVariable(name: "samples", scope: !2, file: !3, line: 2901, type: !29)
!11404 = !DILocation(line: 2901, column: 42, scope: !2)
!11405 = !DILocation(line: 2901, column: 51, scope: !2)
!11406 = !DILocation(line: 2901, column: 56, scope: !2)
!11407 = !DILocalVariable(name: "tsktsk", scope: !2, file: !3, line: 2902, type: !29)
!11408 = !DILocation(line: 2902, column: 6, scope: !2)
!11409 = !DILocalVariable(name: "rectmove", scope: !2, file: !3, line: 2904, type: !2874)
!11410 = !DILocation(line: 2904, column: 8, scope: !2)
!11411 = !DILocalVariable(name: "dm", scope: !2, file: !3, line: 2904, type: !2874)
!11412 = !DILocation(line: 2904, column: 19, scope: !2)
!11413 = !DILocation(line: 2906, column: 26, scope: !2)
!11414 = !DILocation(line: 2906, column: 33, scope: !2)
!11415 = !DILocation(line: 2906, column: 2, scope: !2)
!11416 = !DILocation(line: 2907, column: 24, scope: !2)
!11417 = !DILocation(line: 2907, column: 17, scope: !2)
!11418 = !DILocation(line: 2907, column: 30, scope: !2)
!11419 = !DILocation(line: 2907, column: 8, scope: !2)
!11420 = !DILocation(line: 2907, column: 13, scope: !2)
!11421 = !DILocation(line: 2908, column: 24, scope: !2)
!11422 = !DILocation(line: 2908, column: 17, scope: !2)
!11423 = !DILocation(line: 2908, column: 30, scope: !2)
!11424 = !DILocation(line: 2908, column: 8, scope: !2)
!11425 = !DILocation(line: 2908, column: 13, scope: !2)
!11426 = !DILocation(line: 2909, column: 8, scope: !2)
!11427 = !DILocation(line: 2909, column: 13, scope: !2)
!11428 = !DILocation(line: 2910, column: 8, scope: !2)
!11429 = !DILocation(line: 2910, column: 13, scope: !2)
!11430 = !DILocation(line: 2913, column: 9, scope: !2)
!11431 = !DILocation(line: 2913, column: 37, scope: !2)
!11432 = !DILocation(line: 2913, column: 36, scope: !2)
!11433 = !DILocation(line: 2913, column: 43, scope: !2)
!11434 = !DILocation(line: 2913, column: 42, scope: !2)
!11435 = !DILocation(line: 2913, column: 7, scope: !2)
!11436 = !DILocation(line: 2914, column: 22, scope: !2)
!11437 = !DILocation(line: 2914, column: 15, scope: !2)
!11438 = !DILocation(line: 2914, column: 8, scope: !2)
!11439 = !DILocation(line: 2914, column: 13, scope: !2)
!11440 = !DILocation(line: 2916, column: 12, scope: !2)
!11441 = !DILocation(line: 2916, column: 26, scope: !2)
!11442 = !DILocation(line: 2916, column: 32, scope: !2)
!11443 = !DILocation(line: 2916, column: 31, scope: !2)
!11444 = !DILocation(line: 2916, column: 10, scope: !2)
!11445 = !DILocation(line: 2917, column: 12, scope: !2)
!11446 = !DILocation(line: 2917, column: 47, scope: !2)
!11447 = !DILocation(line: 2917, column: 46, scope: !2)
!11448 = !DILocation(line: 2917, column: 53, scope: !2)
!11449 = !DILocation(line: 2917, column: 52, scope: !2)
!11450 = !DILocation(line: 2917, column: 10, scope: !2)
!11451 = !DILocation(line: 2918, column: 22, scope: !2)
!11452 = !DILocation(line: 2918, column: 15, scope: !2)
!11453 = !DILocation(line: 2918, column: 8, scope: !2)
!11454 = !DILocation(line: 2918, column: 13, scope: !2)
!11455 = !DILocation(line: 2920, column: 14, scope: !2)
!11456 = !DILocation(line: 2920, column: 42, scope: !2)
!11457 = !DILocation(line: 2920, column: 41, scope: !2)
!11458 = !DILocation(line: 2920, column: 48, scope: !2)
!11459 = !DILocation(line: 2920, column: 47, scope: !2)
!11460 = !DILocation(line: 2920, column: 12, scope: !2)
!11461 = !DILocation(line: 2921, column: 11, scope: !2)
!11462 = !DILocation(line: 2921, column: 39, scope: !2)
!11463 = !DILocation(line: 2921, column: 38, scope: !2)
!11464 = !DILocation(line: 2921, column: 45, scope: !2)
!11465 = !DILocation(line: 2921, column: 44, scope: !2)
!11466 = !DILocation(line: 2921, column: 9, scope: !2)
!11467 = !DILocation(line: 2924, column: 9, scope: !2)
!11468 = !DILocation(line: 2924, column: 7, scope: !2)
!11469 = !DILocation(line: 2925, column: 12, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2925, column: 2)
!11471 = !DILocation(line: 2925, column: 11, scope: !11470)
!11472 = !DILocation(line: 2925, column: 18, scope: !11470)
!11473 = !DILocation(line: 2925, column: 17, scope: !11470)
!11474 = !DILocation(line: 2925, column: 8, scope: !11470)
!11475 = !DILocation(line: 2925, column: 7, scope: !11470)
!11476 = !DILocation(line: 2925, column: 25, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 2925, column: 2)
!11478 = !DILocation(line: 2925, column: 26, scope: !11477)
!11479 = !DILocation(line: 2925, column: 2, scope: !11470)
!11480 = !DILocation(line: 2926, column: 7, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 2926, column: 7)
!11482 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 2925, column: 44)
!11483 = !DILocation(line: 2926, column: 15, scope: !11481)
!11484 = !DILocation(line: 2926, column: 7, scope: !11482)
!11485 = !DILocation(line: 2927, column: 4, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 2926, column: 34)
!11487 = !DILocation(line: 2927, column: 12, scope: !11486)
!11488 = !DILocation(line: 2928, column: 10, scope: !11486)
!11489 = !DILocation(line: 2929, column: 3, scope: !11486)
!11490 = !DILocation(line: 2930, column: 2, scope: !11482)
!11491 = !DILocation(line: 2925, column: 31, scope: !11477)
!11492 = !DILocation(line: 2925, column: 40, scope: !11477)
!11493 = !DILocation(line: 2925, column: 2, scope: !11477)
!11494 = distinct !{!11494, !11479, !11495}
!11495 = !DILocation(line: 2930, column: 2, scope: !11470)
!11496 = !DILocation(line: 2931, column: 6, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2931, column: 6)
!11498 = !DILocation(line: 2931, column: 6, scope: !2)
!11499 = !DILocation(line: 2931, column: 14, scope: !11497)
!11500 = !DILocation(line: 2934, column: 6, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2934, column: 6)
!11502 = !DILocation(line: 2934, column: 11, scope: !11501)
!11503 = !DILocation(line: 2934, column: 6, scope: !2)
!11504 = !DILocalVariable(name: "minspeed", scope: !11505, file: !3, line: 2935, type: !21)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 2934, column: 21)
!11506 = !DILocation(line: 2935, column: 9, scope: !11505)
!11507 = !DILocation(line: 2935, column: 26, scope: !11505)
!11508 = !DILocation(line: 2935, column: 31, scope: !11505)
!11509 = !DILocation(line: 2935, column: 19, scope: !11505)
!11510 = !DILocalVariable(name: "minspeedsq", scope: !11505, file: !3, line: 2936, type: !21)
!11511 = !DILocation(line: 2936, column: 9, scope: !11505)
!11512 = !DILocation(line: 2936, column: 21, scope: !11505)
!11513 = !DILocation(line: 2936, column: 30, scope: !11505)
!11514 = !DILocation(line: 2936, column: 29, scope: !11505)
!11515 = !DILocation(line: 2938, column: 18, scope: !11505)
!11516 = !DILocation(line: 2938, column: 48, scope: !11505)
!11517 = !DILocation(line: 2938, column: 47, scope: !11505)
!11518 = !DILocation(line: 2938, column: 54, scope: !11505)
!11519 = !DILocation(line: 2938, column: 53, scope: !11505)
!11520 = !DILocation(line: 2938, column: 16, scope: !11505)
!11521 = !DILocation(line: 2940, column: 10, scope: !11505)
!11522 = !DILocation(line: 2940, column: 8, scope: !11505)
!11523 = !DILocation(line: 2941, column: 10, scope: !11505)
!11524 = !DILocation(line: 2941, column: 8, scope: !11505)
!11525 = !DILocation(line: 2942, column: 13, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 2942, column: 3)
!11527 = !DILocation(line: 2942, column: 12, scope: !11526)
!11528 = !DILocation(line: 2942, column: 19, scope: !11526)
!11529 = !DILocation(line: 2942, column: 18, scope: !11526)
!11530 = !DILocation(line: 2942, column: 9, scope: !11526)
!11531 = !DILocation(line: 2942, column: 8, scope: !11526)
!11532 = !DILocation(line: 2942, column: 26, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2942, column: 3)
!11534 = !DILocation(line: 2942, column: 27, scope: !11533)
!11535 = !DILocation(line: 2942, column: 3, scope: !11526)
!11536 = !DILocation(line: 2943, column: 8, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 2943, column: 8)
!11538 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 2942, column: 56)
!11539 = !DILocation(line: 2943, column: 16, scope: !11537)
!11540 = !DILocation(line: 2943, column: 23, scope: !11537)
!11541 = !DILocation(line: 2943, column: 26, scope: !11537)
!11542 = !DILocation(line: 2943, column: 34, scope: !11537)
!11543 = !DILocation(line: 2943, column: 8, scope: !11538)
!11544 = !DILocation(line: 2944, column: 15, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2943, column: 42)
!11546 = !DILocation(line: 2944, column: 5, scope: !11545)
!11547 = !DILocation(line: 2944, column: 13, scope: !11545)
!11548 = !DILocation(line: 2945, column: 15, scope: !11545)
!11549 = !DILocation(line: 2945, column: 5, scope: !11545)
!11550 = !DILocation(line: 2945, column: 13, scope: !11545)
!11551 = !DILocation(line: 2946, column: 4, scope: !11545)
!11552 = !DILocalVariable(name: "speedsq", scope: !11553, file: !3, line: 2948, type: !21)
!11553 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2947, column: 9)
!11554 = !DILocation(line: 2948, column: 11, scope: !11553)
!11555 = !DILocation(line: 2948, column: 20, scope: !11553)
!11556 = !DILocation(line: 2948, column: 29, scope: !11553)
!11557 = !DILocation(line: 2948, column: 28, scope: !11553)
!11558 = !DILocation(line: 2948, column: 40, scope: !11553)
!11559 = !DILocation(line: 2948, column: 49, scope: !11553)
!11560 = !DILocation(line: 2948, column: 48, scope: !11553)
!11561 = !DILocation(line: 2948, column: 38, scope: !11553)
!11562 = !DILocation(line: 2949, column: 9, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 2949, column: 9)
!11564 = !DILocation(line: 2949, column: 20, scope: !11563)
!11565 = !DILocation(line: 2949, column: 17, scope: !11563)
!11566 = !DILocation(line: 2949, column: 9, scope: !11553)
!11567 = !DILocation(line: 2950, column: 6, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 2949, column: 32)
!11569 = !DILocation(line: 2950, column: 14, scope: !11568)
!11570 = !DILocation(line: 2951, column: 6, scope: !11568)
!11571 = !DILocation(line: 2951, column: 14, scope: !11568)
!11572 = !DILocation(line: 2952, column: 5, scope: !11568)
!11573 = !DILocation(line: 2954, column: 23, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 2953, column: 10)
!11575 = !DILocation(line: 2954, column: 40, scope: !11574)
!11576 = !DILocation(line: 2954, column: 34, scope: !11574)
!11577 = !DILocation(line: 2954, column: 32, scope: !11574)
!11578 = !DILocation(line: 2954, column: 21, scope: !11574)
!11579 = !DILocation(line: 2954, column: 14, scope: !11574)
!11580 = !DILocation(line: 2955, column: 16, scope: !11574)
!11581 = !DILocation(line: 2955, column: 24, scope: !11574)
!11582 = !DILocation(line: 2955, column: 23, scope: !11574)
!11583 = !DILocation(line: 2955, column: 6, scope: !11574)
!11584 = !DILocation(line: 2955, column: 14, scope: !11574)
!11585 = !DILocation(line: 2956, column: 16, scope: !11574)
!11586 = !DILocation(line: 2956, column: 24, scope: !11574)
!11587 = !DILocation(line: 2956, column: 23, scope: !11574)
!11588 = !DILocation(line: 2956, column: 6, scope: !11574)
!11589 = !DILocation(line: 2956, column: 14, scope: !11574)
!11590 = !DILocation(line: 2959, column: 3, scope: !11538)
!11591 = !DILocation(line: 2942, column: 32, scope: !11533)
!11592 = !DILocation(line: 2942, column: 41, scope: !11533)
!11593 = !DILocation(line: 2942, column: 51, scope: !11533)
!11594 = !DILocation(line: 2942, column: 3, scope: !11533)
!11595 = distinct !{!11595, !11535, !11596}
!11596 = !DILocation(line: 2959, column: 3, scope: !11526)
!11597 = !DILocalVariable(name: "sw_ap", scope: !11598, file: !3, line: 2960, type: !31)
!11598 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 2960, column: 3)
!11599 = !DILocation(line: 2960, column: 3, scope: !11598)
!11600 = !DILocation(line: 2961, column: 2, scope: !11505)
!11601 = !DILocation(line: 2964, column: 10, scope: !2)
!11602 = !DILocation(line: 2964, column: 41, scope: !2)
!11603 = !DILocation(line: 2964, column: 46, scope: !2)
!11604 = !DILocation(line: 2964, column: 40, scope: !2)
!11605 = !DILocation(line: 2964, column: 39, scope: !2)
!11606 = !DILocation(line: 2964, column: 51, scope: !2)
!11607 = !DILocation(line: 2964, column: 56, scope: !2)
!11608 = !DILocation(line: 2964, column: 50, scope: !2)
!11609 = !DILocation(line: 2964, column: 49, scope: !2)
!11610 = !DILocation(line: 2964, column: 8, scope: !2)
!11611 = !DILocation(line: 2965, column: 7, scope: !2)
!11612 = !DILocation(line: 2965, column: 5, scope: !2)
!11613 = !DILocation(line: 2966, column: 8, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2966, column: 2)
!11615 = !DILocation(line: 2966, column: 7, scope: !11614)
!11616 = !DILocation(line: 2966, column: 12, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11614, file: !3, line: 2966, column: 2)
!11618 = !DILocation(line: 2966, column: 15, scope: !11617)
!11619 = !DILocation(line: 2966, column: 13, scope: !11617)
!11620 = !DILocation(line: 2966, column: 2, scope: !11614)
!11621 = !DILocation(line: 2968, column: 7, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 2968, column: 7)
!11623 = distinct !DILexicalBlock(scope: !11617, file: !3, line: 2966, column: 27)
!11624 = !DILocation(line: 2968, column: 8, scope: !11622)
!11625 = !DILocation(line: 2968, column: 7, scope: !11623)
!11626 = !DILocation(line: 2969, column: 11, scope: !11622)
!11627 = !DILocation(line: 2969, column: 26, scope: !11622)
!11628 = !DILocation(line: 2969, column: 25, scope: !11622)
!11629 = !DILocation(line: 2969, column: 28, scope: !11622)
!11630 = !DILocation(line: 2969, column: 27, scope: !11622)
!11631 = !DILocation(line: 2969, column: 22, scope: !11622)
!11632 = !DILocation(line: 2969, column: 9, scope: !11622)
!11633 = !DILocation(line: 2969, column: 4, scope: !11622)
!11634 = !DILocation(line: 2971, column: 11, scope: !11622)
!11635 = !DILocation(line: 2971, column: 27, scope: !11622)
!11636 = !DILocation(line: 2971, column: 28, scope: !11622)
!11637 = !DILocation(line: 2971, column: 25, scope: !11622)
!11638 = !DILocation(line: 2971, column: 32, scope: !11622)
!11639 = !DILocation(line: 2971, column: 31, scope: !11622)
!11640 = !DILocation(line: 2971, column: 22, scope: !11622)
!11641 = !DILocation(line: 2971, column: 9, scope: !11622)
!11642 = !DILocation(line: 2973, column: 7, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 2973, column: 7)
!11644 = !DILocation(line: 2973, column: 10, scope: !11643)
!11645 = !DILocation(line: 2973, column: 8, scope: !11643)
!11646 = !DILocation(line: 2973, column: 7, scope: !11623)
!11647 = !DILocation(line: 2974, column: 11, scope: !11643)
!11648 = !DILocation(line: 2974, column: 27, scope: !11643)
!11649 = !DILocation(line: 2974, column: 28, scope: !11643)
!11650 = !DILocation(line: 2974, column: 25, scope: !11643)
!11651 = !DILocation(line: 2974, column: 32, scope: !11643)
!11652 = !DILocation(line: 2974, column: 31, scope: !11643)
!11653 = !DILocation(line: 2974, column: 22, scope: !11643)
!11654 = !DILocation(line: 2974, column: 9, scope: !11643)
!11655 = !DILocation(line: 2974, column: 4, scope: !11643)
!11656 = !DILocation(line: 2976, column: 11, scope: !11643)
!11657 = !DILocation(line: 2976, column: 26, scope: !11643)
!11658 = !DILocation(line: 2976, column: 25, scope: !11643)
!11659 = !DILocation(line: 2976, column: 28, scope: !11643)
!11660 = !DILocation(line: 2976, column: 27, scope: !11643)
!11661 = !DILocation(line: 2976, column: 22, scope: !11643)
!11662 = !DILocation(line: 2976, column: 9, scope: !11643)
!11663 = !DILocation(line: 2978, column: 9, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 2978, column: 3)
!11665 = !DILocation(line: 2978, column: 8, scope: !11664)
!11666 = !DILocation(line: 2978, column: 13, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 2978, column: 3)
!11668 = !DILocation(line: 2978, column: 16, scope: !11667)
!11669 = !DILocation(line: 2978, column: 14, scope: !11667)
!11670 = !DILocation(line: 2978, column: 3, scope: !11664)
!11671 = !DILocation(line: 2981, column: 13, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 2981, column: 4)
!11673 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 2978, column: 28)
!11674 = !DILocation(line: 2981, column: 9, scope: !11672)
!11675 = !DILocation(line: 2981, column: 17, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2981, column: 4)
!11677 = !DILocation(line: 2981, column: 21, scope: !11676)
!11678 = !DILocation(line: 2981, column: 4, scope: !11672)
!11679 = !DILocalVariable(name: "div", scope: !11680, file: !3, line: 2983, type: !29)
!11680 = distinct !DILexicalBlock(scope: !11676, file: !3, line: 2981, column: 61)
!11681 = !DILocation(line: 2983, column: 9, scope: !11680)
!11682 = !DILocation(line: 2985, column: 9, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 2985, column: 9)
!11684 = !DILocation(line: 2985, column: 10, scope: !11683)
!11685 = !DILocation(line: 2985, column: 9, scope: !11680)
!11686 = !DILocation(line: 2986, column: 10, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 2986, column: 10)
!11688 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 2985, column: 15)
!11689 = !DILocation(line: 2986, column: 19, scope: !11687)
!11690 = !DILocation(line: 2986, column: 26, scope: !11687)
!11691 = !DILocation(line: 2986, column: 29, scope: !11687)
!11692 = !DILocation(line: 2986, column: 38, scope: !11687)
!11693 = !DILocation(line: 2986, column: 10, scope: !11688)
!11694 = !DILocation(line: 2987, column: 15, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2986, column: 46)
!11696 = !DILocation(line: 2987, column: 7, scope: !11695)
!11697 = !DILocation(line: 2987, column: 13, scope: !11695)
!11698 = !DILocation(line: 2988, column: 15, scope: !11695)
!11699 = !DILocation(line: 2988, column: 7, scope: !11695)
!11700 = !DILocation(line: 2988, column: 13, scope: !11695)
!11701 = !DILocation(line: 2989, column: 10, scope: !11695)
!11702 = !DILocation(line: 2990, column: 6, scope: !11695)
!11703 = !DILocation(line: 2991, column: 10, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 2991, column: 10)
!11705 = !DILocation(line: 2991, column: 19, scope: !11704)
!11706 = !DILocation(line: 2991, column: 26, scope: !11704)
!11707 = !DILocation(line: 2991, column: 29, scope: !11704)
!11708 = !DILocation(line: 2991, column: 38, scope: !11704)
!11709 = !DILocation(line: 2991, column: 10, scope: !11688)
!11710 = !DILocation(line: 2992, column: 11, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 2992, column: 11)
!11712 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2991, column: 46)
!11713 = !DILocation(line: 2992, column: 14, scope: !11711)
!11714 = !DILocation(line: 2992, column: 11, scope: !11712)
!11715 = !DILocation(line: 2993, column: 16, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 2992, column: 19)
!11717 = !DILocation(line: 2993, column: 8, scope: !11716)
!11718 = !DILocation(line: 2993, column: 14, scope: !11716)
!11719 = !DILocation(line: 2994, column: 16, scope: !11716)
!11720 = !DILocation(line: 2994, column: 8, scope: !11716)
!11721 = !DILocation(line: 2994, column: 14, scope: !11716)
!11722 = !DILocation(line: 2995, column: 11, scope: !11716)
!11723 = !DILocation(line: 2996, column: 7, scope: !11716)
!11724 = !DILocation(line: 2997, column: 18, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 2997, column: 17)
!11726 = !DILocation(line: 2997, column: 35, scope: !11725)
!11727 = !DILocation(line: 2997, column: 33, scope: !11725)
!11728 = !DILocation(line: 2997, column: 53, scope: !11725)
!11729 = !DILocation(line: 2997, column: 67, scope: !11725)
!11730 = !DILocation(line: 2997, column: 65, scope: !11725)
!11731 = !DILocation(line: 2997, column: 50, scope: !11725)
!11732 = !DILocation(line: 2997, column: 17, scope: !11711)
!11733 = !DILocation(line: 2998, column: 16, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 2997, column: 82)
!11735 = !DILocation(line: 2998, column: 8, scope: !11734)
!11736 = !DILocation(line: 2998, column: 14, scope: !11734)
!11737 = !DILocation(line: 2999, column: 16, scope: !11734)
!11738 = !DILocation(line: 2999, column: 8, scope: !11734)
!11739 = !DILocation(line: 2999, column: 14, scope: !11734)
!11740 = !DILocation(line: 3000, column: 7, scope: !11734)
!11741 = !DILocation(line: 3001, column: 6, scope: !11712)
!11742 = !DILocation(line: 3002, column: 5, scope: !11688)
!11743 = !DILocation(line: 3004, column: 9, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 3004, column: 9)
!11745 = !DILocation(line: 3004, column: 12, scope: !11744)
!11746 = !DILocation(line: 3004, column: 10, scope: !11744)
!11747 = !DILocation(line: 3004, column: 9, scope: !11680)
!11748 = !DILocation(line: 3005, column: 10, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 3005, column: 10)
!11750 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 3004, column: 19)
!11751 = !DILocation(line: 3005, column: 18, scope: !11749)
!11752 = !DILocation(line: 3005, column: 25, scope: !11749)
!11753 = !DILocation(line: 3005, column: 28, scope: !11749)
!11754 = !DILocation(line: 3005, column: 36, scope: !11749)
!11755 = !DILocation(line: 3005, column: 10, scope: !11750)
!11756 = !DILocation(line: 3006, column: 11, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 3006, column: 11)
!11758 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3005, column: 44)
!11759 = !DILocation(line: 3006, column: 14, scope: !11757)
!11760 = !DILocation(line: 3006, column: 11, scope: !11758)
!11761 = !DILocation(line: 3007, column: 16, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 3006, column: 19)
!11763 = !DILocation(line: 3007, column: 8, scope: !11762)
!11764 = !DILocation(line: 3007, column: 14, scope: !11762)
!11765 = !DILocation(line: 3008, column: 16, scope: !11762)
!11766 = !DILocation(line: 3008, column: 8, scope: !11762)
!11767 = !DILocation(line: 3008, column: 14, scope: !11762)
!11768 = !DILocation(line: 3009, column: 11, scope: !11762)
!11769 = !DILocation(line: 3010, column: 7, scope: !11762)
!11770 = !DILocation(line: 3011, column: 18, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 3011, column: 17)
!11772 = !DILocation(line: 3011, column: 34, scope: !11771)
!11773 = !DILocation(line: 3011, column: 32, scope: !11771)
!11774 = !DILocation(line: 3011, column: 51, scope: !11771)
!11775 = !DILocation(line: 3011, column: 65, scope: !11771)
!11776 = !DILocation(line: 3011, column: 63, scope: !11771)
!11777 = !DILocation(line: 3011, column: 48, scope: !11771)
!11778 = !DILocation(line: 3011, column: 17, scope: !11757)
!11779 = !DILocation(line: 3012, column: 16, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 3011, column: 80)
!11781 = !DILocation(line: 3012, column: 8, scope: !11780)
!11782 = !DILocation(line: 3012, column: 14, scope: !11780)
!11783 = !DILocation(line: 3013, column: 16, scope: !11780)
!11784 = !DILocation(line: 3013, column: 8, scope: !11780)
!11785 = !DILocation(line: 3013, column: 14, scope: !11780)
!11786 = !DILocation(line: 3014, column: 7, scope: !11780)
!11787 = !DILocation(line: 3015, column: 6, scope: !11758)
!11788 = !DILocation(line: 3016, column: 10, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 3016, column: 10)
!11790 = !DILocation(line: 3016, column: 18, scope: !11789)
!11791 = !DILocation(line: 3016, column: 25, scope: !11789)
!11792 = !DILocation(line: 3016, column: 28, scope: !11789)
!11793 = !DILocation(line: 3016, column: 36, scope: !11789)
!11794 = !DILocation(line: 3016, column: 10, scope: !11750)
!11795 = !DILocation(line: 3017, column: 11, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 3017, column: 11)
!11797 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3016, column: 44)
!11798 = !DILocation(line: 3017, column: 14, scope: !11796)
!11799 = !DILocation(line: 3017, column: 11, scope: !11797)
!11800 = !DILocation(line: 3018, column: 16, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 3017, column: 19)
!11802 = !DILocation(line: 3018, column: 8, scope: !11801)
!11803 = !DILocation(line: 3018, column: 14, scope: !11801)
!11804 = !DILocation(line: 3019, column: 16, scope: !11801)
!11805 = !DILocation(line: 3019, column: 8, scope: !11801)
!11806 = !DILocation(line: 3019, column: 14, scope: !11801)
!11807 = !DILocation(line: 3020, column: 7, scope: !11801)
!11808 = !DILocation(line: 3021, column: 18, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 3021, column: 17)
!11810 = !DILocation(line: 3021, column: 34, scope: !11809)
!11811 = !DILocation(line: 3021, column: 32, scope: !11809)
!11812 = !DILocation(line: 3021, column: 51, scope: !11809)
!11813 = !DILocation(line: 3021, column: 65, scope: !11809)
!11814 = !DILocation(line: 3021, column: 63, scope: !11809)
!11815 = !DILocation(line: 3021, column: 48, scope: !11809)
!11816 = !DILocation(line: 3021, column: 17, scope: !11796)
!11817 = !DILocation(line: 3022, column: 16, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 3021, column: 80)
!11819 = !DILocation(line: 3022, column: 8, scope: !11818)
!11820 = !DILocation(line: 3022, column: 14, scope: !11818)
!11821 = !DILocation(line: 3023, column: 16, scope: !11818)
!11822 = !DILocation(line: 3023, column: 8, scope: !11818)
!11823 = !DILocation(line: 3023, column: 14, scope: !11818)
!11824 = !DILocation(line: 3024, column: 7, scope: !11818)
!11825 = !DILocation(line: 3025, column: 6, scope: !11797)
!11826 = !DILocation(line: 3026, column: 5, scope: !11750)
!11827 = !DILocation(line: 3027, column: 9, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 3027, column: 9)
!11829 = !DILocation(line: 3027, column: 9, scope: !11680)
!11830 = !DILocalVariable(name: "speedsq", scope: !11831, file: !3, line: 3028, type: !21)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 3027, column: 19)
!11832 = !DILocation(line: 3028, column: 12, scope: !11831)
!11833 = !DILocation(line: 3028, column: 21, scope: !11831)
!11834 = !DILocation(line: 3028, column: 28, scope: !11831)
!11835 = !DILocation(line: 3028, column: 27, scope: !11831)
!11836 = !DILocation(line: 3028, column: 37, scope: !11831)
!11837 = !DILocation(line: 3028, column: 44, scope: !11831)
!11838 = !DILocation(line: 3028, column: 43, scope: !11831)
!11839 = !DILocation(line: 3028, column: 35, scope: !11831)
!11840 = !DILocation(line: 3029, column: 10, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 3029, column: 10)
!11842 = !DILocation(line: 3029, column: 20, scope: !11841)
!11843 = !DILocation(line: 3029, column: 18, scope: !11841)
!11844 = !DILocation(line: 3029, column: 10, scope: !11831)
!11845 = !DILocation(line: 3030, column: 24, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 3029, column: 32)
!11847 = !DILocation(line: 3030, column: 17, scope: !11846)
!11848 = !DILocation(line: 3030, column: 41, scope: !11846)
!11849 = !DILocation(line: 3030, column: 35, scope: !11846)
!11850 = !DILocation(line: 3030, column: 33, scope: !11846)
!11851 = !DILocation(line: 3030, column: 15, scope: !11846)
!11852 = !DILocation(line: 3031, column: 16, scope: !11846)
!11853 = !DILocation(line: 3031, column: 7, scope: !11846)
!11854 = !DILocation(line: 3031, column: 13, scope: !11846)
!11855 = !DILocation(line: 3032, column: 16, scope: !11846)
!11856 = !DILocation(line: 3032, column: 7, scope: !11846)
!11857 = !DILocation(line: 3032, column: 13, scope: !11846)
!11858 = !DILocation(line: 3033, column: 6, scope: !11846)
!11859 = !DILocation(line: 3034, column: 5, scope: !11831)
!11860 = !DILocation(line: 3035, column: 4, scope: !11680)
!11861 = !DILocation(line: 2981, column: 29, scope: !11676)
!11862 = !DILocation(line: 2981, column: 38, scope: !11676)
!11863 = !DILocation(line: 2981, column: 48, scope: !11676)
!11864 = !DILocation(line: 2981, column: 56, scope: !11676)
!11865 = !DILocation(line: 2981, column: 4, scope: !11676)
!11866 = distinct !{!11866, !11678, !11867}
!11867 = !DILocation(line: 3035, column: 4, scope: !11672)
!11868 = !DILocation(line: 3036, column: 3, scope: !11673)
!11869 = !DILocation(line: 2978, column: 24, scope: !11667)
!11870 = !DILocation(line: 2978, column: 3, scope: !11667)
!11871 = distinct !{!11871, !11670, !11872}
!11872 = !DILocation(line: 3036, column: 3, scope: !11664)
!11873 = !DILocation(line: 3037, column: 2, scope: !11623)
!11874 = !DILocation(line: 2966, column: 23, scope: !11617)
!11875 = !DILocation(line: 2966, column: 2, scope: !11617)
!11876 = distinct !{!11876, !11620, !11877}
!11877 = !DILocation(line: 3037, column: 2, scope: !11614)
!11878 = !DILocation(line: 3040, column: 7, scope: !2)
!11879 = !DILocation(line: 3040, column: 5, scope: !2)
!11880 = !DILocation(line: 3041, column: 7, scope: !2)
!11881 = !DILocation(line: 3041, column: 17, scope: !2)
!11882 = !DILocation(line: 3041, column: 15, scope: !2)
!11883 = !DILocation(line: 3041, column: 25, scope: !2)
!11884 = !DILocation(line: 3041, column: 30, scope: !2)
!11885 = !DILocation(line: 3041, column: 23, scope: !2)
!11886 = !DILocation(line: 3041, column: 13, scope: !2)
!11887 = !DILocation(line: 3041, column: 5, scope: !2)
!11888 = !DILocation(line: 3042, column: 8, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3042, column: 2)
!11890 = !DILocation(line: 3042, column: 7, scope: !11889)
!11891 = !DILocation(line: 3042, column: 12, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3042, column: 2)
!11893 = !DILocation(line: 3042, column: 15, scope: !11892)
!11894 = !DILocation(line: 3042, column: 13, scope: !11892)
!11895 = !DILocation(line: 3042, column: 2, scope: !11889)
!11896 = !DILocation(line: 3043, column: 3, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11892, file: !3, line: 3042, column: 43)
!11898 = !DILocation(line: 3043, column: 9, scope: !11897)
!11899 = !DILocation(line: 3044, column: 3, scope: !11897)
!11900 = !DILocation(line: 3044, column: 9, scope: !11897)
!11901 = !DILocation(line: 3045, column: 3, scope: !11897)
!11902 = !DILocation(line: 3045, column: 9, scope: !11897)
!11903 = !DILocation(line: 3046, column: 3, scope: !11897)
!11904 = !DILocation(line: 3046, column: 9, scope: !11897)
!11905 = !DILocation(line: 3047, column: 2, scope: !11897)
!11906 = !DILocation(line: 3042, column: 23, scope: !11892)
!11907 = !DILocation(line: 3042, column: 30, scope: !11892)
!11908 = !DILocation(line: 3042, column: 38, scope: !11892)
!11909 = !DILocation(line: 3042, column: 2, scope: !11892)
!11910 = distinct !{!11910, !11895, !11911}
!11911 = !DILocation(line: 3047, column: 2, scope: !11889)
!11912 = !DILocation(line: 3048, column: 7, scope: !2)
!11913 = !DILocation(line: 3048, column: 5, scope: !2)
!11914 = !DILocation(line: 3049, column: 7, scope: !2)
!11915 = !DILocation(line: 3049, column: 17, scope: !2)
!11916 = !DILocation(line: 3049, column: 15, scope: !2)
!11917 = !DILocation(line: 3049, column: 13, scope: !2)
!11918 = !DILocation(line: 3049, column: 5, scope: !2)
!11919 = !DILocation(line: 3050, column: 8, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3050, column: 2)
!11921 = !DILocation(line: 3050, column: 7, scope: !11920)
!11922 = !DILocation(line: 3050, column: 12, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 3050, column: 2)
!11924 = !DILocation(line: 3050, column: 15, scope: !11923)
!11925 = !DILocation(line: 3050, column: 13, scope: !11923)
!11926 = !DILocation(line: 3050, column: 2, scope: !11920)
!11927 = !DILocation(line: 3051, column: 3, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 3050, column: 63)
!11929 = !DILocation(line: 3051, column: 9, scope: !11928)
!11930 = !DILocation(line: 3052, column: 3, scope: !11928)
!11931 = !DILocation(line: 3052, column: 9, scope: !11928)
!11932 = !DILocation(line: 3053, column: 3, scope: !11928)
!11933 = !DILocation(line: 3053, column: 9, scope: !11928)
!11934 = !DILocation(line: 3054, column: 3, scope: !11928)
!11935 = !DILocation(line: 3054, column: 9, scope: !11928)
!11936 = !DILocation(line: 3055, column: 2, scope: !11928)
!11937 = !DILocation(line: 3050, column: 23, scope: !11923)
!11938 = !DILocation(line: 3050, column: 35, scope: !11923)
!11939 = !DILocation(line: 3050, column: 40, scope: !11923)
!11940 = !DILocation(line: 3050, column: 33, scope: !11923)
!11941 = !DILocation(line: 3050, column: 30, scope: !11923)
!11942 = !DILocation(line: 3050, column: 53, scope: !11923)
!11943 = !DILocation(line: 3050, column: 58, scope: !11923)
!11944 = !DILocation(line: 3050, column: 51, scope: !11923)
!11945 = !DILocation(line: 3050, column: 48, scope: !11923)
!11946 = !DILocation(line: 3050, column: 2, scope: !11923)
!11947 = distinct !{!11947, !11926, !11948}
!11948 = !DILocation(line: 3055, column: 2, scope: !11920)
!11949 = !DILocation(line: 3058, column: 6, scope: !2)
!11950 = !DILocation(line: 3058, column: 4, scope: !2)
!11951 = !DILocation(line: 3059, column: 9, scope: !2)
!11952 = !DILocation(line: 3059, column: 7, scope: !2)
!11953 = !DILocation(line: 3060, column: 9, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3060, column: 2)
!11955 = !DILocation(line: 3060, column: 15, scope: !11954)
!11956 = !DILocation(line: 3060, column: 14, scope: !11954)
!11957 = !DILocation(line: 3060, column: 8, scope: !11954)
!11958 = !DILocation(line: 3060, column: 7, scope: !11954)
!11959 = !DILocation(line: 3060, column: 22, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 3060, column: 2)
!11961 = !DILocation(line: 3060, column: 23, scope: !11960)
!11962 = !DILocation(line: 3060, column: 2, scope: !11954)
!11963 = !DILocation(line: 3061, column: 8, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !3, line: 3061, column: 7)
!11965 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 3060, column: 48)
!11966 = !DILocation(line: 3061, column: 16, scope: !11964)
!11967 = !DILocation(line: 3061, column: 23, scope: !11964)
!11968 = !DILocation(line: 3061, column: 26, scope: !11964)
!11969 = !DILocation(line: 3061, column: 34, scope: !11964)
!11970 = !DILocation(line: 3061, column: 41, scope: !11964)
!11971 = !DILocation(line: 3061, column: 44, scope: !11964)
!11972 = !DILocation(line: 3061, column: 52, scope: !11964)
!11973 = !DILocation(line: 3061, column: 59, scope: !11964)
!11974 = !DILocation(line: 3061, column: 62, scope: !11964)
!11975 = !DILocation(line: 3061, column: 70, scope: !11964)
!11976 = !DILocation(line: 3061, column: 7, scope: !11965)
!11977 = !DILocation(line: 3062, column: 5, scope: !11964)
!11978 = !DILocation(line: 3062, column: 7, scope: !11964)
!11979 = !DILocation(line: 3062, column: 4, scope: !11964)
!11980 = !DILocation(line: 3063, column: 2, scope: !11965)
!11981 = !DILocation(line: 3060, column: 28, scope: !11960)
!11982 = !DILocation(line: 3060, column: 34, scope: !11960)
!11983 = !DILocation(line: 3060, column: 43, scope: !11960)
!11984 = !DILocation(line: 3060, column: 2, scope: !11960)
!11985 = distinct !{!11985, !11962, !11986}
!11986 = !DILocation(line: 3063, column: 2, scope: !11954)
!11987 = !DILocation(line: 3065, column: 19, scope: !2)
!11988 = !DILocation(line: 3065, column: 26, scope: !2)
!11989 = !DILocation(line: 3065, column: 33, scope: !2)
!11990 = !DILocation(line: 3065, column: 2, scope: !2)
!11991 = !DILocation(line: 3068, column: 6, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3068, column: 6)
!11993 = !DILocation(line: 3068, column: 6, scope: !2)
!11994 = !DILocation(line: 3069, column: 12, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 3068, column: 17)
!11996 = !DILocation(line: 3070, column: 3, scope: !11995)
!11997 = !DILocation(line: 3071, column: 2, scope: !11995)
!11998 = !DILocation(line: 3073, column: 9, scope: !2)
!11999 = !DILocation(line: 3073, column: 2, scope: !2)
!12000 = !DILocation(line: 3073, column: 35, scope: !2)
!12001 = !DILocation(line: 3073, column: 34, scope: !2)
!12002 = !DILocation(line: 3073, column: 41, scope: !2)
!12003 = !DILocation(line: 3073, column: 40, scope: !2)
!12004 = !DILocation(line: 3073, column: 46, scope: !2)
!12005 = !DILocation(line: 3076, column: 9, scope: !2)
!12006 = !DILocation(line: 3077, column: 11, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3077, column: 2)
!12008 = !DILocation(line: 3077, column: 7, scope: !12007)
!12009 = !DILocation(line: 3077, column: 16, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 3077, column: 2)
!12011 = !DILocation(line: 3077, column: 22, scope: !12010)
!12012 = !DILocation(line: 3077, column: 20, scope: !12010)
!12013 = !DILocation(line: 3077, column: 2, scope: !12007)
!12014 = !DILocalVariable(name: "speedfac", scope: !12015, file: !3, line: 3078, type: !21)
!12015 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 3077, column: 39)
!12016 = !DILocation(line: 3078, column: 9, scope: !12015)
!12017 = !DILocation(line: 3078, column: 24, scope: !12015)
!12018 = !DILocation(line: 3078, column: 29, scope: !12015)
!12019 = !DILocation(line: 3078, column: 23, scope: !12015)
!12020 = !DILocation(line: 3078, column: 40, scope: !12015)
!12021 = !DILocation(line: 3078, column: 33, scope: !12015)
!12022 = !DILocation(line: 3078, column: 32, scope: !12015)
!12023 = !DILocation(line: 3078, column: 53, scope: !12015)
!12024 = !DILocation(line: 3078, column: 60, scope: !12015)
!12025 = !DILocation(line: 3078, column: 45, scope: !12015)
!12026 = !DILocation(line: 3078, column: 44, scope: !12015)
!12027 = !DILocalVariable(name: "side", scope: !12015, file: !3, line: 3079, type: !29)
!12028 = !DILocation(line: 3079, column: 7, scope: !12015)
!12029 = !DILocation(line: 3081, column: 12, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 3081, column: 3)
!12031 = !DILocation(line: 3081, column: 8, scope: !12030)
!12032 = !DILocation(line: 3081, column: 16, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 3081, column: 3)
!12034 = !DILocation(line: 3081, column: 20, scope: !12033)
!12035 = !DILocation(line: 3081, column: 3, scope: !12030)
!12036 = !DILocalVariable(name: "blendfac", scope: !12037, file: !3, line: 3082, type: !21)
!12037 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 3081, column: 32)
!12038 = !DILocation(line: 3082, column: 10, scope: !12037)
!12039 = !DILocalVariable(name: "ipodata", scope: !12037, file: !3, line: 3082, type: !176)
!12040 = !DILocation(line: 3082, column: 20, scope: !12037)
!12041 = !DILocation(line: 3088, column: 13, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 3088, column: 5)
!12043 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3085, column: 8)
!12044 = !DILocation(line: 3088, column: 19, scope: !12042)
!12045 = !DILocation(line: 3088, column: 18, scope: !12042)
!12046 = !DILocation(line: 3088, column: 24, scope: !12042)
!12047 = !DILocation(line: 3088, column: 11, scope: !12042)
!12048 = !DILocation(line: 3088, column: 10, scope: !12042)
!12049 = !DILocation(line: 3088, column: 28, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 3088, column: 5)
!12051 = !DILocation(line: 3088, column: 29, scope: !12050)
!12052 = !DILocation(line: 3088, column: 5, scope: !12042)
!12053 = !DILocation(line: 3089, column: 10, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 3089, column: 10)
!12055 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 3088, column: 39)
!12056 = !DILocation(line: 3089, column: 19, scope: !12054)
!12057 = !DILocation(line: 3089, column: 21, scope: !12054)
!12058 = !DILocation(line: 3089, column: 10, scope: !12055)
!12059 = !DILocation(line: 3090, column: 17, scope: !12054)
!12060 = !DILocation(line: 3090, column: 26, scope: !12054)
!12061 = !DILocation(line: 3090, column: 7, scope: !12054)
!12062 = !DILocation(line: 3090, column: 13, scope: !12054)
!12063 = !DILocation(line: 3090, column: 15, scope: !12054)
!12064 = !DILocation(line: 3092, column: 7, scope: !12054)
!12065 = !DILocation(line: 3092, column: 13, scope: !12054)
!12066 = !DILocation(line: 3092, column: 15, scope: !12054)
!12067 = !DILocation(line: 3093, column: 5, scope: !12055)
!12068 = !DILocation(line: 3088, column: 35, scope: !12050)
!12069 = !DILocation(line: 3088, column: 5, scope: !12050)
!12070 = distinct !{!12070, !12052, !12071}
!12071 = !DILocation(line: 3093, column: 5, scope: !12042)
!12072 = !DILocation(line: 3096, column: 12, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3096, column: 4)
!12074 = !DILocation(line: 3096, column: 18, scope: !12073)
!12075 = !DILocation(line: 3096, column: 17, scope: !12073)
!12076 = !DILocation(line: 3096, column: 23, scope: !12073)
!12077 = !DILocation(line: 3096, column: 10, scope: !12073)
!12078 = !DILocation(line: 3096, column: 9, scope: !12073)
!12079 = !DILocation(line: 3096, column: 27, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 3096, column: 4)
!12081 = !DILocation(line: 3096, column: 28, scope: !12080)
!12082 = !DILocation(line: 3096, column: 4, scope: !12073)
!12083 = !DILocation(line: 3096, column: 38, scope: !12080)
!12084 = !DILocation(line: 3096, column: 47, scope: !12080)
!12085 = !DILocation(line: 3096, column: 50, scope: !12080)
!12086 = !DILocation(line: 3096, column: 57, scope: !12080)
!12087 = !DILocation(line: 3096, column: 34, scope: !12080)
!12088 = !DILocation(line: 3096, column: 4, scope: !12080)
!12089 = distinct !{!12089, !12082, !12090}
!12090 = !DILocation(line: 3096, column: 59, scope: !12073)
!12091 = !DILocation(line: 3098, column: 10, scope: !12037)
!12092 = !DILocation(line: 3098, column: 8, scope: !12037)
!12093 = !DILocation(line: 3099, column: 8, scope: !12037)
!12094 = !DILocation(line: 3099, column: 6, scope: !12037)
!12095 = !DILocation(line: 3100, column: 8, scope: !12037)
!12096 = !DILocation(line: 3100, column: 6, scope: !12037)
!12097 = !DILocation(line: 3101, column: 9, scope: !12037)
!12098 = !DILocation(line: 3101, column: 7, scope: !12037)
!12099 = !DILocation(line: 3102, column: 9, scope: !12037)
!12100 = !DILocation(line: 3102, column: 21, scope: !12037)
!12101 = !DILocation(line: 3102, column: 27, scope: !12037)
!12102 = !DILocation(line: 3102, column: 19, scope: !12037)
!12103 = !DILocation(line: 3102, column: 16, scope: !12037)
!12104 = !DILocation(line: 3102, column: 7, scope: !12037)
!12105 = !DILocation(line: 3104, column: 8, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3104, column: 8)
!12107 = !DILocation(line: 3104, column: 8, scope: !12037)
!12108 = !DILocation(line: 3105, column: 9, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 3105, column: 9)
!12110 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 3104, column: 14)
!12111 = !DILocation(line: 3105, column: 14, scope: !12109)
!12112 = !DILocation(line: 3105, column: 20, scope: !12109)
!12113 = !DILocation(line: 3105, column: 9, scope: !12110)
!12114 = !DILocation(line: 3106, column: 9, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 3105, column: 25)
!12116 = !DILocation(line: 3107, column: 9, scope: !12115)
!12117 = !DILocation(line: 3108, column: 5, scope: !12115)
!12118 = !DILocation(line: 3109, column: 16, scope: !12110)
!12119 = !DILocation(line: 3109, column: 15, scope: !12110)
!12120 = !DILocation(line: 3109, column: 13, scope: !12110)
!12121 = !DILocation(line: 3110, column: 4, scope: !12110)
!12122 = !DILocation(line: 3112, column: 36, scope: !12037)
!12123 = !DILocation(line: 3112, column: 35, scope: !12037)
!12124 = !DILocation(line: 3112, column: 29, scope: !12037)
!12125 = !DILocation(line: 3112, column: 46, scope: !12037)
!12126 = !DILocation(line: 3112, column: 4, scope: !12037)
!12127 = !DILocation(line: 3114, column: 23, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3114, column: 4)
!12129 = !DILocation(line: 3114, column: 28, scope: !12128)
!12130 = !DILocation(line: 3114, column: 19, scope: !12128)
!12131 = !DILocation(line: 3114, column: 18, scope: !12128)
!12132 = !DILocation(line: 3114, column: 11, scope: !12128)
!12133 = !DILocation(line: 3114, column: 40, scope: !12128)
!12134 = !DILocation(line: 3114, column: 9, scope: !12128)
!12135 = !DILocation(line: 3114, column: 44, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 3114, column: 4)
!12137 = !DILocation(line: 3114, column: 46, scope: !12136)
!12138 = !DILocation(line: 3114, column: 45, scope: !12136)
!12139 = !DILocation(line: 3114, column: 4, scope: !12128)
!12140 = !DILocation(line: 3115, column: 24, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 3115, column: 5)
!12142 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 3114, column: 68)
!12143 = !DILocation(line: 3115, column: 29, scope: !12141)
!12144 = !DILocation(line: 3115, column: 20, scope: !12141)
!12145 = !DILocation(line: 3115, column: 19, scope: !12141)
!12146 = !DILocation(line: 3115, column: 12, scope: !12141)
!12147 = !DILocation(line: 3115, column: 41, scope: !12141)
!12148 = !DILocation(line: 3115, column: 10, scope: !12141)
!12149 = !DILocation(line: 3115, column: 45, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 3115, column: 5)
!12151 = !DILocation(line: 3115, column: 47, scope: !12150)
!12152 = !DILocation(line: 3115, column: 46, scope: !12150)
!12153 = !DILocation(line: 3115, column: 5, scope: !12141)
!12154 = !DILocation(line: 3116, column: 11, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !3, line: 3116, column: 10)
!12156 = distinct !DILexicalBlock(scope: !12150, file: !3, line: 3115, column: 106)
!12157 = !DILocation(line: 3116, column: 10, scope: !12155)
!12158 = !DILocation(line: 3116, column: 13, scope: !12155)
!12159 = !DILocation(line: 3116, column: 10, scope: !12156)
!12160 = !DILocalVariable(name: "jfx", scope: !12161, file: !3, line: 3117, type: !21)
!12161 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 3116, column: 17)
!12162 = !DILocation(line: 3117, column: 13, scope: !12161)
!12163 = !DILocation(line: 3117, column: 19, scope: !12161)
!12164 = !DILocation(line: 3117, column: 22, scope: !12161)
!12165 = !DILocalVariable(name: "jfy", scope: !12161, file: !3, line: 3118, type: !21)
!12166 = !DILocation(line: 3118, column: 13, scope: !12161)
!12167 = !DILocation(line: 3118, column: 19, scope: !12161)
!12168 = !DILocation(line: 3118, column: 22, scope: !12161)
!12169 = !DILocalVariable(name: "col", scope: !12161, file: !3, line: 3119, type: !84)
!12170 = !DILocation(line: 3119, column: 20, scope: !12161)
!12171 = !DILocation(line: 3122, column: 11, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 3122, column: 11)
!12173 = !DILocation(line: 3122, column: 16, scope: !12172)
!12174 = !DILocation(line: 3122, column: 11, scope: !12161)
!12175 = !DILocation(line: 3123, column: 23, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 3122, column: 24)
!12177 = !DILocation(line: 3123, column: 27, scope: !12176)
!12178 = !DILocation(line: 3123, column: 32, scope: !12176)
!12179 = !DILocation(line: 3123, column: 35, scope: !12176)
!12180 = !DILocation(line: 3123, column: 39, scope: !12176)
!12181 = !DILocation(line: 3123, column: 8, scope: !12176)
!12182 = !DILocation(line: 3124, column: 16, scope: !12176)
!12183 = !DILocation(line: 3124, column: 8, scope: !12176)
!12184 = !DILocation(line: 3124, column: 13, scope: !12176)
!12185 = !DILocation(line: 3124, column: 29, scope: !12176)
!12186 = !DILocation(line: 3124, column: 21, scope: !12176)
!12187 = !DILocation(line: 3124, column: 26, scope: !12176)
!12188 = !DILocation(line: 3124, column: 42, scope: !12176)
!12189 = !DILocation(line: 3124, column: 41, scope: !12176)
!12190 = !DILocation(line: 3124, column: 34, scope: !12176)
!12191 = !DILocation(line: 3124, column: 39, scope: !12176)
!12192 = !DILocation(line: 3126, column: 23, scope: !12176)
!12193 = !DILocation(line: 3126, column: 27, scope: !12176)
!12194 = !DILocation(line: 3126, column: 30, scope: !12176)
!12195 = !DILocation(line: 3126, column: 34, scope: !12176)
!12196 = !DILocation(line: 3126, column: 37, scope: !12176)
!12197 = !DILocation(line: 3126, column: 39, scope: !12176)
!12198 = !DILocation(line: 3126, column: 43, scope: !12176)
!12199 = !DILocation(line: 3126, column: 8, scope: !12176)
!12200 = !DILocation(line: 3127, column: 16, scope: !12176)
!12201 = !DILocation(line: 3127, column: 19, scope: !12176)
!12202 = !DILocation(line: 3127, column: 8, scope: !12176)
!12203 = !DILocation(line: 3127, column: 13, scope: !12176)
!12204 = !DILocation(line: 3127, column: 34, scope: !12176)
!12205 = !DILocation(line: 3127, column: 26, scope: !12176)
!12206 = !DILocation(line: 3127, column: 31, scope: !12176)
!12207 = !DILocation(line: 3127, column: 47, scope: !12176)
!12208 = !DILocation(line: 3127, column: 46, scope: !12176)
!12209 = !DILocation(line: 3127, column: 39, scope: !12176)
!12210 = !DILocation(line: 3127, column: 44, scope: !12176)
!12211 = !DILocation(line: 3129, column: 23, scope: !12176)
!12212 = !DILocation(line: 3129, column: 27, scope: !12176)
!12213 = !DILocation(line: 3129, column: 30, scope: !12176)
!12214 = !DILocation(line: 3129, column: 34, scope: !12176)
!12215 = !DILocation(line: 3129, column: 37, scope: !12176)
!12216 = !DILocation(line: 3129, column: 39, scope: !12176)
!12217 = !DILocation(line: 3129, column: 43, scope: !12176)
!12218 = !DILocation(line: 3129, column: 8, scope: !12176)
!12219 = !DILocation(line: 3130, column: 16, scope: !12176)
!12220 = !DILocation(line: 3130, column: 19, scope: !12176)
!12221 = !DILocation(line: 3130, column: 8, scope: !12176)
!12222 = !DILocation(line: 3130, column: 13, scope: !12176)
!12223 = !DILocation(line: 3130, column: 34, scope: !12176)
!12224 = !DILocation(line: 3130, column: 37, scope: !12176)
!12225 = !DILocation(line: 3130, column: 26, scope: !12176)
!12226 = !DILocation(line: 3130, column: 31, scope: !12176)
!12227 = !DILocation(line: 3130, column: 52, scope: !12176)
!12228 = !DILocation(line: 3130, column: 51, scope: !12176)
!12229 = !DILocation(line: 3130, column: 44, scope: !12176)
!12230 = !DILocation(line: 3130, column: 49, scope: !12176)
!12231 = !DILocation(line: 3132, column: 23, scope: !12176)
!12232 = !DILocation(line: 3132, column: 27, scope: !12176)
!12233 = !DILocation(line: 3132, column: 32, scope: !12176)
!12234 = !DILocation(line: 3132, column: 35, scope: !12176)
!12235 = !DILocation(line: 3132, column: 39, scope: !12176)
!12236 = !DILocation(line: 3132, column: 8, scope: !12176)
!12237 = !DILocation(line: 3133, column: 16, scope: !12176)
!12238 = !DILocation(line: 3133, column: 8, scope: !12176)
!12239 = !DILocation(line: 3133, column: 13, scope: !12176)
!12240 = !DILocation(line: 3133, column: 29, scope: !12176)
!12241 = !DILocation(line: 3133, column: 32, scope: !12176)
!12242 = !DILocation(line: 3133, column: 21, scope: !12176)
!12243 = !DILocation(line: 3133, column: 26, scope: !12176)
!12244 = !DILocation(line: 3133, column: 47, scope: !12176)
!12245 = !DILocation(line: 3133, column: 46, scope: !12176)
!12246 = !DILocation(line: 3133, column: 39, scope: !12176)
!12247 = !DILocation(line: 3133, column: 44, scope: !12176)
!12248 = !DILocation(line: 3134, column: 7, scope: !12176)
!12249 = !DILocation(line: 3136, column: 15, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 3135, column: 12)
!12251 = !DILocation(line: 3136, column: 24, scope: !12250)
!12252 = !DILocation(line: 3136, column: 23, scope: !12250)
!12253 = !DILocation(line: 3136, column: 31, scope: !12250)
!12254 = !DILocation(line: 3136, column: 30, scope: !12250)
!12255 = !DILocation(line: 3136, column: 8, scope: !12250)
!12256 = !DILocation(line: 3136, column: 13, scope: !12250)
!12257 = !DILocation(line: 3136, column: 45, scope: !12250)
!12258 = !DILocation(line: 3136, column: 54, scope: !12250)
!12259 = !DILocation(line: 3136, column: 53, scope: !12250)
!12260 = !DILocation(line: 3136, column: 61, scope: !12250)
!12261 = !DILocation(line: 3136, column: 60, scope: !12250)
!12262 = !DILocation(line: 3136, column: 38, scope: !12250)
!12263 = !DILocation(line: 3136, column: 43, scope: !12250)
!12264 = !DILocation(line: 3136, column: 76, scope: !12250)
!12265 = !DILocation(line: 3136, column: 75, scope: !12250)
!12266 = !DILocation(line: 3136, column: 68, scope: !12250)
!12267 = !DILocation(line: 3136, column: 73, scope: !12250)
!12268 = !DILocation(line: 3137, column: 15, scope: !12250)
!12269 = !DILocation(line: 3137, column: 24, scope: !12250)
!12270 = !DILocation(line: 3137, column: 23, scope: !12250)
!12271 = !DILocation(line: 3137, column: 31, scope: !12250)
!12272 = !DILocation(line: 3137, column: 30, scope: !12250)
!12273 = !DILocation(line: 3137, column: 34, scope: !12250)
!12274 = !DILocation(line: 3137, column: 8, scope: !12250)
!12275 = !DILocation(line: 3137, column: 13, scope: !12250)
!12276 = !DILocation(line: 3137, column: 49, scope: !12250)
!12277 = !DILocation(line: 3137, column: 58, scope: !12250)
!12278 = !DILocation(line: 3137, column: 57, scope: !12250)
!12279 = !DILocation(line: 3137, column: 65, scope: !12250)
!12280 = !DILocation(line: 3137, column: 64, scope: !12250)
!12281 = !DILocation(line: 3137, column: 42, scope: !12250)
!12282 = !DILocation(line: 3137, column: 47, scope: !12250)
!12283 = !DILocation(line: 3137, column: 80, scope: !12250)
!12284 = !DILocation(line: 3137, column: 79, scope: !12250)
!12285 = !DILocation(line: 3137, column: 72, scope: !12250)
!12286 = !DILocation(line: 3137, column: 77, scope: !12250)
!12287 = !DILocation(line: 3138, column: 15, scope: !12250)
!12288 = !DILocation(line: 3138, column: 24, scope: !12250)
!12289 = !DILocation(line: 3138, column: 23, scope: !12250)
!12290 = !DILocation(line: 3138, column: 31, scope: !12250)
!12291 = !DILocation(line: 3138, column: 30, scope: !12250)
!12292 = !DILocation(line: 3138, column: 34, scope: !12250)
!12293 = !DILocation(line: 3138, column: 8, scope: !12250)
!12294 = !DILocation(line: 3138, column: 13, scope: !12250)
!12295 = !DILocation(line: 3138, column: 49, scope: !12250)
!12296 = !DILocation(line: 3138, column: 58, scope: !12250)
!12297 = !DILocation(line: 3138, column: 57, scope: !12250)
!12298 = !DILocation(line: 3138, column: 65, scope: !12250)
!12299 = !DILocation(line: 3138, column: 64, scope: !12250)
!12300 = !DILocation(line: 3138, column: 68, scope: !12250)
!12301 = !DILocation(line: 3138, column: 42, scope: !12250)
!12302 = !DILocation(line: 3138, column: 47, scope: !12250)
!12303 = !DILocation(line: 3138, column: 84, scope: !12250)
!12304 = !DILocation(line: 3138, column: 83, scope: !12250)
!12305 = !DILocation(line: 3138, column: 76, scope: !12250)
!12306 = !DILocation(line: 3138, column: 81, scope: !12250)
!12307 = !DILocation(line: 3139, column: 15, scope: !12250)
!12308 = !DILocation(line: 3139, column: 24, scope: !12250)
!12309 = !DILocation(line: 3139, column: 23, scope: !12250)
!12310 = !DILocation(line: 3139, column: 31, scope: !12250)
!12311 = !DILocation(line: 3139, column: 30, scope: !12250)
!12312 = !DILocation(line: 3139, column: 8, scope: !12250)
!12313 = !DILocation(line: 3139, column: 13, scope: !12250)
!12314 = !DILocation(line: 3139, column: 45, scope: !12250)
!12315 = !DILocation(line: 3139, column: 54, scope: !12250)
!12316 = !DILocation(line: 3139, column: 53, scope: !12250)
!12317 = !DILocation(line: 3139, column: 61, scope: !12250)
!12318 = !DILocation(line: 3139, column: 60, scope: !12250)
!12319 = !DILocation(line: 3139, column: 64, scope: !12250)
!12320 = !DILocation(line: 3139, column: 38, scope: !12250)
!12321 = !DILocation(line: 3139, column: 43, scope: !12250)
!12322 = !DILocation(line: 3139, column: 80, scope: !12250)
!12323 = !DILocation(line: 3139, column: 79, scope: !12250)
!12324 = !DILocation(line: 3139, column: 72, scope: !12250)
!12325 = !DILocation(line: 3139, column: 77, scope: !12250)
!12326 = !DILocation(line: 3141, column: 12, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 3141, column: 11)
!12328 = !DILocation(line: 3141, column: 11, scope: !12327)
!12329 = !DILocation(line: 3141, column: 14, scope: !12327)
!12330 = !DILocation(line: 3141, column: 11, scope: !12161)
!12331 = !DILocation(line: 3141, column: 25, scope: !12327)
!12332 = !DILocation(line: 3141, column: 30, scope: !12327)
!12333 = !DILocation(line: 3141, column: 21, scope: !12327)
!12334 = !DILocation(line: 3142, column: 17, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 3142, column: 16)
!12336 = !DILocation(line: 3142, column: 16, scope: !12335)
!12337 = !DILocation(line: 3142, column: 19, scope: !12335)
!12338 = !DILocation(line: 3142, column: 16, scope: !12327)
!12339 = !DILocation(line: 3142, column: 27, scope: !12335)
!12340 = !DILocation(line: 3142, column: 32, scope: !12335)
!12341 = !DILocation(line: 3142, column: 23, scope: !12335)
!12342 = !DILocation(line: 3143, column: 32, scope: !12335)
!12343 = !DILocation(line: 3143, column: 31, scope: !12335)
!12344 = !DILocation(line: 3143, column: 24, scope: !12335)
!12345 = !DILocation(line: 3143, column: 35, scope: !12335)
!12346 = !DILocation(line: 3143, column: 16, scope: !12335)
!12347 = !DILocation(line: 3143, column: 21, scope: !12335)
!12348 = !DILocation(line: 3144, column: 20, scope: !12161)
!12349 = !DILocation(line: 3144, column: 11, scope: !12161)
!12350 = !DILocation(line: 3144, column: 18, scope: !12161)
!12351 = !DILocation(line: 3146, column: 39, scope: !12161)
!12352 = !DILocation(line: 3146, column: 43, scope: !12161)
!12353 = !DILocation(line: 3146, column: 47, scope: !12161)
!12354 = !DILocation(line: 3146, column: 51, scope: !12161)
!12355 = !DILocation(line: 3146, column: 7, scope: !12161)
!12356 = !DILocation(line: 3147, column: 6, scope: !12161)
!12357 = !DILocation(line: 3148, column: 5, scope: !12156)
!12358 = !DILocation(line: 3115, column: 55, scope: !12150)
!12359 = !DILocation(line: 3115, column: 61, scope: !12150)
!12360 = !DILocation(line: 3115, column: 73, scope: !12150)
!12361 = !DILocation(line: 3115, column: 81, scope: !12150)
!12362 = !DILocation(line: 3115, column: 89, scope: !12150)
!12363 = !DILocation(line: 3115, column: 96, scope: !12150)
!12364 = !DILocation(line: 3115, column: 102, scope: !12150)
!12365 = !DILocation(line: 3115, column: 5, scope: !12150)
!12366 = distinct !{!12366, !12153, !12367}
!12367 = !DILocation(line: 3148, column: 5, scope: !12141)
!12368 = !DILocation(line: 3149, column: 8, scope: !12142)
!12369 = !DILocation(line: 3150, column: 8, scope: !12142)
!12370 = !DILocation(line: 3151, column: 4, scope: !12142)
!12371 = !DILocation(line: 3114, column: 54, scope: !12136)
!12372 = !DILocation(line: 3114, column: 60, scope: !12136)
!12373 = !DILocation(line: 3114, column: 4, scope: !12136)
!12374 = distinct !{!12374, !12139, !12375}
!12375 = !DILocation(line: 3151, column: 4, scope: !12128)
!12376 = !DILocation(line: 3160, column: 16, scope: !12037)
!12377 = !DILocation(line: 3160, column: 26, scope: !12037)
!12378 = !DILocation(line: 3160, column: 24, scope: !12037)
!12379 = !DILocation(line: 3160, column: 15, scope: !12037)
!12380 = !DILocation(line: 3160, column: 39, scope: !12037)
!12381 = !DILocation(line: 3160, column: 32, scope: !12037)
!12382 = !DILocation(line: 3160, column: 31, scope: !12037)
!12383 = !DILocation(line: 3160, column: 12, scope: !12037)
!12384 = !DILocation(line: 3162, column: 23, scope: !12037)
!12385 = !DILocation(line: 3162, column: 19, scope: !12037)
!12386 = !DILocation(line: 3162, column: 18, scope: !12037)
!12387 = !DILocation(line: 3162, column: 50, scope: !12037)
!12388 = !DILocation(line: 3162, column: 46, scope: !12037)
!12389 = !DILocation(line: 3162, column: 45, scope: !12037)
!12390 = !DILocation(line: 3162, column: 39, scope: !12037)
!12391 = !DILocation(line: 3162, column: 14, scope: !12037)
!12392 = !DILocation(line: 3162, column: 12, scope: !12037)
!12393 = !DILocation(line: 3165, column: 8, scope: !12037)
!12394 = !DILocation(line: 3165, column: 6, scope: !12037)
!12395 = !DILocation(line: 3166, column: 8, scope: !12037)
!12396 = !DILocation(line: 3166, column: 6, scope: !12037)
!12397 = !DILocation(line: 3167, column: 13, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 3167, column: 4)
!12399 = !DILocation(line: 3167, column: 11, scope: !12398)
!12400 = !DILocation(line: 3167, column: 27, scope: !12398)
!12401 = !DILocation(line: 3167, column: 26, scope: !12398)
!12402 = !DILocation(line: 3167, column: 39, scope: !12398)
!12403 = !DILocation(line: 3167, column: 45, scope: !12398)
!12404 = !DILocation(line: 3167, column: 44, scope: !12398)
!12405 = !DILocation(line: 3167, column: 50, scope: !12398)
!12406 = !DILocation(line: 3167, column: 37, scope: !12398)
!12407 = !DILocation(line: 3167, column: 9, scope: !12398)
!12408 = !DILocation(line: 3167, column: 54, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 3167, column: 4)
!12410 = !DILocation(line: 3167, column: 55, scope: !12409)
!12411 = !DILocation(line: 3167, column: 4, scope: !12398)
!12412 = !DILocation(line: 3168, column: 9, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 3168, column: 9)
!12414 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 3167, column: 91)
!12415 = !DILocation(line: 3168, column: 13, scope: !12413)
!12416 = !DILocation(line: 3168, column: 9, scope: !12414)
!12417 = !DILocalVariable(name: "bfac", scope: !12418, file: !3, line: 3169, type: !21)
!12418 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3168, column: 22)
!12419 = !DILocation(line: 3169, column: 12, scope: !12418)
!12420 = !DILocation(line: 3169, column: 18, scope: !12418)
!12421 = !DILocation(line: 3169, column: 22, scope: !12418)
!12422 = !DILocation(line: 3169, column: 28, scope: !12418)
!12423 = !DILocation(line: 3169, column: 27, scope: !12418)
!12424 = !DILocation(line: 3171, column: 16, scope: !12418)
!12425 = !DILocation(line: 3171, column: 21, scope: !12418)
!12426 = !DILocation(line: 3171, column: 25, scope: !12418)
!12427 = !DILocation(line: 3171, column: 20, scope: !12418)
!12428 = !DILocation(line: 3171, column: 6, scope: !12418)
!12429 = !DILocation(line: 3171, column: 13, scope: !12418)
!12430 = !DILocation(line: 3172, column: 16, scope: !12418)
!12431 = !DILocation(line: 3172, column: 21, scope: !12418)
!12432 = !DILocation(line: 3172, column: 25, scope: !12418)
!12433 = !DILocation(line: 3172, column: 20, scope: !12418)
!12434 = !DILocation(line: 3172, column: 6, scope: !12418)
!12435 = !DILocation(line: 3172, column: 13, scope: !12418)
!12436 = !DILocation(line: 3173, column: 16, scope: !12418)
!12437 = !DILocation(line: 3173, column: 21, scope: !12418)
!12438 = !DILocation(line: 3173, column: 25, scope: !12418)
!12439 = !DILocation(line: 3173, column: 20, scope: !12418)
!12440 = !DILocation(line: 3173, column: 6, scope: !12418)
!12441 = !DILocation(line: 3173, column: 13, scope: !12418)
!12442 = !DILocation(line: 3174, column: 16, scope: !12418)
!12443 = !DILocation(line: 3174, column: 21, scope: !12418)
!12444 = !DILocation(line: 3174, column: 25, scope: !12418)
!12445 = !DILocation(line: 3174, column: 20, scope: !12418)
!12446 = !DILocation(line: 3174, column: 6, scope: !12418)
!12447 = !DILocation(line: 3174, column: 13, scope: !12418)
!12448 = !DILocation(line: 3176, column: 13, scope: !12418)
!12449 = !DILocation(line: 3176, column: 7, scope: !12418)
!12450 = !DILocation(line: 3176, column: 10, scope: !12418)
!12451 = !DILocation(line: 3177, column: 11, scope: !12418)
!12452 = !DILocation(line: 3177, column: 7, scope: !12418)
!12453 = !DILocation(line: 3177, column: 9, scope: !12418)
!12454 = !DILocation(line: 3178, column: 5, scope: !12418)
!12455 = !DILocation(line: 3179, column: 4, scope: !12414)
!12456 = !DILocation(line: 3167, column: 61, scope: !12409)
!12457 = !DILocation(line: 3167, column: 67, scope: !12409)
!12458 = !DILocation(line: 3167, column: 74, scope: !12409)
!12459 = !DILocation(line: 3167, column: 81, scope: !12409)
!12460 = !DILocation(line: 3167, column: 87, scope: !12409)
!12461 = !DILocation(line: 3167, column: 4, scope: !12409)
!12462 = distinct !{!12462, !12411, !12463}
!12463 = !DILocation(line: 3179, column: 4, scope: !12398)
!12464 = !DILocation(line: 3180, column: 3, scope: !12037)
!12465 = !DILocation(line: 3081, column: 28, scope: !12033)
!12466 = !DILocation(line: 3081, column: 3, scope: !12033)
!12467 = distinct !{!12467, !12035, !12468}
!12468 = !DILocation(line: 3180, column: 3, scope: !12030)
!12469 = !DILocation(line: 3181, column: 2, scope: !12015)
!12470 = !DILocation(line: 3077, column: 35, scope: !12010)
!12471 = !DILocation(line: 3077, column: 2, scope: !12010)
!12472 = distinct !{!12472, !12013, !12473}
!12473 = !DILocation(line: 3181, column: 2, scope: !12007)
!12474 = !DILocation(line: 3184, column: 6, scope: !2)
!12475 = !DILocation(line: 3184, column: 4, scope: !2)
!12476 = !DILocation(line: 3185, column: 6, scope: !2)
!12477 = !DILocation(line: 3185, column: 4, scope: !2)
!12478 = !DILocation(line: 3186, column: 6, scope: !2)
!12479 = !DILocation(line: 3186, column: 4, scope: !2)
!12480 = !DILocation(line: 3187, column: 6, scope: !2)
!12481 = !DILocation(line: 3187, column: 4, scope: !2)
!12482 = !DILocation(line: 3188, column: 11, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3188, column: 2)
!12484 = !DILocation(line: 3188, column: 10, scope: !12483)
!12485 = !DILocation(line: 3188, column: 23, scope: !12483)
!12486 = !DILocation(line: 3188, column: 29, scope: !12483)
!12487 = !DILocation(line: 3188, column: 28, scope: !12483)
!12488 = !DILocation(line: 3188, column: 34, scope: !12483)
!12489 = !DILocation(line: 3188, column: 21, scope: !12483)
!12490 = !DILocation(line: 3188, column: 7, scope: !12483)
!12491 = !DILocation(line: 3188, column: 38, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12483, file: !3, line: 3188, column: 2)
!12493 = !DILocation(line: 3188, column: 39, scope: !12492)
!12494 = !DILocation(line: 3188, column: 2, scope: !12483)
!12495 = !DILocalVariable(name: "mfac", scope: !12496, file: !3, line: 3189, type: !21)
!12496 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 3188, column: 82)
!12497 = !DILocation(line: 3189, column: 9, scope: !12496)
!12498 = !DILocation(line: 3189, column: 17, scope: !12496)
!12499 = !DILocation(line: 3189, column: 16, scope: !12496)
!12500 = !DILocalVariable(name: "fac", scope: !12496, file: !3, line: 3190, type: !21)
!12501 = !DILocation(line: 3190, column: 9, scope: !12496)
!12502 = !DILocation(line: 3190, column: 17, scope: !12496)
!12503 = !DILocation(line: 3190, column: 16, scope: !12496)
!12504 = !DILocation(line: 3190, column: 20, scope: !12496)
!12505 = !DILocation(line: 3190, column: 15, scope: !12496)
!12506 = !DILocation(line: 3190, column: 36, scope: !12496)
!12507 = !DILocation(line: 3190, column: 43, scope: !12496)
!12508 = !DILocation(line: 3190, column: 42, scope: !12496)
!12509 = !DILocation(line: 3190, column: 40, scope: !12496)
!12510 = !DILocalVariable(name: "nfac", scope: !12496, file: !3, line: 3191, type: !21)
!12511 = !DILocation(line: 3191, column: 9, scope: !12496)
!12512 = !DILocation(line: 3191, column: 23, scope: !12496)
!12513 = !DILocation(line: 3191, column: 21, scope: !12496)
!12514 = !DILocation(line: 3193, column: 11, scope: !12496)
!12515 = !DILocation(line: 3193, column: 15, scope: !12496)
!12516 = !DILocation(line: 3193, column: 14, scope: !12496)
!12517 = !DILocation(line: 3193, column: 24, scope: !12496)
!12518 = !DILocation(line: 3193, column: 29, scope: !12496)
!12519 = !DILocation(line: 3193, column: 28, scope: !12496)
!12520 = !DILocation(line: 3193, column: 22, scope: !12496)
!12521 = !DILocation(line: 3193, column: 3, scope: !12496)
!12522 = !DILocation(line: 3193, column: 9, scope: !12496)
!12523 = !DILocation(line: 3194, column: 11, scope: !12496)
!12524 = !DILocation(line: 3194, column: 15, scope: !12496)
!12525 = !DILocation(line: 3194, column: 14, scope: !12496)
!12526 = !DILocation(line: 3194, column: 24, scope: !12496)
!12527 = !DILocation(line: 3194, column: 29, scope: !12496)
!12528 = !DILocation(line: 3194, column: 28, scope: !12496)
!12529 = !DILocation(line: 3194, column: 22, scope: !12496)
!12530 = !DILocation(line: 3194, column: 3, scope: !12496)
!12531 = !DILocation(line: 3194, column: 9, scope: !12496)
!12532 = !DILocation(line: 3195, column: 11, scope: !12496)
!12533 = !DILocation(line: 3195, column: 15, scope: !12496)
!12534 = !DILocation(line: 3195, column: 14, scope: !12496)
!12535 = !DILocation(line: 3195, column: 24, scope: !12496)
!12536 = !DILocation(line: 3195, column: 29, scope: !12496)
!12537 = !DILocation(line: 3195, column: 28, scope: !12496)
!12538 = !DILocation(line: 3195, column: 22, scope: !12496)
!12539 = !DILocation(line: 3195, column: 3, scope: !12496)
!12540 = !DILocation(line: 3195, column: 9, scope: !12496)
!12541 = !DILocation(line: 3196, column: 11, scope: !12496)
!12542 = !DILocation(line: 3196, column: 15, scope: !12496)
!12543 = !DILocation(line: 3196, column: 14, scope: !12496)
!12544 = !DILocation(line: 3196, column: 24, scope: !12496)
!12545 = !DILocation(line: 3196, column: 29, scope: !12496)
!12546 = !DILocation(line: 3196, column: 28, scope: !12496)
!12547 = !DILocation(line: 3196, column: 22, scope: !12496)
!12548 = !DILocation(line: 3196, column: 3, scope: !12496)
!12549 = !DILocation(line: 3196, column: 9, scope: !12496)
!12550 = !DILocation(line: 3197, column: 2, scope: !12496)
!12551 = !DILocation(line: 3188, column: 45, scope: !12492)
!12552 = !DILocation(line: 3188, column: 52, scope: !12492)
!12553 = !DILocation(line: 3188, column: 59, scope: !12492)
!12554 = !DILocation(line: 3188, column: 66, scope: !12492)
!12555 = !DILocation(line: 3188, column: 72, scope: !12492)
!12556 = !DILocation(line: 3188, column: 78, scope: !12492)
!12557 = !DILocation(line: 3188, column: 2, scope: !12492)
!12558 = distinct !{!12558, !12494, !12559}
!12559 = !DILocation(line: 3197, column: 2, scope: !12483)
!12560 = !DILocation(line: 3199, column: 2, scope: !2)
!12561 = !DILocation(line: 3199, column: 12, scope: !2)
!12562 = !DILocation(line: 3200, column: 2, scope: !2)
!12563 = !DILocation(line: 3200, column: 12, scope: !2)
!12564 = !DILocation(line: 3201, column: 2, scope: !2)
!12565 = !DILocation(line: 3201, column: 12, scope: !2)
!12566 = !DILocation(line: 3202, column: 2, scope: !2)
!12567 = !DILocation(line: 3202, column: 12, scope: !2)
!12568 = !DILocation(line: 3203, column: 2, scope: !2)
!12569 = !DILocation(line: 3203, column: 12, scope: !2)
!12570 = !DILocation(line: 3204, column: 2, scope: !2)
!12571 = !DILocation(line: 3204, column: 12, scope: !2)
!12572 = !DILocation(line: 3205, column: 6, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3205, column: 6)
!12574 = !DILocation(line: 3205, column: 6, scope: !2)
!12575 = !DILocation(line: 3205, column: 21, scope: !12573)
!12576 = !DILocation(line: 3205, column: 31, scope: !12573)
!12577 = !DILocation(line: 3206, column: 2, scope: !2)
!12578 = !DILocation(line: 3207, column: 1, scope: !2)
!12579 = distinct !DISubprogram(name: "set_quad_bezier_ipo", scope: !3, file: !3, line: 2883, type: !12580, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!12580 = !DISubroutineType(types: !12581)
!12581 = !{null, !21, !31}
!12582 = !DILocalVariable(name: "fac", arg: 1, scope: !12579, file: !3, line: 2883, type: !21)
!12583 = !DILocation(line: 2883, column: 39, scope: !12579)
!12584 = !DILocalVariable(name: "data", arg: 2, scope: !12579, file: !3, line: 2883, type: !31)
!12585 = !DILocation(line: 2883, column: 51, scope: !12579)
!12586 = !DILocalVariable(name: "mfac", scope: !12579, file: !3, line: 2885, type: !21)
!12587 = !DILocation(line: 2885, column: 8, scope: !12579)
!12588 = !DILocation(line: 2885, column: 20, scope: !12579)
!12589 = !DILocation(line: 2885, column: 19, scope: !12579)
!12590 = !DILocation(line: 2887, column: 11, scope: !12579)
!12591 = !DILocation(line: 2887, column: 16, scope: !12579)
!12592 = !DILocation(line: 2887, column: 15, scope: !12579)
!12593 = !DILocation(line: 2887, column: 2, scope: !12579)
!12594 = !DILocation(line: 2887, column: 9, scope: !12579)
!12595 = !DILocation(line: 2888, column: 16, scope: !12579)
!12596 = !DILocation(line: 2888, column: 15, scope: !12579)
!12597 = !DILocation(line: 2888, column: 21, scope: !12579)
!12598 = !DILocation(line: 2888, column: 20, scope: !12579)
!12599 = !DILocation(line: 2888, column: 2, scope: !12579)
!12600 = !DILocation(line: 2888, column: 9, scope: !12579)
!12601 = !DILocation(line: 2889, column: 11, scope: !12579)
!12602 = !DILocation(line: 2889, column: 15, scope: !12579)
!12603 = !DILocation(line: 2889, column: 14, scope: !12579)
!12604 = !DILocation(line: 2889, column: 2, scope: !12579)
!12605 = !DILocation(line: 2889, column: 9, scope: !12579)
!12606 = !DILocation(line: 2890, column: 1, scope: !12579)
!12607 = distinct !DISubprogram(name: "quad_bezier_2d", scope: !3, file: !3, line: 2865, type: !12608, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!12608 = !DISubroutineType(types: !12609)
!12609 = !{null, !31, !31, !31, !31}
!12610 = !DILocalVariable(name: "result", arg: 1, scope: !12607, file: !3, line: 2865, type: !31)
!12611 = !DILocation(line: 2865, column: 35, scope: !12607)
!12612 = !DILocalVariable(name: "v1", arg: 2, scope: !12607, file: !3, line: 2865, type: !31)
!12613 = !DILocation(line: 2865, column: 50, scope: !12607)
!12614 = !DILocalVariable(name: "v2", arg: 3, scope: !12607, file: !3, line: 2865, type: !31)
!12615 = !DILocation(line: 2865, column: 61, scope: !12607)
!12616 = !DILocalVariable(name: "ipodata", arg: 4, scope: !12607, file: !3, line: 2865, type: !31)
!12617 = !DILocation(line: 2865, column: 72, scope: !12607)
!12618 = !DILocalVariable(name: "p1", scope: !12607, file: !3, line: 2867, type: !3002)
!12619 = !DILocation(line: 2867, column: 8, scope: !12607)
!12620 = !DILocalVariable(name: "p2", scope: !12607, file: !3, line: 2867, type: !3002)
!12621 = !DILocation(line: 2867, column: 15, scope: !12607)
!12622 = !DILocalVariable(name: "p3", scope: !12607, file: !3, line: 2867, type: !3002)
!12623 = !DILocation(line: 2867, column: 22, scope: !12607)
!12624 = !DILocation(line: 2869, column: 10, scope: !12607)
!12625 = !DILocation(line: 2869, column: 9, scope: !12607)
!12626 = !DILocation(line: 2869, column: 2, scope: !12607)
!12627 = !DILocation(line: 2869, column: 7, scope: !12607)
!12628 = !DILocation(line: 2870, column: 10, scope: !12607)
!12629 = !DILocation(line: 2870, column: 9, scope: !12607)
!12630 = !DILocation(line: 2870, column: 2, scope: !12607)
!12631 = !DILocation(line: 2870, column: 7, scope: !12607)
!12632 = !DILocation(line: 2872, column: 9, scope: !12607)
!12633 = !DILocation(line: 2872, column: 2, scope: !12607)
!12634 = !DILocation(line: 2872, column: 7, scope: !12607)
!12635 = !DILocation(line: 2873, column: 9, scope: !12607)
!12636 = !DILocation(line: 2873, column: 2, scope: !12607)
!12637 = !DILocation(line: 2873, column: 7, scope: !12607)
!12638 = !DILocation(line: 2876, column: 15, scope: !12607)
!12639 = !DILocation(line: 2876, column: 14, scope: !12607)
!12640 = !DILocation(line: 2876, column: 28, scope: !12607)
!12641 = !DILocation(line: 2876, column: 27, scope: !12607)
!12642 = !DILocation(line: 2876, column: 21, scope: !12607)
!12643 = !DILocation(line: 2876, column: 2, scope: !12607)
!12644 = !DILocation(line: 2876, column: 7, scope: !12607)
!12645 = !DILocation(line: 2877, column: 15, scope: !12607)
!12646 = !DILocation(line: 2877, column: 14, scope: !12607)
!12647 = !DILocation(line: 2877, column: 28, scope: !12607)
!12648 = !DILocation(line: 2877, column: 27, scope: !12607)
!12649 = !DILocation(line: 2877, column: 21, scope: !12607)
!12650 = !DILocation(line: 2877, column: 2, scope: !12607)
!12651 = !DILocation(line: 2877, column: 7, scope: !12607)
!12652 = !DILocation(line: 2879, column: 13, scope: !12607)
!12653 = !DILocation(line: 2879, column: 24, scope: !12607)
!12654 = !DILocation(line: 2879, column: 23, scope: !12607)
!12655 = !DILocation(line: 2879, column: 32, scope: !12607)
!12656 = !DILocation(line: 2879, column: 43, scope: !12607)
!12657 = !DILocation(line: 2879, column: 42, scope: !12607)
!12658 = !DILocation(line: 2879, column: 30, scope: !12607)
!12659 = !DILocation(line: 2879, column: 51, scope: !12607)
!12660 = !DILocation(line: 2879, column: 62, scope: !12607)
!12661 = !DILocation(line: 2879, column: 61, scope: !12607)
!12662 = !DILocation(line: 2879, column: 49, scope: !12607)
!12663 = !DILocation(line: 2879, column: 2, scope: !12607)
!12664 = !DILocation(line: 2879, column: 11, scope: !12607)
!12665 = !DILocation(line: 2880, column: 13, scope: !12607)
!12666 = !DILocation(line: 2880, column: 24, scope: !12607)
!12667 = !DILocation(line: 2880, column: 23, scope: !12607)
!12668 = !DILocation(line: 2880, column: 32, scope: !12607)
!12669 = !DILocation(line: 2880, column: 43, scope: !12607)
!12670 = !DILocation(line: 2880, column: 42, scope: !12607)
!12671 = !DILocation(line: 2880, column: 30, scope: !12607)
!12672 = !DILocation(line: 2880, column: 51, scope: !12607)
!12673 = !DILocation(line: 2880, column: 62, scope: !12607)
!12674 = !DILocation(line: 2880, column: 61, scope: !12607)
!12675 = !DILocation(line: 2880, column: 49, scope: !12607)
!12676 = !DILocation(line: 2880, column: 2, scope: !12607)
!12677 = !DILocation(line: 2880, column: 11, scope: !12607)
!12678 = !DILocation(line: 2881, column: 1, scope: !12607)
!12679 = distinct !DISubprogram(name: "zbuf_fill_in_rgba", scope: !3, file: !3, line: 2667, type: !12680, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{null, !120, !83, !31, !31, !31, !31}
!12682 = !DILocalVariable(name: "zspan", arg: 1, scope: !12679, file: !3, line: 2667, type: !120)
!12683 = !DILocation(line: 2667, column: 38, scope: !12679)
!12684 = !DILocalVariable(name: "col", arg: 2, scope: !12679, file: !3, line: 2667, type: !83)
!12685 = !DILocation(line: 2667, column: 59, scope: !12679)
!12686 = !DILocalVariable(name: "v1", arg: 3, scope: !12679, file: !3, line: 2667, type: !31)
!12687 = !DILocation(line: 2667, column: 71, scope: !12679)
!12688 = !DILocalVariable(name: "v2", arg: 4, scope: !12679, file: !3, line: 2667, type: !31)
!12689 = !DILocation(line: 2667, column: 82, scope: !12679)
!12690 = !DILocalVariable(name: "v3", arg: 5, scope: !12679, file: !3, line: 2667, type: !31)
!12691 = !DILocation(line: 2667, column: 93, scope: !12679)
!12692 = !DILocalVariable(name: "v4", arg: 6, scope: !12679, file: !3, line: 2667, type: !31)
!12693 = !DILocation(line: 2667, column: 104, scope: !12679)
!12694 = !DILocalVariable(name: "rectpofs", scope: !12679, file: !3, line: 2669, type: !83)
!12695 = !DILocation(line: 2669, column: 16, scope: !12679)
!12696 = !DILocalVariable(name: "rp", scope: !12679, file: !3, line: 2669, type: !83)
!12697 = !DILocation(line: 2669, column: 27, scope: !12679)
!12698 = !DILocalVariable(name: "zxd", scope: !12679, file: !3, line: 2670, type: !80)
!12699 = !DILocation(line: 2670, column: 9, scope: !12679)
!12700 = !DILocalVariable(name: "zyd", scope: !12679, file: !3, line: 2670, type: !80)
!12701 = !DILocation(line: 2670, column: 14, scope: !12679)
!12702 = !DILocalVariable(name: "zy0", scope: !12679, file: !3, line: 2670, type: !80)
!12703 = !DILocation(line: 2670, column: 19, scope: !12679)
!12704 = !DILocalVariable(name: "zverg", scope: !12679, file: !3, line: 2670, type: !80)
!12705 = !DILocation(line: 2670, column: 24, scope: !12679)
!12706 = !DILocalVariable(name: "x0", scope: !12679, file: !3, line: 2671, type: !21)
!12707 = !DILocation(line: 2671, column: 8, scope: !12679)
!12708 = !DILocalVariable(name: "y0", scope: !12679, file: !3, line: 2671, type: !21)
!12709 = !DILocation(line: 2671, column: 12, scope: !12679)
!12710 = !DILocalVariable(name: "z0", scope: !12679, file: !3, line: 2671, type: !21)
!12711 = !DILocation(line: 2671, column: 16, scope: !12679)
!12712 = !DILocalVariable(name: "x1", scope: !12679, file: !3, line: 2672, type: !21)
!12713 = !DILocation(line: 2672, column: 8, scope: !12679)
!12714 = !DILocalVariable(name: "y1", scope: !12679, file: !3, line: 2672, type: !21)
!12715 = !DILocation(line: 2672, column: 12, scope: !12679)
!12716 = !DILocalVariable(name: "z1", scope: !12679, file: !3, line: 2672, type: !21)
!12717 = !DILocation(line: 2672, column: 16, scope: !12679)
!12718 = !DILocalVariable(name: "x2", scope: !12679, file: !3, line: 2672, type: !21)
!12719 = !DILocation(line: 2672, column: 20, scope: !12679)
!12720 = !DILocalVariable(name: "y2", scope: !12679, file: !3, line: 2672, type: !21)
!12721 = !DILocation(line: 2672, column: 24, scope: !12679)
!12722 = !DILocalVariable(name: "z2", scope: !12679, file: !3, line: 2672, type: !21)
!12723 = !DILocation(line: 2672, column: 28, scope: !12679)
!12724 = !DILocalVariable(name: "xx1", scope: !12679, file: !3, line: 2672, type: !21)
!12725 = !DILocation(line: 2672, column: 32, scope: !12679)
!12726 = !DILocalVariable(name: "span1", scope: !12679, file: !3, line: 2673, type: !88)
!12727 = !DILocation(line: 2673, column: 15, scope: !12679)
!12728 = !DILocalVariable(name: "span2", scope: !12679, file: !3, line: 2673, type: !88)
!12729 = !DILocation(line: 2673, column: 23, scope: !12679)
!12730 = !DILocalVariable(name: "rectzofs", scope: !12679, file: !3, line: 2674, type: !31)
!12731 = !DILocation(line: 2674, column: 9, scope: !12679)
!12732 = !DILocalVariable(name: "rz", scope: !12679, file: !3, line: 2674, type: !31)
!12733 = !DILocation(line: 2674, column: 20, scope: !12679)
!12734 = !DILocalVariable(name: "x", scope: !12679, file: !3, line: 2675, type: !29)
!12735 = !DILocation(line: 2675, column: 6, scope: !12679)
!12736 = !DILocalVariable(name: "y", scope: !12679, file: !3, line: 2675, type: !29)
!12737 = !DILocation(line: 2675, column: 9, scope: !12679)
!12738 = !DILocalVariable(name: "sn1", scope: !12679, file: !3, line: 2676, type: !29)
!12739 = !DILocation(line: 2676, column: 6, scope: !12679)
!12740 = !DILocalVariable(name: "sn2", scope: !12679, file: !3, line: 2676, type: !29)
!12741 = !DILocation(line: 2676, column: 11, scope: !12679)
!12742 = !DILocalVariable(name: "rectx", scope: !12679, file: !3, line: 2676, type: !29)
!12743 = !DILocation(line: 2676, column: 16, scope: !12679)
!12744 = !DILocalVariable(name: "my0", scope: !12679, file: !3, line: 2676, type: !29)
!12745 = !DILocation(line: 2676, column: 23, scope: !12679)
!12746 = !DILocalVariable(name: "my2", scope: !12679, file: !3, line: 2676, type: !29)
!12747 = !DILocation(line: 2676, column: 28, scope: !12679)
!12748 = !DILocation(line: 2679, column: 17, scope: !12679)
!12749 = !DILocation(line: 2679, column: 2, scope: !12679)
!12750 = !DILocation(line: 2682, column: 19, scope: !12679)
!12751 = !DILocation(line: 2682, column: 26, scope: !12679)
!12752 = !DILocation(line: 2682, column: 30, scope: !12679)
!12753 = !DILocation(line: 2682, column: 2, scope: !12679)
!12754 = !DILocation(line: 2683, column: 19, scope: !12679)
!12755 = !DILocation(line: 2683, column: 26, scope: !12679)
!12756 = !DILocation(line: 2683, column: 30, scope: !12679)
!12757 = !DILocation(line: 2683, column: 2, scope: !12679)
!12758 = !DILocation(line: 2684, column: 19, scope: !12679)
!12759 = !DILocation(line: 2684, column: 26, scope: !12679)
!12760 = !DILocation(line: 2684, column: 30, scope: !12679)
!12761 = !DILocation(line: 2684, column: 2, scope: !12679)
!12762 = !DILocation(line: 2685, column: 19, scope: !12679)
!12763 = !DILocation(line: 2685, column: 26, scope: !12679)
!12764 = !DILocation(line: 2685, column: 30, scope: !12679)
!12765 = !DILocation(line: 2685, column: 2, scope: !12679)
!12766 = !DILocation(line: 2688, column: 6, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2688, column: 6)
!12768 = !DILocation(line: 2688, column: 13, scope: !12767)
!12769 = !DILocation(line: 2688, column: 18, scope: !12767)
!12770 = !DILocation(line: 2688, column: 25, scope: !12767)
!12771 = !DILocation(line: 2688, column: 28, scope: !12767)
!12772 = !DILocation(line: 2688, column: 35, scope: !12767)
!12773 = !DILocation(line: 2688, column: 40, scope: !12767)
!12774 = !DILocation(line: 2688, column: 6, scope: !12679)
!12775 = !DILocation(line: 2688, column: 48, scope: !12767)
!12776 = !DILocation(line: 2690, column: 6, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2690, column: 6)
!12778 = !DILocation(line: 2690, column: 13, scope: !12777)
!12779 = !DILocation(line: 2690, column: 21, scope: !12777)
!12780 = !DILocation(line: 2690, column: 28, scope: !12777)
!12781 = !DILocation(line: 2690, column: 19, scope: !12777)
!12782 = !DILocation(line: 2690, column: 6, scope: !12679)
!12783 = !DILocation(line: 2690, column: 40, scope: !12777)
!12784 = !DILocation(line: 2690, column: 47, scope: !12777)
!12785 = !DILocation(line: 2690, column: 38, scope: !12777)
!12786 = !DILocation(line: 2690, column: 35, scope: !12777)
!12787 = !DILocation(line: 2690, column: 64, scope: !12777)
!12788 = !DILocation(line: 2690, column: 71, scope: !12777)
!12789 = !DILocation(line: 2690, column: 62, scope: !12777)
!12790 = !DILocation(line: 2691, column: 6, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2691, column: 6)
!12792 = !DILocation(line: 2691, column: 13, scope: !12791)
!12793 = !DILocation(line: 2691, column: 21, scope: !12791)
!12794 = !DILocation(line: 2691, column: 28, scope: !12791)
!12795 = !DILocation(line: 2691, column: 19, scope: !12791)
!12796 = !DILocation(line: 2691, column: 6, scope: !12679)
!12797 = !DILocation(line: 2691, column: 40, scope: !12791)
!12798 = !DILocation(line: 2691, column: 47, scope: !12791)
!12799 = !DILocation(line: 2691, column: 38, scope: !12791)
!12800 = !DILocation(line: 2691, column: 35, scope: !12791)
!12801 = !DILocation(line: 2691, column: 64, scope: !12791)
!12802 = !DILocation(line: 2691, column: 71, scope: !12791)
!12803 = !DILocation(line: 2691, column: 62, scope: !12791)
!12804 = !DILocation(line: 2694, column: 6, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2694, column: 6)
!12806 = !DILocation(line: 2694, column: 10, scope: !12805)
!12807 = !DILocation(line: 2694, column: 9, scope: !12805)
!12808 = !DILocation(line: 2694, column: 6, scope: !12679)
!12809 = !DILocation(line: 2694, column: 15, scope: !12805)
!12810 = !DILocation(line: 2697, column: 6, scope: !12679)
!12811 = !DILocation(line: 2697, column: 13, scope: !12679)
!12812 = !DILocation(line: 2697, column: 11, scope: !12679)
!12813 = !DILocation(line: 2697, column: 4, scope: !12679)
!12814 = !DILocation(line: 2698, column: 6, scope: !12679)
!12815 = !DILocation(line: 2698, column: 13, scope: !12679)
!12816 = !DILocation(line: 2698, column: 11, scope: !12679)
!12817 = !DILocation(line: 2698, column: 4, scope: !12679)
!12818 = !DILocation(line: 2699, column: 6, scope: !12679)
!12819 = !DILocation(line: 2699, column: 13, scope: !12679)
!12820 = !DILocation(line: 2699, column: 11, scope: !12679)
!12821 = !DILocation(line: 2699, column: 4, scope: !12679)
!12822 = !DILocation(line: 2700, column: 6, scope: !12679)
!12823 = !DILocation(line: 2700, column: 13, scope: !12679)
!12824 = !DILocation(line: 2700, column: 11, scope: !12679)
!12825 = !DILocation(line: 2700, column: 4, scope: !12679)
!12826 = !DILocation(line: 2701, column: 6, scope: !12679)
!12827 = !DILocation(line: 2701, column: 13, scope: !12679)
!12828 = !DILocation(line: 2701, column: 11, scope: !12679)
!12829 = !DILocation(line: 2701, column: 4, scope: !12679)
!12830 = !DILocation(line: 2702, column: 6, scope: !12679)
!12831 = !DILocation(line: 2702, column: 13, scope: !12679)
!12832 = !DILocation(line: 2702, column: 11, scope: !12679)
!12833 = !DILocation(line: 2702, column: 4, scope: !12679)
!12834 = !DILocation(line: 2703, column: 6, scope: !12679)
!12835 = !DILocation(line: 2703, column: 9, scope: !12679)
!12836 = !DILocation(line: 2703, column: 8, scope: !12679)
!12837 = !DILocation(line: 2703, column: 12, scope: !12679)
!12838 = !DILocation(line: 2703, column: 15, scope: !12679)
!12839 = !DILocation(line: 2703, column: 14, scope: !12679)
!12840 = !DILocation(line: 2703, column: 11, scope: !12679)
!12841 = !DILocation(line: 2703, column: 4, scope: !12679)
!12842 = !DILocation(line: 2704, column: 6, scope: !12679)
!12843 = !DILocation(line: 2704, column: 9, scope: !12679)
!12844 = !DILocation(line: 2704, column: 8, scope: !12679)
!12845 = !DILocation(line: 2704, column: 12, scope: !12679)
!12846 = !DILocation(line: 2704, column: 15, scope: !12679)
!12847 = !DILocation(line: 2704, column: 14, scope: !12679)
!12848 = !DILocation(line: 2704, column: 11, scope: !12679)
!12849 = !DILocation(line: 2704, column: 4, scope: !12679)
!12850 = !DILocation(line: 2705, column: 6, scope: !12679)
!12851 = !DILocation(line: 2705, column: 9, scope: !12679)
!12852 = !DILocation(line: 2705, column: 8, scope: !12679)
!12853 = !DILocation(line: 2705, column: 12, scope: !12679)
!12854 = !DILocation(line: 2705, column: 15, scope: !12679)
!12855 = !DILocation(line: 2705, column: 14, scope: !12679)
!12856 = !DILocation(line: 2705, column: 11, scope: !12679)
!12857 = !DILocation(line: 2705, column: 4, scope: !12679)
!12858 = !DILocation(line: 2707, column: 6, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2707, column: 6)
!12860 = !DILocation(line: 2707, column: 8, scope: !12859)
!12861 = !DILocation(line: 2707, column: 6, scope: !12679)
!12862 = !DILocation(line: 2707, column: 16, scope: !12859)
!12863 = !DILocation(line: 2709, column: 8, scope: !12679)
!12864 = !DILocation(line: 2709, column: 11, scope: !12679)
!12865 = !DILocation(line: 2709, column: 10, scope: !12679)
!12866 = !DILocation(line: 2709, column: 19, scope: !12679)
!12867 = !DILocation(line: 2709, column: 22, scope: !12679)
!12868 = !DILocation(line: 2709, column: 21, scope: !12679)
!12869 = !DILocation(line: 2709, column: 17, scope: !12679)
!12870 = !DILocation(line: 2709, column: 29, scope: !12679)
!12871 = !DILocation(line: 2709, column: 28, scope: !12679)
!12872 = !DILocation(line: 2709, column: 34, scope: !12679)
!12873 = !DILocation(line: 2709, column: 32, scope: !12679)
!12874 = !DILocation(line: 2709, column: 5, scope: !12679)
!12875 = !DILocation(line: 2711, column: 16, scope: !12679)
!12876 = !DILocation(line: 2711, column: 8, scope: !12679)
!12877 = !DILocation(line: 2711, column: 7, scope: !12679)
!12878 = !DILocation(line: 2711, column: 27, scope: !12679)
!12879 = !DILocation(line: 2711, column: 19, scope: !12679)
!12880 = !DILocation(line: 2711, column: 18, scope: !12679)
!12881 = !DILocation(line: 2711, column: 5, scope: !12679)
!12882 = !DILocation(line: 2712, column: 16, scope: !12679)
!12883 = !DILocation(line: 2712, column: 8, scope: !12679)
!12884 = !DILocation(line: 2712, column: 7, scope: !12679)
!12885 = !DILocation(line: 2712, column: 27, scope: !12679)
!12886 = !DILocation(line: 2712, column: 19, scope: !12679)
!12887 = !DILocation(line: 2712, column: 18, scope: !12679)
!12888 = !DILocation(line: 2712, column: 5, scope: !12679)
!12889 = !DILocation(line: 2713, column: 16, scope: !12679)
!12890 = !DILocation(line: 2713, column: 8, scope: !12679)
!12891 = !DILocation(line: 2713, column: 21, scope: !12679)
!12892 = !DILocation(line: 2713, column: 20, scope: !12679)
!12893 = !DILocation(line: 2713, column: 35, scope: !12679)
!12894 = !DILocation(line: 2713, column: 27, scope: !12679)
!12895 = !DILocation(line: 2713, column: 25, scope: !12679)
!12896 = !DILocation(line: 2713, column: 5, scope: !12679)
!12897 = !DILocation(line: 2716, column: 9, scope: !12679)
!12898 = !DILocation(line: 2716, column: 16, scope: !12679)
!12899 = !DILocation(line: 2716, column: 7, scope: !12679)
!12900 = !DILocation(line: 2717, column: 22, scope: !12679)
!12901 = !DILocation(line: 2717, column: 29, scope: !12679)
!12902 = !DILocation(line: 2717, column: 37, scope: !12679)
!12903 = !DILocation(line: 2717, column: 43, scope: !12679)
!12904 = !DILocation(line: 2717, column: 42, scope: !12679)
!12905 = !DILocation(line: 2717, column: 35, scope: !12679)
!12906 = !DILocation(line: 2717, column: 12, scope: !12679)
!12907 = !DILocation(line: 2717, column: 10, scope: !12679)
!12908 = !DILocation(line: 2718, column: 29, scope: !12679)
!12909 = !DILocation(line: 2718, column: 36, scope: !12679)
!12910 = !DILocation(line: 2718, column: 13, scope: !12679)
!12911 = !DILocation(line: 2718, column: 45, scope: !12679)
!12912 = !DILocation(line: 2718, column: 51, scope: !12679)
!12913 = !DILocation(line: 2718, column: 50, scope: !12679)
!12914 = !DILocation(line: 2718, column: 43, scope: !12679)
!12915 = !DILocation(line: 2718, column: 10, scope: !12679)
!12916 = !DILocation(line: 2721, column: 8, scope: !12679)
!12917 = !DILocation(line: 2721, column: 14, scope: !12679)
!12918 = !DILocation(line: 2721, column: 12, scope: !12679)
!12919 = !DILocation(line: 2721, column: 18, scope: !12679)
!12920 = !DILocation(line: 2721, column: 5, scope: !12679)
!12921 = !DILocation(line: 2722, column: 6, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2722, column: 6)
!12923 = !DILocation(line: 2722, column: 13, scope: !12922)
!12924 = !DILocation(line: 2722, column: 19, scope: !12922)
!12925 = !DILocation(line: 2722, column: 26, scope: !12922)
!12926 = !DILocation(line: 2722, column: 33, scope: !12922)
!12927 = !DILocation(line: 2722, column: 39, scope: !12922)
!12928 = !DILocation(line: 2722, column: 24, scope: !12922)
!12929 = !DILocation(line: 2722, column: 6, scope: !12679)
!12930 = !DILocation(line: 2723, column: 10, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2722, column: 45)
!12932 = !DILocation(line: 2723, column: 17, scope: !12931)
!12933 = !DILocation(line: 2723, column: 23, scope: !12931)
!12934 = !DILocation(line: 2723, column: 22, scope: !12931)
!12935 = !DILocation(line: 2723, column: 8, scope: !12931)
!12936 = !DILocation(line: 2724, column: 10, scope: !12931)
!12937 = !DILocation(line: 2724, column: 17, scope: !12931)
!12938 = !DILocation(line: 2724, column: 23, scope: !12931)
!12939 = !DILocation(line: 2724, column: 22, scope: !12931)
!12940 = !DILocation(line: 2724, column: 8, scope: !12931)
!12941 = !DILocation(line: 2725, column: 2, scope: !12931)
!12942 = !DILocation(line: 2727, column: 10, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2726, column: 7)
!12944 = !DILocation(line: 2727, column: 17, scope: !12943)
!12945 = !DILocation(line: 2727, column: 23, scope: !12943)
!12946 = !DILocation(line: 2727, column: 22, scope: !12943)
!12947 = !DILocation(line: 2727, column: 8, scope: !12943)
!12948 = !DILocation(line: 2728, column: 10, scope: !12943)
!12949 = !DILocation(line: 2728, column: 17, scope: !12943)
!12950 = !DILocation(line: 2728, column: 23, scope: !12943)
!12951 = !DILocation(line: 2728, column: 22, scope: !12943)
!12952 = !DILocation(line: 2728, column: 8, scope: !12943)
!12953 = !DILocation(line: 2731, column: 9, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2731, column: 2)
!12955 = !DILocation(line: 2731, column: 8, scope: !12954)
!12956 = !DILocation(line: 2731, column: 7, scope: !12954)
!12957 = !DILocation(line: 2731, column: 14, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12954, file: !3, line: 2731, column: 2)
!12959 = !DILocation(line: 2731, column: 17, scope: !12958)
!12960 = !DILocation(line: 2731, column: 15, scope: !12958)
!12961 = !DILocation(line: 2731, column: 2, scope: !12954)
!12962 = !DILocation(line: 2733, column: 15, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2731, column: 45)
!12964 = !DILocation(line: 2733, column: 14, scope: !12963)
!12965 = !DILocation(line: 2733, column: 8, scope: !12963)
!12966 = !DILocation(line: 2733, column: 6, scope: !12963)
!12967 = !DILocation(line: 2734, column: 15, scope: !12963)
!12968 = !DILocation(line: 2734, column: 14, scope: !12963)
!12969 = !DILocation(line: 2734, column: 8, scope: !12963)
!12970 = !DILocation(line: 2734, column: 6, scope: !12963)
!12971 = !DILocation(line: 2735, column: 6, scope: !12963)
!12972 = !DILocation(line: 2737, column: 7, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 2737, column: 7)
!12974 = !DILocation(line: 2737, column: 12, scope: !12973)
!12975 = !DILocation(line: 2737, column: 10, scope: !12973)
!12976 = !DILocation(line: 2737, column: 7, scope: !12963)
!12977 = !DILocation(line: 2737, column: 24, scope: !12973)
!12978 = !DILocation(line: 2737, column: 29, scope: !12973)
!12979 = !DILocation(line: 2737, column: 22, scope: !12973)
!12980 = !DILocation(line: 2737, column: 19, scope: !12973)
!12981 = !DILocation(line: 2738, column: 7, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 2738, column: 7)
!12983 = !DILocation(line: 2738, column: 10, scope: !12982)
!12984 = !DILocation(line: 2738, column: 7, scope: !12963)
!12985 = !DILocation(line: 2738, column: 17, scope: !12982)
!12986 = !DILocation(line: 2738, column: 14, scope: !12982)
!12987 = !DILocation(line: 2740, column: 7, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 2740, column: 7)
!12989 = !DILocation(line: 2740, column: 12, scope: !12988)
!12990 = !DILocation(line: 2740, column: 10, scope: !12988)
!12991 = !DILocation(line: 2740, column: 7, scope: !12963)
!12992 = !DILocation(line: 2741, column: 19, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12988, file: !3, line: 2740, column: 17)
!12994 = !DILocation(line: 2741, column: 11, scope: !12993)
!12995 = !DILocation(line: 2741, column: 23, scope: !12993)
!12996 = !DILocation(line: 2741, column: 22, scope: !12993)
!12997 = !DILocation(line: 2741, column: 29, scope: !12993)
!12998 = !DILocation(line: 2741, column: 27, scope: !12993)
!12999 = !DILocation(line: 2741, column: 9, scope: !12993)
!13000 = !DILocation(line: 2742, column: 8, scope: !12993)
!13001 = !DILocation(line: 2742, column: 17, scope: !12993)
!13002 = !DILocation(line: 2742, column: 16, scope: !12993)
!13003 = !DILocation(line: 2742, column: 6, scope: !12993)
!13004 = !DILocation(line: 2743, column: 8, scope: !12993)
!13005 = !DILocation(line: 2743, column: 17, scope: !12993)
!13006 = !DILocation(line: 2743, column: 16, scope: !12993)
!13007 = !DILocation(line: 2743, column: 6, scope: !12993)
!13008 = !DILocation(line: 2744, column: 7, scope: !12993)
!13009 = !DILocation(line: 2744, column: 11, scope: !12993)
!13010 = !DILocation(line: 2744, column: 10, scope: !12993)
!13011 = !DILocation(line: 2744, column: 5, scope: !12993)
!13012 = !DILocation(line: 2746, column: 4, scope: !12993)
!13013 = !DILocation(line: 2746, column: 11, scope: !12993)
!13014 = !DILocation(line: 2746, column: 12, scope: !12993)
!13015 = !DILocation(line: 2747, column: 9, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13017, file: !3, line: 2747, column: 9)
!13017 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 2746, column: 17)
!13018 = !DILocation(line: 2747, column: 26, scope: !13016)
!13019 = !DILocation(line: 2747, column: 25, scope: !13016)
!13020 = !DILocation(line: 2747, column: 17, scope: !13016)
!13021 = !DILocation(line: 2747, column: 15, scope: !13016)
!13022 = !DILocation(line: 2747, column: 9, scope: !13017)
!13023 = !DILocation(line: 2748, column: 11, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 2747, column: 30)
!13025 = !DILocation(line: 2748, column: 7, scope: !13024)
!13026 = !DILocation(line: 2748, column: 9, scope: !13024)
!13027 = !DILocation(line: 2749, column: 7, scope: !13024)
!13028 = !DILocation(line: 2749, column: 12, scope: !13024)
!13029 = !DILocation(line: 2749, column: 11, scope: !13024)
!13030 = !DILocation(line: 2750, column: 5, scope: !13024)
!13031 = !DILocation(line: 2751, column: 13, scope: !13017)
!13032 = !DILocation(line: 2751, column: 10, scope: !13017)
!13033 = !DILocation(line: 2752, column: 7, scope: !13017)
!13034 = !DILocation(line: 2753, column: 7, scope: !13017)
!13035 = !DILocation(line: 2754, column: 6, scope: !13017)
!13036 = distinct !{!13036, !13012, !13037}
!13037 = !DILocation(line: 2755, column: 4, scope: !12993)
!13038 = !DILocation(line: 2756, column: 3, scope: !12993)
!13039 = !DILocation(line: 2758, column: 8, scope: !12963)
!13040 = !DILocation(line: 2758, column: 6, scope: !12963)
!13041 = !DILocation(line: 2759, column: 14, scope: !12963)
!13042 = !DILocation(line: 2759, column: 11, scope: !12963)
!13043 = !DILocation(line: 2760, column: 14, scope: !12963)
!13044 = !DILocation(line: 2760, column: 11, scope: !12963)
!13045 = !DILocation(line: 2761, column: 2, scope: !12963)
!13046 = !DILocation(line: 2731, column: 23, scope: !12958)
!13047 = !DILocation(line: 2731, column: 32, scope: !12958)
!13048 = !DILocation(line: 2731, column: 41, scope: !12958)
!13049 = !DILocation(line: 2731, column: 2, scope: !12958)
!13050 = distinct !{!13050, !12961, !13051}
!13051 = !DILocation(line: 2761, column: 2, scope: !12954)
!13052 = !DILocation(line: 2762, column: 1, scope: !12679)
!13053 = distinct !DISubprogram(name: "zbuffer_abuf_shadow", scope: !3, file: !3, line: 3469, type: !13054, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{null, !2457, !8354, !2281, !148, !166, !369, !29, !29, !13056}
!13056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!13057 = !DILocalVariable(name: "re", arg: 1, scope: !13053, file: !3, line: 3469, type: !2457)
!13058 = !DILocation(line: 3469, column: 34, scope: !13053)
!13059 = !DILocalVariable(name: "lar", arg: 2, scope: !13053, file: !3, line: 3469, type: !8354)
!13060 = !DILocation(line: 3469, column: 47, scope: !13053)
!13061 = !DILocalVariable(name: "winmat", arg: 3, scope: !13053, file: !3, line: 3469, type: !2281)
!13062 = !DILocation(line: 3469, column: 58, scope: !13053)
!13063 = !DILocalVariable(name: "APixbuf", arg: 4, scope: !13053, file: !3, line: 3469, type: !148)
!13064 = !DILocation(line: 3469, column: 81, scope: !13053)
!13065 = !DILocalVariable(name: "APixbufstrand", arg: 5, scope: !13053, file: !3, line: 3469, type: !166)
!13066 = !DILocation(line: 3469, column: 102, scope: !13053)
!13067 = !DILocalVariable(name: "apsmbase", arg: 6, scope: !13053, file: !3, line: 3469, type: !369)
!13068 = !DILocation(line: 3469, column: 127, scope: !13053)
!13069 = !DILocalVariable(name: "size", arg: 7, scope: !13053, file: !3, line: 3469, type: !29)
!13070 = !DILocation(line: 3469, column: 141, scope: !13053)
!13071 = !DILocalVariable(name: "samples", arg: 8, scope: !13053, file: !3, line: 3469, type: !29)
!13072 = !DILocation(line: 3469, column: 151, scope: !13053)
!13073 = !DILocalVariable(name: "jit", arg: 9, scope: !13053, file: !3, line: 3469, type: !13056)
!13074 = !DILocation(line: 3469, column: 168, scope: !13053)
!13075 = !DILocalVariable(name: "pa", scope: !13053, file: !3, line: 3471, type: !5588)
!13076 = !DILocation(line: 3471, column: 13, scope: !13053)
!13077 = !DILocalVariable(name: "lay", scope: !13053, file: !3, line: 3472, type: !29)
!13078 = !DILocation(line: 3472, column: 6, scope: !13053)
!13079 = !DILocation(line: 3474, column: 6, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13053, file: !3, line: 3474, column: 6)
!13081 = !DILocation(line: 3474, column: 11, scope: !13080)
!13082 = !DILocation(line: 3474, column: 16, scope: !13080)
!13083 = !DILocation(line: 3474, column: 6, scope: !13053)
!13084 = !DILocation(line: 3474, column: 33, scope: !13080)
!13085 = !DILocation(line: 3474, column: 38, scope: !13080)
!13086 = !DILocation(line: 3474, column: 31, scope: !13080)
!13087 = !DILocation(line: 3474, column: 28, scope: !13080)
!13088 = !DILocation(line: 3476, column: 2, scope: !13053)
!13089 = !DILocation(line: 3477, column: 12, scope: !13053)
!13090 = !DILocation(line: 3477, column: 5, scope: !13053)
!13091 = !DILocation(line: 3477, column: 10, scope: !13053)
!13092 = !DILocation(line: 3478, column: 12, scope: !13053)
!13093 = !DILocation(line: 3478, column: 5, scope: !13053)
!13094 = !DILocation(line: 3478, column: 10, scope: !13053)
!13095 = !DILocation(line: 3479, column: 5, scope: !13053)
!13096 = !DILocation(line: 3479, column: 14, scope: !13053)
!13097 = !DILocation(line: 3479, column: 19, scope: !13053)
!13098 = !DILocation(line: 3480, column: 5, scope: !13053)
!13099 = !DILocation(line: 3480, column: 14, scope: !13053)
!13100 = !DILocation(line: 3480, column: 19, scope: !13053)
!13101 = !DILocation(line: 3481, column: 21, scope: !13053)
!13102 = !DILocation(line: 3481, column: 5, scope: !13053)
!13103 = !DILocation(line: 3481, column: 14, scope: !13053)
!13104 = !DILocation(line: 3481, column: 19, scope: !13053)
!13105 = !DILocation(line: 3482, column: 21, scope: !13053)
!13106 = !DILocation(line: 3482, column: 5, scope: !13053)
!13107 = !DILocation(line: 3482, column: 14, scope: !13053)
!13108 = !DILocation(line: 3482, column: 19, scope: !13053)
!13109 = !DILocation(line: 3484, column: 15, scope: !13053)
!13110 = !DILocation(line: 3484, column: 24, scope: !13053)
!13111 = !DILocation(line: 3484, column: 33, scope: !13053)
!13112 = !DILocation(line: 3484, column: 43, scope: !13053)
!13113 = !DILocation(line: 3484, column: 51, scope: !13053)
!13114 = !DILocation(line: 3484, column: 59, scope: !13053)
!13115 = !DILocation(line: 3484, column: 65, scope: !13053)
!13116 = !DILocation(line: 3484, column: 71, scope: !13053)
!13117 = !DILocation(line: 3484, column: 80, scope: !13053)
!13118 = !DILocation(line: 3484, column: 2, scope: !13053)
!13119 = !DILocation(line: 3485, column: 6, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13053, file: !3, line: 3485, column: 6)
!13121 = !DILocation(line: 3485, column: 6, scope: !13053)
!13122 = !DILocation(line: 3486, column: 24, scope: !13120)
!13123 = !DILocation(line: 3486, column: 33, scope: !13120)
!13124 = !DILocation(line: 3486, column: 48, scope: !13120)
!13125 = !DILocation(line: 3486, column: 58, scope: !13120)
!13126 = !DILocation(line: 3486, column: 66, scope: !13120)
!13127 = !DILocation(line: 3486, column: 74, scope: !13120)
!13128 = !DILocation(line: 3486, column: 80, scope: !13120)
!13129 = !DILocation(line: 3486, column: 86, scope: !13120)
!13130 = !DILocation(line: 3486, column: 95, scope: !13120)
!13131 = !DILocation(line: 3486, column: 3, scope: !13120)
!13132 = !DILocation(line: 3487, column: 1, scope: !13053)
!13133 = distinct !DISubprogram(name: "zbuffer_abuf", scope: !3, file: !3, line: 3271, type: !13134, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!13134 = !DISubroutineType(types: !13135)
!13135 = !{!29, !2457, !5587, !148, !369, !36, !29, !2281, !29, !29, !29, !13056, !21, !29}
!13136 = !DILocalVariable(name: "re", arg: 1, scope: !13133, file: !3, line: 3271, type: !2457)
!13137 = !DILocation(line: 3271, column: 33, scope: !13133)
!13138 = !DILocalVariable(name: "pa", arg: 2, scope: !13133, file: !3, line: 3271, type: !5587)
!13139 = !DILocation(line: 3271, column: 49, scope: !13133)
!13140 = !DILocalVariable(name: "APixbuf", arg: 3, scope: !13133, file: !3, line: 3271, type: !148)
!13141 = !DILocation(line: 3271, column: 62, scope: !13133)
!13142 = !DILocalVariable(name: "apsmbase", arg: 4, scope: !13133, file: !3, line: 3271, type: !369)
!13143 = !DILocation(line: 3271, column: 81, scope: !13133)
!13144 = !DILocalVariable(name: "lay", arg: 5, scope: !13133, file: !3, line: 3271, type: !36)
!13145 = !DILocation(line: 3271, column: 104, scope: !13133)
!13146 = !DILocalVariable(name: "negzmask", arg: 6, scope: !13133, file: !3, line: 3271, type: !29)
!13147 = !DILocation(line: 3271, column: 113, scope: !13133)
!13148 = !DILocalVariable(name: "winmat", arg: 7, scope: !13133, file: !3, line: 3271, type: !2281)
!13149 = !DILocation(line: 3271, column: 129, scope: !13133)
!13150 = !DILocalVariable(name: "winx", arg: 8, scope: !13133, file: !3, line: 3271, type: !29)
!13151 = !DILocation(line: 3271, column: 147, scope: !13133)
!13152 = !DILocalVariable(name: "winy", arg: 9, scope: !13133, file: !3, line: 3271, type: !29)
!13153 = !DILocation(line: 3271, column: 157, scope: !13133)
!13154 = !DILocalVariable(name: "samples", arg: 10, scope: !13133, file: !3, line: 3271, type: !29)
!13155 = !DILocation(line: 3271, column: 167, scope: !13133)
!13156 = !DILocalVariable(name: "jit", arg: 11, scope: !13133, file: !3, line: 3271, type: !13056)
!13157 = !DILocation(line: 3271, column: 184, scope: !13133)
!13158 = !DILocalVariable(name: "UNUSED_clipcrop", arg: 12, scope: !13133, file: !3, line: 3271, type: !21)
!13159 = !DILocation(line: 3271, column: 199, scope: !13133)
!13160 = !DILocalVariable(name: "shadow", arg: 13, scope: !13133, file: !3, line: 3271, type: !29)
!13161 = !DILocation(line: 3271, column: 221, scope: !13133)
!13162 = !DILocalVariable(name: "cache", scope: !13133, file: !3, line: 3273, type: !5631)
!13163 = !DILocation(line: 3273, column: 19, scope: !13133)
!13164 = !DILocalVariable(name: "zspans", scope: !13133, file: !3, line: 3274, type: !5640)
!13165 = !DILocation(line: 3274, column: 8, scope: !13133)
!13166 = !DILocalVariable(name: "zspan", scope: !13133, file: !3, line: 3274, type: !120)
!13167 = !DILocation(line: 3274, column: 21, scope: !13133)
!13168 = !DILocalVariable(name: "ma", scope: !13133, file: !3, line: 3275, type: !5659)
!13169 = !DILocation(line: 3275, column: 12, scope: !13133)
!13170 = !DILocalVariable(name: "obi", scope: !13133, file: !3, line: 3276, type: !5663)
!13171 = !DILocation(line: 3276, column: 21, scope: !13133)
!13172 = !DILocalVariable(name: "obr", scope: !13133, file: !3, line: 3277, type: !4395)
!13173 = !DILocation(line: 3277, column: 13, scope: !13133)
!13174 = !DILocalVariable(name: "vlr", scope: !13133, file: !3, line: 3278, type: !5645)
!13175 = !DILocation(line: 3278, column: 11, scope: !13133)
!13176 = !DILocalVariable(name: "v1", scope: !13133, file: !3, line: 3279, type: !5649)
!13177 = !DILocation(line: 3279, column: 11, scope: !13133)
!13178 = !DILocalVariable(name: "v2", scope: !13133, file: !3, line: 3279, type: !5649)
!13179 = !DILocation(line: 3279, column: 16, scope: !13133)
!13180 = !DILocalVariable(name: "v3", scope: !13133, file: !3, line: 3279, type: !5649)
!13181 = !DILocation(line: 3279, column: 21, scope: !13133)
!13182 = !DILocalVariable(name: "v4", scope: !13133, file: !3, line: 3279, type: !5649)
!13183 = !DILocation(line: 3279, column: 26, scope: !13133)
!13184 = !DILocalVariable(name: "vec", scope: !13133, file: !3, line: 3280, type: !2427)
!13185 = !DILocation(line: 3280, column: 8, scope: !13133)
!13186 = !DILocalVariable(name: "hoco", scope: !13133, file: !3, line: 3280, type: !176)
!13187 = !DILocation(line: 3280, column: 16, scope: !13133)
!13188 = !DILocalVariable(name: "mul", scope: !13133, file: !3, line: 3280, type: !21)
!13189 = !DILocation(line: 3280, column: 25, scope: !13133)
!13190 = !DILocalVariable(name: "zval", scope: !13133, file: !3, line: 3280, type: !21)
!13191 = !DILocation(line: 3280, column: 30, scope: !13133)
!13192 = !DILocalVariable(name: "fval", scope: !13133, file: !3, line: 3280, type: !21)
!13193 = !DILocation(line: 3280, column: 36, scope: !13133)
!13194 = !DILocalVariable(name: "obwinmat", scope: !13133, file: !3, line: 3281, type: !2892)
!13195 = !DILocation(line: 3281, column: 8, scope: !13133)
!13196 = !DILocalVariable(name: "bounds", scope: !13133, file: !3, line: 3281, type: !176)
!13197 = !DILocation(line: 3281, column: 24, scope: !13133)
!13198 = !DILocalVariable(name: "ho1", scope: !13133, file: !3, line: 3281, type: !176)
!13199 = !DILocation(line: 3281, column: 35, scope: !13133)
!13200 = !DILocalVariable(name: "ho2", scope: !13133, file: !3, line: 3281, type: !176)
!13201 = !DILocation(line: 3281, column: 43, scope: !13133)
!13202 = !DILocalVariable(name: "ho3", scope: !13133, file: !3, line: 3281, type: !176)
!13203 = !DILocation(line: 3281, column: 51, scope: !13133)
!13204 = !DILocalVariable(name: "ho4", scope: !13133, file: !3, line: 3281, type: !176)
!13205 = !DILocation(line: 3281, column: 59, scope: !13133)
!13206 = !DILocalVariable(name: "i", scope: !13133, file: !3, line: 3282, type: !29)
!13207 = !DILocation(line: 3282, column: 6, scope: !13133)
!13208 = !DILocalVariable(name: "v", scope: !13133, file: !3, line: 3282, type: !29)
!13209 = !DILocation(line: 3282, column: 9, scope: !13133)
!13210 = !DILocalVariable(name: "zvlnr", scope: !13133, file: !3, line: 3282, type: !29)
!13211 = !DILocation(line: 3282, column: 12, scope: !13133)
!13212 = !DILocalVariable(name: "c1", scope: !13133, file: !3, line: 3282, type: !29)
!13213 = !DILocation(line: 3282, column: 19, scope: !13133)
!13214 = !DILocalVariable(name: "c2", scope: !13133, file: !3, line: 3282, type: !29)
!13215 = !DILocation(line: 3282, column: 23, scope: !13133)
!13216 = !DILocalVariable(name: "c3", scope: !13133, file: !3, line: 3282, type: !29)
!13217 = !DILocation(line: 3282, column: 27, scope: !13133)
!13218 = !DILocalVariable(name: "c4", scope: !13133, file: !3, line: 3282, type: !29)
!13219 = !DILocation(line: 3282, column: 31, scope: !13133)
!13220 = !DILocalVariable(name: "dofill", scope: !13133, file: !3, line: 3282, type: !29)
!13221 = !DILocation(line: 3282, column: 37, scope: !13133)
!13222 = !DILocalVariable(name: "zsample", scope: !13133, file: !3, line: 3283, type: !29)
!13223 = !DILocation(line: 3283, column: 6, scope: !13133)
!13224 = !DILocalVariable(name: "polygon_offset", scope: !13133, file: !3, line: 3283, type: !29)
!13225 = !DILocation(line: 3283, column: 15, scope: !13133)
!13226 = !DILocation(line: 3285, column: 22, scope: !13133)
!13227 = !DILocation(line: 3285, column: 28, scope: !13133)
!13228 = !DILocation(line: 3285, column: 34, scope: !13133)
!13229 = !DILocation(line: 3285, column: 38, scope: !13133)
!13230 = !DILocation(line: 3285, column: 2, scope: !13133)
!13231 = !DILocation(line: 3287, column: 14, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 3287, column: 2)
!13233 = !DILocation(line: 3287, column: 7, scope: !13232)
!13234 = !DILocation(line: 3287, column: 18, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13232, file: !3, line: 3287, column: 2)
!13236 = !DILocation(line: 3287, column: 26, scope: !13235)
!13237 = !DILocation(line: 3287, column: 25, scope: !13235)
!13238 = !DILocation(line: 3287, column: 2, scope: !13232)
!13239 = !DILocation(line: 3288, column: 18, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 3287, column: 46)
!13241 = !DILocation(line: 3288, column: 11, scope: !13240)
!13242 = !DILocation(line: 3288, column: 8, scope: !13240)
!13243 = !DILocation(line: 3290, column: 19, scope: !13240)
!13244 = !DILocation(line: 3290, column: 26, scope: !13240)
!13245 = !DILocation(line: 3290, column: 30, scope: !13240)
!13246 = !DILocation(line: 3290, column: 37, scope: !13240)
!13247 = !DILocation(line: 3290, column: 41, scope: !13240)
!13248 = !DILocation(line: 3290, column: 48, scope: !13240)
!13249 = !DILocation(line: 3290, column: 52, scope: !13240)
!13250 = !DILocation(line: 3290, column: 3, scope: !13240)
!13251 = !DILocation(line: 3293, column: 26, scope: !13240)
!13252 = !DILocation(line: 3293, column: 19, scope: !13240)
!13253 = !DILocation(line: 3293, column: 31, scope: !13240)
!13254 = !DILocation(line: 3293, column: 3, scope: !13240)
!13255 = !DILocation(line: 3293, column: 10, scope: !13240)
!13256 = !DILocation(line: 3293, column: 15, scope: !13240)
!13257 = !DILocation(line: 3294, column: 26, scope: !13240)
!13258 = !DILocation(line: 3294, column: 19, scope: !13240)
!13259 = !DILocation(line: 3294, column: 31, scope: !13240)
!13260 = !DILocation(line: 3294, column: 3, scope: !13240)
!13261 = !DILocation(line: 3294, column: 10, scope: !13240)
!13262 = !DILocation(line: 3294, column: 15, scope: !13240)
!13263 = !DILocation(line: 3297, column: 18, scope: !13240)
!13264 = !DILocation(line: 3297, column: 42, scope: !13240)
!13265 = !DILocation(line: 3297, column: 46, scope: !13240)
!13266 = !DILocation(line: 3297, column: 41, scope: !13240)
!13267 = !DILocation(line: 3297, column: 52, scope: !13240)
!13268 = !DILocation(line: 3297, column: 56, scope: !13240)
!13269 = !DILocation(line: 3297, column: 51, scope: !13240)
!13270 = !DILocation(line: 3297, column: 3, scope: !13240)
!13271 = !DILocation(line: 3297, column: 10, scope: !13240)
!13272 = !DILocation(line: 3297, column: 16, scope: !13240)
!13273 = !DILocation(line: 3298, column: 19, scope: !13240)
!13274 = !DILocation(line: 3298, column: 3, scope: !13240)
!13275 = !DILocation(line: 3298, column: 10, scope: !13240)
!13276 = !DILocation(line: 3298, column: 17, scope: !13240)
!13277 = !DILocation(line: 3299, column: 20, scope: !13240)
!13278 = !DILocation(line: 3299, column: 3, scope: !13240)
!13279 = !DILocation(line: 3299, column: 10, scope: !13240)
!13280 = !DILocation(line: 3299, column: 18, scope: !13240)
!13281 = !DILocation(line: 3301, column: 7, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13240, file: !3, line: 3301, column: 7)
!13283 = !DILocation(line: 3301, column: 7, scope: !13240)
!13284 = !DILocation(line: 3302, column: 21, scope: !13282)
!13285 = !DILocation(line: 3302, column: 45, scope: !13282)
!13286 = !DILocation(line: 3302, column: 49, scope: !13282)
!13287 = !DILocation(line: 3302, column: 44, scope: !13282)
!13288 = !DILocation(line: 3302, column: 55, scope: !13282)
!13289 = !DILocation(line: 3302, column: 59, scope: !13282)
!13290 = !DILocation(line: 3302, column: 54, scope: !13282)
!13291 = !DILocation(line: 3302, column: 4, scope: !13282)
!13292 = !DILocation(line: 3302, column: 11, scope: !13282)
!13293 = !DILocation(line: 3302, column: 19, scope: !13282)
!13294 = !DILocation(line: 3305, column: 3, scope: !13240)
!13295 = !DILocation(line: 3305, column: 10, scope: !13240)
!13296 = !DILocation(line: 3305, column: 18, scope: !13240)
!13297 = !DILocation(line: 3306, column: 3, scope: !13240)
!13298 = !DILocation(line: 3306, column: 10, scope: !13240)
!13299 = !DILocation(line: 3306, column: 22, scope: !13240)
!13300 = !DILocation(line: 3308, column: 16, scope: !13240)
!13301 = !DILocation(line: 3308, column: 20, scope: !13240)
!13302 = !DILocation(line: 3308, column: 27, scope: !13240)
!13303 = !DILocation(line: 3308, column: 35, scope: !13240)
!13304 = !DILocation(line: 3308, column: 42, scope: !13240)
!13305 = !DILocation(line: 3308, column: 52, scope: !13240)
!13306 = !DILocation(line: 3308, column: 3, scope: !13240)
!13307 = !DILocation(line: 3309, column: 19, scope: !13240)
!13308 = !DILocation(line: 3309, column: 17, scope: !13240)
!13309 = !DILocation(line: 3309, column: 3, scope: !13240)
!13310 = !DILocation(line: 3309, column: 10, scope: !13240)
!13311 = !DILocation(line: 3309, column: 14, scope: !13240)
!13312 = !DILocation(line: 3311, column: 7, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13240, file: !3, line: 3311, column: 7)
!13314 = !DILocation(line: 3311, column: 7, scope: !13240)
!13315 = !DILocation(line: 3312, column: 19, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 3311, column: 12)
!13317 = !DILocation(line: 3312, column: 23, scope: !13316)
!13318 = !DILocation(line: 3312, column: 32, scope: !13316)
!13319 = !DILocation(line: 3312, column: 18, scope: !13316)
!13320 = !DILocation(line: 3312, column: 39, scope: !13316)
!13321 = !DILocation(line: 3312, column: 43, scope: !13316)
!13322 = !DILocation(line: 3312, column: 37, scope: !13316)
!13323 = !DILocation(line: 3312, column: 4, scope: !13316)
!13324 = !DILocation(line: 3312, column: 11, scope: !13316)
!13325 = !DILocation(line: 3312, column: 16, scope: !13316)
!13326 = !DILocation(line: 3313, column: 19, scope: !13316)
!13327 = !DILocation(line: 3313, column: 23, scope: !13316)
!13328 = !DILocation(line: 3313, column: 32, scope: !13316)
!13329 = !DILocation(line: 3313, column: 18, scope: !13316)
!13330 = !DILocation(line: 3313, column: 39, scope: !13316)
!13331 = !DILocation(line: 3313, column: 43, scope: !13316)
!13332 = !DILocation(line: 3313, column: 37, scope: !13316)
!13333 = !DILocation(line: 3313, column: 4, scope: !13316)
!13334 = !DILocation(line: 3313, column: 11, scope: !13316)
!13335 = !DILocation(line: 3313, column: 16, scope: !13316)
!13336 = !DILocation(line: 3314, column: 3, scope: !13316)
!13337 = !DILocation(line: 3316, column: 19, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 3315, column: 8)
!13339 = !DILocation(line: 3316, column: 23, scope: !13338)
!13340 = !DILocation(line: 3316, column: 32, scope: !13338)
!13341 = !DILocation(line: 3316, column: 18, scope: !13338)
!13342 = !DILocation(line: 3316, column: 4, scope: !13338)
!13343 = !DILocation(line: 3316, column: 11, scope: !13338)
!13344 = !DILocation(line: 3316, column: 16, scope: !13338)
!13345 = !DILocation(line: 3317, column: 19, scope: !13338)
!13346 = !DILocation(line: 3317, column: 23, scope: !13338)
!13347 = !DILocation(line: 3317, column: 32, scope: !13338)
!13348 = !DILocation(line: 3317, column: 18, scope: !13338)
!13349 = !DILocation(line: 3317, column: 4, scope: !13338)
!13350 = !DILocation(line: 3317, column: 11, scope: !13338)
!13351 = !DILocation(line: 3317, column: 16, scope: !13338)
!13352 = !DILocation(line: 3321, column: 3, scope: !13240)
!13353 = !DILocation(line: 3321, column: 10, scope: !13240)
!13354 = !DILocation(line: 3321, column: 16, scope: !13240)
!13355 = !DILocation(line: 3322, column: 3, scope: !13240)
!13356 = !DILocation(line: 3322, column: 10, scope: !13240)
!13357 = !DILocation(line: 3322, column: 16, scope: !13240)
!13358 = !DILocation(line: 3323, column: 2, scope: !13240)
!13359 = !DILocation(line: 3287, column: 42, scope: !13235)
!13360 = !DILocation(line: 3287, column: 2, scope: !13235)
!13361 = distinct !{!13361, !13238, !13362}
!13362 = !DILocation(line: 3323, column: 2, scope: !13232)
!13363 = !DILocation(line: 3326, column: 7, scope: !13133)
!13364 = !DILocation(line: 3328, column: 8, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 3328, column: 2)
!13366 = !DILocation(line: 3328, column: 16, scope: !13365)
!13367 = !DILocation(line: 3328, column: 20, scope: !13365)
!13368 = !DILocation(line: 3328, column: 34, scope: !13365)
!13369 = !DILocation(line: 3328, column: 15, scope: !13365)
!13370 = !DILocation(line: 3328, column: 7, scope: !13365)
!13371 = !DILocation(line: 3328, column: 41, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13365, file: !3, line: 3328, column: 2)
!13373 = !DILocation(line: 3328, column: 2, scope: !13365)
!13374 = !DILocation(line: 3329, column: 8, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 3328, column: 66)
!13376 = !DILocation(line: 3329, column: 13, scope: !13375)
!13377 = !DILocation(line: 3329, column: 6, scope: !13375)
!13378 = !DILocation(line: 3331, column: 9, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 3331, column: 7)
!13380 = !DILocation(line: 3331, column: 14, scope: !13379)
!13381 = !DILocation(line: 3331, column: 20, scope: !13379)
!13382 = !DILocation(line: 3331, column: 18, scope: !13379)
!13383 = !DILocation(line: 3331, column: 7, scope: !13375)
!13384 = !DILocation(line: 3332, column: 4, scope: !13379)
!13385 = !DILocation(line: 3334, column: 7, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 3334, column: 7)
!13387 = !DILocation(line: 3334, column: 12, scope: !13386)
!13388 = !DILocation(line: 3334, column: 17, scope: !13386)
!13389 = !DILocation(line: 3334, column: 7, scope: !13375)
!13390 = !DILocation(line: 3335, column: 16, scope: !13386)
!13391 = !DILocation(line: 3335, column: 26, scope: !13386)
!13392 = !DILocation(line: 3335, column: 34, scope: !13386)
!13393 = !DILocation(line: 3335, column: 39, scope: !13386)
!13394 = !DILocation(line: 3335, column: 4, scope: !13386)
!13395 = !DILocation(line: 3337, column: 15, scope: !13386)
!13396 = !DILocation(line: 3337, column: 25, scope: !13386)
!13397 = !DILocation(line: 3337, column: 4, scope: !13386)
!13398 = !DILocation(line: 3339, column: 26, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 3339, column: 7)
!13400 = !DILocation(line: 3339, column: 31, scope: !13399)
!13401 = !DILocation(line: 3339, column: 36, scope: !13399)
!13402 = !DILocation(line: 3339, column: 46, scope: !13399)
!13403 = !DILocation(line: 3339, column: 54, scope: !13399)
!13404 = !DILocation(line: 3339, column: 7, scope: !13399)
!13405 = !DILocation(line: 3339, column: 7, scope: !13375)
!13406 = !DILocation(line: 3340, column: 4, scope: !13399)
!13407 = !DILocation(line: 3342, column: 28, scope: !13375)
!13408 = !DILocation(line: 3342, column: 35, scope: !13375)
!13409 = !DILocation(line: 3342, column: 40, scope: !13375)
!13410 = !DILocation(line: 3342, column: 3, scope: !13375)
!13411 = !DILocation(line: 3344, column: 9, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 3344, column: 3)
!13413 = !DILocation(line: 3344, column: 8, scope: !13412)
!13414 = !DILocation(line: 3344, column: 13, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 3344, column: 3)
!13416 = !DILocation(line: 3344, column: 15, scope: !13415)
!13417 = !DILocation(line: 3344, column: 20, scope: !13415)
!13418 = !DILocation(line: 3344, column: 14, scope: !13415)
!13419 = !DILocation(line: 3344, column: 3, scope: !13412)
!13420 = !DILocation(line: 3345, column: 9, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 3345, column: 8)
!13422 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 3344, column: 34)
!13423 = !DILocation(line: 3345, column: 11, scope: !13421)
!13424 = !DILocation(line: 3345, column: 17, scope: !13421)
!13425 = !DILocation(line: 3345, column: 8, scope: !13422)
!13426 = !DILocation(line: 3346, column: 10, scope: !13421)
!13427 = !DILocation(line: 3346, column: 15, scope: !13421)
!13428 = !DILocation(line: 3346, column: 25, scope: !13421)
!13429 = !DILocation(line: 3346, column: 26, scope: !13421)
!13430 = !DILocation(line: 3346, column: 31, scope: !13421)
!13431 = !DILocation(line: 3346, column: 8, scope: !13421)
!13432 = !DILocation(line: 3346, column: 5, scope: !13421)
!13433 = !DILocation(line: 3347, column: 12, scope: !13421)
!13434 = !DILocation(line: 3349, column: 8, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 3349, column: 8)
!13436 = !DILocation(line: 3349, column: 13, scope: !13435)
!13437 = !DILocation(line: 3349, column: 18, scope: !13435)
!13438 = !DILocation(line: 3349, column: 16, scope: !13435)
!13439 = !DILocation(line: 3349, column: 8, scope: !13422)
!13440 = !DILocation(line: 3350, column: 9, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 3349, column: 22)
!13442 = !DILocation(line: 3350, column: 14, scope: !13441)
!13443 = !DILocation(line: 3350, column: 7, scope: !13441)
!13444 = !DILocation(line: 3351, column: 9, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 3351, column: 9)
!13446 = !DILocation(line: 3351, column: 9, scope: !13441)
!13447 = !DILocation(line: 3352, column: 15, scope: !13445)
!13448 = !DILocation(line: 3352, column: 19, scope: !13445)
!13449 = !DILocation(line: 3352, column: 25, scope: !13445)
!13450 = !DILocation(line: 3352, column: 42, scope: !13445)
!13451 = !DILocation(line: 3352, column: 46, scope: !13445)
!13452 = !DILocation(line: 3352, column: 50, scope: !13445)
!13453 = !DILocation(line: 3352, column: 55, scope: !13445)
!13454 = !DILocation(line: 0, scope: !13445)
!13455 = !DILocation(line: 3352, column: 12, scope: !13445)
!13456 = !DILocation(line: 3352, column: 6, scope: !13445)
!13457 = !DILocation(line: 3354, column: 17, scope: !13445)
!13458 = !DILocation(line: 3354, column: 21, scope: !13445)
!13459 = !DILocation(line: 3354, column: 26, scope: !13445)
!13460 = !DILocation(line: 3354, column: 39, scope: !13445)
!13461 = !DILocation(line: 3354, column: 43, scope: !13445)
!13462 = !DILocation(line: 3354, column: 47, scope: !13445)
!13463 = !DILocation(line: 3354, column: 52, scope: !13445)
!13464 = !DILocation(line: 3354, column: 67, scope: !13445)
!13465 = !DILocation(line: 3354, column: 72, scope: !13445)
!13466 = !DILocation(line: 3354, column: 76, scope: !13445)
!13467 = !DILocation(line: 3354, column: 81, scope: !13445)
!13468 = !DILocation(line: 3354, column: 70, scope: !13445)
!13469 = !DILocation(line: 3354, column: 12, scope: !13445)
!13470 = !DILocation(line: 3355, column: 4, scope: !13441)
!13471 = !DILocation(line: 3357, column: 8, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13422, file: !3, line: 3357, column: 8)
!13473 = !DILocation(line: 3357, column: 8, scope: !13422)
!13474 = !DILocation(line: 3358, column: 11, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13476, file: !3, line: 3358, column: 9)
!13476 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 3357, column: 16)
!13477 = !DILocation(line: 3358, column: 16, scope: !13475)
!13478 = !DILocation(line: 3358, column: 21, scope: !13475)
!13479 = !DILocation(line: 3358, column: 33, scope: !13475)
!13480 = !DILocation(line: 3358, column: 37, scope: !13475)
!13481 = !DILocation(line: 3358, column: 42, scope: !13475)
!13482 = !DILocation(line: 3358, column: 48, scope: !13475)
!13483 = !DILocation(line: 3358, column: 46, scope: !13475)
!13484 = !DILocation(line: 3358, column: 9, scope: !13476)
!13485 = !DILocalVariable(name: "partclip", scope: !13486, file: !3, line: 3359, type: !103)
!13486 = distinct !DILexicalBlock(scope: !13475, file: !3, line: 3358, column: 54)
!13487 = !DILocation(line: 3359, column: 21, scope: !13486)
!13488 = !DILocation(line: 3361, column: 10, scope: !13486)
!13489 = !DILocation(line: 3361, column: 15, scope: !13486)
!13490 = !DILocation(line: 3361, column: 8, scope: !13486)
!13491 = !DILocation(line: 3362, column: 10, scope: !13486)
!13492 = !DILocation(line: 3362, column: 15, scope: !13486)
!13493 = !DILocation(line: 3362, column: 8, scope: !13486)
!13494 = !DILocation(line: 3363, column: 10, scope: !13486)
!13495 = !DILocation(line: 3363, column: 15, scope: !13486)
!13496 = !DILocation(line: 3363, column: 8, scope: !13486)
!13497 = !DILocation(line: 3364, column: 10, scope: !13486)
!13498 = !DILocation(line: 3364, column: 15, scope: !13486)
!13499 = !DILocation(line: 3364, column: 8, scope: !13486)
!13500 = !DILocation(line: 3366, column: 28, scope: !13486)
!13501 = !DILocation(line: 3366, column: 35, scope: !13486)
!13502 = !DILocation(line: 3366, column: 39, scope: !13486)
!13503 = !DILocation(line: 3366, column: 46, scope: !13486)
!13504 = !DILocation(line: 3366, column: 56, scope: !13486)
!13505 = !DILocation(line: 3366, column: 64, scope: !13486)
!13506 = !DILocation(line: 3366, column: 68, scope: !13486)
!13507 = !DILocation(line: 3366, column: 72, scope: !13486)
!13508 = !DILocation(line: 3366, column: 10, scope: !13486)
!13509 = !DILocation(line: 3366, column: 8, scope: !13486)
!13510 = !DILocation(line: 3367, column: 28, scope: !13486)
!13511 = !DILocation(line: 3367, column: 35, scope: !13486)
!13512 = !DILocation(line: 3367, column: 39, scope: !13486)
!13513 = !DILocation(line: 3367, column: 46, scope: !13486)
!13514 = !DILocation(line: 3367, column: 56, scope: !13486)
!13515 = !DILocation(line: 3367, column: 64, scope: !13486)
!13516 = !DILocation(line: 3367, column: 68, scope: !13486)
!13517 = !DILocation(line: 3367, column: 72, scope: !13486)
!13518 = !DILocation(line: 3367, column: 10, scope: !13486)
!13519 = !DILocation(line: 3367, column: 8, scope: !13486)
!13520 = !DILocation(line: 3368, column: 28, scope: !13486)
!13521 = !DILocation(line: 3368, column: 35, scope: !13486)
!13522 = !DILocation(line: 3368, column: 39, scope: !13486)
!13523 = !DILocation(line: 3368, column: 46, scope: !13486)
!13524 = !DILocation(line: 3368, column: 56, scope: !13486)
!13525 = !DILocation(line: 3368, column: 64, scope: !13486)
!13526 = !DILocation(line: 3368, column: 68, scope: !13486)
!13527 = !DILocation(line: 3368, column: 72, scope: !13486)
!13528 = !DILocation(line: 3368, column: 10, scope: !13486)
!13529 = !DILocation(line: 3368, column: 8, scope: !13486)
!13530 = !DILocation(line: 3371, column: 16, scope: !13486)
!13531 = !DILocation(line: 3371, column: 21, scope: !13486)
!13532 = !DILocation(line: 3371, column: 19, scope: !13486)
!13533 = !DILocation(line: 3371, column: 26, scope: !13486)
!13534 = !DILocation(line: 3371, column: 24, scope: !13486)
!13535 = !DILocation(line: 3371, column: 14, scope: !13486)
!13536 = !DILocation(line: 3372, column: 10, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 3372, column: 10)
!13538 = !DILocation(line: 3372, column: 10, scope: !13486)
!13539 = !DILocation(line: 3373, column: 29, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13537, file: !3, line: 3372, column: 14)
!13541 = !DILocation(line: 3373, column: 36, scope: !13540)
!13542 = !DILocation(line: 3373, column: 40, scope: !13540)
!13543 = !DILocation(line: 3373, column: 47, scope: !13540)
!13544 = !DILocation(line: 3373, column: 57, scope: !13540)
!13545 = !DILocation(line: 3373, column: 65, scope: !13540)
!13546 = !DILocation(line: 3373, column: 69, scope: !13540)
!13547 = !DILocation(line: 3373, column: 73, scope: !13540)
!13548 = !DILocation(line: 3373, column: 11, scope: !13540)
!13549 = !DILocation(line: 3373, column: 9, scope: !13540)
!13550 = !DILocation(line: 3374, column: 19, scope: !13540)
!13551 = !DILocation(line: 3374, column: 16, scope: !13540)
!13552 = !DILocation(line: 3375, column: 6, scope: !13540)
!13553 = !DILocation(line: 3377, column: 10, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 3377, column: 10)
!13555 = !DILocation(line: 3377, column: 18, scope: !13554)
!13556 = !DILocation(line: 3377, column: 10, scope: !13486)
!13557 = !DILocation(line: 3379, column: 12, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 3379, column: 11)
!13559 = distinct !DILexicalBlock(scope: !13554, file: !3, line: 3377, column: 23)
!13560 = !DILocation(line: 3379, column: 19, scope: !13558)
!13561 = !DILocation(line: 3379, column: 22, scope: !13558)
!13562 = !DILocation(line: 3379, column: 26, scope: !13558)
!13563 = !DILocation(line: 3379, column: 32, scope: !13558)
!13564 = !DILocation(line: 3379, column: 11, scope: !13559)
!13565 = !DILocation(line: 3380, column: 11, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 3379, column: 41)
!13567 = !DILocation(line: 3381, column: 14, scope: !13566)
!13568 = !DILocation(line: 3381, column: 24, scope: !13566)
!13569 = !DILocation(line: 3381, column: 31, scope: !13566)
!13570 = !DILocation(line: 3381, column: 30, scope: !13566)
!13571 = !DILocation(line: 3381, column: 23, scope: !13566)
!13572 = !DILocation(line: 3381, column: 17, scope: !13566)
!13573 = !DILocation(line: 3381, column: 12, scope: !13566)
!13574 = !DILocation(line: 3383, column: 19, scope: !13566)
!13575 = !DILocation(line: 3383, column: 24, scope: !13566)
!13576 = !DILocation(line: 3383, column: 28, scope: !13566)
!13577 = !DILocation(line: 3383, column: 8, scope: !13566)
!13578 = !DILocation(line: 3385, column: 17, scope: !13566)
!13579 = !DILocation(line: 3385, column: 21, scope: !13566)
!13580 = !DILocation(line: 3385, column: 8, scope: !13566)
!13581 = !DILocation(line: 3385, column: 14, scope: !13566)
!13582 = !DILocation(line: 3386, column: 21, scope: !13566)
!13583 = !DILocation(line: 3386, column: 26, scope: !13566)
!13584 = !DILocation(line: 3386, column: 36, scope: !13566)
!13585 = !DILocation(line: 3386, column: 8, scope: !13566)
!13586 = !DILocation(line: 3387, column: 14, scope: !13566)
!13587 = !DILocation(line: 3387, column: 24, scope: !13566)
!13588 = !DILocation(line: 3387, column: 32, scope: !13566)
!13589 = !DILocation(line: 3387, column: 31, scope: !13566)
!13590 = !DILocation(line: 3387, column: 23, scope: !13566)
!13591 = !DILocation(line: 3387, column: 17, scope: !13566)
!13592 = !DILocation(line: 3387, column: 12, scope: !13566)
!13593 = !DILocation(line: 3389, column: 35, scope: !13566)
!13594 = !DILocation(line: 3389, column: 42, scope: !13566)
!13595 = !DILocation(line: 3389, column: 40, scope: !13566)
!13596 = !DILocation(line: 3389, column: 29, scope: !13566)
!13597 = !DILocation(line: 3389, column: 24, scope: !13566)
!13598 = !DILocation(line: 3389, column: 22, scope: !13566)
!13599 = !DILocation(line: 3390, column: 7, scope: !13566)
!13600 = !DILocation(line: 3391, column: 26, scope: !13558)
!13601 = !DILocation(line: 3393, column: 14, scope: !13559)
!13602 = !DILocation(line: 3393, column: 15, scope: !13559)
!13603 = !DILocation(line: 3393, column: 12, scope: !13559)
!13604 = !DILocation(line: 3395, column: 20, scope: !13559)
!13605 = !DILocation(line: 3395, column: 11, scope: !13559)
!13606 = !DILocation(line: 3395, column: 9, scope: !13559)
!13607 = !DILocation(line: 3396, column: 20, scope: !13559)
!13608 = !DILocation(line: 3396, column: 11, scope: !13559)
!13609 = !DILocation(line: 3396, column: 9, scope: !13559)
!13610 = !DILocation(line: 3397, column: 20, scope: !13559)
!13611 = !DILocation(line: 3397, column: 11, scope: !13559)
!13612 = !DILocation(line: 3397, column: 9, scope: !13559)
!13613 = !DILocation(line: 3398, column: 11, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 3398, column: 11)
!13615 = !DILocation(line: 3398, column: 11, scope: !13559)
!13616 = !DILocation(line: 3399, column: 21, scope: !13614)
!13617 = !DILocation(line: 3399, column: 12, scope: !13614)
!13618 = !DILocation(line: 3399, column: 10, scope: !13614)
!13619 = !DILocation(line: 3399, column: 8, scope: !13614)
!13620 = !DILocation(line: 3401, column: 19, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 3401, column: 7)
!13622 = !DILocation(line: 3401, column: 12, scope: !13621)
!13623 = !DILocation(line: 3401, column: 23, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13621, file: !3, line: 3401, column: 7)
!13625 = !DILocation(line: 3401, column: 31, scope: !13624)
!13626 = !DILocation(line: 3401, column: 30, scope: !13624)
!13627 = !DILocation(line: 3401, column: 7, scope: !13621)
!13628 = !DILocation(line: 3402, column: 23, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 3401, column: 51)
!13630 = !DILocation(line: 3402, column: 16, scope: !13629)
!13631 = !DILocation(line: 3402, column: 13, scope: !13629)
!13632 = !DILocation(line: 3403, column: 31, scope: !13629)
!13633 = !DILocation(line: 3403, column: 8, scope: !13629)
!13634 = !DILocation(line: 3403, column: 15, scope: !13629)
!13635 = !DILocation(line: 3403, column: 29, scope: !13629)
!13636 = !DILocation(line: 3405, column: 12, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 3405, column: 12)
!13638 = !DILocation(line: 3405, column: 16, scope: !13637)
!13639 = !DILocation(line: 3405, column: 30, scope: !13637)
!13640 = !DILocation(line: 3405, column: 12, scope: !13629)
!13641 = !DILocation(line: 3406, column: 13, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13643, file: !3, line: 3406, column: 13)
!13643 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 3405, column: 47)
!13644 = !DILocation(line: 3406, column: 13, scope: !13643)
!13645 = !DILocation(line: 3407, column: 23, scope: !13642)
!13646 = !DILocation(line: 3407, column: 30, scope: !13642)
!13647 = !DILocation(line: 3407, column: 33, scope: !13642)
!13648 = !DILocation(line: 3407, column: 40, scope: !13642)
!13649 = !DILocation(line: 3407, column: 45, scope: !13642)
!13650 = !DILocation(line: 3407, column: 49, scope: !13642)
!13651 = !DILocation(line: 3407, column: 54, scope: !13642)
!13652 = !DILocation(line: 3407, column: 59, scope: !13642)
!13653 = !DILocation(line: 3407, column: 64, scope: !13642)
!13654 = !DILocation(line: 3407, column: 69, scope: !13642)
!13655 = !DILocation(line: 3407, column: 73, scope: !13642)
!13656 = !DILocation(line: 3407, column: 77, scope: !13642)
!13657 = !DILocation(line: 3407, column: 81, scope: !13642)
!13658 = !DILocation(line: 3407, column: 10, scope: !13642)
!13659 = !DILocation(line: 3409, column: 23, scope: !13642)
!13660 = !DILocation(line: 3409, column: 30, scope: !13642)
!13661 = !DILocation(line: 3409, column: 33, scope: !13642)
!13662 = !DILocation(line: 3409, column: 40, scope: !13642)
!13663 = !DILocation(line: 3409, column: 45, scope: !13642)
!13664 = !DILocation(line: 3409, column: 49, scope: !13642)
!13665 = !DILocation(line: 3409, column: 54, scope: !13642)
!13666 = !DILocation(line: 3409, column: 59, scope: !13642)
!13667 = !DILocation(line: 3409, column: 70, scope: !13642)
!13668 = !DILocation(line: 3409, column: 74, scope: !13642)
!13669 = !DILocation(line: 3409, column: 78, scope: !13642)
!13670 = !DILocation(line: 3409, column: 10, scope: !13642)
!13671 = !DILocation(line: 3410, column: 8, scope: !13643)
!13672 = !DILocation(line: 3412, column: 13, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 3412, column: 13)
!13674 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 3411, column: 13)
!13675 = !DILocation(line: 3412, column: 16, scope: !13673)
!13676 = !DILocation(line: 3412, column: 20, scope: !13673)
!13677 = !DILocation(line: 3412, column: 25, scope: !13673)
!13678 = !DILocation(line: 3412, column: 30, scope: !13673)
!13679 = !DILocation(line: 3412, column: 13, scope: !13674)
!13680 = !DILocation(line: 3413, column: 20, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 3412, column: 43)
!13682 = !DILocation(line: 3413, column: 27, scope: !13681)
!13683 = !DILocation(line: 3413, column: 30, scope: !13681)
!13684 = !DILocation(line: 3413, column: 37, scope: !13681)
!13685 = !DILocation(line: 3413, column: 42, scope: !13681)
!13686 = !DILocation(line: 3413, column: 47, scope: !13681)
!13687 = !DILocation(line: 3413, column: 52, scope: !13681)
!13688 = !DILocation(line: 3413, column: 57, scope: !13681)
!13689 = !DILocation(line: 3413, column: 61, scope: !13681)
!13690 = !DILocation(line: 3413, column: 65, scope: !13681)
!13691 = !DILocation(line: 3413, column: 69, scope: !13681)
!13692 = !DILocation(line: 3413, column: 10, scope: !13681)
!13693 = !DILocation(line: 3414, column: 9, scope: !13681)
!13694 = !DILocation(line: 3416, column: 19, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 3415, column: 14)
!13696 = !DILocation(line: 3416, column: 26, scope: !13695)
!13697 = !DILocation(line: 3416, column: 29, scope: !13695)
!13698 = !DILocation(line: 3416, column: 36, scope: !13695)
!13699 = !DILocation(line: 3416, column: 41, scope: !13695)
!13700 = !DILocation(line: 3416, column: 46, scope: !13695)
!13701 = !DILocation(line: 3416, column: 51, scope: !13695)
!13702 = !DILocation(line: 3416, column: 55, scope: !13695)
!13703 = !DILocation(line: 3416, column: 59, scope: !13695)
!13704 = !DILocation(line: 3416, column: 10, scope: !13695)
!13705 = !DILocation(line: 3417, column: 14, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13695, file: !3, line: 3417, column: 14)
!13707 = !DILocation(line: 3417, column: 14, scope: !13695)
!13708 = !DILocation(line: 3418, column: 20, scope: !13706)
!13709 = !DILocation(line: 3418, column: 27, scope: !13706)
!13710 = !DILocation(line: 3418, column: 30, scope: !13706)
!13711 = !DILocation(line: 3418, column: 35, scope: !13706)
!13712 = !DILocation(line: 3418, column: 50, scope: !13706)
!13713 = !DILocation(line: 3418, column: 55, scope: !13706)
!13714 = !DILocation(line: 3418, column: 60, scope: !13706)
!13715 = !DILocation(line: 3418, column: 65, scope: !13706)
!13716 = !DILocation(line: 3418, column: 69, scope: !13706)
!13717 = !DILocation(line: 3418, column: 73, scope: !13706)
!13718 = !DILocation(line: 3418, column: 11, scope: !13706)
!13719 = !DILocation(line: 3421, column: 7, scope: !13629)
!13720 = !DILocation(line: 3401, column: 47, scope: !13624)
!13721 = !DILocation(line: 3401, column: 7, scope: !13624)
!13722 = distinct !{!13722, !13627, !13723}
!13723 = !DILocation(line: 3421, column: 7, scope: !13621)
!13724 = !DILocation(line: 3422, column: 6, scope: !13559)
!13725 = !DILocation(line: 3423, column: 11, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 3423, column: 10)
!13727 = !DILocation(line: 3423, column: 13, scope: !13726)
!13728 = !DILocation(line: 3423, column: 19, scope: !13726)
!13729 = !DILocation(line: 3423, column: 10, scope: !13486)
!13730 = !DILocation(line: 3424, column: 11, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3424, column: 11)
!13732 = !DILocation(line: 3424, column: 15, scope: !13731)
!13733 = !DILocation(line: 3424, column: 26, scope: !13731)
!13734 = !DILocation(line: 3424, column: 30, scope: !13731)
!13735 = !DILocation(line: 3424, column: 11, scope: !13726)
!13736 = !DILocation(line: 3425, column: 8, scope: !13731)
!13737 = !DILocation(line: 3424, column: 33, scope: !13731)
!13738 = !DILocation(line: 3426, column: 5, scope: !13486)
!13739 = !DILocation(line: 3427, column: 4, scope: !13476)
!13740 = !DILocation(line: 3428, column: 3, scope: !13422)
!13741 = !DILocation(line: 3344, column: 30, scope: !13415)
!13742 = !DILocation(line: 3344, column: 3, scope: !13415)
!13743 = distinct !{!13743, !13419, !13744}
!13744 = !DILocation(line: 3428, column: 3, scope: !13412)
!13745 = !DILocation(line: 3430, column: 7, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 3430, column: 7)
!13747 = !DILocation(line: 3430, column: 11, scope: !13746)
!13748 = !DILocation(line: 3430, column: 22, scope: !13746)
!13749 = !DILocation(line: 3430, column: 26, scope: !13746)
!13750 = !DILocation(line: 3430, column: 7, scope: !13375)
!13751 = !DILocation(line: 3430, column: 32, scope: !13746)
!13752 = !DILocation(line: 3431, column: 2, scope: !13375)
!13753 = !DILocation(line: 3328, column: 47, scope: !13372)
!13754 = !DILocation(line: 3328, column: 55, scope: !13372)
!13755 = !DILocation(line: 3328, column: 60, scope: !13372)
!13756 = !DILocation(line: 3328, column: 54, scope: !13372)
!13757 = !DILocation(line: 3328, column: 2, scope: !13372)
!13758 = distinct !{!13758, !13373, !13759}
!13759 = !DILocation(line: 3431, column: 2, scope: !13365)
!13760 = !DILocation(line: 3433, column: 14, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 3433, column: 2)
!13762 = !DILocation(line: 3433, column: 7, scope: !13761)
!13763 = !DILocation(line: 3433, column: 18, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 3433, column: 2)
!13765 = !DILocation(line: 3433, column: 26, scope: !13764)
!13766 = !DILocation(line: 3433, column: 25, scope: !13764)
!13767 = !DILocation(line: 3433, column: 2, scope: !13761)
!13768 = !DILocation(line: 3434, column: 18, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13764, file: !3, line: 3433, column: 46)
!13770 = !DILocation(line: 3434, column: 11, scope: !13769)
!13771 = !DILocation(line: 3434, column: 8, scope: !13769)
!13772 = !DILocation(line: 3435, column: 3, scope: !13769)
!13773 = !DILocation(line: 3435, column: 13, scope: !13769)
!13774 = !DILocation(line: 3435, column: 20, scope: !13769)
!13775 = !DILocation(line: 3436, column: 7, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13769, file: !3, line: 3436, column: 7)
!13777 = !DILocation(line: 3436, column: 14, scope: !13776)
!13778 = !DILocation(line: 3436, column: 7, scope: !13769)
!13779 = !DILocation(line: 3437, column: 4, scope: !13776)
!13780 = !DILocation(line: 3437, column: 14, scope: !13776)
!13781 = !DILocation(line: 3437, column: 21, scope: !13776)
!13782 = !DILocation(line: 3438, column: 18, scope: !13769)
!13783 = !DILocation(line: 3438, column: 3, scope: !13769)
!13784 = !DILocation(line: 3439, column: 2, scope: !13769)
!13785 = !DILocation(line: 3433, column: 42, scope: !13764)
!13786 = !DILocation(line: 3433, column: 2, scope: !13764)
!13787 = distinct !{!13787, !13767, !13788}
!13788 = !DILocation(line: 3439, column: 2, scope: !13761)
!13789 = !DILocation(line: 3441, column: 9, scope: !13133)
!13790 = !DILocation(line: 3441, column: 2, scope: !13133)
!13791 = distinct !DISubprogram(name: "zbuffer_transp_shade", scope: !3, file: !3, line: 3986, type: !13792, scopeLine: 3987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, retainedNodes: !108)
!13792 = !DISubroutineType(types: !13793)
!13793 = !{!13794, !5587, !5618, !31, !369}
!13794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!13795 = !DILocalVariable(name: "pa", arg: 1, scope: !13791, file: !3, line: 3986, type: !5587)
!13796 = !DILocation(line: 3986, column: 50, scope: !13791)
!13797 = !DILocalVariable(name: "rl", arg: 2, scope: !13791, file: !3, line: 3986, type: !5618)
!13798 = !DILocation(line: 3986, column: 67, scope: !13791)
!13799 = !DILocalVariable(name: "pass", arg: 3, scope: !13791, file: !3, line: 3986, type: !31)
!13800 = !DILocation(line: 3986, column: 78, scope: !13791)
!13801 = !DILocalVariable(name: "UNUSED_psmlist", arg: 4, scope: !13791, file: !3, line: 3986, type: !369)
!13802 = !DILocation(line: 3986, column: 94, scope: !13791)
!13803 = !DILocalVariable(name: "rr", scope: !13791, file: !3, line: 3988, type: !2478)
!13804 = !DILocation(line: 3988, column: 16, scope: !13791)
!13805 = !DILocation(line: 3988, column: 20, scope: !13791)
!13806 = !DILocation(line: 3988, column: 24, scope: !13791)
!13807 = !DILocalVariable(name: "ssamp", scope: !13791, file: !3, line: 3989, type: !13808)
!13808 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeSample", file: !13809, line: 54, baseType: !13810)
!13809 = !DIFile(filename: "blender/source/blender/render/intern/include/shading.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeSample", file: !13809, line: 46, size: 216640, elements: !13811)
!13811 = !{!13812, !13813, !13815, !13958}
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !13810, file: !13809, line: 47, baseType: !29, size: 32)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "rlpp", scope: !13810, file: !13809, line: 49, baseType: !13814, size: 1024, offset: 64)
!13814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5618, size: 1024, elements: !4238)
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "shi", scope: !13810, file: !13809, line: 52, baseType: !13816, size: 188416, offset: 1088)
!13816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13817, size: 188416, elements: !4238)
!13817 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !13818, line: 186, baseType: !13819)
!13818 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !13818, line: 98, size: 11776, elements: !13820)
!13820 = !{!13821, !13822, !13823, !13824, !13825, !13826, !13827, !13828, !13829, !13830, !13831, !13832, !13833, !13834, !13835, !13836, !13837, !13838, !13839, !13840, !13841, !13842, !13843, !13844, !13845, !13846, !13847, !13848, !13849, !13850, !13851, !13852, !13853, !13854, !13855, !13856, !13857, !13858, !13859, !13860, !13861, !13862, !13863, !13864, !13865, !13866, !13867, !13868, !13869, !13870, !13871, !13872, !13873, !13874, !13875, !13876, !13877, !13878, !13879, !13880, !13881, !13882, !13883, !13884, !13885, !13886, !13887, !13888, !13889, !13890, !13891, !13892, !13893, !13902, !13909, !13910, !13911, !13912, !13913, !13914, !13915, !13916, !13917, !13918, !13919, !13920, !13921, !13922, !13923, !13924, !13925, !13926, !13927, !13928, !13929, !13930, !13931, !13932, !13933, !13934, !13935, !13936, !13937, !13938, !13939, !13940, !13941, !13942, !13943, !13944, !13945, !13946, !13947, !13948, !13949, !13950, !13951, !13952, !13953, !13954, !13955, !13956, !13957}
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !13819, file: !13818, line: 102, baseType: !2523, size: 64)
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !13819, file: !13818, line: 103, baseType: !4446, size: 64, offset: 64)
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !13819, file: !13818, line: 104, baseType: !4501, size: 64, offset: 128)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !13819, file: !13818, line: 105, baseType: !4389, size: 64, offset: 192)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !13819, file: !13818, line: 106, baseType: !4400, size: 64, offset: 256)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !13819, file: !13818, line: 107, baseType: !29, size: 32, offset: 320)
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !13819, file: !13818, line: 108, baseType: !2427, size: 96, offset: 352)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !13819, file: !13818, line: 109, baseType: !12, size: 16, offset: 448)
!13829 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13819, file: !13818, line: 110, baseType: !4426, size: 64, offset: 512)
!13830 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13819, file: !13818, line: 110, baseType: !4426, size: 64, offset: 576)
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13819, file: !13818, line: 110, baseType: !4426, size: 64, offset: 640)
!13832 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !13819, file: !13818, line: 111, baseType: !12, size: 16, offset: 704)
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !13819, file: !13818, line: 111, baseType: !12, size: 16, offset: 720)
!13834 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !13819, file: !13818, line: 111, baseType: !12, size: 16, offset: 736)
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !13819, file: !13818, line: 112, baseType: !12, size: 16, offset: 752)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !13819, file: !13818, line: 113, baseType: !12, size: 16, offset: 768)
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !13819, file: !13818, line: 114, baseType: !2427, size: 96, offset: 800)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !13819, file: !13818, line: 114, baseType: !2427, size: 96, offset: 896)
!13839 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !13819, file: !13818, line: 115, baseType: !2427, size: 96, offset: 992)
!13840 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !13819, file: !13818, line: 115, baseType: !2427, size: 96, offset: 1088)
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !13819, file: !13818, line: 115, baseType: !2427, size: 96, offset: 1184)
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13819, file: !13818, line: 116, baseType: !29, size: 32, offset: 1280)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !13819, file: !13818, line: 116, baseType: !29, size: 32, offset: 1312)
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1344)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1376)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1408)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1440)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1472)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !13819, file: !13818, line: 119, baseType: !21, size: 32, offset: 1504)
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !13819, file: !13818, line: 120, baseType: !2427, size: 96, offset: 1536)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !13819, file: !13818, line: 120, baseType: !2427, size: 96, offset: 1632)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !13819, file: !13818, line: 120, baseType: !2427, size: 96, offset: 1728)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !13819, file: !13818, line: 124, baseType: !21, size: 32, offset: 1824)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !13819, file: !13818, line: 124, baseType: !21, size: 32, offset: 1856)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !13819, file: !13818, line: 124, baseType: !21, size: 32, offset: 1888)
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !13819, file: !13818, line: 125, baseType: !21, size: 32, offset: 1920)
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !13819, file: !13818, line: 125, baseType: !21, size: 32, offset: 1952)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !13819, file: !13818, line: 125, baseType: !21, size: 32, offset: 1984)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !13819, file: !13818, line: 126, baseType: !21, size: 32, offset: 2016)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !13819, file: !13818, line: 126, baseType: !21, size: 32, offset: 2048)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !13819, file: !13818, line: 126, baseType: !21, size: 32, offset: 2080)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !13819, file: !13818, line: 127, baseType: !21, size: 32, offset: 2112)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !13819, file: !13818, line: 127, baseType: !21, size: 32, offset: 2144)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !13819, file: !13818, line: 127, baseType: !21, size: 32, offset: 2176)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !13819, file: !13818, line: 129, baseType: !21, size: 32, offset: 2208)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !13819, file: !13818, line: 129, baseType: !21, size: 32, offset: 2240)
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !13819, file: !13818, line: 129, baseType: !21, size: 32, offset: 2272)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !13819, file: !13818, line: 129, baseType: !21, size: 32, offset: 2304)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !13819, file: !13818, line: 129, baseType: !21, size: 32, offset: 2336)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !13819, file: !13818, line: 130, baseType: !21, size: 32, offset: 2368)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !13819, file: !13818, line: 130, baseType: !21, size: 32, offset: 2400)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !13819, file: !13818, line: 130, baseType: !21, size: 32, offset: 2432)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !13819, file: !13818, line: 130, baseType: !21, size: 32, offset: 2464)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !13819, file: !13818, line: 130, baseType: !21, size: 32, offset: 2496)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !13819, file: !13818, line: 131, baseType: !21, size: 32, offset: 2528)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !13819, file: !13818, line: 135, baseType: !29, size: 32, offset: 2560)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !13819, file: !13818, line: 138, baseType: !2427, size: 96, offset: 2592)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !13819, file: !13818, line: 138, baseType: !2427, size: 96, offset: 2688)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !13819, file: !13818, line: 138, baseType: !2427, size: 96, offset: 2784)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !13819, file: !13818, line: 138, baseType: !2427, size: 96, offset: 2880)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !13819, file: !13818, line: 138, baseType: !2427, size: 96, offset: 2976)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !13819, file: !13818, line: 138, baseType: !176, size: 128, offset: 3072)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !13819, file: !13818, line: 139, baseType: !176, size: 128, offset: 3200)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !13819, file: !13818, line: 139, baseType: !2427, size: 96, offset: 3328)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !13819, file: !13818, line: 140, baseType: !21, size: 32, offset: 3424)
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !13819, file: !13818, line: 140, baseType: !2427, size: 96, offset: 3456)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !13819, file: !13818, line: 140, baseType: !2427, size: 96, offset: 3552)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !13819, file: !13818, line: 140, baseType: !176, size: 128, offset: 3648)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !13819, file: !13818, line: 140, baseType: !21, size: 32, offset: 3776)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !13819, file: !13818, line: 140, baseType: !176, size: 128, offset: 3808)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !13819, file: !13818, line: 141, baseType: !2427, size: 96, offset: 3936)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !13819, file: !13818, line: 141, baseType: !2427, size: 96, offset: 4032)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !13819, file: !13818, line: 143, baseType: !13894, size: 3072, offset: 4160)
!13894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13895, size: 3072, elements: !3320)
!13895 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !13818, line: 90, baseType: !13896)
!13896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !13818, line: 87, size: 384, elements: !13897)
!13897 = !{!13898, !13899, !13900, !13901}
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !13896, file: !13818, line: 88, baseType: !2427, size: 96)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !13896, file: !13818, line: 88, baseType: !2427, size: 96, offset: 96)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !13896, file: !13818, line: 88, baseType: !2427, size: 96, offset: 192)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13896, file: !13818, line: 89, baseType: !2874, size: 64, offset: 320)
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !13819, file: !13818, line: 144, baseType: !13903, size: 1536, offset: 7232)
!13903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13904, size: 1536, elements: !3320)
!13904 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !13818, line: 95, baseType: !13905)
!13905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !13818, line: 92, size: 192, elements: !13906)
!13906 = !{!13907, !13908}
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !13905, file: !13818, line: 93, baseType: !176, size: 128)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13905, file: !13818, line: 94, baseType: !2874, size: 64, offset: 128)
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !13819, file: !13818, line: 145, baseType: !29, size: 32, offset: 8768)
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !13819, file: !13818, line: 145, baseType: !29, size: 32, offset: 8800)
!13911 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !13819, file: !13818, line: 145, baseType: !29, size: 32, offset: 8832)
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !13819, file: !13818, line: 145, baseType: !29, size: 32, offset: 8864)
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !13819, file: !13818, line: 148, baseType: !2427, size: 96, offset: 8896)
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !13819, file: !13818, line: 148, baseType: !2427, size: 96, offset: 8992)
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !13819, file: !13818, line: 149, baseType: !2427, size: 96, offset: 9088)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !13819, file: !13818, line: 149, baseType: !2427, size: 96, offset: 9184)
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !13819, file: !13818, line: 149, baseType: !2427, size: 96, offset: 9280)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !13819, file: !13818, line: 149, baseType: !2427, size: 96, offset: 9376)
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !13819, file: !13818, line: 150, baseType: !2427, size: 96, offset: 9472)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !13819, file: !13818, line: 150, baseType: !2427, size: 96, offset: 9568)
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !13819, file: !13818, line: 150, baseType: !2427, size: 96, offset: 9664)
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !13819, file: !13818, line: 150, baseType: !2427, size: 96, offset: 9760)
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !13819, file: !13818, line: 151, baseType: !2427, size: 96, offset: 9856)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !13819, file: !13818, line: 151, baseType: !2427, size: 96, offset: 9952)
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !13819, file: !13818, line: 151, baseType: !21, size: 32, offset: 10048)
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !13819, file: !13818, line: 151, baseType: !21, size: 32, offset: 10080)
!13927 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !13819, file: !13818, line: 152, baseType: !2427, size: 96, offset: 10112)
!13928 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !13819, file: !13818, line: 152, baseType: !2427, size: 96, offset: 10208)
!13929 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !13819, file: !13818, line: 153, baseType: !2427, size: 96, offset: 10304)
!13930 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !13819, file: !13818, line: 153, baseType: !2427, size: 96, offset: 10400)
!13931 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !13819, file: !13818, line: 154, baseType: !2427, size: 96, offset: 10496)
!13932 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !13819, file: !13818, line: 154, baseType: !2427, size: 96, offset: 10592)
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !13819, file: !13818, line: 155, baseType: !21, size: 32, offset: 10688)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !13819, file: !13818, line: 155, baseType: !21, size: 32, offset: 10720)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !13819, file: !13818, line: 158, baseType: !2427, size: 96, offset: 10752)
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !13819, file: !13818, line: 158, baseType: !2427, size: 96, offset: 10848)
!13937 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !13819, file: !13818, line: 158, baseType: !2427, size: 96, offset: 10944)
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !13819, file: !13818, line: 160, baseType: !29, size: 32, offset: 11040)
!13939 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !13819, file: !13818, line: 160, baseType: !29, size: 32, offset: 11072)
!13940 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13819, file: !13818, line: 161, baseType: !29, size: 32, offset: 11104)
!13941 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !13819, file: !13818, line: 162, baseType: !2427, size: 96, offset: 11136)
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !13819, file: !13818, line: 164, baseType: !29, size: 32, offset: 11232)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !13819, file: !13818, line: 165, baseType: !29, size: 32, offset: 11264)
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !13819, file: !13818, line: 166, baseType: !29, size: 32, offset: 11296)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !13819, file: !13818, line: 169, baseType: !2427, size: 96, offset: 11328)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !13819, file: !13818, line: 169, baseType: !21, size: 32, offset: 11424)
!13947 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !13819, file: !13818, line: 172, baseType: !2476, size: 8, offset: 11456)
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !13819, file: !13818, line: 173, baseType: !2476, size: 8, offset: 11464)
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !13819, file: !13818, line: 174, baseType: !12, size: 16, offset: 11472)
!13950 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !13819, file: !13818, line: 174, baseType: !12, size: 16, offset: 11488)
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !13819, file: !13818, line: 175, baseType: !12, size: 16, offset: 11504)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !13819, file: !13818, line: 177, baseType: !36, size: 32, offset: 11520)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !13819, file: !13818, line: 178, baseType: !29, size: 32, offset: 11552)
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !13819, file: !13818, line: 178, baseType: !29, size: 32, offset: 11584)
!13955 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !13819, file: !13818, line: 178, baseType: !29, size: 32, offset: 11616)
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !13819, file: !13818, line: 179, baseType: !2965, size: 64, offset: 11648)
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !13819, file: !13818, line: 180, baseType: !2523, size: 64, offset: 11712)
!13958 = !DIDerivedType(tag: DW_TAG_member, name: "shr", scope: !13810, file: !13809, line: 53, baseType: !13959, size: 27136, offset: 189504)
!13959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13960, size: 27136, elements: !4238)
!13960 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeResult", file: !13818, line: 65, baseType: !13961)
!13961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeResult", file: !13818, line: 48, size: 1696, elements: !13962)
!13962 = !{!13963, !13964, !13965, !13966, !13967, !13968, !13969, !13970, !13971, !13972, !13973, !13974, !13975, !13976, !13977, !13978, !13979, !13980}
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !13961, file: !13818, line: 49, baseType: !176, size: 128)
!13964 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !13961, file: !13818, line: 50, baseType: !176, size: 128, offset: 128)
!13965 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !13961, file: !13818, line: 51, baseType: !21, size: 32, offset: 256)
!13966 = !DIDerivedType(tag: DW_TAG_member, name: "mist", scope: !13961, file: !13818, line: 51, baseType: !21, size: 32, offset: 288)
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !13961, file: !13818, line: 51, baseType: !21, size: 32, offset: 320)
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !13961, file: !13818, line: 52, baseType: !2427, size: 96, offset: 352)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !13961, file: !13818, line: 53, baseType: !2427, size: 96, offset: 448)
!13970 = !DIDerivedType(tag: DW_TAG_member, name: "diffshad", scope: !13961, file: !13818, line: 54, baseType: !2427, size: 96, offset: 544)
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !13961, file: !13818, line: 55, baseType: !2427, size: 96, offset: 640)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "shad", scope: !13961, file: !13818, line: 56, baseType: !176, size: 128, offset: 736)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !13961, file: !13818, line: 57, baseType: !2427, size: 96, offset: 864)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !13961, file: !13818, line: 58, baseType: !2427, size: 96, offset: 960)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !13961, file: !13818, line: 59, baseType: !2427, size: 96, offset: 1056)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !13961, file: !13818, line: 60, baseType: !2427, size: 96, offset: 1152)
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "refr", scope: !13961, file: !13818, line: 61, baseType: !2427, size: 96, offset: 1248)
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !13961, file: !13818, line: 62, baseType: !2427, size: 96, offset: 1344)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !13961, file: !13818, line: 63, baseType: !176, size: 128, offset: 1440)
!13980 = !DIDerivedType(tag: DW_TAG_member, name: "rayhits", scope: !13961, file: !13818, line: 64, baseType: !176, size: 128, offset: 1568)
!13981 = !DILocation(line: 3989, column: 14, scope: !13791)
!13982 = !DILocalVariable(name: "APixbuf", scope: !13791, file: !3, line: 3990, type: !148)
!13983 = !DILocation(line: 3990, column: 11, scope: !13791)
!13984 = !DILocalVariable(name: "APixbufstrand", scope: !13791, file: !3, line: 3991, type: !166)
!13985 = !DILocation(line: 3991, column: 14, scope: !13791)
!13986 = !DILocalVariable(name: "ap", scope: !13791, file: !3, line: 3992, type: !148)
!13987 = !DILocation(line: 3992, column: 11, scope: !13791)
!13988 = !DILocalVariable(name: "aprect", scope: !13791, file: !3, line: 3992, type: !148)
!13989 = !DILocation(line: 3992, column: 16, scope: !13791)
!13990 = !DILocalVariable(name: "apn", scope: !13791, file: !3, line: 3992, type: !148)
!13991 = !DILocation(line: 3992, column: 25, scope: !13791)
!13992 = !DILocalVariable(name: "apstrand", scope: !13791, file: !3, line: 3993, type: !166)
!13993 = !DILocation(line: 3993, column: 14, scope: !13791)
!13994 = !DILocalVariable(name: "aprectstrand", scope: !13791, file: !3, line: 3993, type: !166)
!13995 = !DILocation(line: 3993, column: 25, scope: !13791)
!13996 = !DILocalVariable(name: "apnstrand", scope: !13791, file: !3, line: 3993, type: !166)
!13997 = !DILocation(line: 3993, column: 40, scope: !13791)
!13998 = !DILocalVariable(name: "apsmbase", scope: !13791, file: !3, line: 3994, type: !370)
!13999 = !DILocation(line: 3994, column: 11, scope: !13791)
!14000 = !DILocalVariable(name: "samp_shr", scope: !13791, file: !3, line: 3995, type: !13959)
!14001 = !DILocation(line: 3995, column: 14, scope: !13791)
!14002 = !DILocalVariable(name: "zrow", scope: !13791, file: !3, line: 3996, type: !14003)
!14003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14004, size: 448000, elements: !14014)
!14004 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZTranspRow", file: !3, line: 3729, baseType: !14005)
!14005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZTranspRow", file: !3, line: 3722, size: 224, elements: !14006)
!14006 = !{!14007, !14008, !14009, !14010, !14011, !14012, !14013}
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !14005, file: !3, line: 3723, baseType: !29, size: 32)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !14005, file: !3, line: 3724, baseType: !29, size: 32, offset: 32)
!14009 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !14005, file: !3, line: 3725, baseType: !29, size: 32, offset: 64)
!14010 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !14005, file: !3, line: 3726, baseType: !29, size: 32, offset: 96)
!14011 = !DIDerivedType(tag: DW_TAG_member, name: "segment", scope: !14005, file: !3, line: 3727, baseType: !29, size: 32, offset: 128)
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !14005, file: !3, line: 3728, baseType: !21, size: 32, offset: 160)
!14013 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !14005, file: !3, line: 3728, baseType: !21, size: 32, offset: 192)
!14014 = !{!14015}
!14015 = !DISubrange(count: 2000)
!14016 = !DILocation(line: 3996, column: 13, scope: !13791)
!14017 = !DILocalVariable(name: "sscache", scope: !13791, file: !3, line: 3997, type: !14018)
!14018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14019, size: 64)
!14019 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandShadeCache", file: !8553, line: 87, baseType: !14020)
!14020 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrandShadeCache", file: !8553, line: 86, flags: DIFlagFwdDecl)
!14021 = !DILocation(line: 3997, column: 20, scope: !13791)
!14022 = !DILocalVariable(name: "rlpp", scope: !13791, file: !3, line: 3998, type: !13814)
!14023 = !DILocation(line: 3998, column: 15, scope: !13791)
!14024 = !DILocalVariable(name: "sampalpha", scope: !13791, file: !3, line: 3999, type: !21)
!14025 = !DILocation(line: 3999, column: 8, scope: !13791)
!14026 = !DILocalVariable(name: "alpha", scope: !13791, file: !3, line: 3999, type: !21)
!14027 = !DILocation(line: 3999, column: 19, scope: !13791)
!14028 = !DILocalVariable(name: "passrect", scope: !13791, file: !3, line: 3999, type: !31)
!14029 = !DILocation(line: 3999, column: 27, scope: !13791)
!14030 = !DILocation(line: 3999, column: 37, scope: !13791)
!14031 = !DILocalVariable(name: "rdrect", scope: !13791, file: !3, line: 4000, type: !5601)
!14032 = !DILocation(line: 4000, column: 12, scope: !13791)
!14033 = !DILocalVariable(name: "x", scope: !13791, file: !3, line: 4001, type: !29)
!14034 = !DILocation(line: 4001, column: 6, scope: !13791)
!14035 = !DILocalVariable(name: "y", scope: !13791, file: !3, line: 4001, type: !29)
!14036 = !DILocation(line: 4001, column: 9, scope: !13791)
!14037 = !DILocalVariable(name: "crop", scope: !13791, file: !3, line: 4001, type: !29)
!14038 = !DILocation(line: 4001, column: 12, scope: !13791)
!14039 = !DILocalVariable(name: "a", scope: !13791, file: !3, line: 4001, type: !29)
!14040 = !DILocation(line: 4001, column: 20, scope: !13791)
!14041 = !DILocalVariable(name: "b", scope: !13791, file: !3, line: 4001, type: !29)
!14042 = !DILocation(line: 4001, column: 23, scope: !13791)
!14043 = !DILocalVariable(name: "totface", scope: !13791, file: !3, line: 4001, type: !29)
!14044 = !DILocation(line: 4001, column: 26, scope: !13791)
!14045 = !DILocalVariable(name: "totfullsample", scope: !13791, file: !3, line: 4001, type: !29)
!14046 = !DILocation(line: 4001, column: 35, scope: !13791)
!14047 = !DILocalVariable(name: "totsample", scope: !13791, file: !3, line: 4001, type: !29)
!14048 = !DILocation(line: 4001, column: 50, scope: !13791)
!14049 = !DILocalVariable(name: "doztra", scope: !13791, file: !3, line: 4001, type: !29)
!14050 = !DILocation(line: 4001, column: 61, scope: !13791)
!14051 = !DILocalVariable(name: "addpassflag", scope: !13791, file: !3, line: 4002, type: !29)
!14052 = !DILocation(line: 4002, column: 6, scope: !13791)
!14053 = !DILocalVariable(name: "offs", scope: !13791, file: !3, line: 4002, type: !29)
!14054 = !DILocation(line: 4002, column: 19, scope: !13791)
!14055 = !DILocalVariable(name: "od", scope: !13791, file: !3, line: 4002, type: !29)
!14056 = !DILocation(line: 4002, column: 28, scope: !13791)
!14057 = !DILocalVariable(name: "osa", scope: !13791, file: !3, line: 4002, type: !29)
!14058 = !DILocation(line: 4002, column: 32, scope: !13791)
!14059 = !DILocation(line: 4002, column: 41, scope: !13791)
!14060 = !DILocation(line: 4002, column: 39, scope: !13791)
!14061 = !DILocation(line: 4002, column: 48, scope: !13791)
!14062 = !DILocation(line: 4002, column: 46, scope: !13791)
!14063 = !DILocalVariable(name: "ztramask", scope: !13791, file: !3, line: 4003, type: !13794)
!14064 = !DILocation(line: 4003, column: 18, scope: !13791)
!14065 = !DILocalVariable(name: "filled", scope: !13791, file: !3, line: 4003, type: !103)
!14066 = !DILocation(line: 4003, column: 34, scope: !13791)
!14067 = !DILocation(line: 4006, column: 8, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4006, column: 6)
!14069 = !DILocation(line: 4006, column: 21, scope: !14068)
!14070 = !DILocation(line: 4006, column: 6, scope: !14068)
!14071 = !DILocation(line: 4006, column: 6, scope: !13791)
!14072 = !DILocation(line: 4007, column: 3, scope: !14068)
!14073 = !DILocation(line: 4009, column: 8, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4009, column: 6)
!14075 = !DILocation(line: 4009, column: 6, scope: !14074)
!14076 = !DILocation(line: 4009, column: 12, scope: !14074)
!14077 = !DILocation(line: 4009, column: 6, scope: !13791)
!14078 = !DILocation(line: 4010, column: 3, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14074, file: !3, line: 4009, column: 18)
!14080 = !DILocation(line: 4011, column: 14, scope: !14079)
!14081 = !DILocation(line: 4012, column: 3, scope: !14079)
!14082 = !DILocation(line: 4015, column: 11, scope: !13791)
!14083 = !DILocation(line: 4015, column: 23, scope: !13791)
!14084 = !DILocation(line: 4015, column: 27, scope: !13791)
!14085 = !DILocation(line: 4015, column: 33, scope: !13791)
!14086 = !DILocation(line: 4015, column: 37, scope: !13791)
!14087 = !DILocation(line: 4015, column: 32, scope: !13791)
!14088 = !DILocation(line: 4015, column: 42, scope: !13791)
!14089 = !DILocation(line: 4015, column: 9, scope: !13791)
!14090 = !DILocation(line: 4016, column: 8, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4016, column: 6)
!14092 = !DILocation(line: 4016, column: 6, scope: !14091)
!14093 = !DILocation(line: 4016, column: 18, scope: !14091)
!14094 = !DILocation(line: 4016, column: 22, scope: !14091)
!14095 = !DILocation(line: 4016, column: 26, scope: !14091)
!14096 = !DILocation(line: 4016, column: 34, scope: !14091)
!14097 = !DILocation(line: 4016, column: 6, scope: !13791)
!14098 = !DILocation(line: 4017, column: 18, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14091, file: !3, line: 4016, column: 53)
!14100 = !DILocation(line: 4017, column: 30, scope: !14099)
!14101 = !DILocation(line: 4017, column: 34, scope: !14099)
!14102 = !DILocation(line: 4017, column: 40, scope: !14099)
!14103 = !DILocation(line: 4017, column: 44, scope: !14099)
!14104 = !DILocation(line: 4017, column: 39, scope: !14099)
!14105 = !DILocation(line: 4017, column: 49, scope: !14099)
!14106 = !DILocation(line: 4017, column: 16, scope: !14099)
!14107 = !DILocation(line: 4018, column: 12, scope: !14099)
!14108 = !DILocation(line: 4018, column: 10, scope: !14099)
!14109 = !DILocation(line: 4019, column: 2, scope: !14099)
!14110 = !DILocation(line: 4022, column: 34, scope: !13791)
!14111 = !DILocation(line: 4022, column: 38, scope: !13791)
!14112 = !DILocation(line: 4022, column: 2, scope: !13791)
!14113 = !DILocation(line: 4023, column: 15, scope: !13791)
!14114 = !DILocation(line: 4023, column: 19, scope: !13791)
!14115 = !DILocation(line: 4023, column: 28, scope: !13791)
!14116 = !DILocation(line: 4023, column: 13, scope: !13791)
!14117 = !DILocation(line: 4025, column: 8, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4025, column: 6)
!14119 = !DILocation(line: 4025, column: 6, scope: !14118)
!14120 = !DILocation(line: 4025, column: 6, scope: !13791)
!14121 = !DILocation(line: 4026, column: 28, scope: !14118)
!14122 = !DILocation(line: 4026, column: 19, scope: !14118)
!14123 = !DILocation(line: 4026, column: 18, scope: !14118)
!14124 = !DILocation(line: 4026, column: 12, scope: !14118)
!14125 = !DILocation(line: 4026, column: 3, scope: !14118)
!14126 = !DILocation(line: 4028, column: 12, scope: !14118)
!14127 = !DILocation(line: 4031, column: 30, scope: !13791)
!14128 = !DILocation(line: 4031, column: 34, scope: !13791)
!14129 = !DILocation(line: 4031, column: 43, scope: !13791)
!14130 = !DILocation(line: 4031, column: 69, scope: !13791)
!14131 = !DILocation(line: 4031, column: 73, scope: !13791)
!14132 = !DILocation(line: 4031, column: 10, scope: !13791)
!14133 = !DILocation(line: 4031, column: 8, scope: !13791)
!14134 = !DILocation(line: 4033, column: 6, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4033, column: 6)
!14136 = !DILocation(line: 4033, column: 13, scope: !14135)
!14137 = !DILocation(line: 4033, column: 6, scope: !13791)
!14138 = !DILocation(line: 4035, column: 3, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 4033, column: 19)
!14140 = !DILocation(line: 4035, column: 13, scope: !14139)
!14141 = !DILocation(line: 4036, column: 7, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 4036, column: 7)
!14143 = !DILocation(line: 4036, column: 7, scope: !14139)
!14144 = !DILocation(line: 4037, column: 4, scope: !14142)
!14145 = !DILocation(line: 4037, column: 14, scope: !14142)
!14146 = !DILocation(line: 4038, column: 7, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 4038, column: 7)
!14148 = !DILocation(line: 4038, column: 7, scope: !14139)
!14149 = !DILocation(line: 4039, column: 28, scope: !14147)
!14150 = !DILocation(line: 4039, column: 4, scope: !14147)
!14151 = !DILocation(line: 4040, column: 3, scope: !14139)
!14152 = !DILocation(line: 4041, column: 3, scope: !14139)
!14153 = !DILocation(line: 4044, column: 10, scope: !13791)
!14154 = !DILocation(line: 4044, column: 8, scope: !13791)
!14155 = !DILocation(line: 4045, column: 16, scope: !13791)
!14156 = !DILocation(line: 4045, column: 14, scope: !13791)
!14157 = !DILocation(line: 4046, column: 10, scope: !13791)
!14158 = !DILocation(line: 4046, column: 14, scope: !13791)
!14159 = !DILocation(line: 4046, column: 8, scope: !13791)
!14160 = !DILocation(line: 4049, column: 35, scope: !13791)
!14161 = !DILocation(line: 4049, column: 39, scope: !13791)
!14162 = !DILocation(line: 4049, column: 43, scope: !13791)
!14163 = !DILocation(line: 4049, column: 17, scope: !13791)
!14164 = !DILocation(line: 4049, column: 15, scope: !13791)
!14165 = !DILocation(line: 4052, column: 10, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4052, column: 6)
!14167 = !DILocation(line: 4052, column: 15, scope: !14166)
!14168 = !DILocation(line: 4052, column: 6, scope: !13791)
!14169 = !DILocation(line: 4053, column: 14, scope: !14166)
!14170 = !DILocation(line: 4053, column: 18, scope: !14166)
!14171 = !DILocation(line: 4053, column: 3, scope: !14166)
!14172 = !DILocation(line: 4056, column: 8, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4056, column: 6)
!14174 = !DILocation(line: 4056, column: 6, scope: !14173)
!14175 = !DILocation(line: 4056, column: 12, scope: !14173)
!14176 = !DILocation(line: 4056, column: 16, scope: !14173)
!14177 = !DILocation(line: 4056, column: 20, scope: !14173)
!14178 = !DILocation(line: 4056, column: 28, scope: !14173)
!14179 = !DILocation(line: 4056, column: 45, scope: !14173)
!14180 = !DILocation(line: 4056, column: 48, scope: !14173)
!14181 = !DILocation(line: 4056, column: 52, scope: !14173)
!14182 = !DILocation(line: 4056, column: 63, scope: !14173)
!14183 = !DILocation(line: 4056, column: 68, scope: !14173)
!14184 = !DILocation(line: 4056, column: 6, scope: !13791)
!14185 = !DILocation(line: 4057, column: 13, scope: !14173)
!14186 = !DILocation(line: 4057, column: 25, scope: !14173)
!14187 = !DILocation(line: 4057, column: 29, scope: !14173)
!14188 = !DILocation(line: 4057, column: 35, scope: !14173)
!14189 = !DILocation(line: 4057, column: 39, scope: !14173)
!14190 = !DILocation(line: 4057, column: 34, scope: !14173)
!14191 = !DILocation(line: 4057, column: 44, scope: !14173)
!14192 = !DILocation(line: 4057, column: 11, scope: !14173)
!14193 = !DILocation(line: 4057, column: 3, scope: !14173)
!14194 = !DILocation(line: 4060, column: 6, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4060, column: 6)
!14196 = !DILocation(line: 4060, column: 18, scope: !14195)
!14197 = !DILocation(line: 4060, column: 6, scope: !13791)
!14198 = !DILocation(line: 4061, column: 7, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 4061, column: 7)
!14200 = !DILocation(line: 4061, column: 11, scope: !14199)
!14201 = !DILocation(line: 4061, column: 19, scope: !14199)
!14202 = !DILocation(line: 4061, column: 7, scope: !14195)
!14203 = !DILocation(line: 4062, column: 27, scope: !14199)
!14204 = !DILocation(line: 4062, column: 31, scope: !14199)
!14205 = !DILocation(line: 4062, column: 35, scope: !14199)
!14206 = !DILocation(line: 4062, column: 39, scope: !14199)
!14207 = !DILocation(line: 4062, column: 48, scope: !14199)
!14208 = !DILocation(line: 4062, column: 52, scope: !14199)
!14209 = !DILocation(line: 4062, column: 61, scope: !14199)
!14210 = !DILocation(line: 4062, column: 65, scope: !14199)
!14211 = !DILocation(line: 4062, column: 4, scope: !14199)
!14212 = !DILocation(line: 4061, column: 21, scope: !14199)
!14213 = !DILocation(line: 4065, column: 6, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4065, column: 6)
!14215 = !DILocation(line: 4065, column: 10, scope: !14214)
!14216 = !DILocation(line: 4065, column: 6, scope: !13791)
!14217 = !DILocation(line: 4066, column: 7, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14214, file: !3, line: 4065, column: 16)
!14219 = !DILocation(line: 4067, column: 9, scope: !14218)
!14220 = !DILocation(line: 4067, column: 13, scope: !14218)
!14221 = !DILocation(line: 4067, column: 19, scope: !14218)
!14222 = !DILocation(line: 4067, column: 7, scope: !14218)
!14223 = !DILocation(line: 4068, column: 16, scope: !14218)
!14224 = !DILocation(line: 4068, column: 15, scope: !14218)
!14225 = !DILocation(line: 4068, column: 11, scope: !14218)
!14226 = !DILocation(line: 4069, column: 12, scope: !14218)
!14227 = !DILocation(line: 4069, column: 9, scope: !14218)
!14228 = !DILocation(line: 4070, column: 18, scope: !14218)
!14229 = !DILocation(line: 4070, column: 15, scope: !14218)
!14230 = !DILocation(line: 4071, column: 2, scope: !14218)
!14231 = !DILocation(line: 4074, column: 2, scope: !13791)
!14232 = !DILocation(line: 4074, column: 6, scope: !13791)
!14233 = !DILocation(line: 4074, column: 14, scope: !13791)
!14234 = !DILocation(line: 4074, column: 19, scope: !13791)
!14235 = !DILocation(line: 4075, column: 22, scope: !13791)
!14236 = !DILocation(line: 4075, column: 26, scope: !13791)
!14237 = !DILocation(line: 4075, column: 21, scope: !13791)
!14238 = !DILocation(line: 4075, column: 2, scope: !13791)
!14239 = !DILocation(line: 4075, column: 6, scope: !13791)
!14240 = !DILocation(line: 4075, column: 14, scope: !13791)
!14241 = !DILocation(line: 4075, column: 19, scope: !13791)
!14242 = !DILocation(line: 4076, column: 14, scope: !13791)
!14243 = !DILocation(line: 4076, column: 2, scope: !13791)
!14244 = !DILocation(line: 4076, column: 6, scope: !13791)
!14245 = !DILocation(line: 4076, column: 12, scope: !13791)
!14246 = !DILocation(line: 4079, column: 9, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4079, column: 2)
!14248 = !DILocation(line: 4079, column: 13, scope: !14247)
!14249 = !DILocation(line: 4079, column: 22, scope: !14247)
!14250 = !DILocation(line: 4079, column: 27, scope: !14247)
!14251 = !DILocation(line: 4079, column: 26, scope: !14247)
!14252 = !DILocation(line: 4079, column: 8, scope: !14247)
!14253 = !DILocation(line: 4079, column: 7, scope: !14247)
!14254 = !DILocation(line: 4079, column: 33, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 4079, column: 2)
!14256 = !DILocation(line: 4079, column: 35, scope: !14255)
!14257 = !DILocation(line: 4079, column: 39, scope: !14255)
!14258 = !DILocation(line: 4079, column: 48, scope: !14255)
!14259 = !DILocation(line: 4079, column: 53, scope: !14255)
!14260 = !DILocation(line: 4079, column: 52, scope: !14255)
!14261 = !DILocation(line: 4079, column: 34, scope: !14255)
!14262 = !DILocation(line: 4079, column: 2, scope: !14247)
!14263 = !DILocation(line: 4080, column: 9, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 4079, column: 84)
!14265 = !DILocation(line: 4080, column: 7, scope: !14264)
!14266 = !DILocation(line: 4081, column: 7, scope: !14264)
!14267 = !DILocation(line: 4081, column: 5, scope: !14264)
!14268 = !DILocation(line: 4082, column: 13, scope: !14264)
!14269 = !DILocation(line: 4082, column: 11, scope: !14264)
!14270 = !DILocation(line: 4083, column: 7, scope: !14264)
!14271 = !DILocation(line: 4083, column: 5, scope: !14264)
!14272 = !DILocation(line: 4085, column: 9, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14264, file: !3, line: 4085, column: 7)
!14274 = !DILocation(line: 4085, column: 22, scope: !14273)
!14275 = !DILocation(line: 4085, column: 7, scope: !14273)
!14276 = !DILocation(line: 4085, column: 7, scope: !14264)
!14277 = !DILocation(line: 4086, column: 4, scope: !14273)
!14278 = !DILocation(line: 4088, column: 10, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14264, file: !3, line: 4088, column: 3)
!14280 = !DILocation(line: 4088, column: 14, scope: !14279)
!14281 = !DILocation(line: 4088, column: 23, scope: !14279)
!14282 = !DILocation(line: 4088, column: 28, scope: !14279)
!14283 = !DILocation(line: 4088, column: 27, scope: !14279)
!14284 = !DILocation(line: 4088, column: 9, scope: !14279)
!14285 = !DILocation(line: 4088, column: 8, scope: !14279)
!14286 = !DILocation(line: 4088, column: 34, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 4088, column: 3)
!14288 = !DILocation(line: 4088, column: 36, scope: !14287)
!14289 = !DILocation(line: 4088, column: 40, scope: !14287)
!14290 = !DILocation(line: 4088, column: 49, scope: !14287)
!14291 = !DILocation(line: 4088, column: 54, scope: !14287)
!14292 = !DILocation(line: 4088, column: 53, scope: !14287)
!14293 = !DILocation(line: 4088, column: 35, scope: !14287)
!14294 = !DILocation(line: 4088, column: 3, scope: !14279)
!14295 = !DILocation(line: 4090, column: 8, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !3, line: 4090, column: 8)
!14297 = distinct !DILexicalBlock(scope: !14287, file: !3, line: 4088, column: 98)
!14298 = !DILocation(line: 4090, column: 12, scope: !14296)
!14299 = !DILocation(line: 4090, column: 16, scope: !14296)
!14300 = !DILocation(line: 4090, column: 20, scope: !14296)
!14301 = !DILocation(line: 4090, column: 25, scope: !14296)
!14302 = !DILocation(line: 4090, column: 39, scope: !14296)
!14303 = !DILocation(line: 4090, column: 42, scope: !14296)
!14304 = !DILocation(line: 4090, column: 52, scope: !14296)
!14305 = !DILocation(line: 4090, column: 56, scope: !14296)
!14306 = !DILocation(line: 4090, column: 8, scope: !14297)
!14307 = !DILocation(line: 4091, column: 9, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !3, line: 4091, column: 9)
!14309 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 4090, column: 62)
!14310 = !DILocation(line: 4091, column: 21, scope: !14308)
!14311 = !DILocation(line: 4091, column: 9, scope: !14309)
!14312 = !DILocation(line: 4092, column: 23, scope: !14308)
!14313 = !DILocation(line: 4092, column: 27, scope: !14308)
!14314 = !DILocation(line: 4092, column: 43, scope: !14308)
!14315 = !DILocation(line: 4092, column: 6, scope: !14308)
!14316 = !DILocation(line: 4093, column: 4, scope: !14309)
!14317 = !DILocation(line: 4096, column: 12, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 4094, column: 9)
!14319 = !DILocation(line: 4097, column: 10, scope: !14318)
!14320 = !DILocation(line: 4097, column: 8, scope: !14318)
!14321 = !DILocation(line: 4098, column: 5, scope: !14318)
!14322 = !DILocation(line: 4098, column: 12, scope: !14318)
!14323 = !DILocation(line: 4099, column: 12, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14325, file: !3, line: 4099, column: 6)
!14325 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4098, column: 17)
!14326 = !DILocation(line: 4099, column: 11, scope: !14324)
!14327 = !DILocation(line: 4099, column: 16, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14324, file: !3, line: 4099, column: 6)
!14329 = !DILocation(line: 4099, column: 17, scope: !14328)
!14330 = !DILocation(line: 4099, column: 6, scope: !14324)
!14331 = !DILocation(line: 4100, column: 11, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !3, line: 4100, column: 11)
!14333 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 4099, column: 26)
!14334 = !DILocation(line: 4100, column: 16, scope: !14332)
!14335 = !DILocation(line: 4100, column: 18, scope: !14332)
!14336 = !DILocation(line: 4100, column: 11, scope: !14333)
!14337 = !DILocation(line: 4101, column: 27, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14332, file: !3, line: 4100, column: 22)
!14339 = !DILocation(line: 4101, column: 32, scope: !14338)
!14340 = !DILocation(line: 4101, column: 36, scope: !14338)
!14341 = !DILocation(line: 4101, column: 13, scope: !14338)
!14342 = !DILocation(line: 4101, column: 8, scope: !14338)
!14343 = !DILocation(line: 4101, column: 22, scope: !14338)
!14344 = !DILocation(line: 4101, column: 25, scope: !14338)
!14345 = !DILocation(line: 4102, column: 25, scope: !14338)
!14346 = !DILocation(line: 4102, column: 30, scope: !14338)
!14347 = !DILocation(line: 4102, column: 32, scope: !14338)
!14348 = !DILocation(line: 4102, column: 13, scope: !14338)
!14349 = !DILocation(line: 4102, column: 8, scope: !14338)
!14350 = !DILocation(line: 4102, column: 22, scope: !14338)
!14351 = !DILocation(line: 4102, column: 23, scope: !14338)
!14352 = !DILocation(line: 4103, column: 25, scope: !14338)
!14353 = !DILocation(line: 4103, column: 30, scope: !14338)
!14354 = !DILocation(line: 4103, column: 32, scope: !14338)
!14355 = !DILocation(line: 4103, column: 13, scope: !14338)
!14356 = !DILocation(line: 4103, column: 8, scope: !14338)
!14357 = !DILocation(line: 4103, column: 22, scope: !14338)
!14358 = !DILocation(line: 4103, column: 23, scope: !14338)
!14359 = !DILocation(line: 4104, column: 28, scope: !14338)
!14360 = !DILocation(line: 4104, column: 33, scope: !14338)
!14361 = !DILocation(line: 4104, column: 38, scope: !14338)
!14362 = !DILocation(line: 4104, column: 13, scope: !14338)
!14363 = !DILocation(line: 4104, column: 8, scope: !14338)
!14364 = !DILocation(line: 4104, column: 22, scope: !14338)
!14365 = !DILocation(line: 4104, column: 26, scope: !14338)
!14366 = !DILocation(line: 4105, column: 13, scope: !14338)
!14367 = !DILocation(line: 4105, column: 8, scope: !14338)
!14368 = !DILocation(line: 4105, column: 22, scope: !14338)
!14369 = !DILocation(line: 4105, column: 29, scope: !14338)
!14370 = !DILocation(line: 4106, column: 15, scope: !14338)
!14371 = !DILocation(line: 4107, column: 12, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14338, file: !3, line: 4107, column: 12)
!14373 = !DILocation(line: 4107, column: 19, scope: !14372)
!14374 = !DILocation(line: 4107, column: 12, scope: !14338)
!14375 = !DILocation(line: 4107, column: 38, scope: !14372)
!14376 = !DILocation(line: 4107, column: 31, scope: !14372)
!14377 = !DILocation(line: 4108, column: 7, scope: !14338)
!14378 = !DILocation(line: 4109, column: 12, scope: !14332)
!14379 = !DILocation(line: 4110, column: 6, scope: !14333)
!14380 = !DILocation(line: 4099, column: 22, scope: !14328)
!14381 = !DILocation(line: 4099, column: 6, scope: !14328)
!14382 = distinct !{!14382, !14330, !14383}
!14383 = !DILocation(line: 4110, column: 6, scope: !14324)
!14384 = !DILocation(line: 4111, column: 11, scope: !14325)
!14385 = !DILocation(line: 4111, column: 16, scope: !14325)
!14386 = !DILocation(line: 4111, column: 9, scope: !14325)
!14387 = distinct !{!14387, !14321, !14388}
!14388 = !DILocation(line: 4112, column: 5, scope: !14318)
!14389 = !DILocation(line: 4114, column: 17, scope: !14318)
!14390 = !DILocation(line: 4114, column: 16, scope: !14318)
!14391 = !DILocation(line: 4114, column: 33, scope: !14318)
!14392 = !DILocation(line: 4114, column: 14, scope: !14318)
!14393 = !DILocation(line: 4115, column: 5, scope: !14318)
!14394 = !DILocation(line: 4115, column: 12, scope: !14318)
!14395 = !DILocation(line: 4116, column: 12, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !3, line: 4116, column: 6)
!14397 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4115, column: 23)
!14398 = !DILocation(line: 4116, column: 11, scope: !14396)
!14399 = !DILocation(line: 4116, column: 16, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 4116, column: 6)
!14401 = !DILocation(line: 4116, column: 17, scope: !14400)
!14402 = !DILocation(line: 4116, column: 6, scope: !14396)
!14403 = !DILocation(line: 4117, column: 11, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14405, file: !3, line: 4117, column: 11)
!14405 = distinct !DILexicalBlock(scope: !14400, file: !3, line: 4116, column: 26)
!14406 = !DILocation(line: 4117, column: 22, scope: !14404)
!14407 = !DILocation(line: 4117, column: 24, scope: !14404)
!14408 = !DILocation(line: 4117, column: 11, scope: !14405)
!14409 = !DILocation(line: 4118, column: 27, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14404, file: !3, line: 4117, column: 28)
!14411 = !DILocation(line: 4118, column: 38, scope: !14410)
!14412 = !DILocation(line: 4118, column: 42, scope: !14410)
!14413 = !DILocation(line: 4118, column: 13, scope: !14410)
!14414 = !DILocation(line: 4118, column: 8, scope: !14410)
!14415 = !DILocation(line: 4118, column: 22, scope: !14410)
!14416 = !DILocation(line: 4118, column: 25, scope: !14410)
!14417 = !DILocation(line: 4119, column: 25, scope: !14410)
!14418 = !DILocation(line: 4119, column: 36, scope: !14410)
!14419 = !DILocation(line: 4119, column: 38, scope: !14410)
!14420 = !DILocation(line: 4119, column: 13, scope: !14410)
!14421 = !DILocation(line: 4119, column: 8, scope: !14410)
!14422 = !DILocation(line: 4119, column: 22, scope: !14410)
!14423 = !DILocation(line: 4119, column: 23, scope: !14410)
!14424 = !DILocation(line: 4120, column: 25, scope: !14410)
!14425 = !DILocation(line: 4120, column: 36, scope: !14410)
!14426 = !DILocation(line: 4120, column: 38, scope: !14410)
!14427 = !DILocation(line: 4120, column: 13, scope: !14410)
!14428 = !DILocation(line: 4120, column: 8, scope: !14410)
!14429 = !DILocation(line: 4120, column: 22, scope: !14410)
!14430 = !DILocation(line: 4120, column: 23, scope: !14410)
!14431 = !DILocation(line: 4121, column: 28, scope: !14410)
!14432 = !DILocation(line: 4121, column: 39, scope: !14410)
!14433 = !DILocation(line: 4121, column: 44, scope: !14410)
!14434 = !DILocation(line: 4121, column: 13, scope: !14410)
!14435 = !DILocation(line: 4121, column: 8, scope: !14410)
!14436 = !DILocation(line: 4121, column: 22, scope: !14410)
!14437 = !DILocation(line: 4121, column: 26, scope: !14410)
!14438 = !DILocation(line: 4122, column: 31, scope: !14410)
!14439 = !DILocation(line: 4122, column: 42, scope: !14410)
!14440 = !DILocation(line: 4122, column: 46, scope: !14410)
!14441 = !DILocation(line: 4122, column: 13, scope: !14410)
!14442 = !DILocation(line: 4122, column: 8, scope: !14410)
!14443 = !DILocation(line: 4122, column: 22, scope: !14410)
!14444 = !DILocation(line: 4122, column: 29, scope: !14410)
!14445 = !DILocation(line: 4124, column: 14, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14410, file: !3, line: 4124, column: 12)
!14447 = !DILocation(line: 4124, column: 12, scope: !14446)
!14448 = !DILocation(line: 4124, column: 12, scope: !14410)
!14449 = !DILocation(line: 4125, column: 18, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 4124, column: 19)
!14451 = !DILocation(line: 4126, column: 15, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 4126, column: 9)
!14453 = !DILocation(line: 4126, column: 14, scope: !14452)
!14454 = !DILocation(line: 4126, column: 19, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14452, file: !3, line: 4126, column: 9)
!14456 = !DILocation(line: 4126, column: 23, scope: !14455)
!14457 = !DILocation(line: 4126, column: 21, scope: !14455)
!14458 = !DILocation(line: 4126, column: 20, scope: !14455)
!14459 = !DILocation(line: 4126, column: 9, scope: !14452)
!14460 = !DILocation(line: 4127, column: 19, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14455, file: !3, line: 4127, column: 14)
!14462 = !DILocation(line: 4127, column: 14, scope: !14461)
!14463 = !DILocation(line: 4127, column: 28, scope: !14461)
!14464 = !DILocation(line: 4127, column: 39, scope: !14461)
!14465 = !DILocation(line: 4127, column: 37, scope: !14461)
!14466 = !DILocation(line: 4127, column: 33, scope: !14461)
!14467 = !DILocation(line: 4127, column: 14, scope: !14455)
!14468 = !DILocation(line: 4128, column: 20, scope: !14461)
!14469 = !DILocation(line: 4128, column: 11, scope: !14461)
!14470 = !DILocation(line: 4127, column: 40, scope: !14461)
!14471 = !DILocation(line: 4126, column: 29, scope: !14455)
!14472 = !DILocation(line: 4126, column: 9, scope: !14455)
!14473 = distinct !{!14473, !14459, !14474}
!14474 = !DILocation(line: 4128, column: 20, scope: !14452)
!14475 = !DILocation(line: 4129, column: 8, scope: !14450)
!14476 = !DILocation(line: 4131, column: 18, scope: !14446)
!14477 = !DILocation(line: 4133, column: 25, scope: !14410)
!14478 = !DILocation(line: 4133, column: 36, scope: !14410)
!14479 = !DILocation(line: 4133, column: 38, scope: !14410)
!14480 = !DILocation(line: 4133, column: 41, scope: !14410)
!14481 = !DILocation(line: 4133, column: 40, scope: !14410)
!14482 = !DILocation(line: 4133, column: 13, scope: !14410)
!14483 = !DILocation(line: 4133, column: 8, scope: !14410)
!14484 = !DILocation(line: 4133, column: 22, scope: !14410)
!14485 = !DILocation(line: 4133, column: 23, scope: !14410)
!14486 = !DILocation(line: 4134, column: 25, scope: !14410)
!14487 = !DILocation(line: 4134, column: 36, scope: !14410)
!14488 = !DILocation(line: 4134, column: 38, scope: !14410)
!14489 = !DILocation(line: 4134, column: 41, scope: !14410)
!14490 = !DILocation(line: 4134, column: 40, scope: !14410)
!14491 = !DILocation(line: 4134, column: 13, scope: !14410)
!14492 = !DILocation(line: 4134, column: 8, scope: !14410)
!14493 = !DILocation(line: 4134, column: 22, scope: !14410)
!14494 = !DILocation(line: 4134, column: 23, scope: !14410)
!14495 = !DILocation(line: 4135, column: 15, scope: !14410)
!14496 = !DILocation(line: 4136, column: 12, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14410, file: !3, line: 4136, column: 12)
!14498 = !DILocation(line: 4136, column: 19, scope: !14497)
!14499 = !DILocation(line: 4136, column: 12, scope: !14410)
!14500 = !DILocation(line: 4136, column: 38, scope: !14497)
!14501 = !DILocation(line: 4136, column: 31, scope: !14497)
!14502 = !DILocation(line: 4137, column: 7, scope: !14410)
!14503 = !DILocation(line: 4138, column: 6, scope: !14405)
!14504 = !DILocation(line: 4116, column: 22, scope: !14400)
!14505 = !DILocation(line: 4116, column: 6, scope: !14400)
!14506 = distinct !{!14506, !14402, !14507}
!14507 = !DILocation(line: 4138, column: 6, scope: !14396)
!14508 = !DILocation(line: 4139, column: 17, scope: !14397)
!14509 = !DILocation(line: 4139, column: 28, scope: !14397)
!14510 = !DILocation(line: 4139, column: 15, scope: !14397)
!14511 = distinct !{!14511, !14393, !14512}
!14512 = !DILocation(line: 4140, column: 5, scope: !14318)
!14513 = !DILocation(line: 4142, column: 9, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4142, column: 9)
!14515 = !DILocation(line: 4142, column: 16, scope: !14514)
!14516 = !DILocation(line: 4142, column: 9, scope: !14318)
!14517 = !DILocation(line: 4143, column: 10, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14519, file: !3, line: 4143, column: 10)
!14519 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 4142, column: 21)
!14520 = !DILocation(line: 4143, column: 18, scope: !14518)
!14521 = !DILocation(line: 4143, column: 22, scope: !14518)
!14522 = !DILocation(line: 4143, column: 30, scope: !14518)
!14523 = !DILocation(line: 4143, column: 20, scope: !14518)
!14524 = !DILocation(line: 4143, column: 10, scope: !14519)
!14525 = !DILocalVariable(name: "sw_ap", scope: !14526, file: !3, line: 4144, type: !14004)
!14526 = distinct !DILexicalBlock(scope: !14527, file: !3, line: 4144, column: 7)
!14527 = distinct !DILexicalBlock(scope: !14518, file: !3, line: 4143, column: 33)
!14528 = !DILocation(line: 4144, column: 7, scope: !14526)
!14529 = !DILocation(line: 4145, column: 6, scope: !14527)
!14530 = !DILocation(line: 4147, column: 5, scope: !14519)
!14531 = !DILocation(line: 4148, column: 14, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 4148, column: 14)
!14533 = !DILocation(line: 4148, column: 21, scope: !14532)
!14534 = !DILocation(line: 4148, column: 14, scope: !14514)
!14535 = !DILocation(line: 4149, column: 12, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14532, file: !3, line: 4148, column: 25)
!14537 = !DILocation(line: 4149, column: 18, scope: !14536)
!14538 = !DILocation(line: 4149, column: 6, scope: !14536)
!14539 = !DILocation(line: 4150, column: 5, scope: !14536)
!14540 = !DILocation(line: 4153, column: 9, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4153, column: 9)
!14542 = !DILocation(line: 4153, column: 21, scope: !14541)
!14543 = !DILocation(line: 4153, column: 9, scope: !14318)
!14544 = !DILocalVariable(name: "obr", scope: !14545, file: !3, line: 4154, type: !4395)
!14545 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 4153, column: 41)
!14546 = !DILocation(line: 4154, column: 17, scope: !14545)
!14547 = !DILocation(line: 4154, column: 24, scope: !14545)
!14548 = !DILocation(line: 4154, column: 44, scope: !14545)
!14549 = !DILocation(line: 4154, column: 51, scope: !14545)
!14550 = !DILocation(line: 4154, column: 39, scope: !14545)
!14551 = !DILocation(line: 4154, column: 55, scope: !14545)
!14552 = !DILocation(line: 4154, column: 22, scope: !14545)
!14553 = !DILocation(line: 4154, column: 60, scope: !14545)
!14554 = !DILocation(line: 4155, column: 10, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14545, file: !3, line: 4155, column: 10)
!14556 = !DILocation(line: 4155, column: 15, scope: !14555)
!14557 = !DILocation(line: 4155, column: 10, scope: !14545)
!14558 = !DILocation(line: 4156, column: 13, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 4156, column: 7)
!14560 = distinct !DILexicalBlock(scope: !14555, file: !3, line: 4155, column: 19)
!14561 = !DILocation(line: 4156, column: 12, scope: !14559)
!14562 = !DILocation(line: 4156, column: 18, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14559, file: !3, line: 4156, column: 7)
!14564 = !DILocation(line: 4156, column: 20, scope: !14563)
!14565 = !DILocation(line: 4156, column: 19, scope: !14563)
!14566 = !DILocation(line: 4156, column: 7, scope: !14559)
!14567 = !DILocation(line: 4157, column: 32, scope: !14563)
!14568 = !DILocation(line: 4157, column: 27, scope: !14563)
!14569 = !DILocation(line: 4157, column: 36, scope: !14563)
!14570 = !DILocation(line: 4157, column: 40, scope: !14563)
!14571 = !DILocation(line: 4157, column: 45, scope: !14563)
!14572 = !DILocation(line: 4157, column: 8, scope: !14563)
!14573 = !DILocation(line: 4156, column: 36, scope: !14563)
!14574 = !DILocation(line: 4156, column: 7, scope: !14563)
!14575 = distinct !{!14575, !14566, !14576}
!14576 = !DILocation(line: 4157, column: 47, scope: !14559)
!14577 = !DILocation(line: 4158, column: 6, scope: !14560)
!14578 = !DILocation(line: 4159, column: 5, scope: !14545)
!14579 = !DILocation(line: 4160, column: 9, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4160, column: 9)
!14581 = !DILocation(line: 4160, column: 21, scope: !14580)
!14582 = !DILocation(line: 4160, column: 9, scope: !14318)
!14583 = !DILocalVariable(name: "obr", scope: !14584, file: !3, line: 4161, type: !4395)
!14584 = distinct !DILexicalBlock(scope: !14580, file: !3, line: 4160, column: 41)
!14585 = !DILocation(line: 4161, column: 17, scope: !14584)
!14586 = !DILocation(line: 4161, column: 25, scope: !14584)
!14587 = !DILocation(line: 4161, column: 45, scope: !14584)
!14588 = !DILocation(line: 4161, column: 52, scope: !14584)
!14589 = !DILocation(line: 4161, column: 40, scope: !14584)
!14590 = !DILocation(line: 4161, column: 56, scope: !14584)
!14591 = !DILocation(line: 4161, column: 23, scope: !14584)
!14592 = !DILocation(line: 4161, column: 61, scope: !14584)
!14593 = !DILocalVariable(name: "p", scope: !14584, file: !3, line: 4162, type: !29)
!14594 = !DILocation(line: 4162, column: 10, scope: !14584)
!14595 = !DILocation(line: 4162, column: 19, scope: !14584)
!14596 = !DILocation(line: 4162, column: 26, scope: !14584)
!14597 = !DILocation(line: 4162, column: 14, scope: !14584)
!14598 = !DILocation(line: 4162, column: 30, scope: !14584)
!14599 = !DILocalVariable(name: "mat", scope: !14584, file: !3, line: 4163, type: !5659)
!14600 = !DILocation(line: 4163, column: 16, scope: !14584)
!14601 = !DILocation(line: 4165, column: 15, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 4165, column: 10)
!14603 = !DILocation(line: 4165, column: 22, scope: !14602)
!14604 = !DILocation(line: 4165, column: 10, scope: !14602)
!14605 = !DILocation(line: 4165, column: 26, scope: !14602)
!14606 = !DILocation(line: 4165, column: 34, scope: !14602)
!14607 = !DILocation(line: 4165, column: 10, scope: !14584)
!14608 = !DILocalVariable(name: "facenr", scope: !14609, file: !3, line: 4166, type: !29)
!14609 = distinct !DILexicalBlock(scope: !14602, file: !3, line: 4165, column: 41)
!14610 = !DILocation(line: 4166, column: 11, scope: !14609)
!14611 = !DILocation(line: 4166, column: 21, scope: !14609)
!14612 = !DILocation(line: 4166, column: 23, scope: !14609)
!14613 = !DILocation(line: 4166, column: 28, scope: !14609)
!14614 = !DILocalVariable(name: "vlr", scope: !14609, file: !3, line: 4167, type: !5645)
!14615 = !DILocation(line: 4167, column: 16, scope: !14609)
!14616 = !DILocation(line: 4169, column: 11, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 4169, column: 11)
!14618 = !DILocation(line: 4169, column: 18, scope: !14617)
!14619 = !DILocation(line: 4169, column: 23, scope: !14617)
!14620 = !DILocation(line: 4169, column: 26, scope: !14617)
!14621 = !DILocation(line: 4169, column: 35, scope: !14617)
!14622 = !DILocation(line: 4169, column: 40, scope: !14617)
!14623 = !DILocation(line: 4169, column: 33, scope: !14617)
!14624 = !DILocation(line: 4169, column: 11, scope: !14609)
!14625 = !DILocation(line: 4170, column: 31, scope: !14617)
!14626 = !DILocation(line: 4170, column: 36, scope: !14617)
!14627 = !DILocation(line: 4170, column: 14, scope: !14617)
!14628 = !DILocation(line: 4170, column: 12, scope: !14617)
!14629 = !DILocation(line: 4170, column: 8, scope: !14617)
!14630 = !DILocation(line: 4172, column: 11, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 4172, column: 11)
!14632 = !DILocation(line: 4172, column: 11, scope: !14609)
!14633 = !DILocation(line: 4173, column: 14, scope: !14631)
!14634 = !DILocation(line: 4173, column: 19, scope: !14631)
!14635 = !DILocation(line: 4173, column: 12, scope: !14631)
!14636 = !DILocation(line: 4173, column: 8, scope: !14631)
!14637 = !DILocation(line: 4174, column: 6, scope: !14609)
!14638 = !DILocalVariable(name: "strand", scope: !14639, file: !3, line: 4176, type: !8591)
!14639 = distinct !DILexicalBlock(scope: !14602, file: !3, line: 4175, column: 11)
!14640 = !DILocation(line: 4176, column: 18, scope: !14639)
!14641 = !DILocation(line: 4176, column: 46, scope: !14639)
!14642 = !DILocation(line: 4176, column: 51, scope: !14639)
!14643 = !DILocation(line: 4176, column: 53, scope: !14639)
!14644 = !DILocation(line: 4176, column: 27, scope: !14639)
!14645 = !DILocation(line: 4178, column: 11, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14639, file: !3, line: 4178, column: 11)
!14647 = !DILocation(line: 4178, column: 11, scope: !14639)
!14648 = !DILocation(line: 4179, column: 14, scope: !14646)
!14649 = !DILocation(line: 4179, column: 22, scope: !14646)
!14650 = !DILocation(line: 4179, column: 30, scope: !14646)
!14651 = !DILocation(line: 4179, column: 12, scope: !14646)
!14652 = !DILocation(line: 4179, column: 8, scope: !14646)
!14653 = !DILocation(line: 4182, column: 10, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 4182, column: 10)
!14655 = !DILocation(line: 4182, column: 10, scope: !14584)
!14656 = !DILocation(line: 4183, column: 13, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 4183, column: 7)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !3, line: 4182, column: 15)
!14659 = !DILocation(line: 4183, column: 12, scope: !14657)
!14660 = !DILocation(line: 4183, column: 18, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !3, line: 4183, column: 7)
!14662 = !DILocation(line: 4183, column: 20, scope: !14661)
!14663 = !DILocation(line: 4183, column: 19, scope: !14661)
!14664 = !DILocation(line: 4183, column: 7, scope: !14657)
!14665 = !DILocation(line: 4184, column: 39, scope: !14661)
!14666 = !DILocation(line: 4184, column: 34, scope: !14661)
!14667 = !DILocation(line: 4184, column: 43, scope: !14661)
!14668 = !DILocation(line: 4184, column: 47, scope: !14661)
!14669 = !DILocation(line: 4184, column: 8, scope: !14661)
!14670 = !DILocation(line: 4183, column: 36, scope: !14661)
!14671 = !DILocation(line: 4183, column: 7, scope: !14661)
!14672 = distinct !{!14672, !14664, !14673}
!14673 = !DILocation(line: 4184, column: 50, scope: !14657)
!14674 = !DILocation(line: 4185, column: 6, scope: !14658)
!14675 = !DILocation(line: 4186, column: 5, scope: !14584)
!14676 = !DILocation(line: 4189, column: 5, scope: !14318)
!14677 = !DILocation(line: 4189, column: 45, scope: !14318)
!14678 = !DILocation(line: 4189, column: 44, scope: !14318)
!14679 = !DILocation(line: 4190, column: 11, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4190, column: 5)
!14681 = !DILocation(line: 4190, column: 10, scope: !14680)
!14682 = !DILocation(line: 4190, column: 15, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 4190, column: 5)
!14684 = !DILocation(line: 4190, column: 17, scope: !14683)
!14685 = !DILocation(line: 4190, column: 16, scope: !14683)
!14686 = !DILocation(line: 4190, column: 5, scope: !14680)
!14687 = !DILocation(line: 4191, column: 15, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14683, file: !3, line: 4190, column: 27)
!14689 = !DILocation(line: 4191, column: 6, scope: !14688)
!14690 = !DILocation(line: 4191, column: 18, scope: !14688)
!14691 = !DILocation(line: 4191, column: 19, scope: !14688)
!14692 = !DILocation(line: 4192, column: 10, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14688, file: !3, line: 4192, column: 10)
!14694 = !DILocation(line: 4192, column: 22, scope: !14693)
!14695 = !DILocation(line: 4192, column: 10, scope: !14688)
!14696 = !DILocation(line: 4193, column: 16, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 4192, column: 41)
!14698 = !DILocation(line: 4193, column: 7, scope: !14697)
!14699 = !DILocation(line: 4193, column: 19, scope: !14697)
!14700 = !DILocation(line: 4193, column: 30, scope: !14697)
!14701 = !DILocation(line: 4194, column: 16, scope: !14697)
!14702 = !DILocation(line: 4194, column: 7, scope: !14697)
!14703 = !DILocation(line: 4194, column: 19, scope: !14697)
!14704 = !DILocation(line: 4194, column: 30, scope: !14697)
!14705 = !DILocation(line: 4195, column: 16, scope: !14697)
!14706 = !DILocation(line: 4195, column: 7, scope: !14697)
!14707 = !DILocation(line: 4195, column: 19, scope: !14697)
!14708 = !DILocation(line: 4195, column: 30, scope: !14697)
!14709 = !DILocation(line: 4196, column: 16, scope: !14697)
!14710 = !DILocation(line: 4196, column: 7, scope: !14697)
!14711 = !DILocation(line: 4196, column: 19, scope: !14697)
!14712 = !DILocation(line: 4196, column: 30, scope: !14697)
!14713 = !DILocation(line: 4197, column: 6, scope: !14697)
!14714 = !DILocation(line: 4198, column: 5, scope: !14688)
!14715 = !DILocation(line: 4190, column: 23, scope: !14683)
!14716 = !DILocation(line: 4190, column: 5, scope: !14683)
!14717 = distinct !{!14717, !14686, !14718}
!14718 = !DILocation(line: 4198, column: 5, scope: !14680)
!14719 = !DILocation(line: 4200, column: 11, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 4200, column: 9)
!14721 = !DILocation(line: 4200, column: 9, scope: !14720)
!14722 = !DILocation(line: 4200, column: 14, scope: !14720)
!14723 = !DILocation(line: 4200, column: 9, scope: !14318)
!14724 = !DILocation(line: 4201, column: 6, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 4200, column: 19)
!14726 = !DILocation(line: 4201, column: 13, scope: !14725)
!14727 = !DILocation(line: 4201, column: 20, scope: !14725)
!14728 = !DILocation(line: 4202, column: 14, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 4201, column: 24)
!14730 = !DILocation(line: 4204, column: 37, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14729, file: !3, line: 4204, column: 11)
!14732 = !DILocation(line: 4204, column: 46, scope: !14731)
!14733 = !DILocation(line: 4204, column: 49, scope: !14731)
!14734 = !DILocation(line: 4204, column: 58, scope: !14731)
!14735 = !DILocation(line: 4204, column: 53, scope: !14731)
!14736 = !DILocation(line: 4204, column: 68, scope: !14731)
!14737 = !DILocation(line: 4204, column: 11, scope: !14731)
!14738 = !DILocation(line: 4204, column: 11, scope: !14729)
!14739 = !DILocation(line: 4205, column: 30, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 4204, column: 82)
!14741 = !DILocation(line: 4205, column: 48, scope: !14740)
!14742 = !DILocation(line: 4205, column: 16, scope: !14740)
!14743 = !DILocation(line: 4205, column: 14, scope: !14740)
!14744 = !DILocation(line: 4206, column: 27, scope: !14740)
!14745 = !DILocation(line: 4206, column: 39, scope: !14740)
!14746 = !DILocation(line: 4206, column: 33, scope: !14740)
!14747 = !DILocation(line: 4206, column: 46, scope: !14740)
!14748 = !DILocation(line: 4206, column: 8, scope: !14740)
!14749 = !DILocation(line: 4208, column: 12, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14740, file: !3, line: 4208, column: 12)
!14751 = !DILocation(line: 4208, column: 19, scope: !14750)
!14752 = !DILocation(line: 4208, column: 12, scope: !14740)
!14753 = !DILocation(line: 4209, column: 13, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 4209, column: 13)
!14755 = distinct !DILexicalBlock(scope: !14750, file: !3, line: 4208, column: 25)
!14756 = !DILocation(line: 4209, column: 13, scope: !14755)
!14757 = !DILocation(line: 4210, column: 31, scope: !14754)
!14758 = !DILocation(line: 4210, column: 40, scope: !14754)
!14759 = !DILocation(line: 4210, column: 46, scope: !14754)
!14760 = !DILocation(line: 4210, column: 10, scope: !14754)
!14761 = !DILocation(line: 4211, column: 9, scope: !14755)
!14762 = !DILocation(line: 4213, column: 7, scope: !14740)
!14763 = distinct !{!14763, !14724, !14764}
!14764 = !DILocation(line: 4214, column: 6, scope: !14725)
!14765 = !DILocation(line: 4216, column: 23, scope: !14725)
!14766 = !DILocation(line: 4216, column: 13, scope: !14725)
!14767 = !DILocation(line: 4216, column: 11, scope: !14725)
!14768 = !DILocation(line: 4217, column: 10, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 4217, column: 10)
!14770 = !DILocation(line: 4217, column: 15, scope: !14769)
!14771 = !DILocation(line: 4217, column: 10, scope: !14725)
!14772 = !DILocation(line: 4218, column: 25, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 4217, column: 23)
!14774 = !DILocation(line: 4218, column: 29, scope: !14773)
!14775 = !DILocation(line: 4218, column: 33, scope: !14773)
!14776 = !DILocation(line: 4218, column: 43, scope: !14773)
!14777 = !DILocation(line: 4218, column: 7, scope: !14773)
!14778 = !DILocation(line: 4219, column: 11, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14773, file: !3, line: 4219, column: 11)
!14780 = !DILocation(line: 4219, column: 23, scope: !14779)
!14781 = !DILocation(line: 4219, column: 11, scope: !14773)
!14782 = !DILocation(line: 4220, column: 25, scope: !14779)
!14783 = !DILocation(line: 4220, column: 29, scope: !14779)
!14784 = !DILocation(line: 4220, column: 43, scope: !14779)
!14785 = !DILocation(line: 4220, column: 33, scope: !14779)
!14786 = !DILocation(line: 4220, column: 53, scope: !14779)
!14787 = !DILocation(line: 4220, column: 60, scope: !14779)
!14788 = !DILocation(line: 4220, column: 8, scope: !14779)
!14789 = !DILocation(line: 4221, column: 6, scope: !14773)
!14790 = !DILocation(line: 4222, column: 5, scope: !14725)
!14791 = !DILocalVariable(name: "sp", scope: !14792, file: !3, line: 4224, type: !82)
!14792 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 4223, column: 10)
!14793 = !DILocation(line: 4224, column: 13, scope: !14792)
!14794 = !DILocation(line: 4224, column: 27, scope: !14792)
!14795 = !DILocation(line: 4224, column: 36, scope: !14792)
!14796 = !DILocation(line: 4224, column: 35, scope: !14792)
!14797 = !DILocation(line: 4226, column: 6, scope: !14792)
!14798 = !DILocation(line: 4226, column: 13, scope: !14792)
!14799 = !DILocation(line: 4226, column: 20, scope: !14792)
!14800 = !DILocation(line: 4227, column: 14, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14792, file: !3, line: 4226, column: 24)
!14802 = !DILocation(line: 4229, column: 37, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14801, file: !3, line: 4229, column: 11)
!14804 = !DILocation(line: 4229, column: 46, scope: !14803)
!14805 = !DILocation(line: 4229, column: 49, scope: !14803)
!14806 = !DILocation(line: 4229, column: 58, scope: !14803)
!14807 = !DILocation(line: 4229, column: 53, scope: !14803)
!14808 = !DILocation(line: 4229, column: 68, scope: !14803)
!14809 = !DILocation(line: 4229, column: 11, scope: !14803)
!14810 = !DILocation(line: 4229, column: 11, scope: !14801)
!14811 = !DILocation(line: 4230, column: 30, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 4229, column: 82)
!14813 = !DILocation(line: 4230, column: 48, scope: !14812)
!14814 = !DILocation(line: 4230, column: 16, scope: !14812)
!14815 = !DILocation(line: 4230, column: 14, scope: !14812)
!14816 = !DILocation(line: 4232, column: 12, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14812, file: !3, line: 4232, column: 12)
!14818 = !DILocation(line: 4232, column: 12, scope: !14812)
!14819 = !DILocation(line: 4233, column: 21, scope: !14817)
!14820 = !DILocation(line: 4233, column: 16, scope: !14817)
!14821 = !DILocation(line: 4233, column: 30, scope: !14817)
!14822 = !DILocation(line: 4233, column: 10, scope: !14817)
!14823 = !DILocation(line: 4233, column: 13, scope: !14817)
!14824 = !DILocation(line: 4233, column: 9, scope: !14817)
!14825 = !DILocation(line: 4234, column: 12, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14812, file: !3, line: 4234, column: 12)
!14827 = !DILocation(line: 4234, column: 18, scope: !14826)
!14828 = !DILocation(line: 4234, column: 12, scope: !14812)
!14829 = !DILocation(line: 4235, column: 13, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 4235, column: 13)
!14831 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 4234, column: 23)
!14832 = !DILocation(line: 4235, column: 13, scope: !14831)
!14833 = !DILocation(line: 4236, column: 31, scope: !14830)
!14834 = !DILocation(line: 4236, column: 40, scope: !14830)
!14835 = !DILocation(line: 4236, column: 46, scope: !14830)
!14836 = !DILocation(line: 4236, column: 10, scope: !14830)
!14837 = !DILocation(line: 4237, column: 9, scope: !14831)
!14838 = !DILocation(line: 4239, column: 7, scope: !14812)
!14839 = distinct !{!14839, !14797, !14840}
!14840 = !DILocation(line: 4240, column: 6, scope: !14792)
!14841 = !DILocation(line: 4243, column: 10, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14792, file: !3, line: 4243, column: 10)
!14843 = !DILocation(line: 4243, column: 14, scope: !14842)
!14844 = !DILocation(line: 4243, column: 25, scope: !14842)
!14845 = !DILocation(line: 4243, column: 10, scope: !14792)
!14846 = !DILocation(line: 4244, column: 13, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !3, line: 4244, column: 7)
!14848 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 4243, column: 32)
!14849 = !DILocation(line: 4244, column: 12, scope: !14847)
!14850 = !DILocation(line: 4244, column: 17, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14847, file: !3, line: 4244, column: 7)
!14852 = !DILocation(line: 4244, column: 21, scope: !14851)
!14853 = !DILocation(line: 4244, column: 19, scope: !14851)
!14854 = !DILocation(line: 4244, column: 18, scope: !14851)
!14855 = !DILocation(line: 4244, column: 7, scope: !14847)
!14856 = !DILocation(line: 4245, column: 24, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14851, file: !3, line: 4244, column: 31)
!14858 = !DILocation(line: 4245, column: 15, scope: !14857)
!14859 = !DILocation(line: 4245, column: 27, scope: !14857)
!14860 = !DILocation(line: 4245, column: 13, scope: !14857)
!14861 = !DILocation(line: 4246, column: 12, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 4246, column: 12)
!14863 = !DILocation(line: 4246, column: 17, scope: !14862)
!14864 = !DILocation(line: 4246, column: 12, scope: !14857)
!14865 = !DILocalVariable(name: "rl", scope: !14866, file: !3, line: 4247, type: !5618)
!14866 = distinct !DILexicalBlock(scope: !14862, file: !3, line: 4246, column: 25)
!14867 = !DILocation(line: 4247, column: 22, scope: !14866)
!14868 = !DILocation(line: 4247, column: 32, scope: !14866)
!14869 = !DILocation(line: 4247, column: 37, scope: !14866)
!14870 = !DILocation(line: 4247, column: 26, scope: !14866)
!14871 = !DILocation(line: 4249, column: 27, scope: !14866)
!14872 = !DILocation(line: 4249, column: 31, scope: !14866)
!14873 = !DILocation(line: 4249, column: 41, scope: !14866)
!14874 = !DILocation(line: 4249, column: 40, scope: !14866)
!14875 = !DILocation(line: 4249, column: 37, scope: !14866)
!14876 = !DILocation(line: 4249, column: 54, scope: !14866)
!14877 = !DILocation(line: 4249, column: 45, scope: !14866)
!14878 = !DILocation(line: 4249, column: 57, scope: !14866)
!14879 = !DILocation(line: 4249, column: 9, scope: !14866)
!14880 = !DILocation(line: 4251, column: 27, scope: !14866)
!14881 = !DILocation(line: 4251, column: 31, scope: !14866)
!14882 = !DILocation(line: 4251, column: 45, scope: !14866)
!14883 = !DILocation(line: 4251, column: 36, scope: !14866)
!14884 = !DILocation(line: 4251, column: 49, scope: !14866)
!14885 = !DILocation(line: 4251, column: 9, scope: !14866)
!14886 = !DILocation(line: 4252, column: 13, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 4252, column: 13)
!14888 = !DILocation(line: 4252, column: 25, scope: !14887)
!14889 = !DILocation(line: 4252, column: 13, scope: !14866)
!14890 = !DILocation(line: 4253, column: 27, scope: !14887)
!14891 = !DILocation(line: 4253, column: 31, scope: !14887)
!14892 = !DILocation(line: 4253, column: 44, scope: !14887)
!14893 = !DILocation(line: 4253, column: 35, scope: !14887)
!14894 = !DILocation(line: 4253, column: 47, scope: !14887)
!14895 = !DILocation(line: 4253, column: 57, scope: !14887)
!14896 = !DILocation(line: 4253, column: 64, scope: !14887)
!14897 = !DILocation(line: 4253, column: 10, scope: !14887)
!14898 = !DILocation(line: 4254, column: 8, scope: !14866)
!14899 = !DILocation(line: 4255, column: 7, scope: !14857)
!14900 = !DILocation(line: 4244, column: 27, scope: !14851)
!14901 = !DILocation(line: 4244, column: 7, scope: !14851)
!14902 = distinct !{!14902, !14855, !14903}
!14903 = !DILocation(line: 4255, column: 7, scope: !14847)
!14904 = !DILocation(line: 4256, column: 6, scope: !14848)
!14905 = !DILocation(line: 4258, column: 12, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 4257, column: 11)
!14907 = !DILocation(line: 4261, column: 13, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 4261, column: 7)
!14909 = !DILocation(line: 4261, column: 12, scope: !14908)
!14910 = !DILocation(line: 4261, column: 17, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 4261, column: 7)
!14912 = !DILocation(line: 4261, column: 21, scope: !14911)
!14913 = !DILocation(line: 4261, column: 19, scope: !14911)
!14914 = !DILocation(line: 4261, column: 18, scope: !14911)
!14915 = !DILocation(line: 4261, column: 7, scope: !14908)
!14916 = !DILocation(line: 4262, column: 26, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 4261, column: 31)
!14918 = !DILocation(line: 4262, column: 24, scope: !14917)
!14919 = !DILocation(line: 4262, column: 38, scope: !14917)
!14920 = !DILocation(line: 4262, column: 29, scope: !14917)
!14921 = !DILocation(line: 4262, column: 41, scope: !14917)
!14922 = !DILocation(line: 4262, column: 51, scope: !14917)
!14923 = !DILocation(line: 4262, column: 57, scope: !14917)
!14924 = !DILocation(line: 4262, column: 61, scope: !14917)
!14925 = !DILocation(line: 4262, column: 8, scope: !14917)
!14926 = !DILocation(line: 4263, column: 25, scope: !14917)
!14927 = !DILocation(line: 4263, column: 16, scope: !14917)
!14928 = !DILocation(line: 4263, column: 28, scope: !14917)
!14929 = !DILocation(line: 4263, column: 13, scope: !14917)
!14930 = !DILocation(line: 4264, column: 7, scope: !14917)
!14931 = !DILocation(line: 4261, column: 27, scope: !14911)
!14932 = !DILocation(line: 4261, column: 7, scope: !14911)
!14933 = distinct !{!14933, !14915, !14934}
!14934 = !DILocation(line: 4264, column: 7, scope: !14908)
!14935 = !DILocation(line: 4266, column: 11, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 4266, column: 11)
!14937 = !DILocation(line: 4266, column: 11, scope: !14906)
!14938 = !DILocation(line: 4267, column: 16, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14936, file: !3, line: 4266, column: 24)
!14940 = !DILocation(line: 4267, column: 13, scope: !14939)
!14941 = !DILocation(line: 4270, column: 28, scope: !14939)
!14942 = !DILocation(line: 4270, column: 32, scope: !14939)
!14943 = !DILocation(line: 4270, column: 8, scope: !14939)
!14944 = !DILocation(line: 4271, column: 26, scope: !14939)
!14945 = !DILocation(line: 4271, column: 30, scope: !14939)
!14946 = !DILocation(line: 4271, column: 34, scope: !14939)
!14947 = !DILocation(line: 4271, column: 44, scope: !14939)
!14948 = !DILocation(line: 4271, column: 8, scope: !14939)
!14949 = !DILocation(line: 4273, column: 12, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 4273, column: 12)
!14951 = !DILocation(line: 4273, column: 24, scope: !14950)
!14952 = !DILocation(line: 4273, column: 12, scope: !14939)
!14953 = !DILocation(line: 4274, column: 26, scope: !14950)
!14954 = !DILocation(line: 4274, column: 30, scope: !14950)
!14955 = !DILocation(line: 4274, column: 34, scope: !14950)
!14956 = !DILocation(line: 4274, column: 46, scope: !14950)
!14957 = !DILocation(line: 4274, column: 56, scope: !14950)
!14958 = !DILocation(line: 4274, column: 63, scope: !14950)
!14959 = !DILocation(line: 4274, column: 9, scope: !14950)
!14960 = !DILocation(line: 4275, column: 7, scope: !14939)
!14961 = !DILocation(line: 4279, column: 3, scope: !14297)
!14962 = !DILocation(line: 4088, column: 61, scope: !14287)
!14963 = !DILocation(line: 4088, column: 67, scope: !14287)
!14964 = !DILocation(line: 4088, column: 79, scope: !14287)
!14965 = !DILocation(line: 4088, column: 87, scope: !14287)
!14966 = !DILocation(line: 4088, column: 94, scope: !14287)
!14967 = !DILocation(line: 4088, column: 3, scope: !14287)
!14968 = distinct !{!14968, !14294, !14969}
!14969 = !DILocation(line: 4279, column: 3, scope: !14279)
!14970 = !DILocation(line: 4281, column: 12, scope: !14264)
!14971 = !DILocation(line: 4281, column: 16, scope: !14264)
!14972 = !DILocation(line: 4281, column: 9, scope: !14264)
!14973 = !DILocation(line: 4282, column: 18, scope: !14264)
!14974 = !DILocation(line: 4282, column: 22, scope: !14264)
!14975 = !DILocation(line: 4282, column: 15, scope: !14264)
!14976 = !DILocation(line: 4283, column: 16, scope: !14264)
!14977 = !DILocation(line: 4283, column: 20, scope: !14264)
!14978 = !DILocation(line: 4283, column: 15, scope: !14264)
!14979 = !DILocation(line: 4283, column: 11, scope: !14264)
!14980 = !DILocation(line: 4284, column: 10, scope: !14264)
!14981 = !DILocation(line: 4284, column: 14, scope: !14264)
!14982 = !DILocation(line: 4284, column: 7, scope: !14264)
!14983 = !DILocation(line: 4285, column: 2, scope: !14264)
!14984 = !DILocation(line: 4079, column: 60, scope: !14255)
!14985 = !DILocation(line: 4079, column: 64, scope: !14255)
!14986 = !DILocation(line: 4079, column: 68, scope: !14255)
!14987 = !DILocation(line: 4079, column: 76, scope: !14255)
!14988 = !DILocation(line: 4079, column: 80, scope: !14255)
!14989 = !DILocation(line: 4079, column: 2, scope: !14255)
!14990 = distinct !{!14990, !14262, !14991}
!14991 = !DILocation(line: 4285, column: 2, scope: !14247)
!14992 = !DILocation(line: 4288, column: 2, scope: !13791)
!14993 = !DILocation(line: 4288, column: 6, scope: !13791)
!14994 = !DILocation(line: 4288, column: 12, scope: !13791)
!14995 = !DILocation(line: 4290, column: 2, scope: !13791)
!14996 = !DILocation(line: 4290, column: 12, scope: !13791)
!14997 = !DILocation(line: 4291, column: 6, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4291, column: 6)
!14999 = !DILocation(line: 4291, column: 6, scope: !13791)
!15000 = !DILocation(line: 4292, column: 3, scope: !14998)
!15001 = !DILocation(line: 4292, column: 13, scope: !14998)
!15002 = !DILocation(line: 4293, column: 6, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4293, column: 6)
!15004 = !DILocation(line: 4293, column: 6, scope: !13791)
!15005 = !DILocation(line: 4294, column: 27, scope: !15003)
!15006 = !DILocation(line: 4294, column: 3, scope: !15003)
!15007 = !DILocation(line: 4295, column: 2, scope: !13791)
!15008 = !DILocation(line: 4297, column: 10, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4297, column: 6)
!15010 = !DILocation(line: 4297, column: 15, scope: !15009)
!15011 = !DILocation(line: 4297, column: 6, scope: !13791)
!15012 = !DILocation(line: 4298, column: 12, scope: !15009)
!15013 = !DILocation(line: 4298, column: 3, scope: !15009)
!15014 = !DILocation(line: 4300, column: 9, scope: !13791)
!15015 = !DILocation(line: 4300, column: 2, scope: !13791)
!15016 = !DILocation(line: 4301, column: 1, scope: !13791)
!15017 = distinct !DISubprogram(name: "zbuffer_abuf_render", scope: !3, file: !3, line: 3444, type: !15018, scopeLine: 3445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!29, !5587, !148, !166, !369, !5618, !14018}
!15020 = !DILocalVariable(name: "pa", arg: 1, scope: !15017, file: !3, line: 3444, type: !5587)
!15021 = !DILocation(line: 3444, column: 44, scope: !15017)
!15022 = !DILocalVariable(name: "APixbuf", arg: 2, scope: !15017, file: !3, line: 3444, type: !148)
!15023 = !DILocation(line: 3444, column: 57, scope: !15017)
!15024 = !DILocalVariable(name: "APixbufstrand", arg: 3, scope: !15017, file: !3, line: 3444, type: !166)
!15025 = !DILocation(line: 3444, column: 78, scope: !15017)
!15026 = !DILocalVariable(name: "apsmbase", arg: 4, scope: !15017, file: !3, line: 3444, type: !369)
!15027 = !DILocation(line: 3444, column: 103, scope: !15017)
!15028 = !DILocalVariable(name: "rl", arg: 5, scope: !15017, file: !3, line: 3444, type: !5618)
!15029 = !DILocation(line: 3444, column: 126, scope: !15017)
!15030 = !DILocalVariable(name: "sscache", arg: 6, scope: !15017, file: !3, line: 3444, type: !14018)
!15031 = !DILocation(line: 3444, column: 148, scope: !15017)
!15032 = !DILocalVariable(name: "winmat", scope: !15017, file: !3, line: 3446, type: !2892)
!15033 = !DILocation(line: 3446, column: 8, scope: !15017)
!15034 = !DILocalVariable(name: "jit", scope: !15017, file: !3, line: 3446, type: !13056)
!15035 = !DILocation(line: 3446, column: 24, scope: !15017)
!15036 = !DILocalVariable(name: "samples", scope: !15017, file: !3, line: 3447, type: !29)
!15037 = !DILocation(line: 3447, column: 6, scope: !15017)
!15038 = !DILocalVariable(name: "negzmask", scope: !15017, file: !3, line: 3447, type: !29)
!15039 = !DILocation(line: 3447, column: 15, scope: !15017)
!15040 = !DILocalVariable(name: "doztra", scope: !15017, file: !3, line: 3447, type: !29)
!15041 = !DILocation(line: 3447, column: 25, scope: !15017)
!15042 = !DILocation(line: 3449, column: 14, scope: !15017)
!15043 = !DILocation(line: 3449, column: 11, scope: !15017)
!15044 = !DILocation(line: 3449, column: 22, scope: !15017)
!15045 = !DILocation(line: 3449, column: 20, scope: !15017)
!15046 = !DILocation(line: 3449, column: 9, scope: !15017)
!15047 = !DILocation(line: 3450, column: 14, scope: !15017)
!15048 = !DILocation(line: 3450, column: 18, scope: !15017)
!15049 = !DILocation(line: 3450, column: 26, scope: !15017)
!15050 = !DILocation(line: 3450, column: 43, scope: !15017)
!15051 = !DILocation(line: 3450, column: 47, scope: !15017)
!15052 = !DILocation(line: 3450, column: 51, scope: !15017)
!15053 = !DILocation(line: 3450, column: 59, scope: !15017)
!15054 = !DILocation(line: 0, scope: !15017)
!15055 = !DILocation(line: 3450, column: 10, scope: !15017)
!15056 = !DILocation(line: 3452, column: 8, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 3452, column: 6)
!15058 = !DILocation(line: 3452, column: 6, scope: !15057)
!15059 = !DILocation(line: 3452, column: 6, scope: !15017)
!15060 = !DILocation(line: 3453, column: 6, scope: !15057)
!15061 = !DILocation(line: 3453, column: 3, scope: !15057)
!15062 = !DILocation(line: 3454, column: 15, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 3454, column: 11)
!15064 = !DILocation(line: 3454, column: 11, scope: !15063)
!15065 = !DILocation(line: 3454, column: 11, scope: !15057)
!15066 = !DILocation(line: 3455, column: 25, scope: !15063)
!15067 = !DILocation(line: 3455, column: 21, scope: !15063)
!15068 = !DILocation(line: 3455, column: 32, scope: !15063)
!15069 = !DILocation(line: 3455, column: 9, scope: !15063)
!15070 = !DILocation(line: 3455, column: 6, scope: !15063)
!15071 = !DILocation(line: 3455, column: 3, scope: !15063)
!15072 = !DILocation(line: 3457, column: 6, scope: !15063)
!15073 = !DILocation(line: 3459, column: 23, scope: !15017)
!15074 = !DILocation(line: 3459, column: 2, scope: !15017)
!15075 = !DILocation(line: 3461, column: 6, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 3461, column: 6)
!15077 = !DILocation(line: 3461, column: 10, scope: !15076)
!15078 = !DILocation(line: 3461, column: 18, scope: !15076)
!15079 = !DILocation(line: 3461, column: 6, scope: !15017)
!15080 = !DILocation(line: 3462, column: 29, scope: !15076)
!15081 = !DILocation(line: 3462, column: 33, scope: !15076)
!15082 = !DILocation(line: 3462, column: 42, scope: !15076)
!15083 = !DILocation(line: 3462, column: 52, scope: !15076)
!15084 = !DILocation(line: 3462, column: 56, scope: !15076)
!15085 = !DILocation(line: 3462, column: 61, scope: !15076)
!15086 = !DILocation(line: 3462, column: 71, scope: !15076)
!15087 = !DILocation(line: 3462, column: 81, scope: !15076)
!15088 = !DILocation(line: 3462, column: 89, scope: !15076)
!15089 = !DILocation(line: 3462, column: 95, scope: !15076)
!15090 = !DILocation(line: 3462, column: 104, scope: !15076)
!15091 = !DILocation(line: 3462, column: 111, scope: !15076)
!15092 = !DILocation(line: 3462, column: 12, scope: !15076)
!15093 = !DILocation(line: 3462, column: 9, scope: !15076)
!15094 = !DILocation(line: 3462, column: 3, scope: !15076)
!15095 = !DILocation(line: 3463, column: 7, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 3463, column: 6)
!15097 = !DILocation(line: 3463, column: 11, scope: !15096)
!15098 = !DILocation(line: 3463, column: 19, scope: !15096)
!15099 = !DILocation(line: 3463, column: 37, scope: !15096)
!15100 = !DILocation(line: 3463, column: 40, scope: !15096)
!15101 = !DILocation(line: 3463, column: 6, scope: !15017)
!15102 = !DILocation(line: 3464, column: 37, scope: !15096)
!15103 = !DILocation(line: 3464, column: 41, scope: !15096)
!15104 = !DILocation(line: 3464, column: 56, scope: !15096)
!15105 = !DILocation(line: 3464, column: 66, scope: !15096)
!15106 = !DILocation(line: 3464, column: 70, scope: !15096)
!15107 = !DILocation(line: 3464, column: 75, scope: !15096)
!15108 = !DILocation(line: 3464, column: 85, scope: !15096)
!15109 = !DILocation(line: 3464, column: 95, scope: !15096)
!15110 = !DILocation(line: 3464, column: 103, scope: !15096)
!15111 = !DILocation(line: 3464, column: 109, scope: !15096)
!15112 = !DILocation(line: 3464, column: 118, scope: !15096)
!15113 = !DILocation(line: 3464, column: 125, scope: !15096)
!15114 = !DILocation(line: 3464, column: 138, scope: !15096)
!15115 = !DILocation(line: 3464, column: 12, scope: !15096)
!15116 = !DILocation(line: 3464, column: 9, scope: !15096)
!15117 = !DILocation(line: 3464, column: 3, scope: !15096)
!15118 = !DILocation(line: 3466, column: 9, scope: !15017)
!15119 = !DILocation(line: 3466, column: 2, scope: !15017)
!15120 = distinct !DISubprogram(name: "reset_sky_speedvectors", scope: !3, file: !3, line: 3961, type: !15121, scopeLine: 3962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{null, !5587, !5618, !31}
!15123 = !DILocalVariable(name: "pa", arg: 1, scope: !15120, file: !3, line: 3961, type: !5587)
!15124 = !DILocation(line: 3961, column: 48, scope: !15120)
!15125 = !DILocalVariable(name: "rl", arg: 2, scope: !15120, file: !3, line: 3961, type: !5618)
!15126 = !DILocation(line: 3961, column: 65, scope: !15120)
!15127 = !DILocalVariable(name: "rectf", arg: 3, scope: !15120, file: !3, line: 3961, type: !31)
!15128 = !DILocation(line: 3961, column: 76, scope: !15120)
!15129 = !DILocalVariable(name: "fp", scope: !15120, file: !3, line: 3965, type: !31)
!15130 = !DILocation(line: 3965, column: 9, scope: !15120)
!15131 = !DILocalVariable(name: "col", scope: !15120, file: !3, line: 3965, type: !31)
!15132 = !DILocation(line: 3965, column: 14, scope: !15120)
!15133 = !DILocalVariable(name: "a", scope: !15120, file: !3, line: 3966, type: !29)
!15134 = !DILocation(line: 3966, column: 6, scope: !15120)
!15135 = !DILocation(line: 3968, column: 28, scope: !15120)
!15136 = !DILocation(line: 3968, column: 6, scope: !15120)
!15137 = !DILocation(line: 3968, column: 4, scope: !15120)
!15138 = !DILocation(line: 3969, column: 6, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15120, file: !3, line: 3969, column: 6)
!15140 = !DILocation(line: 3969, column: 8, scope: !15139)
!15141 = !DILocation(line: 3969, column: 6, scope: !15120)
!15142 = !DILocation(line: 3969, column: 16, scope: !15139)
!15143 = !DILocation(line: 3970, column: 7, scope: !15120)
!15144 = !DILocation(line: 3970, column: 12, scope: !15120)
!15145 = !DILocation(line: 3970, column: 5, scope: !15120)
!15146 = !DILocation(line: 3972, column: 12, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15120, file: !3, line: 3972, column: 2)
!15148 = !DILocation(line: 3972, column: 16, scope: !15147)
!15149 = !DILocation(line: 3972, column: 11, scope: !15147)
!15150 = !DILocation(line: 3972, column: 22, scope: !15147)
!15151 = !DILocation(line: 3972, column: 26, scope: !15147)
!15152 = !DILocation(line: 3972, column: 21, scope: !15147)
!15153 = !DILocation(line: 3972, column: 32, scope: !15147)
!15154 = !DILocation(line: 3972, column: 8, scope: !15147)
!15155 = !DILocation(line: 3972, column: 7, scope: !15147)
!15156 = !DILocation(line: 3972, column: 36, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 3972, column: 2)
!15158 = !DILocation(line: 3972, column: 37, scope: !15157)
!15159 = !DILocation(line: 3972, column: 2, scope: !15147)
!15160 = !DILocation(line: 3973, column: 7, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 3973, column: 7)
!15162 = distinct !DILexicalBlock(scope: !15157, file: !3, line: 3972, column: 48)
!15163 = !DILocation(line: 3973, column: 11, scope: !15161)
!15164 = !DILocation(line: 3973, column: 13, scope: !15161)
!15165 = !DILocation(line: 3973, column: 7, scope: !15162)
!15166 = !DILocation(line: 3974, column: 4, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15161, file: !3, line: 3973, column: 21)
!15168 = !DILocation(line: 3974, column: 7, scope: !15167)
!15169 = !DILocation(line: 3974, column: 9, scope: !15167)
!15170 = !DILocation(line: 3975, column: 4, scope: !15167)
!15171 = !DILocation(line: 3975, column: 7, scope: !15167)
!15172 = !DILocation(line: 3975, column: 8, scope: !15167)
!15173 = !DILocation(line: 3975, column: 11, scope: !15167)
!15174 = !DILocation(line: 3976, column: 4, scope: !15167)
!15175 = !DILocation(line: 3976, column: 7, scope: !15167)
!15176 = !DILocation(line: 3976, column: 8, scope: !15167)
!15177 = !DILocation(line: 3976, column: 11, scope: !15167)
!15178 = !DILocation(line: 3977, column: 4, scope: !15167)
!15179 = !DILocation(line: 3977, column: 7, scope: !15167)
!15180 = !DILocation(line: 3977, column: 8, scope: !15167)
!15181 = !DILocation(line: 3977, column: 11, scope: !15167)
!15182 = !DILocation(line: 3978, column: 3, scope: !15167)
!15183 = !DILocation(line: 3979, column: 2, scope: !15162)
!15184 = !DILocation(line: 3972, column: 43, scope: !15157)
!15185 = !DILocation(line: 3972, column: 2, scope: !15157)
!15186 = distinct !{!15186, !15159, !15187}
!15187 = !DILocation(line: 3979, column: 2, scope: !15147)
!15188 = !DILocation(line: 3980, column: 1, scope: !15120)
!15189 = distinct !DISubprogram(name: "add_transp_speed", scope: !3, file: !3, line: 3493, type: !15190, scopeLine: 3494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15190 = !DISubroutineType(types: !15191)
!15191 = !{null, !5618, !29, !31, !21, !5601}
!15192 = !DILocalVariable(name: "rl", arg: 1, scope: !15189, file: !3, line: 3493, type: !5618)
!15193 = !DILocation(line: 3493, column: 43, scope: !15189)
!15194 = !DILocalVariable(name: "offset", arg: 2, scope: !15189, file: !3, line: 3493, type: !29)
!15195 = !DILocation(line: 3493, column: 51, scope: !15189)
!15196 = !DILocalVariable(name: "speed", arg: 3, scope: !15189, file: !3, line: 3493, type: !31)
!15197 = !DILocation(line: 3493, column: 65, scope: !15189)
!15198 = !DILocalVariable(name: "alpha", arg: 4, scope: !15189, file: !3, line: 3493, type: !21)
!15199 = !DILocation(line: 3493, column: 81, scope: !15189)
!15200 = !DILocalVariable(name: "rdrect", arg: 5, scope: !15189, file: !3, line: 3493, type: !5601)
!15201 = !DILocation(line: 3493, column: 98, scope: !15189)
!15202 = !DILocalVariable(name: "rpass", scope: !15189, file: !3, line: 3495, type: !15203)
!15203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15204, size: 64)
!15204 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPass", file: !2459, line: 76, baseType: !15205)
!15205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPass", file: !2459, line: 68, size: 960, elements: !15206)
!15206 = !{!15207, !15209, !15210, !15211, !15212, !15213, !15214, !15215, !15216, !15217}
!15207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15205, file: !2459, line: 69, baseType: !15208, size: 64)
!15208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15205, size: 64)
!15209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15205, file: !2459, line: 69, baseType: !15208, size: 64, offset: 64)
!15210 = !DIDerivedType(tag: DW_TAG_member, name: "passtype", scope: !15205, file: !2459, line: 70, baseType: !29, size: 32, offset: 128)
!15211 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !15205, file: !2459, line: 70, baseType: !29, size: 32, offset: 160)
!15212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15205, file: !2459, line: 71, baseType: !2575, size: 512, offset: 192)
!15213 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !15205, file: !2459, line: 72, baseType: !3428, size: 64, offset: 704)
!15214 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !15205, file: !2459, line: 73, baseType: !31, size: 64, offset: 768)
!15215 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !15205, file: !2459, line: 74, baseType: !29, size: 32, offset: 832)
!15216 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !15205, file: !2459, line: 74, baseType: !29, size: 32, offset: 864)
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "debug_type", scope: !15205, file: !2459, line: 75, baseType: !29, size: 32, offset: 896)
!15218 = !DILocation(line: 3495, column: 14, scope: !15189)
!15219 = !DILocation(line: 3497, column: 14, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15189, file: !3, line: 3497, column: 2)
!15221 = !DILocation(line: 3497, column: 18, scope: !15220)
!15222 = !DILocation(line: 3497, column: 25, scope: !15220)
!15223 = !DILocation(line: 3497, column: 12, scope: !15220)
!15224 = !DILocation(line: 3497, column: 7, scope: !15220)
!15225 = !DILocation(line: 3497, column: 32, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 3497, column: 2)
!15227 = !DILocation(line: 3497, column: 2, scope: !15220)
!15228 = !DILocation(line: 3498, column: 7, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !3, line: 3498, column: 7)
!15230 = distinct !DILexicalBlock(scope: !15226, file: !3, line: 3497, column: 59)
!15231 = !DILocation(line: 3498, column: 14, scope: !15229)
!15232 = !DILocation(line: 3498, column: 22, scope: !15229)
!15233 = !DILocation(line: 3498, column: 7, scope: !15230)
!15234 = !DILocalVariable(name: "fp", scope: !15235, file: !3, line: 3499, type: !31)
!15235 = distinct !DILexicalBlock(scope: !15229, file: !3, line: 3498, column: 41)
!15236 = !DILocation(line: 3499, column: 11, scope: !15235)
!15237 = !DILocation(line: 3499, column: 15, scope: !15235)
!15238 = !DILocation(line: 3499, column: 22, scope: !15235)
!15239 = !DILocation(line: 3499, column: 31, scope: !15235)
!15240 = !DILocation(line: 3499, column: 30, scope: !15235)
!15241 = !DILocation(line: 3499, column: 27, scope: !15235)
!15242 = !DILocation(line: 3501, column: 8, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 3501, column: 8)
!15244 = !DILocation(line: 3501, column: 13, scope: !15243)
!15245 = !DILocation(line: 3501, column: 8, scope: !15235)
!15246 = !DILocation(line: 3503, column: 9, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3503, column: 9)
!15248 = distinct !DILexicalBlock(scope: !15243, file: !3, line: 3501, column: 21)
!15249 = !DILocation(line: 3503, column: 14, scope: !15247)
!15250 = !DILocation(line: 3503, column: 9, scope: !15248)
!15251 = !DILocation(line: 3503, column: 33, scope: !15247)
!15252 = !DILocation(line: 3503, column: 38, scope: !15247)
!15253 = !DILocation(line: 3504, column: 9, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3504, column: 9)
!15255 = !DILocation(line: 3504, column: 14, scope: !15254)
!15256 = !DILocation(line: 3504, column: 9, scope: !15248)
!15257 = !DILocation(line: 3504, column: 33, scope: !15254)
!15258 = !DILocation(line: 3504, column: 38, scope: !15254)
!15259 = !DILocation(line: 3505, column: 9, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3505, column: 9)
!15261 = !DILocation(line: 3505, column: 14, scope: !15260)
!15262 = !DILocation(line: 3505, column: 9, scope: !15248)
!15263 = !DILocation(line: 3505, column: 33, scope: !15260)
!15264 = !DILocation(line: 3505, column: 38, scope: !15260)
!15265 = !DILocation(line: 3506, column: 9, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 3506, column: 9)
!15267 = !DILocation(line: 3506, column: 14, scope: !15266)
!15268 = !DILocation(line: 3506, column: 9, scope: !15248)
!15269 = !DILocation(line: 3506, column: 33, scope: !15266)
!15270 = !DILocation(line: 3506, column: 38, scope: !15266)
!15271 = !DILocation(line: 3507, column: 4, scope: !15248)
!15272 = !DILocation(line: 3508, column: 13, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15243, file: !3, line: 3508, column: 13)
!15274 = !DILocation(line: 3508, column: 19, scope: !15273)
!15275 = !DILocation(line: 3508, column: 26, scope: !15273)
!15276 = !DILocation(line: 3508, column: 29, scope: !15273)
!15277 = !DILocation(line: 3508, column: 36, scope: !15273)
!15278 = !DILocation(line: 3508, column: 43, scope: !15273)
!15279 = !DILocation(line: 3508, column: 47, scope: !15273)
!15280 = !DILocation(line: 3508, column: 50, scope: !15273)
!15281 = !DILocation(line: 3508, column: 55, scope: !15273)
!15282 = !DILocation(line: 3508, column: 13, scope: !15243)
!15283 = !DILocation(line: 3509, column: 16, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 3508, column: 63)
!15285 = !DILocation(line: 3509, column: 20, scope: !15284)
!15286 = !DILocation(line: 3509, column: 5, scope: !15284)
!15287 = !DILocation(line: 3510, column: 4, scope: !15284)
!15288 = !DILocation(line: 3513, column: 11, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 3513, column: 10)
!15290 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 3511, column: 9)
!15291 = !DILocation(line: 3513, column: 27, scope: !15289)
!15292 = !DILocation(line: 3513, column: 25, scope: !15289)
!15293 = !DILocation(line: 3513, column: 44, scope: !15289)
!15294 = !DILocation(line: 3513, column: 57, scope: !15289)
!15295 = !DILocation(line: 3513, column: 55, scope: !15289)
!15296 = !DILocation(line: 3513, column: 41, scope: !15289)
!15297 = !DILocation(line: 3513, column: 10, scope: !15290)
!15298 = !DILocation(line: 3514, column: 13, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15289, file: !3, line: 3513, column: 71)
!15300 = !DILocation(line: 3514, column: 6, scope: !15299)
!15301 = !DILocation(line: 3514, column: 11, scope: !15299)
!15302 = !DILocation(line: 3515, column: 13, scope: !15299)
!15303 = !DILocation(line: 3515, column: 6, scope: !15299)
!15304 = !DILocation(line: 3515, column: 11, scope: !15299)
!15305 = !DILocation(line: 3516, column: 5, scope: !15299)
!15306 = !DILocation(line: 3517, column: 11, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 3517, column: 10)
!15308 = !DILocation(line: 3517, column: 27, scope: !15307)
!15309 = !DILocation(line: 3517, column: 25, scope: !15307)
!15310 = !DILocation(line: 3517, column: 44, scope: !15307)
!15311 = !DILocation(line: 3517, column: 57, scope: !15307)
!15312 = !DILocation(line: 3517, column: 55, scope: !15307)
!15313 = !DILocation(line: 3517, column: 41, scope: !15307)
!15314 = !DILocation(line: 3517, column: 10, scope: !15290)
!15315 = !DILocation(line: 3518, column: 13, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15307, file: !3, line: 3517, column: 71)
!15317 = !DILocation(line: 3518, column: 6, scope: !15316)
!15318 = !DILocation(line: 3518, column: 11, scope: !15316)
!15319 = !DILocation(line: 3519, column: 13, scope: !15316)
!15320 = !DILocation(line: 3519, column: 6, scope: !15316)
!15321 = !DILocation(line: 3519, column: 11, scope: !15316)
!15322 = !DILocation(line: 3520, column: 5, scope: !15316)
!15323 = !DILocation(line: 3522, column: 4, scope: !15235)
!15324 = !DILocation(line: 3524, column: 2, scope: !15230)
!15325 = !DILocation(line: 3497, column: 46, scope: !15226)
!15326 = !DILocation(line: 3497, column: 53, scope: !15226)
!15327 = !DILocation(line: 3497, column: 44, scope: !15226)
!15328 = !DILocation(line: 3497, column: 2, scope: !15226)
!15329 = distinct !{!15329, !15227, !15330}
!15330 = !DILocation(line: 3524, column: 2, scope: !15220)
!15331 = !DILocation(line: 3525, column: 1, scope: !15189)
!15332 = distinct !DISubprogram(name: "vergzvlak", scope: !3, file: !3, line: 3731, type: !15333, scopeLine: 3732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15333 = !DISubroutineType(types: !15334)
!15334 = !{!29, !15335, !15335}
!15335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15336, size: 64)
!15336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15337 = !DILocalVariable(name: "a1", arg: 1, scope: !15332, file: !3, line: 3731, type: !15335)
!15338 = !DILocation(line: 3731, column: 34, scope: !15332)
!15339 = !DILocalVariable(name: "a2", arg: 2, scope: !15332, file: !3, line: 3731, type: !15335)
!15340 = !DILocation(line: 3731, column: 50, scope: !15332)
!15341 = !DILocalVariable(name: "r1", scope: !15332, file: !3, line: 3733, type: !15342)
!15342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15343, size: 64)
!15343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14004)
!15344 = !DILocation(line: 3733, column: 20, scope: !15332)
!15345 = !DILocation(line: 3733, column: 25, scope: !15332)
!15346 = !DILocalVariable(name: "r2", scope: !15332, file: !3, line: 3733, type: !15342)
!15347 = !DILocation(line: 3733, column: 30, scope: !15332)
!15348 = !DILocation(line: 3733, column: 35, scope: !15332)
!15349 = !DILocation(line: 3735, column: 6, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15332, file: !3, line: 3735, column: 6)
!15351 = !DILocation(line: 3735, column: 10, scope: !15350)
!15352 = !DILocation(line: 3735, column: 14, scope: !15350)
!15353 = !DILocation(line: 3735, column: 18, scope: !15350)
!15354 = !DILocation(line: 3735, column: 12, scope: !15350)
!15355 = !DILocation(line: 3735, column: 6, scope: !15332)
!15356 = !DILocation(line: 3735, column: 21, scope: !15350)
!15357 = !DILocation(line: 3736, column: 11, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 3736, column: 11)
!15359 = !DILocation(line: 3736, column: 15, scope: !15358)
!15360 = !DILocation(line: 3736, column: 19, scope: !15358)
!15361 = !DILocation(line: 3736, column: 23, scope: !15358)
!15362 = !DILocation(line: 3736, column: 17, scope: !15358)
!15363 = !DILocation(line: 3736, column: 11, scope: !15350)
!15364 = !DILocation(line: 3736, column: 26, scope: !15358)
!15365 = !DILocation(line: 3737, column: 2, scope: !15332)
!15366 = !DILocation(line: 3738, column: 1, scope: !15332)
!15367 = distinct !DISubprogram(name: "add_transp_obindex", scope: !3, file: !3, line: 3527, type: !15368, scopeLine: 3528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15368 = !DISubroutineType(types: !15369)
!15369 = !{null, !5618, !29, !4588}
!15370 = !DILocalVariable(name: "rl", arg: 1, scope: !15367, file: !3, line: 3527, type: !5618)
!15371 = !DILocation(line: 3527, column: 45, scope: !15367)
!15372 = !DILocalVariable(name: "offset", arg: 2, scope: !15367, file: !3, line: 3527, type: !29)
!15373 = !DILocation(line: 3527, column: 53, scope: !15367)
!15374 = !DILocalVariable(name: "ob", arg: 3, scope: !15367, file: !3, line: 3527, type: !4588)
!15375 = !DILocation(line: 3527, column: 69, scope: !15367)
!15376 = !DILocalVariable(name: "rpass", scope: !15367, file: !3, line: 3529, type: !15203)
!15377 = !DILocation(line: 3529, column: 14, scope: !15367)
!15378 = !DILocation(line: 3531, column: 14, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15367, file: !3, line: 3531, column: 2)
!15380 = !DILocation(line: 3531, column: 18, scope: !15379)
!15381 = !DILocation(line: 3531, column: 25, scope: !15379)
!15382 = !DILocation(line: 3531, column: 12, scope: !15379)
!15383 = !DILocation(line: 3531, column: 7, scope: !15379)
!15384 = !DILocation(line: 3531, column: 32, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 3531, column: 2)
!15386 = !DILocation(line: 3531, column: 2, scope: !15379)
!15387 = !DILocation(line: 3532, column: 7, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !3, line: 3532, column: 7)
!15389 = distinct !DILexicalBlock(scope: !15385, file: !3, line: 3531, column: 59)
!15390 = !DILocation(line: 3532, column: 14, scope: !15388)
!15391 = !DILocation(line: 3532, column: 23, scope: !15388)
!15392 = !DILocation(line: 3532, column: 7, scope: !15389)
!15393 = !DILocalVariable(name: "fp", scope: !15394, file: !3, line: 3533, type: !31)
!15394 = distinct !DILexicalBlock(scope: !15388, file: !3, line: 3532, column: 44)
!15395 = !DILocation(line: 3533, column: 11, scope: !15394)
!15396 = !DILocation(line: 3533, column: 15, scope: !15394)
!15397 = !DILocation(line: 3533, column: 22, scope: !15394)
!15398 = !DILocation(line: 3533, column: 29, scope: !15394)
!15399 = !DILocation(line: 3533, column: 27, scope: !15394)
!15400 = !DILocation(line: 3534, column: 16, scope: !15394)
!15401 = !DILocation(line: 3534, column: 20, scope: !15394)
!15402 = !DILocation(line: 3534, column: 9, scope: !15394)
!15403 = !DILocation(line: 3534, column: 5, scope: !15394)
!15404 = !DILocation(line: 3534, column: 7, scope: !15394)
!15405 = !DILocation(line: 3535, column: 4, scope: !15394)
!15406 = !DILocation(line: 3537, column: 2, scope: !15389)
!15407 = !DILocation(line: 3531, column: 46, scope: !15385)
!15408 = !DILocation(line: 3531, column: 53, scope: !15385)
!15409 = !DILocation(line: 3531, column: 44, scope: !15385)
!15410 = !DILocation(line: 3531, column: 2, scope: !15385)
!15411 = distinct !{!15411, !15386, !15412}
!15412 = !DILocation(line: 3537, column: 2, scope: !15379)
!15413 = !DILocation(line: 3538, column: 1, scope: !15367)
!15414 = distinct !DISubprogram(name: "add_transp_material_index", scope: !3, file: !3, line: 3540, type: !15415, scopeLine: 3541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{null, !5618, !29, !5659}
!15417 = !DILocalVariable(name: "rl", arg: 1, scope: !15414, file: !3, line: 3540, type: !5618)
!15418 = !DILocation(line: 3540, column: 52, scope: !15414)
!15419 = !DILocalVariable(name: "offset", arg: 2, scope: !15414, file: !3, line: 3540, type: !29)
!15420 = !DILocation(line: 3540, column: 60, scope: !15414)
!15421 = !DILocalVariable(name: "mat", arg: 3, scope: !15414, file: !3, line: 3540, type: !5659)
!15422 = !DILocation(line: 3540, column: 78, scope: !15414)
!15423 = !DILocalVariable(name: "rpass", scope: !15414, file: !3, line: 3542, type: !15203)
!15424 = !DILocation(line: 3542, column: 14, scope: !15414)
!15425 = !DILocation(line: 3544, column: 14, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15414, file: !3, line: 3544, column: 2)
!15427 = !DILocation(line: 3544, column: 18, scope: !15426)
!15428 = !DILocation(line: 3544, column: 25, scope: !15426)
!15429 = !DILocation(line: 3544, column: 12, scope: !15426)
!15430 = !DILocation(line: 3544, column: 7, scope: !15426)
!15431 = !DILocation(line: 3544, column: 32, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 3544, column: 2)
!15433 = !DILocation(line: 3544, column: 2, scope: !15426)
!15434 = !DILocation(line: 3545, column: 7, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 3545, column: 7)
!15436 = distinct !DILexicalBlock(scope: !15432, file: !3, line: 3544, column: 59)
!15437 = !DILocation(line: 3545, column: 14, scope: !15435)
!15438 = !DILocation(line: 3545, column: 23, scope: !15435)
!15439 = !DILocation(line: 3545, column: 7, scope: !15436)
!15440 = !DILocalVariable(name: "fp", scope: !15441, file: !3, line: 3546, type: !31)
!15441 = distinct !DILexicalBlock(scope: !15435, file: !3, line: 3545, column: 44)
!15442 = !DILocation(line: 3546, column: 11, scope: !15441)
!15443 = !DILocation(line: 3546, column: 15, scope: !15441)
!15444 = !DILocation(line: 3546, column: 22, scope: !15441)
!15445 = !DILocation(line: 3546, column: 29, scope: !15441)
!15446 = !DILocation(line: 3546, column: 27, scope: !15441)
!15447 = !DILocation(line: 3547, column: 16, scope: !15441)
!15448 = !DILocation(line: 3547, column: 21, scope: !15441)
!15449 = !DILocation(line: 3547, column: 9, scope: !15441)
!15450 = !DILocation(line: 3547, column: 5, scope: !15441)
!15451 = !DILocation(line: 3547, column: 7, scope: !15441)
!15452 = !DILocation(line: 3548, column: 4, scope: !15441)
!15453 = !DILocation(line: 3550, column: 2, scope: !15436)
!15454 = !DILocation(line: 3544, column: 46, scope: !15432)
!15455 = !DILocation(line: 3544, column: 53, scope: !15432)
!15456 = !DILocation(line: 3544, column: 44, scope: !15432)
!15457 = !DILocation(line: 3544, column: 2, scope: !15432)
!15458 = distinct !{!15458, !15433, !15459}
!15459 = !DILocation(line: 3550, column: 2, scope: !15426)
!15460 = !DILocation(line: 3551, column: 1, scope: !15414)
!15461 = distinct !DISubprogram(name: "shade_tra_samples", scope: !3, file: !3, line: 3854, type: !15462, scopeLine: 3855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15462 = !DISubroutineType(types: !15463)
!15463 = !{!29, !15464, !14018, !29, !29, !15465, !29}
!15464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13808, size: 64)
!15465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14004, size: 64)
!15466 = !DILocalVariable(name: "ssamp", arg: 1, scope: !15461, file: !3, line: 3854, type: !15464)
!15467 = !DILocation(line: 3854, column: 43, scope: !15461)
!15468 = !DILocalVariable(name: "cache", arg: 2, scope: !15461, file: !3, line: 3854, type: !14018)
!15469 = !DILocation(line: 3854, column: 68, scope: !15461)
!15470 = !DILocalVariable(name: "x", arg: 3, scope: !15461, file: !3, line: 3854, type: !29)
!15471 = !DILocation(line: 3854, column: 79, scope: !15461)
!15472 = !DILocalVariable(name: "y", arg: 4, scope: !15461, file: !3, line: 3854, type: !29)
!15473 = !DILocation(line: 3854, column: 86, scope: !15461)
!15474 = !DILocalVariable(name: "row", arg: 5, scope: !15461, file: !3, line: 3854, type: !15465)
!15475 = !DILocation(line: 3854, column: 101, scope: !15461)
!15476 = !DILocalVariable(name: "addpassflag", arg: 6, scope: !15461, file: !3, line: 3854, type: !29)
!15477 = !DILocation(line: 3854, column: 110, scope: !15461)
!15478 = !DILocation(line: 3856, column: 6, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 3856, column: 6)
!15480 = !DILocation(line: 3856, column: 11, scope: !15479)
!15481 = !DILocation(line: 3856, column: 19, scope: !15479)
!15482 = !DILocation(line: 3856, column: 6, scope: !15461)
!15483 = !DILocation(line: 3857, column: 24, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15479, file: !3, line: 3856, column: 26)
!15485 = !DILocation(line: 3857, column: 31, scope: !15484)
!15486 = !DILocation(line: 3857, column: 38, scope: !15484)
!15487 = !DILocation(line: 3857, column: 41, scope: !15484)
!15488 = !DILocation(line: 3857, column: 44, scope: !15484)
!15489 = !DILocation(line: 3857, column: 49, scope: !15484)
!15490 = !DILocation(line: 3857, column: 3, scope: !15484)
!15491 = !DILocation(line: 3858, column: 3, scope: !15484)
!15492 = !DILocation(line: 3861, column: 25, scope: !15461)
!15493 = !DILocation(line: 3861, column: 32, scope: !15461)
!15494 = !DILocation(line: 3861, column: 35, scope: !15461)
!15495 = !DILocation(line: 3861, column: 38, scope: !15461)
!15496 = !DILocation(line: 3861, column: 43, scope: !15461)
!15497 = !DILocation(line: 3861, column: 46, scope: !15461)
!15498 = !DILocation(line: 3861, column: 51, scope: !15461)
!15499 = !DILocation(line: 3861, column: 56, scope: !15461)
!15500 = !DILocation(line: 3861, column: 61, scope: !15461)
!15501 = !DILocation(line: 3861, column: 64, scope: !15461)
!15502 = !DILocation(line: 3861, column: 69, scope: !15461)
!15503 = !DILocation(line: 3861, column: 2, scope: !15461)
!15504 = !DILocation(line: 3863, column: 6, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 3863, column: 6)
!15506 = !DILocation(line: 3863, column: 13, scope: !15505)
!15507 = !DILocation(line: 3863, column: 6, scope: !15461)
!15508 = !DILocalVariable(name: "shi", scope: !15509, file: !3, line: 3864, type: !15510)
!15509 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3863, column: 18)
!15510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13817, size: 64)
!15511 = !DILocation(line: 3864, column: 15, scope: !15509)
!15512 = !DILocation(line: 3864, column: 20, scope: !15509)
!15513 = !DILocation(line: 3864, column: 27, scope: !15509)
!15514 = !DILocalVariable(name: "shr", scope: !15509, file: !3, line: 3865, type: !15515)
!15515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13960, size: 64)
!15516 = !DILocation(line: 3865, column: 16, scope: !15509)
!15517 = !DILocation(line: 3865, column: 21, scope: !15509)
!15518 = !DILocation(line: 3865, column: 28, scope: !15509)
!15519 = !DILocalVariable(name: "samp", scope: !15509, file: !3, line: 3866, type: !29)
!15520 = !DILocation(line: 3866, column: 7, scope: !15509)
!15521 = !DILocation(line: 3869, column: 23, scope: !15509)
!15522 = !DILocation(line: 3869, column: 3, scope: !15509)
!15523 = !DILocation(line: 3872, column: 7, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 3872, column: 7)
!15525 = !DILocation(line: 3872, column: 12, scope: !15524)
!15526 = !DILocation(line: 3872, column: 21, scope: !15524)
!15527 = !DILocation(line: 3872, column: 7, scope: !15509)
!15528 = !DILocation(line: 3873, column: 13, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !3, line: 3873, column: 4)
!15530 = distinct !DILexicalBlock(scope: !15524, file: !3, line: 3872, column: 72)
!15531 = !DILocation(line: 3873, column: 9, scope: !15529)
!15532 = !DILocation(line: 3873, column: 17, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 3873, column: 4)
!15534 = !DILocation(line: 3873, column: 22, scope: !15533)
!15535 = !DILocation(line: 3873, column: 29, scope: !15533)
!15536 = !DILocation(line: 3873, column: 21, scope: !15533)
!15537 = !DILocation(line: 3873, column: 4, scope: !15529)
!15538 = !DILocation(line: 3874, column: 33, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15533, file: !3, line: 3873, column: 56)
!15540 = !DILocation(line: 3874, column: 5, scope: !15539)
!15541 = !DILocation(line: 3875, column: 26, scope: !15539)
!15542 = !DILocation(line: 3875, column: 31, scope: !15539)
!15543 = !DILocation(line: 3875, column: 5, scope: !15539)
!15544 = !DILocation(line: 3878, column: 11, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15539, file: !3, line: 3878, column: 9)
!15546 = !DILocation(line: 3878, column: 9, scope: !15545)
!15547 = !DILocation(line: 3878, column: 16, scope: !15545)
!15548 = !DILocation(line: 3878, column: 9, scope: !15539)
!15549 = !DILocation(line: 3879, column: 10, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15545, file: !3, line: 3879, column: 10)
!15551 = !DILocation(line: 3879, column: 15, scope: !15550)
!15552 = !DILocation(line: 3879, column: 23, scope: !15550)
!15553 = !DILocation(line: 3879, column: 10, scope: !15545)
!15554 = !DILocation(line: 3880, column: 22, scope: !15550)
!15555 = !DILocation(line: 3880, column: 27, scope: !15550)
!15556 = !DILocation(line: 3880, column: 32, scope: !15550)
!15557 = !DILocation(line: 3880, column: 42, scope: !15550)
!15558 = !DILocation(line: 3880, column: 47, scope: !15550)
!15559 = !DILocation(line: 3880, column: 7, scope: !15550)
!15560 = !DILocation(line: 3879, column: 25, scope: !15550)
!15561 = !DILocation(line: 3881, column: 4, scope: !15539)
!15562 = !DILocation(line: 3873, column: 38, scope: !15533)
!15563 = !DILocation(line: 3873, column: 45, scope: !15533)
!15564 = !DILocation(line: 3873, column: 52, scope: !15533)
!15565 = !DILocation(line: 3873, column: 4, scope: !15533)
!15566 = distinct !{!15566, !15537, !15567}
!15567 = !DILocation(line: 3881, column: 4, scope: !15529)
!15568 = !DILocation(line: 3882, column: 3, scope: !15530)
!15569 = !DILocation(line: 3883, column: 12, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15524, file: !3, line: 3883, column: 12)
!15571 = !DILocation(line: 3883, column: 17, scope: !15570)
!15572 = !DILocation(line: 3883, column: 26, scope: !15570)
!15573 = !DILocation(line: 3883, column: 12, scope: !15524)
!15574 = !DILocation(line: 3884, column: 13, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 3884, column: 4)
!15576 = distinct !DILexicalBlock(scope: !15570, file: !3, line: 3883, column: 40)
!15577 = !DILocation(line: 3884, column: 9, scope: !15575)
!15578 = !DILocation(line: 3884, column: 17, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15575, file: !3, line: 3884, column: 4)
!15580 = !DILocation(line: 3884, column: 22, scope: !15579)
!15581 = !DILocation(line: 3884, column: 29, scope: !15579)
!15582 = !DILocation(line: 3884, column: 21, scope: !15579)
!15583 = !DILocation(line: 3884, column: 4, scope: !15575)
!15584 = !DILocation(line: 3885, column: 14, scope: !15579)
!15585 = !DILocation(line: 3885, column: 19, scope: !15579)
!15586 = !DILocation(line: 3885, column: 13, scope: !15579)
!15587 = !DILocation(line: 3885, column: 5, scope: !15579)
!15588 = !DILocation(line: 3885, column: 10, scope: !15579)
!15589 = !DILocation(line: 3885, column: 11, scope: !15579)
!15590 = !DILocation(line: 3884, column: 38, scope: !15579)
!15591 = !DILocation(line: 3884, column: 45, scope: !15579)
!15592 = !DILocation(line: 3884, column: 52, scope: !15579)
!15593 = !DILocation(line: 3884, column: 4, scope: !15579)
!15594 = distinct !{!15594, !15583, !15595}
!15595 = !DILocation(line: 3885, column: 23, scope: !15575)
!15596 = !DILocation(line: 3886, column: 3, scope: !15576)
!15597 = !DILocation(line: 3888, column: 3, scope: !15509)
!15598 = !DILocation(line: 3890, column: 2, scope: !15461)
!15599 = !DILocation(line: 3891, column: 1, scope: !15461)
!15600 = distinct !DISubprogram(name: "addtosamp_shr", scope: !3, file: !3, line: 3893, type: !15601, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15601 = !DISubroutineType(types: !15602)
!15602 = !{!29, !15515, !15464, !29}
!15603 = !DILocalVariable(name: "samp_shr", arg: 1, scope: !15600, file: !3, line: 3893, type: !15515)
!15604 = !DILocation(line: 3893, column: 39, scope: !15600)
!15605 = !DILocalVariable(name: "ssamp", arg: 2, scope: !15600, file: !3, line: 3893, type: !15464)
!15606 = !DILocation(line: 3893, column: 62, scope: !15600)
!15607 = !DILocalVariable(name: "addpassflag", arg: 3, scope: !15600, file: !3, line: 3893, type: !29)
!15608 = !DILocation(line: 3893, column: 73, scope: !15600)
!15609 = !DILocalVariable(name: "a", scope: !15600, file: !3, line: 3895, type: !29)
!15610 = !DILocation(line: 3895, column: 6, scope: !15600)
!15611 = !DILocalVariable(name: "sample", scope: !15600, file: !3, line: 3895, type: !29)
!15612 = !DILocation(line: 3895, column: 9, scope: !15600)
!15613 = !DILocalVariable(name: "osa", scope: !15600, file: !3, line: 3895, type: !29)
!15614 = !DILocation(line: 3895, column: 17, scope: !15600)
!15615 = !DILocation(line: 3895, column: 26, scope: !15600)
!15616 = !DILocation(line: 3895, column: 24, scope: !15600)
!15617 = !DILocation(line: 3895, column: 33, scope: !15600)
!15618 = !DILocation(line: 3895, column: 31, scope: !15600)
!15619 = !DILocalVariable(name: "retval", scope: !15600, file: !3, line: 3895, type: !29)
!15620 = !DILocation(line: 3895, column: 42, scope: !15600)
!15621 = !DILocation(line: 3895, column: 51, scope: !15600)
!15622 = !DILocation(line: 3897, column: 8, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15600, file: !3, line: 3897, column: 2)
!15624 = !DILocation(line: 3897, column: 7, scope: !15623)
!15625 = !DILocation(line: 3897, column: 12, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 3897, column: 2)
!15627 = !DILocation(line: 3897, column: 16, scope: !15626)
!15628 = !DILocation(line: 3897, column: 14, scope: !15626)
!15629 = !DILocation(line: 3897, column: 2, scope: !15623)
!15630 = !DILocalVariable(name: "shi", scope: !15631, file: !3, line: 3898, type: !15510)
!15631 = distinct !DILexicalBlock(scope: !15626, file: !3, line: 3897, column: 38)
!15632 = !DILocation(line: 3898, column: 15, scope: !15631)
!15633 = !DILocation(line: 3898, column: 20, scope: !15631)
!15634 = !DILocation(line: 3898, column: 27, scope: !15631)
!15635 = !DILocalVariable(name: "shr", scope: !15631, file: !3, line: 3899, type: !15515)
!15636 = !DILocation(line: 3899, column: 16, scope: !15631)
!15637 = !DILocation(line: 3899, column: 21, scope: !15631)
!15638 = !DILocation(line: 3899, column: 28, scope: !15631)
!15639 = !DILocation(line: 3901, column: 14, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 3901, column: 3)
!15641 = !DILocation(line: 3901, column: 8, scope: !15640)
!15642 = !DILocation(line: 3901, column: 18, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15640, file: !3, line: 3901, column: 3)
!15644 = !DILocation(line: 3901, column: 25, scope: !15643)
!15645 = !DILocation(line: 3901, column: 32, scope: !15643)
!15646 = !DILocation(line: 3901, column: 24, scope: !15643)
!15647 = !DILocation(line: 3901, column: 3, scope: !15640)
!15648 = !DILocation(line: 3903, column: 8, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 3903, column: 8)
!15650 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 3901, column: 61)
!15651 = !DILocation(line: 3903, column: 13, scope: !15649)
!15652 = !DILocation(line: 3903, column: 24, scope: !15649)
!15653 = !DILocation(line: 3903, column: 22, scope: !15649)
!15654 = !DILocation(line: 3903, column: 18, scope: !15649)
!15655 = !DILocation(line: 3903, column: 8, scope: !15650)
!15656 = !DILocalVariable(name: "fac", scope: !15657, file: !3, line: 3904, type: !21)
!15657 = distinct !DILexicalBlock(scope: !15649, file: !3, line: 3903, column: 28)
!15658 = !DILocation(line: 3904, column: 11, scope: !15657)
!15659 = !DILocation(line: 3904, column: 24, scope: !15657)
!15660 = !DILocation(line: 3904, column: 34, scope: !15657)
!15661 = !DILocation(line: 3904, column: 22, scope: !15657)
!15662 = !DILocation(line: 3904, column: 47, scope: !15657)
!15663 = !DILocation(line: 3904, column: 52, scope: !15657)
!15664 = !DILocation(line: 3904, column: 46, scope: !15657)
!15665 = !DILocation(line: 3906, column: 24, scope: !15657)
!15666 = !DILocation(line: 3906, column: 34, scope: !15657)
!15667 = !DILocation(line: 3906, column: 44, scope: !15657)
!15668 = !DILocation(line: 3906, column: 49, scope: !15657)
!15669 = !DILocation(line: 3906, column: 5, scope: !15657)
!15670 = !DILocation(line: 3908, column: 26, scope: !15657)
!15671 = !DILocation(line: 3908, column: 36, scope: !15657)
!15672 = !DILocation(line: 3908, column: 39, scope: !15657)
!15673 = !DILocation(line: 3908, column: 44, scope: !15657)
!15674 = !DILocation(line: 3908, column: 19, scope: !15657)
!15675 = !DILocation(line: 3908, column: 5, scope: !15657)
!15676 = !DILocation(line: 3908, column: 15, scope: !15657)
!15677 = !DILocation(line: 3908, column: 17, scope: !15657)
!15678 = !DILocation(line: 3910, column: 9, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 3910, column: 9)
!15680 = !DILocation(line: 3910, column: 21, scope: !15679)
!15681 = !DILocation(line: 3910, column: 9, scope: !15657)
!15682 = !DILocation(line: 3911, column: 17, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15679, file: !3, line: 3910, column: 40)
!15684 = !DILocation(line: 3911, column: 27, scope: !15683)
!15685 = !DILocation(line: 3911, column: 37, scope: !15683)
!15686 = !DILocation(line: 3911, column: 42, scope: !15683)
!15687 = !DILocation(line: 3911, column: 6, scope: !15683)
!15688 = !DILocation(line: 3912, column: 5, scope: !15683)
!15689 = !DILocation(line: 3914, column: 9, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 3914, column: 9)
!15691 = !DILocation(line: 3914, column: 21, scope: !15690)
!15692 = !DILocation(line: 3914, column: 9, scope: !15657)
!15693 = !DILocation(line: 3916, column: 10, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3916, column: 10)
!15695 = distinct !DILexicalBlock(scope: !15690, file: !3, line: 3914, column: 43)
!15696 = !DILocation(line: 3916, column: 22, scope: !15694)
!15697 = !DILocation(line: 3916, column: 10, scope: !15695)
!15698 = !DILocation(line: 3917, column: 26, scope: !15694)
!15699 = !DILocation(line: 3917, column: 36, scope: !15694)
!15700 = !DILocation(line: 3917, column: 41, scope: !15694)
!15701 = !DILocation(line: 3917, column: 46, scope: !15694)
!15702 = !DILocation(line: 3917, column: 7, scope: !15694)
!15703 = !DILocation(line: 3919, column: 10, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3919, column: 10)
!15705 = !DILocation(line: 3919, column: 22, scope: !15704)
!15706 = !DILocation(line: 3919, column: 10, scope: !15695)
!15707 = !DILocation(line: 3920, column: 20, scope: !15704)
!15708 = !DILocation(line: 3920, column: 30, scope: !15704)
!15709 = !DILocation(line: 3920, column: 35, scope: !15704)
!15710 = !DILocation(line: 3920, column: 40, scope: !15704)
!15711 = !DILocation(line: 3920, column: 45, scope: !15704)
!15712 = !DILocation(line: 3920, column: 7, scope: !15704)
!15713 = !DILocation(line: 3922, column: 10, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3922, column: 10)
!15715 = !DILocation(line: 3922, column: 22, scope: !15714)
!15716 = !DILocation(line: 3922, column: 10, scope: !15695)
!15717 = !DILocation(line: 3923, column: 20, scope: !15714)
!15718 = !DILocation(line: 3923, column: 30, scope: !15714)
!15719 = !DILocation(line: 3923, column: 36, scope: !15714)
!15720 = !DILocation(line: 3923, column: 41, scope: !15714)
!15721 = !DILocation(line: 3923, column: 47, scope: !15714)
!15722 = !DILocation(line: 3923, column: 7, scope: !15714)
!15723 = !DILocation(line: 3925, column: 10, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3925, column: 10)
!15725 = !DILocation(line: 3925, column: 22, scope: !15724)
!15726 = !DILocation(line: 3925, column: 10, scope: !15695)
!15727 = !DILocation(line: 3926, column: 20, scope: !15724)
!15728 = !DILocation(line: 3926, column: 30, scope: !15724)
!15729 = !DILocation(line: 3926, column: 36, scope: !15724)
!15730 = !DILocation(line: 3926, column: 41, scope: !15724)
!15731 = !DILocation(line: 3926, column: 47, scope: !15724)
!15732 = !DILocation(line: 3926, column: 7, scope: !15724)
!15733 = !DILocation(line: 3928, column: 10, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3928, column: 10)
!15735 = !DILocation(line: 3928, column: 22, scope: !15734)
!15736 = !DILocation(line: 3928, column: 10, scope: !15695)
!15737 = !DILocation(line: 3929, column: 20, scope: !15734)
!15738 = !DILocation(line: 3929, column: 30, scope: !15734)
!15739 = !DILocation(line: 3929, column: 36, scope: !15734)
!15740 = !DILocation(line: 3929, column: 41, scope: !15734)
!15741 = !DILocation(line: 3929, column: 47, scope: !15734)
!15742 = !DILocation(line: 3929, column: 7, scope: !15734)
!15743 = !DILocation(line: 3931, column: 10, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3931, column: 10)
!15745 = !DILocation(line: 3931, column: 22, scope: !15744)
!15746 = !DILocation(line: 3931, column: 10, scope: !15695)
!15747 = !DILocation(line: 3932, column: 20, scope: !15744)
!15748 = !DILocation(line: 3932, column: 30, scope: !15744)
!15749 = !DILocation(line: 3932, column: 36, scope: !15744)
!15750 = !DILocation(line: 3932, column: 41, scope: !15744)
!15751 = !DILocation(line: 3932, column: 47, scope: !15744)
!15752 = !DILocation(line: 3932, column: 7, scope: !15744)
!15753 = !DILocation(line: 3934, column: 10, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3934, column: 10)
!15755 = !DILocation(line: 3934, column: 22, scope: !15754)
!15756 = !DILocation(line: 3934, column: 10, scope: !15695)
!15757 = !DILocation(line: 3935, column: 20, scope: !15754)
!15758 = !DILocation(line: 3935, column: 30, scope: !15754)
!15759 = !DILocation(line: 3935, column: 34, scope: !15754)
!15760 = !DILocation(line: 3935, column: 39, scope: !15754)
!15761 = !DILocation(line: 3935, column: 43, scope: !15754)
!15762 = !DILocation(line: 3935, column: 7, scope: !15754)
!15763 = !DILocation(line: 3937, column: 10, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3937, column: 10)
!15765 = !DILocation(line: 3937, column: 22, scope: !15764)
!15766 = !DILocation(line: 3937, column: 10, scope: !15695)
!15767 = !DILocation(line: 3938, column: 20, scope: !15764)
!15768 = !DILocation(line: 3938, column: 30, scope: !15764)
!15769 = !DILocation(line: 3938, column: 35, scope: !15764)
!15770 = !DILocation(line: 3938, column: 40, scope: !15764)
!15771 = !DILocation(line: 3938, column: 45, scope: !15764)
!15772 = !DILocation(line: 3938, column: 7, scope: !15764)
!15773 = !DILocation(line: 3940, column: 10, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3940, column: 10)
!15775 = !DILocation(line: 3940, column: 22, scope: !15774)
!15776 = !DILocation(line: 3940, column: 10, scope: !15695)
!15777 = !DILocation(line: 3941, column: 20, scope: !15774)
!15778 = !DILocation(line: 3941, column: 30, scope: !15774)
!15779 = !DILocation(line: 3941, column: 40, scope: !15774)
!15780 = !DILocation(line: 3941, column: 45, scope: !15774)
!15781 = !DILocation(line: 3941, column: 55, scope: !15774)
!15782 = !DILocation(line: 3941, column: 7, scope: !15774)
!15783 = !DILocation(line: 3943, column: 10, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3943, column: 10)
!15785 = !DILocation(line: 3943, column: 22, scope: !15784)
!15786 = !DILocation(line: 3943, column: 10, scope: !15695)
!15787 = !DILocation(line: 3944, column: 20, scope: !15784)
!15788 = !DILocation(line: 3944, column: 30, scope: !15784)
!15789 = !DILocation(line: 3944, column: 36, scope: !15784)
!15790 = !DILocation(line: 3944, column: 41, scope: !15784)
!15791 = !DILocation(line: 3944, column: 47, scope: !15784)
!15792 = !DILocation(line: 3944, column: 7, scope: !15784)
!15793 = !DILocation(line: 3946, column: 10, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3946, column: 10)
!15795 = !DILocation(line: 3946, column: 22, scope: !15794)
!15796 = !DILocation(line: 3946, column: 10, scope: !15695)
!15797 = !DILocation(line: 3947, column: 20, scope: !15794)
!15798 = !DILocation(line: 3947, column: 30, scope: !15794)
!15799 = !DILocation(line: 3947, column: 36, scope: !15794)
!15800 = !DILocation(line: 3947, column: 41, scope: !15794)
!15801 = !DILocation(line: 3947, column: 47, scope: !15794)
!15802 = !DILocation(line: 3947, column: 7, scope: !15794)
!15803 = !DILocation(line: 3949, column: 10, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 3949, column: 10)
!15805 = !DILocation(line: 3949, column: 22, scope: !15804)
!15806 = !DILocation(line: 3949, column: 10, scope: !15695)
!15807 = !DILocation(line: 3950, column: 23, scope: !15804)
!15808 = !DILocation(line: 3950, column: 33, scope: !15804)
!15809 = !DILocation(line: 3950, column: 38, scope: !15804)
!15810 = !DILocation(line: 3950, column: 42, scope: !15804)
!15811 = !DILocation(line: 3950, column: 47, scope: !15804)
!15812 = !DILocation(line: 3950, column: 41, scope: !15804)
!15813 = !DILocation(line: 3950, column: 37, scope: !15804)
!15814 = !DILocation(line: 3950, column: 7, scope: !15804)
!15815 = !DILocation(line: 3950, column: 17, scope: !15804)
!15816 = !DILocation(line: 3950, column: 21, scope: !15804)
!15817 = !DILocation(line: 3952, column: 5, scope: !15695)
!15818 = !DILocation(line: 3953, column: 4, scope: !15657)
!15819 = !DILocation(line: 3954, column: 3, scope: !15650)
!15820 = !DILocation(line: 3901, column: 43, scope: !15643)
!15821 = !DILocation(line: 3901, column: 50, scope: !15643)
!15822 = !DILocation(line: 3901, column: 57, scope: !15643)
!15823 = !DILocation(line: 3901, column: 3, scope: !15643)
!15824 = distinct !{!15824, !15647, !15825}
!15825 = !DILocation(line: 3954, column: 3, scope: !15640)
!15826 = !DILocation(line: 3956, column: 7, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 3956, column: 7)
!15828 = !DILocation(line: 3956, column: 17, scope: !15827)
!15829 = !DILocation(line: 3956, column: 28, scope: !15827)
!15830 = !DILocation(line: 3956, column: 7, scope: !15631)
!15831 = !DILocation(line: 3956, column: 43, scope: !15827)
!15832 = !DILocation(line: 3956, column: 37, scope: !15827)
!15833 = !DILocation(line: 3957, column: 2, scope: !15631)
!15834 = !DILocation(line: 3897, column: 22, scope: !15626)
!15835 = !DILocation(line: 3897, column: 34, scope: !15626)
!15836 = !DILocation(line: 3897, column: 2, scope: !15626)
!15837 = distinct !{!15837, !15629, !15838}
!15838 = !DILocation(line: 3957, column: 2, scope: !15623)
!15839 = !DILocation(line: 3958, column: 9, scope: !15600)
!15840 = !DILocation(line: 3958, column: 2, scope: !15600)
!15841 = distinct !DISubprogram(name: "unref_strand_samples", scope: !3, file: !3, line: 3765, type: !15842, scopeLine: 3766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15842 = !DISubroutineType(types: !15843)
!15843 = !{null, !14018, !15465, !29}
!15844 = !DILocalVariable(name: "cache", arg: 1, scope: !15841, file: !3, line: 3765, type: !14018)
!15845 = !DILocation(line: 3765, column: 52, scope: !15841)
!15846 = !DILocalVariable(name: "row", arg: 2, scope: !15841, file: !3, line: 3765, type: !15465)
!15847 = !DILocation(line: 3765, column: 71, scope: !15841)
!15848 = !DILocalVariable(name: "totface", arg: 3, scope: !15841, file: !3, line: 3765, type: !29)
!15849 = !DILocation(line: 3765, column: 80, scope: !15841)
!15850 = !DILocalVariable(name: "svert", scope: !15841, file: !3, line: 3767, type: !4505)
!15851 = !DILocation(line: 3767, column: 14, scope: !15841)
!15852 = !DILocalVariable(name: "obi", scope: !15841, file: !3, line: 3768, type: !5663)
!15853 = !DILocation(line: 3768, column: 21, scope: !15841)
!15854 = !DILocalVariable(name: "obr", scope: !15841, file: !3, line: 3769, type: !4395)
!15855 = !DILocation(line: 3769, column: 13, scope: !15841)
!15856 = !DILocalVariable(name: "strand", scope: !15841, file: !3, line: 3770, type: !8591)
!15857 = !DILocation(line: 3770, column: 13, scope: !15841)
!15858 = !DILocation(line: 3775, column: 2, scope: !15841)
!15859 = !DILocation(line: 3775, column: 9, scope: !15841)
!15860 = !DILocation(line: 3775, column: 17, scope: !15841)
!15861 = !DILocation(line: 3776, column: 10, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 3775, column: 22)
!15863 = !DILocation(line: 3778, column: 7, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 3778, column: 7)
!15865 = !DILocation(line: 3778, column: 11, scope: !15864)
!15866 = !DILocation(line: 3778, column: 20, scope: !15864)
!15867 = !DILocation(line: 3778, column: 28, scope: !15864)
!15868 = !DILocation(line: 3778, column: 7, scope: !15862)
!15869 = !DILocation(line: 3779, column: 11, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 3778, column: 35)
!15871 = !DILocation(line: 3779, column: 28, scope: !15870)
!15872 = !DILocation(line: 3779, column: 32, scope: !15870)
!15873 = !DILocation(line: 3779, column: 41, scope: !15870)
!15874 = !DILocation(line: 3779, column: 26, scope: !15870)
!15875 = !DILocation(line: 3779, column: 7, scope: !15870)
!15876 = !DILocation(line: 3780, column: 9, scope: !15870)
!15877 = !DILocation(line: 3780, column: 14, scope: !15870)
!15878 = !DILocation(line: 3780, column: 7, scope: !15870)
!15879 = !DILocation(line: 3781, column: 31, scope: !15870)
!15880 = !DILocation(line: 3781, column: 36, scope: !15870)
!15881 = !DILocation(line: 3781, column: 40, scope: !15870)
!15882 = !DILocation(line: 3781, column: 49, scope: !15870)
!15883 = !DILocation(line: 3781, column: 50, scope: !15870)
!15884 = !DILocation(line: 3781, column: 12, scope: !15870)
!15885 = !DILocation(line: 3781, column: 10, scope: !15870)
!15886 = !DILocation(line: 3782, column: 11, scope: !15870)
!15887 = !DILocation(line: 3782, column: 19, scope: !15870)
!15888 = !DILocation(line: 3782, column: 26, scope: !15870)
!15889 = !DILocation(line: 3782, column: 30, scope: !15870)
!15890 = !DILocation(line: 3782, column: 39, scope: !15870)
!15891 = !DILocation(line: 3782, column: 24, scope: !15870)
!15892 = !DILocation(line: 3782, column: 9, scope: !15870)
!15893 = !DILocation(line: 3784, column: 23, scope: !15870)
!15894 = !DILocation(line: 3784, column: 30, scope: !15870)
!15895 = !DILocation(line: 3784, column: 35, scope: !15870)
!15896 = !DILocation(line: 3784, column: 4, scope: !15870)
!15897 = !DILocation(line: 3785, column: 23, scope: !15870)
!15898 = !DILocation(line: 3785, column: 30, scope: !15870)
!15899 = !DILocation(line: 3785, column: 35, scope: !15870)
!15900 = !DILocation(line: 3785, column: 40, scope: !15870)
!15901 = !DILocation(line: 3785, column: 4, scope: !15870)
!15902 = !DILocation(line: 3786, column: 3, scope: !15870)
!15903 = distinct !{!15903, !15858, !15904}
!15904 = !DILocation(line: 3787, column: 2, scope: !15841)
!15905 = !DILocation(line: 3788, column: 1, scope: !15841)
!15906 = distinct !DISubprogram(name: "add_transp_passes", scope: !3, file: !3, line: 3657, type: !15907, scopeLine: 3658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{null, !5618, !29, !15515, !21}
!15909 = !DILocalVariable(name: "rl", arg: 1, scope: !15906, file: !3, line: 3657, type: !5618)
!15910 = !DILocation(line: 3657, column: 44, scope: !15906)
!15911 = !DILocalVariable(name: "offset", arg: 2, scope: !15906, file: !3, line: 3657, type: !29)
!15912 = !DILocation(line: 3657, column: 52, scope: !15906)
!15913 = !DILocalVariable(name: "shr", arg: 3, scope: !15906, file: !3, line: 3657, type: !15515)
!15914 = !DILocation(line: 3657, column: 73, scope: !15906)
!15915 = !DILocalVariable(name: "alpha", arg: 4, scope: !15906, file: !3, line: 3657, type: !21)
!15916 = !DILocation(line: 3657, column: 84, scope: !15906)
!15917 = !DILocalVariable(name: "rpass", scope: !15906, file: !3, line: 3659, type: !15203)
!15918 = !DILocation(line: 3659, column: 14, scope: !15906)
!15919 = !DILocation(line: 3661, column: 14, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15906, file: !3, line: 3661, column: 2)
!15921 = !DILocation(line: 3661, column: 18, scope: !15920)
!15922 = !DILocation(line: 3661, column: 25, scope: !15920)
!15923 = !DILocation(line: 3661, column: 12, scope: !15920)
!15924 = !DILocation(line: 3661, column: 7, scope: !15920)
!15925 = !DILocation(line: 3661, column: 32, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15920, file: !3, line: 3661, column: 2)
!15927 = !DILocation(line: 3661, column: 2, scope: !15920)
!15928 = !DILocalVariable(name: "fp", scope: !15929, file: !3, line: 3662, type: !31)
!15929 = distinct !DILexicalBlock(scope: !15926, file: !3, line: 3661, column: 59)
!15930 = !DILocation(line: 3662, column: 10, scope: !15929)
!15931 = !DILocalVariable(name: "col", scope: !15929, file: !3, line: 3662, type: !31)
!15932 = !DILocation(line: 3662, column: 15, scope: !15929)
!15933 = !DILocalVariable(name: "pixsize", scope: !15929, file: !3, line: 3663, type: !29)
!15934 = !DILocation(line: 3663, column: 7, scope: !15929)
!15935 = !DILocation(line: 3665, column: 11, scope: !15929)
!15936 = !DILocation(line: 3665, column: 18, scope: !15929)
!15937 = !DILocation(line: 3665, column: 3, scope: !15929)
!15938 = !DILocation(line: 3667, column: 9, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15929, file: !3, line: 3665, column: 28)
!15940 = !DILocation(line: 3667, column: 16, scope: !15939)
!15941 = !DILocation(line: 3667, column: 23, scope: !15939)
!15942 = !DILocation(line: 3667, column: 21, scope: !15939)
!15943 = !DILocation(line: 3667, column: 7, scope: !15939)
!15944 = !DILocation(line: 3668, column: 9, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15939, file: !3, line: 3668, column: 9)
!15946 = !DILocation(line: 3668, column: 14, scope: !15945)
!15947 = !DILocation(line: 3668, column: 19, scope: !15945)
!15948 = !DILocation(line: 3668, column: 18, scope: !15945)
!15949 = !DILocation(line: 3668, column: 16, scope: !15945)
!15950 = !DILocation(line: 3668, column: 9, scope: !15939)
!15951 = !DILocation(line: 3669, column: 11, scope: !15945)
!15952 = !DILocation(line: 3669, column: 16, scope: !15945)
!15953 = !DILocation(line: 3669, column: 7, scope: !15945)
!15954 = !DILocation(line: 3669, column: 9, scope: !15945)
!15955 = !DILocation(line: 3669, column: 6, scope: !15945)
!15956 = !DILocation(line: 3670, column: 5, scope: !15939)
!15957 = !DILocation(line: 3672, column: 9, scope: !15939)
!15958 = !DILocation(line: 3672, column: 16, scope: !15939)
!15959 = !DILocation(line: 3672, column: 25, scope: !15939)
!15960 = !DILocation(line: 3672, column: 24, scope: !15939)
!15961 = !DILocation(line: 3672, column: 21, scope: !15939)
!15962 = !DILocation(line: 3672, column: 7, scope: !15939)
!15963 = !DILocation(line: 3673, column: 23, scope: !15939)
!15964 = !DILocation(line: 3673, column: 27, scope: !15939)
!15965 = !DILocation(line: 3673, column: 32, scope: !15939)
!15966 = !DILocation(line: 3673, column: 5, scope: !15939)
!15967 = !DILocation(line: 3674, column: 5, scope: !15939)
!15968 = !DILocation(line: 3676, column: 10, scope: !15939)
!15969 = !DILocation(line: 3676, column: 15, scope: !15939)
!15970 = !DILocation(line: 3676, column: 8, scope: !15939)
!15971 = !DILocation(line: 3677, column: 5, scope: !15939)
!15972 = !DILocation(line: 3679, column: 10, scope: !15939)
!15973 = !DILocation(line: 3679, column: 15, scope: !15939)
!15974 = !DILocation(line: 3679, column: 8, scope: !15939)
!15975 = !DILocation(line: 3680, column: 5, scope: !15939)
!15976 = !DILocation(line: 3682, column: 10, scope: !15939)
!15977 = !DILocation(line: 3682, column: 15, scope: !15939)
!15978 = !DILocation(line: 3682, column: 8, scope: !15939)
!15979 = !DILocation(line: 3683, column: 5, scope: !15939)
!15980 = !DILocation(line: 3685, column: 10, scope: !15939)
!15981 = !DILocation(line: 3685, column: 15, scope: !15939)
!15982 = !DILocation(line: 3685, column: 8, scope: !15939)
!15983 = !DILocation(line: 3686, column: 5, scope: !15939)
!15984 = !DILocation(line: 3688, column: 10, scope: !15939)
!15985 = !DILocation(line: 3688, column: 15, scope: !15939)
!15986 = !DILocation(line: 3688, column: 8, scope: !15939)
!15987 = !DILocation(line: 3689, column: 5, scope: !15939)
!15988 = !DILocation(line: 3691, column: 10, scope: !15939)
!15989 = !DILocation(line: 3691, column: 15, scope: !15939)
!15990 = !DILocation(line: 3691, column: 8, scope: !15939)
!15991 = !DILocation(line: 3692, column: 5, scope: !15939)
!15992 = !DILocation(line: 3694, column: 10, scope: !15939)
!15993 = !DILocation(line: 3694, column: 15, scope: !15939)
!15994 = !DILocation(line: 3694, column: 8, scope: !15939)
!15995 = !DILocation(line: 3695, column: 5, scope: !15939)
!15996 = !DILocation(line: 3697, column: 10, scope: !15939)
!15997 = !DILocation(line: 3697, column: 15, scope: !15939)
!15998 = !DILocation(line: 3697, column: 8, scope: !15939)
!15999 = !DILocation(line: 3698, column: 5, scope: !15939)
!16000 = !DILocation(line: 3700, column: 10, scope: !15939)
!16001 = !DILocation(line: 3700, column: 15, scope: !15939)
!16002 = !DILocation(line: 3700, column: 8, scope: !15939)
!16003 = !DILocation(line: 3701, column: 5, scope: !15939)
!16004 = !DILocation(line: 3703, column: 10, scope: !15939)
!16005 = !DILocation(line: 3703, column: 15, scope: !15939)
!16006 = !DILocation(line: 3703, column: 8, scope: !15939)
!16007 = !DILocation(line: 3704, column: 5, scope: !15939)
!16008 = !DILocation(line: 3706, column: 11, scope: !15939)
!16009 = !DILocation(line: 3706, column: 16, scope: !15939)
!16010 = !DILocation(line: 3706, column: 8, scope: !15939)
!16011 = !DILocation(line: 3707, column: 12, scope: !15939)
!16012 = !DILocation(line: 3708, column: 5, scope: !15939)
!16013 = !DILocation(line: 3710, column: 7, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15929, file: !3, line: 3710, column: 7)
!16015 = !DILocation(line: 3710, column: 7, scope: !15929)
!16016 = !DILocation(line: 3712, column: 8, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16014, file: !3, line: 3710, column: 12)
!16018 = !DILocation(line: 3712, column: 15, scope: !16017)
!16019 = !DILocation(line: 3712, column: 22, scope: !16017)
!16020 = !DILocation(line: 3712, column: 30, scope: !16017)
!16021 = !DILocation(line: 3712, column: 29, scope: !16017)
!16022 = !DILocation(line: 3712, column: 20, scope: !16017)
!16023 = !DILocation(line: 3712, column: 6, scope: !16017)
!16024 = !DILocation(line: 3713, column: 11, scope: !16017)
!16025 = !DILocation(line: 3713, column: 26, scope: !16017)
!16026 = !DILocation(line: 3713, column: 25, scope: !16017)
!16027 = !DILocation(line: 3713, column: 33, scope: !16017)
!16028 = !DILocation(line: 3713, column: 32, scope: !16017)
!16029 = !DILocation(line: 3713, column: 18, scope: !16017)
!16030 = !DILocation(line: 3713, column: 4, scope: !16017)
!16031 = !DILocation(line: 3713, column: 9, scope: !16017)
!16032 = !DILocation(line: 3714, column: 8, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 3714, column: 8)
!16034 = !DILocation(line: 3714, column: 15, scope: !16033)
!16035 = !DILocation(line: 3714, column: 8, scope: !16017)
!16036 = !DILocation(line: 3715, column: 12, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16033, file: !3, line: 3714, column: 20)
!16038 = !DILocation(line: 3715, column: 27, scope: !16037)
!16039 = !DILocation(line: 3715, column: 26, scope: !16037)
!16040 = !DILocation(line: 3715, column: 34, scope: !16037)
!16041 = !DILocation(line: 3715, column: 33, scope: !16037)
!16042 = !DILocation(line: 3715, column: 19, scope: !16037)
!16043 = !DILocation(line: 3715, column: 5, scope: !16037)
!16044 = !DILocation(line: 3715, column: 10, scope: !16037)
!16045 = !DILocation(line: 3716, column: 12, scope: !16037)
!16046 = !DILocation(line: 3716, column: 27, scope: !16037)
!16047 = !DILocation(line: 3716, column: 26, scope: !16037)
!16048 = !DILocation(line: 3716, column: 34, scope: !16037)
!16049 = !DILocation(line: 3716, column: 33, scope: !16037)
!16050 = !DILocation(line: 3716, column: 19, scope: !16037)
!16051 = !DILocation(line: 3716, column: 5, scope: !16037)
!16052 = !DILocation(line: 3716, column: 10, scope: !16037)
!16053 = !DILocation(line: 3717, column: 4, scope: !16037)
!16054 = !DILocation(line: 3718, column: 3, scope: !16017)
!16055 = !DILocation(line: 3719, column: 2, scope: !15929)
!16056 = !DILocation(line: 3661, column: 46, scope: !15926)
!16057 = !DILocation(line: 3661, column: 53, scope: !15926)
!16058 = !DILocation(line: 3661, column: 44, scope: !15926)
!16059 = !DILocation(line: 3661, column: 2, scope: !15926)
!16060 = distinct !{!16060, !15927, !16061}
!16061 = !DILocation(line: 3719, column: 2, scope: !15920)
!16062 = !DILocation(line: 3720, column: 1, scope: !15906)
!16063 = distinct !DISubprogram(name: "merge_transp_passes", scope: !3, file: !3, line: 3555, type: !16064, scopeLine: 3556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!16064 = !DISubroutineType(types: !16065)
!16065 = !{null, !5618, !15515}
!16066 = !DILocalVariable(name: "rl", arg: 1, scope: !16063, file: !3, line: 3555, type: !5618)
!16067 = !DILocation(line: 3555, column: 46, scope: !16063)
!16068 = !DILocalVariable(name: "shr", arg: 2, scope: !16063, file: !3, line: 3555, type: !15515)
!16069 = !DILocation(line: 3555, column: 63, scope: !16063)
!16070 = !DILocalVariable(name: "rpass", scope: !16063, file: !3, line: 3557, type: !15203)
!16071 = !DILocation(line: 3557, column: 14, scope: !16063)
!16072 = !DILocalVariable(name: "weight", scope: !16063, file: !3, line: 3558, type: !21)
!16073 = !DILocation(line: 3558, column: 8, scope: !16063)
!16074 = !DILocation(line: 3558, column: 31, scope: !16063)
!16075 = !DILocation(line: 3558, column: 22, scope: !16063)
!16076 = !DILocation(line: 3558, column: 20, scope: !16063)
!16077 = !DILocalVariable(name: "delta", scope: !16063, file: !3, line: 3559, type: !29)
!16078 = !DILocation(line: 3559, column: 6, scope: !16063)
!16079 = !DILocation(line: 3561, column: 14, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 3561, column: 2)
!16081 = !DILocation(line: 3561, column: 18, scope: !16080)
!16082 = !DILocation(line: 3561, column: 25, scope: !16080)
!16083 = !DILocation(line: 3561, column: 12, scope: !16080)
!16084 = !DILocation(line: 3561, column: 7, scope: !16080)
!16085 = !DILocation(line: 3561, column: 32, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16080, file: !3, line: 3561, column: 2)
!16087 = !DILocation(line: 3561, column: 2, scope: !16080)
!16088 = !DILocalVariable(name: "col", scope: !16089, file: !3, line: 3562, type: !31)
!16089 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 3561, column: 59)
!16090 = !DILocation(line: 3562, column: 10, scope: !16089)
!16091 = !DILocalVariable(name: "pixsize", scope: !16089, file: !3, line: 3563, type: !29)
!16092 = !DILocation(line: 3563, column: 7, scope: !16089)
!16093 = !DILocation(line: 3565, column: 11, scope: !16089)
!16094 = !DILocation(line: 3565, column: 18, scope: !16089)
!16095 = !DILocation(line: 3565, column: 3, scope: !16089)
!16096 = !DILocation(line: 3567, column: 10, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16089, file: !3, line: 3565, column: 28)
!16098 = !DILocation(line: 3567, column: 15, scope: !16097)
!16099 = !DILocation(line: 3567, column: 8, scope: !16097)
!16100 = !DILocation(line: 3568, column: 12, scope: !16097)
!16101 = !DILocation(line: 3569, column: 5, scope: !16097)
!16102 = !DILocation(line: 3571, column: 10, scope: !16097)
!16103 = !DILocation(line: 3571, column: 15, scope: !16097)
!16104 = !DILocation(line: 3571, column: 8, scope: !16097)
!16105 = !DILocation(line: 3572, column: 5, scope: !16097)
!16106 = !DILocation(line: 3574, column: 10, scope: !16097)
!16107 = !DILocation(line: 3574, column: 15, scope: !16097)
!16108 = !DILocation(line: 3574, column: 8, scope: !16097)
!16109 = !DILocation(line: 3575, column: 5, scope: !16097)
!16110 = !DILocation(line: 3577, column: 10, scope: !16097)
!16111 = !DILocation(line: 3577, column: 15, scope: !16097)
!16112 = !DILocation(line: 3577, column: 8, scope: !16097)
!16113 = !DILocation(line: 3578, column: 5, scope: !16097)
!16114 = !DILocation(line: 3580, column: 10, scope: !16097)
!16115 = !DILocation(line: 3580, column: 15, scope: !16097)
!16116 = !DILocation(line: 3580, column: 8, scope: !16097)
!16117 = !DILocation(line: 3581, column: 5, scope: !16097)
!16118 = !DILocation(line: 3583, column: 10, scope: !16097)
!16119 = !DILocation(line: 3583, column: 15, scope: !16097)
!16120 = !DILocation(line: 3583, column: 8, scope: !16097)
!16121 = !DILocation(line: 3584, column: 5, scope: !16097)
!16122 = !DILocation(line: 3586, column: 10, scope: !16097)
!16123 = !DILocation(line: 3586, column: 15, scope: !16097)
!16124 = !DILocation(line: 3586, column: 8, scope: !16097)
!16125 = !DILocation(line: 3587, column: 5, scope: !16097)
!16126 = !DILocation(line: 3589, column: 10, scope: !16097)
!16127 = !DILocation(line: 3589, column: 15, scope: !16097)
!16128 = !DILocation(line: 3589, column: 8, scope: !16097)
!16129 = !DILocation(line: 3590, column: 5, scope: !16097)
!16130 = !DILocation(line: 3592, column: 10, scope: !16097)
!16131 = !DILocation(line: 3592, column: 15, scope: !16097)
!16132 = !DILocation(line: 3592, column: 8, scope: !16097)
!16133 = !DILocation(line: 3593, column: 5, scope: !16097)
!16134 = !DILocation(line: 3595, column: 10, scope: !16097)
!16135 = !DILocation(line: 3595, column: 15, scope: !16097)
!16136 = !DILocation(line: 3595, column: 8, scope: !16097)
!16137 = !DILocation(line: 3596, column: 5, scope: !16097)
!16138 = !DILocation(line: 3598, column: 10, scope: !16097)
!16139 = !DILocation(line: 3598, column: 15, scope: !16097)
!16140 = !DILocation(line: 3598, column: 8, scope: !16097)
!16141 = !DILocation(line: 3599, column: 5, scope: !16097)
!16142 = !DILocation(line: 3601, column: 11, scope: !16097)
!16143 = !DILocation(line: 3601, column: 16, scope: !16097)
!16144 = !DILocation(line: 3601, column: 8, scope: !16097)
!16145 = !DILocation(line: 3602, column: 12, scope: !16097)
!16146 = !DILocation(line: 3603, column: 5, scope: !16097)
!16147 = !DILocation(line: 3605, column: 11, scope: !16097)
!16148 = !DILocation(line: 3605, column: 16, scope: !16097)
!16149 = !DILocation(line: 3605, column: 8, scope: !16097)
!16150 = !DILocation(line: 3606, column: 12, scope: !16097)
!16151 = !DILocation(line: 3607, column: 5, scope: !16097)
!16152 = !DILocalVariable(name: "shr_t", scope: !16153, file: !3, line: 3611, type: !15515)
!16153 = distinct !DILexicalBlock(scope: !16097, file: !3, line: 3610, column: 5)
!16154 = !DILocation(line: 3611, column: 19, scope: !16153)
!16155 = !DILocation(line: 3611, column: 26, scope: !16153)
!16156 = !DILocation(line: 3611, column: 29, scope: !16153)
!16157 = !DILocalVariable(name: "fp", scope: !16153, file: !3, line: 3612, type: !31)
!16158 = !DILocation(line: 3612, column: 13, scope: !16153)
!16159 = !DILocation(line: 3612, column: 17, scope: !16153)
!16160 = !DILocation(line: 3612, column: 22, scope: !16153)
!16161 = !DILocalVariable(name: "samp", scope: !16153, file: !3, line: 3613, type: !29)
!16162 = !DILocation(line: 3613, column: 10, scope: !16153)
!16163 = !DILocation(line: 3616, column: 15, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16153, file: !3, line: 3616, column: 6)
!16165 = !DILocation(line: 3616, column: 11, scope: !16164)
!16166 = !DILocation(line: 3616, column: 20, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16164, file: !3, line: 3616, column: 6)
!16168 = !DILocation(line: 3616, column: 27, scope: !16167)
!16169 = !DILocation(line: 3616, column: 25, scope: !16167)
!16170 = !DILocation(line: 3616, column: 24, scope: !16167)
!16171 = !DILocation(line: 3616, column: 6, scope: !16164)
!16172 = !DILocation(line: 3618, column: 11, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 3618, column: 11)
!16174 = distinct !DILexicalBlock(scope: !16167, file: !3, line: 3616, column: 49)
!16175 = !DILocation(line: 3618, column: 18, scope: !16173)
!16176 = !DILocation(line: 3618, column: 30, scope: !16173)
!16177 = !DILocation(line: 3618, column: 11, scope: !16174)
!16178 = !DILocalVariable(name: "speed", scope: !16179, file: !3, line: 3619, type: !88)
!16179 = distinct !DILexicalBlock(scope: !16173, file: !3, line: 3618, column: 38)
!16180 = !DILocation(line: 3619, column: 21, scope: !16179)
!16181 = !DILocation(line: 3619, column: 28, scope: !16179)
!16182 = !DILocation(line: 3619, column: 35, scope: !16179)
!16183 = !DILocation(line: 3621, column: 14, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 3621, column: 13)
!16185 = !DILocation(line: 3621, column: 30, scope: !16184)
!16186 = !DILocation(line: 3621, column: 28, scope: !16184)
!16187 = !DILocation(line: 3621, column: 47, scope: !16184)
!16188 = !DILocation(line: 3621, column: 60, scope: !16184)
!16189 = !DILocation(line: 3621, column: 58, scope: !16184)
!16190 = !DILocation(line: 3621, column: 44, scope: !16184)
!16191 = !DILocation(line: 3621, column: 13, scope: !16179)
!16192 = !DILocation(line: 3622, column: 16, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16184, file: !3, line: 3621, column: 74)
!16194 = !DILocation(line: 3622, column: 9, scope: !16193)
!16195 = !DILocation(line: 3622, column: 14, scope: !16193)
!16196 = !DILocation(line: 3623, column: 16, scope: !16193)
!16197 = !DILocation(line: 3623, column: 9, scope: !16193)
!16198 = !DILocation(line: 3623, column: 14, scope: !16193)
!16199 = !DILocation(line: 3624, column: 8, scope: !16193)
!16200 = !DILocation(line: 3625, column: 14, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 3625, column: 13)
!16202 = !DILocation(line: 3625, column: 30, scope: !16201)
!16203 = !DILocation(line: 3625, column: 28, scope: !16201)
!16204 = !DILocation(line: 3625, column: 47, scope: !16201)
!16205 = !DILocation(line: 3625, column: 60, scope: !16201)
!16206 = !DILocation(line: 3625, column: 58, scope: !16201)
!16207 = !DILocation(line: 3625, column: 44, scope: !16201)
!16208 = !DILocation(line: 3625, column: 13, scope: !16179)
!16209 = !DILocation(line: 3626, column: 16, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16201, file: !3, line: 3625, column: 74)
!16211 = !DILocation(line: 3626, column: 9, scope: !16210)
!16212 = !DILocation(line: 3626, column: 14, scope: !16210)
!16213 = !DILocation(line: 3627, column: 16, scope: !16210)
!16214 = !DILocation(line: 3627, column: 9, scope: !16210)
!16215 = !DILocation(line: 3627, column: 14, scope: !16210)
!16216 = !DILocation(line: 3628, column: 8, scope: !16210)
!16217 = !DILocation(line: 3629, column: 7, scope: !16179)
!16218 = !DILocation(line: 3630, column: 6, scope: !16174)
!16219 = !DILocation(line: 3616, column: 36, scope: !16167)
!16220 = !DILocation(line: 3616, column: 45, scope: !16167)
!16221 = !DILocation(line: 3616, column: 6, scope: !16167)
!16222 = distinct !{!16222, !16171, !16223}
!16223 = !DILocation(line: 3630, column: 6, scope: !16164)
!16224 = !DILocation(line: 3632, column: 5, scope: !16097)
!16225 = !DILocation(line: 3634, column: 7, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16089, file: !3, line: 3634, column: 7)
!16227 = !DILocation(line: 3634, column: 7, scope: !16089)
!16228 = !DILocalVariable(name: "fp", scope: !16229, file: !3, line: 3635, type: !88)
!16229 = distinct !DILexicalBlock(scope: !16226, file: !3, line: 3634, column: 12)
!16230 = !DILocation(line: 3635, column: 17, scope: !16229)
!16231 = !DILocation(line: 3635, column: 21, scope: !16229)
!16232 = !DILocation(line: 3635, column: 25, scope: !16229)
!16233 = !DILocation(line: 3635, column: 24, scope: !16229)
!16234 = !DILocalVariable(name: "samp", scope: !16229, file: !3, line: 3636, type: !29)
!16235 = !DILocation(line: 3636, column: 8, scope: !16229)
!16236 = !DILocation(line: 3638, column: 13, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 3638, column: 4)
!16238 = !DILocation(line: 3638, column: 9, scope: !16237)
!16239 = !DILocation(line: 3638, column: 18, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16237, file: !3, line: 3638, column: 4)
!16241 = !DILocation(line: 3638, column: 25, scope: !16240)
!16242 = !DILocation(line: 3638, column: 23, scope: !16240)
!16243 = !DILocation(line: 3638, column: 22, scope: !16240)
!16244 = !DILocation(line: 3638, column: 4, scope: !16237)
!16245 = !DILocation(line: 3639, column: 14, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16240, file: !3, line: 3638, column: 49)
!16247 = !DILocation(line: 3639, column: 5, scope: !16246)
!16248 = !DILocation(line: 3639, column: 11, scope: !16246)
!16249 = !DILocation(line: 3640, column: 9, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16246, file: !3, line: 3640, column: 9)
!16251 = !DILocation(line: 3640, column: 16, scope: !16250)
!16252 = !DILocation(line: 3640, column: 9, scope: !16246)
!16253 = !DILocation(line: 3641, column: 15, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16250, file: !3, line: 3640, column: 20)
!16255 = !DILocation(line: 3641, column: 6, scope: !16254)
!16256 = !DILocation(line: 3641, column: 12, scope: !16254)
!16257 = !DILocation(line: 3642, column: 15, scope: !16254)
!16258 = !DILocation(line: 3642, column: 6, scope: !16254)
!16259 = !DILocation(line: 3642, column: 12, scope: !16254)
!16260 = !DILocation(line: 3643, column: 10, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16254, file: !3, line: 3643, column: 10)
!16262 = !DILocation(line: 3643, column: 17, scope: !16261)
!16263 = !DILocation(line: 3643, column: 10, scope: !16254)
!16264 = !DILocation(line: 3643, column: 31, scope: !16261)
!16265 = !DILocation(line: 3643, column: 22, scope: !16261)
!16266 = !DILocation(line: 3643, column: 28, scope: !16261)
!16267 = !DILocation(line: 3644, column: 5, scope: !16254)
!16268 = !DILocation(line: 3645, column: 4, scope: !16246)
!16269 = !DILocation(line: 3638, column: 34, scope: !16240)
!16270 = !DILocation(line: 3638, column: 42, scope: !16240)
!16271 = !DILocation(line: 3638, column: 40, scope: !16240)
!16272 = !DILocation(line: 3638, column: 4, scope: !16240)
!16273 = distinct !{!16273, !16244, !16274}
!16274 = !DILocation(line: 3645, column: 4, scope: !16237)
!16275 = !DILocation(line: 3646, column: 13, scope: !16229)
!16276 = !DILocation(line: 3646, column: 4, scope: !16229)
!16277 = !DILocation(line: 3646, column: 10, scope: !16229)
!16278 = !DILocation(line: 3647, column: 8, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 3647, column: 8)
!16280 = !DILocation(line: 3647, column: 15, scope: !16279)
!16281 = !DILocation(line: 3647, column: 8, scope: !16229)
!16282 = !DILocation(line: 3648, column: 14, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16279, file: !3, line: 3647, column: 19)
!16284 = !DILocation(line: 3648, column: 5, scope: !16283)
!16285 = !DILocation(line: 3648, column: 11, scope: !16283)
!16286 = !DILocation(line: 3649, column: 14, scope: !16283)
!16287 = !DILocation(line: 3649, column: 5, scope: !16283)
!16288 = !DILocation(line: 3649, column: 11, scope: !16283)
!16289 = !DILocation(line: 3650, column: 9, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 3650, column: 9)
!16291 = !DILocation(line: 3650, column: 16, scope: !16290)
!16292 = !DILocation(line: 3650, column: 9, scope: !16283)
!16293 = !DILocation(line: 3650, column: 30, scope: !16290)
!16294 = !DILocation(line: 3650, column: 21, scope: !16290)
!16295 = !DILocation(line: 3650, column: 27, scope: !16290)
!16296 = !DILocation(line: 3651, column: 4, scope: !16283)
!16297 = !DILocation(line: 3652, column: 3, scope: !16229)
!16298 = !DILocation(line: 3653, column: 2, scope: !16089)
!16299 = !DILocation(line: 3561, column: 46, scope: !16086)
!16300 = !DILocation(line: 3561, column: 53, scope: !16086)
!16301 = !DILocation(line: 3561, column: 44, scope: !16086)
!16302 = !DILocation(line: 3561, column: 2, scope: !16086)
!16303 = distinct !{!16303, !16087, !16304}
!16304 = !DILocation(line: 3653, column: 2, scope: !16080)
!16305 = !DILocation(line: 3655, column: 1, scope: !16063)
!16306 = distinct !DISubprogram(name: "cliptestf", scope: !3, file: !3, line: 219, type: !16307, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{!12, !21, !21, !21, !21, !31, !31}
!16309 = !DILocalVariable(name: "a", arg: 1, scope: !16306, file: !3, line: 219, type: !21)
!16310 = !DILocation(line: 219, column: 30, scope: !16306)
!16311 = !DILocalVariable(name: "b", arg: 2, scope: !16306, file: !3, line: 219, type: !21)
!16312 = !DILocation(line: 219, column: 39, scope: !16306)
!16313 = !DILocalVariable(name: "c", arg: 3, scope: !16306, file: !3, line: 219, type: !21)
!16314 = !DILocation(line: 219, column: 48, scope: !16306)
!16315 = !DILocalVariable(name: "d", arg: 4, scope: !16306, file: !3, line: 219, type: !21)
!16316 = !DILocation(line: 219, column: 57, scope: !16306)
!16317 = !DILocalVariable(name: "u1", arg: 5, scope: !16306, file: !3, line: 219, type: !31)
!16318 = !DILocation(line: 219, column: 67, scope: !16306)
!16319 = !DILocalVariable(name: "u2", arg: 6, scope: !16306, file: !3, line: 219, type: !31)
!16320 = !DILocation(line: 219, column: 78, scope: !16306)
!16321 = !DILocalVariable(name: "p", scope: !16306, file: !3, line: 221, type: !21)
!16322 = !DILocation(line: 221, column: 8, scope: !16306)
!16323 = !DILocation(line: 221, column: 11, scope: !16306)
!16324 = !DILocation(line: 221, column: 15, scope: !16306)
!16325 = !DILocation(line: 221, column: 13, scope: !16306)
!16326 = !DILocalVariable(name: "q", scope: !16306, file: !3, line: 221, type: !21)
!16327 = !DILocation(line: 221, column: 18, scope: !16306)
!16328 = !DILocation(line: 221, column: 21, scope: !16306)
!16329 = !DILocation(line: 221, column: 25, scope: !16306)
!16330 = !DILocation(line: 221, column: 23, scope: !16306)
!16331 = !DILocalVariable(name: "r", scope: !16306, file: !3, line: 221, type: !21)
!16332 = !DILocation(line: 221, column: 28, scope: !16306)
!16333 = !DILocation(line: 223, column: 6, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16306, file: !3, line: 223, column: 6)
!16335 = !DILocation(line: 223, column: 7, scope: !16334)
!16336 = !DILocation(line: 223, column: 6, scope: !16306)
!16337 = !DILocation(line: 224, column: 7, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !3, line: 224, column: 7)
!16339 = distinct !DILexicalBlock(scope: !16334, file: !3, line: 223, column: 14)
!16340 = !DILocation(line: 224, column: 9, scope: !16338)
!16341 = !DILocation(line: 224, column: 8, scope: !16338)
!16342 = !DILocation(line: 224, column: 7, scope: !16339)
!16343 = !DILocation(line: 224, column: 12, scope: !16338)
!16344 = !DILocation(line: 225, column: 12, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16338, file: !3, line: 225, column: 12)
!16346 = !DILocation(line: 225, column: 13, scope: !16345)
!16347 = !DILocation(line: 225, column: 12, scope: !16338)
!16348 = !DILocation(line: 226, column: 7, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 225, column: 20)
!16350 = !DILocation(line: 226, column: 9, scope: !16349)
!16351 = !DILocation(line: 226, column: 8, scope: !16349)
!16352 = !DILocation(line: 226, column: 5, scope: !16349)
!16353 = !DILocation(line: 227, column: 8, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16349, file: !3, line: 227, column: 8)
!16355 = !DILocation(line: 227, column: 11, scope: !16354)
!16356 = !DILocation(line: 227, column: 10, scope: !16354)
!16357 = !DILocation(line: 227, column: 9, scope: !16354)
!16358 = !DILocation(line: 227, column: 8, scope: !16349)
!16359 = !DILocation(line: 227, column: 15, scope: !16354)
!16360 = !DILocation(line: 228, column: 13, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16354, file: !3, line: 228, column: 13)
!16362 = !DILocation(line: 228, column: 16, scope: !16361)
!16363 = !DILocation(line: 228, column: 15, scope: !16361)
!16364 = !DILocation(line: 228, column: 14, scope: !16361)
!16365 = !DILocation(line: 228, column: 13, scope: !16354)
!16366 = !DILocation(line: 228, column: 24, scope: !16361)
!16367 = !DILocation(line: 228, column: 21, scope: !16361)
!16368 = !DILocation(line: 228, column: 23, scope: !16361)
!16369 = !DILocation(line: 228, column: 20, scope: !16361)
!16370 = !DILocation(line: 229, column: 3, scope: !16349)
!16371 = !DILocation(line: 230, column: 2, scope: !16339)
!16372 = !DILocation(line: 232, column: 7, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16374, file: !3, line: 232, column: 7)
!16374 = distinct !DILexicalBlock(scope: !16334, file: !3, line: 231, column: 7)
!16375 = !DILocation(line: 232, column: 8, scope: !16373)
!16376 = !DILocation(line: 232, column: 7, scope: !16374)
!16377 = !DILocation(line: 233, column: 8, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 233, column: 8)
!16379 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 232, column: 15)
!16380 = !DILocation(line: 233, column: 9, scope: !16378)
!16381 = !DILocation(line: 233, column: 8, scope: !16379)
!16382 = !DILocation(line: 233, column: 16, scope: !16378)
!16383 = !DILocation(line: 234, column: 13, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16378, file: !3, line: 234, column: 13)
!16385 = !DILocation(line: 234, column: 15, scope: !16384)
!16386 = !DILocation(line: 234, column: 14, scope: !16384)
!16387 = !DILocation(line: 234, column: 13, scope: !16378)
!16388 = !DILocation(line: 235, column: 8, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16384, file: !3, line: 234, column: 18)
!16390 = !DILocation(line: 235, column: 10, scope: !16389)
!16391 = !DILocation(line: 235, column: 9, scope: !16389)
!16392 = !DILocation(line: 235, column: 6, scope: !16389)
!16393 = !DILocation(line: 236, column: 9, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 236, column: 9)
!16395 = !DILocation(line: 236, column: 12, scope: !16394)
!16396 = !DILocation(line: 236, column: 11, scope: !16394)
!16397 = !DILocation(line: 236, column: 10, scope: !16394)
!16398 = !DILocation(line: 236, column: 9, scope: !16389)
!16399 = !DILocation(line: 236, column: 16, scope: !16394)
!16400 = !DILocation(line: 237, column: 14, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 237, column: 14)
!16402 = !DILocation(line: 237, column: 17, scope: !16401)
!16403 = !DILocation(line: 237, column: 16, scope: !16401)
!16404 = !DILocation(line: 237, column: 15, scope: !16401)
!16405 = !DILocation(line: 237, column: 14, scope: !16394)
!16406 = !DILocation(line: 237, column: 25, scope: !16401)
!16407 = !DILocation(line: 237, column: 22, scope: !16401)
!16408 = !DILocation(line: 237, column: 24, scope: !16401)
!16409 = !DILocation(line: 237, column: 21, scope: !16401)
!16410 = !DILocation(line: 238, column: 4, scope: !16389)
!16411 = !DILocation(line: 239, column: 3, scope: !16379)
!16412 = !DILocation(line: 240, column: 12, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 240, column: 12)
!16414 = !DILocation(line: 240, column: 13, scope: !16413)
!16415 = !DILocation(line: 240, column: 12, scope: !16373)
!16416 = !DILocation(line: 240, column: 20, scope: !16413)
!16417 = !DILocation(line: 242, column: 2, scope: !16306)
!16418 = !DILocation(line: 243, column: 1, scope: !16306)
!16419 = distinct !DISubprogram(name: "min_ff", scope: !16420, file: !16420, line: 202, type: !16421, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!16420 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!16421 = !DISubroutineType(types: !16422)
!16422 = !{!21, !21, !21}
!16423 = !DILocalVariable(name: "a", arg: 1, scope: !16419, file: !16420, line: 202, type: !21)
!16424 = !DILocation(line: 202, column: 28, scope: !16419)
!16425 = !DILocalVariable(name: "b", arg: 2, scope: !16419, file: !16420, line: 202, type: !21)
!16426 = !DILocation(line: 202, column: 37, scope: !16419)
!16427 = !DILocation(line: 204, column: 10, scope: !16419)
!16428 = !DILocation(line: 204, column: 14, scope: !16419)
!16429 = !DILocation(line: 204, column: 12, scope: !16419)
!16430 = !DILocation(line: 204, column: 9, scope: !16419)
!16431 = !DILocation(line: 204, column: 19, scope: !16419)
!16432 = !DILocation(line: 204, column: 23, scope: !16419)
!16433 = !DILocation(line: 204, column: 2, scope: !16419)
!16434 = distinct !DISubprogram(name: "zbuffillAc4", scope: !3, file: !3, line: 308, type: !6600, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!16435 = !DILocalVariable(name: "zspan", arg: 1, scope: !16434, file: !3, line: 308, type: !120)
!16436 = !DILocation(line: 308, column: 32, scope: !16434)
!16437 = !DILocalVariable(name: "obi", arg: 2, scope: !16434, file: !3, line: 308, type: !29)
!16438 = !DILocation(line: 308, column: 43, scope: !16434)
!16439 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !16434, file: !3, line: 308, type: !29)
!16440 = !DILocation(line: 308, column: 52, scope: !16434)
!16441 = !DILocalVariable(name: "v1", arg: 4, scope: !16434, file: !3, line: 309, type: !88)
!16442 = !DILocation(line: 309, column: 38, scope: !16434)
!16443 = !DILocalVariable(name: "v2", arg: 5, scope: !16434, file: !3, line: 309, type: !88)
!16444 = !DILocation(line: 309, column: 55, scope: !16434)
!16445 = !DILocalVariable(name: "v3", arg: 6, scope: !16434, file: !3, line: 309, type: !88)
!16446 = !DILocation(line: 309, column: 72, scope: !16434)
!16447 = !DILocalVariable(name: "v4", arg: 7, scope: !16434, file: !3, line: 309, type: !88)
!16448 = !DILocation(line: 309, column: 89, scope: !16434)
!16449 = !DILocalVariable(name: "ap", scope: !16434, file: !3, line: 311, type: !148)
!16450 = !DILocation(line: 311, column: 11, scope: !16434)
!16451 = !DILocalVariable(name: "apofs", scope: !16434, file: !3, line: 311, type: !148)
!16452 = !DILocation(line: 311, column: 16, scope: !16434)
!16453 = !DILocalVariable(name: "apn", scope: !16434, file: !3, line: 311, type: !148)
!16454 = !DILocation(line: 311, column: 24, scope: !16434)
!16455 = !DILocalVariable(name: "zxd", scope: !16434, file: !3, line: 312, type: !80)
!16456 = !DILocation(line: 312, column: 9, scope: !16434)
!16457 = !DILocalVariable(name: "zyd", scope: !16434, file: !3, line: 312, type: !80)
!16458 = !DILocation(line: 312, column: 14, scope: !16434)
!16459 = !DILocalVariable(name: "zy0", scope: !16434, file: !3, line: 312, type: !80)
!16460 = !DILocation(line: 312, column: 19, scope: !16434)
!16461 = !DILocalVariable(name: "zverg", scope: !16434, file: !3, line: 312, type: !80)
!16462 = !DILocation(line: 312, column: 24, scope: !16434)
!16463 = !DILocalVariable(name: "x0", scope: !16434, file: !3, line: 313, type: !21)
!16464 = !DILocation(line: 313, column: 8, scope: !16434)
!16465 = !DILocalVariable(name: "y0", scope: !16434, file: !3, line: 313, type: !21)
!16466 = !DILocation(line: 313, column: 12, scope: !16434)
!16467 = !DILocalVariable(name: "z0", scope: !16434, file: !3, line: 313, type: !21)
!16468 = !DILocation(line: 313, column: 16, scope: !16434)
!16469 = !DILocalVariable(name: "x1", scope: !16434, file: !3, line: 314, type: !21)
!16470 = !DILocation(line: 314, column: 8, scope: !16434)
!16471 = !DILocalVariable(name: "y1", scope: !16434, file: !3, line: 314, type: !21)
!16472 = !DILocation(line: 314, column: 12, scope: !16434)
!16473 = !DILocalVariable(name: "z1", scope: !16434, file: !3, line: 314, type: !21)
!16474 = !DILocation(line: 314, column: 16, scope: !16434)
!16475 = !DILocalVariable(name: "x2", scope: !16434, file: !3, line: 314, type: !21)
!16476 = !DILocation(line: 314, column: 20, scope: !16434)
!16477 = !DILocalVariable(name: "y2", scope: !16434, file: !3, line: 314, type: !21)
!16478 = !DILocation(line: 314, column: 24, scope: !16434)
!16479 = !DILocalVariable(name: "z2", scope: !16434, file: !3, line: 314, type: !21)
!16480 = !DILocation(line: 314, column: 28, scope: !16434)
!16481 = !DILocalVariable(name: "xx1", scope: !16434, file: !3, line: 314, type: !21)
!16482 = !DILocation(line: 314, column: 32, scope: !16434)
!16483 = !DILocalVariable(name: "span1", scope: !16434, file: !3, line: 315, type: !88)
!16484 = !DILocation(line: 315, column: 15, scope: !16434)
!16485 = !DILocalVariable(name: "span2", scope: !16434, file: !3, line: 315, type: !88)
!16486 = !DILocation(line: 315, column: 23, scope: !16434)
!16487 = !DILocalVariable(name: "rz", scope: !16434, file: !3, line: 316, type: !81)
!16488 = !DILocation(line: 316, column: 7, scope: !16434)
!16489 = !DILocalVariable(name: "rm", scope: !16434, file: !3, line: 316, type: !81)
!16490 = !DILocation(line: 316, column: 12, scope: !16434)
!16491 = !DILocalVariable(name: "x", scope: !16434, file: !3, line: 316, type: !29)
!16492 = !DILocation(line: 316, column: 16, scope: !16434)
!16493 = !DILocalVariable(name: "y", scope: !16434, file: !3, line: 316, type: !29)
!16494 = !DILocation(line: 316, column: 19, scope: !16434)
!16495 = !DILocalVariable(name: "sn1", scope: !16434, file: !3, line: 317, type: !29)
!16496 = !DILocation(line: 317, column: 6, scope: !16434)
!16497 = !DILocalVariable(name: "sn2", scope: !16434, file: !3, line: 317, type: !29)
!16498 = !DILocation(line: 317, column: 11, scope: !16434)
!16499 = !DILocalVariable(name: "rectx", scope: !16434, file: !3, line: 317, type: !29)
!16500 = !DILocation(line: 317, column: 16, scope: !16434)
!16501 = !DILocalVariable(name: "rectzofs", scope: !16434, file: !3, line: 317, type: !81)
!16502 = !DILocation(line: 317, column: 24, scope: !16434)
!16503 = !DILocalVariable(name: "rectmaskofs", scope: !16434, file: !3, line: 317, type: !81)
!16504 = !DILocation(line: 317, column: 35, scope: !16434)
!16505 = !DILocalVariable(name: "my0", scope: !16434, file: !3, line: 317, type: !29)
!16506 = !DILocation(line: 317, column: 48, scope: !16434)
!16507 = !DILocalVariable(name: "my2", scope: !16434, file: !3, line: 317, type: !29)
!16508 = !DILocation(line: 317, column: 53, scope: !16434)
!16509 = !DILocalVariable(name: "mask", scope: !16434, file: !3, line: 317, type: !29)
!16510 = !DILocation(line: 317, column: 58, scope: !16434)
!16511 = !DILocation(line: 320, column: 17, scope: !16434)
!16512 = !DILocation(line: 320, column: 2, scope: !16434)
!16513 = !DILocation(line: 323, column: 19, scope: !16434)
!16514 = !DILocation(line: 323, column: 26, scope: !16434)
!16515 = !DILocation(line: 323, column: 30, scope: !16434)
!16516 = !DILocation(line: 323, column: 2, scope: !16434)
!16517 = !DILocation(line: 324, column: 19, scope: !16434)
!16518 = !DILocation(line: 324, column: 26, scope: !16434)
!16519 = !DILocation(line: 324, column: 30, scope: !16434)
!16520 = !DILocation(line: 324, column: 2, scope: !16434)
!16521 = !DILocation(line: 325, column: 6, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 325, column: 6)
!16523 = !DILocation(line: 325, column: 6, scope: !16434)
!16524 = !DILocation(line: 326, column: 20, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16522, file: !3, line: 325, column: 10)
!16526 = !DILocation(line: 326, column: 27, scope: !16525)
!16527 = !DILocation(line: 326, column: 31, scope: !16525)
!16528 = !DILocation(line: 326, column: 3, scope: !16525)
!16529 = !DILocation(line: 327, column: 20, scope: !16525)
!16530 = !DILocation(line: 327, column: 27, scope: !16525)
!16531 = !DILocation(line: 327, column: 31, scope: !16525)
!16532 = !DILocation(line: 327, column: 3, scope: !16525)
!16533 = !DILocation(line: 328, column: 2, scope: !16525)
!16534 = !DILocation(line: 330, column: 20, scope: !16522)
!16535 = !DILocation(line: 330, column: 27, scope: !16522)
!16536 = !DILocation(line: 330, column: 31, scope: !16522)
!16537 = !DILocation(line: 330, column: 3, scope: !16522)
!16538 = !DILocation(line: 333, column: 6, scope: !16539)
!16539 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 333, column: 6)
!16540 = !DILocation(line: 333, column: 13, scope: !16539)
!16541 = !DILocation(line: 333, column: 18, scope: !16539)
!16542 = !DILocation(line: 333, column: 25, scope: !16539)
!16543 = !DILocation(line: 333, column: 28, scope: !16539)
!16544 = !DILocation(line: 333, column: 35, scope: !16539)
!16545 = !DILocation(line: 333, column: 40, scope: !16539)
!16546 = !DILocation(line: 333, column: 6, scope: !16434)
!16547 = !DILocation(line: 333, column: 48, scope: !16539)
!16548 = !DILocation(line: 335, column: 6, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 335, column: 6)
!16550 = !DILocation(line: 335, column: 13, scope: !16549)
!16551 = !DILocation(line: 335, column: 21, scope: !16549)
!16552 = !DILocation(line: 335, column: 28, scope: !16549)
!16553 = !DILocation(line: 335, column: 19, scope: !16549)
!16554 = !DILocation(line: 335, column: 6, scope: !16434)
!16555 = !DILocation(line: 335, column: 40, scope: !16549)
!16556 = !DILocation(line: 335, column: 47, scope: !16549)
!16557 = !DILocation(line: 335, column: 38, scope: !16549)
!16558 = !DILocation(line: 335, column: 35, scope: !16549)
!16559 = !DILocation(line: 335, column: 64, scope: !16549)
!16560 = !DILocation(line: 335, column: 71, scope: !16549)
!16561 = !DILocation(line: 335, column: 62, scope: !16549)
!16562 = !DILocation(line: 336, column: 6, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 336, column: 6)
!16564 = !DILocation(line: 336, column: 13, scope: !16563)
!16565 = !DILocation(line: 336, column: 21, scope: !16563)
!16566 = !DILocation(line: 336, column: 28, scope: !16563)
!16567 = !DILocation(line: 336, column: 19, scope: !16563)
!16568 = !DILocation(line: 336, column: 6, scope: !16434)
!16569 = !DILocation(line: 336, column: 40, scope: !16563)
!16570 = !DILocation(line: 336, column: 47, scope: !16563)
!16571 = !DILocation(line: 336, column: 38, scope: !16563)
!16572 = !DILocation(line: 336, column: 35, scope: !16563)
!16573 = !DILocation(line: 336, column: 64, scope: !16563)
!16574 = !DILocation(line: 336, column: 71, scope: !16563)
!16575 = !DILocation(line: 336, column: 62, scope: !16563)
!16576 = !DILocation(line: 338, column: 6, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 338, column: 6)
!16578 = !DILocation(line: 338, column: 10, scope: !16577)
!16579 = !DILocation(line: 338, column: 9, scope: !16577)
!16580 = !DILocation(line: 338, column: 6, scope: !16434)
!16581 = !DILocation(line: 338, column: 15, scope: !16577)
!16582 = !DILocation(line: 341, column: 6, scope: !16434)
!16583 = !DILocation(line: 341, column: 13, scope: !16434)
!16584 = !DILocation(line: 341, column: 11, scope: !16434)
!16585 = !DILocation(line: 341, column: 4, scope: !16434)
!16586 = !DILocation(line: 342, column: 6, scope: !16434)
!16587 = !DILocation(line: 342, column: 13, scope: !16434)
!16588 = !DILocation(line: 342, column: 11, scope: !16434)
!16589 = !DILocation(line: 342, column: 4, scope: !16434)
!16590 = !DILocation(line: 343, column: 6, scope: !16434)
!16591 = !DILocation(line: 343, column: 13, scope: !16434)
!16592 = !DILocation(line: 343, column: 11, scope: !16434)
!16593 = !DILocation(line: 343, column: 4, scope: !16434)
!16594 = !DILocation(line: 344, column: 6, scope: !16434)
!16595 = !DILocation(line: 344, column: 13, scope: !16434)
!16596 = !DILocation(line: 344, column: 11, scope: !16434)
!16597 = !DILocation(line: 344, column: 4, scope: !16434)
!16598 = !DILocation(line: 345, column: 6, scope: !16434)
!16599 = !DILocation(line: 345, column: 13, scope: !16434)
!16600 = !DILocation(line: 345, column: 11, scope: !16434)
!16601 = !DILocation(line: 345, column: 4, scope: !16434)
!16602 = !DILocation(line: 346, column: 6, scope: !16434)
!16603 = !DILocation(line: 346, column: 13, scope: !16434)
!16604 = !DILocation(line: 346, column: 11, scope: !16434)
!16605 = !DILocation(line: 346, column: 4, scope: !16434)
!16606 = !DILocation(line: 347, column: 6, scope: !16434)
!16607 = !DILocation(line: 347, column: 9, scope: !16434)
!16608 = !DILocation(line: 347, column: 8, scope: !16434)
!16609 = !DILocation(line: 347, column: 12, scope: !16434)
!16610 = !DILocation(line: 347, column: 15, scope: !16434)
!16611 = !DILocation(line: 347, column: 14, scope: !16434)
!16612 = !DILocation(line: 347, column: 11, scope: !16434)
!16613 = !DILocation(line: 347, column: 4, scope: !16434)
!16614 = !DILocation(line: 348, column: 6, scope: !16434)
!16615 = !DILocation(line: 348, column: 9, scope: !16434)
!16616 = !DILocation(line: 348, column: 8, scope: !16434)
!16617 = !DILocation(line: 348, column: 12, scope: !16434)
!16618 = !DILocation(line: 348, column: 15, scope: !16434)
!16619 = !DILocation(line: 348, column: 14, scope: !16434)
!16620 = !DILocation(line: 348, column: 11, scope: !16434)
!16621 = !DILocation(line: 348, column: 4, scope: !16434)
!16622 = !DILocation(line: 349, column: 6, scope: !16434)
!16623 = !DILocation(line: 349, column: 9, scope: !16434)
!16624 = !DILocation(line: 349, column: 8, scope: !16434)
!16625 = !DILocation(line: 349, column: 12, scope: !16434)
!16626 = !DILocation(line: 349, column: 15, scope: !16434)
!16627 = !DILocation(line: 349, column: 14, scope: !16434)
!16628 = !DILocation(line: 349, column: 11, scope: !16434)
!16629 = !DILocation(line: 349, column: 4, scope: !16434)
!16630 = !DILocation(line: 351, column: 6, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 351, column: 6)
!16632 = !DILocation(line: 351, column: 8, scope: !16631)
!16633 = !DILocation(line: 351, column: 6, scope: !16434)
!16634 = !DILocation(line: 351, column: 16, scope: !16631)
!16635 = !DILocation(line: 353, column: 8, scope: !16434)
!16636 = !DILocation(line: 353, column: 11, scope: !16434)
!16637 = !DILocation(line: 353, column: 10, scope: !16434)
!16638 = !DILocation(line: 353, column: 19, scope: !16434)
!16639 = !DILocation(line: 353, column: 22, scope: !16434)
!16640 = !DILocation(line: 353, column: 21, scope: !16434)
!16641 = !DILocation(line: 353, column: 17, scope: !16434)
!16642 = !DILocation(line: 353, column: 29, scope: !16434)
!16643 = !DILocation(line: 353, column: 28, scope: !16434)
!16644 = !DILocation(line: 353, column: 34, scope: !16434)
!16645 = !DILocation(line: 353, column: 32, scope: !16434)
!16646 = !DILocation(line: 353, column: 5, scope: !16434)
!16647 = !DILocation(line: 355, column: 16, scope: !16434)
!16648 = !DILocation(line: 355, column: 8, scope: !16434)
!16649 = !DILocation(line: 355, column: 7, scope: !16434)
!16650 = !DILocation(line: 355, column: 27, scope: !16434)
!16651 = !DILocation(line: 355, column: 19, scope: !16434)
!16652 = !DILocation(line: 355, column: 18, scope: !16434)
!16653 = !DILocation(line: 355, column: 5, scope: !16434)
!16654 = !DILocation(line: 356, column: 16, scope: !16434)
!16655 = !DILocation(line: 356, column: 8, scope: !16434)
!16656 = !DILocation(line: 356, column: 7, scope: !16434)
!16657 = !DILocation(line: 356, column: 27, scope: !16434)
!16658 = !DILocation(line: 356, column: 19, scope: !16434)
!16659 = !DILocation(line: 356, column: 18, scope: !16434)
!16660 = !DILocation(line: 356, column: 5, scope: !16434)
!16661 = !DILocation(line: 357, column: 16, scope: !16434)
!16662 = !DILocation(line: 357, column: 8, scope: !16434)
!16663 = !DILocation(line: 357, column: 21, scope: !16434)
!16664 = !DILocation(line: 357, column: 20, scope: !16434)
!16665 = !DILocation(line: 357, column: 35, scope: !16434)
!16666 = !DILocation(line: 357, column: 27, scope: !16434)
!16667 = !DILocation(line: 357, column: 25, scope: !16434)
!16668 = !DILocation(line: 357, column: 5, scope: !16434)
!16669 = !DILocation(line: 360, column: 9, scope: !16434)
!16670 = !DILocation(line: 360, column: 16, scope: !16434)
!16671 = !DILocation(line: 360, column: 7, scope: !16434)
!16672 = !DILocation(line: 361, column: 20, scope: !16434)
!16673 = !DILocation(line: 361, column: 27, scope: !16434)
!16674 = !DILocation(line: 361, column: 34, scope: !16434)
!16675 = !DILocation(line: 361, column: 41, scope: !16434)
!16676 = !DILocation(line: 361, column: 39, scope: !16434)
!16677 = !DILocation(line: 361, column: 33, scope: !16434)
!16678 = !DILocation(line: 361, column: 10, scope: !16434)
!16679 = !DILocation(line: 362, column: 23, scope: !16434)
!16680 = !DILocation(line: 362, column: 30, scope: !16434)
!16681 = !DILocation(line: 362, column: 39, scope: !16434)
!16682 = !DILocation(line: 362, column: 46, scope: !16434)
!16683 = !DILocation(line: 362, column: 44, scope: !16434)
!16684 = !DILocation(line: 362, column: 38, scope: !16434)
!16685 = !DILocation(line: 362, column: 13, scope: !16434)
!16686 = !DILocation(line: 363, column: 10, scope: !16434)
!16687 = !DILocation(line: 363, column: 17, scope: !16434)
!16688 = !DILocation(line: 363, column: 26, scope: !16434)
!16689 = !DILocation(line: 363, column: 33, scope: !16434)
!16690 = !DILocation(line: 363, column: 31, scope: !16434)
!16691 = !DILocation(line: 363, column: 24, scope: !16434)
!16692 = !DILocation(line: 363, column: 7, scope: !16434)
!16693 = !DILocation(line: 364, column: 8, scope: !16434)
!16694 = !DILocation(line: 364, column: 15, scope: !16434)
!16695 = !DILocation(line: 364, column: 6, scope: !16434)
!16696 = !DILocation(line: 367, column: 8, scope: !16434)
!16697 = !DILocation(line: 367, column: 14, scope: !16434)
!16698 = !DILocation(line: 367, column: 12, scope: !16434)
!16699 = !DILocation(line: 367, column: 18, scope: !16434)
!16700 = !DILocation(line: 367, column: 5, scope: !16434)
!16701 = !DILocation(line: 368, column: 6, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 368, column: 6)
!16703 = !DILocation(line: 368, column: 13, scope: !16702)
!16704 = !DILocation(line: 368, column: 19, scope: !16702)
!16705 = !DILocation(line: 368, column: 26, scope: !16702)
!16706 = !DILocation(line: 368, column: 33, scope: !16702)
!16707 = !DILocation(line: 368, column: 39, scope: !16702)
!16708 = !DILocation(line: 368, column: 24, scope: !16702)
!16709 = !DILocation(line: 368, column: 6, scope: !16434)
!16710 = !DILocation(line: 369, column: 10, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16702, file: !3, line: 368, column: 45)
!16712 = !DILocation(line: 369, column: 17, scope: !16711)
!16713 = !DILocation(line: 369, column: 23, scope: !16711)
!16714 = !DILocation(line: 369, column: 22, scope: !16711)
!16715 = !DILocation(line: 369, column: 8, scope: !16711)
!16716 = !DILocation(line: 370, column: 10, scope: !16711)
!16717 = !DILocation(line: 370, column: 17, scope: !16711)
!16718 = !DILocation(line: 370, column: 23, scope: !16711)
!16719 = !DILocation(line: 370, column: 22, scope: !16711)
!16720 = !DILocation(line: 370, column: 8, scope: !16711)
!16721 = !DILocation(line: 371, column: 2, scope: !16711)
!16722 = !DILocation(line: 373, column: 10, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16702, file: !3, line: 372, column: 7)
!16724 = !DILocation(line: 373, column: 17, scope: !16723)
!16725 = !DILocation(line: 373, column: 23, scope: !16723)
!16726 = !DILocation(line: 373, column: 22, scope: !16723)
!16727 = !DILocation(line: 373, column: 8, scope: !16723)
!16728 = !DILocation(line: 374, column: 10, scope: !16723)
!16729 = !DILocation(line: 374, column: 17, scope: !16723)
!16730 = !DILocation(line: 374, column: 23, scope: !16723)
!16731 = !DILocation(line: 374, column: 22, scope: !16723)
!16732 = !DILocation(line: 374, column: 8, scope: !16723)
!16733 = !DILocation(line: 377, column: 9, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 377, column: 2)
!16735 = !DILocation(line: 377, column: 8, scope: !16734)
!16736 = !DILocation(line: 377, column: 7, scope: !16734)
!16737 = !DILocation(line: 377, column: 14, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16734, file: !3, line: 377, column: 2)
!16739 = !DILocation(line: 377, column: 17, scope: !16738)
!16740 = !DILocation(line: 377, column: 15, scope: !16738)
!16741 = !DILocation(line: 377, column: 2, scope: !16734)
!16742 = !DILocation(line: 379, column: 15, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16738, file: !3, line: 377, column: 45)
!16744 = !DILocation(line: 379, column: 14, scope: !16743)
!16745 = !DILocation(line: 379, column: 8, scope: !16743)
!16746 = !DILocation(line: 379, column: 6, scope: !16743)
!16747 = !DILocation(line: 380, column: 15, scope: !16743)
!16748 = !DILocation(line: 380, column: 14, scope: !16743)
!16749 = !DILocation(line: 380, column: 8, scope: !16743)
!16750 = !DILocation(line: 380, column: 6, scope: !16743)
!16751 = !DILocation(line: 381, column: 6, scope: !16743)
!16752 = !DILocation(line: 383, column: 7, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 383, column: 7)
!16754 = !DILocation(line: 383, column: 12, scope: !16753)
!16755 = !DILocation(line: 383, column: 10, scope: !16753)
!16756 = !DILocation(line: 383, column: 7, scope: !16743)
!16757 = !DILocation(line: 383, column: 24, scope: !16753)
!16758 = !DILocation(line: 383, column: 29, scope: !16753)
!16759 = !DILocation(line: 383, column: 22, scope: !16753)
!16760 = !DILocation(line: 383, column: 19, scope: !16753)
!16761 = !DILocation(line: 384, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 384, column: 7)
!16763 = !DILocation(line: 384, column: 10, scope: !16762)
!16764 = !DILocation(line: 384, column: 7, scope: !16743)
!16765 = !DILocation(line: 384, column: 17, scope: !16762)
!16766 = !DILocation(line: 384, column: 14, scope: !16762)
!16767 = !DILocation(line: 386, column: 7, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16743, file: !3, line: 386, column: 7)
!16769 = !DILocation(line: 386, column: 12, scope: !16768)
!16770 = !DILocation(line: 386, column: 10, scope: !16768)
!16771 = !DILocation(line: 386, column: 7, scope: !16743)
!16772 = !DILocalVariable(name: "intzverg", scope: !16773, file: !3, line: 387, type: !29)
!16773 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 386, column: 17)
!16774 = !DILocation(line: 387, column: 8, scope: !16773)
!16775 = !DILocation(line: 389, column: 19, scope: !16773)
!16776 = !DILocation(line: 389, column: 11, scope: !16773)
!16777 = !DILocation(line: 389, column: 23, scope: !16773)
!16778 = !DILocation(line: 389, column: 22, scope: !16773)
!16779 = !DILocation(line: 389, column: 29, scope: !16773)
!16780 = !DILocation(line: 389, column: 27, scope: !16773)
!16781 = !DILocation(line: 389, column: 9, scope: !16773)
!16782 = !DILocation(line: 390, column: 8, scope: !16773)
!16783 = !DILocation(line: 390, column: 17, scope: !16773)
!16784 = !DILocation(line: 390, column: 16, scope: !16773)
!16785 = !DILocation(line: 390, column: 6, scope: !16773)
!16786 = !DILocation(line: 391, column: 8, scope: !16773)
!16787 = !DILocation(line: 391, column: 20, scope: !16773)
!16788 = !DILocation(line: 391, column: 19, scope: !16773)
!16789 = !DILocation(line: 391, column: 6, scope: !16773)
!16790 = !DILocation(line: 392, column: 8, scope: !16773)
!16791 = !DILocation(line: 392, column: 14, scope: !16773)
!16792 = !DILocation(line: 392, column: 13, scope: !16773)
!16793 = !DILocation(line: 392, column: 6, scope: !16773)
!16794 = !DILocation(line: 393, column: 7, scope: !16773)
!16795 = !DILocation(line: 393, column: 11, scope: !16773)
!16796 = !DILocation(line: 393, column: 10, scope: !16773)
!16797 = !DILocation(line: 393, column: 5, scope: !16773)
!16798 = !DILocation(line: 395, column: 12, scope: !16773)
!16799 = !DILocation(line: 395, column: 19, scope: !16773)
!16800 = !DILocation(line: 395, column: 9, scope: !16773)
!16801 = !DILocation(line: 397, column: 4, scope: !16773)
!16802 = !DILocation(line: 397, column: 11, scope: !16773)
!16803 = !DILocation(line: 397, column: 12, scope: !16773)
!16804 = !DILocation(line: 398, column: 20, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16773, file: !3, line: 397, column: 17)
!16806 = !DILocation(line: 398, column: 15, scope: !16805)
!16807 = !DILocation(line: 398, column: 13, scope: !16805)
!16808 = !DILocation(line: 400, column: 10, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16805, file: !3, line: 400, column: 10)
!16810 = !DILocation(line: 400, column: 22, scope: !16809)
!16811 = !DILocation(line: 400, column: 21, scope: !16809)
!16812 = !DILocation(line: 400, column: 19, scope: !16809)
!16813 = !DILocation(line: 400, column: 10, scope: !16805)
!16814 = !DILocation(line: 401, column: 11, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 401, column: 10)
!16816 = distinct !DILexicalBlock(scope: !16809, file: !3, line: 400, column: 26)
!16817 = !DILocation(line: 401, column: 18, scope: !16815)
!16818 = !DILocation(line: 401, column: 27, scope: !16815)
!16819 = !DILocation(line: 401, column: 30, scope: !16815)
!16820 = !DILocation(line: 401, column: 42, scope: !16815)
!16821 = !DILocation(line: 401, column: 41, scope: !16815)
!16822 = !DILocation(line: 401, column: 39, scope: !16815)
!16823 = !DILocation(line: 401, column: 10, scope: !16816)
!16824 = !DILocation(line: 403, column: 12, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16815, file: !3, line: 401, column: 46)
!16826 = !DILocation(line: 403, column: 10, scope: !16825)
!16827 = !DILocation(line: 404, column: 7, scope: !16825)
!16828 = !DILocation(line: 404, column: 14, scope: !16825)
!16829 = !DILocation(line: 405, column: 12, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 405, column: 12)
!16831 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 404, column: 19)
!16832 = !DILocation(line: 405, column: 17, scope: !16830)
!16833 = !DILocation(line: 405, column: 21, scope: !16830)
!16834 = !DILocation(line: 405, column: 12, scope: !16831)
!16835 = !DILocation(line: 405, column: 40, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16830, file: !3, line: 405, column: 26)
!16837 = !DILocation(line: 405, column: 27, scope: !16836)
!16838 = !DILocation(line: 405, column: 32, scope: !16836)
!16839 = !DILocation(line: 405, column: 38, scope: !16836)
!16840 = !DILocation(line: 405, column: 56, scope: !16836)
!16841 = !DILocation(line: 405, column: 45, scope: !16836)
!16842 = !DILocation(line: 405, column: 50, scope: !16836)
!16843 = !DILocation(line: 405, column: 54, scope: !16836)
!16844 = !DILocation(line: 405, column: 74, scope: !16836)
!16845 = !DILocation(line: 405, column: 63, scope: !16836)
!16846 = !DILocation(line: 405, column: 68, scope: !16836)
!16847 = !DILocation(line: 405, column: 72, scope: !16836)
!16848 = !DILocation(line: 405, column: 98, scope: !16836)
!16849 = !DILocation(line: 405, column: 84, scope: !16836)
!16850 = !DILocation(line: 405, column: 89, scope: !16836)
!16851 = !DILocation(line: 405, column: 96, scope: !16836)
!16852 = !DILocation(line: 405, column: 104, scope: !16836)
!16853 = !DILocation(line: 406, column: 12, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 406, column: 12)
!16855 = !DILocation(line: 406, column: 17, scope: !16854)
!16856 = !DILocation(line: 406, column: 23, scope: !16854)
!16857 = !DILocation(line: 406, column: 21, scope: !16854)
!16858 = !DILocation(line: 406, column: 29, scope: !16854)
!16859 = !DILocation(line: 406, column: 32, scope: !16854)
!16860 = !DILocation(line: 406, column: 37, scope: !16854)
!16861 = !DILocation(line: 406, column: 45, scope: !16854)
!16862 = !DILocation(line: 406, column: 43, scope: !16854)
!16863 = !DILocation(line: 406, column: 12, scope: !16831)
!16864 = !DILocation(line: 406, column: 66, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16854, file: !3, line: 406, column: 50)
!16866 = !DILocation(line: 406, column: 51, scope: !16865)
!16867 = !DILocation(line: 406, column: 56, scope: !16865)
!16868 = !DILocation(line: 406, column: 63, scope: !16865)
!16869 = !DILocation(line: 406, column: 72, scope: !16865)
!16870 = !DILocation(line: 407, column: 12, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 407, column: 12)
!16872 = !DILocation(line: 407, column: 17, scope: !16871)
!16873 = !DILocation(line: 407, column: 21, scope: !16871)
!16874 = !DILocation(line: 407, column: 12, scope: !16831)
!16875 = !DILocation(line: 407, column: 40, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 407, column: 26)
!16877 = !DILocation(line: 407, column: 27, scope: !16876)
!16878 = !DILocation(line: 407, column: 32, scope: !16876)
!16879 = !DILocation(line: 407, column: 38, scope: !16876)
!16880 = !DILocation(line: 407, column: 56, scope: !16876)
!16881 = !DILocation(line: 407, column: 45, scope: !16876)
!16882 = !DILocation(line: 407, column: 50, scope: !16876)
!16883 = !DILocation(line: 407, column: 54, scope: !16876)
!16884 = !DILocation(line: 407, column: 74, scope: !16876)
!16885 = !DILocation(line: 407, column: 63, scope: !16876)
!16886 = !DILocation(line: 407, column: 68, scope: !16876)
!16887 = !DILocation(line: 407, column: 72, scope: !16876)
!16888 = !DILocation(line: 407, column: 98, scope: !16876)
!16889 = !DILocation(line: 407, column: 84, scope: !16876)
!16890 = !DILocation(line: 407, column: 89, scope: !16876)
!16891 = !DILocation(line: 407, column: 96, scope: !16876)
!16892 = !DILocation(line: 407, column: 104, scope: !16876)
!16893 = !DILocation(line: 408, column: 12, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 408, column: 12)
!16895 = !DILocation(line: 408, column: 17, scope: !16894)
!16896 = !DILocation(line: 408, column: 23, scope: !16894)
!16897 = !DILocation(line: 408, column: 21, scope: !16894)
!16898 = !DILocation(line: 408, column: 29, scope: !16894)
!16899 = !DILocation(line: 408, column: 32, scope: !16894)
!16900 = !DILocation(line: 408, column: 37, scope: !16894)
!16901 = !DILocation(line: 408, column: 45, scope: !16894)
!16902 = !DILocation(line: 408, column: 43, scope: !16894)
!16903 = !DILocation(line: 408, column: 12, scope: !16831)
!16904 = !DILocation(line: 408, column: 66, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16894, file: !3, line: 408, column: 50)
!16906 = !DILocation(line: 408, column: 51, scope: !16905)
!16907 = !DILocation(line: 408, column: 56, scope: !16905)
!16908 = !DILocation(line: 408, column: 63, scope: !16905)
!16909 = !DILocation(line: 408, column: 72, scope: !16905)
!16910 = !DILocation(line: 409, column: 12, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 409, column: 12)
!16912 = !DILocation(line: 409, column: 17, scope: !16911)
!16913 = !DILocation(line: 409, column: 21, scope: !16911)
!16914 = !DILocation(line: 409, column: 12, scope: !16831)
!16915 = !DILocation(line: 409, column: 40, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 409, column: 26)
!16917 = !DILocation(line: 409, column: 27, scope: !16916)
!16918 = !DILocation(line: 409, column: 32, scope: !16916)
!16919 = !DILocation(line: 409, column: 38, scope: !16916)
!16920 = !DILocation(line: 409, column: 56, scope: !16916)
!16921 = !DILocation(line: 409, column: 45, scope: !16916)
!16922 = !DILocation(line: 409, column: 50, scope: !16916)
!16923 = !DILocation(line: 409, column: 54, scope: !16916)
!16924 = !DILocation(line: 409, column: 74, scope: !16916)
!16925 = !DILocation(line: 409, column: 63, scope: !16916)
!16926 = !DILocation(line: 409, column: 68, scope: !16916)
!16927 = !DILocation(line: 409, column: 72, scope: !16916)
!16928 = !DILocation(line: 409, column: 98, scope: !16916)
!16929 = !DILocation(line: 409, column: 84, scope: !16916)
!16930 = !DILocation(line: 409, column: 89, scope: !16916)
!16931 = !DILocation(line: 409, column: 96, scope: !16916)
!16932 = !DILocation(line: 409, column: 104, scope: !16916)
!16933 = !DILocation(line: 410, column: 12, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 410, column: 12)
!16935 = !DILocation(line: 410, column: 17, scope: !16934)
!16936 = !DILocation(line: 410, column: 23, scope: !16934)
!16937 = !DILocation(line: 410, column: 21, scope: !16934)
!16938 = !DILocation(line: 410, column: 29, scope: !16934)
!16939 = !DILocation(line: 410, column: 32, scope: !16934)
!16940 = !DILocation(line: 410, column: 37, scope: !16934)
!16941 = !DILocation(line: 410, column: 45, scope: !16934)
!16942 = !DILocation(line: 410, column: 43, scope: !16934)
!16943 = !DILocation(line: 410, column: 12, scope: !16831)
!16944 = !DILocation(line: 410, column: 66, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 410, column: 50)
!16946 = !DILocation(line: 410, column: 51, scope: !16945)
!16947 = !DILocation(line: 410, column: 56, scope: !16945)
!16948 = !DILocation(line: 410, column: 63, scope: !16945)
!16949 = !DILocation(line: 410, column: 72, scope: !16945)
!16950 = !DILocation(line: 411, column: 12, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 411, column: 12)
!16952 = !DILocation(line: 411, column: 17, scope: !16951)
!16953 = !DILocation(line: 411, column: 21, scope: !16951)
!16954 = !DILocation(line: 411, column: 12, scope: !16831)
!16955 = !DILocation(line: 411, column: 40, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16951, file: !3, line: 411, column: 26)
!16957 = !DILocation(line: 411, column: 27, scope: !16956)
!16958 = !DILocation(line: 411, column: 32, scope: !16956)
!16959 = !DILocation(line: 411, column: 38, scope: !16956)
!16960 = !DILocation(line: 411, column: 56, scope: !16956)
!16961 = !DILocation(line: 411, column: 45, scope: !16956)
!16962 = !DILocation(line: 411, column: 50, scope: !16956)
!16963 = !DILocation(line: 411, column: 54, scope: !16956)
!16964 = !DILocation(line: 411, column: 74, scope: !16956)
!16965 = !DILocation(line: 411, column: 63, scope: !16956)
!16966 = !DILocation(line: 411, column: 68, scope: !16956)
!16967 = !DILocation(line: 411, column: 72, scope: !16956)
!16968 = !DILocation(line: 411, column: 98, scope: !16956)
!16969 = !DILocation(line: 411, column: 84, scope: !16956)
!16970 = !DILocation(line: 411, column: 89, scope: !16956)
!16971 = !DILocation(line: 411, column: 96, scope: !16956)
!16972 = !DILocation(line: 411, column: 104, scope: !16956)
!16973 = !DILocation(line: 412, column: 12, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 412, column: 12)
!16975 = !DILocation(line: 412, column: 17, scope: !16974)
!16976 = !DILocation(line: 412, column: 23, scope: !16974)
!16977 = !DILocation(line: 412, column: 21, scope: !16974)
!16978 = !DILocation(line: 412, column: 29, scope: !16974)
!16979 = !DILocation(line: 412, column: 32, scope: !16974)
!16980 = !DILocation(line: 412, column: 37, scope: !16974)
!16981 = !DILocation(line: 412, column: 45, scope: !16974)
!16982 = !DILocation(line: 412, column: 43, scope: !16974)
!16983 = !DILocation(line: 412, column: 12, scope: !16831)
!16984 = !DILocation(line: 412, column: 66, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16974, file: !3, line: 412, column: 50)
!16986 = !DILocation(line: 412, column: 51, scope: !16985)
!16987 = !DILocation(line: 412, column: 56, scope: !16985)
!16988 = !DILocation(line: 412, column: 63, scope: !16985)
!16989 = !DILocation(line: 412, column: 72, scope: !16985)
!16990 = !DILocation(line: 413, column: 12, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 413, column: 12)
!16992 = !DILocation(line: 413, column: 17, scope: !16991)
!16993 = !DILocation(line: 413, column: 21, scope: !16991)
!16994 = !DILocation(line: 413, column: 12, scope: !16831)
!16995 = !DILocation(line: 413, column: 47, scope: !16991)
!16996 = !DILocation(line: 413, column: 40, scope: !16991)
!16997 = !DILocation(line: 413, column: 29, scope: !16991)
!16998 = !DILocation(line: 413, column: 34, scope: !16991)
!16999 = !DILocation(line: 413, column: 38, scope: !16991)
!17000 = !DILocation(line: 414, column: 13, scope: !16831)
!17001 = !DILocation(line: 414, column: 18, scope: !16831)
!17002 = !DILocation(line: 414, column: 11, scope: !16831)
!17003 = distinct !{!17003, !16827, !17004}
!17004 = !DILocation(line: 415, column: 7, scope: !16825)
!17005 = !DILocation(line: 416, column: 6, scope: !16825)
!17006 = !DILocation(line: 417, column: 5, scope: !16816)
!17007 = !DILocation(line: 418, column: 13, scope: !16805)
!17008 = !DILocation(line: 418, column: 10, scope: !16805)
!17009 = !DILocation(line: 419, column: 7, scope: !16805)
!17010 = !DILocation(line: 420, column: 7, scope: !16805)
!17011 = !DILocation(line: 421, column: 7, scope: !16805)
!17012 = !DILocation(line: 422, column: 6, scope: !16805)
!17013 = distinct !{!17013, !16801, !17014}
!17014 = !DILocation(line: 423, column: 4, scope: !16773)
!17015 = !DILocation(line: 424, column: 3, scope: !16773)
!17016 = !DILocation(line: 426, column: 8, scope: !16743)
!17017 = !DILocation(line: 426, column: 6, scope: !16743)
!17018 = !DILocation(line: 427, column: 14, scope: !16743)
!17019 = !DILocation(line: 427, column: 11, scope: !16743)
!17020 = !DILocation(line: 428, column: 17, scope: !16743)
!17021 = !DILocation(line: 428, column: 14, scope: !16743)
!17022 = !DILocation(line: 429, column: 11, scope: !16743)
!17023 = !DILocation(line: 429, column: 8, scope: !16743)
!17024 = !DILocation(line: 430, column: 2, scope: !16743)
!17025 = !DILocation(line: 377, column: 23, scope: !16738)
!17026 = !DILocation(line: 377, column: 32, scope: !16738)
!17027 = !DILocation(line: 377, column: 41, scope: !16738)
!17028 = !DILocation(line: 377, column: 2, scope: !16738)
!17029 = distinct !{!17029, !16741, !17030}
!17030 = !DILocation(line: 430, column: 2, scope: !16734)
!17031 = !DILocation(line: 431, column: 1, scope: !16434)
!17032 = distinct !DISubprogram(name: "zbuflineAc", scope: !3, file: !3, line: 435, type: !1037, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!17033 = !DILocalVariable(name: "zspan", arg: 1, scope: !17032, file: !3, line: 435, type: !120)
!17034 = !DILocation(line: 435, column: 31, scope: !17032)
!17035 = !DILocalVariable(name: "obi", arg: 2, scope: !17032, file: !3, line: 435, type: !29)
!17036 = !DILocation(line: 435, column: 42, scope: !17032)
!17037 = !DILocalVariable(name: "zvlnr", arg: 3, scope: !17032, file: !3, line: 435, type: !29)
!17038 = !DILocation(line: 435, column: 51, scope: !17032)
!17039 = !DILocalVariable(name: "vec1", arg: 4, scope: !17032, file: !3, line: 435, type: !88)
!17040 = !DILocation(line: 435, column: 70, scope: !17032)
!17041 = !DILocalVariable(name: "vec2", arg: 5, scope: !17032, file: !3, line: 435, type: !88)
!17042 = !DILocation(line: 435, column: 91, scope: !17032)
!17043 = !DILocalVariable(name: "ap", scope: !17032, file: !3, line: 437, type: !148)
!17044 = !DILocation(line: 437, column: 11, scope: !17032)
!17045 = !DILocalVariable(name: "apn", scope: !17032, file: !3, line: 437, type: !148)
!17046 = !DILocation(line: 437, column: 16, scope: !17032)
!17047 = !DILocalVariable(name: "rectz", scope: !17032, file: !3, line: 438, type: !6657)
!17048 = !DILocation(line: 438, column: 13, scope: !17032)
!17049 = !DILocalVariable(name: "rectmask", scope: !17032, file: !3, line: 438, type: !6657)
!17050 = !DILocation(line: 438, column: 21, scope: !17032)
!17051 = !DILocalVariable(name: "start", scope: !17032, file: !3, line: 439, type: !29)
!17052 = !DILocation(line: 439, column: 6, scope: !17032)
!17053 = !DILocalVariable(name: "end", scope: !17032, file: !3, line: 439, type: !29)
!17054 = !DILocation(line: 439, column: 13, scope: !17032)
!17055 = !DILocalVariable(name: "x", scope: !17032, file: !3, line: 439, type: !29)
!17056 = !DILocation(line: 439, column: 18, scope: !17032)
!17057 = !DILocalVariable(name: "y", scope: !17032, file: !3, line: 439, type: !29)
!17058 = !DILocation(line: 439, column: 21, scope: !17032)
!17059 = !DILocalVariable(name: "oldx", scope: !17032, file: !3, line: 439, type: !29)
!17060 = !DILocation(line: 439, column: 24, scope: !17032)
!17061 = !DILocalVariable(name: "oldy", scope: !17032, file: !3, line: 439, type: !29)
!17062 = !DILocation(line: 439, column: 30, scope: !17032)
!17063 = !DILocalVariable(name: "ofs", scope: !17032, file: !3, line: 439, type: !29)
!17064 = !DILocation(line: 439, column: 36, scope: !17032)
!17065 = !DILocalVariable(name: "dz", scope: !17032, file: !3, line: 440, type: !29)
!17066 = !DILocation(line: 440, column: 6, scope: !17032)
!17067 = !DILocalVariable(name: "vergz", scope: !17032, file: !3, line: 440, type: !29)
!17068 = !DILocation(line: 440, column: 10, scope: !17032)
!17069 = !DILocalVariable(name: "mask", scope: !17032, file: !3, line: 440, type: !29)
!17070 = !DILocation(line: 440, column: 17, scope: !17032)
!17071 = !DILocalVariable(name: "maxtest", scope: !17032, file: !3, line: 440, type: !29)
!17072 = !DILocation(line: 440, column: 23, scope: !17032)
!17073 = !DILocalVariable(name: "dx", scope: !17032, file: !3, line: 441, type: !21)
!17074 = !DILocation(line: 441, column: 8, scope: !17032)
!17075 = !DILocalVariable(name: "dy", scope: !17032, file: !3, line: 441, type: !21)
!17076 = !DILocation(line: 441, column: 12, scope: !17032)
!17077 = !DILocalVariable(name: "v1", scope: !17032, file: !3, line: 442, type: !2427)
!17078 = !DILocation(line: 442, column: 8, scope: !17032)
!17079 = !DILocalVariable(name: "v2", scope: !17032, file: !3, line: 442, type: !2427)
!17080 = !DILocation(line: 442, column: 15, scope: !17032)
!17081 = !DILocation(line: 444, column: 6, scope: !17032)
!17082 = !DILocation(line: 444, column: 14, scope: !17032)
!17083 = !DILocation(line: 444, column: 13, scope: !17032)
!17084 = !DILocation(line: 444, column: 4, scope: !17032)
!17085 = !DILocation(line: 445, column: 6, scope: !17032)
!17086 = !DILocation(line: 445, column: 14, scope: !17032)
!17087 = !DILocation(line: 445, column: 13, scope: !17032)
!17088 = !DILocation(line: 445, column: 4, scope: !17032)
!17089 = !DILocation(line: 447, column: 8, scope: !17032)
!17090 = !DILocation(line: 447, column: 15, scope: !17032)
!17091 = !DILocation(line: 447, column: 6, scope: !17032)
!17092 = !DILocation(line: 449, column: 12, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 449, column: 6)
!17094 = !DILocation(line: 449, column: 6, scope: !17093)
!17095 = !DILocation(line: 449, column: 24, scope: !17093)
!17096 = !DILocation(line: 449, column: 18, scope: !17093)
!17097 = !DILocation(line: 449, column: 16, scope: !17093)
!17098 = !DILocation(line: 449, column: 6, scope: !17032)
!17099 = !DILocation(line: 452, column: 7, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 452, column: 7)
!17101 = distinct !DILexicalBlock(scope: !17093, file: !3, line: 449, column: 29)
!17102 = !DILocation(line: 452, column: 15, scope: !17100)
!17103 = !DILocation(line: 452, column: 14, scope: !17100)
!17104 = !DILocation(line: 452, column: 7, scope: !17101)
!17105 = !DILocation(line: 453, column: 15, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17100, file: !3, line: 452, column: 24)
!17107 = !DILocation(line: 453, column: 19, scope: !17106)
!17108 = !DILocation(line: 453, column: 4, scope: !17106)
!17109 = !DILocation(line: 454, column: 15, scope: !17106)
!17110 = !DILocation(line: 454, column: 19, scope: !17106)
!17111 = !DILocation(line: 454, column: 4, scope: !17106)
!17112 = !DILocation(line: 455, column: 3, scope: !17106)
!17113 = !DILocation(line: 457, column: 15, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17100, file: !3, line: 456, column: 8)
!17115 = !DILocation(line: 457, column: 19, scope: !17114)
!17116 = !DILocation(line: 457, column: 4, scope: !17114)
!17117 = !DILocation(line: 458, column: 15, scope: !17114)
!17118 = !DILocation(line: 458, column: 19, scope: !17114)
!17119 = !DILocation(line: 458, column: 4, scope: !17114)
!17120 = !DILocation(line: 459, column: 9, scope: !17114)
!17121 = !DILocation(line: 459, column: 8, scope: !17114)
!17122 = !DILocation(line: 459, column: 6, scope: !17114)
!17123 = !DILocation(line: 459, column: 18, scope: !17114)
!17124 = !DILocation(line: 459, column: 17, scope: !17114)
!17125 = !DILocation(line: 459, column: 15, scope: !17114)
!17126 = !DILocation(line: 462, column: 16, scope: !17101)
!17127 = !DILocation(line: 462, column: 10, scope: !17101)
!17128 = !DILocation(line: 462, column: 8, scope: !17101)
!17129 = !DILocation(line: 463, column: 8, scope: !17101)
!17130 = !DILocation(line: 463, column: 20, scope: !17101)
!17131 = !DILocation(line: 463, column: 14, scope: !17101)
!17132 = !DILocation(line: 463, column: 13, scope: !17101)
!17133 = !DILocation(line: 463, column: 6, scope: !17101)
!17134 = !DILocation(line: 464, column: 7, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 464, column: 7)
!17136 = !DILocation(line: 464, column: 12, scope: !17135)
!17137 = !DILocation(line: 464, column: 19, scope: !17135)
!17138 = !DILocation(line: 464, column: 10, scope: !17135)
!17139 = !DILocation(line: 464, column: 7, scope: !17101)
!17140 = !DILocation(line: 464, column: 31, scope: !17135)
!17141 = !DILocation(line: 464, column: 38, scope: !17135)
!17142 = !DILocation(line: 464, column: 43, scope: !17135)
!17143 = !DILocation(line: 464, column: 29, scope: !17135)
!17144 = !DILocation(line: 464, column: 26, scope: !17135)
!17145 = !DILocation(line: 466, column: 15, scope: !17101)
!17146 = !DILocation(line: 466, column: 9, scope: !17101)
!17147 = !DILocation(line: 466, column: 7, scope: !17101)
!17148 = !DILocation(line: 467, column: 8, scope: !17101)
!17149 = !DILocation(line: 467, column: 5, scope: !17101)
!17150 = !DILocation(line: 469, column: 10, scope: !17101)
!17151 = !DILocation(line: 469, column: 8, scope: !17101)
!17152 = !DILocation(line: 470, column: 11, scope: !17101)
!17153 = !DILocation(line: 470, column: 18, scope: !17101)
!17154 = !DILocation(line: 470, column: 8, scope: !17101)
!17155 = !DILocation(line: 471, column: 8, scope: !17101)
!17156 = !DILocation(line: 471, column: 14, scope: !17101)
!17157 = !DILocation(line: 471, column: 13, scope: !17101)
!17158 = !DILocation(line: 471, column: 21, scope: !17101)
!17159 = !DILocation(line: 471, column: 20, scope: !17101)
!17160 = !DILocation(line: 471, column: 7, scope: !17101)
!17161 = !DILocation(line: 471, column: 5, scope: !17101)
!17162 = !DILocation(line: 472, column: 7, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 472, column: 7)
!17164 = !DILocation(line: 472, column: 12, scope: !17163)
!17165 = !DILocation(line: 472, column: 24, scope: !17163)
!17166 = !DILocation(line: 472, column: 27, scope: !17163)
!17167 = !DILocation(line: 472, column: 29, scope: !17163)
!17168 = !DILocation(line: 472, column: 7, scope: !17101)
!17169 = !DILocation(line: 472, column: 40, scope: !17163)
!17170 = !DILocation(line: 472, column: 33, scope: !17163)
!17171 = !DILocation(line: 474, column: 18, scope: !17101)
!17172 = !DILocation(line: 474, column: 25, scope: !17101)
!17173 = !DILocation(line: 474, column: 32, scope: !17101)
!17174 = !DILocation(line: 474, column: 39, scope: !17101)
!17175 = !DILocation(line: 474, column: 46, scope: !17101)
!17176 = !DILocation(line: 474, column: 44, scope: !17101)
!17177 = !DILocation(line: 474, column: 31, scope: !17101)
!17178 = !DILocation(line: 474, column: 53, scope: !17101)
!17179 = !DILocation(line: 474, column: 52, scope: !17101)
!17180 = !DILocation(line: 474, column: 8, scope: !17101)
!17181 = !DILocation(line: 475, column: 21, scope: !17101)
!17182 = !DILocation(line: 475, column: 28, scope: !17101)
!17183 = !DILocation(line: 475, column: 37, scope: !17101)
!17184 = !DILocation(line: 475, column: 44, scope: !17101)
!17185 = !DILocation(line: 475, column: 51, scope: !17101)
!17186 = !DILocation(line: 475, column: 49, scope: !17101)
!17187 = !DILocation(line: 475, column: 36, scope: !17101)
!17188 = !DILocation(line: 475, column: 58, scope: !17101)
!17189 = !DILocation(line: 475, column: 57, scope: !17101)
!17190 = !DILocation(line: 475, column: 11, scope: !17101)
!17191 = !DILocation(line: 476, column: 8, scope: !17101)
!17192 = !DILocation(line: 476, column: 15, scope: !17101)
!17193 = !DILocation(line: 476, column: 24, scope: !17101)
!17194 = !DILocation(line: 476, column: 31, scope: !17101)
!17195 = !DILocation(line: 476, column: 38, scope: !17101)
!17196 = !DILocation(line: 476, column: 36, scope: !17101)
!17197 = !DILocation(line: 476, column: 22, scope: !17101)
!17198 = !DILocation(line: 476, column: 45, scope: !17101)
!17199 = !DILocation(line: 476, column: 44, scope: !17101)
!17200 = !DILocation(line: 476, column: 5, scope: !17101)
!17201 = !DILocation(line: 478, column: 7, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 478, column: 7)
!17203 = !DILocation(line: 478, column: 9, scope: !17202)
!17204 = !DILocation(line: 478, column: 7, scope: !17101)
!17205 = !DILocation(line: 478, column: 19, scope: !17202)
!17206 = !DILocation(line: 478, column: 26, scope: !17202)
!17207 = !DILocation(line: 478, column: 18, scope: !17202)
!17208 = !DILocation(line: 478, column: 16, scope: !17202)
!17209 = !DILocation(line: 478, column: 13, scope: !17202)
!17210 = !DILocation(line: 479, column: 13, scope: !17202)
!17211 = !DILocation(line: 479, column: 20, scope: !17202)
!17212 = !DILocation(line: 479, column: 11, scope: !17202)
!17213 = !DILocation(line: 481, column: 11, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 481, column: 3)
!17215 = !DILocation(line: 481, column: 9, scope: !17214)
!17216 = !DILocation(line: 481, column: 8, scope: !17214)
!17217 = !DILocation(line: 481, column: 18, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17214, file: !3, line: 481, column: 3)
!17219 = !DILocation(line: 481, column: 21, scope: !17218)
!17220 = !DILocation(line: 481, column: 19, scope: !17218)
!17221 = !DILocation(line: 481, column: 3, scope: !17214)
!17222 = !DILocation(line: 483, column: 13, scope: !17223)
!17223 = distinct !DILexicalBlock(scope: !17218, file: !3, line: 481, column: 58)
!17224 = !DILocation(line: 483, column: 7, scope: !17223)
!17225 = !DILocation(line: 483, column: 5, scope: !17223)
!17226 = !DILocation(line: 484, column: 8, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 484, column: 8)
!17228 = !DILocation(line: 484, column: 11, scope: !17227)
!17229 = !DILocation(line: 484, column: 9, scope: !17227)
!17230 = !DILocation(line: 484, column: 8, scope: !17223)
!17231 = !DILocation(line: 485, column: 11, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17227, file: !3, line: 484, column: 17)
!17233 = !DILocation(line: 485, column: 9, scope: !17232)
!17234 = !DILocation(line: 486, column: 13, scope: !17232)
!17235 = !DILocation(line: 486, column: 10, scope: !17232)
!17236 = !DILocation(line: 487, column: 16, scope: !17232)
!17237 = !DILocation(line: 487, column: 13, scope: !17232)
!17238 = !DILocation(line: 488, column: 10, scope: !17232)
!17239 = !DILocation(line: 488, column: 7, scope: !17232)
!17240 = !DILocation(line: 489, column: 4, scope: !17232)
!17241 = !DILocation(line: 491, column: 8, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 491, column: 8)
!17243 = !DILocation(line: 491, column: 9, scope: !17242)
!17244 = !DILocation(line: 491, column: 13, scope: !17242)
!17245 = !DILocation(line: 491, column: 16, scope: !17242)
!17246 = !DILocation(line: 491, column: 17, scope: !17242)
!17247 = !DILocation(line: 491, column: 21, scope: !17242)
!17248 = !DILocation(line: 491, column: 24, scope: !17242)
!17249 = !DILocation(line: 491, column: 26, scope: !17242)
!17250 = !DILocation(line: 491, column: 33, scope: !17242)
!17251 = !DILocation(line: 491, column: 25, scope: !17242)
!17252 = !DILocation(line: 491, column: 8, scope: !17223)
!17253 = !DILocation(line: 492, column: 9, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 492, column: 9)
!17255 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 491, column: 40)
!17256 = !DILocation(line: 492, column: 16, scope: !17254)
!17257 = !DILocation(line: 492, column: 15, scope: !17254)
!17258 = !DILocation(line: 492, column: 14, scope: !17254)
!17259 = !DILocation(line: 492, column: 9, scope: !17255)
!17260 = !DILocation(line: 493, column: 11, scope: !17261)
!17261 = distinct !DILexicalBlock(scope: !17262, file: !3, line: 493, column: 10)
!17262 = distinct !DILexicalBlock(scope: !17254, file: !3, line: 492, column: 23)
!17263 = !DILocation(line: 493, column: 18, scope: !17261)
!17264 = !DILocation(line: 493, column: 27, scope: !17261)
!17265 = !DILocation(line: 493, column: 30, scope: !17261)
!17266 = !DILocation(line: 493, column: 37, scope: !17261)
!17267 = !DILocation(line: 493, column: 36, scope: !17261)
!17268 = !DILocation(line: 493, column: 35, scope: !17261)
!17269 = !DILocation(line: 493, column: 10, scope: !17262)
!17270 = !DILocation(line: 495, column: 12, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17261, file: !3, line: 493, column: 47)
!17272 = !DILocation(line: 495, column: 10, scope: !17271)
!17273 = !DILocation(line: 496, column: 7, scope: !17271)
!17274 = !DILocation(line: 496, column: 14, scope: !17271)
!17275 = !DILocation(line: 497, column: 12, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 497, column: 12)
!17277 = distinct !DILexicalBlock(scope: !17271, file: !3, line: 496, column: 19)
!17278 = !DILocation(line: 497, column: 17, scope: !17276)
!17279 = !DILocation(line: 497, column: 21, scope: !17276)
!17280 = !DILocation(line: 497, column: 12, scope: !17277)
!17281 = !DILocation(line: 497, column: 40, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 497, column: 26)
!17283 = !DILocation(line: 497, column: 27, scope: !17282)
!17284 = !DILocation(line: 497, column: 32, scope: !17282)
!17285 = !DILocation(line: 497, column: 38, scope: !17282)
!17286 = !DILocation(line: 497, column: 56, scope: !17282)
!17287 = !DILocation(line: 497, column: 45, scope: !17282)
!17288 = !DILocation(line: 497, column: 50, scope: !17282)
!17289 = !DILocation(line: 497, column: 54, scope: !17282)
!17290 = !DILocation(line: 497, column: 74, scope: !17282)
!17291 = !DILocation(line: 497, column: 63, scope: !17282)
!17292 = !DILocation(line: 497, column: 68, scope: !17282)
!17293 = !DILocation(line: 497, column: 72, scope: !17282)
!17294 = !DILocation(line: 497, column: 95, scope: !17282)
!17295 = !DILocation(line: 497, column: 81, scope: !17282)
!17296 = !DILocation(line: 497, column: 86, scope: !17282)
!17297 = !DILocation(line: 497, column: 93, scope: !17282)
!17298 = !DILocation(line: 497, column: 101, scope: !17282)
!17299 = !DILocation(line: 498, column: 12, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 498, column: 12)
!17301 = !DILocation(line: 498, column: 17, scope: !17300)
!17302 = !DILocation(line: 498, column: 23, scope: !17300)
!17303 = !DILocation(line: 498, column: 21, scope: !17300)
!17304 = !DILocation(line: 498, column: 29, scope: !17300)
!17305 = !DILocation(line: 498, column: 32, scope: !17300)
!17306 = !DILocation(line: 498, column: 37, scope: !17300)
!17307 = !DILocation(line: 498, column: 45, scope: !17300)
!17308 = !DILocation(line: 498, column: 43, scope: !17300)
!17309 = !DILocation(line: 498, column: 12, scope: !17277)
!17310 = !DILocation(line: 498, column: 66, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17300, file: !3, line: 498, column: 50)
!17312 = !DILocation(line: 498, column: 51, scope: !17311)
!17313 = !DILocation(line: 498, column: 56, scope: !17311)
!17314 = !DILocation(line: 498, column: 63, scope: !17311)
!17315 = !DILocation(line: 498, column: 72, scope: !17311)
!17316 = !DILocation(line: 499, column: 12, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 499, column: 12)
!17318 = !DILocation(line: 499, column: 17, scope: !17317)
!17319 = !DILocation(line: 499, column: 21, scope: !17317)
!17320 = !DILocation(line: 499, column: 12, scope: !17277)
!17321 = !DILocation(line: 499, column: 40, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17317, file: !3, line: 499, column: 26)
!17323 = !DILocation(line: 499, column: 27, scope: !17322)
!17324 = !DILocation(line: 499, column: 32, scope: !17322)
!17325 = !DILocation(line: 499, column: 38, scope: !17322)
!17326 = !DILocation(line: 499, column: 56, scope: !17322)
!17327 = !DILocation(line: 499, column: 45, scope: !17322)
!17328 = !DILocation(line: 499, column: 50, scope: !17322)
!17329 = !DILocation(line: 499, column: 54, scope: !17322)
!17330 = !DILocation(line: 499, column: 74, scope: !17322)
!17331 = !DILocation(line: 499, column: 63, scope: !17322)
!17332 = !DILocation(line: 499, column: 68, scope: !17322)
!17333 = !DILocation(line: 499, column: 72, scope: !17322)
!17334 = !DILocation(line: 499, column: 95, scope: !17322)
!17335 = !DILocation(line: 499, column: 81, scope: !17322)
!17336 = !DILocation(line: 499, column: 86, scope: !17322)
!17337 = !DILocation(line: 499, column: 93, scope: !17322)
!17338 = !DILocation(line: 499, column: 101, scope: !17322)
!17339 = !DILocation(line: 500, column: 12, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 500, column: 12)
!17341 = !DILocation(line: 500, column: 17, scope: !17340)
!17342 = !DILocation(line: 500, column: 23, scope: !17340)
!17343 = !DILocation(line: 500, column: 21, scope: !17340)
!17344 = !DILocation(line: 500, column: 29, scope: !17340)
!17345 = !DILocation(line: 500, column: 32, scope: !17340)
!17346 = !DILocation(line: 500, column: 37, scope: !17340)
!17347 = !DILocation(line: 500, column: 45, scope: !17340)
!17348 = !DILocation(line: 500, column: 43, scope: !17340)
!17349 = !DILocation(line: 500, column: 12, scope: !17277)
!17350 = !DILocation(line: 500, column: 66, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17340, file: !3, line: 500, column: 50)
!17352 = !DILocation(line: 500, column: 51, scope: !17351)
!17353 = !DILocation(line: 500, column: 56, scope: !17351)
!17354 = !DILocation(line: 500, column: 63, scope: !17351)
!17355 = !DILocation(line: 500, column: 72, scope: !17351)
!17356 = !DILocation(line: 501, column: 12, scope: !17357)
!17357 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 501, column: 12)
!17358 = !DILocation(line: 501, column: 17, scope: !17357)
!17359 = !DILocation(line: 501, column: 21, scope: !17357)
!17360 = !DILocation(line: 501, column: 12, scope: !17277)
!17361 = !DILocation(line: 501, column: 40, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !17357, file: !3, line: 501, column: 26)
!17363 = !DILocation(line: 501, column: 27, scope: !17362)
!17364 = !DILocation(line: 501, column: 32, scope: !17362)
!17365 = !DILocation(line: 501, column: 38, scope: !17362)
!17366 = !DILocation(line: 501, column: 56, scope: !17362)
!17367 = !DILocation(line: 501, column: 45, scope: !17362)
!17368 = !DILocation(line: 501, column: 50, scope: !17362)
!17369 = !DILocation(line: 501, column: 54, scope: !17362)
!17370 = !DILocation(line: 501, column: 74, scope: !17362)
!17371 = !DILocation(line: 501, column: 63, scope: !17362)
!17372 = !DILocation(line: 501, column: 68, scope: !17362)
!17373 = !DILocation(line: 501, column: 72, scope: !17362)
!17374 = !DILocation(line: 501, column: 95, scope: !17362)
!17375 = !DILocation(line: 501, column: 81, scope: !17362)
!17376 = !DILocation(line: 501, column: 86, scope: !17362)
!17377 = !DILocation(line: 501, column: 93, scope: !17362)
!17378 = !DILocation(line: 501, column: 101, scope: !17362)
!17379 = !DILocation(line: 502, column: 12, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 502, column: 12)
!17381 = !DILocation(line: 502, column: 17, scope: !17380)
!17382 = !DILocation(line: 502, column: 23, scope: !17380)
!17383 = !DILocation(line: 502, column: 21, scope: !17380)
!17384 = !DILocation(line: 502, column: 29, scope: !17380)
!17385 = !DILocation(line: 502, column: 32, scope: !17380)
!17386 = !DILocation(line: 502, column: 37, scope: !17380)
!17387 = !DILocation(line: 502, column: 45, scope: !17380)
!17388 = !DILocation(line: 502, column: 43, scope: !17380)
!17389 = !DILocation(line: 502, column: 12, scope: !17277)
!17390 = !DILocation(line: 502, column: 66, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17380, file: !3, line: 502, column: 50)
!17392 = !DILocation(line: 502, column: 51, scope: !17391)
!17393 = !DILocation(line: 502, column: 56, scope: !17391)
!17394 = !DILocation(line: 502, column: 63, scope: !17391)
!17395 = !DILocation(line: 502, column: 72, scope: !17391)
!17396 = !DILocation(line: 503, column: 12, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 503, column: 12)
!17398 = !DILocation(line: 503, column: 17, scope: !17397)
!17399 = !DILocation(line: 503, column: 21, scope: !17397)
!17400 = !DILocation(line: 503, column: 12, scope: !17277)
!17401 = !DILocation(line: 503, column: 40, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17397, file: !3, line: 503, column: 26)
!17403 = !DILocation(line: 503, column: 27, scope: !17402)
!17404 = !DILocation(line: 503, column: 32, scope: !17402)
!17405 = !DILocation(line: 503, column: 38, scope: !17402)
!17406 = !DILocation(line: 503, column: 56, scope: !17402)
!17407 = !DILocation(line: 503, column: 45, scope: !17402)
!17408 = !DILocation(line: 503, column: 50, scope: !17402)
!17409 = !DILocation(line: 503, column: 54, scope: !17402)
!17410 = !DILocation(line: 503, column: 74, scope: !17402)
!17411 = !DILocation(line: 503, column: 63, scope: !17402)
!17412 = !DILocation(line: 503, column: 68, scope: !17402)
!17413 = !DILocation(line: 503, column: 72, scope: !17402)
!17414 = !DILocation(line: 503, column: 95, scope: !17402)
!17415 = !DILocation(line: 503, column: 81, scope: !17402)
!17416 = !DILocation(line: 503, column: 86, scope: !17402)
!17417 = !DILocation(line: 503, column: 93, scope: !17402)
!17418 = !DILocation(line: 503, column: 101, scope: !17402)
!17419 = !DILocation(line: 504, column: 12, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 504, column: 12)
!17421 = !DILocation(line: 504, column: 17, scope: !17420)
!17422 = !DILocation(line: 504, column: 23, scope: !17420)
!17423 = !DILocation(line: 504, column: 21, scope: !17420)
!17424 = !DILocation(line: 504, column: 29, scope: !17420)
!17425 = !DILocation(line: 504, column: 32, scope: !17420)
!17426 = !DILocation(line: 504, column: 37, scope: !17420)
!17427 = !DILocation(line: 504, column: 45, scope: !17420)
!17428 = !DILocation(line: 504, column: 43, scope: !17420)
!17429 = !DILocation(line: 504, column: 12, scope: !17277)
!17430 = !DILocation(line: 504, column: 66, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17420, file: !3, line: 504, column: 50)
!17432 = !DILocation(line: 504, column: 51, scope: !17431)
!17433 = !DILocation(line: 504, column: 56, scope: !17431)
!17434 = !DILocation(line: 504, column: 63, scope: !17431)
!17435 = !DILocation(line: 504, column: 72, scope: !17431)
!17436 = !DILocation(line: 505, column: 12, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 505, column: 12)
!17438 = !DILocation(line: 505, column: 17, scope: !17437)
!17439 = !DILocation(line: 505, column: 22, scope: !17437)
!17440 = !DILocation(line: 505, column: 12, scope: !17277)
!17441 = !DILocation(line: 505, column: 50, scope: !17437)
!17442 = !DILocation(line: 505, column: 43, scope: !17437)
!17443 = !DILocation(line: 505, column: 31, scope: !17437)
!17444 = !DILocation(line: 505, column: 36, scope: !17437)
!17445 = !DILocation(line: 505, column: 41, scope: !17437)
!17446 = !DILocation(line: 506, column: 13, scope: !17277)
!17447 = !DILocation(line: 506, column: 18, scope: !17277)
!17448 = !DILocation(line: 506, column: 11, scope: !17277)
!17449 = distinct !{!17449, !17273, !17450}
!17450 = !DILocation(line: 507, column: 7, scope: !17271)
!17451 = !DILocation(line: 508, column: 6, scope: !17271)
!17452 = !DILocation(line: 509, column: 5, scope: !17262)
!17453 = !DILocation(line: 510, column: 4, scope: !17255)
!17454 = !DILocation(line: 512, column: 12, scope: !17223)
!17455 = !DILocation(line: 512, column: 4, scope: !17223)
!17456 = !DILocation(line: 512, column: 9, scope: !17223)
!17457 = !DILocation(line: 513, column: 8, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 513, column: 8)
!17459 = !DILocation(line: 513, column: 16, scope: !17458)
!17460 = !DILocation(line: 513, column: 20, scope: !17458)
!17461 = !DILocation(line: 513, column: 41, scope: !17458)
!17462 = !DILocation(line: 513, column: 39, scope: !17458)
!17463 = !DILocation(line: 513, column: 26, scope: !17458)
!17464 = !DILocation(line: 513, column: 8, scope: !17223)
!17465 = !DILocation(line: 513, column: 51, scope: !17458)
!17466 = !DILocation(line: 513, column: 46, scope: !17458)
!17467 = !DILocation(line: 514, column: 17, scope: !17458)
!17468 = !DILocation(line: 514, column: 14, scope: !17458)
!17469 = !DILocation(line: 515, column: 3, scope: !17223)
!17470 = !DILocation(line: 481, column: 27, scope: !17218)
!17471 = !DILocation(line: 481, column: 36, scope: !17218)
!17472 = !DILocation(line: 481, column: 48, scope: !17218)
!17473 = !DILocation(line: 481, column: 54, scope: !17218)
!17474 = !DILocation(line: 481, column: 3, scope: !17218)
!17475 = distinct !{!17475, !17221, !17476}
!17476 = !DILocation(line: 515, column: 3, scope: !17214)
!17477 = !DILocation(line: 516, column: 2, scope: !17101)
!17478 = !DILocation(line: 520, column: 7, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 520, column: 7)
!17480 = distinct !DILexicalBlock(scope: !17093, file: !3, line: 517, column: 7)
!17481 = !DILocation(line: 520, column: 15, scope: !17479)
!17482 = !DILocation(line: 520, column: 14, scope: !17479)
!17483 = !DILocation(line: 520, column: 7, scope: !17480)
!17484 = !DILocation(line: 521, column: 15, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17479, file: !3, line: 520, column: 24)
!17486 = !DILocation(line: 521, column: 19, scope: !17485)
!17487 = !DILocation(line: 521, column: 4, scope: !17485)
!17488 = !DILocation(line: 522, column: 15, scope: !17485)
!17489 = !DILocation(line: 522, column: 19, scope: !17485)
!17490 = !DILocation(line: 522, column: 4, scope: !17485)
!17491 = !DILocation(line: 523, column: 3, scope: !17485)
!17492 = !DILocation(line: 525, column: 15, scope: !17493)
!17493 = distinct !DILexicalBlock(scope: !17479, file: !3, line: 524, column: 8)
!17494 = !DILocation(line: 525, column: 19, scope: !17493)
!17495 = !DILocation(line: 525, column: 4, scope: !17493)
!17496 = !DILocation(line: 526, column: 15, scope: !17493)
!17497 = !DILocation(line: 526, column: 19, scope: !17493)
!17498 = !DILocation(line: 526, column: 4, scope: !17493)
!17499 = !DILocation(line: 527, column: 9, scope: !17493)
!17500 = !DILocation(line: 527, column: 8, scope: !17493)
!17501 = !DILocation(line: 527, column: 6, scope: !17493)
!17502 = !DILocation(line: 527, column: 18, scope: !17493)
!17503 = !DILocation(line: 527, column: 17, scope: !17493)
!17504 = !DILocation(line: 527, column: 15, scope: !17493)
!17505 = !DILocation(line: 530, column: 16, scope: !17480)
!17506 = !DILocation(line: 530, column: 10, scope: !17480)
!17507 = !DILocation(line: 530, column: 8, scope: !17480)
!17508 = !DILocation(line: 531, column: 8, scope: !17480)
!17509 = !DILocation(line: 531, column: 20, scope: !17480)
!17510 = !DILocation(line: 531, column: 14, scope: !17480)
!17511 = !DILocation(line: 531, column: 13, scope: !17480)
!17512 = !DILocation(line: 531, column: 6, scope: !17480)
!17513 = !DILocation(line: 533, column: 7, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 533, column: 7)
!17515 = !DILocation(line: 533, column: 14, scope: !17514)
!17516 = !DILocation(line: 533, column: 21, scope: !17514)
!17517 = !DILocation(line: 533, column: 12, scope: !17514)
!17518 = !DILocation(line: 533, column: 27, scope: !17514)
!17519 = !DILocation(line: 533, column: 30, scope: !17514)
!17520 = !DILocation(line: 533, column: 33, scope: !17514)
!17521 = !DILocation(line: 533, column: 7, scope: !17480)
!17522 = !DILocation(line: 533, column: 37, scope: !17514)
!17523 = !DILocation(line: 535, column: 7, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 535, column: 7)
!17525 = !DILocation(line: 535, column: 12, scope: !17524)
!17526 = !DILocation(line: 535, column: 19, scope: !17524)
!17527 = !DILocation(line: 535, column: 10, scope: !17524)
!17528 = !DILocation(line: 535, column: 7, scope: !17480)
!17529 = !DILocation(line: 535, column: 31, scope: !17524)
!17530 = !DILocation(line: 535, column: 38, scope: !17524)
!17531 = !DILocation(line: 535, column: 43, scope: !17524)
!17532 = !DILocation(line: 535, column: 29, scope: !17524)
!17533 = !DILocation(line: 535, column: 26, scope: !17524)
!17534 = !DILocation(line: 537, column: 15, scope: !17480)
!17535 = !DILocation(line: 537, column: 9, scope: !17480)
!17536 = !DILocation(line: 537, column: 7, scope: !17480)
!17537 = !DILocation(line: 538, column: 8, scope: !17480)
!17538 = !DILocation(line: 538, column: 5, scope: !17480)
!17539 = !DILocation(line: 540, column: 10, scope: !17480)
!17540 = !DILocation(line: 540, column: 8, scope: !17480)
!17541 = !DILocation(line: 541, column: 11, scope: !17480)
!17542 = !DILocation(line: 541, column: 18, scope: !17480)
!17543 = !DILocation(line: 541, column: 8, scope: !17480)
!17544 = !DILocation(line: 542, column: 8, scope: !17480)
!17545 = !DILocation(line: 542, column: 14, scope: !17480)
!17546 = !DILocation(line: 542, column: 13, scope: !17480)
!17547 = !DILocation(line: 542, column: 21, scope: !17480)
!17548 = !DILocation(line: 542, column: 20, scope: !17480)
!17549 = !DILocation(line: 542, column: 7, scope: !17480)
!17550 = !DILocation(line: 542, column: 5, scope: !17480)
!17551 = !DILocation(line: 543, column: 7, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 543, column: 7)
!17553 = !DILocation(line: 543, column: 12, scope: !17552)
!17554 = !DILocation(line: 543, column: 24, scope: !17552)
!17555 = !DILocation(line: 543, column: 27, scope: !17552)
!17556 = !DILocation(line: 543, column: 29, scope: !17552)
!17557 = !DILocation(line: 543, column: 7, scope: !17480)
!17558 = !DILocation(line: 543, column: 40, scope: !17552)
!17559 = !DILocation(line: 543, column: 33, scope: !17552)
!17560 = !DILocation(line: 545, column: 19, scope: !17480)
!17561 = !DILocation(line: 545, column: 26, scope: !17480)
!17562 = !DILocation(line: 545, column: 35, scope: !17480)
!17563 = !DILocation(line: 545, column: 42, scope: !17480)
!17564 = !DILocation(line: 545, column: 49, scope: !17480)
!17565 = !DILocation(line: 545, column: 41, scope: !17480)
!17566 = !DILocation(line: 545, column: 32, scope: !17480)
!17567 = !DILocation(line: 545, column: 56, scope: !17480)
!17568 = !DILocation(line: 545, column: 54, scope: !17480)
!17569 = !DILocation(line: 545, column: 8, scope: !17480)
!17570 = !DILocation(line: 546, column: 22, scope: !17480)
!17571 = !DILocation(line: 546, column: 29, scope: !17480)
!17572 = !DILocation(line: 546, column: 40, scope: !17480)
!17573 = !DILocation(line: 546, column: 47, scope: !17480)
!17574 = !DILocation(line: 546, column: 54, scope: !17480)
!17575 = !DILocation(line: 546, column: 46, scope: !17480)
!17576 = !DILocation(line: 546, column: 37, scope: !17480)
!17577 = !DILocation(line: 546, column: 61, scope: !17480)
!17578 = !DILocation(line: 546, column: 59, scope: !17480)
!17579 = !DILocation(line: 546, column: 11, scope: !17480)
!17580 = !DILocation(line: 547, column: 8, scope: !17480)
!17581 = !DILocation(line: 547, column: 15, scope: !17480)
!17582 = !DILocation(line: 547, column: 24, scope: !17480)
!17583 = !DILocation(line: 547, column: 31, scope: !17480)
!17584 = !DILocation(line: 547, column: 38, scope: !17480)
!17585 = !DILocation(line: 547, column: 36, scope: !17480)
!17586 = !DILocation(line: 547, column: 22, scope: !17480)
!17587 = !DILocation(line: 547, column: 46, scope: !17480)
!17588 = !DILocation(line: 547, column: 45, scope: !17480)
!17589 = !DILocation(line: 547, column: 5, scope: !17480)
!17590 = !DILocation(line: 549, column: 7, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 549, column: 7)
!17592 = !DILocation(line: 549, column: 9, scope: !17591)
!17593 = !DILocation(line: 549, column: 7, scope: !17480)
!17594 = !DILocation(line: 549, column: 16, scope: !17591)
!17595 = !DILocation(line: 549, column: 13, scope: !17591)
!17596 = !DILocation(line: 550, column: 11, scope: !17591)
!17597 = !DILocation(line: 552, column: 11, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 552, column: 3)
!17599 = !DILocation(line: 552, column: 9, scope: !17598)
!17600 = !DILocation(line: 552, column: 8, scope: !17598)
!17601 = !DILocation(line: 552, column: 18, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17598, file: !3, line: 552, column: 3)
!17603 = !DILocation(line: 552, column: 21, scope: !17602)
!17604 = !DILocation(line: 552, column: 19, scope: !17602)
!17605 = !DILocation(line: 552, column: 3, scope: !17598)
!17606 = !DILocation(line: 554, column: 13, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17602, file: !3, line: 552, column: 94)
!17608 = !DILocation(line: 554, column: 7, scope: !17607)
!17609 = !DILocation(line: 554, column: 5, scope: !17607)
!17610 = !DILocation(line: 555, column: 8, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17607, file: !3, line: 555, column: 8)
!17612 = !DILocation(line: 555, column: 11, scope: !17611)
!17613 = !DILocation(line: 555, column: 9, scope: !17611)
!17614 = !DILocation(line: 555, column: 8, scope: !17607)
!17615 = !DILocation(line: 556, column: 11, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17611, file: !3, line: 555, column: 17)
!17617 = !DILocation(line: 556, column: 9, scope: !17616)
!17618 = !DILocation(line: 557, column: 13, scope: !17616)
!17619 = !DILocation(line: 557, column: 10, scope: !17616)
!17620 = !DILocation(line: 558, column: 16, scope: !17616)
!17621 = !DILocation(line: 558, column: 13, scope: !17616)
!17622 = !DILocation(line: 559, column: 10, scope: !17616)
!17623 = !DILocation(line: 559, column: 7, scope: !17616)
!17624 = !DILocation(line: 560, column: 4, scope: !17616)
!17625 = !DILocation(line: 562, column: 8, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17607, file: !3, line: 562, column: 8)
!17627 = !DILocation(line: 562, column: 9, scope: !17626)
!17628 = !DILocation(line: 562, column: 13, scope: !17626)
!17629 = !DILocation(line: 562, column: 16, scope: !17626)
!17630 = !DILocation(line: 562, column: 17, scope: !17626)
!17631 = !DILocation(line: 562, column: 21, scope: !17626)
!17632 = !DILocation(line: 562, column: 24, scope: !17626)
!17633 = !DILocation(line: 562, column: 26, scope: !17626)
!17634 = !DILocation(line: 562, column: 33, scope: !17626)
!17635 = !DILocation(line: 562, column: 25, scope: !17626)
!17636 = !DILocation(line: 562, column: 8, scope: !17607)
!17637 = !DILocation(line: 563, column: 9, scope: !17638)
!17638 = distinct !DILexicalBlock(scope: !17639, file: !3, line: 563, column: 9)
!17639 = distinct !DILexicalBlock(scope: !17626, file: !3, line: 562, column: 40)
!17640 = !DILocation(line: 563, column: 16, scope: !17638)
!17641 = !DILocation(line: 563, column: 15, scope: !17638)
!17642 = !DILocation(line: 563, column: 14, scope: !17638)
!17643 = !DILocation(line: 563, column: 9, scope: !17639)
!17644 = !DILocation(line: 564, column: 11, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17646, file: !3, line: 564, column: 10)
!17646 = distinct !DILexicalBlock(scope: !17638, file: !3, line: 563, column: 23)
!17647 = !DILocation(line: 564, column: 18, scope: !17645)
!17648 = !DILocation(line: 564, column: 27, scope: !17645)
!17649 = !DILocation(line: 564, column: 30, scope: !17645)
!17650 = !DILocation(line: 564, column: 37, scope: !17645)
!17651 = !DILocation(line: 564, column: 36, scope: !17645)
!17652 = !DILocation(line: 564, column: 35, scope: !17645)
!17653 = !DILocation(line: 564, column: 10, scope: !17646)
!17654 = !DILocation(line: 566, column: 12, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17645, file: !3, line: 564, column: 47)
!17656 = !DILocation(line: 566, column: 10, scope: !17655)
!17657 = !DILocation(line: 567, column: 7, scope: !17655)
!17658 = !DILocation(line: 567, column: 14, scope: !17655)
!17659 = !DILocation(line: 568, column: 12, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 568, column: 12)
!17661 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 567, column: 19)
!17662 = !DILocation(line: 568, column: 17, scope: !17660)
!17663 = !DILocation(line: 568, column: 21, scope: !17660)
!17664 = !DILocation(line: 568, column: 12, scope: !17661)
!17665 = !DILocation(line: 568, column: 40, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17660, file: !3, line: 568, column: 26)
!17667 = !DILocation(line: 568, column: 27, scope: !17666)
!17668 = !DILocation(line: 568, column: 32, scope: !17666)
!17669 = !DILocation(line: 568, column: 38, scope: !17666)
!17670 = !DILocation(line: 568, column: 56, scope: !17666)
!17671 = !DILocation(line: 568, column: 45, scope: !17666)
!17672 = !DILocation(line: 568, column: 50, scope: !17666)
!17673 = !DILocation(line: 568, column: 54, scope: !17666)
!17674 = !DILocation(line: 568, column: 74, scope: !17666)
!17675 = !DILocation(line: 568, column: 63, scope: !17666)
!17676 = !DILocation(line: 568, column: 68, scope: !17666)
!17677 = !DILocation(line: 568, column: 72, scope: !17666)
!17678 = !DILocation(line: 568, column: 95, scope: !17666)
!17679 = !DILocation(line: 568, column: 81, scope: !17666)
!17680 = !DILocation(line: 568, column: 86, scope: !17666)
!17681 = !DILocation(line: 568, column: 93, scope: !17666)
!17682 = !DILocation(line: 568, column: 101, scope: !17666)
!17683 = !DILocation(line: 569, column: 12, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 569, column: 12)
!17685 = !DILocation(line: 569, column: 17, scope: !17684)
!17686 = !DILocation(line: 569, column: 23, scope: !17684)
!17687 = !DILocation(line: 569, column: 21, scope: !17684)
!17688 = !DILocation(line: 569, column: 12, scope: !17661)
!17689 = !DILocation(line: 569, column: 46, scope: !17690)
!17690 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 569, column: 30)
!17691 = !DILocation(line: 569, column: 31, scope: !17690)
!17692 = !DILocation(line: 569, column: 36, scope: !17690)
!17693 = !DILocation(line: 569, column: 43, scope: !17690)
!17694 = !DILocation(line: 569, column: 52, scope: !17690)
!17695 = !DILocation(line: 570, column: 12, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 570, column: 12)
!17697 = !DILocation(line: 570, column: 17, scope: !17696)
!17698 = !DILocation(line: 570, column: 21, scope: !17696)
!17699 = !DILocation(line: 570, column: 12, scope: !17661)
!17700 = !DILocation(line: 570, column: 40, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17696, file: !3, line: 570, column: 26)
!17702 = !DILocation(line: 570, column: 27, scope: !17701)
!17703 = !DILocation(line: 570, column: 32, scope: !17701)
!17704 = !DILocation(line: 570, column: 38, scope: !17701)
!17705 = !DILocation(line: 570, column: 56, scope: !17701)
!17706 = !DILocation(line: 570, column: 45, scope: !17701)
!17707 = !DILocation(line: 570, column: 50, scope: !17701)
!17708 = !DILocation(line: 570, column: 54, scope: !17701)
!17709 = !DILocation(line: 570, column: 74, scope: !17701)
!17710 = !DILocation(line: 570, column: 63, scope: !17701)
!17711 = !DILocation(line: 570, column: 68, scope: !17701)
!17712 = !DILocation(line: 570, column: 72, scope: !17701)
!17713 = !DILocation(line: 570, column: 95, scope: !17701)
!17714 = !DILocation(line: 570, column: 81, scope: !17701)
!17715 = !DILocation(line: 570, column: 86, scope: !17701)
!17716 = !DILocation(line: 570, column: 93, scope: !17701)
!17717 = !DILocation(line: 570, column: 101, scope: !17701)
!17718 = !DILocation(line: 571, column: 12, scope: !17719)
!17719 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 571, column: 12)
!17720 = !DILocation(line: 571, column: 17, scope: !17719)
!17721 = !DILocation(line: 571, column: 23, scope: !17719)
!17722 = !DILocation(line: 571, column: 21, scope: !17719)
!17723 = !DILocation(line: 571, column: 12, scope: !17661)
!17724 = !DILocation(line: 571, column: 46, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17719, file: !3, line: 571, column: 30)
!17726 = !DILocation(line: 571, column: 31, scope: !17725)
!17727 = !DILocation(line: 571, column: 36, scope: !17725)
!17728 = !DILocation(line: 571, column: 43, scope: !17725)
!17729 = !DILocation(line: 571, column: 52, scope: !17725)
!17730 = !DILocation(line: 572, column: 12, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 572, column: 12)
!17732 = !DILocation(line: 572, column: 17, scope: !17731)
!17733 = !DILocation(line: 572, column: 21, scope: !17731)
!17734 = !DILocation(line: 572, column: 12, scope: !17661)
!17735 = !DILocation(line: 572, column: 40, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17731, file: !3, line: 572, column: 26)
!17737 = !DILocation(line: 572, column: 27, scope: !17736)
!17738 = !DILocation(line: 572, column: 32, scope: !17736)
!17739 = !DILocation(line: 572, column: 38, scope: !17736)
!17740 = !DILocation(line: 572, column: 56, scope: !17736)
!17741 = !DILocation(line: 572, column: 45, scope: !17736)
!17742 = !DILocation(line: 572, column: 50, scope: !17736)
!17743 = !DILocation(line: 572, column: 54, scope: !17736)
!17744 = !DILocation(line: 572, column: 74, scope: !17736)
!17745 = !DILocation(line: 572, column: 63, scope: !17736)
!17746 = !DILocation(line: 572, column: 68, scope: !17736)
!17747 = !DILocation(line: 572, column: 72, scope: !17736)
!17748 = !DILocation(line: 572, column: 95, scope: !17736)
!17749 = !DILocation(line: 572, column: 81, scope: !17736)
!17750 = !DILocation(line: 572, column: 86, scope: !17736)
!17751 = !DILocation(line: 572, column: 93, scope: !17736)
!17752 = !DILocation(line: 572, column: 101, scope: !17736)
!17753 = !DILocation(line: 573, column: 12, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 573, column: 12)
!17755 = !DILocation(line: 573, column: 17, scope: !17754)
!17756 = !DILocation(line: 573, column: 23, scope: !17754)
!17757 = !DILocation(line: 573, column: 21, scope: !17754)
!17758 = !DILocation(line: 573, column: 12, scope: !17661)
!17759 = !DILocation(line: 573, column: 46, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17754, file: !3, line: 573, column: 30)
!17761 = !DILocation(line: 573, column: 31, scope: !17760)
!17762 = !DILocation(line: 573, column: 36, scope: !17760)
!17763 = !DILocation(line: 573, column: 43, scope: !17760)
!17764 = !DILocation(line: 573, column: 52, scope: !17760)
!17765 = !DILocation(line: 574, column: 12, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 574, column: 12)
!17767 = !DILocation(line: 574, column: 17, scope: !17766)
!17768 = !DILocation(line: 574, column: 21, scope: !17766)
!17769 = !DILocation(line: 574, column: 12, scope: !17661)
!17770 = !DILocation(line: 574, column: 40, scope: !17771)
!17771 = distinct !DILexicalBlock(scope: !17766, file: !3, line: 574, column: 26)
!17772 = !DILocation(line: 574, column: 27, scope: !17771)
!17773 = !DILocation(line: 574, column: 32, scope: !17771)
!17774 = !DILocation(line: 574, column: 38, scope: !17771)
!17775 = !DILocation(line: 574, column: 56, scope: !17771)
!17776 = !DILocation(line: 574, column: 45, scope: !17771)
!17777 = !DILocation(line: 574, column: 50, scope: !17771)
!17778 = !DILocation(line: 574, column: 54, scope: !17771)
!17779 = !DILocation(line: 574, column: 74, scope: !17771)
!17780 = !DILocation(line: 574, column: 63, scope: !17771)
!17781 = !DILocation(line: 574, column: 68, scope: !17771)
!17782 = !DILocation(line: 574, column: 72, scope: !17771)
!17783 = !DILocation(line: 574, column: 95, scope: !17771)
!17784 = !DILocation(line: 574, column: 81, scope: !17771)
!17785 = !DILocation(line: 574, column: 86, scope: !17771)
!17786 = !DILocation(line: 574, column: 93, scope: !17771)
!17787 = !DILocation(line: 574, column: 101, scope: !17771)
!17788 = !DILocation(line: 575, column: 12, scope: !17789)
!17789 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 575, column: 12)
!17790 = !DILocation(line: 575, column: 17, scope: !17789)
!17791 = !DILocation(line: 575, column: 23, scope: !17789)
!17792 = !DILocation(line: 575, column: 21, scope: !17789)
!17793 = !DILocation(line: 575, column: 12, scope: !17661)
!17794 = !DILocation(line: 575, column: 46, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17789, file: !3, line: 575, column: 30)
!17796 = !DILocation(line: 575, column: 31, scope: !17795)
!17797 = !DILocation(line: 575, column: 36, scope: !17795)
!17798 = !DILocation(line: 575, column: 43, scope: !17795)
!17799 = !DILocation(line: 575, column: 52, scope: !17795)
!17800 = !DILocation(line: 576, column: 12, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17661, file: !3, line: 576, column: 12)
!17802 = !DILocation(line: 576, column: 17, scope: !17801)
!17803 = !DILocation(line: 576, column: 22, scope: !17801)
!17804 = !DILocation(line: 576, column: 12, scope: !17661)
!17805 = !DILocation(line: 576, column: 50, scope: !17801)
!17806 = !DILocation(line: 576, column: 43, scope: !17801)
!17807 = !DILocation(line: 576, column: 31, scope: !17801)
!17808 = !DILocation(line: 576, column: 36, scope: !17801)
!17809 = !DILocation(line: 576, column: 41, scope: !17801)
!17810 = !DILocation(line: 577, column: 13, scope: !17661)
!17811 = !DILocation(line: 577, column: 18, scope: !17661)
!17812 = !DILocation(line: 577, column: 11, scope: !17661)
!17813 = distinct !{!17813, !17657, !17814}
!17814 = !DILocation(line: 578, column: 7, scope: !17655)
!17815 = !DILocation(line: 579, column: 6, scope: !17655)
!17816 = !DILocation(line: 580, column: 5, scope: !17646)
!17817 = !DILocation(line: 581, column: 4, scope: !17639)
!17818 = !DILocation(line: 583, column: 12, scope: !17607)
!17819 = !DILocation(line: 583, column: 4, scope: !17607)
!17820 = !DILocation(line: 583, column: 9, scope: !17607)
!17821 = !DILocation(line: 584, column: 8, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17607, file: !3, line: 584, column: 8)
!17823 = !DILocation(line: 584, column: 16, scope: !17822)
!17824 = !DILocation(line: 584, column: 20, scope: !17822)
!17825 = !DILocation(line: 584, column: 41, scope: !17822)
!17826 = !DILocation(line: 584, column: 39, scope: !17822)
!17827 = !DILocation(line: 584, column: 26, scope: !17822)
!17828 = !DILocation(line: 584, column: 8, scope: !17607)
!17829 = !DILocation(line: 584, column: 51, scope: !17822)
!17830 = !DILocation(line: 584, column: 46, scope: !17822)
!17831 = !DILocation(line: 585, column: 17, scope: !17822)
!17832 = !DILocation(line: 585, column: 14, scope: !17822)
!17833 = !DILocation(line: 586, column: 3, scope: !17607)
!17834 = !DILocation(line: 552, column: 27, scope: !17602)
!17835 = !DILocation(line: 552, column: 38, scope: !17602)
!17836 = !DILocation(line: 552, column: 45, scope: !17602)
!17837 = !DILocation(line: 552, column: 36, scope: !17602)
!17838 = !DILocation(line: 552, column: 62, scope: !17602)
!17839 = !DILocation(line: 552, column: 69, scope: !17602)
!17840 = !DILocation(line: 552, column: 60, scope: !17602)
!17841 = !DILocation(line: 552, column: 80, scope: !17602)
!17842 = !DILocation(line: 552, column: 87, scope: !17602)
!17843 = !DILocation(line: 552, column: 78, scope: !17602)
!17844 = !DILocation(line: 552, column: 3, scope: !17602)
!17845 = distinct !{!17845, !17605, !17846}
!17846 = !DILocation(line: 586, column: 3, scope: !17598)
!17847 = !DILocation(line: 588, column: 1, scope: !17032)
!17848 = distinct !DISubprogram(name: "copyto_abufz", scope: !3, file: !3, line: 3215, type: !17849, scopeLine: 3216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!17849 = !DISubroutineType(types: !17850)
!17850 = !{null, !5587, !81, !81, !29}
!17851 = !DILocalVariable(name: "pa", arg: 1, scope: !17848, file: !3, line: 3215, type: !5587)
!17852 = !DILocation(line: 3215, column: 38, scope: !17848)
!17853 = !DILocalVariable(name: "arectz", arg: 2, scope: !17848, file: !3, line: 3215, type: !81)
!17854 = !DILocation(line: 3215, column: 47, scope: !17848)
!17855 = !DILocalVariable(name: "rectmask", arg: 3, scope: !17848, file: !3, line: 3215, type: !81)
!17856 = !DILocation(line: 3215, column: 60, scope: !17848)
!17857 = !DILocalVariable(name: "sample", arg: 4, scope: !17848, file: !3, line: 3215, type: !29)
!17858 = !DILocation(line: 3215, column: 74, scope: !17848)
!17859 = !DILocalVariable(name: "ps", scope: !17848, file: !3, line: 3217, type: !91)
!17860 = !DILocation(line: 3217, column: 10, scope: !17848)
!17861 = !DILocalVariable(name: "x", scope: !17848, file: !3, line: 3218, type: !29)
!17862 = !DILocation(line: 3218, column: 6, scope: !17848)
!17863 = !DILocalVariable(name: "y", scope: !17848, file: !3, line: 3218, type: !29)
!17864 = !DILocation(line: 3218, column: 9, scope: !17848)
!17865 = !DILocalVariable(name: "rza", scope: !17848, file: !3, line: 3218, type: !81)
!17866 = !DILocation(line: 3218, column: 13, scope: !17848)
!17867 = !DILocalVariable(name: "rma", scope: !17848, file: !3, line: 3218, type: !81)
!17868 = !DILocation(line: 3218, column: 19, scope: !17848)
!17869 = !DILocalVariable(name: "rd", scope: !17848, file: !3, line: 3219, type: !5601)
!17870 = !DILocation(line: 3219, column: 12, scope: !17848)
!17871 = !DILocation(line: 3221, column: 8, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17848, file: !3, line: 3221, column: 6)
!17873 = !DILocation(line: 3221, column: 6, scope: !17872)
!17874 = !DILocation(line: 3221, column: 11, scope: !17872)
!17875 = !DILocation(line: 3221, column: 6, scope: !17848)
!17876 = !DILocation(line: 3222, column: 8, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17878, file: !3, line: 3222, column: 7)
!17878 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 3221, column: 16)
!17879 = !DILocation(line: 3222, column: 12, scope: !17877)
!17880 = !DILocation(line: 3222, column: 7, scope: !17878)
!17881 = !DILocation(line: 3223, column: 13, scope: !17877)
!17882 = !DILocation(line: 3223, column: 21, scope: !17877)
!17883 = !DILocation(line: 3223, column: 25, scope: !17877)
!17884 = !DILocation(line: 3223, column: 32, scope: !17877)
!17885 = !DILocation(line: 3223, column: 36, scope: !17877)
!17886 = !DILocation(line: 3223, column: 4, scope: !17877)
!17887 = !DILocation(line: 3225, column: 11, scope: !17877)
!17888 = !DILocation(line: 3225, column: 4, scope: !17877)
!17889 = !DILocation(line: 3225, column: 19, scope: !17877)
!17890 = !DILocation(line: 3225, column: 23, scope: !17877)
!17891 = !DILocation(line: 3225, column: 42, scope: !17877)
!17892 = !DILocation(line: 3225, column: 46, scope: !17877)
!17893 = !DILocation(line: 3225, column: 41, scope: !17877)
!17894 = !DILocation(line: 3225, column: 52, scope: !17877)
!17895 = !DILocation(line: 3225, column: 56, scope: !17877)
!17896 = !DILocation(line: 3225, column: 51, scope: !17877)
!17897 = !DILocation(line: 3227, column: 7, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17878, file: !3, line: 3227, column: 7)
!17899 = !DILocation(line: 3227, column: 16, scope: !17898)
!17900 = !DILocation(line: 3227, column: 19, scope: !17898)
!17901 = !DILocation(line: 3227, column: 23, scope: !17898)
!17902 = !DILocation(line: 3227, column: 7, scope: !17878)
!17903 = !DILocation(line: 3228, column: 11, scope: !17898)
!17904 = !DILocation(line: 3228, column: 4, scope: !17898)
!17905 = !DILocation(line: 3228, column: 21, scope: !17898)
!17906 = !DILocation(line: 3228, column: 25, scope: !17898)
!17907 = !DILocation(line: 3228, column: 47, scope: !17898)
!17908 = !DILocation(line: 3228, column: 51, scope: !17898)
!17909 = !DILocation(line: 3228, column: 46, scope: !17898)
!17910 = !DILocation(line: 3228, column: 57, scope: !17898)
!17911 = !DILocation(line: 3228, column: 61, scope: !17898)
!17912 = !DILocation(line: 3228, column: 56, scope: !17898)
!17913 = !DILocation(line: 3230, column: 3, scope: !17878)
!17914 = !DILocation(line: 3232, column: 12, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 3232, column: 11)
!17916 = !DILocation(line: 3232, column: 16, scope: !17915)
!17917 = !DILocation(line: 3232, column: 11, scope: !17872)
!17918 = !DILocation(line: 3233, column: 12, scope: !17919)
!17919 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 3232, column: 26)
!17920 = !DILocation(line: 3233, column: 20, scope: !17919)
!17921 = !DILocation(line: 3233, column: 24, scope: !17919)
!17922 = !DILocation(line: 3233, column: 31, scope: !17919)
!17923 = !DILocation(line: 3233, column: 35, scope: !17919)
!17924 = !DILocation(line: 3233, column: 3, scope: !17919)
!17925 = !DILocation(line: 3234, column: 3, scope: !17919)
!17926 = !DILocation(line: 3237, column: 7, scope: !17848)
!17927 = !DILocation(line: 3237, column: 5, scope: !17848)
!17928 = !DILocation(line: 3238, column: 7, scope: !17848)
!17929 = !DILocation(line: 3238, column: 5, scope: !17848)
!17930 = !DILocation(line: 3239, column: 6, scope: !17848)
!17931 = !DILocation(line: 3239, column: 10, scope: !17848)
!17932 = !DILocation(line: 3239, column: 4, scope: !17848)
!17933 = !DILocation(line: 3241, column: 14, scope: !17848)
!17934 = !DILocation(line: 3241, column: 12, scope: !17848)
!17935 = !DILocation(line: 3241, column: 8, scope: !17848)
!17936 = !DILocation(line: 3243, column: 8, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17848, file: !3, line: 3243, column: 2)
!17938 = !DILocation(line: 3243, column: 7, scope: !17937)
!17939 = !DILocation(line: 3243, column: 12, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17937, file: !3, line: 3243, column: 2)
!17941 = !DILocation(line: 3243, column: 14, scope: !17940)
!17942 = !DILocation(line: 3243, column: 18, scope: !17940)
!17943 = !DILocation(line: 3243, column: 13, scope: !17940)
!17944 = !DILocation(line: 3243, column: 2, scope: !17937)
!17945 = !DILocation(line: 3244, column: 9, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17947, file: !3, line: 3244, column: 3)
!17947 = distinct !DILexicalBlock(scope: !17940, file: !3, line: 3243, column: 30)
!17948 = !DILocation(line: 3244, column: 8, scope: !17946)
!17949 = !DILocation(line: 3244, column: 13, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17946, file: !3, line: 3244, column: 3)
!17951 = !DILocation(line: 3244, column: 15, scope: !17950)
!17952 = !DILocation(line: 3244, column: 19, scope: !17950)
!17953 = !DILocation(line: 3244, column: 14, scope: !17950)
!17954 = !DILocation(line: 3244, column: 3, scope: !17946)
!17955 = !DILocation(line: 3246, column: 5, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17950, file: !3, line: 3244, column: 31)
!17957 = !DILocation(line: 3246, column: 8, scope: !17956)
!17958 = !DILocation(line: 3247, column: 8, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17956, file: !3, line: 3247, column: 8)
!17960 = !DILocation(line: 3247, column: 8, scope: !17956)
!17961 = !DILocation(line: 3247, column: 19, scope: !17959)
!17962 = !DILocation(line: 3247, column: 22, scope: !17959)
!17963 = !DILocation(line: 3247, column: 18, scope: !17959)
!17964 = !DILocation(line: 3248, column: 9, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17956, file: !3, line: 3248, column: 8)
!17966 = !DILocation(line: 3248, column: 8, scope: !17965)
!17967 = !DILocation(line: 3248, column: 8, scope: !17956)
!17968 = !DILocation(line: 3250, column: 26, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17970, file: !3, line: 3250, column: 5)
!17970 = distinct !DILexicalBlock(scope: !17965, file: !3, line: 3248, column: 13)
!17971 = !DILocation(line: 3250, column: 25, scope: !17969)
!17972 = !DILocation(line: 3250, column: 14, scope: !17969)
!17973 = !DILocation(line: 3250, column: 12, scope: !17969)
!17974 = !DILocation(line: 3250, column: 10, scope: !17969)
!17975 = !DILocation(line: 3250, column: 31, scope: !17976)
!17976 = distinct !DILexicalBlock(scope: !17969, file: !3, line: 3250, column: 5)
!17977 = !DILocation(line: 3250, column: 5, scope: !17969)
!17978 = !DILocation(line: 3251, column: 10, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17980, file: !3, line: 3251, column: 10)
!17980 = distinct !DILexicalBlock(scope: !17976, file: !3, line: 3250, column: 49)
!17981 = !DILocation(line: 3251, column: 19, scope: !17979)
!17982 = !DILocation(line: 3251, column: 23, scope: !17979)
!17983 = !DILocation(line: 3251, column: 17, scope: !17979)
!17984 = !DILocation(line: 3251, column: 10, scope: !17980)
!17985 = !DILocation(line: 3252, column: 13, scope: !17986)
!17986 = distinct !DILexicalBlock(scope: !17979, file: !3, line: 3251, column: 29)
!17987 = !DILocation(line: 3252, column: 17, scope: !17986)
!17988 = !DILocation(line: 3252, column: 8, scope: !17986)
!17989 = !DILocation(line: 3252, column: 11, scope: !17986)
!17990 = !DILocation(line: 3253, column: 11, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17986, file: !3, line: 3253, column: 11)
!17992 = !DILocation(line: 3253, column: 11, scope: !17986)
!17993 = !DILocation(line: 3253, column: 27, scope: !17991)
!17994 = !DILocation(line: 3253, column: 31, scope: !17991)
!17995 = !DILocation(line: 3253, column: 22, scope: !17991)
!17996 = !DILocation(line: 3253, column: 25, scope: !17991)
!17997 = !DILocation(line: 3253, column: 21, scope: !17991)
!17998 = !DILocation(line: 3254, column: 7, scope: !17986)
!17999 = !DILocation(line: 3256, column: 5, scope: !17980)
!18000 = !DILocation(line: 3250, column: 39, scope: !17976)
!18001 = !DILocation(line: 3250, column: 43, scope: !17976)
!18002 = !DILocation(line: 3250, column: 37, scope: !17976)
!18003 = !DILocation(line: 3250, column: 5, scope: !17976)
!18004 = distinct !{!18004, !17977, !18005}
!18005 = !DILocation(line: 3256, column: 5, scope: !17969)
!18006 = !DILocation(line: 3257, column: 4, scope: !17970)
!18007 = !DILocation(line: 3259, column: 6, scope: !17956)
!18008 = !DILocation(line: 3259, column: 13, scope: !17956)
!18009 = !DILocation(line: 3259, column: 20, scope: !17956)
!18010 = !DILocation(line: 3260, column: 3, scope: !17956)
!18011 = !DILocation(line: 3244, column: 27, scope: !17950)
!18012 = !DILocation(line: 3244, column: 3, scope: !17950)
!18013 = distinct !{!18013, !17954, !18014}
!18014 = !DILocation(line: 3260, column: 3, scope: !17946)
!18015 = !DILocation(line: 3261, column: 2, scope: !17947)
!18016 = !DILocation(line: 3243, column: 26, scope: !17940)
!18017 = !DILocation(line: 3243, column: 2, scope: !17940)
!18018 = distinct !{!18018, !17944, !18019}
!18019 = !DILocation(line: 3261, column: 2, scope: !17937)
!18020 = !DILocation(line: 3262, column: 1, scope: !17848)
!18021 = distinct !DISubprogram(name: "addpsA", scope: !3, file: !3, line: 294, type: !18022, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!18022 = !DISubroutineType(types: !18023)
!18023 = !{!148, !120}
!18024 = !DILocalVariable(name: "zspan", arg: 1, scope: !18021, file: !3, line: 294, type: !120)
!18025 = !DILocation(line: 294, column: 31, scope: !18021)
!18026 = !DILocation(line: 297, column: 6, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18021, file: !3, line: 297, column: 6)
!18028 = !DILocation(line: 297, column: 13, scope: !18027)
!18029 = !DILocation(line: 297, column: 24, scope: !18027)
!18030 = !DILocation(line: 297, column: 6, scope: !18021)
!18031 = !DILocation(line: 298, column: 30, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !18027, file: !3, line: 297, column: 29)
!18033 = !DILocation(line: 298, column: 37, scope: !18032)
!18034 = !DILocation(line: 298, column: 19, scope: !18032)
!18035 = !DILocation(line: 298, column: 3, scope: !18032)
!18036 = !DILocation(line: 298, column: 10, scope: !18032)
!18037 = !DILocation(line: 298, column: 17, scope: !18032)
!18038 = !DILocation(line: 299, column: 3, scope: !18032)
!18039 = !DILocation(line: 299, column: 10, scope: !18032)
!18040 = !DILocation(line: 299, column: 21, scope: !18032)
!18041 = !DILocation(line: 300, column: 2, scope: !18032)
!18042 = !DILocation(line: 302, column: 3, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18027, file: !3, line: 301, column: 7)
!18044 = !DILocation(line: 302, column: 10, scope: !18043)
!18045 = !DILocation(line: 302, column: 17, scope: !18043)
!18046 = !DILocation(line: 303, column: 3, scope: !18043)
!18047 = !DILocation(line: 303, column: 10, scope: !18043)
!18048 = !DILocation(line: 303, column: 21, scope: !18043)
!18049 = !DILocation(line: 305, column: 9, scope: !18021)
!18050 = !DILocation(line: 305, column: 16, scope: !18021)
!18051 = !DILocation(line: 305, column: 2, scope: !18021)
!18052 = distinct !DISubprogram(name: "addpsmainA", scope: !3, file: !3, line: 271, type: !18053, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!18053 = !DISubroutineType(types: !18054)
!18054 = !{!148, !369}
!18055 = !DILocalVariable(name: "lb", arg: 1, scope: !18052, file: !3, line: 271, type: !369)
!18056 = !DILocation(line: 271, column: 38, scope: !18052)
!18057 = !DILocalVariable(name: "psm", scope: !18052, file: !3, line: 273, type: !374)
!18058 = !DILocation(line: 273, column: 15, scope: !18052)
!18059 = !DILocation(line: 275, column: 7, scope: !18052)
!18060 = !DILocation(line: 275, column: 5, scope: !18052)
!18061 = !DILocation(line: 276, column: 14, scope: !18052)
!18062 = !DILocation(line: 276, column: 18, scope: !18052)
!18063 = !DILocation(line: 276, column: 2, scope: !18052)
!18064 = !DILocation(line: 277, column: 11, scope: !18052)
!18065 = !DILocation(line: 277, column: 2, scope: !18052)
!18066 = !DILocation(line: 277, column: 7, scope: !18052)
!18067 = !DILocation(line: 277, column: 9, scope: !18052)
!18068 = !DILocation(line: 279, column: 9, scope: !18052)
!18069 = !DILocation(line: 279, column: 14, scope: !18052)
!18070 = !DILocation(line: 279, column: 2, scope: !18052)
!18071 = distinct !DISubprogram(name: "shade_strand_samples", scope: !3, file: !3, line: 3740, type: !18072, scopeLine: 3741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!18072 = !DISubroutineType(types: !18073)
!18073 = !{null, !14018, !15464, !29, !29, !15465, !29}
!18074 = !DILocalVariable(name: "cache", arg: 1, scope: !18071, file: !3, line: 3740, type: !14018)
!18075 = !DILocation(line: 3740, column: 52, scope: !18071)
!18076 = !DILocalVariable(name: "ssamp", arg: 2, scope: !18071, file: !3, line: 3740, type: !15464)
!18077 = !DILocation(line: 3740, column: 72, scope: !18071)
!18078 = !DILocalVariable(name: "UNUSED_x", arg: 3, scope: !18071, file: !3, line: 3740, type: !29)
!18079 = !DILocation(line: 3740, column: 83, scope: !18071)
!18080 = !DILocalVariable(name: "UNUSED_y", arg: 4, scope: !18071, file: !3, line: 3740, type: !29)
!18081 = !DILocation(line: 3740, column: 98, scope: !18071)
!18082 = !DILocalVariable(name: "row", arg: 5, scope: !18071, file: !3, line: 3740, type: !15465)
!18083 = !DILocation(line: 3740, column: 121, scope: !18071)
!18084 = !DILocalVariable(name: "addpassflag", arg: 6, scope: !18071, file: !3, line: 3740, type: !29)
!18085 = !DILocation(line: 3740, column: 130, scope: !18071)
!18086 = !DILocalVariable(name: "sseg", scope: !18071, file: !3, line: 3742, type: !8552)
!18087 = !DILocation(line: 3742, column: 16, scope: !18071)
!18088 = !DILocalVariable(name: "svert", scope: !18071, file: !3, line: 3743, type: !4505)
!18089 = !DILocation(line: 3743, column: 14, scope: !18071)
!18090 = !DILocalVariable(name: "obi", scope: !18071, file: !3, line: 3744, type: !5663)
!18091 = !DILocation(line: 3744, column: 21, scope: !18071)
!18092 = !DILocalVariable(name: "obr", scope: !18071, file: !3, line: 3745, type: !4395)
!18093 = !DILocation(line: 3745, column: 13, scope: !18071)
!18094 = !DILocation(line: 3747, column: 9, scope: !18071)
!18095 = !DILocation(line: 3747, column: 26, scope: !18071)
!18096 = !DILocation(line: 3747, column: 31, scope: !18071)
!18097 = !DILocation(line: 3747, column: 24, scope: !18071)
!18098 = !DILocation(line: 3747, column: 5, scope: !18071)
!18099 = !DILocation(line: 3748, column: 7, scope: !18071)
!18100 = !DILocation(line: 3748, column: 12, scope: !18071)
!18101 = !DILocation(line: 3748, column: 5, scope: !18071)
!18102 = !DILocation(line: 3750, column: 12, scope: !18071)
!18103 = !DILocation(line: 3750, column: 7, scope: !18071)
!18104 = !DILocation(line: 3750, column: 10, scope: !18071)
!18105 = !DILocation(line: 3751, column: 34, scope: !18071)
!18106 = !DILocation(line: 3751, column: 39, scope: !18071)
!18107 = !DILocation(line: 3751, column: 44, scope: !18071)
!18108 = !DILocation(line: 3751, column: 45, scope: !18071)
!18109 = !DILocation(line: 3751, column: 15, scope: !18071)
!18110 = !DILocation(line: 3751, column: 7, scope: !18071)
!18111 = !DILocation(line: 3751, column: 13, scope: !18071)
!18112 = !DILocation(line: 3752, column: 20, scope: !18071)
!18113 = !DILocation(line: 3752, column: 28, scope: !18071)
!18114 = !DILocation(line: 3752, column: 7, scope: !18071)
!18115 = !DILocation(line: 3752, column: 13, scope: !18071)
!18116 = !DILocation(line: 3754, column: 14, scope: !18071)
!18117 = !DILocation(line: 3754, column: 22, scope: !18071)
!18118 = !DILocation(line: 3754, column: 29, scope: !18071)
!18119 = !DILocation(line: 3754, column: 34, scope: !18071)
!18120 = !DILocation(line: 3754, column: 27, scope: !18071)
!18121 = !DILocation(line: 3754, column: 7, scope: !18071)
!18122 = !DILocation(line: 3755, column: 14, scope: !18071)
!18123 = !DILocation(line: 3755, column: 19, scope: !18071)
!18124 = !DILocation(line: 3755, column: 27, scope: !18071)
!18125 = !DILocation(line: 3755, column: 13, scope: !18071)
!18126 = !DILocation(line: 3755, column: 34, scope: !18071)
!18127 = !DILocation(line: 3755, column: 39, scope: !18071)
!18128 = !DILocation(line: 3755, column: 44, scope: !18071)
!18129 = !DILocation(line: 3755, column: 7, scope: !18071)
!18130 = !DILocation(line: 3755, column: 2, scope: !18071)
!18131 = !DILocation(line: 3755, column: 11, scope: !18071)
!18132 = !DILocation(line: 3756, column: 13, scope: !18071)
!18133 = !DILocation(line: 3756, column: 7, scope: !18071)
!18134 = !DILocation(line: 3756, column: 2, scope: !18071)
!18135 = !DILocation(line: 3756, column: 11, scope: !18071)
!18136 = !DILocation(line: 3757, column: 13, scope: !18071)
!18137 = !DILocation(line: 3757, column: 18, scope: !18071)
!18138 = !DILocation(line: 3757, column: 7, scope: !18071)
!18139 = !DILocation(line: 3757, column: 2, scope: !18071)
!18140 = !DILocation(line: 3757, column: 11, scope: !18071)
!18141 = !DILocation(line: 3758, column: 14, scope: !18071)
!18142 = !DILocation(line: 3758, column: 19, scope: !18071)
!18143 = !DILocation(line: 3758, column: 34, scope: !18071)
!18144 = !DILocation(line: 3758, column: 42, scope: !18071)
!18145 = !DILocation(line: 3758, column: 49, scope: !18071)
!18146 = !DILocation(line: 3758, column: 27, scope: !18071)
!18147 = !DILocation(line: 3758, column: 13, scope: !18071)
!18148 = !DILocation(line: 3758, column: 54, scope: !18071)
!18149 = !DILocation(line: 3758, column: 59, scope: !18071)
!18150 = !DILocation(line: 3758, column: 63, scope: !18071)
!18151 = !DILocation(line: 3758, column: 68, scope: !18071)
!18152 = !DILocation(line: 3758, column: 7, scope: !18071)
!18153 = !DILocation(line: 3758, column: 2, scope: !18071)
!18154 = !DILocation(line: 3758, column: 11, scope: !18071)
!18155 = !DILocation(line: 3760, column: 2, scope: !18071)
!18156 = !DILocation(line: 3760, column: 9, scope: !18071)
!18157 = !DILocation(line: 3760, column: 12, scope: !18071)
!18158 = !DILocation(line: 3761, column: 27, scope: !18071)
!18159 = !DILocation(line: 3761, column: 41, scope: !18071)
!18160 = !DILocation(line: 3761, column: 48, scope: !18071)
!18161 = !DILocation(line: 3761, column: 53, scope: !18071)
!18162 = !DILocation(line: 3761, column: 56, scope: !18071)
!18163 = !DILocation(line: 3761, column: 61, scope: !18071)
!18164 = !DILocation(line: 3761, column: 64, scope: !18071)
!18165 = !DILocation(line: 3761, column: 2, scope: !18071)
!18166 = !DILocation(line: 3762, column: 22, scope: !18071)
!18167 = !DILocation(line: 3762, column: 27, scope: !18071)
!18168 = !DILocation(line: 3762, column: 2, scope: !18071)
!18169 = !DILocation(line: 3762, column: 9, scope: !18071)
!18170 = !DILocation(line: 3762, column: 16, scope: !18071)
!18171 = !DILocation(line: 3762, column: 20, scope: !18071)
!18172 = !DILocation(line: 3763, column: 1, scope: !18071)
!18173 = distinct !DISubprogram(name: "shade_tra_samples_fill", scope: !3, file: !3, line: 3790, type: !18174, scopeLine: 3791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!18174 = !DISubroutineType(types: !18175)
!18175 = !{null, !15464, !29, !29, !29, !29, !29, !29}
!18176 = !DILocalVariable(name: "ssamp", arg: 1, scope: !18173, file: !3, line: 3790, type: !15464)
!18177 = !DILocation(line: 3790, column: 49, scope: !18173)
!18178 = !DILocalVariable(name: "x", arg: 2, scope: !18173, file: !3, line: 3790, type: !29)
!18179 = !DILocation(line: 3790, column: 60, scope: !18173)
!18180 = !DILocalVariable(name: "y", arg: 3, scope: !18173, file: !3, line: 3790, type: !29)
!18181 = !DILocation(line: 3790, column: 67, scope: !18173)
!18182 = !DILocalVariable(name: "z", arg: 4, scope: !18173, file: !3, line: 3790, type: !29)
!18183 = !DILocation(line: 3790, column: 74, scope: !18173)
!18184 = !DILocalVariable(name: "obi", arg: 5, scope: !18173, file: !3, line: 3790, type: !29)
!18185 = !DILocation(line: 3790, column: 81, scope: !18173)
!18186 = !DILocalVariable(name: "facenr", arg: 6, scope: !18173, file: !3, line: 3790, type: !29)
!18187 = !DILocation(line: 3790, column: 90, scope: !18173)
!18188 = !DILocalVariable(name: "curmask", arg: 7, scope: !18173, file: !3, line: 3790, type: !29)
!18189 = !DILocation(line: 3790, column: 102, scope: !18173)
!18190 = !DILocalVariable(name: "shi", scope: !18173, file: !3, line: 3792, type: !15510)
!18191 = !DILocation(line: 3792, column: 14, scope: !18173)
!18192 = !DILocation(line: 3792, column: 19, scope: !18173)
!18193 = !DILocation(line: 3792, column: 26, scope: !18173)
!18194 = !DILocalVariable(name: "xs", scope: !18173, file: !3, line: 3793, type: !21)
!18195 = !DILocation(line: 3793, column: 8, scope: !18173)
!18196 = !DILocalVariable(name: "ys", scope: !18173, file: !3, line: 3793, type: !21)
!18197 = !DILocation(line: 3793, column: 12, scope: !18173)
!18198 = !DILocation(line: 3795, column: 2, scope: !18173)
!18199 = !DILocation(line: 3795, column: 9, scope: !18173)
!18200 = !DILocation(line: 3795, column: 12, scope: !18173)
!18201 = !DILocation(line: 3797, column: 27, scope: !18173)
!18202 = !DILocation(line: 3797, column: 32, scope: !18173)
!18203 = !DILocation(line: 3797, column: 37, scope: !18173)
!18204 = !DILocation(line: 3797, column: 2, scope: !18173)
!18205 = !DILocation(line: 3800, column: 6, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18173, file: !3, line: 3800, column: 6)
!18207 = !DILocation(line: 3800, column: 11, scope: !18206)
!18208 = !DILocation(line: 3800, column: 6, scope: !18173)
!18209 = !DILocation(line: 3803, column: 7, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 3803, column: 7)
!18211 = distinct !DILexicalBlock(scope: !18206, file: !3, line: 3800, column: 16)
!18212 = !DILocation(line: 3803, column: 12, scope: !18210)
!18213 = !DILocation(line: 3803, column: 17, scope: !18210)
!18214 = !DILocation(line: 3803, column: 22, scope: !18210)
!18215 = !DILocation(line: 3803, column: 7, scope: !18211)
!18216 = !DILocalVariable(name: "shi_inc", scope: !18217, file: !3, line: 3804, type: !12)
!18217 = distinct !DILexicalBlock(scope: !18210, file: !3, line: 3803, column: 36)
!18218 = !DILocation(line: 3804, column: 10, scope: !18217)
!18219 = !DILocalVariable(name: "samp", scope: !18217, file: !3, line: 3804, type: !12)
!18220 = !DILocation(line: 3804, column: 22, scope: !18217)
!18221 = !DILocation(line: 3806, column: 13, scope: !18222)
!18222 = distinct !DILexicalBlock(scope: !18217, file: !3, line: 3806, column: 4)
!18223 = !DILocation(line: 3806, column: 9, scope: !18222)
!18224 = !DILocation(line: 3806, column: 17, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 3806, column: 4)
!18226 = !DILocation(line: 3806, column: 24, scope: !18225)
!18227 = !DILocation(line: 3806, column: 22, scope: !18225)
!18228 = !DILocation(line: 3806, column: 21, scope: !18225)
!18229 = !DILocation(line: 3806, column: 4, scope: !18222)
!18230 = !DILocation(line: 3807, column: 9, scope: !18231)
!18231 = distinct !DILexicalBlock(scope: !18232, file: !3, line: 3807, column: 9)
!18232 = distinct !DILexicalBlock(scope: !18225, file: !3, line: 3806, column: 37)
!18233 = !DILocation(line: 3807, column: 23, scope: !18231)
!18234 = !DILocation(line: 3807, column: 21, scope: !18231)
!18235 = !DILocation(line: 3807, column: 17, scope: !18231)
!18236 = !DILocation(line: 3807, column: 9, scope: !18232)
!18237 = !DILocation(line: 3808, column: 17, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18231, file: !3, line: 3807, column: 30)
!18239 = !DILocation(line: 3808, column: 10, scope: !18238)
!18240 = !DILocation(line: 3808, column: 27, scope: !18238)
!18241 = !DILocation(line: 3808, column: 21, scope: !18238)
!18242 = !DILocation(line: 3808, column: 19, scope: !18238)
!18243 = !DILocation(line: 3808, column: 36, scope: !18238)
!18244 = !DILocation(line: 3808, column: 8, scope: !18238)
!18245 = !DILocation(line: 3809, column: 17, scope: !18238)
!18246 = !DILocation(line: 3809, column: 10, scope: !18238)
!18247 = !DILocation(line: 3809, column: 27, scope: !18238)
!18248 = !DILocation(line: 3809, column: 21, scope: !18238)
!18249 = !DILocation(line: 3809, column: 19, scope: !18238)
!18250 = !DILocation(line: 3809, column: 36, scope: !18238)
!18251 = !DILocation(line: 3809, column: 8, scope: !18238)
!18252 = !DILocation(line: 3811, column: 10, scope: !18253)
!18253 = distinct !DILexicalBlock(scope: !18238, file: !3, line: 3811, column: 10)
!18254 = !DILocation(line: 3811, column: 10, scope: !18238)
!18255 = !DILocation(line: 3812, column: 33, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18253, file: !3, line: 3811, column: 19)
!18257 = !DILocation(line: 3812, column: 36, scope: !18256)
!18258 = !DILocation(line: 3812, column: 40, scope: !18256)
!18259 = !DILocation(line: 3812, column: 7, scope: !18256)
!18260 = !DILocation(line: 3813, column: 10, scope: !18256)
!18261 = !DILocation(line: 3814, column: 6, scope: !18256)
!18262 = !DILocation(line: 3815, column: 21, scope: !18238)
!18263 = !DILocation(line: 3815, column: 19, scope: !18238)
!18264 = !DILocation(line: 3815, column: 6, scope: !18238)
!18265 = !DILocation(line: 3815, column: 11, scope: !18238)
!18266 = !DILocation(line: 3815, column: 15, scope: !18238)
!18267 = !DILocation(line: 3816, column: 38, scope: !18238)
!18268 = !DILocation(line: 3816, column: 43, scope: !18238)
!18269 = !DILocation(line: 3816, column: 21, scope: !18238)
!18270 = !DILocation(line: 3816, column: 50, scope: !18238)
!18271 = !DILocation(line: 3816, column: 6, scope: !18238)
!18272 = !DILocation(line: 3816, column: 11, scope: !18238)
!18273 = !DILocation(line: 3816, column: 19, scope: !18238)
!18274 = !DILocation(line: 3817, column: 29, scope: !18238)
!18275 = !DILocation(line: 3817, column: 34, scope: !18238)
!18276 = !DILocation(line: 3817, column: 37, scope: !18238)
!18277 = !DILocation(line: 3817, column: 40, scope: !18238)
!18278 = !DILocation(line: 3817, column: 44, scope: !18238)
!18279 = !DILocation(line: 3817, column: 55, scope: !18238)
!18280 = !DILocation(line: 3817, column: 48, scope: !18238)
!18281 = !DILocation(line: 3817, column: 6, scope: !18238)
!18282 = !DILocation(line: 3818, column: 25, scope: !18238)
!18283 = !DILocation(line: 3818, column: 6, scope: !18238)
!18284 = !DILocation(line: 3819, column: 10, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18238, file: !3, line: 3819, column: 10)
!18286 = !DILocation(line: 3819, column: 17, scope: !18285)
!18287 = !DILocation(line: 3819, column: 10, scope: !18238)
!18288 = !DILocation(line: 3820, column: 31, scope: !18285)
!18289 = !DILocation(line: 3820, column: 7, scope: !18285)
!18290 = !DILocation(line: 3822, column: 38, scope: !18285)
!18291 = !DILocation(line: 3822, column: 7, scope: !18285)
!18292 = !DILocation(line: 3824, column: 13, scope: !18238)
!18293 = !DILocation(line: 3825, column: 5, scope: !18238)
!18294 = !DILocation(line: 3826, column: 4, scope: !18232)
!18295 = !DILocation(line: 3806, column: 33, scope: !18225)
!18296 = !DILocation(line: 3806, column: 4, scope: !18225)
!18297 = distinct !{!18297, !18229, !18298}
!18298 = !DILocation(line: 3826, column: 4, scope: !18222)
!18299 = !DILocation(line: 3827, column: 3, scope: !18217)
!18300 = !DILocation(line: 3829, column: 10, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18302, file: !3, line: 3829, column: 8)
!18302 = distinct !DILexicalBlock(scope: !18210, file: !3, line: 3828, column: 8)
!18303 = !DILocation(line: 3829, column: 8, scope: !18301)
!18304 = !DILocation(line: 3829, column: 8, scope: !18302)
!18305 = !DILocalVariable(name: "b", scope: !18306, file: !3, line: 3830, type: !12)
!18306 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 3829, column: 15)
!18307 = !DILocation(line: 3830, column: 11, scope: !18306)
!18308 = !DILocation(line: 3830, column: 16, scope: !18306)
!18309 = !DILocation(line: 3830, column: 25, scope: !18306)
!18310 = !DILocation(line: 3830, column: 34, scope: !18306)
!18311 = !DILocation(line: 3830, column: 14, scope: !18306)
!18312 = !DILocation(line: 3831, column: 16, scope: !18306)
!18313 = !DILocation(line: 3831, column: 9, scope: !18306)
!18314 = !DILocation(line: 3831, column: 22, scope: !18306)
!18315 = !DILocation(line: 3831, column: 31, scope: !18306)
!18316 = !DILocation(line: 3831, column: 39, scope: !18306)
!18317 = !DILocation(line: 3831, column: 41, scope: !18306)
!18318 = !DILocation(line: 3831, column: 20, scope: !18306)
!18319 = !DILocation(line: 3831, column: 18, scope: !18306)
!18320 = !DILocation(line: 3831, column: 47, scope: !18306)
!18321 = !DILocation(line: 3831, column: 7, scope: !18306)
!18322 = !DILocation(line: 3832, column: 16, scope: !18306)
!18323 = !DILocation(line: 3832, column: 9, scope: !18306)
!18324 = !DILocation(line: 3832, column: 22, scope: !18306)
!18325 = !DILocation(line: 3832, column: 31, scope: !18306)
!18326 = !DILocation(line: 3832, column: 39, scope: !18306)
!18327 = !DILocation(line: 3832, column: 40, scope: !18306)
!18328 = !DILocation(line: 3832, column: 20, scope: !18306)
!18329 = !DILocation(line: 3832, column: 18, scope: !18306)
!18330 = !DILocation(line: 3832, column: 45, scope: !18306)
!18331 = !DILocation(line: 3832, column: 7, scope: !18306)
!18332 = !DILocation(line: 3833, column: 4, scope: !18306)
!18333 = !DILocation(line: 3834, column: 17, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 3834, column: 13)
!18335 = !DILocation(line: 3834, column: 13, scope: !18334)
!18336 = !DILocation(line: 3834, column: 13, scope: !18301)
!18337 = !DILocation(line: 3835, column: 16, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18334, file: !3, line: 3834, column: 26)
!18339 = !DILocation(line: 3835, column: 9, scope: !18338)
!18340 = !DILocation(line: 3835, column: 36, scope: !18338)
!18341 = !DILocation(line: 3835, column: 32, scope: !18338)
!18342 = !DILocation(line: 3835, column: 43, scope: !18338)
!18343 = !DILocation(line: 3835, column: 20, scope: !18338)
!18344 = !DILocation(line: 3835, column: 18, scope: !18338)
!18345 = !DILocation(line: 3835, column: 50, scope: !18338)
!18346 = !DILocation(line: 3835, column: 7, scope: !18338)
!18347 = !DILocation(line: 3836, column: 16, scope: !18338)
!18348 = !DILocation(line: 3836, column: 9, scope: !18338)
!18349 = !DILocation(line: 3836, column: 36, scope: !18338)
!18350 = !DILocation(line: 3836, column: 32, scope: !18338)
!18351 = !DILocation(line: 3836, column: 43, scope: !18338)
!18352 = !DILocation(line: 3836, column: 20, scope: !18338)
!18353 = !DILocation(line: 3836, column: 18, scope: !18338)
!18354 = !DILocation(line: 3836, column: 50, scope: !18338)
!18355 = !DILocation(line: 3836, column: 7, scope: !18338)
!18356 = !DILocation(line: 3837, column: 4, scope: !18338)
!18357 = !DILocation(line: 3839, column: 16, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18334, file: !3, line: 3838, column: 9)
!18359 = !DILocation(line: 3839, column: 9, scope: !18358)
!18360 = !DILocation(line: 3839, column: 18, scope: !18358)
!18361 = !DILocation(line: 3839, column: 7, scope: !18358)
!18362 = !DILocation(line: 3840, column: 16, scope: !18358)
!18363 = !DILocation(line: 3840, column: 9, scope: !18358)
!18364 = !DILocation(line: 3840, column: 18, scope: !18358)
!18365 = !DILocation(line: 3840, column: 7, scope: !18358)
!18366 = !DILocation(line: 3842, column: 15, scope: !18302)
!18367 = !DILocation(line: 3842, column: 4, scope: !18302)
!18368 = !DILocation(line: 3842, column: 9, scope: !18302)
!18369 = !DILocation(line: 3842, column: 13, scope: !18302)
!18370 = !DILocation(line: 3843, column: 36, scope: !18302)
!18371 = !DILocation(line: 3843, column: 41, scope: !18302)
!18372 = !DILocation(line: 3843, column: 19, scope: !18302)
!18373 = !DILocation(line: 3843, column: 48, scope: !18302)
!18374 = !DILocation(line: 3843, column: 4, scope: !18302)
!18375 = !DILocation(line: 3843, column: 9, scope: !18302)
!18376 = !DILocation(line: 3843, column: 17, scope: !18302)
!18377 = !DILocation(line: 3844, column: 27, scope: !18302)
!18378 = !DILocation(line: 3844, column: 32, scope: !18302)
!18379 = !DILocation(line: 3844, column: 35, scope: !18302)
!18380 = !DILocation(line: 3844, column: 38, scope: !18302)
!18381 = !DILocation(line: 3844, column: 42, scope: !18302)
!18382 = !DILocation(line: 3844, column: 53, scope: !18302)
!18383 = !DILocation(line: 3844, column: 46, scope: !18302)
!18384 = !DILocation(line: 3844, column: 4, scope: !18302)
!18385 = !DILocation(line: 3845, column: 23, scope: !18302)
!18386 = !DILocation(line: 3845, column: 4, scope: !18302)
!18387 = !DILocation(line: 3846, column: 28, scope: !18302)
!18388 = !DILocation(line: 3846, column: 4, scope: !18302)
!18389 = !DILocation(line: 3850, column: 15, scope: !18211)
!18390 = !DILocation(line: 3850, column: 20, scope: !18211)
!18391 = !DILocation(line: 3850, column: 26, scope: !18211)
!18392 = !DILocation(line: 3850, column: 3, scope: !18211)
!18393 = !DILocation(line: 3850, column: 10, scope: !18211)
!18394 = !DILocation(line: 3850, column: 13, scope: !18211)
!18395 = !DILocation(line: 3851, column: 2, scope: !18211)
!18396 = !DILocation(line: 3852, column: 1, scope: !18173)
!18397 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !835, file: !835, line: 507, type: !18398, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, retainedNodes: !108)
!18398 = !DISubroutineType(types: !18399)
!18399 = !{null, !31, !88, !21}
!18400 = !DILocalVariable(name: "r", arg: 1, scope: !18397, file: !835, line: 507, type: !31)
!18401 = !DILocation(line: 507, column: 33, scope: !18397)
!18402 = !DILocalVariable(name: "a", arg: 2, scope: !18397, file: !835, line: 507, type: !88)
!18403 = !DILocation(line: 507, column: 51, scope: !18397)
!18404 = !DILocalVariable(name: "f", arg: 3, scope: !18397, file: !835, line: 507, type: !21)
!18405 = !DILocation(line: 507, column: 63, scope: !18397)
!18406 = !DILocation(line: 509, column: 10, scope: !18397)
!18407 = !DILocation(line: 509, column: 17, scope: !18397)
!18408 = !DILocation(line: 509, column: 15, scope: !18397)
!18409 = !DILocation(line: 509, column: 2, scope: !18397)
!18410 = !DILocation(line: 509, column: 7, scope: !18397)
!18411 = !DILocation(line: 510, column: 10, scope: !18397)
!18412 = !DILocation(line: 510, column: 17, scope: !18397)
!18413 = !DILocation(line: 510, column: 15, scope: !18397)
!18414 = !DILocation(line: 510, column: 2, scope: !18397)
!18415 = !DILocation(line: 510, column: 7, scope: !18397)
!18416 = !DILocation(line: 511, column: 10, scope: !18397)
!18417 = !DILocation(line: 511, column: 17, scope: !18397)
!18418 = !DILocation(line: 511, column: 15, scope: !18397)
!18419 = !DILocation(line: 511, column: 2, scope: !18397)
!18420 = !DILocation(line: 511, column: 7, scope: !18397)
!18421 = !DILocation(line: 512, column: 1, scope: !18397)
