; ModuleID = 'magick/quantum-export.c'
source_filename = "magick/quantum-export.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._QuantumInfo = type { i64, i64, i32, double, double, double, i64, i32, i32, i32, i64, i8**, i64, i32, %struct._QuantumState, %struct.SemaphoreInfo*, i64 }
%struct._QuantumState = type { double, i32, i64, i32* }
%union._SinglePrecision = type { i32 }

@.str = private unnamed_addr constant [24 x i8] c"magick/quantum-export.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"ColorSeparatedImageRequired\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"ColormappedImageRequired\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @ExportQuantumPixels(%struct._Image* %image, %struct._CacheView* %image_view, %struct._QuantumInfo* %quantum_info, i32 %quantum_type, i8* noalias %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !516 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %quantum_type.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %alpha = alloca float, align 4
  %number_pixels = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca i8*, align 8
  %extent = alloca i64, align 8
  %q16 = alloca %struct._PixelPacket*, align 8
  %q49 = alloca %struct._PixelPacket*, align 8
  %quantum = alloca i16, align 2
  %q76 = alloca %struct._PixelPacket*, align 8
  %quantum119 = alloca i16, align 2
  %q120 = alloca %struct._PixelPacket*, align 8
  %q149 = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !720, metadata !DIExpression()), !dbg !721
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !722, metadata !DIExpression()), !dbg !723
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !724, metadata !DIExpression()), !dbg !725
  store i32 %quantum_type, i32* %quantum_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quantum_type.addr, metadata !726, metadata !DIExpression()), !dbg !727
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !728, metadata !DIExpression()), !dbg !729
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !730, metadata !DIExpression()), !dbg !731
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !732, metadata !DIExpression()), !dbg !733
  call void @llvm.dbg.declare(metadata i64* %number_pixels, metadata !734, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !736, metadata !DIExpression()), !dbg !738
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !739, metadata !DIExpression()), !dbg !743
  call void @llvm.dbg.declare(metadata i64* %x, metadata !744, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.declare(metadata i8** %q, metadata !746, metadata !DIExpression()), !dbg !747
  call void @llvm.dbg.declare(metadata i64* %extent, metadata !748, metadata !DIExpression()), !dbg !749
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !750
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !752
  %1 = load i32, i32* %debug, align 8, !dbg !752
  %cmp = icmp ne i32 %1, 0, !dbg !753
  br i1 %cmp, label %if.then, label %if.end, !dbg !754

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !755
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !756
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !755
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3194, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !757
  br label %if.end, !dbg !758

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !759
  %cmp1 = icmp eq i8* %3, null, !dbg !761
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !762

if.then2:                                         ; preds = %if.end
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !763
  %call3 = call i8* @GetQuantumPixels(%struct._QuantumInfo* %4), !dbg !764
  store i8* %call3, i8** %pixels.addr, align 8, !dbg !765
  br label %if.end4, !dbg !766

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !767
  %cmp5 = icmp eq %struct._CacheView* %5, null, !dbg !769
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !770

if.then6:                                         ; preds = %if.end4
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !771
  %call7 = call i64 @GetImageExtent(%struct._Image* %6), !dbg !773
  store i64 %call7, i64* %number_pixels, align 8, !dbg !774
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !775
  %call8 = call %struct._PixelPacket* @GetVirtualPixelQueue(%struct._Image* %7), !dbg !776
  store %struct._PixelPacket* %call8, %struct._PixelPacket** %p, align 8, !dbg !777
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !778
  %call9 = call i16* @GetVirtualIndexQueue(%struct._Image* %8), !dbg !779
  store i16* %call9, i16** %indexes, align 8, !dbg !780
  br label %if.end13, !dbg !781

if.else:                                          ; preds = %if.end4
  %9 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !782
  %call10 = call i64 @GetCacheViewExtent(%struct._CacheView* %9), !dbg !784
  store i64 %call10, i64* %number_pixels, align 8, !dbg !785
  %10 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !786
  %call11 = call %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView* %10), !dbg !787
  store %struct._PixelPacket* %call11, %struct._PixelPacket** %p, align 8, !dbg !788
  %11 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !789
  %call12 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %11), !dbg !790
  store i16* %call12, i16** %indexes, align 8, !dbg !791
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then6
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !792
  %alpha_type = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 9, !dbg !794
  %13 = load i32, i32* %alpha_type, align 8, !dbg !794
  %cmp14 = icmp eq i32 %13, 1, !dbg !795
  br i1 %cmp14, label %if.then15, label %if.end40, !dbg !796

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q16, metadata !797, metadata !DIExpression()), !dbg !800
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !801
  %call17 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %14), !dbg !802
  store %struct._PixelPacket* %call17, %struct._PixelPacket** %q16, align 8, !dbg !803
  %15 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !804
  %cmp18 = icmp ne %struct._CacheView* %15, null, !dbg !806
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !807

if.then19:                                        ; preds = %if.then15
  %16 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !808
  %call20 = call %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView* %16), !dbg !809
  store %struct._PixelPacket* %call20, %struct._PixelPacket** %q16, align 8, !dbg !810
  br label %if.end21, !dbg !811

if.end21:                                         ; preds = %if.then19, %if.then15
  store i64 0, i64* %x, align 8, !dbg !812
  br label %for.cond, !dbg !814

for.cond:                                         ; preds = %for.inc, %if.end21
  %17 = load i64, i64* %x, align 8, !dbg !815
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !817
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 7, !dbg !818
  %19 = load i64, i64* %columns, align 8, !dbg !818
  %cmp22 = icmp slt i64 %17, %19, !dbg !819
  br i1 %cmp22, label %for.body, label %for.end, !dbg !820

for.body:                                         ; preds = %for.cond
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !821
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 3, !dbg !821
  %21 = load i16, i16* %opacity, align 2, !dbg !821
  %conv = zext i16 %21 to i32, !dbg !821
  %sub = sub nsw i32 65535, %conv, !dbg !821
  %conv23 = sitofp i32 %sub to double, !dbg !821
  %mul = fmul double 0x3EF0001000100010, %conv23, !dbg !823
  %conv24 = fptrunc double %mul to float, !dbg !824
  store float %conv24, float* %alpha, align 4, !dbg !825
  %22 = load float, float* %alpha, align 4, !dbg !826
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !826
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 0, i32 2, !dbg !826
  %24 = load i16, i16* %red, align 2, !dbg !826
  %conv25 = zext i16 %24 to i32, !dbg !826
  %conv26 = sitofp i32 %conv25 to float, !dbg !826
  %mul27 = fmul float %22, %conv26, !dbg !826
  %call28 = call zeroext i16 @ClampToQuantum(float %mul27), !dbg !826
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !826
  %red29 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !826
  store i16 %call28, i16* %red29, align 2, !dbg !826
  %26 = load float, float* %alpha, align 4, !dbg !827
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !827
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 1, !dbg !827
  %28 = load i16, i16* %green, align 2, !dbg !827
  %conv30 = zext i16 %28 to i32, !dbg !827
  %conv31 = sitofp i32 %conv30 to float, !dbg !827
  %mul32 = fmul float %26, %conv31, !dbg !827
  %call33 = call zeroext i16 @ClampToQuantum(float %mul32), !dbg !827
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !827
  %green34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 1, !dbg !827
  store i16 %call33, i16* %green34, align 2, !dbg !827
  %30 = load float, float* %alpha, align 4, !dbg !828
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !828
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 0, !dbg !828
  %32 = load i16, i16* %blue, align 2, !dbg !828
  %conv35 = zext i16 %32 to i32, !dbg !828
  %conv36 = sitofp i32 %conv35 to float, !dbg !828
  %mul37 = fmul float %30, %conv36, !dbg !828
  %call38 = call zeroext i16 @ClampToQuantum(float %mul37), !dbg !828
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !828
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 0, !dbg !828
  store i16 %call38, i16* %blue39, align 2, !dbg !828
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q16, align 8, !dbg !829
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 1, !dbg !829
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q16, align 8, !dbg !829
  br label %for.inc, !dbg !830

for.inc:                                          ; preds = %for.body
  %35 = load i64, i64* %x, align 8, !dbg !831
  %inc = add nsw i64 %35, 1, !dbg !831
  store i64 %inc, i64* %x, align 8, !dbg !831
  br label %for.cond, !dbg !832, !llvm.loop !833

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !835

if.end40:                                         ; preds = %for.end, %if.end13
  %36 = load i32, i32* %quantum_type.addr, align 4, !dbg !836
  %cmp41 = icmp eq i32 %36, 17, !dbg !838
  br i1 %cmp41, label %if.then48, label %lor.lhs.false, !dbg !839

lor.lhs.false:                                    ; preds = %if.end40
  %37 = load i32, i32* %quantum_type.addr, align 4, !dbg !840
  %cmp43 = icmp eq i32 %37, 25, !dbg !841
  br i1 %cmp43, label %if.then48, label %lor.lhs.false45, !dbg !842

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %38 = load i32, i32* %quantum_type.addr, align 4, !dbg !843
  %cmp46 = icmp eq i32 %38, 27, !dbg !844
  br i1 %cmp46, label %if.then48, label %if.end69, !dbg !845

if.then48:                                        ; preds = %lor.lhs.false45, %lor.lhs.false, %if.end40
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q49, metadata !846, metadata !DIExpression()), !dbg !848
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !849
  %call50 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %39), !dbg !850
  store %struct._PixelPacket* %call50, %struct._PixelPacket** %q49, align 8, !dbg !851
  %40 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !852
  %cmp51 = icmp ne %struct._CacheView* %40, null, !dbg !854
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !855

if.then53:                                        ; preds = %if.then48
  %41 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !856
  %call54 = call %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView* %41), !dbg !857
  store %struct._PixelPacket* %call54, %struct._PixelPacket** %q49, align 8, !dbg !858
  br label %if.end55, !dbg !859

if.end55:                                         ; preds = %if.then53, %if.then48
  store i64 0, i64* %x, align 8, !dbg !860
  br label %for.cond56, !dbg !862

for.cond56:                                       ; preds = %for.inc66, %if.end55
  %42 = load i64, i64* %x, align 8, !dbg !863
  %43 = load i64, i64* %number_pixels, align 8, !dbg !865
  %cmp57 = icmp slt i64 %42, %43, !dbg !866
  br i1 %cmp57, label %for.body59, label %for.end68, !dbg !867

for.body59:                                       ; preds = %for.cond56
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q49, align 8, !dbg !868
  %opacity60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 3, !dbg !868
  %45 = load i16, i16* %opacity60, align 2, !dbg !868
  %conv61 = zext i16 %45 to i32, !dbg !868
  %sub62 = sub nsw i32 65535, %conv61, !dbg !868
  %conv63 = trunc i32 %sub62 to i16, !dbg !870
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q49, align 8, !dbg !871
  %opacity64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 3, !dbg !872
  store i16 %conv63, i16* %opacity64, align 2, !dbg !873
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q49, align 8, !dbg !874
  %incdec.ptr65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 1, !dbg !874
  store %struct._PixelPacket* %incdec.ptr65, %struct._PixelPacket** %q49, align 8, !dbg !874
  br label %for.inc66, !dbg !875

for.inc66:                                        ; preds = %for.body59
  %48 = load i64, i64* %x, align 8, !dbg !876
  %inc67 = add nsw i64 %48, 1, !dbg !876
  store i64 %inc67, i64* %x, align 8, !dbg !876
  br label %for.cond56, !dbg !877, !llvm.loop !878

for.end68:                                        ; preds = %for.cond56
  br label %if.end69, !dbg !880

if.end69:                                         ; preds = %for.end68, %lor.lhs.false45
  %49 = load i32, i32* %quantum_type.addr, align 4, !dbg !881
  %cmp70 = icmp eq i32 %49, 23, !dbg !883
  br i1 %cmp70, label %if.then75, label %lor.lhs.false72, !dbg !884

lor.lhs.false72:                                  ; preds = %if.end69
  %50 = load i32, i32* %quantum_type.addr, align 4, !dbg !885
  %cmp73 = icmp eq i32 %50, 24, !dbg !886
  br i1 %cmp73, label %if.then75, label %if.end95, !dbg !887

if.then75:                                        ; preds = %lor.lhs.false72, %if.end69
  call void @llvm.dbg.declare(metadata i16* %quantum, metadata !888, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q76, metadata !891, metadata !DIExpression()), !dbg !892
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !893
  %call77 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %51), !dbg !894
  store %struct._PixelPacket* %call77, %struct._PixelPacket** %q76, align 8, !dbg !895
  %52 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !896
  %cmp78 = icmp ne %struct._CacheView* %52, null, !dbg !898
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !899

if.then80:                                        ; preds = %if.then75
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !900
  %call81 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %53), !dbg !901
  store %struct._PixelPacket* %call81, %struct._PixelPacket** %q76, align 8, !dbg !902
  br label %if.end82, !dbg !903

if.end82:                                         ; preds = %if.then80, %if.then75
  store i64 0, i64* %x, align 8, !dbg !904
  br label %for.cond83, !dbg !906

for.cond83:                                       ; preds = %for.inc92, %if.end82
  %54 = load i64, i64* %x, align 8, !dbg !907
  %55 = load i64, i64* %number_pixels, align 8, !dbg !909
  %cmp84 = icmp slt i64 %54, %55, !dbg !910
  br i1 %cmp84, label %for.body86, label %for.end94, !dbg !911

for.body86:                                       ; preds = %for.cond83
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q76, align 8, !dbg !912
  %red87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 2, !dbg !912
  %57 = load i16, i16* %red87, align 2, !dbg !912
  store i16 %57, i16* %quantum, align 2, !dbg !914
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q76, align 8, !dbg !915
  %green88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 1, !dbg !915
  %59 = load i16, i16* %green88, align 2, !dbg !915
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q76, align 8, !dbg !915
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 2, !dbg !915
  store i16 %59, i16* %red89, align 2, !dbg !915
  %61 = load i16, i16* %quantum, align 2, !dbg !916
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q76, align 8, !dbg !916
  %green90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 1, !dbg !916
  store i16 %61, i16* %green90, align 2, !dbg !916
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q76, align 8, !dbg !917
  %incdec.ptr91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 1, !dbg !917
  store %struct._PixelPacket* %incdec.ptr91, %struct._PixelPacket** %q76, align 8, !dbg !917
  br label %for.inc92, !dbg !918

for.inc92:                                        ; preds = %for.body86
  %64 = load i64, i64* %x, align 8, !dbg !919
  %inc93 = add nsw i64 %64, 1, !dbg !919
  store i64 %inc93, i64* %x, align 8, !dbg !919
  br label %for.cond83, !dbg !920, !llvm.loop !921

for.end94:                                        ; preds = %for.cond83
  br label %if.end95, !dbg !923

if.end95:                                         ; preds = %for.end94, %lor.lhs.false72
  store i64 0, i64* %x, align 8, !dbg !924
  %65 = load i8*, i8** %pixels.addr, align 8, !dbg !925
  store i8* %65, i8** %q, align 8, !dbg !926
  %66 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !927
  call void @ResetQuantumState(%struct._QuantumInfo* %66), !dbg !928
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !929
  %68 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !930
  %69 = load i32, i32* %quantum_type.addr, align 4, !dbg !931
  %call96 = call i64 @GetQuantumExtent(%struct._Image* %67, %struct._QuantumInfo* %68, i32 %69), !dbg !932
  store i64 %call96, i64* %extent, align 8, !dbg !933
  %70 = load i32, i32* %quantum_type.addr, align 4, !dbg !934
  switch i32 %70, label %sw.default [
    i32 1, label %sw.bb
    i32 26, label %sw.bb97
    i32 16, label %sw.bb98
    i32 27, label %sw.bb98
    i32 2, label %sw.bb99
    i32 3, label %sw.bb100
    i32 19, label %sw.bb100
    i32 22, label %sw.bb101
    i32 5, label %sw.bb102
    i32 4, label %sw.bb103
    i32 25, label %sw.bb103
    i32 8, label %sw.bb104
    i32 7, label %sw.bb105
    i32 9, label %sw.bb106
    i32 12, label %sw.bb106
    i32 11, label %sw.bb107
    i32 10, label %sw.bb108
    i32 13, label %sw.bb109
    i32 14, label %sw.bb110
    i32 6, label %sw.bb110
    i32 18, label %sw.bb111
    i32 23, label %sw.bb111
    i32 15, label %sw.bb112
    i32 17, label %sw.bb112
    i32 24, label %sw.bb112
  ], !dbg !935

sw.bb:                                            ; preds = %if.end95
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !936
  %72 = load i64, i64* %number_pixels, align 8, !dbg !939
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !940
  %74 = load i8*, i8** %q, align 8, !dbg !941
  call void @ExportAlphaQuantum(%struct._QuantumInfo* %71, i64 %72, %struct._PixelPacket* %73, i8* %74), !dbg !942
  br label %sw.epilog, !dbg !943

sw.bb97:                                          ; preds = %if.end95
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !944
  %76 = load i64, i64* %number_pixels, align 8, !dbg !946
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !947
  %78 = load i8*, i8** %q, align 8, !dbg !948
  call void @ExportBGRQuantum(%struct._QuantumInfo* %75, i64 %76, %struct._PixelPacket* %77, i8* %78), !dbg !949
  br label %sw.epilog, !dbg !950

sw.bb98:                                          ; preds = %if.end95, %if.end95
  %79 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !951
  %80 = load i64, i64* %number_pixels, align 8, !dbg !953
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !954
  %82 = load i8*, i8** %q, align 8, !dbg !955
  call void @ExportBGRAQuantum(%struct._QuantumInfo* %79, i64 %80, %struct._PixelPacket* %81, i8* %82), !dbg !956
  br label %sw.epilog, !dbg !957

sw.bb99:                                          ; preds = %if.end95
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !958
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !960
  %85 = load i64, i64* %number_pixels, align 8, !dbg !961
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !962
  %87 = load i16*, i16** %indexes, align 8, !dbg !963
  %88 = load i8*, i8** %q, align 8, !dbg !964
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !965
  call void @ExportBlackQuantum(%struct._Image* %83, %struct._QuantumInfo* %84, i64 %85, %struct._PixelPacket* %86, i16* %87, i8* %88, %struct._ExceptionInfo* %89), !dbg !966
  br label %sw.epilog, !dbg !967

sw.bb100:                                         ; preds = %if.end95, %if.end95
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !968
  %91 = load i64, i64* %number_pixels, align 8, !dbg !970
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !971
  %93 = load i8*, i8** %q, align 8, !dbg !972
  call void @ExportBlueQuantum(%struct._QuantumInfo* %90, i64 %91, %struct._PixelPacket* %92, i8* %93), !dbg !973
  br label %sw.epilog, !dbg !974

sw.bb101:                                         ; preds = %if.end95
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !975
  %95 = load i64, i64* %number_pixels, align 8, !dbg !977
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !978
  %97 = load i8*, i8** %q, align 8, !dbg !979
  call void @ExportCbYCrYQuantum(%struct._QuantumInfo* %94, i64 %95, %struct._PixelPacket* %96, i8* %97), !dbg !980
  br label %sw.epilog, !dbg !981

sw.bb102:                                         ; preds = %if.end95
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !982
  %99 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !984
  %100 = load i64, i64* %number_pixels, align 8, !dbg !985
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !986
  %102 = load i16*, i16** %indexes, align 8, !dbg !987
  %103 = load i8*, i8** %q, align 8, !dbg !988
  %104 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !989
  call void @ExportCMYKQuantum(%struct._Image* %98, %struct._QuantumInfo* %99, i64 %100, %struct._PixelPacket* %101, i16* %102, i8* %103, %struct._ExceptionInfo* %104), !dbg !990
  br label %sw.epilog, !dbg !991

sw.bb103:                                         ; preds = %if.end95, %if.end95
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !992
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !994
  %107 = load i64, i64* %number_pixels, align 8, !dbg !995
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !996
  %109 = load i16*, i16** %indexes, align 8, !dbg !997
  %110 = load i8*, i8** %q, align 8, !dbg !998
  %111 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !999
  call void @ExportCMYKAQuantum(%struct._Image* %105, %struct._QuantumInfo* %106, i64 %107, %struct._PixelPacket* %108, i16* %109, i8* %110, %struct._ExceptionInfo* %111), !dbg !1000
  br label %sw.epilog, !dbg !1001

sw.bb104:                                         ; preds = %if.end95
  %112 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1002
  %113 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1004
  %114 = load i64, i64* %number_pixels, align 8, !dbg !1005
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1006
  %116 = load i8*, i8** %q, align 8, !dbg !1007
  call void @ExportGrayQuantum(%struct._Image* %112, %struct._QuantumInfo* %113, i64 %114, %struct._PixelPacket* %115, i8* %116), !dbg !1008
  br label %sw.epilog, !dbg !1009

sw.bb105:                                         ; preds = %if.end95
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1010
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1012
  %119 = load i64, i64* %number_pixels, align 8, !dbg !1013
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1014
  %121 = load i8*, i8** %q, align 8, !dbg !1015
  call void @ExportGrayAlphaQuantum(%struct._Image* %117, %struct._QuantumInfo* %118, i64 %119, %struct._PixelPacket* %120, i8* %121), !dbg !1016
  br label %sw.epilog, !dbg !1017

sw.bb106:                                         ; preds = %if.end95, %if.end95
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1018
  %123 = load i64, i64* %number_pixels, align 8, !dbg !1020
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1021
  %125 = load i8*, i8** %q, align 8, !dbg !1022
  call void @ExportGreenQuantum(%struct._QuantumInfo* %122, i64 %123, %struct._PixelPacket* %124, i8* %125), !dbg !1023
  br label %sw.epilog, !dbg !1024

sw.bb107:                                         ; preds = %if.end95
  %126 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1025
  %127 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1027
  %128 = load i64, i64* %number_pixels, align 8, !dbg !1028
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1029
  %130 = load i16*, i16** %indexes, align 8, !dbg !1030
  %131 = load i8*, i8** %q, align 8, !dbg !1031
  %132 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1032
  call void @ExportIndexQuantum(%struct._Image* %126, %struct._QuantumInfo* %127, i64 %128, %struct._PixelPacket* %129, i16* %130, i8* %131, %struct._ExceptionInfo* %132), !dbg !1033
  br label %sw.epilog, !dbg !1034

sw.bb108:                                         ; preds = %if.end95
  %133 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1035
  %134 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1037
  %135 = load i64, i64* %number_pixels, align 8, !dbg !1038
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1039
  %137 = load i16*, i16** %indexes, align 8, !dbg !1040
  %138 = load i8*, i8** %q, align 8, !dbg !1041
  %139 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1042
  call void @ExportIndexAlphaQuantum(%struct._Image* %133, %struct._QuantumInfo* %134, i64 %135, %struct._PixelPacket* %136, i16* %137, i8* %138, %struct._ExceptionInfo* %139), !dbg !1043
  br label %sw.epilog, !dbg !1044

sw.bb109:                                         ; preds = %if.end95
  %140 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1045
  %141 = load i64, i64* %number_pixels, align 8, !dbg !1047
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1048
  %143 = load i8*, i8** %q, align 8, !dbg !1049
  call void @ExportOpacityQuantum(%struct._QuantumInfo* %140, i64 %141, %struct._PixelPacket* %142, i8* %143), !dbg !1050
  br label %sw.epilog, !dbg !1051

sw.bb110:                                         ; preds = %if.end95, %if.end95
  %144 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1052
  %145 = load i64, i64* %number_pixels, align 8, !dbg !1054
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1055
  %147 = load i8*, i8** %q, align 8, !dbg !1056
  call void @ExportRedQuantum(%struct._QuantumInfo* %144, i64 %145, %struct._PixelPacket* %146, i8* %147), !dbg !1057
  br label %sw.epilog, !dbg !1058

sw.bb111:                                         ; preds = %if.end95, %if.end95
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1059
  %149 = load i64, i64* %number_pixels, align 8, !dbg !1061
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1062
  %151 = load i8*, i8** %q, align 8, !dbg !1063
  call void @ExportRGBQuantum(%struct._QuantumInfo* %148, i64 %149, %struct._PixelPacket* %150, i8* %151), !dbg !1064
  br label %sw.epilog, !dbg !1065

sw.bb112:                                         ; preds = %if.end95, %if.end95, %if.end95
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1066
  %153 = load i64, i64* %number_pixels, align 8, !dbg !1068
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1069
  %155 = load i8*, i8** %q, align 8, !dbg !1070
  call void @ExportRGBAQuantum(%struct._QuantumInfo* %152, i64 %153, %struct._PixelPacket* %154, i8* %155), !dbg !1071
  br label %sw.epilog, !dbg !1072

sw.default:                                       ; preds = %if.end95
  br label %sw.epilog, !dbg !1073

sw.epilog:                                        ; preds = %sw.default, %sw.bb112, %sw.bb111, %sw.bb110, %sw.bb109, %sw.bb108, %sw.bb107, %sw.bb106, %sw.bb105, %sw.bb104, %sw.bb103, %sw.bb102, %sw.bb101, %sw.bb100, %sw.bb99, %sw.bb98, %sw.bb97, %sw.bb
  %156 = load i32, i32* %quantum_type.addr, align 4, !dbg !1074
  %cmp113 = icmp eq i32 %156, 23, !dbg !1076
  br i1 %cmp113, label %if.then118, label %lor.lhs.false115, !dbg !1077

lor.lhs.false115:                                 ; preds = %sw.epilog
  %157 = load i32, i32* %quantum_type.addr, align 4, !dbg !1078
  %cmp116 = icmp eq i32 %157, 24, !dbg !1079
  br i1 %cmp116, label %if.then118, label %if.end139, !dbg !1080

if.then118:                                       ; preds = %lor.lhs.false115, %sw.epilog
  call void @llvm.dbg.declare(metadata i16* %quantum119, metadata !1081, metadata !DIExpression()), !dbg !1083
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q120, metadata !1084, metadata !DIExpression()), !dbg !1085
  %158 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1086
  %call121 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %158), !dbg !1087
  store %struct._PixelPacket* %call121, %struct._PixelPacket** %q120, align 8, !dbg !1088
  %159 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1089
  %cmp122 = icmp ne %struct._CacheView* %159, null, !dbg !1091
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !1092

if.then124:                                       ; preds = %if.then118
  %160 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1093
  %call125 = call %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView* %160), !dbg !1094
  store %struct._PixelPacket* %call125, %struct._PixelPacket** %q120, align 8, !dbg !1095
  br label %if.end126, !dbg !1096

if.end126:                                        ; preds = %if.then124, %if.then118
  store i64 0, i64* %x, align 8, !dbg !1097
  br label %for.cond127, !dbg !1099

for.cond127:                                      ; preds = %for.inc136, %if.end126
  %161 = load i64, i64* %x, align 8, !dbg !1100
  %162 = load i64, i64* %number_pixels, align 8, !dbg !1102
  %cmp128 = icmp slt i64 %161, %162, !dbg !1103
  br i1 %cmp128, label %for.body130, label %for.end138, !dbg !1104

for.body130:                                      ; preds = %for.cond127
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %q120, align 8, !dbg !1105
  %red131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 0, i32 2, !dbg !1105
  %164 = load i16, i16* %red131, align 2, !dbg !1105
  store i16 %164, i16* %quantum119, align 2, !dbg !1107
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %q120, align 8, !dbg !1108
  %green132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !1108
  %166 = load i16, i16* %green132, align 2, !dbg !1108
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %q120, align 8, !dbg !1108
  %red133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 0, i32 2, !dbg !1108
  store i16 %166, i16* %red133, align 2, !dbg !1108
  %168 = load i16, i16* %quantum119, align 2, !dbg !1109
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %q120, align 8, !dbg !1109
  %green134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i32 0, i32 1, !dbg !1109
  store i16 %168, i16* %green134, align 2, !dbg !1109
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q120, align 8, !dbg !1110
  %incdec.ptr135 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 1, !dbg !1110
  store %struct._PixelPacket* %incdec.ptr135, %struct._PixelPacket** %q120, align 8, !dbg !1110
  br label %for.inc136, !dbg !1111

for.inc136:                                       ; preds = %for.body130
  %171 = load i64, i64* %x, align 8, !dbg !1112
  %inc137 = add nsw i64 %171, 1, !dbg !1112
  store i64 %inc137, i64* %x, align 8, !dbg !1112
  br label %for.cond127, !dbg !1113, !llvm.loop !1114

for.end138:                                       ; preds = %for.cond127
  br label %if.end139, !dbg !1116

if.end139:                                        ; preds = %for.end138, %lor.lhs.false115
  %172 = load i32, i32* %quantum_type.addr, align 4, !dbg !1117
  %cmp140 = icmp eq i32 %172, 17, !dbg !1119
  br i1 %cmp140, label %if.then148, label %lor.lhs.false142, !dbg !1120

lor.lhs.false142:                                 ; preds = %if.end139
  %173 = load i32, i32* %quantum_type.addr, align 4, !dbg !1121
  %cmp143 = icmp eq i32 %173, 25, !dbg !1122
  br i1 %cmp143, label %if.then148, label %lor.lhs.false145, !dbg !1123

lor.lhs.false145:                                 ; preds = %lor.lhs.false142
  %174 = load i32, i32* %quantum_type.addr, align 4, !dbg !1124
  %cmp146 = icmp eq i32 %174, 27, !dbg !1125
  br i1 %cmp146, label %if.then148, label %if.end169, !dbg !1126

if.then148:                                       ; preds = %lor.lhs.false145, %lor.lhs.false142, %if.end139
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q149, metadata !1127, metadata !DIExpression()), !dbg !1129
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1130
  %call150 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %175), !dbg !1131
  store %struct._PixelPacket* %call150, %struct._PixelPacket** %q149, align 8, !dbg !1132
  %176 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1133
  %cmp151 = icmp ne %struct._CacheView* %176, null, !dbg !1135
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !1136

if.then153:                                       ; preds = %if.then148
  %177 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1137
  %call154 = call %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView* %177), !dbg !1138
  store %struct._PixelPacket* %call154, %struct._PixelPacket** %q149, align 8, !dbg !1139
  br label %if.end155, !dbg !1140

if.end155:                                        ; preds = %if.then153, %if.then148
  store i64 0, i64* %x, align 8, !dbg !1141
  br label %for.cond156, !dbg !1143

for.cond156:                                      ; preds = %for.inc166, %if.end155
  %178 = load i64, i64* %x, align 8, !dbg !1144
  %179 = load i64, i64* %number_pixels, align 8, !dbg !1146
  %cmp157 = icmp slt i64 %178, %179, !dbg !1147
  br i1 %cmp157, label %for.body159, label %for.end168, !dbg !1148

for.body159:                                      ; preds = %for.cond156
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q149, align 8, !dbg !1149
  %opacity160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 3, !dbg !1149
  %181 = load i16, i16* %opacity160, align 2, !dbg !1149
  %conv161 = zext i16 %181 to i32, !dbg !1149
  %sub162 = sub nsw i32 65535, %conv161, !dbg !1149
  %conv163 = trunc i32 %sub162 to i16, !dbg !1149
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %q149, align 8, !dbg !1149
  %opacity164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %182, i32 0, i32 3, !dbg !1149
  store i16 %conv163, i16* %opacity164, align 2, !dbg !1149
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q149, align 8, !dbg !1151
  %incdec.ptr165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 1, !dbg !1151
  store %struct._PixelPacket* %incdec.ptr165, %struct._PixelPacket** %q149, align 8, !dbg !1151
  br label %for.inc166, !dbg !1152

for.inc166:                                       ; preds = %for.body159
  %184 = load i64, i64* %x, align 8, !dbg !1153
  %inc167 = add nsw i64 %184, 1, !dbg !1153
  store i64 %inc167, i64* %x, align 8, !dbg !1153
  br label %for.cond156, !dbg !1154, !llvm.loop !1155

for.end168:                                       ; preds = %for.cond156
  br label %if.end169, !dbg !1157

if.end169:                                        ; preds = %for.end168, %lor.lhs.false145
  %185 = load i64, i64* %extent, align 8, !dbg !1158
  ret i64 %185, !dbg !1159
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local i8* @GetQuantumPixels(%struct._QuantumInfo*) #2

declare dso_local i64 @GetImageExtent(%struct._Image*) #2

declare dso_local %struct._PixelPacket* @GetVirtualPixelQueue(%struct._Image*) #2

declare dso_local i16* @GetVirtualIndexQueue(%struct._Image*) #2

declare dso_local i64 @GetCacheViewExtent(%struct._CacheView*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixelQueue(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

declare dso_local %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !1160 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !1164, metadata !DIExpression()), !dbg !1165
  %0 = load float, float* %value.addr, align 4, !dbg !1166
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !1168
  br i1 %cmp, label %if.then, label %if.end, !dbg !1169

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !1170
  br label %return, !dbg !1170

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !1171
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !1173
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1174

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !1175
  br label %return, !dbg !1175

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !1176
  %add = fadd float %2, 5.000000e-01, !dbg !1177
  %conv = fptoui float %add to i16, !dbg !1178
  store i16 %conv, i16* %retval, align 2, !dbg !1179
  br label %return, !dbg !1179

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !1180
  ret i16 %3, !dbg !1180
}

declare hidden void @ResetQuantumState(%struct._QuantumInfo*) #2

declare dso_local i64 @GetQuantumExtent(%struct._Image*, %struct._QuantumInfo*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ExportAlphaQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !1181 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel4 = alloca i16, align 2
  %pixel42 = alloca i32, align 4
  %pixel51 = alloca float, align 4
  %pixel90 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !1184, metadata !DIExpression()), !dbg !1185
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !1186, metadata !DIExpression()), !dbg !1187
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !1188, metadata !DIExpression()), !dbg !1189
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1190, metadata !DIExpression()), !dbg !1191
  call void @llvm.dbg.declare(metadata i64* %range, metadata !1192, metadata !DIExpression()), !dbg !1193
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1194, metadata !DIExpression()), !dbg !1195
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1196
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !1197
  %1 = load i64, i64* %depth, align 8, !dbg !1197
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb3
    i64 32, label %sw.bb41
    i64 64, label %sw.bb81
  ], !dbg !1198

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !1199, metadata !DIExpression()), !dbg !1202
  store i64 0, i64* %x, align 8, !dbg !1203
  br label %for.cond, !dbg !1205

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !1206
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !1208
  %cmp = icmp slt i64 %2, %3, !dbg !1209
  br i1 %cmp, label %for.body, label %for.end, !dbg !1210

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1211
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 3, !dbg !1211
  %5 = load i16, i16* %opacity, align 2, !dbg !1211
  %conv = zext i16 %5 to i32, !dbg !1211
  %sub = sub nsw i32 65535, %conv, !dbg !1213
  %conv1 = trunc i32 %sub to i16, !dbg !1214
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv1), !dbg !1215
  store i8 %call, i8* %pixel, align 1, !dbg !1216
  %6 = load i8, i8* %pixel, align 1, !dbg !1217
  %7 = load i8*, i8** %q.addr, align 8, !dbg !1218
  %call2 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !1219
  store i8* %call2, i8** %q.addr, align 8, !dbg !1220
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1221
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 1, !dbg !1221
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !1221
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1222
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 6, !dbg !1223
  %10 = load i64, i64* %pad, align 8, !dbg !1223
  %11 = load i8*, i8** %q.addr, align 8, !dbg !1224
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !1224
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !1224
  br label %for.inc, !dbg !1225

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %x, align 8, !dbg !1226
  %inc = add nsw i64 %12, 1, !dbg !1226
  store i64 %inc, i64* %x, align 8, !dbg !1226
  br label %for.cond, !dbg !1227, !llvm.loop !1228

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !1230

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel4, metadata !1231, metadata !DIExpression()), !dbg !1233
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1234
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 2, !dbg !1236
  %14 = load i32, i32* %format, align 8, !dbg !1236
  %cmp5 = icmp eq i32 %14, 1, !dbg !1237
  br i1 %cmp5, label %if.then, label %if.end, !dbg !1238

if.then:                                          ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !1239
  br label %for.cond7, !dbg !1242

for.cond7:                                        ; preds = %for.inc21, %if.then
  %15 = load i64, i64* %x, align 8, !dbg !1243
  %16 = load i64, i64* %number_pixels.addr, align 8, !dbg !1245
  %cmp8 = icmp slt i64 %15, %16, !dbg !1246
  br i1 %cmp8, label %for.body10, label %for.end23, !dbg !1247

for.body10:                                       ; preds = %for.cond7
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1248
  %opacity11 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 3, !dbg !1248
  %18 = load i16, i16* %opacity11, align 2, !dbg !1248
  %conv12 = zext i16 %18 to i32, !dbg !1248
  %sub13 = sub nsw i32 65535, %conv12, !dbg !1248
  %conv14 = sitofp i32 %sub13 to double, !dbg !1248
  %mul = fmul double 0x3EF0001000100010, %conv14, !dbg !1250
  %conv15 = fptrunc double %mul to float, !dbg !1251
  %call16 = call zeroext i16 @SinglePrecisionToHalf(float %conv15), !dbg !1252
  store i16 %call16, i16* %pixel4, align 2, !dbg !1253
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1254
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 13, !dbg !1255
  %20 = load i32, i32* %endian, align 8, !dbg !1255
  %21 = load i16, i16* %pixel4, align 2, !dbg !1256
  %22 = load i8*, i8** %q.addr, align 8, !dbg !1257
  %call17 = call i8* @PopShortPixel(i32 %20, i16 zeroext %21, i8* %22), !dbg !1258
  store i8* %call17, i8** %q.addr, align 8, !dbg !1259
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1260
  %incdec.ptr18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !1260
  store %struct._PixelPacket* %incdec.ptr18, %struct._PixelPacket** %p.addr, align 8, !dbg !1260
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1261
  %pad19 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 6, !dbg !1262
  %25 = load i64, i64* %pad19, align 8, !dbg !1262
  %26 = load i8*, i8** %q.addr, align 8, !dbg !1263
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !1263
  store i8* %add.ptr20, i8** %q.addr, align 8, !dbg !1263
  br label %for.inc21, !dbg !1264

for.inc21:                                        ; preds = %for.body10
  %27 = load i64, i64* %x, align 8, !dbg !1265
  %inc22 = add nsw i64 %27, 1, !dbg !1265
  store i64 %inc22, i64* %x, align 8, !dbg !1265
  br label %for.cond7, !dbg !1266, !llvm.loop !1267

for.end23:                                        ; preds = %for.cond7
  br label %sw.epilog, !dbg !1269

if.end:                                           ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !1270
  br label %for.cond24, !dbg !1272

for.cond24:                                       ; preds = %for.inc38, %if.end
  %28 = load i64, i64* %x, align 8, !dbg !1273
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !1275
  %cmp25 = icmp slt i64 %28, %29, !dbg !1276
  br i1 %cmp25, label %for.body27, label %for.end40, !dbg !1277

for.body27:                                       ; preds = %for.cond24
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1278
  %opacity28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 3, !dbg !1278
  %31 = load i16, i16* %opacity28, align 2, !dbg !1278
  %conv29 = zext i16 %31 to i32, !dbg !1278
  %sub30 = sub nsw i32 65535, %conv29, !dbg !1280
  %conv31 = trunc i32 %sub30 to i16, !dbg !1281
  %call32 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv31), !dbg !1282
  store i16 %call32, i16* %pixel4, align 2, !dbg !1283
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1284
  %endian33 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !1285
  %33 = load i32, i32* %endian33, align 8, !dbg !1285
  %34 = load i16, i16* %pixel4, align 2, !dbg !1286
  %35 = load i8*, i8** %q.addr, align 8, !dbg !1287
  %call34 = call i8* @PopShortPixel(i32 %33, i16 zeroext %34, i8* %35), !dbg !1288
  store i8* %call34, i8** %q.addr, align 8, !dbg !1289
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1290
  %incdec.ptr35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !1290
  store %struct._PixelPacket* %incdec.ptr35, %struct._PixelPacket** %p.addr, align 8, !dbg !1290
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1291
  %pad36 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !1292
  %38 = load i64, i64* %pad36, align 8, !dbg !1292
  %39 = load i8*, i8** %q.addr, align 8, !dbg !1293
  %add.ptr37 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !1293
  store i8* %add.ptr37, i8** %q.addr, align 8, !dbg !1293
  br label %for.inc38, !dbg !1294

for.inc38:                                        ; preds = %for.body27
  %40 = load i64, i64* %x, align 8, !dbg !1295
  %inc39 = add nsw i64 %40, 1, !dbg !1295
  store i64 %inc39, i64* %x, align 8, !dbg !1295
  br label %for.cond24, !dbg !1296, !llvm.loop !1297

for.end40:                                        ; preds = %for.cond24
  br label %sw.epilog, !dbg !1299

sw.bb41:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel42, metadata !1300, metadata !DIExpression()), !dbg !1302
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1303
  %format43 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 2, !dbg !1305
  %42 = load i32, i32* %format43, align 8, !dbg !1305
  %cmp44 = icmp eq i32 %42, 1, !dbg !1306
  br i1 %cmp44, label %if.then46, label %if.end63, !dbg !1307

if.then46:                                        ; preds = %sw.bb41
  store i64 0, i64* %x, align 8, !dbg !1308
  br label %for.cond47, !dbg !1311

for.cond47:                                       ; preds = %for.inc60, %if.then46
  %43 = load i64, i64* %x, align 8, !dbg !1312
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !1314
  %cmp48 = icmp slt i64 %43, %44, !dbg !1315
  br i1 %cmp48, label %for.body50, label %for.end62, !dbg !1316

for.body50:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata float* %pixel51, metadata !1317, metadata !DIExpression()), !dbg !1319
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1320
  %opacity52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 3, !dbg !1320
  %46 = load i16, i16* %opacity52, align 2, !dbg !1320
  %conv53 = zext i16 %46 to i32, !dbg !1320
  %sub54 = sub nsw i32 65535, %conv53, !dbg !1320
  %conv55 = sitofp i32 %sub54 to float, !dbg !1321
  store float %conv55, float* %pixel51, align 4, !dbg !1322
  %47 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1323
  %48 = load float, float* %pixel51, align 4, !dbg !1324
  %49 = load i8*, i8** %q.addr, align 8, !dbg !1325
  %call56 = call i8* @PopFloatPixel(%struct._QuantumInfo* %47, float %48, i8* %49), !dbg !1326
  store i8* %call56, i8** %q.addr, align 8, !dbg !1327
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1328
  %incdec.ptr57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 1, !dbg !1328
  store %struct._PixelPacket* %incdec.ptr57, %struct._PixelPacket** %p.addr, align 8, !dbg !1328
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1329
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %51, i32 0, i32 6, !dbg !1330
  %52 = load i64, i64* %pad58, align 8, !dbg !1330
  %53 = load i8*, i8** %q.addr, align 8, !dbg !1331
  %add.ptr59 = getelementptr inbounds i8, i8* %53, i64 %52, !dbg !1331
  store i8* %add.ptr59, i8** %q.addr, align 8, !dbg !1331
  br label %for.inc60, !dbg !1332

for.inc60:                                        ; preds = %for.body50
  %54 = load i64, i64* %x, align 8, !dbg !1333
  %inc61 = add nsw i64 %54, 1, !dbg !1333
  store i64 %inc61, i64* %x, align 8, !dbg !1333
  br label %for.cond47, !dbg !1334, !llvm.loop !1335

for.end62:                                        ; preds = %for.cond47
  br label %sw.epilog, !dbg !1337

if.end63:                                         ; preds = %sw.bb41
  store i64 0, i64* %x, align 8, !dbg !1338
  br label %for.cond64, !dbg !1340

for.cond64:                                       ; preds = %for.inc78, %if.end63
  %55 = load i64, i64* %x, align 8, !dbg !1341
  %56 = load i64, i64* %number_pixels.addr, align 8, !dbg !1343
  %cmp65 = icmp slt i64 %55, %56, !dbg !1344
  br i1 %cmp65, label %for.body67, label %for.end80, !dbg !1345

for.body67:                                       ; preds = %for.cond64
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1346
  %opacity68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !1346
  %58 = load i16, i16* %opacity68, align 2, !dbg !1346
  %conv69 = zext i16 %58 to i32, !dbg !1346
  %sub70 = sub nsw i32 65535, %conv69, !dbg !1348
  %conv71 = trunc i32 %sub70 to i16, !dbg !1349
  %call72 = call i32 @ScaleQuantumToLong(i16 zeroext %conv71), !dbg !1350
  store i32 %call72, i32* %pixel42, align 4, !dbg !1351
  %59 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1352
  %endian73 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %59, i32 0, i32 13, !dbg !1353
  %60 = load i32, i32* %endian73, align 8, !dbg !1353
  %61 = load i32, i32* %pixel42, align 4, !dbg !1354
  %62 = load i8*, i8** %q.addr, align 8, !dbg !1355
  %call74 = call i8* @PopLongPixel(i32 %60, i32 %61, i8* %62), !dbg !1356
  store i8* %call74, i8** %q.addr, align 8, !dbg !1357
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1358
  %incdec.ptr75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 1, !dbg !1358
  store %struct._PixelPacket* %incdec.ptr75, %struct._PixelPacket** %p.addr, align 8, !dbg !1358
  %64 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1359
  %pad76 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %64, i32 0, i32 6, !dbg !1360
  %65 = load i64, i64* %pad76, align 8, !dbg !1360
  %66 = load i8*, i8** %q.addr, align 8, !dbg !1361
  %add.ptr77 = getelementptr inbounds i8, i8* %66, i64 %65, !dbg !1361
  store i8* %add.ptr77, i8** %q.addr, align 8, !dbg !1361
  br label %for.inc78, !dbg !1362

for.inc78:                                        ; preds = %for.body67
  %67 = load i64, i64* %x, align 8, !dbg !1363
  %inc79 = add nsw i64 %67, 1, !dbg !1363
  store i64 %inc79, i64* %x, align 8, !dbg !1363
  br label %for.cond64, !dbg !1364, !llvm.loop !1365

for.end80:                                        ; preds = %for.cond64
  br label %sw.epilog, !dbg !1367

sw.bb81:                                          ; preds = %entry
  %68 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1368
  %format82 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %68, i32 0, i32 2, !dbg !1371
  %69 = load i32, i32* %format82, align 8, !dbg !1371
  %cmp83 = icmp eq i32 %69, 1, !dbg !1372
  br i1 %cmp83, label %if.then85, label %if.end102, !dbg !1373

if.then85:                                        ; preds = %sw.bb81
  store i64 0, i64* %x, align 8, !dbg !1374
  br label %for.cond86, !dbg !1377

for.cond86:                                       ; preds = %for.inc99, %if.then85
  %70 = load i64, i64* %x, align 8, !dbg !1378
  %71 = load i64, i64* %number_pixels.addr, align 8, !dbg !1380
  %cmp87 = icmp slt i64 %70, %71, !dbg !1381
  br i1 %cmp87, label %for.body89, label %for.end101, !dbg !1382

for.body89:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata double* %pixel90, metadata !1383, metadata !DIExpression()), !dbg !1385
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1386
  %opacity91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 3, !dbg !1386
  %73 = load i16, i16* %opacity91, align 2, !dbg !1386
  %conv92 = zext i16 %73 to i32, !dbg !1386
  %sub93 = sub nsw i32 65535, %conv92, !dbg !1386
  %conv94 = sitofp i32 %sub93 to double, !dbg !1387
  store double %conv94, double* %pixel90, align 8, !dbg !1388
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1389
  %75 = load double, double* %pixel90, align 8, !dbg !1390
  %76 = load i8*, i8** %q.addr, align 8, !dbg !1391
  %call95 = call i8* @PopDoublePixel(%struct._QuantumInfo* %74, double %75, i8* %76), !dbg !1392
  store i8* %call95, i8** %q.addr, align 8, !dbg !1393
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1394
  %incdec.ptr96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 1, !dbg !1394
  store %struct._PixelPacket* %incdec.ptr96, %struct._PixelPacket** %p.addr, align 8, !dbg !1394
  %78 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1395
  %pad97 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %78, i32 0, i32 6, !dbg !1396
  %79 = load i64, i64* %pad97, align 8, !dbg !1396
  %80 = load i8*, i8** %q.addr, align 8, !dbg !1397
  %add.ptr98 = getelementptr inbounds i8, i8* %80, i64 %79, !dbg !1397
  store i8* %add.ptr98, i8** %q.addr, align 8, !dbg !1397
  br label %for.inc99, !dbg !1398

for.inc99:                                        ; preds = %for.body89
  %81 = load i64, i64* %x, align 8, !dbg !1399
  %inc100 = add nsw i64 %81, 1, !dbg !1399
  store i64 %inc100, i64* %x, align 8, !dbg !1399
  br label %for.cond86, !dbg !1400, !llvm.loop !1401

for.end101:                                       ; preds = %for.cond86
  br label %sw.epilog, !dbg !1403

if.end102:                                        ; preds = %sw.bb81
  br label %sw.default, !dbg !1404

sw.default:                                       ; preds = %entry, %if.end102
  %82 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1405
  %depth103 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %82, i32 0, i32 0, !dbg !1407
  %83 = load i64, i64* %depth103, align 8, !dbg !1407
  %call104 = call i64 @GetQuantumRange(i64 %83), !dbg !1408
  store i64 %call104, i64* %range, align 8, !dbg !1409
  store i64 0, i64* %x, align 8, !dbg !1410
  br label %for.cond105, !dbg !1412

for.cond105:                                      ; preds = %for.inc118, %sw.default
  %84 = load i64, i64* %x, align 8, !dbg !1413
  %85 = load i64, i64* %number_pixels.addr, align 8, !dbg !1415
  %cmp106 = icmp slt i64 %84, %85, !dbg !1416
  br i1 %cmp106, label %for.body108, label %for.end120, !dbg !1417

for.body108:                                      ; preds = %for.cond105
  %86 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1418
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1420
  %opacity109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 3, !dbg !1420
  %88 = load i16, i16* %opacity109, align 2, !dbg !1420
  %conv110 = zext i16 %88 to i32, !dbg !1420
  %sub111 = sub nsw i32 65535, %conv110, !dbg !1420
  %conv112 = trunc i32 %sub111 to i16, !dbg !1421
  %89 = load i64, i64* %range, align 8, !dbg !1422
  %call113 = call i64 @ScaleQuantumToAny(i16 zeroext %conv112, i64 %89), !dbg !1423
  %90 = load i8*, i8** %q.addr, align 8, !dbg !1424
  %call114 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %86, i64 %call113, i8* %90), !dbg !1425
  store i8* %call114, i8** %q.addr, align 8, !dbg !1426
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1427
  %incdec.ptr115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 1, !dbg !1427
  store %struct._PixelPacket* %incdec.ptr115, %struct._PixelPacket** %p.addr, align 8, !dbg !1427
  %92 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1428
  %pad116 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %92, i32 0, i32 6, !dbg !1429
  %93 = load i64, i64* %pad116, align 8, !dbg !1429
  %94 = load i8*, i8** %q.addr, align 8, !dbg !1430
  %add.ptr117 = getelementptr inbounds i8, i8* %94, i64 %93, !dbg !1430
  store i8* %add.ptr117, i8** %q.addr, align 8, !dbg !1430
  br label %for.inc118, !dbg !1431

for.inc118:                                       ; preds = %for.body108
  %95 = load i64, i64* %x, align 8, !dbg !1432
  %inc119 = add nsw i64 %95, 1, !dbg !1432
  store i64 %inc119, i64* %x, align 8, !dbg !1432
  br label %for.cond105, !dbg !1433, !llvm.loop !1434

for.end120:                                       ; preds = %for.cond105
  br label %sw.epilog, !dbg !1436

sw.epilog:                                        ; preds = %for.end120, %for.end101, %for.end80, %for.end62, %for.end40, %for.end23, %for.end
  ret void, !dbg !1437
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportBGRQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !1438 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel84 = alloca i32, align 4
  %pixel231 = alloca i16, align 2
  %pixel293 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !1439, metadata !DIExpression()), !dbg !1440
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !1441, metadata !DIExpression()), !dbg !1442
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !1443, metadata !DIExpression()), !dbg !1444
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !1445, metadata !DIExpression()), !dbg !1446
  call void @llvm.dbg.declare(metadata i64* %range, metadata !1447, metadata !DIExpression()), !dbg !1448
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1449, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !1451, metadata !DIExpression()), !dbg !1452
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1453
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !1454
  %1 = load i64, i64* %depth, align 8, !dbg !1454
  switch i64 %1, label %sw.default365 [
    i64 8, label %sw.bb
    i64 10, label %sw.bb6
    i64 12, label %sw.bb83
    i64 16, label %sw.bb230
    i64 32, label %sw.bb292
    i64 64, label %sw.bb340
  ], !dbg !1455

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %x, align 8, !dbg !1456
  br label %for.cond, !dbg !1460

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !1461
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !1463
  %cmp = icmp slt i64 %2, %3, !dbg !1464
  br i1 %cmp, label %for.body, label %for.end, !dbg !1465

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1466
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !1466
  %5 = load i16, i16* %blue, align 2, !dbg !1466
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !1468
  %6 = load i8*, i8** %q.addr, align 8, !dbg !1469
  %call1 = call i8* @PopCharPixel(i8 zeroext %call, i8* %6), !dbg !1470
  store i8* %call1, i8** %q.addr, align 8, !dbg !1471
  %7 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1472
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %7, i32 0, i32 1, !dbg !1472
  %8 = load i16, i16* %green, align 2, !dbg !1472
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %8), !dbg !1473
  %9 = load i8*, i8** %q.addr, align 8, !dbg !1474
  %call3 = call i8* @PopCharPixel(i8 zeroext %call2, i8* %9), !dbg !1475
  store i8* %call3, i8** %q.addr, align 8, !dbg !1476
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1477
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !1477
  %11 = load i16, i16* %red, align 2, !dbg !1477
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %11), !dbg !1478
  %12 = load i8*, i8** %q.addr, align 8, !dbg !1479
  %call5 = call i8* @PopCharPixel(i8 zeroext %call4, i8* %12), !dbg !1480
  store i8* %call5, i8** %q.addr, align 8, !dbg !1481
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1482
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 1, !dbg !1482
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !1482
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1483
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 6, !dbg !1484
  %15 = load i64, i64* %pad, align 8, !dbg !1484
  %16 = load i8*, i8** %q.addr, align 8, !dbg !1485
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !1485
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !1485
  br label %for.inc, !dbg !1486

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %x, align 8, !dbg !1487
  %inc = add nsw i64 %17, 1, !dbg !1487
  store i64 %inc, i64* %x, align 8, !dbg !1487
  br label %for.cond, !dbg !1488, !llvm.loop !1489

for.end:                                          ; preds = %for.cond
  br label %sw.epilog387, !dbg !1491

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !1492, metadata !DIExpression()), !dbg !1494
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1495
  %depth7 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %18, i32 0, i32 0, !dbg !1496
  %19 = load i64, i64* %depth7, align 8, !dbg !1496
  %call8 = call i64 @GetQuantumRange(i64 %19), !dbg !1497
  store i64 %call8, i64* %range, align 8, !dbg !1498
  %20 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1499
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %20, i32 0, i32 8, !dbg !1501
  %21 = load i32, i32* %pack, align 4, !dbg !1501
  %cmp9 = icmp eq i32 %21, 0, !dbg !1502
  br i1 %cmp9, label %if.then, label %if.end, !dbg !1503

if.then:                                          ; preds = %sw.bb6
  store i64 0, i64* %x, align 8, !dbg !1504
  br label %for.cond10, !dbg !1507

for.cond10:                                       ; preds = %for.inc26, %if.then
  %22 = load i64, i64* %x, align 8, !dbg !1508
  %23 = load i64, i64* %number_pixels.addr, align 8, !dbg !1510
  %cmp11 = icmp slt i64 %22, %23, !dbg !1511
  br i1 %cmp11, label %for.body12, label %for.end28, !dbg !1512

for.body12:                                       ; preds = %for.cond10
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1513
  %red13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 2, !dbg !1513
  %25 = load i16, i16* %red13, align 2, !dbg !1513
  %26 = load i64, i64* %range, align 8, !dbg !1515
  %call14 = call i64 @ScaleQuantumToAny(i16 zeroext %25, i64 %26), !dbg !1516
  %shl = shl i64 %call14, 22, !dbg !1517
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1518
  %green15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 1, !dbg !1518
  %28 = load i16, i16* %green15, align 2, !dbg !1518
  %29 = load i64, i64* %range, align 8, !dbg !1519
  %call16 = call i64 @ScaleQuantumToAny(i16 zeroext %28, i64 %29), !dbg !1520
  %shl17 = shl i64 %call16, 12, !dbg !1521
  %or = or i64 %shl, %shl17, !dbg !1522
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1523
  %blue18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !1523
  %31 = load i16, i16* %blue18, align 2, !dbg !1523
  %32 = load i64, i64* %range, align 8, !dbg !1524
  %call19 = call i64 @ScaleQuantumToAny(i16 zeroext %31, i64 %32), !dbg !1525
  %shl20 = shl i64 %call19, 2, !dbg !1526
  %or21 = or i64 %or, %shl20, !dbg !1527
  %conv = trunc i64 %or21 to i32, !dbg !1528
  store i32 %conv, i32* %pixel, align 4, !dbg !1529
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1530
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 13, !dbg !1531
  %34 = load i32, i32* %endian, align 8, !dbg !1531
  %35 = load i32, i32* %pixel, align 4, !dbg !1532
  %36 = load i8*, i8** %q.addr, align 8, !dbg !1533
  %call22 = call i8* @PopLongPixel(i32 %34, i32 %35, i8* %36), !dbg !1534
  store i8* %call22, i8** %q.addr, align 8, !dbg !1535
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1536
  %incdec.ptr23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 1, !dbg !1536
  store %struct._PixelPacket* %incdec.ptr23, %struct._PixelPacket** %p.addr, align 8, !dbg !1536
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1537
  %pad24 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 6, !dbg !1538
  %39 = load i64, i64* %pad24, align 8, !dbg !1538
  %40 = load i8*, i8** %q.addr, align 8, !dbg !1539
  %add.ptr25 = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !1539
  store i8* %add.ptr25, i8** %q.addr, align 8, !dbg !1539
  br label %for.inc26, !dbg !1540

for.inc26:                                        ; preds = %for.body12
  %41 = load i64, i64* %x, align 8, !dbg !1541
  %inc27 = add nsw i64 %41, 1, !dbg !1541
  store i64 %inc27, i64* %x, align 8, !dbg !1541
  br label %for.cond10, !dbg !1542, !llvm.loop !1543

for.end28:                                        ; preds = %for.cond10
  br label %sw.epilog387, !dbg !1545

if.end:                                           ; preds = %sw.bb6
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1546
  %quantum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 1, !dbg !1548
  %43 = load i64, i64* %quantum, align 8, !dbg !1548
  %cmp29 = icmp eq i64 %43, 32, !dbg !1549
  br i1 %cmp29, label %if.then31, label %if.end57, !dbg !1550

if.then31:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !1551
  br label %for.cond32, !dbg !1554

for.cond32:                                       ; preds = %for.inc54, %if.then31
  %44 = load i64, i64* %x, align 8, !dbg !1555
  %45 = load i64, i64* %number_pixels.addr, align 8, !dbg !1557
  %cmp33 = icmp slt i64 %44, %45, !dbg !1558
  br i1 %cmp33, label %for.body35, label %for.end56, !dbg !1559

for.body35:                                       ; preds = %for.cond32
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1560
  %red36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 2, !dbg !1560
  %47 = load i16, i16* %red36, align 2, !dbg !1560
  %48 = load i64, i64* %range, align 8, !dbg !1562
  %call37 = call i64 @ScaleQuantumToAny(i16 zeroext %47, i64 %48), !dbg !1563
  %conv38 = trunc i64 %call37 to i32, !dbg !1564
  store i32 %conv38, i32* %pixel, align 4, !dbg !1565
  %49 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1566
  %50 = load i32, i32* %pixel, align 4, !dbg !1567
  %conv39 = zext i32 %50 to i64, !dbg !1567
  %51 = load i8*, i8** %q.addr, align 8, !dbg !1568
  %call40 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %49, i64 %conv39, i8* %51), !dbg !1569
  store i8* %call40, i8** %q.addr, align 8, !dbg !1570
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1571
  %green41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 1, !dbg !1571
  %53 = load i16, i16* %green41, align 2, !dbg !1571
  %54 = load i64, i64* %range, align 8, !dbg !1572
  %call42 = call i64 @ScaleQuantumToAny(i16 zeroext %53, i64 %54), !dbg !1573
  %conv43 = trunc i64 %call42 to i32, !dbg !1574
  store i32 %conv43, i32* %pixel, align 4, !dbg !1575
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1576
  %56 = load i32, i32* %pixel, align 4, !dbg !1577
  %conv44 = zext i32 %56 to i64, !dbg !1577
  %57 = load i8*, i8** %q.addr, align 8, !dbg !1578
  %call45 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %55, i64 %conv44, i8* %57), !dbg !1579
  store i8* %call45, i8** %q.addr, align 8, !dbg !1580
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1581
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 0, !dbg !1581
  %59 = load i16, i16* %blue46, align 2, !dbg !1581
  %60 = load i64, i64* %range, align 8, !dbg !1582
  %call47 = call i64 @ScaleQuantumToAny(i16 zeroext %59, i64 %60), !dbg !1583
  %conv48 = trunc i64 %call47 to i32, !dbg !1584
  store i32 %conv48, i32* %pixel, align 4, !dbg !1585
  %61 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1586
  %62 = load i32, i32* %pixel, align 4, !dbg !1587
  %conv49 = zext i32 %62 to i64, !dbg !1587
  %63 = load i8*, i8** %q.addr, align 8, !dbg !1588
  %call50 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %61, i64 %conv49, i8* %63), !dbg !1589
  store i8* %call50, i8** %q.addr, align 8, !dbg !1590
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1591
  %incdec.ptr51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 1, !dbg !1591
  store %struct._PixelPacket* %incdec.ptr51, %struct._PixelPacket** %p.addr, align 8, !dbg !1591
  %65 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1592
  %pad52 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %65, i32 0, i32 6, !dbg !1593
  %66 = load i64, i64* %pad52, align 8, !dbg !1593
  %67 = load i8*, i8** %q.addr, align 8, !dbg !1594
  %add.ptr53 = getelementptr inbounds i8, i8* %67, i64 %66, !dbg !1594
  store i8* %add.ptr53, i8** %q.addr, align 8, !dbg !1594
  br label %for.inc54, !dbg !1595

for.inc54:                                        ; preds = %for.body35
  %68 = load i64, i64* %x, align 8, !dbg !1596
  %inc55 = add nsw i64 %68, 1, !dbg !1596
  store i64 %inc55, i64* %x, align 8, !dbg !1596
  br label %for.cond32, !dbg !1597, !llvm.loop !1598

for.end56:                                        ; preds = %for.cond32
  br label %sw.epilog387, !dbg !1600

if.end57:                                         ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !1601
  br label %for.cond58, !dbg !1603

for.cond58:                                       ; preds = %for.inc80, %if.end57
  %69 = load i64, i64* %x, align 8, !dbg !1604
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !1606
  %cmp59 = icmp slt i64 %69, %70, !dbg !1607
  br i1 %cmp59, label %for.body61, label %for.end82, !dbg !1608

for.body61:                                       ; preds = %for.cond58
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1609
  %red62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 2, !dbg !1609
  %72 = load i16, i16* %red62, align 2, !dbg !1609
  %73 = load i64, i64* %range, align 8, !dbg !1611
  %call63 = call i64 @ScaleQuantumToAny(i16 zeroext %72, i64 %73), !dbg !1612
  %conv64 = trunc i64 %call63 to i32, !dbg !1613
  store i32 %conv64, i32* %pixel, align 4, !dbg !1614
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1615
  %75 = load i32, i32* %pixel, align 4, !dbg !1616
  %conv65 = zext i32 %75 to i64, !dbg !1616
  %76 = load i8*, i8** %q.addr, align 8, !dbg !1617
  %call66 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %74, i64 %conv65, i8* %76), !dbg !1618
  store i8* %call66, i8** %q.addr, align 8, !dbg !1619
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1620
  %green67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 1, !dbg !1620
  %78 = load i16, i16* %green67, align 2, !dbg !1620
  %79 = load i64, i64* %range, align 8, !dbg !1621
  %call68 = call i64 @ScaleQuantumToAny(i16 zeroext %78, i64 %79), !dbg !1622
  %conv69 = trunc i64 %call68 to i32, !dbg !1623
  store i32 %conv69, i32* %pixel, align 4, !dbg !1624
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1625
  %81 = load i32, i32* %pixel, align 4, !dbg !1626
  %conv70 = zext i32 %81 to i64, !dbg !1626
  %82 = load i8*, i8** %q.addr, align 8, !dbg !1627
  %call71 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %80, i64 %conv70, i8* %82), !dbg !1628
  store i8* %call71, i8** %q.addr, align 8, !dbg !1629
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1630
  %blue72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !1630
  %84 = load i16, i16* %blue72, align 2, !dbg !1630
  %85 = load i64, i64* %range, align 8, !dbg !1631
  %call73 = call i64 @ScaleQuantumToAny(i16 zeroext %84, i64 %85), !dbg !1632
  %conv74 = trunc i64 %call73 to i32, !dbg !1633
  store i32 %conv74, i32* %pixel, align 4, !dbg !1634
  %86 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1635
  %87 = load i32, i32* %pixel, align 4, !dbg !1636
  %conv75 = zext i32 %87 to i64, !dbg !1636
  %88 = load i8*, i8** %q.addr, align 8, !dbg !1637
  %call76 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %86, i64 %conv75, i8* %88), !dbg !1638
  store i8* %call76, i8** %q.addr, align 8, !dbg !1639
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1640
  %incdec.ptr77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !1640
  store %struct._PixelPacket* %incdec.ptr77, %struct._PixelPacket** %p.addr, align 8, !dbg !1640
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1641
  %pad78 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !1642
  %91 = load i64, i64* %pad78, align 8, !dbg !1642
  %92 = load i8*, i8** %q.addr, align 8, !dbg !1643
  %add.ptr79 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !1643
  store i8* %add.ptr79, i8** %q.addr, align 8, !dbg !1643
  br label %for.inc80, !dbg !1644

for.inc80:                                        ; preds = %for.body61
  %93 = load i64, i64* %x, align 8, !dbg !1645
  %inc81 = add nsw i64 %93, 1, !dbg !1645
  store i64 %inc81, i64* %x, align 8, !dbg !1645
  br label %for.cond58, !dbg !1646, !llvm.loop !1647

for.end82:                                        ; preds = %for.cond58
  br label %sw.epilog387, !dbg !1649

sw.bb83:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel84, metadata !1650, metadata !DIExpression()), !dbg !1652
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1653
  %depth85 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %94, i32 0, i32 0, !dbg !1654
  %95 = load i64, i64* %depth85, align 8, !dbg !1654
  %call86 = call i64 @GetQuantumRange(i64 %95), !dbg !1655
  store i64 %call86, i64* %range, align 8, !dbg !1656
  %96 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1657
  %pack87 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %96, i32 0, i32 8, !dbg !1659
  %97 = load i32, i32* %pack87, align 4, !dbg !1659
  %cmp88 = icmp eq i32 %97, 0, !dbg !1660
  br i1 %cmp88, label %if.then90, label %if.end174, !dbg !1661

if.then90:                                        ; preds = %sw.bb83
  store i64 0, i64* %x, align 8, !dbg !1662
  br label %for.cond91, !dbg !1665

for.cond91:                                       ; preds = %for.inc134, %if.then90
  %98 = load i64, i64* %x, align 8, !dbg !1666
  %99 = load i64, i64* %number_pixels.addr, align 8, !dbg !1668
  %mul = mul i64 3, %99, !dbg !1669
  %sub = sub i64 %mul, 1, !dbg !1670
  %cmp92 = icmp slt i64 %98, %sub, !dbg !1671
  br i1 %cmp92, label %for.body94, label %for.end136, !dbg !1672

for.body94:                                       ; preds = %for.cond91
  %100 = load i64, i64* %x, align 8, !dbg !1673
  %rem = srem i64 %100, 3, !dbg !1675
  switch i64 %rem, label %sw.default [
    i64 0, label %sw.bb95
    i64 1, label %sw.bb99
    i64 2, label %sw.bb103
  ], !dbg !1676

sw.default:                                       ; preds = %for.body94
  br label %sw.bb95, !dbg !1677

sw.bb95:                                          ; preds = %for.body94, %sw.default
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1678
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 2, !dbg !1678
  %102 = load i16, i16* %red96, align 2, !dbg !1678
  %103 = load i64, i64* %range, align 8, !dbg !1681
  %call97 = call i64 @ScaleQuantumToAny(i16 zeroext %102, i64 %103), !dbg !1682
  %conv98 = trunc i64 %call97 to i32, !dbg !1683
  store i32 %conv98, i32* %pixel84, align 4, !dbg !1684
  br label %sw.epilog, !dbg !1685

sw.bb99:                                          ; preds = %for.body94
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1686
  %green100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 1, !dbg !1686
  %105 = load i16, i16* %green100, align 2, !dbg !1686
  %106 = load i64, i64* %range, align 8, !dbg !1688
  %call101 = call i64 @ScaleQuantumToAny(i16 zeroext %105, i64 %106), !dbg !1689
  %conv102 = trunc i64 %call101 to i32, !dbg !1690
  store i32 %conv102, i32* %pixel84, align 4, !dbg !1691
  br label %sw.epilog, !dbg !1692

sw.bb103:                                         ; preds = %for.body94
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1693
  %blue104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 0, !dbg !1693
  %108 = load i16, i16* %blue104, align 2, !dbg !1693
  %109 = load i64, i64* %range, align 8, !dbg !1695
  %call105 = call i64 @ScaleQuantumToAny(i16 zeroext %108, i64 %109), !dbg !1696
  %conv106 = trunc i64 %call105 to i32, !dbg !1697
  store i32 %conv106, i32* %pixel84, align 4, !dbg !1698
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1699
  %incdec.ptr107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 1, !dbg !1699
  store %struct._PixelPacket* %incdec.ptr107, %struct._PixelPacket** %p.addr, align 8, !dbg !1699
  br label %sw.epilog, !dbg !1700

sw.epilog:                                        ; preds = %sw.bb103, %sw.bb99, %sw.bb95
  %111 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1701
  %endian108 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %111, i32 0, i32 13, !dbg !1702
  %112 = load i32, i32* %endian108, align 8, !dbg !1702
  %113 = load i32, i32* %pixel84, align 4, !dbg !1703
  %shl109 = shl i32 %113, 4, !dbg !1704
  %conv110 = trunc i32 %shl109 to i16, !dbg !1705
  %114 = load i8*, i8** %q.addr, align 8, !dbg !1706
  %call111 = call i8* @PopShortPixel(i32 %112, i16 zeroext %conv110, i8* %114), !dbg !1707
  store i8* %call111, i8** %q.addr, align 8, !dbg !1708
  %115 = load i64, i64* %x, align 8, !dbg !1709
  %add = add nsw i64 %115, 1, !dbg !1710
  %rem112 = srem i64 %add, 3, !dbg !1711
  switch i64 %rem112, label %sw.default113 [
    i64 0, label %sw.bb114
    i64 1, label %sw.bb118
    i64 2, label %sw.bb122
  ], !dbg !1712

sw.default113:                                    ; preds = %sw.epilog
  br label %sw.bb114, !dbg !1713

sw.bb114:                                         ; preds = %sw.epilog, %sw.default113
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1714
  %red115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 2, !dbg !1714
  %117 = load i16, i16* %red115, align 2, !dbg !1714
  %118 = load i64, i64* %range, align 8, !dbg !1717
  %call116 = call i64 @ScaleQuantumToAny(i16 zeroext %117, i64 %118), !dbg !1718
  %conv117 = trunc i64 %call116 to i32, !dbg !1719
  store i32 %conv117, i32* %pixel84, align 4, !dbg !1720
  br label %sw.epilog127, !dbg !1721

sw.bb118:                                         ; preds = %sw.epilog
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1722
  %green119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 1, !dbg !1722
  %120 = load i16, i16* %green119, align 2, !dbg !1722
  %121 = load i64, i64* %range, align 8, !dbg !1724
  %call120 = call i64 @ScaleQuantumToAny(i16 zeroext %120, i64 %121), !dbg !1725
  %conv121 = trunc i64 %call120 to i32, !dbg !1726
  store i32 %conv121, i32* %pixel84, align 4, !dbg !1727
  br label %sw.epilog127, !dbg !1728

sw.bb122:                                         ; preds = %sw.epilog
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1729
  %blue123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 0, !dbg !1729
  %123 = load i16, i16* %blue123, align 2, !dbg !1729
  %124 = load i64, i64* %range, align 8, !dbg !1731
  %call124 = call i64 @ScaleQuantumToAny(i16 zeroext %123, i64 %124), !dbg !1732
  %conv125 = trunc i64 %call124 to i32, !dbg !1733
  store i32 %conv125, i32* %pixel84, align 4, !dbg !1734
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1735
  %incdec.ptr126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !1735
  store %struct._PixelPacket* %incdec.ptr126, %struct._PixelPacket** %p.addr, align 8, !dbg !1735
  br label %sw.epilog127, !dbg !1736

sw.epilog127:                                     ; preds = %sw.bb122, %sw.bb118, %sw.bb114
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1737
  %endian128 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %126, i32 0, i32 13, !dbg !1738
  %127 = load i32, i32* %endian128, align 8, !dbg !1738
  %128 = load i32, i32* %pixel84, align 4, !dbg !1739
  %shl129 = shl i32 %128, 4, !dbg !1740
  %conv130 = trunc i32 %shl129 to i16, !dbg !1741
  %129 = load i8*, i8** %q.addr, align 8, !dbg !1742
  %call131 = call i8* @PopShortPixel(i32 %127, i16 zeroext %conv130, i8* %129), !dbg !1743
  store i8* %call131, i8** %q.addr, align 8, !dbg !1744
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1745
  %pad132 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %130, i32 0, i32 6, !dbg !1746
  %131 = load i64, i64* %pad132, align 8, !dbg !1746
  %132 = load i8*, i8** %q.addr, align 8, !dbg !1747
  %add.ptr133 = getelementptr inbounds i8, i8* %132, i64 %131, !dbg !1747
  store i8* %add.ptr133, i8** %q.addr, align 8, !dbg !1747
  br label %for.inc134, !dbg !1748

for.inc134:                                       ; preds = %sw.epilog127
  %133 = load i64, i64* %x, align 8, !dbg !1749
  %add135 = add nsw i64 %133, 2, !dbg !1749
  store i64 %add135, i64* %x, align 8, !dbg !1749
  br label %for.cond91, !dbg !1750, !llvm.loop !1751

for.end136:                                       ; preds = %for.cond91
  store i64 0, i64* %bit, align 8, !dbg !1753
  br label %for.cond137, !dbg !1755

for.cond137:                                      ; preds = %for.inc166, %for.end136
  %134 = load i64, i64* %bit, align 8, !dbg !1756
  %135 = load i64, i64* %number_pixels.addr, align 8, !dbg !1758
  %mul138 = mul i64 3, %135, !dbg !1759
  %rem139 = urem i64 %mul138, 2, !dbg !1760
  %cmp140 = icmp slt i64 %134, %rem139, !dbg !1761
  br i1 %cmp140, label %for.body142, label %for.end168, !dbg !1762

for.body142:                                      ; preds = %for.cond137
  %136 = load i64, i64* %x, align 8, !dbg !1763
  %137 = load i64, i64* %bit, align 8, !dbg !1765
  %add143 = add nsw i64 %136, %137, !dbg !1766
  %rem144 = srem i64 %add143, 3, !dbg !1767
  switch i64 %rem144, label %sw.default145 [
    i64 0, label %sw.bb146
    i64 1, label %sw.bb150
    i64 2, label %sw.bb154
  ], !dbg !1768

sw.default145:                                    ; preds = %for.body142
  br label %sw.bb146, !dbg !1769

sw.bb146:                                         ; preds = %for.body142, %sw.default145
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1770
  %red147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 2, !dbg !1770
  %139 = load i16, i16* %red147, align 2, !dbg !1770
  %140 = load i64, i64* %range, align 8, !dbg !1773
  %call148 = call i64 @ScaleQuantumToAny(i16 zeroext %139, i64 %140), !dbg !1774
  %conv149 = trunc i64 %call148 to i32, !dbg !1775
  store i32 %conv149, i32* %pixel84, align 4, !dbg !1776
  br label %sw.epilog159, !dbg !1777

sw.bb150:                                         ; preds = %for.body142
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1778
  %green151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 1, !dbg !1778
  %142 = load i16, i16* %green151, align 2, !dbg !1778
  %143 = load i64, i64* %range, align 8, !dbg !1780
  %call152 = call i64 @ScaleQuantumToAny(i16 zeroext %142, i64 %143), !dbg !1781
  %conv153 = trunc i64 %call152 to i32, !dbg !1782
  store i32 %conv153, i32* %pixel84, align 4, !dbg !1783
  br label %sw.epilog159, !dbg !1784

sw.bb154:                                         ; preds = %for.body142
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1785
  %blue155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 0, !dbg !1785
  %145 = load i16, i16* %blue155, align 2, !dbg !1785
  %146 = load i64, i64* %range, align 8, !dbg !1787
  %call156 = call i64 @ScaleQuantumToAny(i16 zeroext %145, i64 %146), !dbg !1788
  %conv157 = trunc i64 %call156 to i32, !dbg !1789
  store i32 %conv157, i32* %pixel84, align 4, !dbg !1790
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1791
  %incdec.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i32 1, !dbg !1791
  store %struct._PixelPacket* %incdec.ptr158, %struct._PixelPacket** %p.addr, align 8, !dbg !1791
  br label %sw.epilog159, !dbg !1792

sw.epilog159:                                     ; preds = %sw.bb154, %sw.bb150, %sw.bb146
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1793
  %endian160 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 13, !dbg !1794
  %149 = load i32, i32* %endian160, align 8, !dbg !1794
  %150 = load i32, i32* %pixel84, align 4, !dbg !1795
  %shl161 = shl i32 %150, 4, !dbg !1796
  %conv162 = trunc i32 %shl161 to i16, !dbg !1797
  %151 = load i8*, i8** %q.addr, align 8, !dbg !1798
  %call163 = call i8* @PopShortPixel(i32 %149, i16 zeroext %conv162, i8* %151), !dbg !1799
  store i8* %call163, i8** %q.addr, align 8, !dbg !1800
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1801
  %pad164 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 6, !dbg !1802
  %153 = load i64, i64* %pad164, align 8, !dbg !1802
  %154 = load i8*, i8** %q.addr, align 8, !dbg !1803
  %add.ptr165 = getelementptr inbounds i8, i8* %154, i64 %153, !dbg !1803
  store i8* %add.ptr165, i8** %q.addr, align 8, !dbg !1803
  br label %for.inc166, !dbg !1804

for.inc166:                                       ; preds = %sw.epilog159
  %155 = load i64, i64* %bit, align 8, !dbg !1805
  %inc167 = add nsw i64 %155, 1, !dbg !1805
  store i64 %inc167, i64* %bit, align 8, !dbg !1805
  br label %for.cond137, !dbg !1806, !llvm.loop !1807

for.end168:                                       ; preds = %for.cond137
  %156 = load i64, i64* %bit, align 8, !dbg !1809
  %cmp169 = icmp ne i64 %156, 0, !dbg !1811
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !1812

if.then171:                                       ; preds = %for.end168
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1813
  %incdec.ptr172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %157, i32 1, !dbg !1813
  store %struct._PixelPacket* %incdec.ptr172, %struct._PixelPacket** %p.addr, align 8, !dbg !1813
  br label %if.end173, !dbg !1814

if.end173:                                        ; preds = %if.then171, %for.end168
  br label %sw.epilog387, !dbg !1815

if.end174:                                        ; preds = %sw.bb83
  %158 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1816
  %quantum175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %158, i32 0, i32 1, !dbg !1818
  %159 = load i64, i64* %quantum175, align 8, !dbg !1818
  %cmp176 = icmp eq i64 %159, 32, !dbg !1819
  br i1 %cmp176, label %if.then178, label %if.end204, !dbg !1820

if.then178:                                       ; preds = %if.end174
  store i64 0, i64* %x, align 8, !dbg !1821
  br label %for.cond179, !dbg !1824

for.cond179:                                      ; preds = %for.inc201, %if.then178
  %160 = load i64, i64* %x, align 8, !dbg !1825
  %161 = load i64, i64* %number_pixels.addr, align 8, !dbg !1827
  %cmp180 = icmp slt i64 %160, %161, !dbg !1828
  br i1 %cmp180, label %for.body182, label %for.end203, !dbg !1829

for.body182:                                      ; preds = %for.cond179
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1830
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !1830
  %163 = load i16, i16* %red183, align 2, !dbg !1830
  %164 = load i64, i64* %range, align 8, !dbg !1832
  %call184 = call i64 @ScaleQuantumToAny(i16 zeroext %163, i64 %164), !dbg !1833
  %conv185 = trunc i64 %call184 to i32, !dbg !1834
  store i32 %conv185, i32* %pixel84, align 4, !dbg !1835
  %165 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1836
  %166 = load i32, i32* %pixel84, align 4, !dbg !1837
  %conv186 = zext i32 %166 to i64, !dbg !1837
  %167 = load i8*, i8** %q.addr, align 8, !dbg !1838
  %call187 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %165, i64 %conv186, i8* %167), !dbg !1839
  store i8* %call187, i8** %q.addr, align 8, !dbg !1840
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1841
  %green188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 1, !dbg !1841
  %169 = load i16, i16* %green188, align 2, !dbg !1841
  %170 = load i64, i64* %range, align 8, !dbg !1842
  %call189 = call i64 @ScaleQuantumToAny(i16 zeroext %169, i64 %170), !dbg !1843
  %conv190 = trunc i64 %call189 to i32, !dbg !1844
  store i32 %conv190, i32* %pixel84, align 4, !dbg !1845
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1846
  %172 = load i32, i32* %pixel84, align 4, !dbg !1847
  %conv191 = zext i32 %172 to i64, !dbg !1847
  %173 = load i8*, i8** %q.addr, align 8, !dbg !1848
  %call192 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %171, i64 %conv191, i8* %173), !dbg !1849
  store i8* %call192, i8** %q.addr, align 8, !dbg !1850
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1851
  %blue193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 0, i32 0, !dbg !1851
  %175 = load i16, i16* %blue193, align 2, !dbg !1851
  %176 = load i64, i64* %range, align 8, !dbg !1852
  %call194 = call i64 @ScaleQuantumToAny(i16 zeroext %175, i64 %176), !dbg !1853
  %conv195 = trunc i64 %call194 to i32, !dbg !1854
  store i32 %conv195, i32* %pixel84, align 4, !dbg !1855
  %177 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1856
  %178 = load i32, i32* %pixel84, align 4, !dbg !1857
  %conv196 = zext i32 %178 to i64, !dbg !1857
  %179 = load i8*, i8** %q.addr, align 8, !dbg !1858
  %call197 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %177, i64 %conv196, i8* %179), !dbg !1859
  store i8* %call197, i8** %q.addr, align 8, !dbg !1860
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1861
  %incdec.ptr198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 1, !dbg !1861
  store %struct._PixelPacket* %incdec.ptr198, %struct._PixelPacket** %p.addr, align 8, !dbg !1861
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1862
  %pad199 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %181, i32 0, i32 6, !dbg !1863
  %182 = load i64, i64* %pad199, align 8, !dbg !1863
  %183 = load i8*, i8** %q.addr, align 8, !dbg !1864
  %add.ptr200 = getelementptr inbounds i8, i8* %183, i64 %182, !dbg !1864
  store i8* %add.ptr200, i8** %q.addr, align 8, !dbg !1864
  br label %for.inc201, !dbg !1865

for.inc201:                                       ; preds = %for.body182
  %184 = load i64, i64* %x, align 8, !dbg !1866
  %inc202 = add nsw i64 %184, 1, !dbg !1866
  store i64 %inc202, i64* %x, align 8, !dbg !1866
  br label %for.cond179, !dbg !1867, !llvm.loop !1868

for.end203:                                       ; preds = %for.cond179
  br label %sw.epilog387, !dbg !1870

if.end204:                                        ; preds = %if.end174
  store i64 0, i64* %x, align 8, !dbg !1871
  br label %for.cond205, !dbg !1873

for.cond205:                                      ; preds = %for.inc227, %if.end204
  %185 = load i64, i64* %x, align 8, !dbg !1874
  %186 = load i64, i64* %number_pixels.addr, align 8, !dbg !1876
  %cmp206 = icmp slt i64 %185, %186, !dbg !1877
  br i1 %cmp206, label %for.body208, label %for.end229, !dbg !1878

for.body208:                                      ; preds = %for.cond205
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1879
  %red209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 0, i32 2, !dbg !1879
  %188 = load i16, i16* %red209, align 2, !dbg !1879
  %189 = load i64, i64* %range, align 8, !dbg !1881
  %call210 = call i64 @ScaleQuantumToAny(i16 zeroext %188, i64 %189), !dbg !1882
  %conv211 = trunc i64 %call210 to i32, !dbg !1883
  store i32 %conv211, i32* %pixel84, align 4, !dbg !1884
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1885
  %191 = load i32, i32* %pixel84, align 4, !dbg !1886
  %conv212 = zext i32 %191 to i64, !dbg !1886
  %192 = load i8*, i8** %q.addr, align 8, !dbg !1887
  %call213 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %190, i64 %conv212, i8* %192), !dbg !1888
  store i8* %call213, i8** %q.addr, align 8, !dbg !1889
  %193 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1890
  %green214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %193, i32 0, i32 1, !dbg !1890
  %194 = load i16, i16* %green214, align 2, !dbg !1890
  %195 = load i64, i64* %range, align 8, !dbg !1891
  %call215 = call i64 @ScaleQuantumToAny(i16 zeroext %194, i64 %195), !dbg !1892
  %conv216 = trunc i64 %call215 to i32, !dbg !1893
  store i32 %conv216, i32* %pixel84, align 4, !dbg !1894
  %196 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1895
  %197 = load i32, i32* %pixel84, align 4, !dbg !1896
  %conv217 = zext i32 %197 to i64, !dbg !1896
  %198 = load i8*, i8** %q.addr, align 8, !dbg !1897
  %call218 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %196, i64 %conv217, i8* %198), !dbg !1898
  store i8* %call218, i8** %q.addr, align 8, !dbg !1899
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1900
  %blue219 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 0, !dbg !1900
  %200 = load i16, i16* %blue219, align 2, !dbg !1900
  %201 = load i64, i64* %range, align 8, !dbg !1901
  %call220 = call i64 @ScaleQuantumToAny(i16 zeroext %200, i64 %201), !dbg !1902
  %conv221 = trunc i64 %call220 to i32, !dbg !1903
  store i32 %conv221, i32* %pixel84, align 4, !dbg !1904
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1905
  %203 = load i32, i32* %pixel84, align 4, !dbg !1906
  %conv222 = zext i32 %203 to i64, !dbg !1906
  %204 = load i8*, i8** %q.addr, align 8, !dbg !1907
  %call223 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %202, i64 %conv222, i8* %204), !dbg !1908
  store i8* %call223, i8** %q.addr, align 8, !dbg !1909
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1910
  %incdec.ptr224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 1, !dbg !1910
  store %struct._PixelPacket* %incdec.ptr224, %struct._PixelPacket** %p.addr, align 8, !dbg !1910
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1911
  %pad225 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %206, i32 0, i32 6, !dbg !1912
  %207 = load i64, i64* %pad225, align 8, !dbg !1912
  %208 = load i8*, i8** %q.addr, align 8, !dbg !1913
  %add.ptr226 = getelementptr inbounds i8, i8* %208, i64 %207, !dbg !1913
  store i8* %add.ptr226, i8** %q.addr, align 8, !dbg !1913
  br label %for.inc227, !dbg !1914

for.inc227:                                       ; preds = %for.body208
  %209 = load i64, i64* %x, align 8, !dbg !1915
  %inc228 = add nsw i64 %209, 1, !dbg !1915
  store i64 %inc228, i64* %x, align 8, !dbg !1915
  br label %for.cond205, !dbg !1916, !llvm.loop !1917

for.end229:                                       ; preds = %for.cond205
  br label %sw.epilog387, !dbg !1919

sw.bb230:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel231, metadata !1920, metadata !DIExpression()), !dbg !1922
  %210 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1923
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %210, i32 0, i32 2, !dbg !1925
  %211 = load i32, i32* %format, align 8, !dbg !1925
  %cmp232 = icmp eq i32 %211, 1, !dbg !1926
  br i1 %cmp232, label %if.then234, label %if.end269, !dbg !1927

if.then234:                                       ; preds = %sw.bb230
  store i64 0, i64* %x, align 8, !dbg !1928
  br label %for.cond235, !dbg !1931

for.cond235:                                      ; preds = %for.inc266, %if.then234
  %212 = load i64, i64* %x, align 8, !dbg !1932
  %213 = load i64, i64* %number_pixels.addr, align 8, !dbg !1934
  %cmp236 = icmp slt i64 %212, %213, !dbg !1935
  br i1 %cmp236, label %for.body238, label %for.end268, !dbg !1936

for.body238:                                      ; preds = %for.cond235
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1937
  %blue239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 0, !dbg !1937
  %215 = load i16, i16* %blue239, align 2, !dbg !1937
  %conv240 = zext i16 %215 to i32, !dbg !1937
  %conv241 = sitofp i32 %conv240 to double, !dbg !1937
  %mul242 = fmul double 0x3EF0001000100010, %conv241, !dbg !1939
  %conv243 = fptrunc double %mul242 to float, !dbg !1940
  %call244 = call zeroext i16 @SinglePrecisionToHalf(float %conv243), !dbg !1941
  store i16 %call244, i16* %pixel231, align 2, !dbg !1942
  %216 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1943
  %endian245 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %216, i32 0, i32 13, !dbg !1944
  %217 = load i32, i32* %endian245, align 8, !dbg !1944
  %218 = load i16, i16* %pixel231, align 2, !dbg !1945
  %219 = load i8*, i8** %q.addr, align 8, !dbg !1946
  %call246 = call i8* @PopShortPixel(i32 %217, i16 zeroext %218, i8* %219), !dbg !1947
  store i8* %call246, i8** %q.addr, align 8, !dbg !1948
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1949
  %green247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 1, !dbg !1949
  %221 = load i16, i16* %green247, align 2, !dbg !1949
  %conv248 = zext i16 %221 to i32, !dbg !1949
  %conv249 = sitofp i32 %conv248 to double, !dbg !1949
  %mul250 = fmul double 0x3EF0001000100010, %conv249, !dbg !1950
  %conv251 = fptrunc double %mul250 to float, !dbg !1951
  %call252 = call zeroext i16 @SinglePrecisionToHalf(float %conv251), !dbg !1952
  store i16 %call252, i16* %pixel231, align 2, !dbg !1953
  %222 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1954
  %endian253 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %222, i32 0, i32 13, !dbg !1955
  %223 = load i32, i32* %endian253, align 8, !dbg !1955
  %224 = load i16, i16* %pixel231, align 2, !dbg !1956
  %225 = load i8*, i8** %q.addr, align 8, !dbg !1957
  %call254 = call i8* @PopShortPixel(i32 %223, i16 zeroext %224, i8* %225), !dbg !1958
  store i8* %call254, i8** %q.addr, align 8, !dbg !1959
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1960
  %red255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 0, i32 2, !dbg !1960
  %227 = load i16, i16* %red255, align 2, !dbg !1960
  %conv256 = zext i16 %227 to i32, !dbg !1960
  %conv257 = sitofp i32 %conv256 to double, !dbg !1960
  %mul258 = fmul double 0x3EF0001000100010, %conv257, !dbg !1961
  %conv259 = fptrunc double %mul258 to float, !dbg !1962
  %call260 = call zeroext i16 @SinglePrecisionToHalf(float %conv259), !dbg !1963
  store i16 %call260, i16* %pixel231, align 2, !dbg !1964
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1965
  %endian261 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %228, i32 0, i32 13, !dbg !1966
  %229 = load i32, i32* %endian261, align 8, !dbg !1966
  %230 = load i16, i16* %pixel231, align 2, !dbg !1967
  %231 = load i8*, i8** %q.addr, align 8, !dbg !1968
  %call262 = call i8* @PopShortPixel(i32 %229, i16 zeroext %230, i8* %231), !dbg !1969
  store i8* %call262, i8** %q.addr, align 8, !dbg !1970
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1971
  %incdec.ptr263 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 1, !dbg !1971
  store %struct._PixelPacket* %incdec.ptr263, %struct._PixelPacket** %p.addr, align 8, !dbg !1971
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1972
  %pad264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %233, i32 0, i32 6, !dbg !1973
  %234 = load i64, i64* %pad264, align 8, !dbg !1973
  %235 = load i8*, i8** %q.addr, align 8, !dbg !1974
  %add.ptr265 = getelementptr inbounds i8, i8* %235, i64 %234, !dbg !1974
  store i8* %add.ptr265, i8** %q.addr, align 8, !dbg !1974
  br label %for.inc266, !dbg !1975

for.inc266:                                       ; preds = %for.body238
  %236 = load i64, i64* %x, align 8, !dbg !1976
  %inc267 = add nsw i64 %236, 1, !dbg !1976
  store i64 %inc267, i64* %x, align 8, !dbg !1976
  br label %for.cond235, !dbg !1977, !llvm.loop !1978

for.end268:                                       ; preds = %for.cond235
  br label %sw.epilog387, !dbg !1980

if.end269:                                        ; preds = %sw.bb230
  store i64 0, i64* %x, align 8, !dbg !1981
  br label %for.cond270, !dbg !1983

for.cond270:                                      ; preds = %for.inc289, %if.end269
  %237 = load i64, i64* %x, align 8, !dbg !1984
  %238 = load i64, i64* %number_pixels.addr, align 8, !dbg !1986
  %cmp271 = icmp slt i64 %237, %238, !dbg !1987
  br i1 %cmp271, label %for.body273, label %for.end291, !dbg !1988

for.body273:                                      ; preds = %for.cond270
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1989
  %blue274 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %239, i32 0, i32 0, !dbg !1989
  %240 = load i16, i16* %blue274, align 2, !dbg !1989
  %call275 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %240), !dbg !1991
  store i16 %call275, i16* %pixel231, align 2, !dbg !1992
  %241 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1993
  %endian276 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %241, i32 0, i32 13, !dbg !1994
  %242 = load i32, i32* %endian276, align 8, !dbg !1994
  %243 = load i16, i16* %pixel231, align 2, !dbg !1995
  %244 = load i8*, i8** %q.addr, align 8, !dbg !1996
  %call277 = call i8* @PopShortPixel(i32 %242, i16 zeroext %243, i8* %244), !dbg !1997
  store i8* %call277, i8** %q.addr, align 8, !dbg !1998
  %245 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !1999
  %green278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %245, i32 0, i32 1, !dbg !1999
  %246 = load i16, i16* %green278, align 2, !dbg !1999
  %call279 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %246), !dbg !2000
  store i16 %call279, i16* %pixel231, align 2, !dbg !2001
  %247 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2002
  %endian280 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %247, i32 0, i32 13, !dbg !2003
  %248 = load i32, i32* %endian280, align 8, !dbg !2003
  %249 = load i16, i16* %pixel231, align 2, !dbg !2004
  %250 = load i8*, i8** %q.addr, align 8, !dbg !2005
  %call281 = call i8* @PopShortPixel(i32 %248, i16 zeroext %249, i8* %250), !dbg !2006
  store i8* %call281, i8** %q.addr, align 8, !dbg !2007
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2008
  %red282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 2, !dbg !2008
  %252 = load i16, i16* %red282, align 2, !dbg !2008
  %call283 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %252), !dbg !2009
  store i16 %call283, i16* %pixel231, align 2, !dbg !2010
  %253 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2011
  %endian284 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %253, i32 0, i32 13, !dbg !2012
  %254 = load i32, i32* %endian284, align 8, !dbg !2012
  %255 = load i16, i16* %pixel231, align 2, !dbg !2013
  %256 = load i8*, i8** %q.addr, align 8, !dbg !2014
  %call285 = call i8* @PopShortPixel(i32 %254, i16 zeroext %255, i8* %256), !dbg !2015
  store i8* %call285, i8** %q.addr, align 8, !dbg !2016
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2017
  %incdec.ptr286 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 1, !dbg !2017
  store %struct._PixelPacket* %incdec.ptr286, %struct._PixelPacket** %p.addr, align 8, !dbg !2017
  %258 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2018
  %pad287 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %258, i32 0, i32 6, !dbg !2019
  %259 = load i64, i64* %pad287, align 8, !dbg !2019
  %260 = load i8*, i8** %q.addr, align 8, !dbg !2020
  %add.ptr288 = getelementptr inbounds i8, i8* %260, i64 %259, !dbg !2020
  store i8* %add.ptr288, i8** %q.addr, align 8, !dbg !2020
  br label %for.inc289, !dbg !2021

for.inc289:                                       ; preds = %for.body273
  %261 = load i64, i64* %x, align 8, !dbg !2022
  %inc290 = add nsw i64 %261, 1, !dbg !2022
  store i64 %inc290, i64* %x, align 8, !dbg !2022
  br label %for.cond270, !dbg !2023, !llvm.loop !2024

for.end291:                                       ; preds = %for.cond270
  br label %sw.epilog387, !dbg !2026

sw.bb292:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel293, metadata !2027, metadata !DIExpression()), !dbg !2029
  %262 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2030
  %format294 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %262, i32 0, i32 2, !dbg !2032
  %263 = load i32, i32* %format294, align 8, !dbg !2032
  %cmp295 = icmp eq i32 %263, 1, !dbg !2033
  br i1 %cmp295, label %if.then297, label %if.end317, !dbg !2034

if.then297:                                       ; preds = %sw.bb292
  store i64 0, i64* %x, align 8, !dbg !2035
  br label %for.cond298, !dbg !2038

for.cond298:                                      ; preds = %for.inc314, %if.then297
  %264 = load i64, i64* %x, align 8, !dbg !2039
  %265 = load i64, i64* %number_pixels.addr, align 8, !dbg !2041
  %cmp299 = icmp slt i64 %264, %265, !dbg !2042
  br i1 %cmp299, label %for.body301, label %for.end316, !dbg !2043

for.body301:                                      ; preds = %for.cond298
  %266 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2044
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2046
  %red302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %267, i32 0, i32 2, !dbg !2046
  %268 = load i16, i16* %red302, align 2, !dbg !2046
  %conv303 = uitofp i16 %268 to float, !dbg !2047
  %269 = load i8*, i8** %q.addr, align 8, !dbg !2048
  %call304 = call i8* @PopFloatPixel(%struct._QuantumInfo* %266, float %conv303, i8* %269), !dbg !2049
  store i8* %call304, i8** %q.addr, align 8, !dbg !2050
  %270 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2051
  %271 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2052
  %green305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %271, i32 0, i32 1, !dbg !2052
  %272 = load i16, i16* %green305, align 2, !dbg !2052
  %conv306 = uitofp i16 %272 to float, !dbg !2053
  %273 = load i8*, i8** %q.addr, align 8, !dbg !2054
  %call307 = call i8* @PopFloatPixel(%struct._QuantumInfo* %270, float %conv306, i8* %273), !dbg !2055
  store i8* %call307, i8** %q.addr, align 8, !dbg !2056
  %274 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2057
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2058
  %blue308 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 0, !dbg !2058
  %276 = load i16, i16* %blue308, align 2, !dbg !2058
  %conv309 = uitofp i16 %276 to float, !dbg !2059
  %277 = load i8*, i8** %q.addr, align 8, !dbg !2060
  %call310 = call i8* @PopFloatPixel(%struct._QuantumInfo* %274, float %conv309, i8* %277), !dbg !2061
  store i8* %call310, i8** %q.addr, align 8, !dbg !2062
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2063
  %incdec.ptr311 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 1, !dbg !2063
  store %struct._PixelPacket* %incdec.ptr311, %struct._PixelPacket** %p.addr, align 8, !dbg !2063
  %279 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2064
  %pad312 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %279, i32 0, i32 6, !dbg !2065
  %280 = load i64, i64* %pad312, align 8, !dbg !2065
  %281 = load i8*, i8** %q.addr, align 8, !dbg !2066
  %add.ptr313 = getelementptr inbounds i8, i8* %281, i64 %280, !dbg !2066
  store i8* %add.ptr313, i8** %q.addr, align 8, !dbg !2066
  br label %for.inc314, !dbg !2067

for.inc314:                                       ; preds = %for.body301
  %282 = load i64, i64* %x, align 8, !dbg !2068
  %inc315 = add nsw i64 %282, 1, !dbg !2068
  store i64 %inc315, i64* %x, align 8, !dbg !2068
  br label %for.cond298, !dbg !2069, !llvm.loop !2070

for.end316:                                       ; preds = %for.cond298
  br label %sw.epilog387, !dbg !2072

if.end317:                                        ; preds = %sw.bb292
  store i64 0, i64* %x, align 8, !dbg !2073
  br label %for.cond318, !dbg !2075

for.cond318:                                      ; preds = %for.inc337, %if.end317
  %283 = load i64, i64* %x, align 8, !dbg !2076
  %284 = load i64, i64* %number_pixels.addr, align 8, !dbg !2078
  %cmp319 = icmp slt i64 %283, %284, !dbg !2079
  br i1 %cmp319, label %for.body321, label %for.end339, !dbg !2080

for.body321:                                      ; preds = %for.cond318
  %285 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2081
  %blue322 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %285, i32 0, i32 0, !dbg !2081
  %286 = load i16, i16* %blue322, align 2, !dbg !2081
  %call323 = call i32 @ScaleQuantumToLong(i16 zeroext %286), !dbg !2083
  store i32 %call323, i32* %pixel293, align 4, !dbg !2084
  %287 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2085
  %endian324 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %287, i32 0, i32 13, !dbg !2086
  %288 = load i32, i32* %endian324, align 8, !dbg !2086
  %289 = load i32, i32* %pixel293, align 4, !dbg !2087
  %290 = load i8*, i8** %q.addr, align 8, !dbg !2088
  %call325 = call i8* @PopLongPixel(i32 %288, i32 %289, i8* %290), !dbg !2089
  store i8* %call325, i8** %q.addr, align 8, !dbg !2090
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2091
  %green326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 0, i32 1, !dbg !2091
  %292 = load i16, i16* %green326, align 2, !dbg !2091
  %call327 = call i32 @ScaleQuantumToLong(i16 zeroext %292), !dbg !2092
  store i32 %call327, i32* %pixel293, align 4, !dbg !2093
  %293 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2094
  %endian328 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %293, i32 0, i32 13, !dbg !2095
  %294 = load i32, i32* %endian328, align 8, !dbg !2095
  %295 = load i32, i32* %pixel293, align 4, !dbg !2096
  %296 = load i8*, i8** %q.addr, align 8, !dbg !2097
  %call329 = call i8* @PopLongPixel(i32 %294, i32 %295, i8* %296), !dbg !2098
  store i8* %call329, i8** %q.addr, align 8, !dbg !2099
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2100
  %red330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 0, i32 2, !dbg !2100
  %298 = load i16, i16* %red330, align 2, !dbg !2100
  %call331 = call i32 @ScaleQuantumToLong(i16 zeroext %298), !dbg !2101
  store i32 %call331, i32* %pixel293, align 4, !dbg !2102
  %299 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2103
  %endian332 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %299, i32 0, i32 13, !dbg !2104
  %300 = load i32, i32* %endian332, align 8, !dbg !2104
  %301 = load i32, i32* %pixel293, align 4, !dbg !2105
  %302 = load i8*, i8** %q.addr, align 8, !dbg !2106
  %call333 = call i8* @PopLongPixel(i32 %300, i32 %301, i8* %302), !dbg !2107
  store i8* %call333, i8** %q.addr, align 8, !dbg !2108
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2109
  %incdec.ptr334 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %303, i32 1, !dbg !2109
  store %struct._PixelPacket* %incdec.ptr334, %struct._PixelPacket** %p.addr, align 8, !dbg !2109
  %304 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2110
  %pad335 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %304, i32 0, i32 6, !dbg !2111
  %305 = load i64, i64* %pad335, align 8, !dbg !2111
  %306 = load i8*, i8** %q.addr, align 8, !dbg !2112
  %add.ptr336 = getelementptr inbounds i8, i8* %306, i64 %305, !dbg !2112
  store i8* %add.ptr336, i8** %q.addr, align 8, !dbg !2112
  br label %for.inc337, !dbg !2113

for.inc337:                                       ; preds = %for.body321
  %307 = load i64, i64* %x, align 8, !dbg !2114
  %inc338 = add nsw i64 %307, 1, !dbg !2114
  store i64 %inc338, i64* %x, align 8, !dbg !2114
  br label %for.cond318, !dbg !2115, !llvm.loop !2116

for.end339:                                       ; preds = %for.cond318
  br label %sw.epilog387, !dbg !2118

sw.bb340:                                         ; preds = %entry
  %308 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2119
  %format341 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %308, i32 0, i32 2, !dbg !2122
  %309 = load i32, i32* %format341, align 8, !dbg !2122
  %cmp342 = icmp eq i32 %309, 1, !dbg !2123
  br i1 %cmp342, label %if.then344, label %if.end364, !dbg !2124

if.then344:                                       ; preds = %sw.bb340
  store i64 0, i64* %x, align 8, !dbg !2125
  br label %for.cond345, !dbg !2128

for.cond345:                                      ; preds = %for.inc361, %if.then344
  %310 = load i64, i64* %x, align 8, !dbg !2129
  %311 = load i64, i64* %number_pixels.addr, align 8, !dbg !2131
  %cmp346 = icmp slt i64 %310, %311, !dbg !2132
  br i1 %cmp346, label %for.body348, label %for.end363, !dbg !2133

for.body348:                                      ; preds = %for.cond345
  %312 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2134
  %313 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2136
  %red349 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %313, i32 0, i32 2, !dbg !2136
  %314 = load i16, i16* %red349, align 2, !dbg !2136
  %conv350 = uitofp i16 %314 to double, !dbg !2137
  %315 = load i8*, i8** %q.addr, align 8, !dbg !2138
  %call351 = call i8* @PopDoublePixel(%struct._QuantumInfo* %312, double %conv350, i8* %315), !dbg !2139
  store i8* %call351, i8** %q.addr, align 8, !dbg !2140
  %316 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2141
  %317 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2142
  %green352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %317, i32 0, i32 1, !dbg !2142
  %318 = load i16, i16* %green352, align 2, !dbg !2142
  %conv353 = uitofp i16 %318 to double, !dbg !2143
  %319 = load i8*, i8** %q.addr, align 8, !dbg !2144
  %call354 = call i8* @PopDoublePixel(%struct._QuantumInfo* %316, double %conv353, i8* %319), !dbg !2145
  store i8* %call354, i8** %q.addr, align 8, !dbg !2146
  %320 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2147
  %321 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2148
  %blue355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %321, i32 0, i32 0, !dbg !2148
  %322 = load i16, i16* %blue355, align 2, !dbg !2148
  %conv356 = uitofp i16 %322 to double, !dbg !2149
  %323 = load i8*, i8** %q.addr, align 8, !dbg !2150
  %call357 = call i8* @PopDoublePixel(%struct._QuantumInfo* %320, double %conv356, i8* %323), !dbg !2151
  store i8* %call357, i8** %q.addr, align 8, !dbg !2152
  %324 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2153
  %incdec.ptr358 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %324, i32 1, !dbg !2153
  store %struct._PixelPacket* %incdec.ptr358, %struct._PixelPacket** %p.addr, align 8, !dbg !2153
  %325 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2154
  %pad359 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %325, i32 0, i32 6, !dbg !2155
  %326 = load i64, i64* %pad359, align 8, !dbg !2155
  %327 = load i8*, i8** %q.addr, align 8, !dbg !2156
  %add.ptr360 = getelementptr inbounds i8, i8* %327, i64 %326, !dbg !2156
  store i8* %add.ptr360, i8** %q.addr, align 8, !dbg !2156
  br label %for.inc361, !dbg !2157

for.inc361:                                       ; preds = %for.body348
  %328 = load i64, i64* %x, align 8, !dbg !2158
  %inc362 = add nsw i64 %328, 1, !dbg !2158
  store i64 %inc362, i64* %x, align 8, !dbg !2158
  br label %for.cond345, !dbg !2159, !llvm.loop !2160

for.end363:                                       ; preds = %for.cond345
  br label %sw.epilog387, !dbg !2162

if.end364:                                        ; preds = %sw.bb340
  br label %sw.default365, !dbg !2163

sw.default365:                                    ; preds = %entry, %if.end364
  %329 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2164
  %depth366 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %329, i32 0, i32 0, !dbg !2166
  %330 = load i64, i64* %depth366, align 8, !dbg !2166
  %call367 = call i64 @GetQuantumRange(i64 %330), !dbg !2167
  store i64 %call367, i64* %range, align 8, !dbg !2168
  store i64 0, i64* %x, align 8, !dbg !2169
  br label %for.cond368, !dbg !2171

for.cond368:                                      ; preds = %for.inc384, %sw.default365
  %331 = load i64, i64* %x, align 8, !dbg !2172
  %332 = load i64, i64* %number_pixels.addr, align 8, !dbg !2174
  %cmp369 = icmp slt i64 %331, %332, !dbg !2175
  br i1 %cmp369, label %for.body371, label %for.end386, !dbg !2176

for.body371:                                      ; preds = %for.cond368
  %333 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2177
  %334 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2179
  %red372 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %334, i32 0, i32 2, !dbg !2179
  %335 = load i16, i16* %red372, align 2, !dbg !2179
  %336 = load i64, i64* %range, align 8, !dbg !2180
  %call373 = call i64 @ScaleQuantumToAny(i16 zeroext %335, i64 %336), !dbg !2181
  %337 = load i8*, i8** %q.addr, align 8, !dbg !2182
  %call374 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %333, i64 %call373, i8* %337), !dbg !2183
  store i8* %call374, i8** %q.addr, align 8, !dbg !2184
  %338 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2185
  %339 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2186
  %green375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %339, i32 0, i32 1, !dbg !2186
  %340 = load i16, i16* %green375, align 2, !dbg !2186
  %341 = load i64, i64* %range, align 8, !dbg !2187
  %call376 = call i64 @ScaleQuantumToAny(i16 zeroext %340, i64 %341), !dbg !2188
  %342 = load i8*, i8** %q.addr, align 8, !dbg !2189
  %call377 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %338, i64 %call376, i8* %342), !dbg !2190
  store i8* %call377, i8** %q.addr, align 8, !dbg !2191
  %343 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2192
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2193
  %blue378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %344, i32 0, i32 0, !dbg !2193
  %345 = load i16, i16* %blue378, align 2, !dbg !2193
  %346 = load i64, i64* %range, align 8, !dbg !2194
  %call379 = call i64 @ScaleQuantumToAny(i16 zeroext %345, i64 %346), !dbg !2195
  %347 = load i8*, i8** %q.addr, align 8, !dbg !2196
  %call380 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %343, i64 %call379, i8* %347), !dbg !2197
  store i8* %call380, i8** %q.addr, align 8, !dbg !2198
  %348 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2199
  %incdec.ptr381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %348, i32 1, !dbg !2199
  store %struct._PixelPacket* %incdec.ptr381, %struct._PixelPacket** %p.addr, align 8, !dbg !2199
  %349 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2200
  %pad382 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %349, i32 0, i32 6, !dbg !2201
  %350 = load i64, i64* %pad382, align 8, !dbg !2201
  %351 = load i8*, i8** %q.addr, align 8, !dbg !2202
  %add.ptr383 = getelementptr inbounds i8, i8* %351, i64 %350, !dbg !2202
  store i8* %add.ptr383, i8** %q.addr, align 8, !dbg !2202
  br label %for.inc384, !dbg !2203

for.inc384:                                       ; preds = %for.body371
  %352 = load i64, i64* %x, align 8, !dbg !2204
  %inc385 = add nsw i64 %352, 1, !dbg !2204
  store i64 %inc385, i64* %x, align 8, !dbg !2204
  br label %for.cond368, !dbg !2205, !llvm.loop !2206

for.end386:                                       ; preds = %for.cond368
  br label %sw.epilog387, !dbg !2208

sw.epilog387:                                     ; preds = %for.end386, %for.end363, %for.end339, %for.end316, %for.end291, %for.end268, %for.end229, %for.end203, %if.end173, %for.end82, %for.end56, %for.end28, %for.end
  ret void, !dbg !2209
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportBGRAQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !2210 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel10 = alloca i32, align 4
  %i = alloca i64, align 8
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  %pixel141 = alloca i16, align 2
  %pixel218 = alloca i32, align 4
  %pixel227 = alloca float, align 4
  %pixel283 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !2211, metadata !DIExpression()), !dbg !2212
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !2213, metadata !DIExpression()), !dbg !2214
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !2215, metadata !DIExpression()), !dbg !2216
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !2217, metadata !DIExpression()), !dbg !2218
  call void @llvm.dbg.declare(metadata i64* %range, metadata !2219, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2221, metadata !DIExpression()), !dbg !2222
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2223
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !2224
  %1 = load i64, i64* %depth, align 8, !dbg !2224
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 10, label %sw.bb9
    i64 16, label %sw.bb140
    i64 32, label %sw.bb217
    i64 64, label %sw.bb278
  ], !dbg !2225

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !2226, metadata !DIExpression()), !dbg !2229
  store i64 0, i64* %x, align 8, !dbg !2230
  br label %for.cond, !dbg !2232

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !2233
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !2235
  %cmp = icmp slt i64 %2, %3, !dbg !2236
  br i1 %cmp, label %for.body, label %for.end, !dbg !2237

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2238
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !2238
  %5 = load i16, i16* %blue, align 2, !dbg !2238
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !2240
  store i8 %call, i8* %pixel, align 1, !dbg !2241
  %6 = load i8, i8* %pixel, align 1, !dbg !2242
  %7 = load i8*, i8** %q.addr, align 8, !dbg !2243
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !2244
  store i8* %call1, i8** %q.addr, align 8, !dbg !2245
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2246
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 1, !dbg !2246
  %9 = load i16, i16* %green, align 2, !dbg !2246
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %9), !dbg !2247
  store i8 %call2, i8* %pixel, align 1, !dbg !2248
  %10 = load i8, i8* %pixel, align 1, !dbg !2249
  %11 = load i8*, i8** %q.addr, align 8, !dbg !2250
  %call3 = call i8* @PopCharPixel(i8 zeroext %10, i8* %11), !dbg !2251
  store i8* %call3, i8** %q.addr, align 8, !dbg !2252
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2253
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 2, !dbg !2253
  %13 = load i16, i16* %red, align 2, !dbg !2253
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %13), !dbg !2254
  store i8 %call4, i8* %pixel, align 1, !dbg !2255
  %14 = load i8, i8* %pixel, align 1, !dbg !2256
  %15 = load i8*, i8** %q.addr, align 8, !dbg !2257
  %call5 = call i8* @PopCharPixel(i8 zeroext %14, i8* %15), !dbg !2258
  store i8* %call5, i8** %q.addr, align 8, !dbg !2259
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2260
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 3, !dbg !2260
  %17 = load i16, i16* %opacity, align 2, !dbg !2260
  %conv = zext i16 %17 to i32, !dbg !2260
  %sub = sub nsw i32 65535, %conv, !dbg !2260
  %conv6 = trunc i32 %sub to i16, !dbg !2261
  %call7 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv6), !dbg !2262
  store i8 %call7, i8* %pixel, align 1, !dbg !2263
  %18 = load i8, i8* %pixel, align 1, !dbg !2264
  %19 = load i8*, i8** %q.addr, align 8, !dbg !2265
  %call8 = call i8* @PopCharPixel(i8 zeroext %18, i8* %19), !dbg !2266
  store i8* %call8, i8** %q.addr, align 8, !dbg !2267
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2268
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 1, !dbg !2268
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !2268
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2269
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !2270
  %22 = load i64, i64* %pad, align 8, !dbg !2270
  %23 = load i8*, i8** %q.addr, align 8, !dbg !2271
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !2271
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !2271
  br label %for.inc, !dbg !2272

for.inc:                                          ; preds = %for.body
  %24 = load i64, i64* %x, align 8, !dbg !2273
  %inc = add nsw i64 %24, 1, !dbg !2273
  store i64 %inc, i64* %x, align 8, !dbg !2273
  br label %for.cond, !dbg !2274, !llvm.loop !2275

for.end:                                          ; preds = %for.cond
  br label %sw.epilog336, !dbg !2277

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel10, metadata !2278, metadata !DIExpression()), !dbg !2280
  %25 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2281
  %depth11 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %25, i32 0, i32 0, !dbg !2282
  %26 = load i64, i64* %depth11, align 8, !dbg !2282
  %call12 = call i64 @GetQuantumRange(i64 %26), !dbg !2283
  store i64 %call12, i64* %range, align 8, !dbg !2284
  %27 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2285
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %27, i32 0, i32 8, !dbg !2287
  %28 = load i32, i32* %pack, align 4, !dbg !2287
  %cmp13 = icmp eq i32 %28, 0, !dbg !2288
  br i1 %cmp13, label %if.then, label %if.end, !dbg !2289

if.then:                                          ; preds = %sw.bb9
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2290, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !2293, metadata !DIExpression()), !dbg !2294
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2295, metadata !DIExpression()), !dbg !2296
  store i64 0, i64* %n, align 8, !dbg !2297
  store i64 0, i64* %quantum, align 8, !dbg !2298
  store i32 0, i32* %pixel10, align 4, !dbg !2299
  store i64 0, i64* %x, align 8, !dbg !2300
  br label %for.cond15, !dbg !2302

for.cond15:                                       ; preds = %for.inc66, %if.then
  %29 = load i64, i64* %x, align 8, !dbg !2303
  %30 = load i64, i64* %number_pixels.addr, align 8, !dbg !2305
  %cmp16 = icmp slt i64 %29, %30, !dbg !2306
  br i1 %cmp16, label %for.body18, label %for.end68, !dbg !2307

for.body18:                                       ; preds = %for.cond15
  store i64 0, i64* %i, align 8, !dbg !2308
  br label %for.cond19, !dbg !2311

for.cond19:                                       ; preds = %for.inc60, %for.body18
  %31 = load i64, i64* %i, align 8, !dbg !2312
  %cmp20 = icmp slt i64 %31, 4, !dbg !2314
  br i1 %cmp20, label %for.body22, label %for.end62, !dbg !2315

for.body22:                                       ; preds = %for.cond19
  %32 = load i64, i64* %i, align 8, !dbg !2316
  switch i64 %32, label %sw.epilog [
    i64 0, label %sw.bb23
    i64 1, label %sw.bb26
    i64 2, label %sw.bb29
    i64 3, label %sw.bb32
  ], !dbg !2318

sw.bb23:                                          ; preds = %for.body22
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2319
  %red24 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 2, !dbg !2319
  %34 = load i16, i16* %red24, align 2, !dbg !2319
  %conv25 = zext i16 %34 to i64, !dbg !2319
  store i64 %conv25, i64* %quantum, align 8, !dbg !2321
  br label %sw.epilog, !dbg !2322

sw.bb26:                                          ; preds = %for.body22
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2323
  %green27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 1, !dbg !2323
  %36 = load i16, i16* %green27, align 2, !dbg !2323
  %conv28 = zext i16 %36 to i64, !dbg !2323
  store i64 %conv28, i64* %quantum, align 8, !dbg !2324
  br label %sw.epilog, !dbg !2325

sw.bb29:                                          ; preds = %for.body22
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2326
  %blue30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 0, !dbg !2326
  %38 = load i16, i16* %blue30, align 2, !dbg !2326
  %conv31 = zext i16 %38 to i64, !dbg !2326
  store i64 %conv31, i64* %quantum, align 8, !dbg !2327
  br label %sw.epilog, !dbg !2328

sw.bb32:                                          ; preds = %for.body22
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2329
  %opacity33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 3, !dbg !2329
  %40 = load i16, i16* %opacity33, align 2, !dbg !2329
  %conv34 = zext i16 %40 to i32, !dbg !2329
  %sub35 = sub nsw i32 65535, %conv34, !dbg !2330
  %conv36 = trunc i32 %sub35 to i16, !dbg !2331
  %conv37 = zext i16 %conv36 to i64, !dbg !2331
  store i64 %conv37, i64* %quantum, align 8, !dbg !2332
  br label %sw.epilog, !dbg !2333

sw.epilog:                                        ; preds = %for.body22, %sw.bb32, %sw.bb29, %sw.bb26, %sw.bb23
  %41 = load i64, i64* %n, align 8, !dbg !2334
  %rem = srem i64 %41, 3, !dbg !2335
  switch i64 %rem, label %sw.epilog58 [
    i64 0, label %sw.bb38
    i64 1, label %sw.bb43
    i64 2, label %sw.bb50
  ], !dbg !2336

sw.bb38:                                          ; preds = %sw.epilog
  %42 = load i64, i64* %quantum, align 8, !dbg !2337
  %conv39 = trunc i64 %42 to i16, !dbg !2340
  %43 = load i64, i64* %range, align 8, !dbg !2341
  %call40 = call i64 @ScaleQuantumToAny(i16 zeroext %conv39, i64 %43), !dbg !2342
  %shl = shl i64 %call40, 22, !dbg !2343
  %44 = load i32, i32* %pixel10, align 4, !dbg !2344
  %conv41 = zext i32 %44 to i64, !dbg !2344
  %or = or i64 %conv41, %shl, !dbg !2344
  %conv42 = trunc i64 %or to i32, !dbg !2344
  store i32 %conv42, i32* %pixel10, align 4, !dbg !2344
  br label %sw.epilog58, !dbg !2345

sw.bb43:                                          ; preds = %sw.epilog
  %45 = load i64, i64* %quantum, align 8, !dbg !2346
  %conv44 = trunc i64 %45 to i16, !dbg !2348
  %46 = load i64, i64* %range, align 8, !dbg !2349
  %call45 = call i64 @ScaleQuantumToAny(i16 zeroext %conv44, i64 %46), !dbg !2350
  %shl46 = shl i64 %call45, 12, !dbg !2351
  %47 = load i32, i32* %pixel10, align 4, !dbg !2352
  %conv47 = zext i32 %47 to i64, !dbg !2352
  %or48 = or i64 %conv47, %shl46, !dbg !2352
  %conv49 = trunc i64 %or48 to i32, !dbg !2352
  store i32 %conv49, i32* %pixel10, align 4, !dbg !2352
  br label %sw.epilog58, !dbg !2353

sw.bb50:                                          ; preds = %sw.epilog
  %48 = load i64, i64* %quantum, align 8, !dbg !2354
  %conv51 = trunc i64 %48 to i16, !dbg !2356
  %49 = load i64, i64* %range, align 8, !dbg !2357
  %call52 = call i64 @ScaleQuantumToAny(i16 zeroext %conv51, i64 %49), !dbg !2358
  %shl53 = shl i64 %call52, 2, !dbg !2359
  %50 = load i32, i32* %pixel10, align 4, !dbg !2360
  %conv54 = zext i32 %50 to i64, !dbg !2360
  %or55 = or i64 %conv54, %shl53, !dbg !2360
  %conv56 = trunc i64 %or55 to i32, !dbg !2360
  store i32 %conv56, i32* %pixel10, align 4, !dbg !2360
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2361
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %51, i32 0, i32 13, !dbg !2362
  %52 = load i32, i32* %endian, align 8, !dbg !2362
  %53 = load i32, i32* %pixel10, align 4, !dbg !2363
  %54 = load i8*, i8** %q.addr, align 8, !dbg !2364
  %call57 = call i8* @PopLongPixel(i32 %52, i32 %53, i8* %54), !dbg !2365
  store i8* %call57, i8** %q.addr, align 8, !dbg !2366
  store i32 0, i32* %pixel10, align 4, !dbg !2367
  br label %sw.epilog58, !dbg !2368

sw.epilog58:                                      ; preds = %sw.epilog, %sw.bb50, %sw.bb43, %sw.bb38
  %55 = load i64, i64* %n, align 8, !dbg !2369
  %inc59 = add nsw i64 %55, 1, !dbg !2369
  store i64 %inc59, i64* %n, align 8, !dbg !2369
  br label %for.inc60, !dbg !2370

for.inc60:                                        ; preds = %sw.epilog58
  %56 = load i64, i64* %i, align 8, !dbg !2371
  %inc61 = add nsw i64 %56, 1, !dbg !2371
  store i64 %inc61, i64* %i, align 8, !dbg !2371
  br label %for.cond19, !dbg !2372, !llvm.loop !2373

for.end62:                                        ; preds = %for.cond19
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2375
  %incdec.ptr63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 1, !dbg !2375
  store %struct._PixelPacket* %incdec.ptr63, %struct._PixelPacket** %p.addr, align 8, !dbg !2375
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2376
  %pad64 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !2377
  %59 = load i64, i64* %pad64, align 8, !dbg !2377
  %60 = load i8*, i8** %q.addr, align 8, !dbg !2378
  %add.ptr65 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !2378
  store i8* %add.ptr65, i8** %q.addr, align 8, !dbg !2378
  br label %for.inc66, !dbg !2379

for.inc66:                                        ; preds = %for.end62
  %61 = load i64, i64* %x, align 8, !dbg !2380
  %inc67 = add nsw i64 %61, 1, !dbg !2380
  store i64 %inc67, i64* %x, align 8, !dbg !2380
  br label %for.cond15, !dbg !2381, !llvm.loop !2382

for.end68:                                        ; preds = %for.cond15
  br label %sw.epilog336, !dbg !2384

if.end:                                           ; preds = %sw.bb9
  %62 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2385
  %quantum69 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %62, i32 0, i32 1, !dbg !2387
  %63 = load i64, i64* %quantum69, align 8, !dbg !2387
  %cmp70 = icmp eq i64 %63, 32, !dbg !2388
  br i1 %cmp70, label %if.then72, label %if.end106, !dbg !2389

if.then72:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !2390
  br label %for.cond73, !dbg !2393

for.cond73:                                       ; preds = %for.inc103, %if.then72
  %64 = load i64, i64* %x, align 8, !dbg !2394
  %65 = load i64, i64* %number_pixels.addr, align 8, !dbg !2396
  %cmp74 = icmp slt i64 %64, %65, !dbg !2397
  br i1 %cmp74, label %for.body76, label %for.end105, !dbg !2398

for.body76:                                       ; preds = %for.cond73
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2399
  %red77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 2, !dbg !2399
  %67 = load i16, i16* %red77, align 2, !dbg !2399
  %68 = load i64, i64* %range, align 8, !dbg !2401
  %call78 = call i64 @ScaleQuantumToAny(i16 zeroext %67, i64 %68), !dbg !2402
  %conv79 = trunc i64 %call78 to i32, !dbg !2403
  store i32 %conv79, i32* %pixel10, align 4, !dbg !2404
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2405
  %70 = load i32, i32* %pixel10, align 4, !dbg !2406
  %conv80 = zext i32 %70 to i64, !dbg !2406
  %71 = load i8*, i8** %q.addr, align 8, !dbg !2407
  %call81 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %69, i64 %conv80, i8* %71), !dbg !2408
  store i8* %call81, i8** %q.addr, align 8, !dbg !2409
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2410
  %green82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 1, !dbg !2410
  %73 = load i16, i16* %green82, align 2, !dbg !2410
  %74 = load i64, i64* %range, align 8, !dbg !2411
  %call83 = call i64 @ScaleQuantumToAny(i16 zeroext %73, i64 %74), !dbg !2412
  %conv84 = trunc i64 %call83 to i32, !dbg !2413
  store i32 %conv84, i32* %pixel10, align 4, !dbg !2414
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2415
  %76 = load i32, i32* %pixel10, align 4, !dbg !2416
  %conv85 = zext i32 %76 to i64, !dbg !2416
  %77 = load i8*, i8** %q.addr, align 8, !dbg !2417
  %call86 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %75, i64 %conv85, i8* %77), !dbg !2418
  store i8* %call86, i8** %q.addr, align 8, !dbg !2419
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2420
  %blue87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 0, !dbg !2420
  %79 = load i16, i16* %blue87, align 2, !dbg !2420
  %80 = load i64, i64* %range, align 8, !dbg !2421
  %call88 = call i64 @ScaleQuantumToAny(i16 zeroext %79, i64 %80), !dbg !2422
  %conv89 = trunc i64 %call88 to i32, !dbg !2423
  store i32 %conv89, i32* %pixel10, align 4, !dbg !2424
  %81 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2425
  %82 = load i32, i32* %pixel10, align 4, !dbg !2426
  %conv90 = zext i32 %82 to i64, !dbg !2426
  %83 = load i8*, i8** %q.addr, align 8, !dbg !2427
  %call91 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %81, i64 %conv90, i8* %83), !dbg !2428
  store i8* %call91, i8** %q.addr, align 8, !dbg !2429
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2430
  %opacity92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 3, !dbg !2430
  %85 = load i16, i16* %opacity92, align 2, !dbg !2430
  %conv93 = zext i16 %85 to i32, !dbg !2430
  %sub94 = sub nsw i32 65535, %conv93, !dbg !2431
  %conv95 = trunc i32 %sub94 to i16, !dbg !2432
  %86 = load i64, i64* %range, align 8, !dbg !2433
  %call96 = call i64 @ScaleQuantumToAny(i16 zeroext %conv95, i64 %86), !dbg !2434
  %conv97 = trunc i64 %call96 to i32, !dbg !2435
  store i32 %conv97, i32* %pixel10, align 4, !dbg !2436
  %87 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2437
  %88 = load i32, i32* %pixel10, align 4, !dbg !2438
  %conv98 = zext i32 %88 to i64, !dbg !2438
  %89 = load i8*, i8** %q.addr, align 8, !dbg !2439
  %call99 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %87, i64 %conv98, i8* %89), !dbg !2440
  store i8* %call99, i8** %q.addr, align 8, !dbg !2441
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2442
  %incdec.ptr100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !2442
  store %struct._PixelPacket* %incdec.ptr100, %struct._PixelPacket** %p.addr, align 8, !dbg !2442
  %91 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2443
  %pad101 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %91, i32 0, i32 6, !dbg !2444
  %92 = load i64, i64* %pad101, align 8, !dbg !2444
  %93 = load i8*, i8** %q.addr, align 8, !dbg !2445
  %add.ptr102 = getelementptr inbounds i8, i8* %93, i64 %92, !dbg !2445
  store i8* %add.ptr102, i8** %q.addr, align 8, !dbg !2445
  br label %for.inc103, !dbg !2446

for.inc103:                                       ; preds = %for.body76
  %94 = load i64, i64* %x, align 8, !dbg !2447
  %inc104 = add nsw i64 %94, 1, !dbg !2447
  store i64 %inc104, i64* %x, align 8, !dbg !2447
  br label %for.cond73, !dbg !2448, !llvm.loop !2449

for.end105:                                       ; preds = %for.cond73
  br label %sw.epilog336, !dbg !2451

if.end106:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !2452
  br label %for.cond107, !dbg !2454

for.cond107:                                      ; preds = %for.inc137, %if.end106
  %95 = load i64, i64* %x, align 8, !dbg !2455
  %96 = load i64, i64* %number_pixels.addr, align 8, !dbg !2457
  %cmp108 = icmp slt i64 %95, %96, !dbg !2458
  br i1 %cmp108, label %for.body110, label %for.end139, !dbg !2459

for.body110:                                      ; preds = %for.cond107
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2460
  %red111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !2460
  %98 = load i16, i16* %red111, align 2, !dbg !2460
  %99 = load i64, i64* %range, align 8, !dbg !2462
  %call112 = call i64 @ScaleQuantumToAny(i16 zeroext %98, i64 %99), !dbg !2463
  %conv113 = trunc i64 %call112 to i32, !dbg !2464
  store i32 %conv113, i32* %pixel10, align 4, !dbg !2465
  %100 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2466
  %101 = load i32, i32* %pixel10, align 4, !dbg !2467
  %conv114 = zext i32 %101 to i64, !dbg !2467
  %102 = load i8*, i8** %q.addr, align 8, !dbg !2468
  %call115 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %100, i64 %conv114, i8* %102), !dbg !2469
  store i8* %call115, i8** %q.addr, align 8, !dbg !2470
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2471
  %green116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 0, i32 1, !dbg !2471
  %104 = load i16, i16* %green116, align 2, !dbg !2471
  %105 = load i64, i64* %range, align 8, !dbg !2472
  %call117 = call i64 @ScaleQuantumToAny(i16 zeroext %104, i64 %105), !dbg !2473
  %conv118 = trunc i64 %call117 to i32, !dbg !2474
  store i32 %conv118, i32* %pixel10, align 4, !dbg !2475
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2476
  %107 = load i32, i32* %pixel10, align 4, !dbg !2477
  %conv119 = zext i32 %107 to i64, !dbg !2477
  %108 = load i8*, i8** %q.addr, align 8, !dbg !2478
  %call120 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %106, i64 %conv119, i8* %108), !dbg !2479
  store i8* %call120, i8** %q.addr, align 8, !dbg !2480
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2481
  %blue121 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 0, !dbg !2481
  %110 = load i16, i16* %blue121, align 2, !dbg !2481
  %111 = load i64, i64* %range, align 8, !dbg !2482
  %call122 = call i64 @ScaleQuantumToAny(i16 zeroext %110, i64 %111), !dbg !2483
  %conv123 = trunc i64 %call122 to i32, !dbg !2484
  store i32 %conv123, i32* %pixel10, align 4, !dbg !2485
  %112 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2486
  %113 = load i32, i32* %pixel10, align 4, !dbg !2487
  %conv124 = zext i32 %113 to i64, !dbg !2487
  %114 = load i8*, i8** %q.addr, align 8, !dbg !2488
  %call125 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %112, i64 %conv124, i8* %114), !dbg !2489
  store i8* %call125, i8** %q.addr, align 8, !dbg !2490
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2491
  %opacity126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 3, !dbg !2491
  %116 = load i16, i16* %opacity126, align 2, !dbg !2491
  %conv127 = zext i16 %116 to i32, !dbg !2491
  %sub128 = sub nsw i32 65535, %conv127, !dbg !2492
  %conv129 = trunc i32 %sub128 to i16, !dbg !2493
  %117 = load i64, i64* %range, align 8, !dbg !2494
  %call130 = call i64 @ScaleQuantumToAny(i16 zeroext %conv129, i64 %117), !dbg !2495
  %conv131 = trunc i64 %call130 to i32, !dbg !2496
  store i32 %conv131, i32* %pixel10, align 4, !dbg !2497
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2498
  %119 = load i32, i32* %pixel10, align 4, !dbg !2499
  %conv132 = zext i32 %119 to i64, !dbg !2499
  %120 = load i8*, i8** %q.addr, align 8, !dbg !2500
  %call133 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %118, i64 %conv132, i8* %120), !dbg !2501
  store i8* %call133, i8** %q.addr, align 8, !dbg !2502
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2503
  %incdec.ptr134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 1, !dbg !2503
  store %struct._PixelPacket* %incdec.ptr134, %struct._PixelPacket** %p.addr, align 8, !dbg !2503
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2504
  %pad135 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 6, !dbg !2505
  %123 = load i64, i64* %pad135, align 8, !dbg !2505
  %124 = load i8*, i8** %q.addr, align 8, !dbg !2506
  %add.ptr136 = getelementptr inbounds i8, i8* %124, i64 %123, !dbg !2506
  store i8* %add.ptr136, i8** %q.addr, align 8, !dbg !2506
  br label %for.inc137, !dbg !2507

for.inc137:                                       ; preds = %for.body110
  %125 = load i64, i64* %x, align 8, !dbg !2508
  %inc138 = add nsw i64 %125, 1, !dbg !2508
  store i64 %inc138, i64* %x, align 8, !dbg !2508
  br label %for.cond107, !dbg !2509, !llvm.loop !2510

for.end139:                                       ; preds = %for.cond107
  br label %sw.epilog336, !dbg !2512

sw.bb140:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel141, metadata !2513, metadata !DIExpression()), !dbg !2515
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2516
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %126, i32 0, i32 2, !dbg !2518
  %127 = load i32, i32* %format, align 8, !dbg !2518
  %cmp142 = icmp eq i32 %127, 1, !dbg !2519
  br i1 %cmp142, label %if.then144, label %if.end187, !dbg !2520

if.then144:                                       ; preds = %sw.bb140
  store i64 0, i64* %x, align 8, !dbg !2521
  br label %for.cond145, !dbg !2524

for.cond145:                                      ; preds = %for.inc184, %if.then144
  %128 = load i64, i64* %x, align 8, !dbg !2525
  %129 = load i64, i64* %number_pixels.addr, align 8, !dbg !2527
  %cmp146 = icmp slt i64 %128, %129, !dbg !2528
  br i1 %cmp146, label %for.body148, label %for.end186, !dbg !2529

for.body148:                                      ; preds = %for.cond145
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2530
  %blue149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 0, !dbg !2530
  %131 = load i16, i16* %blue149, align 2, !dbg !2530
  %conv150 = zext i16 %131 to i32, !dbg !2530
  %conv151 = sitofp i32 %conv150 to double, !dbg !2530
  %mul = fmul double 0x3EF0001000100010, %conv151, !dbg !2532
  %conv152 = fptrunc double %mul to float, !dbg !2533
  %call153 = call zeroext i16 @SinglePrecisionToHalf(float %conv152), !dbg !2534
  store i16 %call153, i16* %pixel141, align 2, !dbg !2535
  %132 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2536
  %endian154 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %132, i32 0, i32 13, !dbg !2537
  %133 = load i32, i32* %endian154, align 8, !dbg !2537
  %134 = load i16, i16* %pixel141, align 2, !dbg !2538
  %135 = load i8*, i8** %q.addr, align 8, !dbg !2539
  %call155 = call i8* @PopShortPixel(i32 %133, i16 zeroext %134, i8* %135), !dbg !2540
  store i8* %call155, i8** %q.addr, align 8, !dbg !2541
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2542
  %green156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !2542
  %137 = load i16, i16* %green156, align 2, !dbg !2542
  %conv157 = zext i16 %137 to i32, !dbg !2542
  %conv158 = sitofp i32 %conv157 to double, !dbg !2542
  %mul159 = fmul double 0x3EF0001000100010, %conv158, !dbg !2543
  %conv160 = fptrunc double %mul159 to float, !dbg !2544
  %call161 = call zeroext i16 @SinglePrecisionToHalf(float %conv160), !dbg !2545
  store i16 %call161, i16* %pixel141, align 2, !dbg !2546
  %138 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2547
  %endian162 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %138, i32 0, i32 13, !dbg !2548
  %139 = load i32, i32* %endian162, align 8, !dbg !2548
  %140 = load i16, i16* %pixel141, align 2, !dbg !2549
  %141 = load i8*, i8** %q.addr, align 8, !dbg !2550
  %call163 = call i8* @PopShortPixel(i32 %139, i16 zeroext %140, i8* %141), !dbg !2551
  store i8* %call163, i8** %q.addr, align 8, !dbg !2552
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2553
  %red164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 0, i32 2, !dbg !2553
  %143 = load i16, i16* %red164, align 2, !dbg !2553
  %conv165 = zext i16 %143 to i32, !dbg !2553
  %conv166 = sitofp i32 %conv165 to double, !dbg !2553
  %mul167 = fmul double 0x3EF0001000100010, %conv166, !dbg !2554
  %conv168 = fptrunc double %mul167 to float, !dbg !2555
  %call169 = call zeroext i16 @SinglePrecisionToHalf(float %conv168), !dbg !2556
  store i16 %call169, i16* %pixel141, align 2, !dbg !2557
  %144 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2558
  %endian170 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %144, i32 0, i32 13, !dbg !2559
  %145 = load i32, i32* %endian170, align 8, !dbg !2559
  %146 = load i16, i16* %pixel141, align 2, !dbg !2560
  %147 = load i8*, i8** %q.addr, align 8, !dbg !2561
  %call171 = call i8* @PopShortPixel(i32 %145, i16 zeroext %146, i8* %147), !dbg !2562
  store i8* %call171, i8** %q.addr, align 8, !dbg !2563
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2564
  %opacity172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 3, !dbg !2564
  %149 = load i16, i16* %opacity172, align 2, !dbg !2564
  %conv173 = zext i16 %149 to i32, !dbg !2564
  %sub174 = sub nsw i32 65535, %conv173, !dbg !2564
  %conv175 = sitofp i32 %sub174 to double, !dbg !2564
  %mul176 = fmul double 0x3EF0001000100010, %conv175, !dbg !2565
  %conv177 = fptrunc double %mul176 to float, !dbg !2566
  %call178 = call zeroext i16 @SinglePrecisionToHalf(float %conv177), !dbg !2567
  store i16 %call178, i16* %pixel141, align 2, !dbg !2568
  %150 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2569
  %endian179 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %150, i32 0, i32 13, !dbg !2570
  %151 = load i32, i32* %endian179, align 8, !dbg !2570
  %152 = load i16, i16* %pixel141, align 2, !dbg !2571
  %153 = load i8*, i8** %q.addr, align 8, !dbg !2572
  %call180 = call i8* @PopShortPixel(i32 %151, i16 zeroext %152, i8* %153), !dbg !2573
  store i8* %call180, i8** %q.addr, align 8, !dbg !2574
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2575
  %incdec.ptr181 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 1, !dbg !2575
  store %struct._PixelPacket* %incdec.ptr181, %struct._PixelPacket** %p.addr, align 8, !dbg !2575
  %155 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2576
  %pad182 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %155, i32 0, i32 6, !dbg !2577
  %156 = load i64, i64* %pad182, align 8, !dbg !2577
  %157 = load i8*, i8** %q.addr, align 8, !dbg !2578
  %add.ptr183 = getelementptr inbounds i8, i8* %157, i64 %156, !dbg !2578
  store i8* %add.ptr183, i8** %q.addr, align 8, !dbg !2578
  br label %for.inc184, !dbg !2579

for.inc184:                                       ; preds = %for.body148
  %158 = load i64, i64* %x, align 8, !dbg !2580
  %inc185 = add nsw i64 %158, 1, !dbg !2580
  store i64 %inc185, i64* %x, align 8, !dbg !2580
  br label %for.cond145, !dbg !2581, !llvm.loop !2582

for.end186:                                       ; preds = %for.cond145
  br label %sw.epilog336, !dbg !2584

if.end187:                                        ; preds = %sw.bb140
  store i64 0, i64* %x, align 8, !dbg !2585
  br label %for.cond188, !dbg !2587

for.cond188:                                      ; preds = %for.inc214, %if.end187
  %159 = load i64, i64* %x, align 8, !dbg !2588
  %160 = load i64, i64* %number_pixels.addr, align 8, !dbg !2590
  %cmp189 = icmp slt i64 %159, %160, !dbg !2591
  br i1 %cmp189, label %for.body191, label %for.end216, !dbg !2592

for.body191:                                      ; preds = %for.cond188
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2593
  %blue192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 0, !dbg !2593
  %162 = load i16, i16* %blue192, align 2, !dbg !2593
  %call193 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %162), !dbg !2595
  store i16 %call193, i16* %pixel141, align 2, !dbg !2596
  %163 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2597
  %endian194 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %163, i32 0, i32 13, !dbg !2598
  %164 = load i32, i32* %endian194, align 8, !dbg !2598
  %165 = load i16, i16* %pixel141, align 2, !dbg !2599
  %166 = load i8*, i8** %q.addr, align 8, !dbg !2600
  %call195 = call i8* @PopShortPixel(i32 %164, i16 zeroext %165, i8* %166), !dbg !2601
  store i8* %call195, i8** %q.addr, align 8, !dbg !2602
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2603
  %green196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 0, i32 1, !dbg !2603
  %168 = load i16, i16* %green196, align 2, !dbg !2603
  %call197 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %168), !dbg !2604
  store i16 %call197, i16* %pixel141, align 2, !dbg !2605
  %169 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2606
  %endian198 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %169, i32 0, i32 13, !dbg !2607
  %170 = load i32, i32* %endian198, align 8, !dbg !2607
  %171 = load i16, i16* %pixel141, align 2, !dbg !2608
  %172 = load i8*, i8** %q.addr, align 8, !dbg !2609
  %call199 = call i8* @PopShortPixel(i32 %170, i16 zeroext %171, i8* %172), !dbg !2610
  store i8* %call199, i8** %q.addr, align 8, !dbg !2611
  %173 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2612
  %red200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %173, i32 0, i32 2, !dbg !2612
  %174 = load i16, i16* %red200, align 2, !dbg !2612
  %call201 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %174), !dbg !2613
  store i16 %call201, i16* %pixel141, align 2, !dbg !2614
  %175 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2615
  %endian202 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %175, i32 0, i32 13, !dbg !2616
  %176 = load i32, i32* %endian202, align 8, !dbg !2616
  %177 = load i16, i16* %pixel141, align 2, !dbg !2617
  %178 = load i8*, i8** %q.addr, align 8, !dbg !2618
  %call203 = call i8* @PopShortPixel(i32 %176, i16 zeroext %177, i8* %178), !dbg !2619
  store i8* %call203, i8** %q.addr, align 8, !dbg !2620
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2621
  %opacity204 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 3, !dbg !2621
  %180 = load i16, i16* %opacity204, align 2, !dbg !2621
  %conv205 = zext i16 %180 to i32, !dbg !2621
  %sub206 = sub nsw i32 65535, %conv205, !dbg !2621
  %conv207 = trunc i32 %sub206 to i16, !dbg !2622
  %call208 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv207), !dbg !2623
  store i16 %call208, i16* %pixel141, align 2, !dbg !2624
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2625
  %endian209 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %181, i32 0, i32 13, !dbg !2626
  %182 = load i32, i32* %endian209, align 8, !dbg !2626
  %183 = load i16, i16* %pixel141, align 2, !dbg !2627
  %184 = load i8*, i8** %q.addr, align 8, !dbg !2628
  %call210 = call i8* @PopShortPixel(i32 %182, i16 zeroext %183, i8* %184), !dbg !2629
  store i8* %call210, i8** %q.addr, align 8, !dbg !2630
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2631
  %incdec.ptr211 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %185, i32 1, !dbg !2631
  store %struct._PixelPacket* %incdec.ptr211, %struct._PixelPacket** %p.addr, align 8, !dbg !2631
  %186 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2632
  %pad212 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %186, i32 0, i32 6, !dbg !2633
  %187 = load i64, i64* %pad212, align 8, !dbg !2633
  %188 = load i8*, i8** %q.addr, align 8, !dbg !2634
  %add.ptr213 = getelementptr inbounds i8, i8* %188, i64 %187, !dbg !2634
  store i8* %add.ptr213, i8** %q.addr, align 8, !dbg !2634
  br label %for.inc214, !dbg !2635

for.inc214:                                       ; preds = %for.body191
  %189 = load i64, i64* %x, align 8, !dbg !2636
  %inc215 = add nsw i64 %189, 1, !dbg !2636
  store i64 %inc215, i64* %x, align 8, !dbg !2636
  br label %for.cond188, !dbg !2637, !llvm.loop !2638

for.end216:                                       ; preds = %for.cond188
  br label %sw.epilog336, !dbg !2640

sw.bb217:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel218, metadata !2641, metadata !DIExpression()), !dbg !2643
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2644
  %format219 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %190, i32 0, i32 2, !dbg !2646
  %191 = load i32, i32* %format219, align 8, !dbg !2646
  %cmp220 = icmp eq i32 %191, 1, !dbg !2647
  br i1 %cmp220, label %if.then222, label %if.end248, !dbg !2648

if.then222:                                       ; preds = %sw.bb217
  store i64 0, i64* %x, align 8, !dbg !2649
  br label %for.cond223, !dbg !2652

for.cond223:                                      ; preds = %for.inc245, %if.then222
  %192 = load i64, i64* %x, align 8, !dbg !2653
  %193 = load i64, i64* %number_pixels.addr, align 8, !dbg !2655
  %cmp224 = icmp slt i64 %192, %193, !dbg !2656
  br i1 %cmp224, label %for.body226, label %for.end247, !dbg !2657

for.body226:                                      ; preds = %for.cond223
  call void @llvm.dbg.declare(metadata float* %pixel227, metadata !2658, metadata !DIExpression()), !dbg !2660
  %194 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2661
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2662
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i32 0, i32 2, !dbg !2662
  %196 = load i16, i16* %red228, align 2, !dbg !2662
  %conv229 = uitofp i16 %196 to float, !dbg !2663
  %197 = load i8*, i8** %q.addr, align 8, !dbg !2664
  %call230 = call i8* @PopFloatPixel(%struct._QuantumInfo* %194, float %conv229, i8* %197), !dbg !2665
  store i8* %call230, i8** %q.addr, align 8, !dbg !2666
  %198 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2667
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2668
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 1, !dbg !2668
  %200 = load i16, i16* %green231, align 2, !dbg !2668
  %conv232 = uitofp i16 %200 to float, !dbg !2669
  %201 = load i8*, i8** %q.addr, align 8, !dbg !2670
  %call233 = call i8* @PopFloatPixel(%struct._QuantumInfo* %198, float %conv232, i8* %201), !dbg !2671
  store i8* %call233, i8** %q.addr, align 8, !dbg !2672
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2673
  %203 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2674
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %203, i32 0, i32 0, !dbg !2674
  %204 = load i16, i16* %blue234, align 2, !dbg !2674
  %conv235 = uitofp i16 %204 to float, !dbg !2675
  %205 = load i8*, i8** %q.addr, align 8, !dbg !2676
  %call236 = call i8* @PopFloatPixel(%struct._QuantumInfo* %202, float %conv235, i8* %205), !dbg !2677
  store i8* %call236, i8** %q.addr, align 8, !dbg !2678
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2679
  %opacity237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i32 0, i32 3, !dbg !2679
  %207 = load i16, i16* %opacity237, align 2, !dbg !2679
  %conv238 = zext i16 %207 to i32, !dbg !2679
  %sub239 = sub nsw i32 65535, %conv238, !dbg !2679
  %conv240 = sitofp i32 %sub239 to float, !dbg !2680
  store float %conv240, float* %pixel227, align 4, !dbg !2681
  %208 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2682
  %209 = load float, float* %pixel227, align 4, !dbg !2683
  %210 = load i8*, i8** %q.addr, align 8, !dbg !2684
  %call241 = call i8* @PopFloatPixel(%struct._QuantumInfo* %208, float %209, i8* %210), !dbg !2685
  store i8* %call241, i8** %q.addr, align 8, !dbg !2686
  %211 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2687
  %incdec.ptr242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %211, i32 1, !dbg !2687
  store %struct._PixelPacket* %incdec.ptr242, %struct._PixelPacket** %p.addr, align 8, !dbg !2687
  %212 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2688
  %pad243 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %212, i32 0, i32 6, !dbg !2689
  %213 = load i64, i64* %pad243, align 8, !dbg !2689
  %214 = load i8*, i8** %q.addr, align 8, !dbg !2690
  %add.ptr244 = getelementptr inbounds i8, i8* %214, i64 %213, !dbg !2690
  store i8* %add.ptr244, i8** %q.addr, align 8, !dbg !2690
  br label %for.inc245, !dbg !2691

for.inc245:                                       ; preds = %for.body226
  %215 = load i64, i64* %x, align 8, !dbg !2692
  %inc246 = add nsw i64 %215, 1, !dbg !2692
  store i64 %inc246, i64* %x, align 8, !dbg !2692
  br label %for.cond223, !dbg !2693, !llvm.loop !2694

for.end247:                                       ; preds = %for.cond223
  br label %sw.epilog336, !dbg !2696

if.end248:                                        ; preds = %sw.bb217
  store i64 0, i64* %x, align 8, !dbg !2697
  br label %for.cond249, !dbg !2699

for.cond249:                                      ; preds = %for.inc275, %if.end248
  %216 = load i64, i64* %x, align 8, !dbg !2700
  %217 = load i64, i64* %number_pixels.addr, align 8, !dbg !2702
  %cmp250 = icmp slt i64 %216, %217, !dbg !2703
  br i1 %cmp250, label %for.body252, label %for.end277, !dbg !2704

for.body252:                                      ; preds = %for.cond249
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2705
  %blue253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 0, i32 0, !dbg !2705
  %219 = load i16, i16* %blue253, align 2, !dbg !2705
  %call254 = call i32 @ScaleQuantumToLong(i16 zeroext %219), !dbg !2707
  store i32 %call254, i32* %pixel218, align 4, !dbg !2708
  %220 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2709
  %endian255 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %220, i32 0, i32 13, !dbg !2710
  %221 = load i32, i32* %endian255, align 8, !dbg !2710
  %222 = load i32, i32* %pixel218, align 4, !dbg !2711
  %223 = load i8*, i8** %q.addr, align 8, !dbg !2712
  %call256 = call i8* @PopLongPixel(i32 %221, i32 %222, i8* %223), !dbg !2713
  store i8* %call256, i8** %q.addr, align 8, !dbg !2714
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2715
  %green257 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i32 0, i32 1, !dbg !2715
  %225 = load i16, i16* %green257, align 2, !dbg !2715
  %call258 = call i32 @ScaleQuantumToLong(i16 zeroext %225), !dbg !2716
  store i32 %call258, i32* %pixel218, align 4, !dbg !2717
  %226 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2718
  %endian259 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %226, i32 0, i32 13, !dbg !2719
  %227 = load i32, i32* %endian259, align 8, !dbg !2719
  %228 = load i32, i32* %pixel218, align 4, !dbg !2720
  %229 = load i8*, i8** %q.addr, align 8, !dbg !2721
  %call260 = call i8* @PopLongPixel(i32 %227, i32 %228, i8* %229), !dbg !2722
  store i8* %call260, i8** %q.addr, align 8, !dbg !2723
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2724
  %red261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %230, i32 0, i32 2, !dbg !2724
  %231 = load i16, i16* %red261, align 2, !dbg !2724
  %call262 = call i32 @ScaleQuantumToLong(i16 zeroext %231), !dbg !2725
  store i32 %call262, i32* %pixel218, align 4, !dbg !2726
  %232 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2727
  %endian263 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %232, i32 0, i32 13, !dbg !2728
  %233 = load i32, i32* %endian263, align 8, !dbg !2728
  %234 = load i32, i32* %pixel218, align 4, !dbg !2729
  %235 = load i8*, i8** %q.addr, align 8, !dbg !2730
  %call264 = call i8* @PopLongPixel(i32 %233, i32 %234, i8* %235), !dbg !2731
  store i8* %call264, i8** %q.addr, align 8, !dbg !2732
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2733
  %opacity265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 3, !dbg !2733
  %237 = load i16, i16* %opacity265, align 2, !dbg !2733
  %conv266 = zext i16 %237 to i32, !dbg !2733
  %sub267 = sub nsw i32 65535, %conv266, !dbg !2733
  %conv268 = trunc i32 %sub267 to i16, !dbg !2734
  %call269 = call i32 @ScaleQuantumToLong(i16 zeroext %conv268), !dbg !2735
  store i32 %call269, i32* %pixel218, align 4, !dbg !2736
  %238 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2737
  %endian270 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %238, i32 0, i32 13, !dbg !2738
  %239 = load i32, i32* %endian270, align 8, !dbg !2738
  %240 = load i32, i32* %pixel218, align 4, !dbg !2739
  %241 = load i8*, i8** %q.addr, align 8, !dbg !2740
  %call271 = call i8* @PopLongPixel(i32 %239, i32 %240, i8* %241), !dbg !2741
  store i8* %call271, i8** %q.addr, align 8, !dbg !2742
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2743
  %incdec.ptr272 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 1, !dbg !2743
  store %struct._PixelPacket* %incdec.ptr272, %struct._PixelPacket** %p.addr, align 8, !dbg !2743
  %243 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2744
  %pad273 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %243, i32 0, i32 6, !dbg !2745
  %244 = load i64, i64* %pad273, align 8, !dbg !2745
  %245 = load i8*, i8** %q.addr, align 8, !dbg !2746
  %add.ptr274 = getelementptr inbounds i8, i8* %245, i64 %244, !dbg !2746
  store i8* %add.ptr274, i8** %q.addr, align 8, !dbg !2746
  br label %for.inc275, !dbg !2747

for.inc275:                                       ; preds = %for.body252
  %246 = load i64, i64* %x, align 8, !dbg !2748
  %inc276 = add nsw i64 %246, 1, !dbg !2748
  store i64 %inc276, i64* %x, align 8, !dbg !2748
  br label %for.cond249, !dbg !2749, !llvm.loop !2750

for.end277:                                       ; preds = %for.cond249
  br label %sw.epilog336, !dbg !2752

sw.bb278:                                         ; preds = %entry
  %247 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2753
  %format279 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %247, i32 0, i32 2, !dbg !2756
  %248 = load i32, i32* %format279, align 8, !dbg !2756
  %cmp280 = icmp eq i32 %248, 1, !dbg !2757
  br i1 %cmp280, label %if.then282, label %if.end308, !dbg !2758

if.then282:                                       ; preds = %sw.bb278
  call void @llvm.dbg.declare(metadata double* %pixel283, metadata !2759, metadata !DIExpression()), !dbg !2761
  store i64 0, i64* %x, align 8, !dbg !2762
  br label %for.cond284, !dbg !2764

for.cond284:                                      ; preds = %for.inc305, %if.then282
  %249 = load i64, i64* %x, align 8, !dbg !2765
  %250 = load i64, i64* %number_pixels.addr, align 8, !dbg !2767
  %cmp285 = icmp slt i64 %249, %250, !dbg !2768
  br i1 %cmp285, label %for.body287, label %for.end307, !dbg !2769

for.body287:                                      ; preds = %for.cond284
  %251 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2770
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2772
  %red288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !2772
  %253 = load i16, i16* %red288, align 2, !dbg !2772
  %conv289 = uitofp i16 %253 to double, !dbg !2773
  %254 = load i8*, i8** %q.addr, align 8, !dbg !2774
  %call290 = call i8* @PopDoublePixel(%struct._QuantumInfo* %251, double %conv289, i8* %254), !dbg !2775
  store i8* %call290, i8** %q.addr, align 8, !dbg !2776
  %255 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2777
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2778
  %green291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 1, !dbg !2778
  %257 = load i16, i16* %green291, align 2, !dbg !2778
  %conv292 = uitofp i16 %257 to double, !dbg !2779
  %258 = load i8*, i8** %q.addr, align 8, !dbg !2780
  %call293 = call i8* @PopDoublePixel(%struct._QuantumInfo* %255, double %conv292, i8* %258), !dbg !2781
  store i8* %call293, i8** %q.addr, align 8, !dbg !2782
  %259 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2783
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2784
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 0, i32 0, !dbg !2784
  %261 = load i16, i16* %blue294, align 2, !dbg !2784
  %conv295 = uitofp i16 %261 to double, !dbg !2785
  %262 = load i8*, i8** %q.addr, align 8, !dbg !2786
  %call296 = call i8* @PopDoublePixel(%struct._QuantumInfo* %259, double %conv295, i8* %262), !dbg !2787
  store i8* %call296, i8** %q.addr, align 8, !dbg !2788
  %263 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2789
  %opacity297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %263, i32 0, i32 3, !dbg !2789
  %264 = load i16, i16* %opacity297, align 2, !dbg !2789
  %conv298 = zext i16 %264 to i32, !dbg !2789
  %sub299 = sub nsw i32 65535, %conv298, !dbg !2789
  %conv300 = sitofp i32 %sub299 to double, !dbg !2790
  store double %conv300, double* %pixel283, align 8, !dbg !2791
  %265 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2792
  %266 = load double, double* %pixel283, align 8, !dbg !2793
  %267 = load i8*, i8** %q.addr, align 8, !dbg !2794
  %call301 = call i8* @PopDoublePixel(%struct._QuantumInfo* %265, double %266, i8* %267), !dbg !2795
  store i8* %call301, i8** %q.addr, align 8, !dbg !2796
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2797
  %incdec.ptr302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 1, !dbg !2797
  store %struct._PixelPacket* %incdec.ptr302, %struct._PixelPacket** %p.addr, align 8, !dbg !2797
  %269 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2798
  %pad303 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %269, i32 0, i32 6, !dbg !2799
  %270 = load i64, i64* %pad303, align 8, !dbg !2799
  %271 = load i8*, i8** %q.addr, align 8, !dbg !2800
  %add.ptr304 = getelementptr inbounds i8, i8* %271, i64 %270, !dbg !2800
  store i8* %add.ptr304, i8** %q.addr, align 8, !dbg !2800
  br label %for.inc305, !dbg !2801

for.inc305:                                       ; preds = %for.body287
  %272 = load i64, i64* %x, align 8, !dbg !2802
  %inc306 = add nsw i64 %272, 1, !dbg !2802
  store i64 %inc306, i64* %x, align 8, !dbg !2802
  br label %for.cond284, !dbg !2803, !llvm.loop !2804

for.end307:                                       ; preds = %for.cond284
  br label %sw.epilog336, !dbg !2806

if.end308:                                        ; preds = %sw.bb278
  br label %sw.default, !dbg !2807

sw.default:                                       ; preds = %entry, %if.end308
  %273 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2808
  %depth309 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %273, i32 0, i32 0, !dbg !2810
  %274 = load i64, i64* %depth309, align 8, !dbg !2810
  %call310 = call i64 @GetQuantumRange(i64 %274), !dbg !2811
  store i64 %call310, i64* %range, align 8, !dbg !2812
  store i64 0, i64* %x, align 8, !dbg !2813
  br label %for.cond311, !dbg !2815

for.cond311:                                      ; preds = %for.inc333, %sw.default
  %275 = load i64, i64* %x, align 8, !dbg !2816
  %276 = load i64, i64* %number_pixels.addr, align 8, !dbg !2818
  %cmp312 = icmp slt i64 %275, %276, !dbg !2819
  br i1 %cmp312, label %for.body314, label %for.end335, !dbg !2820

for.body314:                                      ; preds = %for.cond311
  %277 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2821
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2823
  %blue315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 0, i32 0, !dbg !2823
  %279 = load i16, i16* %blue315, align 2, !dbg !2823
  %280 = load i64, i64* %range, align 8, !dbg !2824
  %call316 = call i64 @ScaleQuantumToAny(i16 zeroext %279, i64 %280), !dbg !2825
  %281 = load i8*, i8** %q.addr, align 8, !dbg !2826
  %call317 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %277, i64 %call316, i8* %281), !dbg !2827
  store i8* %call317, i8** %q.addr, align 8, !dbg !2828
  %282 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2829
  %283 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2830
  %green318 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %283, i32 0, i32 1, !dbg !2830
  %284 = load i16, i16* %green318, align 2, !dbg !2830
  %285 = load i64, i64* %range, align 8, !dbg !2831
  %call319 = call i64 @ScaleQuantumToAny(i16 zeroext %284, i64 %285), !dbg !2832
  %286 = load i8*, i8** %q.addr, align 8, !dbg !2833
  %call320 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %282, i64 %call319, i8* %286), !dbg !2834
  store i8* %call320, i8** %q.addr, align 8, !dbg !2835
  %287 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2836
  %288 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2837
  %red321 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %288, i32 0, i32 2, !dbg !2837
  %289 = load i16, i16* %red321, align 2, !dbg !2837
  %290 = load i64, i64* %range, align 8, !dbg !2838
  %call322 = call i64 @ScaleQuantumToAny(i16 zeroext %289, i64 %290), !dbg !2839
  %291 = load i8*, i8** %q.addr, align 8, !dbg !2840
  %call323 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %287, i64 %call322, i8* %291), !dbg !2841
  store i8* %call323, i8** %q.addr, align 8, !dbg !2842
  %292 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2843
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2844
  %opacity324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 0, i32 3, !dbg !2844
  %294 = load i16, i16* %opacity324, align 2, !dbg !2844
  %conv325 = zext i16 %294 to i32, !dbg !2844
  %sub326 = sub nsw i32 65535, %conv325, !dbg !2844
  %conv327 = trunc i32 %sub326 to i16, !dbg !2845
  %295 = load i64, i64* %range, align 8, !dbg !2846
  %call328 = call i64 @ScaleQuantumToAny(i16 zeroext %conv327, i64 %295), !dbg !2847
  %296 = load i8*, i8** %q.addr, align 8, !dbg !2848
  %call329 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %292, i64 %call328, i8* %296), !dbg !2849
  store i8* %call329, i8** %q.addr, align 8, !dbg !2850
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2851
  %incdec.ptr330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 1, !dbg !2851
  store %struct._PixelPacket* %incdec.ptr330, %struct._PixelPacket** %p.addr, align 8, !dbg !2851
  %298 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2852
  %pad331 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %298, i32 0, i32 6, !dbg !2853
  %299 = load i64, i64* %pad331, align 8, !dbg !2853
  %300 = load i8*, i8** %q.addr, align 8, !dbg !2854
  %add.ptr332 = getelementptr inbounds i8, i8* %300, i64 %299, !dbg !2854
  store i8* %add.ptr332, i8** %q.addr, align 8, !dbg !2854
  br label %for.inc333, !dbg !2855

for.inc333:                                       ; preds = %for.body314
  %301 = load i64, i64* %x, align 8, !dbg !2856
  %inc334 = add nsw i64 %301, 1, !dbg !2856
  store i64 %inc334, i64* %x, align 8, !dbg !2856
  br label %for.cond311, !dbg !2857, !llvm.loop !2858

for.end335:                                       ; preds = %for.cond311
  br label %sw.epilog336, !dbg !2860

sw.epilog336:                                     ; preds = %for.end335, %for.end307, %for.end277, %for.end247, %for.end216, %for.end186, %for.end139, %for.end105, %for.end68, %for.end
  ret void, !dbg !2861
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportBlackQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i16* noalias %indexes, i8* noalias %q, %struct._ExceptionInfo* %exception) #0 !dbg !2862 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %q.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel9 = alloca i16, align 2
  %pixel61 = alloca i32, align 4
  %range = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2865, metadata !DIExpression()), !dbg !2866
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !2867, metadata !DIExpression()), !dbg !2868
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !2869, metadata !DIExpression()), !dbg !2870
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !2871, metadata !DIExpression()), !dbg !2872
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !2873, metadata !DIExpression()), !dbg !2874
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !2875, metadata !DIExpression()), !dbg !2876
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2877, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2879, metadata !DIExpression()), !dbg !2880
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2881
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !2883
  %1 = load i32, i32* %colorspace, align 4, !dbg !2883
  %cmp = icmp ne i32 %1, 12, !dbg !2884
  br i1 %cmp, label %if.then, label %if.end, !dbg !2885

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2886
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2888
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2889
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2888
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 888, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !2890
  br label %sw.epilog, !dbg !2891

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2892
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !2893
  %5 = load i64, i64* %depth, align 8, !dbg !2893
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb8
    i64 32, label %sw.bb60
    i64 64, label %sw.bb111
  ], !dbg !2894

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !2895, metadata !DIExpression()), !dbg !2898
  store i64 0, i64* %x, align 8, !dbg !2899
  br label %for.cond, !dbg !2901

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !2902
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !2904
  %cmp1 = icmp slt i64 %6, %7, !dbg !2905
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2906

for.body:                                         ; preds = %for.cond
  %8 = load i16*, i16** %indexes.addr, align 8, !dbg !2907
  %9 = load i64, i64* %x, align 8, !dbg !2907
  %add.ptr = getelementptr inbounds i16, i16* %8, i64 %9, !dbg !2907
  %cmp2 = icmp eq i16* %add.ptr, null, !dbg !2907
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2907

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !2907

cond.false:                                       ; preds = %for.body
  %10 = load i16*, i16** %indexes.addr, align 8, !dbg !2907
  %11 = load i64, i64* %x, align 8, !dbg !2907
  %add.ptr3 = getelementptr inbounds i16, i16* %10, i64 %11, !dbg !2907
  %12 = load i16, i16* %add.ptr3, align 2, !dbg !2907
  %conv = zext i16 %12 to i32, !dbg !2907
  br label %cond.end, !dbg !2907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !2907
  %conv4 = trunc i32 %cond to i16, !dbg !2907
  %call5 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv4), !dbg !2909
  store i8 %call5, i8* %pixel, align 1, !dbg !2910
  %13 = load i8, i8* %pixel, align 1, !dbg !2911
  %14 = load i8*, i8** %q.addr, align 8, !dbg !2912
  %call6 = call i8* @PopCharPixel(i8 zeroext %13, i8* %14), !dbg !2913
  store i8* %call6, i8** %q.addr, align 8, !dbg !2914
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2915
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 1, !dbg !2915
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !2915
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2916
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 6, !dbg !2917
  %17 = load i64, i64* %pad, align 8, !dbg !2917
  %18 = load i8*, i8** %q.addr, align 8, !dbg !2918
  %add.ptr7 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !2918
  store i8* %add.ptr7, i8** %q.addr, align 8, !dbg !2918
  br label %for.inc, !dbg !2919

for.inc:                                          ; preds = %cond.end
  %19 = load i64, i64* %x, align 8, !dbg !2920
  %inc = add nsw i64 %19, 1, !dbg !2920
  store i64 %inc, i64* %x, align 8, !dbg !2920
  br label %for.cond, !dbg !2921, !llvm.loop !2922

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !2924

sw.bb8:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel9, metadata !2925, metadata !DIExpression()), !dbg !2927
  %20 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2928
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %20, i32 0, i32 2, !dbg !2930
  %21 = load i32, i32* %format, align 8, !dbg !2930
  %cmp10 = icmp eq i32 %21, 1, !dbg !2931
  br i1 %cmp10, label %if.then12, label %if.end36, !dbg !2932

if.then12:                                        ; preds = %sw.bb8
  store i64 0, i64* %x, align 8, !dbg !2933
  br label %for.cond13, !dbg !2936

for.cond13:                                       ; preds = %for.inc33, %if.then12
  %22 = load i64, i64* %x, align 8, !dbg !2937
  %23 = load i64, i64* %number_pixels.addr, align 8, !dbg !2939
  %cmp14 = icmp slt i64 %22, %23, !dbg !2940
  br i1 %cmp14, label %for.body16, label %for.end35, !dbg !2941

for.body16:                                       ; preds = %for.cond13
  %24 = load i16*, i16** %indexes.addr, align 8, !dbg !2942
  %25 = load i64, i64* %x, align 8, !dbg !2942
  %add.ptr17 = getelementptr inbounds i16, i16* %24, i64 %25, !dbg !2942
  %cmp18 = icmp eq i16* %add.ptr17, null, !dbg !2942
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !2942

cond.true20:                                      ; preds = %for.body16
  br label %cond.end24, !dbg !2942

cond.false21:                                     ; preds = %for.body16
  %26 = load i16*, i16** %indexes.addr, align 8, !dbg !2942
  %27 = load i64, i64* %x, align 8, !dbg !2942
  %add.ptr22 = getelementptr inbounds i16, i16* %26, i64 %27, !dbg !2942
  %28 = load i16, i16* %add.ptr22, align 2, !dbg !2942
  %conv23 = zext i16 %28 to i32, !dbg !2942
  br label %cond.end24, !dbg !2942

cond.end24:                                       ; preds = %cond.false21, %cond.true20
  %cond25 = phi i32 [ 0, %cond.true20 ], [ %conv23, %cond.false21 ], !dbg !2942
  %conv26 = sitofp i32 %cond25 to double, !dbg !2942
  %mul = fmul double 0x3EF0001000100010, %conv26, !dbg !2944
  %conv27 = fptrunc double %mul to float, !dbg !2945
  %call28 = call zeroext i16 @SinglePrecisionToHalf(float %conv27), !dbg !2946
  store i16 %call28, i16* %pixel9, align 2, !dbg !2947
  %29 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2948
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %29, i32 0, i32 13, !dbg !2949
  %30 = load i32, i32* %endian, align 8, !dbg !2949
  %31 = load i16, i16* %pixel9, align 2, !dbg !2950
  %32 = load i8*, i8** %q.addr, align 8, !dbg !2951
  %call29 = call i8* @PopShortPixel(i32 %30, i16 zeroext %31, i8* %32), !dbg !2952
  store i8* %call29, i8** %q.addr, align 8, !dbg !2953
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2954
  %incdec.ptr30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 1, !dbg !2954
  store %struct._PixelPacket* %incdec.ptr30, %struct._PixelPacket** %p.addr, align 8, !dbg !2954
  %34 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2955
  %pad31 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %34, i32 0, i32 6, !dbg !2956
  %35 = load i64, i64* %pad31, align 8, !dbg !2956
  %36 = load i8*, i8** %q.addr, align 8, !dbg !2957
  %add.ptr32 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !2957
  store i8* %add.ptr32, i8** %q.addr, align 8, !dbg !2957
  br label %for.inc33, !dbg !2958

for.inc33:                                        ; preds = %cond.end24
  %37 = load i64, i64* %x, align 8, !dbg !2959
  %inc34 = add nsw i64 %37, 1, !dbg !2959
  store i64 %inc34, i64* %x, align 8, !dbg !2959
  br label %for.cond13, !dbg !2960, !llvm.loop !2961

for.end35:                                        ; preds = %for.cond13
  br label %sw.epilog, !dbg !2963

if.end36:                                         ; preds = %sw.bb8
  store i64 0, i64* %x, align 8, !dbg !2964
  br label %for.cond37, !dbg !2966

for.cond37:                                       ; preds = %for.inc57, %if.end36
  %38 = load i64, i64* %x, align 8, !dbg !2967
  %39 = load i64, i64* %number_pixels.addr, align 8, !dbg !2969
  %cmp38 = icmp slt i64 %38, %39, !dbg !2970
  br i1 %cmp38, label %for.body40, label %for.end59, !dbg !2971

for.body40:                                       ; preds = %for.cond37
  %40 = load i16*, i16** %indexes.addr, align 8, !dbg !2972
  %41 = load i64, i64* %x, align 8, !dbg !2972
  %add.ptr41 = getelementptr inbounds i16, i16* %40, i64 %41, !dbg !2972
  %cmp42 = icmp eq i16* %add.ptr41, null, !dbg !2972
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !2972

cond.true44:                                      ; preds = %for.body40
  br label %cond.end48, !dbg !2972

cond.false45:                                     ; preds = %for.body40
  %42 = load i16*, i16** %indexes.addr, align 8, !dbg !2972
  %43 = load i64, i64* %x, align 8, !dbg !2972
  %add.ptr46 = getelementptr inbounds i16, i16* %42, i64 %43, !dbg !2972
  %44 = load i16, i16* %add.ptr46, align 2, !dbg !2972
  %conv47 = zext i16 %44 to i32, !dbg !2972
  br label %cond.end48, !dbg !2972

cond.end48:                                       ; preds = %cond.false45, %cond.true44
  %cond49 = phi i32 [ 0, %cond.true44 ], [ %conv47, %cond.false45 ], !dbg !2972
  %conv50 = trunc i32 %cond49 to i16, !dbg !2972
  %call51 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv50), !dbg !2974
  store i16 %call51, i16* %pixel9, align 2, !dbg !2975
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2976
  %endian52 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %45, i32 0, i32 13, !dbg !2977
  %46 = load i32, i32* %endian52, align 8, !dbg !2977
  %47 = load i16, i16* %pixel9, align 2, !dbg !2978
  %48 = load i8*, i8** %q.addr, align 8, !dbg !2979
  %call53 = call i8* @PopShortPixel(i32 %46, i16 zeroext %47, i8* %48), !dbg !2980
  store i8* %call53, i8** %q.addr, align 8, !dbg !2981
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2982
  %incdec.ptr54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !2982
  store %struct._PixelPacket* %incdec.ptr54, %struct._PixelPacket** %p.addr, align 8, !dbg !2982
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2983
  %pad55 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 6, !dbg !2984
  %51 = load i64, i64* %pad55, align 8, !dbg !2984
  %52 = load i8*, i8** %q.addr, align 8, !dbg !2985
  %add.ptr56 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !2985
  store i8* %add.ptr56, i8** %q.addr, align 8, !dbg !2985
  br label %for.inc57, !dbg !2986

for.inc57:                                        ; preds = %cond.end48
  %53 = load i64, i64* %x, align 8, !dbg !2987
  %inc58 = add nsw i64 %53, 1, !dbg !2987
  store i64 %inc58, i64* %x, align 8, !dbg !2987
  br label %for.cond37, !dbg !2988, !llvm.loop !2989

for.end59:                                        ; preds = %for.cond37
  br label %sw.epilog, !dbg !2991

sw.bb60:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel61, metadata !2992, metadata !DIExpression()), !dbg !2994
  %54 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2995
  %format62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %54, i32 0, i32 2, !dbg !2997
  %55 = load i32, i32* %format62, align 8, !dbg !2997
  %cmp63 = icmp eq i32 %55, 1, !dbg !2998
  br i1 %cmp63, label %if.then65, label %if.end87, !dbg !2999

if.then65:                                        ; preds = %sw.bb60
  store i64 0, i64* %x, align 8, !dbg !3000
  br label %for.cond66, !dbg !3003

for.cond66:                                       ; preds = %for.inc84, %if.then65
  %56 = load i64, i64* %x, align 8, !dbg !3004
  %57 = load i64, i64* %number_pixels.addr, align 8, !dbg !3006
  %cmp67 = icmp slt i64 %56, %57, !dbg !3007
  br i1 %cmp67, label %for.body69, label %for.end86, !dbg !3008

for.body69:                                       ; preds = %for.cond66
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3009
  %59 = load i16*, i16** %indexes.addr, align 8, !dbg !3011
  %60 = load i64, i64* %x, align 8, !dbg !3011
  %add.ptr70 = getelementptr inbounds i16, i16* %59, i64 %60, !dbg !3011
  %cmp71 = icmp eq i16* %add.ptr70, null, !dbg !3011
  br i1 %cmp71, label %cond.true73, label %cond.false74, !dbg !3011

cond.true73:                                      ; preds = %for.body69
  br label %cond.end77, !dbg !3011

cond.false74:                                     ; preds = %for.body69
  %61 = load i16*, i16** %indexes.addr, align 8, !dbg !3011
  %62 = load i64, i64* %x, align 8, !dbg !3011
  %add.ptr75 = getelementptr inbounds i16, i16* %61, i64 %62, !dbg !3011
  %63 = load i16, i16* %add.ptr75, align 2, !dbg !3011
  %conv76 = zext i16 %63 to i32, !dbg !3011
  br label %cond.end77, !dbg !3011

cond.end77:                                       ; preds = %cond.false74, %cond.true73
  %cond78 = phi i32 [ 0, %cond.true73 ], [ %conv76, %cond.false74 ], !dbg !3011
  %conv79 = sitofp i32 %cond78 to float, !dbg !3012
  %64 = load i8*, i8** %q.addr, align 8, !dbg !3013
  %call80 = call i8* @PopFloatPixel(%struct._QuantumInfo* %58, float %conv79, i8* %64), !dbg !3014
  store i8* %call80, i8** %q.addr, align 8, !dbg !3015
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3016
  %incdec.ptr81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 1, !dbg !3016
  store %struct._PixelPacket* %incdec.ptr81, %struct._PixelPacket** %p.addr, align 8, !dbg !3016
  %66 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3017
  %pad82 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %66, i32 0, i32 6, !dbg !3018
  %67 = load i64, i64* %pad82, align 8, !dbg !3018
  %68 = load i8*, i8** %q.addr, align 8, !dbg !3019
  %add.ptr83 = getelementptr inbounds i8, i8* %68, i64 %67, !dbg !3019
  store i8* %add.ptr83, i8** %q.addr, align 8, !dbg !3019
  br label %for.inc84, !dbg !3020

for.inc84:                                        ; preds = %cond.end77
  %69 = load i64, i64* %x, align 8, !dbg !3021
  %inc85 = add nsw i64 %69, 1, !dbg !3021
  store i64 %inc85, i64* %x, align 8, !dbg !3021
  br label %for.cond66, !dbg !3022, !llvm.loop !3023

for.end86:                                        ; preds = %for.cond66
  br label %sw.epilog, !dbg !3025

if.end87:                                         ; preds = %sw.bb60
  store i64 0, i64* %x, align 8, !dbg !3026
  br label %for.cond88, !dbg !3028

for.cond88:                                       ; preds = %for.inc108, %if.end87
  %70 = load i64, i64* %x, align 8, !dbg !3029
  %71 = load i64, i64* %number_pixels.addr, align 8, !dbg !3031
  %cmp89 = icmp slt i64 %70, %71, !dbg !3032
  br i1 %cmp89, label %for.body91, label %for.end110, !dbg !3033

for.body91:                                       ; preds = %for.cond88
  %72 = load i16*, i16** %indexes.addr, align 8, !dbg !3034
  %73 = load i64, i64* %x, align 8, !dbg !3034
  %add.ptr92 = getelementptr inbounds i16, i16* %72, i64 %73, !dbg !3034
  %cmp93 = icmp eq i16* %add.ptr92, null, !dbg !3034
  br i1 %cmp93, label %cond.true95, label %cond.false96, !dbg !3034

cond.true95:                                      ; preds = %for.body91
  br label %cond.end99, !dbg !3034

cond.false96:                                     ; preds = %for.body91
  %74 = load i16*, i16** %indexes.addr, align 8, !dbg !3034
  %75 = load i64, i64* %x, align 8, !dbg !3034
  %add.ptr97 = getelementptr inbounds i16, i16* %74, i64 %75, !dbg !3034
  %76 = load i16, i16* %add.ptr97, align 2, !dbg !3034
  %conv98 = zext i16 %76 to i32, !dbg !3034
  br label %cond.end99, !dbg !3034

cond.end99:                                       ; preds = %cond.false96, %cond.true95
  %cond100 = phi i32 [ 0, %cond.true95 ], [ %conv98, %cond.false96 ], !dbg !3034
  %conv101 = trunc i32 %cond100 to i16, !dbg !3034
  %call102 = call i32 @ScaleQuantumToLong(i16 zeroext %conv101), !dbg !3036
  store i32 %call102, i32* %pixel61, align 4, !dbg !3037
  %77 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3038
  %endian103 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %77, i32 0, i32 13, !dbg !3039
  %78 = load i32, i32* %endian103, align 8, !dbg !3039
  %79 = load i32, i32* %pixel61, align 4, !dbg !3040
  %80 = load i8*, i8** %q.addr, align 8, !dbg !3041
  %call104 = call i8* @PopLongPixel(i32 %78, i32 %79, i8* %80), !dbg !3042
  store i8* %call104, i8** %q.addr, align 8, !dbg !3043
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3044
  %incdec.ptr105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 1, !dbg !3044
  store %struct._PixelPacket* %incdec.ptr105, %struct._PixelPacket** %p.addr, align 8, !dbg !3044
  %82 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3045
  %pad106 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %82, i32 0, i32 6, !dbg !3046
  %83 = load i64, i64* %pad106, align 8, !dbg !3046
  %84 = load i8*, i8** %q.addr, align 8, !dbg !3047
  %add.ptr107 = getelementptr inbounds i8, i8* %84, i64 %83, !dbg !3047
  store i8* %add.ptr107, i8** %q.addr, align 8, !dbg !3047
  br label %for.inc108, !dbg !3048

for.inc108:                                       ; preds = %cond.end99
  %85 = load i64, i64* %x, align 8, !dbg !3049
  %inc109 = add nsw i64 %85, 1, !dbg !3049
  store i64 %inc109, i64* %x, align 8, !dbg !3049
  br label %for.cond88, !dbg !3050, !llvm.loop !3051

for.end110:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !3053

sw.bb111:                                         ; preds = %if.end
  %86 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3054
  %format112 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %86, i32 0, i32 2, !dbg !3057
  %87 = load i32, i32* %format112, align 8, !dbg !3057
  %cmp113 = icmp eq i32 %87, 1, !dbg !3058
  br i1 %cmp113, label %if.then115, label %if.end137, !dbg !3059

if.then115:                                       ; preds = %sw.bb111
  store i64 0, i64* %x, align 8, !dbg !3060
  br label %for.cond116, !dbg !3063

for.cond116:                                      ; preds = %for.inc134, %if.then115
  %88 = load i64, i64* %x, align 8, !dbg !3064
  %89 = load i64, i64* %number_pixels.addr, align 8, !dbg !3066
  %cmp117 = icmp slt i64 %88, %89, !dbg !3067
  br i1 %cmp117, label %for.body119, label %for.end136, !dbg !3068

for.body119:                                      ; preds = %for.cond116
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3069
  %91 = load i16*, i16** %indexes.addr, align 8, !dbg !3071
  %92 = load i64, i64* %x, align 8, !dbg !3071
  %add.ptr120 = getelementptr inbounds i16, i16* %91, i64 %92, !dbg !3071
  %cmp121 = icmp eq i16* %add.ptr120, null, !dbg !3071
  br i1 %cmp121, label %cond.true123, label %cond.false124, !dbg !3071

cond.true123:                                     ; preds = %for.body119
  br label %cond.end127, !dbg !3071

cond.false124:                                    ; preds = %for.body119
  %93 = load i16*, i16** %indexes.addr, align 8, !dbg !3071
  %94 = load i64, i64* %x, align 8, !dbg !3071
  %add.ptr125 = getelementptr inbounds i16, i16* %93, i64 %94, !dbg !3071
  %95 = load i16, i16* %add.ptr125, align 2, !dbg !3071
  %conv126 = zext i16 %95 to i32, !dbg !3071
  br label %cond.end127, !dbg !3071

cond.end127:                                      ; preds = %cond.false124, %cond.true123
  %cond128 = phi i32 [ 0, %cond.true123 ], [ %conv126, %cond.false124 ], !dbg !3071
  %conv129 = sitofp i32 %cond128 to double, !dbg !3072
  %96 = load i8*, i8** %q.addr, align 8, !dbg !3073
  %call130 = call i8* @PopDoublePixel(%struct._QuantumInfo* %90, double %conv129, i8* %96), !dbg !3074
  store i8* %call130, i8** %q.addr, align 8, !dbg !3075
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3076
  %incdec.ptr131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 1, !dbg !3076
  store %struct._PixelPacket* %incdec.ptr131, %struct._PixelPacket** %p.addr, align 8, !dbg !3076
  %98 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3077
  %pad132 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %98, i32 0, i32 6, !dbg !3078
  %99 = load i64, i64* %pad132, align 8, !dbg !3078
  %100 = load i8*, i8** %q.addr, align 8, !dbg !3079
  %add.ptr133 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !3079
  store i8* %add.ptr133, i8** %q.addr, align 8, !dbg !3079
  br label %for.inc134, !dbg !3080

for.inc134:                                       ; preds = %cond.end127
  %101 = load i64, i64* %x, align 8, !dbg !3081
  %inc135 = add nsw i64 %101, 1, !dbg !3081
  store i64 %inc135, i64* %x, align 8, !dbg !3081
  br label %for.cond116, !dbg !3082, !llvm.loop !3083

for.end136:                                       ; preds = %for.cond116
  br label %sw.epilog, !dbg !3085

if.end137:                                        ; preds = %sw.bb111
  br label %sw.default, !dbg !3086

sw.default:                                       ; preds = %if.end, %if.end137
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3087, metadata !DIExpression()), !dbg !3089
  %102 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3090
  %depth138 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %102, i32 0, i32 0, !dbg !3091
  %103 = load i64, i64* %depth138, align 8, !dbg !3091
  %call139 = call i64 @GetQuantumRange(i64 %103), !dbg !3092
  store i64 %call139, i64* %range, align 8, !dbg !3093
  store i64 0, i64* %x, align 8, !dbg !3094
  br label %for.cond140, !dbg !3096

for.cond140:                                      ; preds = %for.inc159, %sw.default
  %104 = load i64, i64* %x, align 8, !dbg !3097
  %105 = load i64, i64* %number_pixels.addr, align 8, !dbg !3099
  %cmp141 = icmp slt i64 %104, %105, !dbg !3100
  br i1 %cmp141, label %for.body143, label %for.end161, !dbg !3101

for.body143:                                      ; preds = %for.cond140
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3102
  %107 = load i16*, i16** %indexes.addr, align 8, !dbg !3104
  %108 = load i64, i64* %x, align 8, !dbg !3104
  %add.ptr144 = getelementptr inbounds i16, i16* %107, i64 %108, !dbg !3104
  %cmp145 = icmp eq i16* %add.ptr144, null, !dbg !3104
  br i1 %cmp145, label %cond.true147, label %cond.false148, !dbg !3104

cond.true147:                                     ; preds = %for.body143
  br label %cond.end151, !dbg !3104

cond.false148:                                    ; preds = %for.body143
  %109 = load i16*, i16** %indexes.addr, align 8, !dbg !3104
  %110 = load i64, i64* %x, align 8, !dbg !3104
  %add.ptr149 = getelementptr inbounds i16, i16* %109, i64 %110, !dbg !3104
  %111 = load i16, i16* %add.ptr149, align 2, !dbg !3104
  %conv150 = zext i16 %111 to i32, !dbg !3104
  br label %cond.end151, !dbg !3104

cond.end151:                                      ; preds = %cond.false148, %cond.true147
  %cond152 = phi i32 [ 0, %cond.true147 ], [ %conv150, %cond.false148 ], !dbg !3104
  %conv153 = trunc i32 %cond152 to i16, !dbg !3105
  %112 = load i64, i64* %range, align 8, !dbg !3106
  %call154 = call i64 @ScaleQuantumToAny(i16 zeroext %conv153, i64 %112), !dbg !3107
  %113 = load i8*, i8** %q.addr, align 8, !dbg !3108
  %call155 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %106, i64 %call154, i8* %113), !dbg !3109
  store i8* %call155, i8** %q.addr, align 8, !dbg !3110
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3111
  %incdec.ptr156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 1, !dbg !3111
  store %struct._PixelPacket* %incdec.ptr156, %struct._PixelPacket** %p.addr, align 8, !dbg !3111
  %115 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3112
  %pad157 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %115, i32 0, i32 6, !dbg !3113
  %116 = load i64, i64* %pad157, align 8, !dbg !3113
  %117 = load i8*, i8** %q.addr, align 8, !dbg !3114
  %add.ptr158 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !3114
  store i8* %add.ptr158, i8** %q.addr, align 8, !dbg !3114
  br label %for.inc159, !dbg !3115

for.inc159:                                       ; preds = %cond.end151
  %118 = load i64, i64* %x, align 8, !dbg !3116
  %inc160 = add nsw i64 %118, 1, !dbg !3116
  store i64 %inc160, i64* %x, align 8, !dbg !3116
  br label %for.cond140, !dbg !3117, !llvm.loop !3118

for.end161:                                       ; preds = %for.cond140
  br label %sw.epilog, !dbg !3120

sw.epilog:                                        ; preds = %if.then, %for.end161, %for.end136, %for.end110, %for.end86, %for.end59, %for.end35, %for.end
  ret void, !dbg !3121
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportBlueQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !3122 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel3 = alloca i16, align 2
  %pixel34 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3123, metadata !DIExpression()), !dbg !3124
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3125, metadata !DIExpression()), !dbg !3126
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3127, metadata !DIExpression()), !dbg !3128
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3131, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3133, metadata !DIExpression()), !dbg !3134
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3135
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !3136
  %1 = load i64, i64* %depth, align 8, !dbg !3136
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb2
    i64 32, label %sw.bb33
    i64 64, label %sw.bb67
  ], !dbg !3137

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !3138, metadata !DIExpression()), !dbg !3141
  store i64 0, i64* %x, align 8, !dbg !3142
  br label %for.cond, !dbg !3144

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !3145
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !3147
  %cmp = icmp slt i64 %2, %3, !dbg !3148
  br i1 %cmp, label %for.body, label %for.end, !dbg !3149

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3150
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !3150
  %5 = load i16, i16* %blue, align 2, !dbg !3150
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !3152
  store i8 %call, i8* %pixel, align 1, !dbg !3153
  %6 = load i8, i8* %pixel, align 1, !dbg !3154
  %7 = load i8*, i8** %q.addr, align 8, !dbg !3155
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !3156
  store i8* %call1, i8** %q.addr, align 8, !dbg !3157
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3158
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 1, !dbg !3158
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !3158
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3159
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 6, !dbg !3160
  %10 = load i64, i64* %pad, align 8, !dbg !3160
  %11 = load i8*, i8** %q.addr, align 8, !dbg !3161
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !3161
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !3161
  br label %for.inc, !dbg !3162

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %x, align 8, !dbg !3163
  %inc = add nsw i64 %12, 1, !dbg !3163
  store i64 %inc, i64* %x, align 8, !dbg !3163
  br label %for.cond, !dbg !3164, !llvm.loop !3165

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !3167

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel3, metadata !3168, metadata !DIExpression()), !dbg !3170
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3171
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 2, !dbg !3173
  %14 = load i32, i32* %format, align 8, !dbg !3173
  %cmp4 = icmp eq i32 %14, 1, !dbg !3174
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3175

if.then:                                          ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !3176
  br label %for.cond5, !dbg !3179

for.cond5:                                        ; preds = %for.inc16, %if.then
  %15 = load i64, i64* %x, align 8, !dbg !3180
  %16 = load i64, i64* %number_pixels.addr, align 8, !dbg !3182
  %cmp6 = icmp slt i64 %15, %16, !dbg !3183
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !3184

for.body7:                                        ; preds = %for.cond5
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3185
  %blue8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 0, !dbg !3185
  %18 = load i16, i16* %blue8, align 2, !dbg !3185
  %conv = zext i16 %18 to i32, !dbg !3185
  %conv9 = sitofp i32 %conv to double, !dbg !3185
  %mul = fmul double 0x3EF0001000100010, %conv9, !dbg !3187
  %conv10 = fptrunc double %mul to float, !dbg !3188
  %call11 = call zeroext i16 @SinglePrecisionToHalf(float %conv10), !dbg !3189
  store i16 %call11, i16* %pixel3, align 2, !dbg !3190
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3191
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 13, !dbg !3192
  %20 = load i32, i32* %endian, align 8, !dbg !3192
  %21 = load i16, i16* %pixel3, align 2, !dbg !3193
  %22 = load i8*, i8** %q.addr, align 8, !dbg !3194
  %call12 = call i8* @PopShortPixel(i32 %20, i16 zeroext %21, i8* %22), !dbg !3195
  store i8* %call12, i8** %q.addr, align 8, !dbg !3196
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3197
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !3197
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p.addr, align 8, !dbg !3197
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3198
  %pad14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 6, !dbg !3199
  %25 = load i64, i64* %pad14, align 8, !dbg !3199
  %26 = load i8*, i8** %q.addr, align 8, !dbg !3200
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !3200
  store i8* %add.ptr15, i8** %q.addr, align 8, !dbg !3200
  br label %for.inc16, !dbg !3201

for.inc16:                                        ; preds = %for.body7
  %27 = load i64, i64* %x, align 8, !dbg !3202
  %inc17 = add nsw i64 %27, 1, !dbg !3202
  store i64 %inc17, i64* %x, align 8, !dbg !3202
  br label %for.cond5, !dbg !3203, !llvm.loop !3204

for.end18:                                        ; preds = %for.cond5
  br label %sw.epilog, !dbg !3206

if.end:                                           ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !3207
  br label %for.cond19, !dbg !3209

for.cond19:                                       ; preds = %for.inc30, %if.end
  %28 = load i64, i64* %x, align 8, !dbg !3210
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !3212
  %cmp20 = icmp slt i64 %28, %29, !dbg !3213
  br i1 %cmp20, label %for.body22, label %for.end32, !dbg !3214

for.body22:                                       ; preds = %for.cond19
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3215
  %blue23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !3215
  %31 = load i16, i16* %blue23, align 2, !dbg !3215
  %call24 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %31), !dbg !3217
  store i16 %call24, i16* %pixel3, align 2, !dbg !3218
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3219
  %endian25 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !3220
  %33 = load i32, i32* %endian25, align 8, !dbg !3220
  %34 = load i16, i16* %pixel3, align 2, !dbg !3221
  %35 = load i8*, i8** %q.addr, align 8, !dbg !3222
  %call26 = call i8* @PopShortPixel(i32 %33, i16 zeroext %34, i8* %35), !dbg !3223
  store i8* %call26, i8** %q.addr, align 8, !dbg !3224
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3225
  %incdec.ptr27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !3225
  store %struct._PixelPacket* %incdec.ptr27, %struct._PixelPacket** %p.addr, align 8, !dbg !3225
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3226
  %pad28 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !3227
  %38 = load i64, i64* %pad28, align 8, !dbg !3227
  %39 = load i8*, i8** %q.addr, align 8, !dbg !3228
  %add.ptr29 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !3228
  store i8* %add.ptr29, i8** %q.addr, align 8, !dbg !3228
  br label %for.inc30, !dbg !3229

for.inc30:                                        ; preds = %for.body22
  %40 = load i64, i64* %x, align 8, !dbg !3230
  %inc31 = add nsw i64 %40, 1, !dbg !3230
  store i64 %inc31, i64* %x, align 8, !dbg !3230
  br label %for.cond19, !dbg !3231, !llvm.loop !3232

for.end32:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !3234

sw.bb33:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel34, metadata !3235, metadata !DIExpression()), !dbg !3237
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3238
  %format35 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 2, !dbg !3240
  %42 = load i32, i32* %format35, align 8, !dbg !3240
  %cmp36 = icmp eq i32 %42, 1, !dbg !3241
  br i1 %cmp36, label %if.then38, label %if.end52, !dbg !3242

if.then38:                                        ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !3243
  br label %for.cond39, !dbg !3246

for.cond39:                                       ; preds = %for.inc49, %if.then38
  %43 = load i64, i64* %x, align 8, !dbg !3247
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !3249
  %cmp40 = icmp slt i64 %43, %44, !dbg !3250
  br i1 %cmp40, label %for.body42, label %for.end51, !dbg !3251

for.body42:                                       ; preds = %for.cond39
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3252
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3254
  %blue43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 0, !dbg !3254
  %47 = load i16, i16* %blue43, align 2, !dbg !3254
  %conv44 = uitofp i16 %47 to float, !dbg !3255
  %48 = load i8*, i8** %q.addr, align 8, !dbg !3256
  %call45 = call i8* @PopFloatPixel(%struct._QuantumInfo* %45, float %conv44, i8* %48), !dbg !3257
  store i8* %call45, i8** %q.addr, align 8, !dbg !3258
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3259
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !3259
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %p.addr, align 8, !dbg !3259
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3260
  %pad47 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 6, !dbg !3261
  %51 = load i64, i64* %pad47, align 8, !dbg !3261
  %52 = load i8*, i8** %q.addr, align 8, !dbg !3262
  %add.ptr48 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !3262
  store i8* %add.ptr48, i8** %q.addr, align 8, !dbg !3262
  br label %for.inc49, !dbg !3263

for.inc49:                                        ; preds = %for.body42
  %53 = load i64, i64* %x, align 8, !dbg !3264
  %inc50 = add nsw i64 %53, 1, !dbg !3264
  store i64 %inc50, i64* %x, align 8, !dbg !3264
  br label %for.cond39, !dbg !3265, !llvm.loop !3266

for.end51:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !3268

if.end52:                                         ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !3269
  br label %for.cond53, !dbg !3271

for.cond53:                                       ; preds = %for.inc64, %if.end52
  %54 = load i64, i64* %x, align 8, !dbg !3272
  %55 = load i64, i64* %number_pixels.addr, align 8, !dbg !3274
  %cmp54 = icmp slt i64 %54, %55, !dbg !3275
  br i1 %cmp54, label %for.body56, label %for.end66, !dbg !3276

for.body56:                                       ; preds = %for.cond53
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3277
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 0, !dbg !3277
  %57 = load i16, i16* %blue57, align 2, !dbg !3277
  %call58 = call i32 @ScaleQuantumToLong(i16 zeroext %57), !dbg !3279
  store i32 %call58, i32* %pixel34, align 4, !dbg !3280
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3281
  %endian59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 13, !dbg !3282
  %59 = load i32, i32* %endian59, align 8, !dbg !3282
  %60 = load i32, i32* %pixel34, align 4, !dbg !3283
  %61 = load i8*, i8** %q.addr, align 8, !dbg !3284
  %call60 = call i8* @PopLongPixel(i32 %59, i32 %60, i8* %61), !dbg !3285
  store i8* %call60, i8** %q.addr, align 8, !dbg !3286
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3287
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !3287
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %p.addr, align 8, !dbg !3287
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3288
  %pad62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 6, !dbg !3289
  %64 = load i64, i64* %pad62, align 8, !dbg !3289
  %65 = load i8*, i8** %q.addr, align 8, !dbg !3290
  %add.ptr63 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !3290
  store i8* %add.ptr63, i8** %q.addr, align 8, !dbg !3290
  br label %for.inc64, !dbg !3291

for.inc64:                                        ; preds = %for.body56
  %66 = load i64, i64* %x, align 8, !dbg !3292
  %inc65 = add nsw i64 %66, 1, !dbg !3292
  store i64 %inc65, i64* %x, align 8, !dbg !3292
  br label %for.cond53, !dbg !3293, !llvm.loop !3294

for.end66:                                        ; preds = %for.cond53
  br label %sw.epilog, !dbg !3296

sw.bb67:                                          ; preds = %entry
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3297
  %format68 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %67, i32 0, i32 2, !dbg !3300
  %68 = load i32, i32* %format68, align 8, !dbg !3300
  %cmp69 = icmp eq i32 %68, 1, !dbg !3301
  br i1 %cmp69, label %if.then71, label %if.end85, !dbg !3302

if.then71:                                        ; preds = %sw.bb67
  store i64 0, i64* %x, align 8, !dbg !3303
  br label %for.cond72, !dbg !3306

for.cond72:                                       ; preds = %for.inc82, %if.then71
  %69 = load i64, i64* %x, align 8, !dbg !3307
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !3309
  %cmp73 = icmp slt i64 %69, %70, !dbg !3310
  br i1 %cmp73, label %for.body75, label %for.end84, !dbg !3311

for.body75:                                       ; preds = %for.cond72
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3312
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3314
  %blue76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 0, !dbg !3314
  %73 = load i16, i16* %blue76, align 2, !dbg !3314
  %conv77 = uitofp i16 %73 to double, !dbg !3315
  %74 = load i8*, i8** %q.addr, align 8, !dbg !3316
  %call78 = call i8* @PopDoublePixel(%struct._QuantumInfo* %71, double %conv77, i8* %74), !dbg !3317
  store i8* %call78, i8** %q.addr, align 8, !dbg !3318
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3319
  %incdec.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 1, !dbg !3319
  store %struct._PixelPacket* %incdec.ptr79, %struct._PixelPacket** %p.addr, align 8, !dbg !3319
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3320
  %pad80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 6, !dbg !3321
  %77 = load i64, i64* %pad80, align 8, !dbg !3321
  %78 = load i8*, i8** %q.addr, align 8, !dbg !3322
  %add.ptr81 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !3322
  store i8* %add.ptr81, i8** %q.addr, align 8, !dbg !3322
  br label %for.inc82, !dbg !3323

for.inc82:                                        ; preds = %for.body75
  %79 = load i64, i64* %x, align 8, !dbg !3324
  %inc83 = add nsw i64 %79, 1, !dbg !3324
  store i64 %inc83, i64* %x, align 8, !dbg !3324
  br label %for.cond72, !dbg !3325, !llvm.loop !3326

for.end84:                                        ; preds = %for.cond72
  br label %sw.epilog, !dbg !3328

if.end85:                                         ; preds = %sw.bb67
  br label %sw.default, !dbg !3329

sw.default:                                       ; preds = %entry, %if.end85
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3330
  %depth86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 0, !dbg !3332
  %81 = load i64, i64* %depth86, align 8, !dbg !3332
  %call87 = call i64 @GetQuantumRange(i64 %81), !dbg !3333
  store i64 %call87, i64* %range, align 8, !dbg !3334
  store i64 0, i64* %x, align 8, !dbg !3335
  br label %for.cond88, !dbg !3337

for.cond88:                                       ; preds = %for.inc98, %sw.default
  %82 = load i64, i64* %x, align 8, !dbg !3338
  %83 = load i64, i64* %number_pixels.addr, align 8, !dbg !3340
  %cmp89 = icmp slt i64 %82, %83, !dbg !3341
  br i1 %cmp89, label %for.body91, label %for.end100, !dbg !3342

for.body91:                                       ; preds = %for.cond88
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3343
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3345
  %blue92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 0, !dbg !3345
  %86 = load i16, i16* %blue92, align 2, !dbg !3345
  %87 = load i64, i64* %range, align 8, !dbg !3346
  %call93 = call i64 @ScaleQuantumToAny(i16 zeroext %86, i64 %87), !dbg !3347
  %88 = load i8*, i8** %q.addr, align 8, !dbg !3348
  %call94 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %84, i64 %call93, i8* %88), !dbg !3349
  store i8* %call94, i8** %q.addr, align 8, !dbg !3350
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3351
  %incdec.ptr95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !3351
  store %struct._PixelPacket* %incdec.ptr95, %struct._PixelPacket** %p.addr, align 8, !dbg !3351
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3352
  %pad96 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !3353
  %91 = load i64, i64* %pad96, align 8, !dbg !3353
  %92 = load i8*, i8** %q.addr, align 8, !dbg !3354
  %add.ptr97 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !3354
  store i8* %add.ptr97, i8** %q.addr, align 8, !dbg !3354
  br label %for.inc98, !dbg !3355

for.inc98:                                        ; preds = %for.body91
  %93 = load i64, i64* %x, align 8, !dbg !3356
  %inc99 = add nsw i64 %93, 1, !dbg !3356
  store i64 %inc99, i64* %x, align 8, !dbg !3356
  br label %for.cond88, !dbg !3357, !llvm.loop !3358

for.end100:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !3360

sw.epilog:                                        ; preds = %for.end100, %for.end84, %for.end66, %for.end51, %for.end32, %for.end18, %for.end
  ret void, !dbg !3361
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportCbYCrYQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !3362 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %cbcr = alloca [4 x i16], align 2
  %range = alloca i64, align 8
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3363, metadata !DIExpression()), !dbg !3364
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3365, metadata !DIExpression()), !dbg !3366
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3367, metadata !DIExpression()), !dbg !3368
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !3369, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.declare(metadata [4 x i16]* %cbcr, metadata !3371, metadata !DIExpression()), !dbg !3375
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3376, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3378, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3380, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3382, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !3384, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3386, metadata !DIExpression()), !dbg !3387
  store i64 0, i64* %n, align 8, !dbg !3388
  store i64 0, i64* %quantum, align 8, !dbg !3389
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3390
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !3391
  %1 = load i64, i64* %depth, align 8, !dbg !3391
  %call = call i64 @GetQuantumRange(i64 %1), !dbg !3392
  store i64 %call, i64* %range, align 8, !dbg !3393
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3394
  %depth1 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 0, !dbg !3395
  %3 = load i64, i64* %depth1, align 8, !dbg !3395
  switch i64 %3, label %sw.default [
    i64 10, label %sw.bb
  ], !dbg !3396

sw.bb:                                            ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3397
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 8, !dbg !3401
  %5 = load i32, i32* %pack, align 4, !dbg !3401
  %cmp = icmp eq i32 %5, 0, !dbg !3402
  br i1 %cmp, label %if.then, label %if.end, !dbg !3403

if.then:                                          ; preds = %sw.bb
  store i64 0, i64* %x, align 8, !dbg !3404
  br label %for.cond, !dbg !3407

for.cond:                                         ; preds = %for.inc39, %if.then
  %6 = load i64, i64* %x, align 8, !dbg !3408
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !3410
  %cmp2 = icmp slt i64 %6, %7, !dbg !3411
  br i1 %cmp2, label %for.body, label %for.end40, !dbg !3412

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !3413
  br label %for.cond3, !dbg !3416

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i64, i64* %i, align 8, !dbg !3417
  %cmp4 = icmp slt i64 %8, 4, !dbg !3419
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !3420

for.body5:                                        ; preds = %for.cond3
  %9 = load i64, i64* %n, align 8, !dbg !3421
  %rem = srem i64 %9, 3, !dbg !3423
  switch i64 %rem, label %sw.epilog [
    i64 0, label %sw.bb6
    i64 1, label %sw.bb7
    i64 2, label %sw.bb9
  ], !dbg !3424

sw.bb6:                                           ; preds = %for.body5
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3425
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !3425
  %11 = load i16, i16* %red, align 2, !dbg !3425
  %conv = zext i16 %11 to i64, !dbg !3425
  store i64 %conv, i64* %quantum, align 8, !dbg !3428
  br label %sw.epilog, !dbg !3429

sw.bb7:                                           ; preds = %for.body5
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3430
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 1, !dbg !3430
  %13 = load i16, i16* %green, align 2, !dbg !3430
  %conv8 = zext i16 %13 to i64, !dbg !3430
  store i64 %conv8, i64* %quantum, align 8, !dbg !3432
  br label %sw.epilog, !dbg !3433

sw.bb9:                                           ; preds = %for.body5
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3434
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 0, !dbg !3434
  %15 = load i16, i16* %blue, align 2, !dbg !3434
  %conv10 = zext i16 %15 to i64, !dbg !3434
  store i64 %conv10, i64* %quantum, align 8, !dbg !3436
  br label %sw.epilog, !dbg !3437

sw.epilog:                                        ; preds = %for.body5, %sw.bb9, %sw.bb7, %sw.bb6
  %16 = load i64, i64* %quantum, align 8, !dbg !3438
  %conv11 = trunc i64 %16 to i16, !dbg !3439
  %17 = load i64, i64* %i, align 8, !dbg !3440
  %arrayidx = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 %17, !dbg !3441
  store i16 %conv11, i16* %arrayidx, align 2, !dbg !3442
  %18 = load i64, i64* %n, align 8, !dbg !3443
  %inc = add nsw i64 %18, 1, !dbg !3443
  store i64 %inc, i64* %n, align 8, !dbg !3443
  br label %for.inc, !dbg !3444

for.inc:                                          ; preds = %sw.epilog
  %19 = load i64, i64* %i, align 8, !dbg !3445
  %inc12 = add nsw i64 %19, 1, !dbg !3445
  store i64 %inc12, i64* %i, align 8, !dbg !3445
  br label %for.cond3, !dbg !3446, !llvm.loop !3447

for.end:                                          ; preds = %for.cond3
  %arrayidx13 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 1, !dbg !3449
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !3449
  %conv14 = zext i16 %20 to i64, !dbg !3450
  %shl = shl i64 %conv14, 22, !dbg !3451
  %arrayidx15 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !3452
  %21 = load i16, i16* %arrayidx15, align 2, !dbg !3452
  %conv16 = zext i16 %21 to i64, !dbg !3453
  %shl17 = shl i64 %conv16, 12, !dbg !3454
  %or = or i64 %shl, %shl17, !dbg !3455
  %arrayidx18 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !3456
  %22 = load i16, i16* %arrayidx18, align 2, !dbg !3456
  %conv19 = zext i16 %22 to i64, !dbg !3457
  %shl20 = shl i64 %conv19, 2, !dbg !3458
  %or21 = or i64 %or, %shl20, !dbg !3459
  %conv22 = trunc i64 %or21 to i32, !dbg !3460
  store i32 %conv22, i32* %pixel, align 4, !dbg !3461
  %23 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3462
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %23, i32 0, i32 13, !dbg !3463
  %24 = load i32, i32* %endian, align 8, !dbg !3463
  %25 = load i32, i32* %pixel, align 4, !dbg !3464
  %26 = load i8*, i8** %q.addr, align 8, !dbg !3465
  %call23 = call i8* @PopLongPixel(i32 %24, i32 %25, i8* %26), !dbg !3466
  store i8* %call23, i8** %q.addr, align 8, !dbg !3467
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3468
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 1, !dbg !3468
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !3468
  %arrayidx24 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 3, !dbg !3469
  %28 = load i16, i16* %arrayidx24, align 2, !dbg !3469
  %conv25 = zext i16 %28 to i64, !dbg !3470
  %shl26 = shl i64 %conv25, 22, !dbg !3471
  %arrayidx27 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !3472
  %29 = load i16, i16* %arrayidx27, align 2, !dbg !3472
  %conv28 = zext i16 %29 to i64, !dbg !3473
  %shl29 = shl i64 %conv28, 12, !dbg !3474
  %or30 = or i64 %shl26, %shl29, !dbg !3475
  %arrayidx31 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !3476
  %30 = load i16, i16* %arrayidx31, align 2, !dbg !3476
  %conv32 = zext i16 %30 to i64, !dbg !3477
  %shl33 = shl i64 %conv32, 2, !dbg !3478
  %or34 = or i64 %or30, %shl33, !dbg !3479
  %conv35 = trunc i64 %or34 to i32, !dbg !3480
  store i32 %conv35, i32* %pixel, align 4, !dbg !3481
  %31 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3482
  %endian36 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %31, i32 0, i32 13, !dbg !3483
  %32 = load i32, i32* %endian36, align 8, !dbg !3483
  %33 = load i32, i32* %pixel, align 4, !dbg !3484
  %34 = load i8*, i8** %q.addr, align 8, !dbg !3485
  %call37 = call i8* @PopLongPixel(i32 %32, i32 %33, i8* %34), !dbg !3486
  store i8* %call37, i8** %q.addr, align 8, !dbg !3487
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3488
  %incdec.ptr38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 1, !dbg !3488
  store %struct._PixelPacket* %incdec.ptr38, %struct._PixelPacket** %p.addr, align 8, !dbg !3488
  %36 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3489
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %36, i32 0, i32 6, !dbg !3490
  %37 = load i64, i64* %pad, align 8, !dbg !3490
  %38 = load i8*, i8** %q.addr, align 8, !dbg !3491
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !3491
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !3491
  br label %for.inc39, !dbg !3492

for.inc39:                                        ; preds = %for.end
  %39 = load i64, i64* %x, align 8, !dbg !3493
  %add = add nsw i64 %39, 2, !dbg !3493
  store i64 %add, i64* %x, align 8, !dbg !3493
  br label %for.cond, !dbg !3494, !llvm.loop !3495

for.end40:                                        ; preds = %for.cond
  br label %sw.epilog91, !dbg !3497

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog91, !dbg !3498

sw.default:                                       ; preds = %entry
  store i64 0, i64* %x, align 8, !dbg !3499
  br label %for.cond41, !dbg !3502

for.cond41:                                       ; preds = %for.inc88, %sw.default
  %40 = load i64, i64* %x, align 8, !dbg !3503
  %41 = load i64, i64* %number_pixels.addr, align 8, !dbg !3505
  %cmp42 = icmp slt i64 %40, %41, !dbg !3506
  br i1 %cmp42, label %for.body44, label %for.end90, !dbg !3507

for.body44:                                       ; preds = %for.cond41
  store i64 0, i64* %i, align 8, !dbg !3508
  br label %for.cond45, !dbg !3511

for.cond45:                                       ; preds = %for.inc63, %for.body44
  %42 = load i64, i64* %i, align 8, !dbg !3512
  %cmp46 = icmp slt i64 %42, 4, !dbg !3514
  br i1 %cmp46, label %for.body48, label %for.end65, !dbg !3515

for.body48:                                       ; preds = %for.cond45
  %43 = load i64, i64* %n, align 8, !dbg !3516
  %rem49 = srem i64 %43, 3, !dbg !3518
  switch i64 %rem49, label %sw.epilog59 [
    i64 0, label %sw.bb50
    i64 1, label %sw.bb53
    i64 2, label %sw.bb56
  ], !dbg !3519

sw.bb50:                                          ; preds = %for.body48
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3520
  %red51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 2, !dbg !3520
  %45 = load i16, i16* %red51, align 2, !dbg !3520
  %conv52 = zext i16 %45 to i64, !dbg !3520
  store i64 %conv52, i64* %quantum, align 8, !dbg !3523
  br label %sw.epilog59, !dbg !3524

sw.bb53:                                          ; preds = %for.body48
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3525
  %green54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 1, !dbg !3525
  %47 = load i16, i16* %green54, align 2, !dbg !3525
  %conv55 = zext i16 %47 to i64, !dbg !3525
  store i64 %conv55, i64* %quantum, align 8, !dbg !3527
  br label %sw.epilog59, !dbg !3528

sw.bb56:                                          ; preds = %for.body48
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3529
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !3529
  %49 = load i16, i16* %blue57, align 2, !dbg !3529
  %conv58 = zext i16 %49 to i64, !dbg !3529
  store i64 %conv58, i64* %quantum, align 8, !dbg !3531
  br label %sw.epilog59, !dbg !3532

sw.epilog59:                                      ; preds = %for.body48, %sw.bb56, %sw.bb53, %sw.bb50
  %50 = load i64, i64* %quantum, align 8, !dbg !3533
  %conv60 = trunc i64 %50 to i16, !dbg !3534
  %51 = load i64, i64* %i, align 8, !dbg !3535
  %arrayidx61 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 %51, !dbg !3536
  store i16 %conv60, i16* %arrayidx61, align 2, !dbg !3537
  %52 = load i64, i64* %n, align 8, !dbg !3538
  %inc62 = add nsw i64 %52, 1, !dbg !3538
  store i64 %inc62, i64* %n, align 8, !dbg !3538
  br label %for.inc63, !dbg !3539

for.inc63:                                        ; preds = %sw.epilog59
  %53 = load i64, i64* %i, align 8, !dbg !3540
  %inc64 = add nsw i64 %53, 1, !dbg !3540
  store i64 %inc64, i64* %i, align 8, !dbg !3540
  br label %for.cond45, !dbg !3541, !llvm.loop !3542

for.end65:                                        ; preds = %for.cond45
  %54 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3544
  %arrayidx66 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 1, !dbg !3545
  %55 = load i16, i16* %arrayidx66, align 2, !dbg !3545
  %56 = load i64, i64* %range, align 8, !dbg !3546
  %call67 = call i64 @ScaleQuantumToAny(i16 zeroext %55, i64 %56), !dbg !3547
  %57 = load i8*, i8** %q.addr, align 8, !dbg !3548
  %call68 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %54, i64 %call67, i8* %57), !dbg !3549
  store i8* %call68, i8** %q.addr, align 8, !dbg !3550
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3551
  %arrayidx69 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !3552
  %59 = load i16, i16* %arrayidx69, align 2, !dbg !3552
  %60 = load i64, i64* %range, align 8, !dbg !3553
  %call70 = call i64 @ScaleQuantumToAny(i16 zeroext %59, i64 %60), !dbg !3554
  %61 = load i8*, i8** %q.addr, align 8, !dbg !3555
  %call71 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %58, i64 %call70, i8* %61), !dbg !3556
  store i8* %call71, i8** %q.addr, align 8, !dbg !3557
  %62 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3558
  %arrayidx72 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !3559
  %63 = load i16, i16* %arrayidx72, align 2, !dbg !3559
  %64 = load i64, i64* %range, align 8, !dbg !3560
  %call73 = call i64 @ScaleQuantumToAny(i16 zeroext %63, i64 %64), !dbg !3561
  %65 = load i8*, i8** %q.addr, align 8, !dbg !3562
  %call74 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %62, i64 %call73, i8* %65), !dbg !3563
  store i8* %call74, i8** %q.addr, align 8, !dbg !3564
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3565
  %incdec.ptr75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 1, !dbg !3565
  store %struct._PixelPacket* %incdec.ptr75, %struct._PixelPacket** %p.addr, align 8, !dbg !3565
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3566
  %arrayidx76 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 3, !dbg !3567
  %68 = load i16, i16* %arrayidx76, align 2, !dbg !3567
  %69 = load i64, i64* %range, align 8, !dbg !3568
  %call77 = call i64 @ScaleQuantumToAny(i16 zeroext %68, i64 %69), !dbg !3569
  %70 = load i8*, i8** %q.addr, align 8, !dbg !3570
  %call78 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %67, i64 %call77, i8* %70), !dbg !3571
  store i8* %call78, i8** %q.addr, align 8, !dbg !3572
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3573
  %arrayidx79 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !3574
  %72 = load i16, i16* %arrayidx79, align 2, !dbg !3574
  %73 = load i64, i64* %range, align 8, !dbg !3575
  %call80 = call i64 @ScaleQuantumToAny(i16 zeroext %72, i64 %73), !dbg !3576
  %74 = load i8*, i8** %q.addr, align 8, !dbg !3577
  %call81 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %71, i64 %call80, i8* %74), !dbg !3578
  store i8* %call81, i8** %q.addr, align 8, !dbg !3579
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3580
  %arrayidx82 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !3581
  %76 = load i16, i16* %arrayidx82, align 2, !dbg !3581
  %77 = load i64, i64* %range, align 8, !dbg !3582
  %call83 = call i64 @ScaleQuantumToAny(i16 zeroext %76, i64 %77), !dbg !3583
  %78 = load i8*, i8** %q.addr, align 8, !dbg !3584
  %call84 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %75, i64 %call83, i8* %78), !dbg !3585
  store i8* %call84, i8** %q.addr, align 8, !dbg !3586
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3587
  %incdec.ptr85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 1, !dbg !3587
  store %struct._PixelPacket* %incdec.ptr85, %struct._PixelPacket** %p.addr, align 8, !dbg !3587
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3588
  %pad86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 6, !dbg !3589
  %81 = load i64, i64* %pad86, align 8, !dbg !3589
  %82 = load i8*, i8** %q.addr, align 8, !dbg !3590
  %add.ptr87 = getelementptr inbounds i8, i8* %82, i64 %81, !dbg !3590
  store i8* %add.ptr87, i8** %q.addr, align 8, !dbg !3590
  br label %for.inc88, !dbg !3591

for.inc88:                                        ; preds = %for.end65
  %83 = load i64, i64* %x, align 8, !dbg !3592
  %add89 = add nsw i64 %83, 2, !dbg !3592
  store i64 %add89, i64* %x, align 8, !dbg !3592
  br label %for.cond41, !dbg !3593, !llvm.loop !3594

for.end90:                                        ; preds = %for.cond41
  br label %sw.epilog91, !dbg !3596

sw.epilog91:                                      ; preds = %for.end90, %if.end, %for.end40
  ret void, !dbg !3597
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportCMYKQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i16* noalias %indexes, i8* noalias %q, %struct._ExceptionInfo* %exception) #0 !dbg !3598 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %q.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel15 = alloca i16, align 2
  %pixel103 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3601, metadata !DIExpression()), !dbg !3602
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3603, metadata !DIExpression()), !dbg !3604
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3605, metadata !DIExpression()), !dbg !3606
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !3607, metadata !DIExpression()), !dbg !3608
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !3609, metadata !DIExpression()), !dbg !3610
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3611, metadata !DIExpression()), !dbg !3612
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3613, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3615, metadata !DIExpression()), !dbg !3616
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3617
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !3619
  %1 = load i32, i32* %colorspace, align 4, !dbg !3619
  %cmp = icmp ne i32 %1, 12, !dbg !3620
  br i1 %cmp, label %if.then, label %if.end, !dbg !3621

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3622
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3624
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !3625
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3624
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1224, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3626
  br label %sw.epilog, !dbg !3627

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3628
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !3629
  %5 = load i64, i64* %depth, align 8, !dbg !3629
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb14
    i64 32, label %sw.bb102
    i64 64, label %sw.bb174
  ], !dbg !3630

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !3631, metadata !DIExpression()), !dbg !3634
  store i64 0, i64* %x, align 8, !dbg !3635
  br label %for.cond, !dbg !3637

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !3638
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !3640
  %cmp1 = icmp slt i64 %6, %7, !dbg !3641
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3642

for.body:                                         ; preds = %for.cond
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3643
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 2, !dbg !3643
  %9 = load i16, i16* %red, align 2, !dbg !3643
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %9), !dbg !3645
  store i8 %call2, i8* %pixel, align 1, !dbg !3646
  %10 = load i8, i8* %pixel, align 1, !dbg !3647
  %11 = load i8*, i8** %q.addr, align 8, !dbg !3648
  %call3 = call i8* @PopCharPixel(i8 zeroext %10, i8* %11), !dbg !3649
  store i8* %call3, i8** %q.addr, align 8, !dbg !3650
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3651
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 1, !dbg !3651
  %13 = load i16, i16* %green, align 2, !dbg !3651
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %13), !dbg !3652
  store i8 %call4, i8* %pixel, align 1, !dbg !3653
  %14 = load i8, i8* %pixel, align 1, !dbg !3654
  %15 = load i8*, i8** %q.addr, align 8, !dbg !3655
  %call5 = call i8* @PopCharPixel(i8 zeroext %14, i8* %15), !dbg !3656
  store i8* %call5, i8** %q.addr, align 8, !dbg !3657
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3658
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 0, !dbg !3658
  %17 = load i16, i16* %blue, align 2, !dbg !3658
  %call6 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %17), !dbg !3659
  store i8 %call6, i8* %pixel, align 1, !dbg !3660
  %18 = load i8, i8* %pixel, align 1, !dbg !3661
  %19 = load i8*, i8** %q.addr, align 8, !dbg !3662
  %call7 = call i8* @PopCharPixel(i8 zeroext %18, i8* %19), !dbg !3663
  store i8* %call7, i8** %q.addr, align 8, !dbg !3664
  %20 = load i16*, i16** %indexes.addr, align 8, !dbg !3665
  %21 = load i64, i64* %x, align 8, !dbg !3665
  %add.ptr = getelementptr inbounds i16, i16* %20, i64 %21, !dbg !3665
  %cmp8 = icmp eq i16* %add.ptr, null, !dbg !3665
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !3665

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !3665

cond.false:                                       ; preds = %for.body
  %22 = load i16*, i16** %indexes.addr, align 8, !dbg !3665
  %23 = load i64, i64* %x, align 8, !dbg !3665
  %add.ptr9 = getelementptr inbounds i16, i16* %22, i64 %23, !dbg !3665
  %24 = load i16, i16* %add.ptr9, align 2, !dbg !3665
  %conv = zext i16 %24 to i32, !dbg !3665
  br label %cond.end, !dbg !3665

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !3665
  %conv10 = trunc i32 %cond to i16, !dbg !3665
  %call11 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv10), !dbg !3666
  store i8 %call11, i8* %pixel, align 1, !dbg !3667
  %25 = load i8, i8* %pixel, align 1, !dbg !3668
  %26 = load i8*, i8** %q.addr, align 8, !dbg !3669
  %call12 = call i8* @PopCharPixel(i8 zeroext %25, i8* %26), !dbg !3670
  store i8* %call12, i8** %q.addr, align 8, !dbg !3671
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3672
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 1, !dbg !3672
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !3672
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3673
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 6, !dbg !3674
  %29 = load i64, i64* %pad, align 8, !dbg !3674
  %30 = load i8*, i8** %q.addr, align 8, !dbg !3675
  %add.ptr13 = getelementptr inbounds i8, i8* %30, i64 %29, !dbg !3675
  store i8* %add.ptr13, i8** %q.addr, align 8, !dbg !3675
  br label %for.inc, !dbg !3676

for.inc:                                          ; preds = %cond.end
  %31 = load i64, i64* %x, align 8, !dbg !3677
  %inc = add nsw i64 %31, 1, !dbg !3677
  store i64 %inc, i64* %x, align 8, !dbg !3677
  br label %for.cond, !dbg !3678, !llvm.loop !3679

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !3681

sw.bb14:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel15, metadata !3682, metadata !DIExpression()), !dbg !3684
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3685
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 2, !dbg !3687
  %33 = load i32, i32* %format, align 8, !dbg !3687
  %cmp16 = icmp eq i32 %33, 1, !dbg !3688
  br i1 %cmp16, label %if.then18, label %if.end66, !dbg !3689

if.then18:                                        ; preds = %sw.bb14
  store i64 0, i64* %x, align 8, !dbg !3690
  br label %for.cond19, !dbg !3693

for.cond19:                                       ; preds = %for.inc63, %if.then18
  %34 = load i64, i64* %x, align 8, !dbg !3694
  %35 = load i64, i64* %number_pixels.addr, align 8, !dbg !3696
  %cmp20 = icmp slt i64 %34, %35, !dbg !3697
  br i1 %cmp20, label %for.body22, label %for.end65, !dbg !3698

for.body22:                                       ; preds = %for.cond19
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3699
  %red23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !3699
  %37 = load i16, i16* %red23, align 2, !dbg !3699
  %conv24 = zext i16 %37 to i32, !dbg !3699
  %conv25 = sitofp i32 %conv24 to double, !dbg !3699
  %mul = fmul double 0x3EF0001000100010, %conv25, !dbg !3701
  %conv26 = fptrunc double %mul to float, !dbg !3702
  %call27 = call zeroext i16 @SinglePrecisionToHalf(float %conv26), !dbg !3703
  store i16 %call27, i16* %pixel15, align 2, !dbg !3704
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3705
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 13, !dbg !3706
  %39 = load i32, i32* %endian, align 8, !dbg !3706
  %40 = load i16, i16* %pixel15, align 2, !dbg !3707
  %41 = load i8*, i8** %q.addr, align 8, !dbg !3708
  %call28 = call i8* @PopShortPixel(i32 %39, i16 zeroext %40, i8* %41), !dbg !3709
  store i8* %call28, i8** %q.addr, align 8, !dbg !3710
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3711
  %green29 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 1, !dbg !3711
  %43 = load i16, i16* %green29, align 2, !dbg !3711
  %conv30 = zext i16 %43 to i32, !dbg !3711
  %conv31 = sitofp i32 %conv30 to double, !dbg !3711
  %mul32 = fmul double 0x3EF0001000100010, %conv31, !dbg !3712
  %conv33 = fptrunc double %mul32 to float, !dbg !3713
  %call34 = call zeroext i16 @SinglePrecisionToHalf(float %conv33), !dbg !3714
  store i16 %call34, i16* %pixel15, align 2, !dbg !3715
  %44 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3716
  %endian35 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %44, i32 0, i32 13, !dbg !3717
  %45 = load i32, i32* %endian35, align 8, !dbg !3717
  %46 = load i16, i16* %pixel15, align 2, !dbg !3718
  %47 = load i8*, i8** %q.addr, align 8, !dbg !3719
  %call36 = call i8* @PopShortPixel(i32 %45, i16 zeroext %46, i8* %47), !dbg !3720
  store i8* %call36, i8** %q.addr, align 8, !dbg !3721
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3722
  %blue37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !3722
  %49 = load i16, i16* %blue37, align 2, !dbg !3722
  %conv38 = zext i16 %49 to i32, !dbg !3722
  %conv39 = sitofp i32 %conv38 to double, !dbg !3722
  %mul40 = fmul double 0x3EF0001000100010, %conv39, !dbg !3723
  %conv41 = fptrunc double %mul40 to float, !dbg !3724
  %call42 = call zeroext i16 @SinglePrecisionToHalf(float %conv41), !dbg !3725
  store i16 %call42, i16* %pixel15, align 2, !dbg !3726
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3727
  %endian43 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 13, !dbg !3728
  %51 = load i32, i32* %endian43, align 8, !dbg !3728
  %52 = load i16, i16* %pixel15, align 2, !dbg !3729
  %53 = load i8*, i8** %q.addr, align 8, !dbg !3730
  %call44 = call i8* @PopShortPixel(i32 %51, i16 zeroext %52, i8* %53), !dbg !3731
  store i8* %call44, i8** %q.addr, align 8, !dbg !3732
  %54 = load i16*, i16** %indexes.addr, align 8, !dbg !3733
  %55 = load i64, i64* %x, align 8, !dbg !3733
  %add.ptr45 = getelementptr inbounds i16, i16* %54, i64 %55, !dbg !3733
  %cmp46 = icmp eq i16* %add.ptr45, null, !dbg !3733
  br i1 %cmp46, label %cond.true48, label %cond.false49, !dbg !3733

cond.true48:                                      ; preds = %for.body22
  br label %cond.end52, !dbg !3733

cond.false49:                                     ; preds = %for.body22
  %56 = load i16*, i16** %indexes.addr, align 8, !dbg !3733
  %57 = load i64, i64* %x, align 8, !dbg !3733
  %add.ptr50 = getelementptr inbounds i16, i16* %56, i64 %57, !dbg !3733
  %58 = load i16, i16* %add.ptr50, align 2, !dbg !3733
  %conv51 = zext i16 %58 to i32, !dbg !3733
  br label %cond.end52, !dbg !3733

cond.end52:                                       ; preds = %cond.false49, %cond.true48
  %cond53 = phi i32 [ 0, %cond.true48 ], [ %conv51, %cond.false49 ], !dbg !3733
  %conv54 = sitofp i32 %cond53 to double, !dbg !3733
  %mul55 = fmul double 0x3EF0001000100010, %conv54, !dbg !3734
  %conv56 = fptrunc double %mul55 to float, !dbg !3735
  %call57 = call zeroext i16 @SinglePrecisionToHalf(float %conv56), !dbg !3736
  store i16 %call57, i16* %pixel15, align 2, !dbg !3737
  %59 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3738
  %endian58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %59, i32 0, i32 13, !dbg !3739
  %60 = load i32, i32* %endian58, align 8, !dbg !3739
  %61 = load i16, i16* %pixel15, align 2, !dbg !3740
  %62 = load i8*, i8** %q.addr, align 8, !dbg !3741
  %call59 = call i8* @PopShortPixel(i32 %60, i16 zeroext %61, i8* %62), !dbg !3742
  store i8* %call59, i8** %q.addr, align 8, !dbg !3743
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3744
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 1, !dbg !3744
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %p.addr, align 8, !dbg !3744
  %64 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3745
  %pad61 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %64, i32 0, i32 6, !dbg !3746
  %65 = load i64, i64* %pad61, align 8, !dbg !3746
  %66 = load i8*, i8** %q.addr, align 8, !dbg !3747
  %add.ptr62 = getelementptr inbounds i8, i8* %66, i64 %65, !dbg !3747
  store i8* %add.ptr62, i8** %q.addr, align 8, !dbg !3747
  br label %for.inc63, !dbg !3748

for.inc63:                                        ; preds = %cond.end52
  %67 = load i64, i64* %x, align 8, !dbg !3749
  %inc64 = add nsw i64 %67, 1, !dbg !3749
  store i64 %inc64, i64* %x, align 8, !dbg !3749
  br label %for.cond19, !dbg !3750, !llvm.loop !3751

for.end65:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !3753

if.end66:                                         ; preds = %sw.bb14
  store i64 0, i64* %x, align 8, !dbg !3754
  br label %for.cond67, !dbg !3756

for.cond67:                                       ; preds = %for.inc99, %if.end66
  %68 = load i64, i64* %x, align 8, !dbg !3757
  %69 = load i64, i64* %number_pixels.addr, align 8, !dbg !3759
  %cmp68 = icmp slt i64 %68, %69, !dbg !3760
  br i1 %cmp68, label %for.body70, label %for.end101, !dbg !3761

for.body70:                                       ; preds = %for.cond67
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3762
  %red71 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 2, !dbg !3762
  %71 = load i16, i16* %red71, align 2, !dbg !3762
  %call72 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %71), !dbg !3764
  store i16 %call72, i16* %pixel15, align 2, !dbg !3765
  %72 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3766
  %endian73 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %72, i32 0, i32 13, !dbg !3767
  %73 = load i32, i32* %endian73, align 8, !dbg !3767
  %74 = load i16, i16* %pixel15, align 2, !dbg !3768
  %75 = load i8*, i8** %q.addr, align 8, !dbg !3769
  %call74 = call i8* @PopShortPixel(i32 %73, i16 zeroext %74, i8* %75), !dbg !3770
  store i8* %call74, i8** %q.addr, align 8, !dbg !3771
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3772
  %green75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 1, !dbg !3772
  %77 = load i16, i16* %green75, align 2, !dbg !3772
  %call76 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %77), !dbg !3773
  store i16 %call76, i16* %pixel15, align 2, !dbg !3774
  %78 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3775
  %endian77 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %78, i32 0, i32 13, !dbg !3776
  %79 = load i32, i32* %endian77, align 8, !dbg !3776
  %80 = load i16, i16* %pixel15, align 2, !dbg !3777
  %81 = load i8*, i8** %q.addr, align 8, !dbg !3778
  %call78 = call i8* @PopShortPixel(i32 %79, i16 zeroext %80, i8* %81), !dbg !3779
  store i8* %call78, i8** %q.addr, align 8, !dbg !3780
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3781
  %blue79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 0, !dbg !3781
  %83 = load i16, i16* %blue79, align 2, !dbg !3781
  %call80 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %83), !dbg !3782
  store i16 %call80, i16* %pixel15, align 2, !dbg !3783
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3784
  %endian81 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %84, i32 0, i32 13, !dbg !3785
  %85 = load i32, i32* %endian81, align 8, !dbg !3785
  %86 = load i16, i16* %pixel15, align 2, !dbg !3786
  %87 = load i8*, i8** %q.addr, align 8, !dbg !3787
  %call82 = call i8* @PopShortPixel(i32 %85, i16 zeroext %86, i8* %87), !dbg !3788
  store i8* %call82, i8** %q.addr, align 8, !dbg !3789
  %88 = load i16*, i16** %indexes.addr, align 8, !dbg !3790
  %89 = load i64, i64* %x, align 8, !dbg !3790
  %add.ptr83 = getelementptr inbounds i16, i16* %88, i64 %89, !dbg !3790
  %cmp84 = icmp eq i16* %add.ptr83, null, !dbg !3790
  br i1 %cmp84, label %cond.true86, label %cond.false87, !dbg !3790

cond.true86:                                      ; preds = %for.body70
  br label %cond.end90, !dbg !3790

cond.false87:                                     ; preds = %for.body70
  %90 = load i16*, i16** %indexes.addr, align 8, !dbg !3790
  %91 = load i64, i64* %x, align 8, !dbg !3790
  %add.ptr88 = getelementptr inbounds i16, i16* %90, i64 %91, !dbg !3790
  %92 = load i16, i16* %add.ptr88, align 2, !dbg !3790
  %conv89 = zext i16 %92 to i32, !dbg !3790
  br label %cond.end90, !dbg !3790

cond.end90:                                       ; preds = %cond.false87, %cond.true86
  %cond91 = phi i32 [ 0, %cond.true86 ], [ %conv89, %cond.false87 ], !dbg !3790
  %conv92 = trunc i32 %cond91 to i16, !dbg !3790
  %call93 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv92), !dbg !3791
  store i16 %call93, i16* %pixel15, align 2, !dbg !3792
  %93 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3793
  %endian94 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %93, i32 0, i32 13, !dbg !3794
  %94 = load i32, i32* %endian94, align 8, !dbg !3794
  %95 = load i16, i16* %pixel15, align 2, !dbg !3795
  %96 = load i8*, i8** %q.addr, align 8, !dbg !3796
  %call95 = call i8* @PopShortPixel(i32 %94, i16 zeroext %95, i8* %96), !dbg !3797
  store i8* %call95, i8** %q.addr, align 8, !dbg !3798
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3799
  %incdec.ptr96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 1, !dbg !3799
  store %struct._PixelPacket* %incdec.ptr96, %struct._PixelPacket** %p.addr, align 8, !dbg !3799
  %98 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3800
  %pad97 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %98, i32 0, i32 6, !dbg !3801
  %99 = load i64, i64* %pad97, align 8, !dbg !3801
  %100 = load i8*, i8** %q.addr, align 8, !dbg !3802
  %add.ptr98 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !3802
  store i8* %add.ptr98, i8** %q.addr, align 8, !dbg !3802
  br label %for.inc99, !dbg !3803

for.inc99:                                        ; preds = %cond.end90
  %101 = load i64, i64* %x, align 8, !dbg !3804
  %inc100 = add nsw i64 %101, 1, !dbg !3804
  store i64 %inc100, i64* %x, align 8, !dbg !3804
  br label %for.cond67, !dbg !3805, !llvm.loop !3806

for.end101:                                       ; preds = %for.cond67
  br label %sw.epilog, !dbg !3808

sw.bb102:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel103, metadata !3809, metadata !DIExpression()), !dbg !3811
  %102 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3812
  %format104 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %102, i32 0, i32 2, !dbg !3814
  %103 = load i32, i32* %format104, align 8, !dbg !3814
  %cmp105 = icmp eq i32 %103, 1, !dbg !3815
  br i1 %cmp105, label %if.then107, label %if.end138, !dbg !3816

if.then107:                                       ; preds = %sw.bb102
  store i64 0, i64* %x, align 8, !dbg !3817
  br label %for.cond108, !dbg !3820

for.cond108:                                      ; preds = %for.inc135, %if.then107
  %104 = load i64, i64* %x, align 8, !dbg !3821
  %105 = load i64, i64* %number_pixels.addr, align 8, !dbg !3823
  %cmp109 = icmp slt i64 %104, %105, !dbg !3824
  br i1 %cmp109, label %for.body111, label %for.end137, !dbg !3825

for.body111:                                      ; preds = %for.cond108
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3826
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3828
  %red112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 2, !dbg !3828
  %108 = load i16, i16* %red112, align 2, !dbg !3828
  %conv113 = uitofp i16 %108 to float, !dbg !3829
  %109 = load i8*, i8** %q.addr, align 8, !dbg !3830
  %call114 = call i8* @PopFloatPixel(%struct._QuantumInfo* %106, float %conv113, i8* %109), !dbg !3831
  store i8* %call114, i8** %q.addr, align 8, !dbg !3832
  %110 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3833
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3834
  %green115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i32 0, i32 1, !dbg !3834
  %112 = load i16, i16* %green115, align 2, !dbg !3834
  %conv116 = uitofp i16 %112 to float, !dbg !3835
  %113 = load i8*, i8** %q.addr, align 8, !dbg !3836
  %call117 = call i8* @PopFloatPixel(%struct._QuantumInfo* %110, float %conv116, i8* %113), !dbg !3837
  store i8* %call117, i8** %q.addr, align 8, !dbg !3838
  %114 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3839
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3840
  %blue118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 0, !dbg !3840
  %116 = load i16, i16* %blue118, align 2, !dbg !3840
  %conv119 = uitofp i16 %116 to float, !dbg !3841
  %117 = load i8*, i8** %q.addr, align 8, !dbg !3842
  %call120 = call i8* @PopFloatPixel(%struct._QuantumInfo* %114, float %conv119, i8* %117), !dbg !3843
  store i8* %call120, i8** %q.addr, align 8, !dbg !3844
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3845
  %119 = load i16*, i16** %indexes.addr, align 8, !dbg !3846
  %120 = load i64, i64* %x, align 8, !dbg !3846
  %add.ptr121 = getelementptr inbounds i16, i16* %119, i64 %120, !dbg !3846
  %cmp122 = icmp eq i16* %add.ptr121, null, !dbg !3846
  br i1 %cmp122, label %cond.true124, label %cond.false125, !dbg !3846

cond.true124:                                     ; preds = %for.body111
  br label %cond.end128, !dbg !3846

cond.false125:                                    ; preds = %for.body111
  %121 = load i16*, i16** %indexes.addr, align 8, !dbg !3846
  %122 = load i64, i64* %x, align 8, !dbg !3846
  %add.ptr126 = getelementptr inbounds i16, i16* %121, i64 %122, !dbg !3846
  %123 = load i16, i16* %add.ptr126, align 2, !dbg !3846
  %conv127 = zext i16 %123 to i32, !dbg !3846
  br label %cond.end128, !dbg !3846

cond.end128:                                      ; preds = %cond.false125, %cond.true124
  %cond129 = phi i32 [ 0, %cond.true124 ], [ %conv127, %cond.false125 ], !dbg !3846
  %conv130 = sitofp i32 %cond129 to float, !dbg !3847
  %124 = load i8*, i8** %q.addr, align 8, !dbg !3848
  %call131 = call i8* @PopFloatPixel(%struct._QuantumInfo* %118, float %conv130, i8* %124), !dbg !3849
  store i8* %call131, i8** %q.addr, align 8, !dbg !3850
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3851
  %incdec.ptr132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !3851
  store %struct._PixelPacket* %incdec.ptr132, %struct._PixelPacket** %p.addr, align 8, !dbg !3851
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3852
  %pad133 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %126, i32 0, i32 6, !dbg !3853
  %127 = load i64, i64* %pad133, align 8, !dbg !3853
  %128 = load i8*, i8** %q.addr, align 8, !dbg !3854
  %add.ptr134 = getelementptr inbounds i8, i8* %128, i64 %127, !dbg !3854
  store i8* %add.ptr134, i8** %q.addr, align 8, !dbg !3854
  br label %for.inc135, !dbg !3855

for.inc135:                                       ; preds = %cond.end128
  %129 = load i64, i64* %x, align 8, !dbg !3856
  %inc136 = add nsw i64 %129, 1, !dbg !3856
  store i64 %inc136, i64* %x, align 8, !dbg !3856
  br label %for.cond108, !dbg !3857, !llvm.loop !3858

for.end137:                                       ; preds = %for.cond108
  br label %sw.epilog, !dbg !3860

if.end138:                                        ; preds = %sw.bb102
  store i64 0, i64* %x, align 8, !dbg !3861
  br label %for.cond139, !dbg !3863

for.cond139:                                      ; preds = %for.inc171, %if.end138
  %130 = load i64, i64* %x, align 8, !dbg !3864
  %131 = load i64, i64* %number_pixels.addr, align 8, !dbg !3866
  %cmp140 = icmp slt i64 %130, %131, !dbg !3867
  br i1 %cmp140, label %for.body142, label %for.end173, !dbg !3868

for.body142:                                      ; preds = %for.cond139
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3869
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !3869
  %133 = load i16, i16* %red143, align 2, !dbg !3869
  %call144 = call i32 @ScaleQuantumToLong(i16 zeroext %133), !dbg !3871
  store i32 %call144, i32* %pixel103, align 4, !dbg !3872
  %134 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3873
  %endian145 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %134, i32 0, i32 13, !dbg !3874
  %135 = load i32, i32* %endian145, align 8, !dbg !3874
  %136 = load i32, i32* %pixel103, align 4, !dbg !3875
  %137 = load i8*, i8** %q.addr, align 8, !dbg !3876
  %call146 = call i8* @PopLongPixel(i32 %135, i32 %136, i8* %137), !dbg !3877
  store i8* %call146, i8** %q.addr, align 8, !dbg !3878
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3879
  %green147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 1, !dbg !3879
  %139 = load i16, i16* %green147, align 2, !dbg !3879
  %call148 = call i32 @ScaleQuantumToLong(i16 zeroext %139), !dbg !3880
  store i32 %call148, i32* %pixel103, align 4, !dbg !3881
  %140 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3882
  %endian149 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %140, i32 0, i32 13, !dbg !3883
  %141 = load i32, i32* %endian149, align 8, !dbg !3883
  %142 = load i32, i32* %pixel103, align 4, !dbg !3884
  %143 = load i8*, i8** %q.addr, align 8, !dbg !3885
  %call150 = call i8* @PopLongPixel(i32 %141, i32 %142, i8* %143), !dbg !3886
  store i8* %call150, i8** %q.addr, align 8, !dbg !3887
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3888
  %blue151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 0, !dbg !3888
  %145 = load i16, i16* %blue151, align 2, !dbg !3888
  %call152 = call i32 @ScaleQuantumToLong(i16 zeroext %145), !dbg !3889
  store i32 %call152, i32* %pixel103, align 4, !dbg !3890
  %146 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3891
  %endian153 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %146, i32 0, i32 13, !dbg !3892
  %147 = load i32, i32* %endian153, align 8, !dbg !3892
  %148 = load i32, i32* %pixel103, align 4, !dbg !3893
  %149 = load i8*, i8** %q.addr, align 8, !dbg !3894
  %call154 = call i8* @PopLongPixel(i32 %147, i32 %148, i8* %149), !dbg !3895
  store i8* %call154, i8** %q.addr, align 8, !dbg !3896
  %150 = load i16*, i16** %indexes.addr, align 8, !dbg !3897
  %151 = load i64, i64* %x, align 8, !dbg !3897
  %add.ptr155 = getelementptr inbounds i16, i16* %150, i64 %151, !dbg !3897
  %cmp156 = icmp eq i16* %add.ptr155, null, !dbg !3897
  br i1 %cmp156, label %cond.true158, label %cond.false159, !dbg !3897

cond.true158:                                     ; preds = %for.body142
  br label %cond.end162, !dbg !3897

cond.false159:                                    ; preds = %for.body142
  %152 = load i16*, i16** %indexes.addr, align 8, !dbg !3897
  %153 = load i64, i64* %x, align 8, !dbg !3897
  %add.ptr160 = getelementptr inbounds i16, i16* %152, i64 %153, !dbg !3897
  %154 = load i16, i16* %add.ptr160, align 2, !dbg !3897
  %conv161 = zext i16 %154 to i32, !dbg !3897
  br label %cond.end162, !dbg !3897

cond.end162:                                      ; preds = %cond.false159, %cond.true158
  %cond163 = phi i32 [ 0, %cond.true158 ], [ %conv161, %cond.false159 ], !dbg !3897
  %conv164 = trunc i32 %cond163 to i16, !dbg !3897
  %call165 = call i32 @ScaleQuantumToLong(i16 zeroext %conv164), !dbg !3898
  store i32 %call165, i32* %pixel103, align 4, !dbg !3899
  %155 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3900
  %endian166 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %155, i32 0, i32 13, !dbg !3901
  %156 = load i32, i32* %endian166, align 8, !dbg !3901
  %157 = load i32, i32* %pixel103, align 4, !dbg !3902
  %158 = load i8*, i8** %q.addr, align 8, !dbg !3903
  %call167 = call i8* @PopLongPixel(i32 %156, i32 %157, i8* %158), !dbg !3904
  store i8* %call167, i8** %q.addr, align 8, !dbg !3905
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3906
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 1, !dbg !3906
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %p.addr, align 8, !dbg !3906
  %160 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3907
  %pad169 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %160, i32 0, i32 6, !dbg !3908
  %161 = load i64, i64* %pad169, align 8, !dbg !3908
  %162 = load i8*, i8** %q.addr, align 8, !dbg !3909
  %add.ptr170 = getelementptr inbounds i8, i8* %162, i64 %161, !dbg !3909
  store i8* %add.ptr170, i8** %q.addr, align 8, !dbg !3909
  br label %for.inc171, !dbg !3910

for.inc171:                                       ; preds = %cond.end162
  %163 = load i64, i64* %x, align 8, !dbg !3911
  %inc172 = add nsw i64 %163, 1, !dbg !3911
  store i64 %inc172, i64* %x, align 8, !dbg !3911
  br label %for.cond139, !dbg !3912, !llvm.loop !3913

for.end173:                                       ; preds = %for.cond139
  br label %sw.epilog, !dbg !3915

sw.bb174:                                         ; preds = %if.end
  %164 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3916
  %format175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %164, i32 0, i32 2, !dbg !3919
  %165 = load i32, i32* %format175, align 8, !dbg !3919
  %cmp176 = icmp eq i32 %165, 1, !dbg !3920
  br i1 %cmp176, label %if.then178, label %if.end209, !dbg !3921

if.then178:                                       ; preds = %sw.bb174
  store i64 0, i64* %x, align 8, !dbg !3922
  br label %for.cond179, !dbg !3925

for.cond179:                                      ; preds = %for.inc206, %if.then178
  %166 = load i64, i64* %x, align 8, !dbg !3926
  %167 = load i64, i64* %number_pixels.addr, align 8, !dbg !3928
  %cmp180 = icmp slt i64 %166, %167, !dbg !3929
  br i1 %cmp180, label %for.body182, label %for.end208, !dbg !3930

for.body182:                                      ; preds = %for.cond179
  %168 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3931
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3933
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i32 0, i32 2, !dbg !3933
  %170 = load i16, i16* %red183, align 2, !dbg !3933
  %conv184 = uitofp i16 %170 to double, !dbg !3934
  %171 = load i8*, i8** %q.addr, align 8, !dbg !3935
  %call185 = call i8* @PopDoublePixel(%struct._QuantumInfo* %168, double %conv184, i8* %171), !dbg !3936
  store i8* %call185, i8** %q.addr, align 8, !dbg !3937
  %172 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3938
  %173 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3939
  %green186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %173, i32 0, i32 1, !dbg !3939
  %174 = load i16, i16* %green186, align 2, !dbg !3939
  %conv187 = uitofp i16 %174 to double, !dbg !3940
  %175 = load i8*, i8** %q.addr, align 8, !dbg !3941
  %call188 = call i8* @PopDoublePixel(%struct._QuantumInfo* %172, double %conv187, i8* %175), !dbg !3942
  store i8* %call188, i8** %q.addr, align 8, !dbg !3943
  %176 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3944
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3945
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 0, i32 0, !dbg !3945
  %178 = load i16, i16* %blue189, align 2, !dbg !3945
  %conv190 = uitofp i16 %178 to double, !dbg !3946
  %179 = load i8*, i8** %q.addr, align 8, !dbg !3947
  %call191 = call i8* @PopDoublePixel(%struct._QuantumInfo* %176, double %conv190, i8* %179), !dbg !3948
  store i8* %call191, i8** %q.addr, align 8, !dbg !3949
  %180 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3950
  %181 = load i16*, i16** %indexes.addr, align 8, !dbg !3951
  %182 = load i64, i64* %x, align 8, !dbg !3951
  %add.ptr192 = getelementptr inbounds i16, i16* %181, i64 %182, !dbg !3951
  %cmp193 = icmp eq i16* %add.ptr192, null, !dbg !3951
  br i1 %cmp193, label %cond.true195, label %cond.false196, !dbg !3951

cond.true195:                                     ; preds = %for.body182
  br label %cond.end199, !dbg !3951

cond.false196:                                    ; preds = %for.body182
  %183 = load i16*, i16** %indexes.addr, align 8, !dbg !3951
  %184 = load i64, i64* %x, align 8, !dbg !3951
  %add.ptr197 = getelementptr inbounds i16, i16* %183, i64 %184, !dbg !3951
  %185 = load i16, i16* %add.ptr197, align 2, !dbg !3951
  %conv198 = zext i16 %185 to i32, !dbg !3951
  br label %cond.end199, !dbg !3951

cond.end199:                                      ; preds = %cond.false196, %cond.true195
  %cond200 = phi i32 [ 0, %cond.true195 ], [ %conv198, %cond.false196 ], !dbg !3951
  %conv201 = sitofp i32 %cond200 to double, !dbg !3952
  %186 = load i8*, i8** %q.addr, align 8, !dbg !3953
  %call202 = call i8* @PopDoublePixel(%struct._QuantumInfo* %180, double %conv201, i8* %186), !dbg !3954
  store i8* %call202, i8** %q.addr, align 8, !dbg !3955
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3956
  %incdec.ptr203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 1, !dbg !3956
  store %struct._PixelPacket* %incdec.ptr203, %struct._PixelPacket** %p.addr, align 8, !dbg !3956
  %188 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3957
  %pad204 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %188, i32 0, i32 6, !dbg !3958
  %189 = load i64, i64* %pad204, align 8, !dbg !3958
  %190 = load i8*, i8** %q.addr, align 8, !dbg !3959
  %add.ptr205 = getelementptr inbounds i8, i8* %190, i64 %189, !dbg !3959
  store i8* %add.ptr205, i8** %q.addr, align 8, !dbg !3959
  br label %for.inc206, !dbg !3960

for.inc206:                                       ; preds = %cond.end199
  %191 = load i64, i64* %x, align 8, !dbg !3961
  %inc207 = add nsw i64 %191, 1, !dbg !3961
  store i64 %inc207, i64* %x, align 8, !dbg !3961
  br label %for.cond179, !dbg !3962, !llvm.loop !3963

for.end208:                                       ; preds = %for.cond179
  br label %sw.epilog, !dbg !3965

if.end209:                                        ; preds = %sw.bb174
  br label %sw.default, !dbg !3966

sw.default:                                       ; preds = %if.end, %if.end209
  %192 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3967
  %depth210 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %192, i32 0, i32 0, !dbg !3969
  %193 = load i64, i64* %depth210, align 8, !dbg !3969
  %call211 = call i64 @GetQuantumRange(i64 %193), !dbg !3970
  store i64 %call211, i64* %range, align 8, !dbg !3971
  store i64 0, i64* %x, align 8, !dbg !3972
  br label %for.cond212, !dbg !3974

for.cond212:                                      ; preds = %for.inc240, %sw.default
  %194 = load i64, i64* %x, align 8, !dbg !3975
  %195 = load i64, i64* %number_pixels.addr, align 8, !dbg !3977
  %cmp213 = icmp slt i64 %194, %195, !dbg !3978
  br i1 %cmp213, label %for.body215, label %for.end242, !dbg !3979

for.body215:                                      ; preds = %for.cond212
  %196 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3980
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3982
  %red216 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 2, !dbg !3982
  %198 = load i16, i16* %red216, align 2, !dbg !3982
  %199 = load i64, i64* %range, align 8, !dbg !3983
  %call217 = call i64 @ScaleQuantumToAny(i16 zeroext %198, i64 %199), !dbg !3984
  %200 = load i8*, i8** %q.addr, align 8, !dbg !3985
  %call218 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %196, i64 %call217, i8* %200), !dbg !3986
  store i8* %call218, i8** %q.addr, align 8, !dbg !3987
  %201 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3988
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3989
  %green219 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 1, !dbg !3989
  %203 = load i16, i16* %green219, align 2, !dbg !3989
  %204 = load i64, i64* %range, align 8, !dbg !3990
  %call220 = call i64 @ScaleQuantumToAny(i16 zeroext %203, i64 %204), !dbg !3991
  %205 = load i8*, i8** %q.addr, align 8, !dbg !3992
  %call221 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %201, i64 %call220, i8* %205), !dbg !3993
  store i8* %call221, i8** %q.addr, align 8, !dbg !3994
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3995
  %207 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3996
  %blue222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %207, i32 0, i32 0, !dbg !3996
  %208 = load i16, i16* %blue222, align 2, !dbg !3996
  %209 = load i64, i64* %range, align 8, !dbg !3997
  %call223 = call i64 @ScaleQuantumToAny(i16 zeroext %208, i64 %209), !dbg !3998
  %210 = load i8*, i8** %q.addr, align 8, !dbg !3999
  %call224 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %206, i64 %call223, i8* %210), !dbg !4000
  store i8* %call224, i8** %q.addr, align 8, !dbg !4001
  %211 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4002
  %212 = load i16*, i16** %indexes.addr, align 8, !dbg !4003
  %213 = load i64, i64* %x, align 8, !dbg !4003
  %add.ptr225 = getelementptr inbounds i16, i16* %212, i64 %213, !dbg !4003
  %cmp226 = icmp eq i16* %add.ptr225, null, !dbg !4003
  br i1 %cmp226, label %cond.true228, label %cond.false229, !dbg !4003

cond.true228:                                     ; preds = %for.body215
  br label %cond.end232, !dbg !4003

cond.false229:                                    ; preds = %for.body215
  %214 = load i16*, i16** %indexes.addr, align 8, !dbg !4003
  %215 = load i64, i64* %x, align 8, !dbg !4003
  %add.ptr230 = getelementptr inbounds i16, i16* %214, i64 %215, !dbg !4003
  %216 = load i16, i16* %add.ptr230, align 2, !dbg !4003
  %conv231 = zext i16 %216 to i32, !dbg !4003
  br label %cond.end232, !dbg !4003

cond.end232:                                      ; preds = %cond.false229, %cond.true228
  %cond233 = phi i32 [ 0, %cond.true228 ], [ %conv231, %cond.false229 ], !dbg !4003
  %conv234 = trunc i32 %cond233 to i16, !dbg !4003
  %217 = load i64, i64* %range, align 8, !dbg !4004
  %call235 = call i64 @ScaleQuantumToAny(i16 zeroext %conv234, i64 %217), !dbg !4005
  %218 = load i8*, i8** %q.addr, align 8, !dbg !4006
  %call236 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %211, i64 %call235, i8* %218), !dbg !4007
  store i8* %call236, i8** %q.addr, align 8, !dbg !4008
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4009
  %incdec.ptr237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %219, i32 1, !dbg !4009
  store %struct._PixelPacket* %incdec.ptr237, %struct._PixelPacket** %p.addr, align 8, !dbg !4009
  %220 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4010
  %pad238 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %220, i32 0, i32 6, !dbg !4011
  %221 = load i64, i64* %pad238, align 8, !dbg !4011
  %222 = load i8*, i8** %q.addr, align 8, !dbg !4012
  %add.ptr239 = getelementptr inbounds i8, i8* %222, i64 %221, !dbg !4012
  store i8* %add.ptr239, i8** %q.addr, align 8, !dbg !4012
  br label %for.inc240, !dbg !4013

for.inc240:                                       ; preds = %cond.end232
  %223 = load i64, i64* %x, align 8, !dbg !4014
  %inc241 = add nsw i64 %223, 1, !dbg !4014
  store i64 %inc241, i64* %x, align 8, !dbg !4014
  br label %for.cond212, !dbg !4015, !llvm.loop !4016

for.end242:                                       ; preds = %for.cond212
  br label %sw.epilog, !dbg !4018

sw.epilog:                                        ; preds = %if.then, %for.end242, %for.end208, %for.end173, %for.end137, %for.end101, %for.end65, %for.end
  ret void, !dbg !4019
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportCMYKAQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i16* noalias %indexes, i8* noalias %q, %struct._ExceptionInfo* %exception) #0 !dbg !4020 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %q.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel19 = alloca i16, align 2
  %pixel123 = alloca i32, align 4
  %pixel132 = alloca float, align 4
  %pixel212 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4021, metadata !DIExpression()), !dbg !4022
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !4029, metadata !DIExpression()), !dbg !4030
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !4031, metadata !DIExpression()), !dbg !4032
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4033, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.declare(metadata i64* %range, metadata !4035, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4037, metadata !DIExpression()), !dbg !4038
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4039
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !4041
  %1 = load i32, i32* %colorspace, align 4, !dbg !4041
  %cmp = icmp ne i32 %1, 12, !dbg !4042
  br i1 %cmp, label %if.then, label %if.end, !dbg !4043

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4044
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4046
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !4047
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4046
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1371, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !4048
  br label %sw.epilog, !dbg !4049

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4050
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !4051
  %5 = load i64, i64* %depth, align 8, !dbg !4051
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb18
    i64 32, label %sw.bb122
    i64 64, label %sw.bb207
  ], !dbg !4052

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !4053, metadata !DIExpression()), !dbg !4056
  store i64 0, i64* %x, align 8, !dbg !4057
  br label %for.cond, !dbg !4059

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !4060
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !4062
  %cmp1 = icmp slt i64 %6, %7, !dbg !4063
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4064

for.body:                                         ; preds = %for.cond
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4065
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 2, !dbg !4065
  %9 = load i16, i16* %red, align 2, !dbg !4065
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %9), !dbg !4067
  store i8 %call2, i8* %pixel, align 1, !dbg !4068
  %10 = load i8, i8* %pixel, align 1, !dbg !4069
  %11 = load i8*, i8** %q.addr, align 8, !dbg !4070
  %call3 = call i8* @PopCharPixel(i8 zeroext %10, i8* %11), !dbg !4071
  store i8* %call3, i8** %q.addr, align 8, !dbg !4072
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4073
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 1, !dbg !4073
  %13 = load i16, i16* %green, align 2, !dbg !4073
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %13), !dbg !4074
  store i8 %call4, i8* %pixel, align 1, !dbg !4075
  %14 = load i8, i8* %pixel, align 1, !dbg !4076
  %15 = load i8*, i8** %q.addr, align 8, !dbg !4077
  %call5 = call i8* @PopCharPixel(i8 zeroext %14, i8* %15), !dbg !4078
  store i8* %call5, i8** %q.addr, align 8, !dbg !4079
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4080
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 0, !dbg !4080
  %17 = load i16, i16* %blue, align 2, !dbg !4080
  %call6 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %17), !dbg !4081
  store i8 %call6, i8* %pixel, align 1, !dbg !4082
  %18 = load i8, i8* %pixel, align 1, !dbg !4083
  %19 = load i8*, i8** %q.addr, align 8, !dbg !4084
  %call7 = call i8* @PopCharPixel(i8 zeroext %18, i8* %19), !dbg !4085
  store i8* %call7, i8** %q.addr, align 8, !dbg !4086
  %20 = load i16*, i16** %indexes.addr, align 8, !dbg !4087
  %21 = load i64, i64* %x, align 8, !dbg !4087
  %add.ptr = getelementptr inbounds i16, i16* %20, i64 %21, !dbg !4087
  %cmp8 = icmp eq i16* %add.ptr, null, !dbg !4087
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !4087

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !4087

cond.false:                                       ; preds = %for.body
  %22 = load i16*, i16** %indexes.addr, align 8, !dbg !4087
  %23 = load i64, i64* %x, align 8, !dbg !4087
  %add.ptr9 = getelementptr inbounds i16, i16* %22, i64 %23, !dbg !4087
  %24 = load i16, i16* %add.ptr9, align 2, !dbg !4087
  %conv = zext i16 %24 to i32, !dbg !4087
  br label %cond.end, !dbg !4087

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !4087
  %conv10 = trunc i32 %cond to i16, !dbg !4087
  %call11 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv10), !dbg !4088
  store i8 %call11, i8* %pixel, align 1, !dbg !4089
  %25 = load i8, i8* %pixel, align 1, !dbg !4090
  %26 = load i8*, i8** %q.addr, align 8, !dbg !4091
  %call12 = call i8* @PopCharPixel(i8 zeroext %25, i8* %26), !dbg !4092
  store i8* %call12, i8** %q.addr, align 8, !dbg !4093
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4094
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 3, !dbg !4094
  %28 = load i16, i16* %opacity, align 2, !dbg !4094
  %conv13 = zext i16 %28 to i32, !dbg !4094
  %sub = sub nsw i32 65535, %conv13, !dbg !4095
  %conv14 = trunc i32 %sub to i16, !dbg !4096
  %call15 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv14), !dbg !4097
  store i8 %call15, i8* %pixel, align 1, !dbg !4098
  %29 = load i8, i8* %pixel, align 1, !dbg !4099
  %30 = load i8*, i8** %q.addr, align 8, !dbg !4100
  %call16 = call i8* @PopCharPixel(i8 zeroext %29, i8* %30), !dbg !4101
  store i8* %call16, i8** %q.addr, align 8, !dbg !4102
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4103
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 1, !dbg !4103
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !4103
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4104
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 6, !dbg !4105
  %33 = load i64, i64* %pad, align 8, !dbg !4105
  %34 = load i8*, i8** %q.addr, align 8, !dbg !4106
  %add.ptr17 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !4106
  store i8* %add.ptr17, i8** %q.addr, align 8, !dbg !4106
  br label %for.inc, !dbg !4107

for.inc:                                          ; preds = %cond.end
  %35 = load i64, i64* %x, align 8, !dbg !4108
  %inc = add nsw i64 %35, 1, !dbg !4108
  store i64 %inc, i64* %x, align 8, !dbg !4108
  br label %for.cond, !dbg !4109, !llvm.loop !4110

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4112

sw.bb18:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel19, metadata !4113, metadata !DIExpression()), !dbg !4115
  %36 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4116
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %36, i32 0, i32 2, !dbg !4118
  %37 = load i32, i32* %format, align 8, !dbg !4118
  %cmp20 = icmp eq i32 %37, 1, !dbg !4119
  br i1 %cmp20, label %if.then22, label %if.end79, !dbg !4120

if.then22:                                        ; preds = %sw.bb18
  store i64 0, i64* %x, align 8, !dbg !4121
  br label %for.cond23, !dbg !4124

for.cond23:                                       ; preds = %for.inc76, %if.then22
  %38 = load i64, i64* %x, align 8, !dbg !4125
  %39 = load i64, i64* %number_pixels.addr, align 8, !dbg !4127
  %cmp24 = icmp slt i64 %38, %39, !dbg !4128
  br i1 %cmp24, label %for.body26, label %for.end78, !dbg !4129

for.body26:                                       ; preds = %for.cond23
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4130
  %red27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 2, !dbg !4130
  %41 = load i16, i16* %red27, align 2, !dbg !4130
  %conv28 = zext i16 %41 to i32, !dbg !4130
  %conv29 = sitofp i32 %conv28 to double, !dbg !4130
  %mul = fmul double 0x3EF0001000100010, %conv29, !dbg !4132
  %conv30 = fptrunc double %mul to float, !dbg !4133
  %call31 = call zeroext i16 @SinglePrecisionToHalf(float %conv30), !dbg !4134
  store i16 %call31, i16* %pixel19, align 2, !dbg !4135
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4136
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 13, !dbg !4137
  %43 = load i32, i32* %endian, align 8, !dbg !4137
  %44 = load i16, i16* %pixel19, align 2, !dbg !4138
  %45 = load i8*, i8** %q.addr, align 8, !dbg !4139
  %call32 = call i8* @PopShortPixel(i32 %43, i16 zeroext %44, i8* %45), !dbg !4140
  store i8* %call32, i8** %q.addr, align 8, !dbg !4141
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4142
  %green33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 1, !dbg !4142
  %47 = load i16, i16* %green33, align 2, !dbg !4142
  %conv34 = zext i16 %47 to i32, !dbg !4142
  %conv35 = sitofp i32 %conv34 to double, !dbg !4142
  %mul36 = fmul double 0x3EF0001000100010, %conv35, !dbg !4143
  %conv37 = fptrunc double %mul36 to float, !dbg !4144
  %call38 = call zeroext i16 @SinglePrecisionToHalf(float %conv37), !dbg !4145
  store i16 %call38, i16* %pixel19, align 2, !dbg !4146
  %48 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4147
  %endian39 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %48, i32 0, i32 13, !dbg !4148
  %49 = load i32, i32* %endian39, align 8, !dbg !4148
  %50 = load i16, i16* %pixel19, align 2, !dbg !4149
  %51 = load i8*, i8** %q.addr, align 8, !dbg !4150
  %call40 = call i8* @PopShortPixel(i32 %49, i16 zeroext %50, i8* %51), !dbg !4151
  store i8* %call40, i8** %q.addr, align 8, !dbg !4152
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4153
  %blue41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !4153
  %53 = load i16, i16* %blue41, align 2, !dbg !4153
  %conv42 = zext i16 %53 to i32, !dbg !4153
  %conv43 = sitofp i32 %conv42 to double, !dbg !4153
  %mul44 = fmul double 0x3EF0001000100010, %conv43, !dbg !4154
  %conv45 = fptrunc double %mul44 to float, !dbg !4155
  %call46 = call zeroext i16 @SinglePrecisionToHalf(float %conv45), !dbg !4156
  store i16 %call46, i16* %pixel19, align 2, !dbg !4157
  %54 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4158
  %endian47 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %54, i32 0, i32 13, !dbg !4159
  %55 = load i32, i32* %endian47, align 8, !dbg !4159
  %56 = load i16, i16* %pixel19, align 2, !dbg !4160
  %57 = load i8*, i8** %q.addr, align 8, !dbg !4161
  %call48 = call i8* @PopShortPixel(i32 %55, i16 zeroext %56, i8* %57), !dbg !4162
  store i8* %call48, i8** %q.addr, align 8, !dbg !4163
  %58 = load i16*, i16** %indexes.addr, align 8, !dbg !4164
  %59 = load i64, i64* %x, align 8, !dbg !4164
  %add.ptr49 = getelementptr inbounds i16, i16* %58, i64 %59, !dbg !4164
  %cmp50 = icmp eq i16* %add.ptr49, null, !dbg !4164
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !4164

cond.true52:                                      ; preds = %for.body26
  br label %cond.end56, !dbg !4164

cond.false53:                                     ; preds = %for.body26
  %60 = load i16*, i16** %indexes.addr, align 8, !dbg !4164
  %61 = load i64, i64* %x, align 8, !dbg !4164
  %add.ptr54 = getelementptr inbounds i16, i16* %60, i64 %61, !dbg !4164
  %62 = load i16, i16* %add.ptr54, align 2, !dbg !4164
  %conv55 = zext i16 %62 to i32, !dbg !4164
  br label %cond.end56, !dbg !4164

cond.end56:                                       ; preds = %cond.false53, %cond.true52
  %cond57 = phi i32 [ 0, %cond.true52 ], [ %conv55, %cond.false53 ], !dbg !4164
  %conv58 = sitofp i32 %cond57 to double, !dbg !4164
  %mul59 = fmul double 0x3EF0001000100010, %conv58, !dbg !4165
  %conv60 = fptrunc double %mul59 to float, !dbg !4166
  %call61 = call zeroext i16 @SinglePrecisionToHalf(float %conv60), !dbg !4167
  store i16 %call61, i16* %pixel19, align 2, !dbg !4168
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4169
  %endian62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 13, !dbg !4170
  %64 = load i32, i32* %endian62, align 8, !dbg !4170
  %65 = load i16, i16* %pixel19, align 2, !dbg !4171
  %66 = load i8*, i8** %q.addr, align 8, !dbg !4172
  %call63 = call i8* @PopShortPixel(i32 %64, i16 zeroext %65, i8* %66), !dbg !4173
  store i8* %call63, i8** %q.addr, align 8, !dbg !4174
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4175
  %opacity64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !4175
  %68 = load i16, i16* %opacity64, align 2, !dbg !4175
  %conv65 = zext i16 %68 to i32, !dbg !4175
  %sub66 = sub nsw i32 65535, %conv65, !dbg !4175
  %conv67 = sitofp i32 %sub66 to double, !dbg !4175
  %mul68 = fmul double 0x3EF0001000100010, %conv67, !dbg !4176
  %conv69 = fptrunc double %mul68 to float, !dbg !4177
  %call70 = call zeroext i16 @SinglePrecisionToHalf(float %conv69), !dbg !4178
  store i16 %call70, i16* %pixel19, align 2, !dbg !4179
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4180
  %endian71 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %69, i32 0, i32 13, !dbg !4181
  %70 = load i32, i32* %endian71, align 8, !dbg !4181
  %71 = load i16, i16* %pixel19, align 2, !dbg !4182
  %72 = load i8*, i8** %q.addr, align 8, !dbg !4183
  %call72 = call i8* @PopShortPixel(i32 %70, i16 zeroext %71, i8* %72), !dbg !4184
  store i8* %call72, i8** %q.addr, align 8, !dbg !4185
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4186
  %incdec.ptr73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 1, !dbg !4186
  store %struct._PixelPacket* %incdec.ptr73, %struct._PixelPacket** %p.addr, align 8, !dbg !4186
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4187
  %pad74 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %74, i32 0, i32 6, !dbg !4188
  %75 = load i64, i64* %pad74, align 8, !dbg !4188
  %76 = load i8*, i8** %q.addr, align 8, !dbg !4189
  %add.ptr75 = getelementptr inbounds i8, i8* %76, i64 %75, !dbg !4189
  store i8* %add.ptr75, i8** %q.addr, align 8, !dbg !4189
  br label %for.inc76, !dbg !4190

for.inc76:                                        ; preds = %cond.end56
  %77 = load i64, i64* %x, align 8, !dbg !4191
  %inc77 = add nsw i64 %77, 1, !dbg !4191
  store i64 %inc77, i64* %x, align 8, !dbg !4191
  br label %for.cond23, !dbg !4192, !llvm.loop !4193

for.end78:                                        ; preds = %for.cond23
  br label %sw.epilog, !dbg !4195

if.end79:                                         ; preds = %sw.bb18
  store i64 0, i64* %x, align 8, !dbg !4196
  br label %for.cond80, !dbg !4198

for.cond80:                                       ; preds = %for.inc119, %if.end79
  %78 = load i64, i64* %x, align 8, !dbg !4199
  %79 = load i64, i64* %number_pixels.addr, align 8, !dbg !4201
  %cmp81 = icmp slt i64 %78, %79, !dbg !4202
  br i1 %cmp81, label %for.body83, label %for.end121, !dbg !4203

for.body83:                                       ; preds = %for.cond80
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4204
  %red84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 2, !dbg !4204
  %81 = load i16, i16* %red84, align 2, !dbg !4204
  %call85 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %81), !dbg !4206
  store i16 %call85, i16* %pixel19, align 2, !dbg !4207
  %82 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4208
  %endian86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %82, i32 0, i32 13, !dbg !4209
  %83 = load i32, i32* %endian86, align 8, !dbg !4209
  %84 = load i16, i16* %pixel19, align 2, !dbg !4210
  %85 = load i8*, i8** %q.addr, align 8, !dbg !4211
  %call87 = call i8* @PopShortPixel(i32 %83, i16 zeroext %84, i8* %85), !dbg !4212
  store i8* %call87, i8** %q.addr, align 8, !dbg !4213
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4214
  %green88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 1, !dbg !4214
  %87 = load i16, i16* %green88, align 2, !dbg !4214
  %call89 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %87), !dbg !4215
  store i16 %call89, i16* %pixel19, align 2, !dbg !4216
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4217
  %endian90 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 13, !dbg !4218
  %89 = load i32, i32* %endian90, align 8, !dbg !4218
  %90 = load i16, i16* %pixel19, align 2, !dbg !4219
  %91 = load i8*, i8** %q.addr, align 8, !dbg !4220
  %call91 = call i8* @PopShortPixel(i32 %89, i16 zeroext %90, i8* %91), !dbg !4221
  store i8* %call91, i8** %q.addr, align 8, !dbg !4222
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4223
  %blue92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 0, !dbg !4223
  %93 = load i16, i16* %blue92, align 2, !dbg !4223
  %call93 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %93), !dbg !4224
  store i16 %call93, i16* %pixel19, align 2, !dbg !4225
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4226
  %endian94 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %94, i32 0, i32 13, !dbg !4227
  %95 = load i32, i32* %endian94, align 8, !dbg !4227
  %96 = load i16, i16* %pixel19, align 2, !dbg !4228
  %97 = load i8*, i8** %q.addr, align 8, !dbg !4229
  %call95 = call i8* @PopShortPixel(i32 %95, i16 zeroext %96, i8* %97), !dbg !4230
  store i8* %call95, i8** %q.addr, align 8, !dbg !4231
  %98 = load i16*, i16** %indexes.addr, align 8, !dbg !4232
  %99 = load i64, i64* %x, align 8, !dbg !4232
  %add.ptr96 = getelementptr inbounds i16, i16* %98, i64 %99, !dbg !4232
  %cmp97 = icmp eq i16* %add.ptr96, null, !dbg !4232
  br i1 %cmp97, label %cond.true99, label %cond.false100, !dbg !4232

cond.true99:                                      ; preds = %for.body83
  br label %cond.end103, !dbg !4232

cond.false100:                                    ; preds = %for.body83
  %100 = load i16*, i16** %indexes.addr, align 8, !dbg !4232
  %101 = load i64, i64* %x, align 8, !dbg !4232
  %add.ptr101 = getelementptr inbounds i16, i16* %100, i64 %101, !dbg !4232
  %102 = load i16, i16* %add.ptr101, align 2, !dbg !4232
  %conv102 = zext i16 %102 to i32, !dbg !4232
  br label %cond.end103, !dbg !4232

cond.end103:                                      ; preds = %cond.false100, %cond.true99
  %cond104 = phi i32 [ 0, %cond.true99 ], [ %conv102, %cond.false100 ], !dbg !4232
  %conv105 = trunc i32 %cond104 to i16, !dbg !4232
  %call106 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv105), !dbg !4233
  store i16 %call106, i16* %pixel19, align 2, !dbg !4234
  %103 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4235
  %endian107 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %103, i32 0, i32 13, !dbg !4236
  %104 = load i32, i32* %endian107, align 8, !dbg !4236
  %105 = load i16, i16* %pixel19, align 2, !dbg !4237
  %106 = load i8*, i8** %q.addr, align 8, !dbg !4238
  %call108 = call i8* @PopShortPixel(i32 %104, i16 zeroext %105, i8* %106), !dbg !4239
  store i8* %call108, i8** %q.addr, align 8, !dbg !4240
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4241
  %opacity109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 3, !dbg !4241
  %108 = load i16, i16* %opacity109, align 2, !dbg !4241
  %conv110 = zext i16 %108 to i32, !dbg !4241
  %sub111 = sub nsw i32 65535, %conv110, !dbg !4242
  %conv112 = trunc i32 %sub111 to i16, !dbg !4243
  %call113 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv112), !dbg !4244
  store i16 %call113, i16* %pixel19, align 2, !dbg !4245
  %109 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4246
  %endian114 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %109, i32 0, i32 13, !dbg !4247
  %110 = load i32, i32* %endian114, align 8, !dbg !4247
  %111 = load i16, i16* %pixel19, align 2, !dbg !4248
  %112 = load i8*, i8** %q.addr, align 8, !dbg !4249
  %call115 = call i8* @PopShortPixel(i32 %110, i16 zeroext %111, i8* %112), !dbg !4250
  store i8* %call115, i8** %q.addr, align 8, !dbg !4251
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4252
  %incdec.ptr116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !4252
  store %struct._PixelPacket* %incdec.ptr116, %struct._PixelPacket** %p.addr, align 8, !dbg !4252
  %114 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4253
  %pad117 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %114, i32 0, i32 6, !dbg !4254
  %115 = load i64, i64* %pad117, align 8, !dbg !4254
  %116 = load i8*, i8** %q.addr, align 8, !dbg !4255
  %add.ptr118 = getelementptr inbounds i8, i8* %116, i64 %115, !dbg !4255
  store i8* %add.ptr118, i8** %q.addr, align 8, !dbg !4255
  br label %for.inc119, !dbg !4256

for.inc119:                                       ; preds = %cond.end103
  %117 = load i64, i64* %x, align 8, !dbg !4257
  %inc120 = add nsw i64 %117, 1, !dbg !4257
  store i64 %inc120, i64* %x, align 8, !dbg !4257
  br label %for.cond80, !dbg !4258, !llvm.loop !4259

for.end121:                                       ; preds = %for.cond80
  br label %sw.epilog, !dbg !4261

sw.bb122:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel123, metadata !4262, metadata !DIExpression()), !dbg !4264
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4265
  %format124 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %118, i32 0, i32 2, !dbg !4267
  %119 = load i32, i32* %format124, align 8, !dbg !4267
  %cmp125 = icmp eq i32 %119, 1, !dbg !4268
  br i1 %cmp125, label %if.then127, label %if.end164, !dbg !4269

if.then127:                                       ; preds = %sw.bb122
  store i64 0, i64* %x, align 8, !dbg !4270
  br label %for.cond128, !dbg !4273

for.cond128:                                      ; preds = %for.inc161, %if.then127
  %120 = load i64, i64* %x, align 8, !dbg !4274
  %121 = load i64, i64* %number_pixels.addr, align 8, !dbg !4276
  %cmp129 = icmp slt i64 %120, %121, !dbg !4277
  br i1 %cmp129, label %for.body131, label %for.end163, !dbg !4278

for.body131:                                      ; preds = %for.cond128
  call void @llvm.dbg.declare(metadata float* %pixel132, metadata !4279, metadata !DIExpression()), !dbg !4281
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4282
  %123 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4283
  %red133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %123, i32 0, i32 2, !dbg !4283
  %124 = load i16, i16* %red133, align 2, !dbg !4283
  %conv134 = uitofp i16 %124 to float, !dbg !4284
  %125 = load i8*, i8** %q.addr, align 8, !dbg !4285
  %call135 = call i8* @PopFloatPixel(%struct._QuantumInfo* %122, float %conv134, i8* %125), !dbg !4286
  store i8* %call135, i8** %q.addr, align 8, !dbg !4287
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4288
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4289
  %green136 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 1, !dbg !4289
  %128 = load i16, i16* %green136, align 2, !dbg !4289
  %conv137 = uitofp i16 %128 to float, !dbg !4290
  %129 = load i8*, i8** %q.addr, align 8, !dbg !4291
  %call138 = call i8* @PopFloatPixel(%struct._QuantumInfo* %126, float %conv137, i8* %129), !dbg !4292
  store i8* %call138, i8** %q.addr, align 8, !dbg !4293
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4294
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4295
  %blue139 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 0, !dbg !4295
  %132 = load i16, i16* %blue139, align 2, !dbg !4295
  %conv140 = uitofp i16 %132 to float, !dbg !4296
  %133 = load i8*, i8** %q.addr, align 8, !dbg !4297
  %call141 = call i8* @PopFloatPixel(%struct._QuantumInfo* %130, float %conv140, i8* %133), !dbg !4298
  store i8* %call141, i8** %q.addr, align 8, !dbg !4299
  %134 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4300
  %135 = load i16*, i16** %indexes.addr, align 8, !dbg !4301
  %136 = load i64, i64* %x, align 8, !dbg !4301
  %add.ptr142 = getelementptr inbounds i16, i16* %135, i64 %136, !dbg !4301
  %cmp143 = icmp eq i16* %add.ptr142, null, !dbg !4301
  br i1 %cmp143, label %cond.true145, label %cond.false146, !dbg !4301

cond.true145:                                     ; preds = %for.body131
  br label %cond.end149, !dbg !4301

cond.false146:                                    ; preds = %for.body131
  %137 = load i16*, i16** %indexes.addr, align 8, !dbg !4301
  %138 = load i64, i64* %x, align 8, !dbg !4301
  %add.ptr147 = getelementptr inbounds i16, i16* %137, i64 %138, !dbg !4301
  %139 = load i16, i16* %add.ptr147, align 2, !dbg !4301
  %conv148 = zext i16 %139 to i32, !dbg !4301
  br label %cond.end149, !dbg !4301

cond.end149:                                      ; preds = %cond.false146, %cond.true145
  %cond150 = phi i32 [ 0, %cond.true145 ], [ %conv148, %cond.false146 ], !dbg !4301
  %conv151 = sitofp i32 %cond150 to float, !dbg !4302
  %140 = load i8*, i8** %q.addr, align 8, !dbg !4303
  %call152 = call i8* @PopFloatPixel(%struct._QuantumInfo* %134, float %conv151, i8* %140), !dbg !4304
  store i8* %call152, i8** %q.addr, align 8, !dbg !4305
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4306
  %opacity153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 3, !dbg !4306
  %142 = load i16, i16* %opacity153, align 2, !dbg !4306
  %conv154 = zext i16 %142 to i32, !dbg !4306
  %sub155 = sub nsw i32 65535, %conv154, !dbg !4306
  %conv156 = sitofp i32 %sub155 to float, !dbg !4307
  store float %conv156, float* %pixel132, align 4, !dbg !4308
  %143 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4309
  %144 = load float, float* %pixel132, align 4, !dbg !4310
  %145 = load i8*, i8** %q.addr, align 8, !dbg !4311
  %call157 = call i8* @PopFloatPixel(%struct._QuantumInfo* %143, float %144, i8* %145), !dbg !4312
  store i8* %call157, i8** %q.addr, align 8, !dbg !4313
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4314
  %incdec.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 1, !dbg !4314
  store %struct._PixelPacket* %incdec.ptr158, %struct._PixelPacket** %p.addr, align 8, !dbg !4314
  %147 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4315
  %pad159 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %147, i32 0, i32 6, !dbg !4316
  %148 = load i64, i64* %pad159, align 8, !dbg !4316
  %149 = load i8*, i8** %q.addr, align 8, !dbg !4317
  %add.ptr160 = getelementptr inbounds i8, i8* %149, i64 %148, !dbg !4317
  store i8* %add.ptr160, i8** %q.addr, align 8, !dbg !4317
  br label %for.inc161, !dbg !4318

for.inc161:                                       ; preds = %cond.end149
  %150 = load i64, i64* %x, align 8, !dbg !4319
  %inc162 = add nsw i64 %150, 1, !dbg !4319
  store i64 %inc162, i64* %x, align 8, !dbg !4319
  br label %for.cond128, !dbg !4320, !llvm.loop !4321

for.end163:                                       ; preds = %for.cond128
  br label %sw.epilog, !dbg !4323

if.end164:                                        ; preds = %sw.bb122
  store i64 0, i64* %x, align 8, !dbg !4324
  br label %for.cond165, !dbg !4326

for.cond165:                                      ; preds = %for.inc204, %if.end164
  %151 = load i64, i64* %x, align 8, !dbg !4327
  %152 = load i64, i64* %number_pixels.addr, align 8, !dbg !4329
  %cmp166 = icmp slt i64 %151, %152, !dbg !4330
  br i1 %cmp166, label %for.body168, label %for.end206, !dbg !4331

for.body168:                                      ; preds = %for.cond165
  %153 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4332
  %red169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %153, i32 0, i32 2, !dbg !4332
  %154 = load i16, i16* %red169, align 2, !dbg !4332
  %call170 = call i32 @ScaleQuantumToLong(i16 zeroext %154), !dbg !4334
  store i32 %call170, i32* %pixel123, align 4, !dbg !4335
  %155 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4336
  %endian171 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %155, i32 0, i32 13, !dbg !4337
  %156 = load i32, i32* %endian171, align 8, !dbg !4337
  %157 = load i32, i32* %pixel123, align 4, !dbg !4338
  %158 = load i8*, i8** %q.addr, align 8, !dbg !4339
  %call172 = call i8* @PopLongPixel(i32 %156, i32 %157, i8* %158), !dbg !4340
  store i8* %call172, i8** %q.addr, align 8, !dbg !4341
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4342
  %green173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 1, !dbg !4342
  %160 = load i16, i16* %green173, align 2, !dbg !4342
  %call174 = call i32 @ScaleQuantumToLong(i16 zeroext %160), !dbg !4343
  store i32 %call174, i32* %pixel123, align 4, !dbg !4344
  %161 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4345
  %endian175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %161, i32 0, i32 13, !dbg !4346
  %162 = load i32, i32* %endian175, align 8, !dbg !4346
  %163 = load i32, i32* %pixel123, align 4, !dbg !4347
  %164 = load i8*, i8** %q.addr, align 8, !dbg !4348
  %call176 = call i8* @PopLongPixel(i32 %162, i32 %163, i8* %164), !dbg !4349
  store i8* %call176, i8** %q.addr, align 8, !dbg !4350
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4351
  %blue177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 0, !dbg !4351
  %166 = load i16, i16* %blue177, align 2, !dbg !4351
  %call178 = call i32 @ScaleQuantumToLong(i16 zeroext %166), !dbg !4352
  store i32 %call178, i32* %pixel123, align 4, !dbg !4353
  %167 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4354
  %endian179 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %167, i32 0, i32 13, !dbg !4355
  %168 = load i32, i32* %endian179, align 8, !dbg !4355
  %169 = load i32, i32* %pixel123, align 4, !dbg !4356
  %170 = load i8*, i8** %q.addr, align 8, !dbg !4357
  %call180 = call i8* @PopLongPixel(i32 %168, i32 %169, i8* %170), !dbg !4358
  store i8* %call180, i8** %q.addr, align 8, !dbg !4359
  %171 = load i16*, i16** %indexes.addr, align 8, !dbg !4360
  %172 = load i64, i64* %x, align 8, !dbg !4360
  %add.ptr181 = getelementptr inbounds i16, i16* %171, i64 %172, !dbg !4360
  %cmp182 = icmp eq i16* %add.ptr181, null, !dbg !4360
  br i1 %cmp182, label %cond.true184, label %cond.false185, !dbg !4360

cond.true184:                                     ; preds = %for.body168
  br label %cond.end188, !dbg !4360

cond.false185:                                    ; preds = %for.body168
  %173 = load i16*, i16** %indexes.addr, align 8, !dbg !4360
  %174 = load i64, i64* %x, align 8, !dbg !4360
  %add.ptr186 = getelementptr inbounds i16, i16* %173, i64 %174, !dbg !4360
  %175 = load i16, i16* %add.ptr186, align 2, !dbg !4360
  %conv187 = zext i16 %175 to i32, !dbg !4360
  br label %cond.end188, !dbg !4360

cond.end188:                                      ; preds = %cond.false185, %cond.true184
  %cond189 = phi i32 [ 0, %cond.true184 ], [ %conv187, %cond.false185 ], !dbg !4360
  %conv190 = trunc i32 %cond189 to i16, !dbg !4360
  %call191 = call i32 @ScaleQuantumToLong(i16 zeroext %conv190), !dbg !4361
  store i32 %call191, i32* %pixel123, align 4, !dbg !4362
  %176 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4363
  %endian192 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %176, i32 0, i32 13, !dbg !4364
  %177 = load i32, i32* %endian192, align 8, !dbg !4364
  %178 = load i32, i32* %pixel123, align 4, !dbg !4365
  %179 = load i8*, i8** %q.addr, align 8, !dbg !4366
  %call193 = call i8* @PopLongPixel(i32 %177, i32 %178, i8* %179), !dbg !4367
  store i8* %call193, i8** %q.addr, align 8, !dbg !4368
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4369
  %opacity194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 3, !dbg !4369
  %181 = load i16, i16* %opacity194, align 2, !dbg !4369
  %conv195 = zext i16 %181 to i32, !dbg !4369
  %sub196 = sub nsw i32 65535, %conv195, !dbg !4370
  %conv197 = trunc i32 %sub196 to i16, !dbg !4371
  %call198 = call i32 @ScaleQuantumToLong(i16 zeroext %conv197), !dbg !4372
  store i32 %call198, i32* %pixel123, align 4, !dbg !4373
  %182 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4374
  %endian199 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %182, i32 0, i32 13, !dbg !4375
  %183 = load i32, i32* %endian199, align 8, !dbg !4375
  %184 = load i32, i32* %pixel123, align 4, !dbg !4376
  %185 = load i8*, i8** %q.addr, align 8, !dbg !4377
  %call200 = call i8* @PopLongPixel(i32 %183, i32 %184, i8* %185), !dbg !4378
  store i8* %call200, i8** %q.addr, align 8, !dbg !4379
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4380
  %incdec.ptr201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 1, !dbg !4380
  store %struct._PixelPacket* %incdec.ptr201, %struct._PixelPacket** %p.addr, align 8, !dbg !4380
  %187 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4381
  %pad202 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %187, i32 0, i32 6, !dbg !4382
  %188 = load i64, i64* %pad202, align 8, !dbg !4382
  %189 = load i8*, i8** %q.addr, align 8, !dbg !4383
  %add.ptr203 = getelementptr inbounds i8, i8* %189, i64 %188, !dbg !4383
  store i8* %add.ptr203, i8** %q.addr, align 8, !dbg !4383
  br label %for.inc204, !dbg !4384

for.inc204:                                       ; preds = %cond.end188
  %190 = load i64, i64* %x, align 8, !dbg !4385
  %inc205 = add nsw i64 %190, 1, !dbg !4385
  store i64 %inc205, i64* %x, align 8, !dbg !4385
  br label %for.cond165, !dbg !4386, !llvm.loop !4387

for.end206:                                       ; preds = %for.cond165
  br label %sw.epilog, !dbg !4389

sw.bb207:                                         ; preds = %if.end
  %191 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4390
  %format208 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %191, i32 0, i32 2, !dbg !4393
  %192 = load i32, i32* %format208, align 8, !dbg !4393
  %cmp209 = icmp eq i32 %192, 1, !dbg !4394
  br i1 %cmp209, label %if.then211, label %if.end248, !dbg !4395

if.then211:                                       ; preds = %sw.bb207
  call void @llvm.dbg.declare(metadata double* %pixel212, metadata !4396, metadata !DIExpression()), !dbg !4398
  store i64 0, i64* %x, align 8, !dbg !4399
  br label %for.cond213, !dbg !4401

for.cond213:                                      ; preds = %for.inc245, %if.then211
  %193 = load i64, i64* %x, align 8, !dbg !4402
  %194 = load i64, i64* %number_pixels.addr, align 8, !dbg !4404
  %cmp214 = icmp slt i64 %193, %194, !dbg !4405
  br i1 %cmp214, label %for.body216, label %for.end247, !dbg !4406

for.body216:                                      ; preds = %for.cond213
  %195 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4407
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4409
  %red217 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 2, !dbg !4409
  %197 = load i16, i16* %red217, align 2, !dbg !4409
  %conv218 = uitofp i16 %197 to double, !dbg !4410
  %198 = load i8*, i8** %q.addr, align 8, !dbg !4411
  %call219 = call i8* @PopDoublePixel(%struct._QuantumInfo* %195, double %conv218, i8* %198), !dbg !4412
  store i8* %call219, i8** %q.addr, align 8, !dbg !4413
  %199 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4414
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4415
  %green220 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 1, !dbg !4415
  %201 = load i16, i16* %green220, align 2, !dbg !4415
  %conv221 = uitofp i16 %201 to double, !dbg !4416
  %202 = load i8*, i8** %q.addr, align 8, !dbg !4417
  %call222 = call i8* @PopDoublePixel(%struct._QuantumInfo* %199, double %conv221, i8* %202), !dbg !4418
  store i8* %call222, i8** %q.addr, align 8, !dbg !4419
  %203 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4420
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4421
  %blue223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 0, i32 0, !dbg !4421
  %205 = load i16, i16* %blue223, align 2, !dbg !4421
  %conv224 = uitofp i16 %205 to double, !dbg !4422
  %206 = load i8*, i8** %q.addr, align 8, !dbg !4423
  %call225 = call i8* @PopDoublePixel(%struct._QuantumInfo* %203, double %conv224, i8* %206), !dbg !4424
  store i8* %call225, i8** %q.addr, align 8, !dbg !4425
  %207 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4426
  %208 = load i16*, i16** %indexes.addr, align 8, !dbg !4427
  %209 = load i64, i64* %x, align 8, !dbg !4427
  %add.ptr226 = getelementptr inbounds i16, i16* %208, i64 %209, !dbg !4427
  %cmp227 = icmp eq i16* %add.ptr226, null, !dbg !4427
  br i1 %cmp227, label %cond.true229, label %cond.false230, !dbg !4427

cond.true229:                                     ; preds = %for.body216
  br label %cond.end233, !dbg !4427

cond.false230:                                    ; preds = %for.body216
  %210 = load i16*, i16** %indexes.addr, align 8, !dbg !4427
  %211 = load i64, i64* %x, align 8, !dbg !4427
  %add.ptr231 = getelementptr inbounds i16, i16* %210, i64 %211, !dbg !4427
  %212 = load i16, i16* %add.ptr231, align 2, !dbg !4427
  %conv232 = zext i16 %212 to i32, !dbg !4427
  br label %cond.end233, !dbg !4427

cond.end233:                                      ; preds = %cond.false230, %cond.true229
  %cond234 = phi i32 [ 0, %cond.true229 ], [ %conv232, %cond.false230 ], !dbg !4427
  %conv235 = sitofp i32 %cond234 to double, !dbg !4428
  %213 = load i8*, i8** %q.addr, align 8, !dbg !4429
  %call236 = call i8* @PopDoublePixel(%struct._QuantumInfo* %207, double %conv235, i8* %213), !dbg !4430
  store i8* %call236, i8** %q.addr, align 8, !dbg !4431
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4432
  %opacity237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 3, !dbg !4432
  %215 = load i16, i16* %opacity237, align 2, !dbg !4432
  %conv238 = zext i16 %215 to i32, !dbg !4432
  %sub239 = sub nsw i32 65535, %conv238, !dbg !4432
  %conv240 = sitofp i32 %sub239 to double, !dbg !4433
  store double %conv240, double* %pixel212, align 8, !dbg !4434
  %216 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4435
  %217 = load double, double* %pixel212, align 8, !dbg !4436
  %218 = load i8*, i8** %q.addr, align 8, !dbg !4437
  %call241 = call i8* @PopDoublePixel(%struct._QuantumInfo* %216, double %217, i8* %218), !dbg !4438
  store i8* %call241, i8** %q.addr, align 8, !dbg !4439
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4440
  %incdec.ptr242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %219, i32 1, !dbg !4440
  store %struct._PixelPacket* %incdec.ptr242, %struct._PixelPacket** %p.addr, align 8, !dbg !4440
  %220 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4441
  %pad243 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %220, i32 0, i32 6, !dbg !4442
  %221 = load i64, i64* %pad243, align 8, !dbg !4442
  %222 = load i8*, i8** %q.addr, align 8, !dbg !4443
  %add.ptr244 = getelementptr inbounds i8, i8* %222, i64 %221, !dbg !4443
  store i8* %add.ptr244, i8** %q.addr, align 8, !dbg !4443
  br label %for.inc245, !dbg !4444

for.inc245:                                       ; preds = %cond.end233
  %223 = load i64, i64* %x, align 8, !dbg !4445
  %inc246 = add nsw i64 %223, 1, !dbg !4445
  store i64 %inc246, i64* %x, align 8, !dbg !4445
  br label %for.cond213, !dbg !4446, !llvm.loop !4447

for.end247:                                       ; preds = %for.cond213
  br label %sw.epilog, !dbg !4449

if.end248:                                        ; preds = %sw.bb207
  br label %sw.default, !dbg !4450

sw.default:                                       ; preds = %if.end, %if.end248
  %224 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4451
  %depth249 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %224, i32 0, i32 0, !dbg !4453
  %225 = load i64, i64* %depth249, align 8, !dbg !4453
  %call250 = call i64 @GetQuantumRange(i64 %225), !dbg !4454
  store i64 %call250, i64* %range, align 8, !dbg !4455
  store i64 0, i64* %x, align 8, !dbg !4456
  br label %for.cond251, !dbg !4458

for.cond251:                                      ; preds = %for.inc282, %sw.default
  %226 = load i64, i64* %x, align 8, !dbg !4459
  %227 = load i64, i64* %number_pixels.addr, align 8, !dbg !4461
  %cmp252 = icmp slt i64 %226, %227, !dbg !4462
  br i1 %cmp252, label %for.body254, label %for.end284, !dbg !4463

for.body254:                                      ; preds = %for.cond251
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4464
  %229 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4466
  %red255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %229, i32 0, i32 2, !dbg !4466
  %230 = load i16, i16* %red255, align 2, !dbg !4466
  %231 = load i64, i64* %range, align 8, !dbg !4467
  %call256 = call i64 @ScaleQuantumToAny(i16 zeroext %230, i64 %231), !dbg !4468
  %232 = load i8*, i8** %q.addr, align 8, !dbg !4469
  %call257 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %228, i64 %call256, i8* %232), !dbg !4470
  store i8* %call257, i8** %q.addr, align 8, !dbg !4471
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4472
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4473
  %green258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !4473
  %235 = load i16, i16* %green258, align 2, !dbg !4473
  %236 = load i64, i64* %range, align 8, !dbg !4474
  %call259 = call i64 @ScaleQuantumToAny(i16 zeroext %235, i64 %236), !dbg !4475
  %237 = load i8*, i8** %q.addr, align 8, !dbg !4476
  %call260 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %233, i64 %call259, i8* %237), !dbg !4477
  store i8* %call260, i8** %q.addr, align 8, !dbg !4478
  %238 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4479
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4480
  %blue261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %239, i32 0, i32 0, !dbg !4480
  %240 = load i16, i16* %blue261, align 2, !dbg !4480
  %241 = load i64, i64* %range, align 8, !dbg !4481
  %call262 = call i64 @ScaleQuantumToAny(i16 zeroext %240, i64 %241), !dbg !4482
  %242 = load i8*, i8** %q.addr, align 8, !dbg !4483
  %call263 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %238, i64 %call262, i8* %242), !dbg !4484
  store i8* %call263, i8** %q.addr, align 8, !dbg !4485
  %243 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4486
  %244 = load i16*, i16** %indexes.addr, align 8, !dbg !4487
  %245 = load i64, i64* %x, align 8, !dbg !4487
  %add.ptr264 = getelementptr inbounds i16, i16* %244, i64 %245, !dbg !4487
  %cmp265 = icmp eq i16* %add.ptr264, null, !dbg !4487
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !4487

cond.true267:                                     ; preds = %for.body254
  br label %cond.end271, !dbg !4487

cond.false268:                                    ; preds = %for.body254
  %246 = load i16*, i16** %indexes.addr, align 8, !dbg !4487
  %247 = load i64, i64* %x, align 8, !dbg !4487
  %add.ptr269 = getelementptr inbounds i16, i16* %246, i64 %247, !dbg !4487
  %248 = load i16, i16* %add.ptr269, align 2, !dbg !4487
  %conv270 = zext i16 %248 to i32, !dbg !4487
  br label %cond.end271, !dbg !4487

cond.end271:                                      ; preds = %cond.false268, %cond.true267
  %cond272 = phi i32 [ 0, %cond.true267 ], [ %conv270, %cond.false268 ], !dbg !4487
  %conv273 = trunc i32 %cond272 to i16, !dbg !4487
  %249 = load i64, i64* %range, align 8, !dbg !4488
  %call274 = call i64 @ScaleQuantumToAny(i16 zeroext %conv273, i64 %249), !dbg !4489
  %250 = load i8*, i8** %q.addr, align 8, !dbg !4490
  %call275 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %243, i64 %call274, i8* %250), !dbg !4491
  store i8* %call275, i8** %q.addr, align 8, !dbg !4492
  %251 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4493
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4494
  %opacity276 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 3, !dbg !4494
  %253 = load i16, i16* %opacity276, align 2, !dbg !4494
  %254 = load i64, i64* %range, align 8, !dbg !4495
  %call277 = call i64 @ScaleQuantumToAny(i16 zeroext %253, i64 %254), !dbg !4496
  %255 = load i8*, i8** %q.addr, align 8, !dbg !4497
  %call278 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %251, i64 %call277, i8* %255), !dbg !4498
  store i8* %call278, i8** %q.addr, align 8, !dbg !4499
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4500
  %incdec.ptr279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 1, !dbg !4500
  store %struct._PixelPacket* %incdec.ptr279, %struct._PixelPacket** %p.addr, align 8, !dbg !4500
  %257 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4501
  %pad280 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %257, i32 0, i32 6, !dbg !4502
  %258 = load i64, i64* %pad280, align 8, !dbg !4502
  %259 = load i8*, i8** %q.addr, align 8, !dbg !4503
  %add.ptr281 = getelementptr inbounds i8, i8* %259, i64 %258, !dbg !4503
  store i8* %add.ptr281, i8** %q.addr, align 8, !dbg !4503
  br label %for.inc282, !dbg !4504

for.inc282:                                       ; preds = %cond.end271
  %260 = load i64, i64* %x, align 8, !dbg !4505
  %inc283 = add nsw i64 %260, 1, !dbg !4505
  store i64 %inc283, i64* %x, align 8, !dbg !4505
  br label %for.cond251, !dbg !4506, !llvm.loop !4507

for.end284:                                       ; preds = %for.cond251
  br label %sw.epilog, !dbg !4509

sw.epilog:                                        ; preds = %if.then, %for.end284, %for.end247, %for.end206, %for.end163, %for.end121, %for.end78, %for.end
  ret void, !dbg !4510
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportGrayQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !4511 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %threshold = alloca float, align 4
  %black = alloca i8, align 1
  %white = alloca i8, align 1
  %pixel = alloca i8, align 1
  %pixel174 = alloca i8, align 1
  %pixel192 = alloca i32, align 4
  %pixel272 = alloca i16, align 2
  %pixel313 = alloca i16, align 2
  %pixel350 = alloca i32, align 4
  %pixel359 = alloca float, align 4
  %pixel393 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.declare(metadata i64* %range, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4526, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !4528, metadata !DIExpression()), !dbg !4529
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4530
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !4531
  %1 = load i64, i64* %depth, align 8, !dbg !4531
  switch i64 %1, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb133
    i64 8, label %sw.bb173
    i64 10, label %sw.bb186
    i64 12, label %sw.bb271
    i64 16, label %sw.bb312
    i64 32, label %sw.bb349
    i64 64, label %sw.bb384
  ], !dbg !4532

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !4533, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata i8* %black, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata i8* %white, metadata !4539, metadata !DIExpression()), !dbg !4540
  store i8 0, i8* %black, align 1, !dbg !4541
  store i8 1, i8* %white, align 1, !dbg !4542
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4543
  %min_is_white = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 7, !dbg !4545
  %3 = load i32, i32* %min_is_white, align 8, !dbg !4545
  %cmp = icmp ne i32 %3, 0, !dbg !4546
  br i1 %cmp, label %if.then, label %if.end, !dbg !4547

if.then:                                          ; preds = %sw.bb
  store i8 1, i8* %black, align 1, !dbg !4548
  store i8 0, i8* %white, align 1, !dbg !4550
  br label %if.end, !dbg !4551

if.end:                                           ; preds = %if.then, %sw.bb
  store float 3.276750e+04, float* %threshold, align 4, !dbg !4552
  %4 = load i64, i64* %number_pixels.addr, align 8, !dbg !4553
  %sub = sub nsw i64 %4, 7, !dbg !4555
  store i64 %sub, i64* %x, align 8, !dbg !4556
  br label %for.cond, !dbg !4557

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %x, align 8, !dbg !4558
  %cmp1 = icmp sgt i64 %5, 0, !dbg !4560
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4561

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %q.addr, align 8, !dbg !4562
  store i8 0, i8* %6, align 1, !dbg !4564
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4565
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4566
  %call = call float @GetPixelLuma(%struct._Image* %7, %struct._PixelPacket* %8), !dbg !4567
  %9 = load float, float* %threshold, align 4, !dbg !4568
  %cmp2 = fcmp olt float %call, %9, !dbg !4569
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !4567

cond.true:                                        ; preds = %for.body
  %10 = load i8, i8* %black, align 1, !dbg !4570
  %conv = zext i8 %10 to i32, !dbg !4570
  br label %cond.end, !dbg !4567

cond.false:                                       ; preds = %for.body
  %11 = load i8, i8* %white, align 1, !dbg !4571
  %conv3 = zext i8 %11 to i32, !dbg !4571
  br label %cond.end, !dbg !4567

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv3, %cond.false ], !dbg !4567
  %shl = shl i32 %cond, 7, !dbg !4572
  %12 = load i8*, i8** %q.addr, align 8, !dbg !4573
  %13 = load i8, i8* %12, align 1, !dbg !4574
  %conv4 = zext i8 %13 to i32, !dbg !4574
  %or = or i32 %conv4, %shl, !dbg !4574
  %conv5 = trunc i32 %or to i8, !dbg !4574
  store i8 %conv5, i8* %12, align 1, !dbg !4574
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4575
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 1, !dbg !4575
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !4575
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4576
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4577
  %call6 = call float @GetPixelLuma(%struct._Image* %15, %struct._PixelPacket* %16), !dbg !4578
  %17 = load float, float* %threshold, align 4, !dbg !4579
  %cmp7 = fcmp olt float %call6, %17, !dbg !4580
  br i1 %cmp7, label %cond.true9, label %cond.false11, !dbg !4578

cond.true9:                                       ; preds = %cond.end
  %18 = load i8, i8* %black, align 1, !dbg !4581
  %conv10 = zext i8 %18 to i32, !dbg !4581
  br label %cond.end13, !dbg !4578

cond.false11:                                     ; preds = %cond.end
  %19 = load i8, i8* %white, align 1, !dbg !4582
  %conv12 = zext i8 %19 to i32, !dbg !4582
  br label %cond.end13, !dbg !4578

cond.end13:                                       ; preds = %cond.false11, %cond.true9
  %cond14 = phi i32 [ %conv10, %cond.true9 ], [ %conv12, %cond.false11 ], !dbg !4578
  %shl15 = shl i32 %cond14, 6, !dbg !4583
  %20 = load i8*, i8** %q.addr, align 8, !dbg !4584
  %21 = load i8, i8* %20, align 1, !dbg !4585
  %conv16 = zext i8 %21 to i32, !dbg !4585
  %or17 = or i32 %conv16, %shl15, !dbg !4585
  %conv18 = trunc i32 %or17 to i8, !dbg !4585
  store i8 %conv18, i8* %20, align 1, !dbg !4585
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4586
  %incdec.ptr19 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 1, !dbg !4586
  store %struct._PixelPacket* %incdec.ptr19, %struct._PixelPacket** %p.addr, align 8, !dbg !4586
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4587
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4588
  %call20 = call float @GetPixelLuma(%struct._Image* %23, %struct._PixelPacket* %24), !dbg !4589
  %25 = load float, float* %threshold, align 4, !dbg !4590
  %cmp21 = fcmp olt float %call20, %25, !dbg !4591
  br i1 %cmp21, label %cond.true23, label %cond.false25, !dbg !4589

cond.true23:                                      ; preds = %cond.end13
  %26 = load i8, i8* %black, align 1, !dbg !4592
  %conv24 = zext i8 %26 to i32, !dbg !4592
  br label %cond.end27, !dbg !4589

cond.false25:                                     ; preds = %cond.end13
  %27 = load i8, i8* %white, align 1, !dbg !4593
  %conv26 = zext i8 %27 to i32, !dbg !4593
  br label %cond.end27, !dbg !4589

cond.end27:                                       ; preds = %cond.false25, %cond.true23
  %cond28 = phi i32 [ %conv24, %cond.true23 ], [ %conv26, %cond.false25 ], !dbg !4589
  %shl29 = shl i32 %cond28, 5, !dbg !4594
  %28 = load i8*, i8** %q.addr, align 8, !dbg !4595
  %29 = load i8, i8* %28, align 1, !dbg !4596
  %conv30 = zext i8 %29 to i32, !dbg !4596
  %or31 = or i32 %conv30, %shl29, !dbg !4596
  %conv32 = trunc i32 %or31 to i8, !dbg !4596
  store i8 %conv32, i8* %28, align 1, !dbg !4596
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4597
  %incdec.ptr33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 1, !dbg !4597
  store %struct._PixelPacket* %incdec.ptr33, %struct._PixelPacket** %p.addr, align 8, !dbg !4597
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4598
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4599
  %call34 = call float @GetPixelLuma(%struct._Image* %31, %struct._PixelPacket* %32), !dbg !4600
  %33 = load float, float* %threshold, align 4, !dbg !4601
  %cmp35 = fcmp olt float %call34, %33, !dbg !4602
  br i1 %cmp35, label %cond.true37, label %cond.false39, !dbg !4600

cond.true37:                                      ; preds = %cond.end27
  %34 = load i8, i8* %black, align 1, !dbg !4603
  %conv38 = zext i8 %34 to i32, !dbg !4603
  br label %cond.end41, !dbg !4600

cond.false39:                                     ; preds = %cond.end27
  %35 = load i8, i8* %white, align 1, !dbg !4604
  %conv40 = zext i8 %35 to i32, !dbg !4604
  br label %cond.end41, !dbg !4600

cond.end41:                                       ; preds = %cond.false39, %cond.true37
  %cond42 = phi i32 [ %conv38, %cond.true37 ], [ %conv40, %cond.false39 ], !dbg !4600
  %shl43 = shl i32 %cond42, 4, !dbg !4605
  %36 = load i8*, i8** %q.addr, align 8, !dbg !4606
  %37 = load i8, i8* %36, align 1, !dbg !4607
  %conv44 = zext i8 %37 to i32, !dbg !4607
  %or45 = or i32 %conv44, %shl43, !dbg !4607
  %conv46 = trunc i32 %or45 to i8, !dbg !4607
  store i8 %conv46, i8* %36, align 1, !dbg !4607
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4608
  %incdec.ptr47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %38, i32 1, !dbg !4608
  store %struct._PixelPacket* %incdec.ptr47, %struct._PixelPacket** %p.addr, align 8, !dbg !4608
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4609
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4610
  %call48 = call float @GetPixelLuma(%struct._Image* %39, %struct._PixelPacket* %40), !dbg !4611
  %41 = load float, float* %threshold, align 4, !dbg !4612
  %cmp49 = fcmp olt float %call48, %41, !dbg !4613
  br i1 %cmp49, label %cond.true51, label %cond.false53, !dbg !4611

cond.true51:                                      ; preds = %cond.end41
  %42 = load i8, i8* %black, align 1, !dbg !4614
  %conv52 = zext i8 %42 to i32, !dbg !4614
  br label %cond.end55, !dbg !4611

cond.false53:                                     ; preds = %cond.end41
  %43 = load i8, i8* %white, align 1, !dbg !4615
  %conv54 = zext i8 %43 to i32, !dbg !4615
  br label %cond.end55, !dbg !4611

cond.end55:                                       ; preds = %cond.false53, %cond.true51
  %cond56 = phi i32 [ %conv52, %cond.true51 ], [ %conv54, %cond.false53 ], !dbg !4611
  %shl57 = shl i32 %cond56, 3, !dbg !4616
  %44 = load i8*, i8** %q.addr, align 8, !dbg !4617
  %45 = load i8, i8* %44, align 1, !dbg !4618
  %conv58 = zext i8 %45 to i32, !dbg !4618
  %or59 = or i32 %conv58, %shl57, !dbg !4618
  %conv60 = trunc i32 %or59 to i8, !dbg !4618
  store i8 %conv60, i8* %44, align 1, !dbg !4618
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4619
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 1, !dbg !4619
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %p.addr, align 8, !dbg !4619
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4620
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4621
  %call62 = call float @GetPixelLuma(%struct._Image* %47, %struct._PixelPacket* %48), !dbg !4622
  %49 = load float, float* %threshold, align 4, !dbg !4623
  %cmp63 = fcmp olt float %call62, %49, !dbg !4624
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !4622

cond.true65:                                      ; preds = %cond.end55
  %50 = load i8, i8* %black, align 1, !dbg !4625
  %conv66 = zext i8 %50 to i32, !dbg !4625
  br label %cond.end69, !dbg !4622

cond.false67:                                     ; preds = %cond.end55
  %51 = load i8, i8* %white, align 1, !dbg !4626
  %conv68 = zext i8 %51 to i32, !dbg !4626
  br label %cond.end69, !dbg !4622

cond.end69:                                       ; preds = %cond.false67, %cond.true65
  %cond70 = phi i32 [ %conv66, %cond.true65 ], [ %conv68, %cond.false67 ], !dbg !4622
  %shl71 = shl i32 %cond70, 2, !dbg !4627
  %52 = load i8*, i8** %q.addr, align 8, !dbg !4628
  %53 = load i8, i8* %52, align 1, !dbg !4629
  %conv72 = zext i8 %53 to i32, !dbg !4629
  %or73 = or i32 %conv72, %shl71, !dbg !4629
  %conv74 = trunc i32 %or73 to i8, !dbg !4629
  store i8 %conv74, i8* %52, align 1, !dbg !4629
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4630
  %incdec.ptr75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 1, !dbg !4630
  store %struct._PixelPacket* %incdec.ptr75, %struct._PixelPacket** %p.addr, align 8, !dbg !4630
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4631
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4632
  %call76 = call float @GetPixelLuma(%struct._Image* %55, %struct._PixelPacket* %56), !dbg !4633
  %57 = load float, float* %threshold, align 4, !dbg !4634
  %cmp77 = fcmp olt float %call76, %57, !dbg !4635
  br i1 %cmp77, label %cond.true79, label %cond.false81, !dbg !4633

cond.true79:                                      ; preds = %cond.end69
  %58 = load i8, i8* %black, align 1, !dbg !4636
  %conv80 = zext i8 %58 to i32, !dbg !4636
  br label %cond.end83, !dbg !4633

cond.false81:                                     ; preds = %cond.end69
  %59 = load i8, i8* %white, align 1, !dbg !4637
  %conv82 = zext i8 %59 to i32, !dbg !4637
  br label %cond.end83, !dbg !4633

cond.end83:                                       ; preds = %cond.false81, %cond.true79
  %cond84 = phi i32 [ %conv80, %cond.true79 ], [ %conv82, %cond.false81 ], !dbg !4633
  %shl85 = shl i32 %cond84, 1, !dbg !4638
  %60 = load i8*, i8** %q.addr, align 8, !dbg !4639
  %61 = load i8, i8* %60, align 1, !dbg !4640
  %conv86 = zext i8 %61 to i32, !dbg !4640
  %or87 = or i32 %conv86, %shl85, !dbg !4640
  %conv88 = trunc i32 %or87 to i8, !dbg !4640
  store i8 %conv88, i8* %60, align 1, !dbg !4640
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4641
  %incdec.ptr89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !4641
  store %struct._PixelPacket* %incdec.ptr89, %struct._PixelPacket** %p.addr, align 8, !dbg !4641
  %63 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4642
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4643
  %call90 = call float @GetPixelLuma(%struct._Image* %63, %struct._PixelPacket* %64), !dbg !4644
  %65 = load float, float* %threshold, align 4, !dbg !4645
  %cmp91 = fcmp olt float %call90, %65, !dbg !4646
  br i1 %cmp91, label %cond.true93, label %cond.false95, !dbg !4644

cond.true93:                                      ; preds = %cond.end83
  %66 = load i8, i8* %black, align 1, !dbg !4647
  %conv94 = zext i8 %66 to i32, !dbg !4647
  br label %cond.end97, !dbg !4644

cond.false95:                                     ; preds = %cond.end83
  %67 = load i8, i8* %white, align 1, !dbg !4648
  %conv96 = zext i8 %67 to i32, !dbg !4648
  br label %cond.end97, !dbg !4644

cond.end97:                                       ; preds = %cond.false95, %cond.true93
  %cond98 = phi i32 [ %conv94, %cond.true93 ], [ %conv96, %cond.false95 ], !dbg !4644
  %shl99 = shl i32 %cond98, 0, !dbg !4649
  %68 = load i8*, i8** %q.addr, align 8, !dbg !4650
  %69 = load i8, i8* %68, align 1, !dbg !4651
  %conv100 = zext i8 %69 to i32, !dbg !4651
  %or101 = or i32 %conv100, %shl99, !dbg !4651
  %conv102 = trunc i32 %or101 to i8, !dbg !4651
  store i8 %conv102, i8* %68, align 1, !dbg !4651
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4652
  %incdec.ptr103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 1, !dbg !4652
  store %struct._PixelPacket* %incdec.ptr103, %struct._PixelPacket** %p.addr, align 8, !dbg !4652
  %71 = load i8*, i8** %q.addr, align 8, !dbg !4653
  %incdec.ptr104 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !4653
  store i8* %incdec.ptr104, i8** %q.addr, align 8, !dbg !4653
  br label %for.inc, !dbg !4654

for.inc:                                          ; preds = %cond.end97
  %72 = load i64, i64* %x, align 8, !dbg !4655
  %sub105 = sub nsw i64 %72, 8, !dbg !4655
  store i64 %sub105, i64* %x, align 8, !dbg !4655
  br label %for.cond, !dbg !4656, !llvm.loop !4657

for.end:                                          ; preds = %for.cond
  %73 = load i64, i64* %number_pixels.addr, align 8, !dbg !4659
  %rem = urem i64 %73, 8, !dbg !4661
  %cmp106 = icmp ne i64 %rem, 0, !dbg !4662
  br i1 %cmp106, label %if.then108, label %if.end132, !dbg !4663

if.then108:                                       ; preds = %for.end
  %74 = load i8*, i8** %q.addr, align 8, !dbg !4664
  store i8 0, i8* %74, align 1, !dbg !4666
  store i64 7, i64* %bit, align 8, !dbg !4667
  br label %for.cond109, !dbg !4669

for.cond109:                                      ; preds = %for.inc129, %if.then108
  %75 = load i64, i64* %bit, align 8, !dbg !4670
  %76 = load i64, i64* %number_pixels.addr, align 8, !dbg !4672
  %rem110 = urem i64 %76, 8, !dbg !4673
  %sub111 = sub i64 8, %rem110, !dbg !4674
  %cmp112 = icmp sge i64 %75, %sub111, !dbg !4675
  br i1 %cmp112, label %for.body114, label %for.end130, !dbg !4676

for.body114:                                      ; preds = %for.cond109
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4677
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4679
  %call115 = call float @GetPixelLuma(%struct._Image* %77, %struct._PixelPacket* %78), !dbg !4680
  %79 = load float, float* %threshold, align 4, !dbg !4681
  %cmp116 = fcmp olt float %call115, %79, !dbg !4682
  br i1 %cmp116, label %cond.true118, label %cond.false120, !dbg !4680

cond.true118:                                     ; preds = %for.body114
  %80 = load i8, i8* %black, align 1, !dbg !4683
  %conv119 = zext i8 %80 to i32, !dbg !4683
  br label %cond.end122, !dbg !4680

cond.false120:                                    ; preds = %for.body114
  %81 = load i8, i8* %white, align 1, !dbg !4684
  %conv121 = zext i8 %81 to i32, !dbg !4684
  br label %cond.end122, !dbg !4680

cond.end122:                                      ; preds = %cond.false120, %cond.true118
  %cond123 = phi i32 [ %conv119, %cond.true118 ], [ %conv121, %cond.false120 ], !dbg !4680
  %82 = load i64, i64* %bit, align 8, !dbg !4685
  %sh_prom = trunc i64 %82 to i32, !dbg !4686
  %shl124 = shl i32 %cond123, %sh_prom, !dbg !4686
  %83 = load i8*, i8** %q.addr, align 8, !dbg !4687
  %84 = load i8, i8* %83, align 1, !dbg !4688
  %conv125 = zext i8 %84 to i32, !dbg !4688
  %or126 = or i32 %conv125, %shl124, !dbg !4688
  %conv127 = trunc i32 %or126 to i8, !dbg !4688
  store i8 %conv127, i8* %83, align 1, !dbg !4688
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4689
  %incdec.ptr128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 1, !dbg !4689
  store %struct._PixelPacket* %incdec.ptr128, %struct._PixelPacket** %p.addr, align 8, !dbg !4689
  br label %for.inc129, !dbg !4690

for.inc129:                                       ; preds = %cond.end122
  %86 = load i64, i64* %bit, align 8, !dbg !4691
  %dec = add nsw i64 %86, -1, !dbg !4691
  store i64 %dec, i64* %bit, align 8, !dbg !4691
  br label %for.cond109, !dbg !4692, !llvm.loop !4693

for.end130:                                       ; preds = %for.cond109
  %87 = load i8*, i8** %q.addr, align 8, !dbg !4695
  %incdec.ptr131 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !4695
  store i8* %incdec.ptr131, i8** %q.addr, align 8, !dbg !4695
  br label %if.end132, !dbg !4696

if.end132:                                        ; preds = %for.end130, %for.end
  br label %sw.epilog, !dbg !4697

sw.bb133:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !4698, metadata !DIExpression()), !dbg !4700
  store i64 0, i64* %x, align 8, !dbg !4701
  br label %for.cond134, !dbg !4703

for.cond134:                                      ; preds = %for.inc156, %sw.bb133
  %88 = load i64, i64* %x, align 8, !dbg !4704
  %89 = load i64, i64* %number_pixels.addr, align 8, !dbg !4706
  %sub135 = sub i64 %89, 1, !dbg !4707
  %cmp136 = icmp slt i64 %88, %sub135, !dbg !4708
  br i1 %cmp136, label %for.body138, label %for.end157, !dbg !4709

for.body138:                                      ; preds = %for.cond134
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4710
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4712
  %call139 = call float @GetPixelLuma(%struct._Image* %90, %struct._PixelPacket* %91), !dbg !4713
  %call140 = call zeroext i16 @ClampToQuantum(float %call139), !dbg !4714
  %call141 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call140), !dbg !4715
  store i8 %call141, i8* %pixel, align 1, !dbg !4716
  %92 = load i8, i8* %pixel, align 1, !dbg !4717
  %conv142 = zext i8 %92 to i32, !dbg !4717
  %shr = ashr i32 %conv142, 4, !dbg !4718
  %and = and i32 %shr, 15, !dbg !4719
  %shl143 = shl i32 %and, 4, !dbg !4720
  %conv144 = trunc i32 %shl143 to i8, !dbg !4721
  %93 = load i8*, i8** %q.addr, align 8, !dbg !4722
  store i8 %conv144, i8* %93, align 1, !dbg !4723
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4724
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !4724
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %p.addr, align 8, !dbg !4724
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4725
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4726
  %call146 = call float @GetPixelLuma(%struct._Image* %95, %struct._PixelPacket* %96), !dbg !4727
  %call147 = call zeroext i16 @ClampToQuantum(float %call146), !dbg !4728
  %call148 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call147), !dbg !4729
  store i8 %call148, i8* %pixel, align 1, !dbg !4730
  %97 = load i8, i8* %pixel, align 1, !dbg !4731
  %conv149 = zext i8 %97 to i32, !dbg !4731
  %shr150 = ashr i32 %conv149, 4, !dbg !4732
  %98 = load i8*, i8** %q.addr, align 8, !dbg !4733
  %99 = load i8, i8* %98, align 1, !dbg !4734
  %conv151 = zext i8 %99 to i32, !dbg !4734
  %or152 = or i32 %conv151, %shr150, !dbg !4734
  %conv153 = trunc i32 %or152 to i8, !dbg !4734
  store i8 %conv153, i8* %98, align 1, !dbg !4734
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4735
  %incdec.ptr154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 1, !dbg !4735
  store %struct._PixelPacket* %incdec.ptr154, %struct._PixelPacket** %p.addr, align 8, !dbg !4735
  %101 = load i8*, i8** %q.addr, align 8, !dbg !4736
  %incdec.ptr155 = getelementptr inbounds i8, i8* %101, i32 1, !dbg !4736
  store i8* %incdec.ptr155, i8** %q.addr, align 8, !dbg !4736
  br label %for.inc156, !dbg !4737

for.inc156:                                       ; preds = %for.body138
  %102 = load i64, i64* %x, align 8, !dbg !4738
  %add = add nsw i64 %102, 2, !dbg !4738
  store i64 %add, i64* %x, align 8, !dbg !4738
  br label %for.cond134, !dbg !4739, !llvm.loop !4740

for.end157:                                       ; preds = %for.cond134
  %103 = load i64, i64* %number_pixels.addr, align 8, !dbg !4742
  %rem158 = urem i64 %103, 2, !dbg !4744
  %cmp159 = icmp ne i64 %rem158, 0, !dbg !4745
  br i1 %cmp159, label %if.then161, label %if.end172, !dbg !4746

if.then161:                                       ; preds = %for.end157
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4747
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4749
  %call162 = call float @GetPixelLuma(%struct._Image* %104, %struct._PixelPacket* %105), !dbg !4750
  %call163 = call zeroext i16 @ClampToQuantum(float %call162), !dbg !4751
  %call164 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call163), !dbg !4752
  store i8 %call164, i8* %pixel, align 1, !dbg !4753
  %106 = load i8, i8* %pixel, align 1, !dbg !4754
  %conv165 = zext i8 %106 to i32, !dbg !4754
  %shr166 = ashr i32 %conv165, 4, !dbg !4755
  %and167 = and i32 %shr166, 15, !dbg !4756
  %shl168 = shl i32 %and167, 4, !dbg !4757
  %conv169 = trunc i32 %shl168 to i8, !dbg !4758
  %107 = load i8*, i8** %q.addr, align 8, !dbg !4759
  store i8 %conv169, i8* %107, align 1, !dbg !4760
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4761
  %incdec.ptr170 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 1, !dbg !4761
  store %struct._PixelPacket* %incdec.ptr170, %struct._PixelPacket** %p.addr, align 8, !dbg !4761
  %109 = load i8*, i8** %q.addr, align 8, !dbg !4762
  %incdec.ptr171 = getelementptr inbounds i8, i8* %109, i32 1, !dbg !4762
  store i8* %incdec.ptr171, i8** %q.addr, align 8, !dbg !4762
  br label %if.end172, !dbg !4763

if.end172:                                        ; preds = %if.then161, %for.end157
  br label %sw.epilog, !dbg !4764

sw.bb173:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel174, metadata !4765, metadata !DIExpression()), !dbg !4767
  store i64 0, i64* %x, align 8, !dbg !4768
  br label %for.cond175, !dbg !4770

for.cond175:                                      ; preds = %for.inc184, %sw.bb173
  %110 = load i64, i64* %x, align 8, !dbg !4771
  %111 = load i64, i64* %number_pixels.addr, align 8, !dbg !4773
  %cmp176 = icmp slt i64 %110, %111, !dbg !4774
  br i1 %cmp176, label %for.body178, label %for.end185, !dbg !4775

for.body178:                                      ; preds = %for.cond175
  %112 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4776
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4778
  %call179 = call float @GetPixelLuma(%struct._Image* %112, %struct._PixelPacket* %113), !dbg !4779
  %call180 = call zeroext i16 @ClampToQuantum(float %call179), !dbg !4780
  %call181 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call180), !dbg !4781
  store i8 %call181, i8* %pixel174, align 1, !dbg !4782
  %114 = load i8, i8* %pixel174, align 1, !dbg !4783
  %115 = load i8*, i8** %q.addr, align 8, !dbg !4784
  %call182 = call i8* @PopCharPixel(i8 zeroext %114, i8* %115), !dbg !4785
  store i8* %call182, i8** %q.addr, align 8, !dbg !4786
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4787
  %incdec.ptr183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 1, !dbg !4787
  store %struct._PixelPacket* %incdec.ptr183, %struct._PixelPacket** %p.addr, align 8, !dbg !4787
  %117 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4788
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %117, i32 0, i32 6, !dbg !4789
  %118 = load i64, i64* %pad, align 8, !dbg !4789
  %119 = load i8*, i8** %q.addr, align 8, !dbg !4790
  %add.ptr = getelementptr inbounds i8, i8* %119, i64 %118, !dbg !4790
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !4790
  br label %for.inc184, !dbg !4791

for.inc184:                                       ; preds = %for.body178
  %120 = load i64, i64* %x, align 8, !dbg !4792
  %inc = add nsw i64 %120, 1, !dbg !4792
  store i64 %inc, i64* %x, align 8, !dbg !4792
  br label %for.cond175, !dbg !4793, !llvm.loop !4794

for.end185:                                       ; preds = %for.cond175
  br label %sw.epilog, !dbg !4796

sw.bb186:                                         ; preds = %entry
  %121 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4797
  %depth187 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %121, i32 0, i32 0, !dbg !4799
  %122 = load i64, i64* %depth187, align 8, !dbg !4799
  %call188 = call i64 @GetQuantumRange(i64 %122), !dbg !4800
  store i64 %call188, i64* %range, align 8, !dbg !4801
  %123 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4802
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %123, i32 0, i32 8, !dbg !4804
  %124 = load i32, i32* %pack, align 4, !dbg !4804
  %cmp189 = icmp eq i32 %124, 0, !dbg !4805
  br i1 %cmp189, label %if.then191, label %if.end256, !dbg !4806

if.then191:                                       ; preds = %sw.bb186
  call void @llvm.dbg.declare(metadata i32* %pixel192, metadata !4807, metadata !DIExpression()), !dbg !4809
  store i64 0, i64* %x, align 8, !dbg !4810
  br label %for.cond193, !dbg !4812

for.cond193:                                      ; preds = %for.inc220, %if.then191
  %125 = load i64, i64* %x, align 8, !dbg !4813
  %126 = load i64, i64* %number_pixels.addr, align 8, !dbg !4815
  %sub194 = sub i64 %126, 2, !dbg !4816
  %cmp195 = icmp slt i64 %125, %sub194, !dbg !4817
  br i1 %cmp195, label %for.body197, label %for.end222, !dbg !4818

for.body197:                                      ; preds = %for.cond193
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4819
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4821
  %add.ptr198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i64 2, !dbg !4822
  %call199 = call float @GetPixelLuma(%struct._Image* %127, %struct._PixelPacket* %add.ptr198), !dbg !4823
  %call200 = call zeroext i16 @ClampToQuantum(float %call199), !dbg !4824
  %129 = load i64, i64* %range, align 8, !dbg !4825
  %call201 = call i64 @ScaleQuantumToAny(i16 zeroext %call200, i64 %129), !dbg !4826
  %shl202 = shl i64 %call201, 22, !dbg !4827
  %130 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4828
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4829
  %add.ptr203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i64 1, !dbg !4830
  %call204 = call float @GetPixelLuma(%struct._Image* %130, %struct._PixelPacket* %add.ptr203), !dbg !4831
  %call205 = call zeroext i16 @ClampToQuantum(float %call204), !dbg !4832
  %132 = load i64, i64* %range, align 8, !dbg !4833
  %call206 = call i64 @ScaleQuantumToAny(i16 zeroext %call205, i64 %132), !dbg !4834
  %shl207 = shl i64 %call206, 12, !dbg !4835
  %or208 = or i64 %shl202, %shl207, !dbg !4836
  %133 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4837
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4838
  %add.ptr209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i64 0, !dbg !4839
  %call210 = call float @GetPixelLuma(%struct._Image* %133, %struct._PixelPacket* %add.ptr209), !dbg !4840
  %call211 = call zeroext i16 @ClampToQuantum(float %call210), !dbg !4841
  %135 = load i64, i64* %range, align 8, !dbg !4842
  %call212 = call i64 @ScaleQuantumToAny(i16 zeroext %call211, i64 %135), !dbg !4843
  %shl213 = shl i64 %call212, 2, !dbg !4844
  %or214 = or i64 %or208, %shl213, !dbg !4845
  %conv215 = trunc i64 %or214 to i32, !dbg !4846
  store i32 %conv215, i32* %pixel192, align 4, !dbg !4847
  %136 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4848
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %136, i32 0, i32 13, !dbg !4849
  %137 = load i32, i32* %endian, align 8, !dbg !4849
  %138 = load i32, i32* %pixel192, align 4, !dbg !4850
  %139 = load i8*, i8** %q.addr, align 8, !dbg !4851
  %call216 = call i8* @PopLongPixel(i32 %137, i32 %138, i8* %139), !dbg !4852
  store i8* %call216, i8** %q.addr, align 8, !dbg !4853
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4854
  %add.ptr217 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i64 3, !dbg !4854
  store %struct._PixelPacket* %add.ptr217, %struct._PixelPacket** %p.addr, align 8, !dbg !4854
  %141 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4855
  %pad218 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %141, i32 0, i32 6, !dbg !4856
  %142 = load i64, i64* %pad218, align 8, !dbg !4856
  %143 = load i8*, i8** %q.addr, align 8, !dbg !4857
  %add.ptr219 = getelementptr inbounds i8, i8* %143, i64 %142, !dbg !4857
  store i8* %add.ptr219, i8** %q.addr, align 8, !dbg !4857
  br label %for.inc220, !dbg !4858

for.inc220:                                       ; preds = %for.body197
  %144 = load i64, i64* %x, align 8, !dbg !4859
  %add221 = add nsw i64 %144, 3, !dbg !4859
  store i64 %add221, i64* %x, align 8, !dbg !4859
  br label %for.cond193, !dbg !4860, !llvm.loop !4861

for.end222:                                       ; preds = %for.cond193
  %145 = load i64, i64* %x, align 8, !dbg !4863
  %146 = load i64, i64* %number_pixels.addr, align 8, !dbg !4865
  %cmp223 = icmp slt i64 %145, %146, !dbg !4866
  br i1 %cmp223, label %if.then225, label %if.end255, !dbg !4867

if.then225:                                       ; preds = %for.end222
  store i32 0, i32* %pixel192, align 4, !dbg !4868
  %147 = load i64, i64* %x, align 8, !dbg !4870
  %inc226 = add nsw i64 %147, 1, !dbg !4870
  store i64 %inc226, i64* %x, align 8, !dbg !4870
  %148 = load i64, i64* %number_pixels.addr, align 8, !dbg !4872
  %sub227 = sub i64 %148, 1, !dbg !4873
  %cmp228 = icmp slt i64 %147, %sub227, !dbg !4874
  br i1 %cmp228, label %if.then230, label %if.end239, !dbg !4875

if.then230:                                       ; preds = %if.then225
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4876
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4877
  %add.ptr231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %150, i64 1, !dbg !4878
  %call232 = call float @GetPixelLuma(%struct._Image* %149, %struct._PixelPacket* %add.ptr231), !dbg !4879
  %call233 = call zeroext i16 @ClampToQuantum(float %call232), !dbg !4880
  %151 = load i64, i64* %range, align 8, !dbg !4881
  %call234 = call i64 @ScaleQuantumToAny(i16 zeroext %call233, i64 %151), !dbg !4882
  %shl235 = shl i64 %call234, 12, !dbg !4883
  %152 = load i32, i32* %pixel192, align 4, !dbg !4884
  %conv236 = zext i32 %152 to i64, !dbg !4884
  %or237 = or i64 %conv236, %shl235, !dbg !4884
  %conv238 = trunc i64 %or237 to i32, !dbg !4884
  store i32 %conv238, i32* %pixel192, align 4, !dbg !4884
  br label %if.end239, !dbg !4885

if.end239:                                        ; preds = %if.then230, %if.then225
  %153 = load i64, i64* %x, align 8, !dbg !4886
  %inc240 = add nsw i64 %153, 1, !dbg !4886
  store i64 %inc240, i64* %x, align 8, !dbg !4886
  %154 = load i64, i64* %number_pixels.addr, align 8, !dbg !4888
  %cmp241 = icmp slt i64 %153, %154, !dbg !4889
  br i1 %cmp241, label %if.then243, label %if.end252, !dbg !4890

if.then243:                                       ; preds = %if.end239
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4891
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4892
  %add.ptr244 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i64 0, !dbg !4893
  %call245 = call float @GetPixelLuma(%struct._Image* %155, %struct._PixelPacket* %add.ptr244), !dbg !4894
  %call246 = call zeroext i16 @ClampToQuantum(float %call245), !dbg !4895
  %157 = load i64, i64* %range, align 8, !dbg !4896
  %call247 = call i64 @ScaleQuantumToAny(i16 zeroext %call246, i64 %157), !dbg !4897
  %shl248 = shl i64 %call247, 2, !dbg !4898
  %158 = load i32, i32* %pixel192, align 4, !dbg !4899
  %conv249 = zext i32 %158 to i64, !dbg !4899
  %or250 = or i64 %conv249, %shl248, !dbg !4899
  %conv251 = trunc i64 %or250 to i32, !dbg !4899
  store i32 %conv251, i32* %pixel192, align 4, !dbg !4899
  br label %if.end252, !dbg !4900

if.end252:                                        ; preds = %if.then243, %if.end239
  %159 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4901
  %endian253 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %159, i32 0, i32 13, !dbg !4902
  %160 = load i32, i32* %endian253, align 8, !dbg !4902
  %161 = load i32, i32* %pixel192, align 4, !dbg !4903
  %162 = load i8*, i8** %q.addr, align 8, !dbg !4904
  %call254 = call i8* @PopLongPixel(i32 %160, i32 %161, i8* %162), !dbg !4905
  store i8* %call254, i8** %q.addr, align 8, !dbg !4906
  br label %if.end255, !dbg !4907

if.end255:                                        ; preds = %if.end252, %for.end222
  br label %sw.epilog, !dbg !4908

if.end256:                                        ; preds = %sw.bb186
  store i64 0, i64* %x, align 8, !dbg !4909
  br label %for.cond257, !dbg !4911

for.cond257:                                      ; preds = %for.inc268, %if.end256
  %163 = load i64, i64* %x, align 8, !dbg !4912
  %164 = load i64, i64* %number_pixels.addr, align 8, !dbg !4914
  %cmp258 = icmp slt i64 %163, %164, !dbg !4915
  br i1 %cmp258, label %for.body260, label %for.end270, !dbg !4916

for.body260:                                      ; preds = %for.cond257
  %165 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4917
  %166 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4919
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4920
  %call261 = call float @GetPixelLuma(%struct._Image* %166, %struct._PixelPacket* %167), !dbg !4921
  %call262 = call zeroext i16 @ClampToQuantum(float %call261), !dbg !4922
  %168 = load i64, i64* %range, align 8, !dbg !4923
  %call263 = call i64 @ScaleQuantumToAny(i16 zeroext %call262, i64 %168), !dbg !4924
  %169 = load i8*, i8** %q.addr, align 8, !dbg !4925
  %call264 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %165, i64 %call263, i8* %169), !dbg !4926
  store i8* %call264, i8** %q.addr, align 8, !dbg !4927
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4928
  %incdec.ptr265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 1, !dbg !4928
  store %struct._PixelPacket* %incdec.ptr265, %struct._PixelPacket** %p.addr, align 8, !dbg !4928
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4929
  %pad266 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %171, i32 0, i32 6, !dbg !4930
  %172 = load i64, i64* %pad266, align 8, !dbg !4930
  %173 = load i8*, i8** %q.addr, align 8, !dbg !4931
  %add.ptr267 = getelementptr inbounds i8, i8* %173, i64 %172, !dbg !4931
  store i8* %add.ptr267, i8** %q.addr, align 8, !dbg !4931
  br label %for.inc268, !dbg !4932

for.inc268:                                       ; preds = %for.body260
  %174 = load i64, i64* %x, align 8, !dbg !4933
  %inc269 = add nsw i64 %174, 1, !dbg !4933
  store i64 %inc269, i64* %x, align 8, !dbg !4933
  br label %for.cond257, !dbg !4934, !llvm.loop !4935

for.end270:                                       ; preds = %for.cond257
  br label %sw.epilog, !dbg !4937

sw.bb271:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel272, metadata !4938, metadata !DIExpression()), !dbg !4940
  %175 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4941
  %depth273 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %175, i32 0, i32 0, !dbg !4942
  %176 = load i64, i64* %depth273, align 8, !dbg !4942
  %call274 = call i64 @GetQuantumRange(i64 %176), !dbg !4943
  store i64 %call274, i64* %range, align 8, !dbg !4944
  %177 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4945
  %pack275 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %177, i32 0, i32 8, !dbg !4947
  %178 = load i32, i32* %pack275, align 4, !dbg !4947
  %cmp276 = icmp eq i32 %178, 0, !dbg !4948
  br i1 %cmp276, label %if.then278, label %if.end297, !dbg !4949

if.then278:                                       ; preds = %sw.bb271
  store i64 0, i64* %x, align 8, !dbg !4950
  br label %for.cond279, !dbg !4953

for.cond279:                                      ; preds = %for.inc294, %if.then278
  %179 = load i64, i64* %x, align 8, !dbg !4954
  %180 = load i64, i64* %number_pixels.addr, align 8, !dbg !4956
  %cmp280 = icmp slt i64 %179, %180, !dbg !4957
  br i1 %cmp280, label %for.body282, label %for.end296, !dbg !4958

for.body282:                                      ; preds = %for.cond279
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4959
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4961
  %call283 = call float @GetPixelLuma(%struct._Image* %181, %struct._PixelPacket* %182), !dbg !4962
  %call284 = call zeroext i16 @ClampToQuantum(float %call283), !dbg !4963
  %call285 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %call284), !dbg !4964
  store i16 %call285, i16* %pixel272, align 2, !dbg !4965
  %183 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4966
  %endian286 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %183, i32 0, i32 13, !dbg !4967
  %184 = load i32, i32* %endian286, align 8, !dbg !4967
  %185 = load i16, i16* %pixel272, align 2, !dbg !4968
  %conv287 = zext i16 %185 to i32, !dbg !4968
  %shr288 = ashr i32 %conv287, 4, !dbg !4969
  %conv289 = trunc i32 %shr288 to i16, !dbg !4970
  %186 = load i8*, i8** %q.addr, align 8, !dbg !4971
  %call290 = call i8* @PopShortPixel(i32 %184, i16 zeroext %conv289, i8* %186), !dbg !4972
  store i8* %call290, i8** %q.addr, align 8, !dbg !4973
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4974
  %incdec.ptr291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 1, !dbg !4974
  store %struct._PixelPacket* %incdec.ptr291, %struct._PixelPacket** %p.addr, align 8, !dbg !4974
  %188 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4975
  %pad292 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %188, i32 0, i32 6, !dbg !4976
  %189 = load i64, i64* %pad292, align 8, !dbg !4976
  %190 = load i8*, i8** %q.addr, align 8, !dbg !4977
  %add.ptr293 = getelementptr inbounds i8, i8* %190, i64 %189, !dbg !4977
  store i8* %add.ptr293, i8** %q.addr, align 8, !dbg !4977
  br label %for.inc294, !dbg !4978

for.inc294:                                       ; preds = %for.body282
  %191 = load i64, i64* %x, align 8, !dbg !4979
  %inc295 = add nsw i64 %191, 1, !dbg !4979
  store i64 %inc295, i64* %x, align 8, !dbg !4979
  br label %for.cond279, !dbg !4980, !llvm.loop !4981

for.end296:                                       ; preds = %for.cond279
  br label %sw.epilog, !dbg !4983

if.end297:                                        ; preds = %sw.bb271
  store i64 0, i64* %x, align 8, !dbg !4984
  br label %for.cond298, !dbg !4986

for.cond298:                                      ; preds = %for.inc309, %if.end297
  %192 = load i64, i64* %x, align 8, !dbg !4987
  %193 = load i64, i64* %number_pixels.addr, align 8, !dbg !4989
  %cmp299 = icmp slt i64 %192, %193, !dbg !4990
  br i1 %cmp299, label %for.body301, label %for.end311, !dbg !4991

for.body301:                                      ; preds = %for.cond298
  %194 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4992
  %195 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4994
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !4995
  %call302 = call float @GetPixelLuma(%struct._Image* %195, %struct._PixelPacket* %196), !dbg !4996
  %call303 = call zeroext i16 @ClampToQuantum(float %call302), !dbg !4997
  %197 = load i64, i64* %range, align 8, !dbg !4998
  %call304 = call i64 @ScaleQuantumToAny(i16 zeroext %call303, i64 %197), !dbg !4999
  %198 = load i8*, i8** %q.addr, align 8, !dbg !5000
  %call305 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %194, i64 %call304, i8* %198), !dbg !5001
  store i8* %call305, i8** %q.addr, align 8, !dbg !5002
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5003
  %incdec.ptr306 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 1, !dbg !5003
  store %struct._PixelPacket* %incdec.ptr306, %struct._PixelPacket** %p.addr, align 8, !dbg !5003
  %200 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5004
  %pad307 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %200, i32 0, i32 6, !dbg !5005
  %201 = load i64, i64* %pad307, align 8, !dbg !5005
  %202 = load i8*, i8** %q.addr, align 8, !dbg !5006
  %add.ptr308 = getelementptr inbounds i8, i8* %202, i64 %201, !dbg !5006
  store i8* %add.ptr308, i8** %q.addr, align 8, !dbg !5006
  br label %for.inc309, !dbg !5007

for.inc309:                                       ; preds = %for.body301
  %203 = load i64, i64* %x, align 8, !dbg !5008
  %inc310 = add nsw i64 %203, 1, !dbg !5008
  store i64 %inc310, i64* %x, align 8, !dbg !5008
  br label %for.cond298, !dbg !5009, !llvm.loop !5010

for.end311:                                       ; preds = %for.cond298
  br label %sw.epilog, !dbg !5012

sw.bb312:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel313, metadata !5013, metadata !DIExpression()), !dbg !5015
  %204 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5016
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %204, i32 0, i32 2, !dbg !5018
  %205 = load i32, i32* %format, align 8, !dbg !5018
  %cmp314 = icmp eq i32 %205, 1, !dbg !5019
  br i1 %cmp314, label %if.then316, label %if.end333, !dbg !5020

if.then316:                                       ; preds = %sw.bb312
  store i64 0, i64* %x, align 8, !dbg !5021
  br label %for.cond317, !dbg !5024

for.cond317:                                      ; preds = %for.inc330, %if.then316
  %206 = load i64, i64* %x, align 8, !dbg !5025
  %207 = load i64, i64* %number_pixels.addr, align 8, !dbg !5027
  %cmp318 = icmp slt i64 %206, %207, !dbg !5028
  br i1 %cmp318, label %for.body320, label %for.end332, !dbg !5029

for.body320:                                      ; preds = %for.cond317
  %208 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5030
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5032
  %call321 = call float @GetPixelLuma(%struct._Image* %208, %struct._PixelPacket* %209), !dbg !5033
  %conv322 = fpext float %call321 to double, !dbg !5033
  %mul = fmul double 0x3EF0001000100010, %conv322, !dbg !5034
  %conv323 = fptrunc double %mul to float, !dbg !5035
  %call324 = call zeroext i16 @SinglePrecisionToHalf(float %conv323), !dbg !5036
  store i16 %call324, i16* %pixel313, align 2, !dbg !5037
  %210 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5038
  %endian325 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %210, i32 0, i32 13, !dbg !5039
  %211 = load i32, i32* %endian325, align 8, !dbg !5039
  %212 = load i16, i16* %pixel313, align 2, !dbg !5040
  %213 = load i8*, i8** %q.addr, align 8, !dbg !5041
  %call326 = call i8* @PopShortPixel(i32 %211, i16 zeroext %212, i8* %213), !dbg !5042
  store i8* %call326, i8** %q.addr, align 8, !dbg !5043
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5044
  %incdec.ptr327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 1, !dbg !5044
  store %struct._PixelPacket* %incdec.ptr327, %struct._PixelPacket** %p.addr, align 8, !dbg !5044
  %215 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5045
  %pad328 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %215, i32 0, i32 6, !dbg !5046
  %216 = load i64, i64* %pad328, align 8, !dbg !5046
  %217 = load i8*, i8** %q.addr, align 8, !dbg !5047
  %add.ptr329 = getelementptr inbounds i8, i8* %217, i64 %216, !dbg !5047
  store i8* %add.ptr329, i8** %q.addr, align 8, !dbg !5047
  br label %for.inc330, !dbg !5048

for.inc330:                                       ; preds = %for.body320
  %218 = load i64, i64* %x, align 8, !dbg !5049
  %inc331 = add nsw i64 %218, 1, !dbg !5049
  store i64 %inc331, i64* %x, align 8, !dbg !5049
  br label %for.cond317, !dbg !5050, !llvm.loop !5051

for.end332:                                       ; preds = %for.cond317
  br label %sw.epilog, !dbg !5053

if.end333:                                        ; preds = %sw.bb312
  store i64 0, i64* %x, align 8, !dbg !5054
  br label %for.cond334, !dbg !5056

for.cond334:                                      ; preds = %for.inc346, %if.end333
  %219 = load i64, i64* %x, align 8, !dbg !5057
  %220 = load i64, i64* %number_pixels.addr, align 8, !dbg !5059
  %cmp335 = icmp slt i64 %219, %220, !dbg !5060
  br i1 %cmp335, label %for.body337, label %for.end348, !dbg !5061

for.body337:                                      ; preds = %for.cond334
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5062
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5064
  %call338 = call float @GetPixelLuma(%struct._Image* %221, %struct._PixelPacket* %222), !dbg !5065
  %call339 = call zeroext i16 @ClampToQuantum(float %call338), !dbg !5066
  %call340 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %call339), !dbg !5067
  store i16 %call340, i16* %pixel313, align 2, !dbg !5068
  %223 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5069
  %endian341 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %223, i32 0, i32 13, !dbg !5070
  %224 = load i32, i32* %endian341, align 8, !dbg !5070
  %225 = load i16, i16* %pixel313, align 2, !dbg !5071
  %226 = load i8*, i8** %q.addr, align 8, !dbg !5072
  %call342 = call i8* @PopShortPixel(i32 %224, i16 zeroext %225, i8* %226), !dbg !5073
  store i8* %call342, i8** %q.addr, align 8, !dbg !5074
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5075
  %incdec.ptr343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 1, !dbg !5075
  store %struct._PixelPacket* %incdec.ptr343, %struct._PixelPacket** %p.addr, align 8, !dbg !5075
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5076
  %pad344 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %228, i32 0, i32 6, !dbg !5077
  %229 = load i64, i64* %pad344, align 8, !dbg !5077
  %230 = load i8*, i8** %q.addr, align 8, !dbg !5078
  %add.ptr345 = getelementptr inbounds i8, i8* %230, i64 %229, !dbg !5078
  store i8* %add.ptr345, i8** %q.addr, align 8, !dbg !5078
  br label %for.inc346, !dbg !5079

for.inc346:                                       ; preds = %for.body337
  %231 = load i64, i64* %x, align 8, !dbg !5080
  %inc347 = add nsw i64 %231, 1, !dbg !5080
  store i64 %inc347, i64* %x, align 8, !dbg !5080
  br label %for.cond334, !dbg !5081, !llvm.loop !5082

for.end348:                                       ; preds = %for.cond334
  br label %sw.epilog, !dbg !5084

sw.bb349:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel350, metadata !5085, metadata !DIExpression()), !dbg !5087
  %232 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5088
  %format351 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %232, i32 0, i32 2, !dbg !5090
  %233 = load i32, i32* %format351, align 8, !dbg !5090
  %cmp352 = icmp eq i32 %233, 1, !dbg !5091
  br i1 %cmp352, label %if.then354, label %if.end368, !dbg !5092

if.then354:                                       ; preds = %sw.bb349
  store i64 0, i64* %x, align 8, !dbg !5093
  br label %for.cond355, !dbg !5096

for.cond355:                                      ; preds = %for.inc365, %if.then354
  %234 = load i64, i64* %x, align 8, !dbg !5097
  %235 = load i64, i64* %number_pixels.addr, align 8, !dbg !5099
  %cmp356 = icmp slt i64 %234, %235, !dbg !5100
  br i1 %cmp356, label %for.body358, label %for.end367, !dbg !5101

for.body358:                                      ; preds = %for.cond355
  call void @llvm.dbg.declare(metadata float* %pixel359, metadata !5102, metadata !DIExpression()), !dbg !5104
  %236 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5105
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5106
  %call360 = call float @GetPixelLuma(%struct._Image* %236, %struct._PixelPacket* %237), !dbg !5107
  store float %call360, float* %pixel359, align 4, !dbg !5108
  %238 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5109
  %239 = load float, float* %pixel359, align 4, !dbg !5110
  %240 = load i8*, i8** %q.addr, align 8, !dbg !5111
  %call361 = call i8* @PopFloatPixel(%struct._QuantumInfo* %238, float %239, i8* %240), !dbg !5112
  store i8* %call361, i8** %q.addr, align 8, !dbg !5113
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5114
  %incdec.ptr362 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 1, !dbg !5114
  store %struct._PixelPacket* %incdec.ptr362, %struct._PixelPacket** %p.addr, align 8, !dbg !5114
  %242 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5115
  %pad363 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %242, i32 0, i32 6, !dbg !5116
  %243 = load i64, i64* %pad363, align 8, !dbg !5116
  %244 = load i8*, i8** %q.addr, align 8, !dbg !5117
  %add.ptr364 = getelementptr inbounds i8, i8* %244, i64 %243, !dbg !5117
  store i8* %add.ptr364, i8** %q.addr, align 8, !dbg !5117
  br label %for.inc365, !dbg !5118

for.inc365:                                       ; preds = %for.body358
  %245 = load i64, i64* %x, align 8, !dbg !5119
  %inc366 = add nsw i64 %245, 1, !dbg !5119
  store i64 %inc366, i64* %x, align 8, !dbg !5119
  br label %for.cond355, !dbg !5120, !llvm.loop !5121

for.end367:                                       ; preds = %for.cond355
  br label %sw.epilog, !dbg !5123

if.end368:                                        ; preds = %sw.bb349
  store i64 0, i64* %x, align 8, !dbg !5124
  br label %for.cond369, !dbg !5126

for.cond369:                                      ; preds = %for.inc381, %if.end368
  %246 = load i64, i64* %x, align 8, !dbg !5127
  %247 = load i64, i64* %number_pixels.addr, align 8, !dbg !5129
  %cmp370 = icmp slt i64 %246, %247, !dbg !5130
  br i1 %cmp370, label %for.body372, label %for.end383, !dbg !5131

for.body372:                                      ; preds = %for.cond369
  %248 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5132
  %249 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5134
  %call373 = call float @GetPixelLuma(%struct._Image* %248, %struct._PixelPacket* %249), !dbg !5135
  %call374 = call zeroext i16 @ClampToQuantum(float %call373), !dbg !5136
  %call375 = call i32 @ScaleQuantumToLong(i16 zeroext %call374), !dbg !5137
  store i32 %call375, i32* %pixel350, align 4, !dbg !5138
  %250 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5139
  %endian376 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %250, i32 0, i32 13, !dbg !5140
  %251 = load i32, i32* %endian376, align 8, !dbg !5140
  %252 = load i32, i32* %pixel350, align 4, !dbg !5141
  %253 = load i8*, i8** %q.addr, align 8, !dbg !5142
  %call377 = call i8* @PopLongPixel(i32 %251, i32 %252, i8* %253), !dbg !5143
  store i8* %call377, i8** %q.addr, align 8, !dbg !5144
  %254 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5145
  %incdec.ptr378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %254, i32 1, !dbg !5145
  store %struct._PixelPacket* %incdec.ptr378, %struct._PixelPacket** %p.addr, align 8, !dbg !5145
  %255 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5146
  %pad379 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %255, i32 0, i32 6, !dbg !5147
  %256 = load i64, i64* %pad379, align 8, !dbg !5147
  %257 = load i8*, i8** %q.addr, align 8, !dbg !5148
  %add.ptr380 = getelementptr inbounds i8, i8* %257, i64 %256, !dbg !5148
  store i8* %add.ptr380, i8** %q.addr, align 8, !dbg !5148
  br label %for.inc381, !dbg !5149

for.inc381:                                       ; preds = %for.body372
  %258 = load i64, i64* %x, align 8, !dbg !5150
  %inc382 = add nsw i64 %258, 1, !dbg !5150
  store i64 %inc382, i64* %x, align 8, !dbg !5150
  br label %for.cond369, !dbg !5151, !llvm.loop !5152

for.end383:                                       ; preds = %for.cond369
  br label %sw.epilog, !dbg !5154

sw.bb384:                                         ; preds = %entry
  %259 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5155
  %format385 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %259, i32 0, i32 2, !dbg !5158
  %260 = load i32, i32* %format385, align 8, !dbg !5158
  %cmp386 = icmp eq i32 %260, 1, !dbg !5159
  br i1 %cmp386, label %if.then388, label %if.end403, !dbg !5160

if.then388:                                       ; preds = %sw.bb384
  store i64 0, i64* %x, align 8, !dbg !5161
  br label %for.cond389, !dbg !5164

for.cond389:                                      ; preds = %for.inc400, %if.then388
  %261 = load i64, i64* %x, align 8, !dbg !5165
  %262 = load i64, i64* %number_pixels.addr, align 8, !dbg !5167
  %cmp390 = icmp slt i64 %261, %262, !dbg !5168
  br i1 %cmp390, label %for.body392, label %for.end402, !dbg !5169

for.body392:                                      ; preds = %for.cond389
  call void @llvm.dbg.declare(metadata double* %pixel393, metadata !5170, metadata !DIExpression()), !dbg !5172
  %263 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5173
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5174
  %call394 = call float @GetPixelLuma(%struct._Image* %263, %struct._PixelPacket* %264), !dbg !5175
  %conv395 = fpext float %call394 to double, !dbg !5176
  store double %conv395, double* %pixel393, align 8, !dbg !5177
  %265 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5178
  %266 = load double, double* %pixel393, align 8, !dbg !5179
  %267 = load i8*, i8** %q.addr, align 8, !dbg !5180
  %call396 = call i8* @PopDoublePixel(%struct._QuantumInfo* %265, double %266, i8* %267), !dbg !5181
  store i8* %call396, i8** %q.addr, align 8, !dbg !5182
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5183
  %incdec.ptr397 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 1, !dbg !5183
  store %struct._PixelPacket* %incdec.ptr397, %struct._PixelPacket** %p.addr, align 8, !dbg !5183
  %269 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5184
  %pad398 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %269, i32 0, i32 6, !dbg !5185
  %270 = load i64, i64* %pad398, align 8, !dbg !5185
  %271 = load i8*, i8** %q.addr, align 8, !dbg !5186
  %add.ptr399 = getelementptr inbounds i8, i8* %271, i64 %270, !dbg !5186
  store i8* %add.ptr399, i8** %q.addr, align 8, !dbg !5186
  br label %for.inc400, !dbg !5187

for.inc400:                                       ; preds = %for.body392
  %272 = load i64, i64* %x, align 8, !dbg !5188
  %inc401 = add nsw i64 %272, 1, !dbg !5188
  store i64 %inc401, i64* %x, align 8, !dbg !5188
  br label %for.cond389, !dbg !5189, !llvm.loop !5190

for.end402:                                       ; preds = %for.cond389
  br label %sw.epilog, !dbg !5192

if.end403:                                        ; preds = %sw.bb384
  br label %sw.default, !dbg !5193

sw.default:                                       ; preds = %entry, %if.end403
  %273 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5194
  %depth404 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %273, i32 0, i32 0, !dbg !5196
  %274 = load i64, i64* %depth404, align 8, !dbg !5196
  %call405 = call i64 @GetQuantumRange(i64 %274), !dbg !5197
  store i64 %call405, i64* %range, align 8, !dbg !5198
  store i64 0, i64* %x, align 8, !dbg !5199
  br label %for.cond406, !dbg !5201

for.cond406:                                      ; preds = %for.inc417, %sw.default
  %275 = load i64, i64* %x, align 8, !dbg !5202
  %276 = load i64, i64* %number_pixels.addr, align 8, !dbg !5204
  %cmp407 = icmp slt i64 %275, %276, !dbg !5205
  br i1 %cmp407, label %for.body409, label %for.end419, !dbg !5206

for.body409:                                      ; preds = %for.cond406
  %277 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5207
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5209
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5210
  %call410 = call float @GetPixelLuma(%struct._Image* %278, %struct._PixelPacket* %279), !dbg !5211
  %call411 = call zeroext i16 @ClampToQuantum(float %call410), !dbg !5212
  %280 = load i64, i64* %range, align 8, !dbg !5213
  %call412 = call i64 @ScaleQuantumToAny(i16 zeroext %call411, i64 %280), !dbg !5214
  %281 = load i8*, i8** %q.addr, align 8, !dbg !5215
  %call413 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %277, i64 %call412, i8* %281), !dbg !5216
  store i8* %call413, i8** %q.addr, align 8, !dbg !5217
  %282 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5218
  %incdec.ptr414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %282, i32 1, !dbg !5218
  store %struct._PixelPacket* %incdec.ptr414, %struct._PixelPacket** %p.addr, align 8, !dbg !5218
  %283 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5219
  %pad415 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %283, i32 0, i32 6, !dbg !5220
  %284 = load i64, i64* %pad415, align 8, !dbg !5220
  %285 = load i8*, i8** %q.addr, align 8, !dbg !5221
  %add.ptr416 = getelementptr inbounds i8, i8* %285, i64 %284, !dbg !5221
  store i8* %add.ptr416, i8** %q.addr, align 8, !dbg !5221
  br label %for.inc417, !dbg !5222

for.inc417:                                       ; preds = %for.body409
  %286 = load i64, i64* %x, align 8, !dbg !5223
  %inc418 = add nsw i64 %286, 1, !dbg !5223
  store i64 %inc418, i64* %x, align 8, !dbg !5223
  br label %for.cond406, !dbg !5224, !llvm.loop !5225

for.end419:                                       ; preds = %for.cond406
  br label %sw.epilog, !dbg !5227

sw.epilog:                                        ; preds = %for.end419, %for.end402, %for.end383, %for.end367, %for.end348, %for.end332, %for.end311, %for.end296, %for.end270, %if.end255, %for.end185, %if.end172, %if.end132
  ret void, !dbg !5228
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportGrayAlphaQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !5229 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %threshold = alloca float, align 4
  %black = alloca i8, align 1
  %pixel = alloca i8, align 1
  %white = alloca i8, align 1
  %pixel151 = alloca i8, align 1
  %pixel180 = alloca i8, align 1
  %pixel200 = alloca i16, align 2
  %pixel253 = alloca i32, align 4
  %pixel262 = alloca float, align 4
  %pixel308 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.declare(metadata i64* %range, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !5244, metadata !DIExpression()), !dbg !5245
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5246
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !5247
  %1 = load i64, i64* %depth, align 8, !dbg !5247
  switch i64 %1, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb150
    i64 8, label %sw.bb179
    i64 16, label %sw.bb199
    i64 32, label %sw.bb252
    i64 64, label %sw.bb299
  ], !dbg !5248

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !5249, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata i8* %black, metadata !5253, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !5255, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata i8* %white, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i8 0, i8* %black, align 1, !dbg !5259
  store i8 1, i8* %white, align 1, !dbg !5260
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5261
  %min_is_white = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 7, !dbg !5263
  %3 = load i32, i32* %min_is_white, align 8, !dbg !5263
  %cmp = icmp eq i32 %3, 0, !dbg !5264
  br i1 %cmp, label %if.then, label %if.end, !dbg !5265

if.then:                                          ; preds = %sw.bb
  store i8 1, i8* %black, align 1, !dbg !5266
  store i8 0, i8* %white, align 1, !dbg !5268
  br label %if.end, !dbg !5269

if.end:                                           ; preds = %if.then, %sw.bb
  store float 3.276750e+04, float* %threshold, align 4, !dbg !5270
  %4 = load i64, i64* %number_pixels.addr, align 8, !dbg !5271
  %sub = sub nsw i64 %4, 3, !dbg !5273
  store i64 %sub, i64* %x, align 8, !dbg !5274
  br label %for.cond, !dbg !5275

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %x, align 8, !dbg !5276
  %cmp1 = icmp sgt i64 %5, 0, !dbg !5278
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5279

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %q.addr, align 8, !dbg !5280
  store i8 0, i8* %6, align 1, !dbg !5282
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5283
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5284
  %call = call float @GetPixelLuma(%struct._Image* %7, %struct._PixelPacket* %8), !dbg !5285
  %9 = load float, float* %threshold, align 4, !dbg !5286
  %cmp2 = fcmp ogt float %call, %9, !dbg !5287
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !5285

cond.true:                                        ; preds = %for.body
  %10 = load i8, i8* %black, align 1, !dbg !5288
  %conv = zext i8 %10 to i32, !dbg !5288
  br label %cond.end, !dbg !5285

cond.false:                                       ; preds = %for.body
  %11 = load i8, i8* %white, align 1, !dbg !5289
  %conv3 = zext i8 %11 to i32, !dbg !5289
  br label %cond.end, !dbg !5285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv3, %cond.false ], !dbg !5285
  %shl = shl i32 %cond, 7, !dbg !5290
  %12 = load i8*, i8** %q.addr, align 8, !dbg !5291
  %13 = load i8, i8* %12, align 1, !dbg !5292
  %conv4 = zext i8 %13 to i32, !dbg !5292
  %or = or i32 %conv4, %shl, !dbg !5292
  %conv5 = trunc i32 %or to i8, !dbg !5292
  store i8 %conv5, i8* %12, align 1, !dbg !5292
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5293
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 3, !dbg !5293
  %15 = load i16, i16* %opacity, align 2, !dbg !5293
  %conv6 = zext i16 %15 to i32, !dbg !5293
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !5294
  %16 = zext i1 %cmp7 to i64, !dbg !5293
  %cond9 = select i1 %cmp7, i32 0, i32 1, !dbg !5293
  %conv10 = trunc i32 %cond9 to i8, !dbg !5295
  store i8 %conv10, i8* %pixel, align 1, !dbg !5296
  %17 = load i8, i8* %pixel, align 1, !dbg !5297
  %conv11 = zext i8 %17 to i32, !dbg !5298
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !5299
  %18 = zext i1 %cmp12 to i64, !dbg !5298
  %cond14 = select i1 %cmp12, i32 0, i32 1, !dbg !5298
  %shl15 = shl i32 %cond14, 6, !dbg !5300
  %19 = load i8*, i8** %q.addr, align 8, !dbg !5301
  %20 = load i8, i8* %19, align 1, !dbg !5302
  %conv16 = zext i8 %20 to i32, !dbg !5302
  %or17 = or i32 %conv16, %shl15, !dbg !5302
  %conv18 = trunc i32 %or17 to i8, !dbg !5302
  store i8 %conv18, i8* %19, align 1, !dbg !5302
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5303
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 1, !dbg !5303
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !5303
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5304
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5305
  %call19 = call float @GetPixelLuma(%struct._Image* %22, %struct._PixelPacket* %23), !dbg !5306
  %24 = load float, float* %threshold, align 4, !dbg !5307
  %cmp20 = fcmp ogt float %call19, %24, !dbg !5308
  br i1 %cmp20, label %cond.true22, label %cond.false24, !dbg !5306

cond.true22:                                      ; preds = %cond.end
  %25 = load i8, i8* %black, align 1, !dbg !5309
  %conv23 = zext i8 %25 to i32, !dbg !5309
  br label %cond.end26, !dbg !5306

cond.false24:                                     ; preds = %cond.end
  %26 = load i8, i8* %white, align 1, !dbg !5310
  %conv25 = zext i8 %26 to i32, !dbg !5310
  br label %cond.end26, !dbg !5306

cond.end26:                                       ; preds = %cond.false24, %cond.true22
  %cond27 = phi i32 [ %conv23, %cond.true22 ], [ %conv25, %cond.false24 ], !dbg !5306
  %shl28 = shl i32 %cond27, 5, !dbg !5311
  %27 = load i8*, i8** %q.addr, align 8, !dbg !5312
  %28 = load i8, i8* %27, align 1, !dbg !5313
  %conv29 = zext i8 %28 to i32, !dbg !5313
  %or30 = or i32 %conv29, %shl28, !dbg !5313
  %conv31 = trunc i32 %or30 to i8, !dbg !5313
  store i8 %conv31, i8* %27, align 1, !dbg !5313
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5314
  %opacity32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 3, !dbg !5314
  %30 = load i16, i16* %opacity32, align 2, !dbg !5314
  %conv33 = zext i16 %30 to i32, !dbg !5314
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !5315
  %31 = zext i1 %cmp34 to i64, !dbg !5314
  %cond36 = select i1 %cmp34, i32 0, i32 1, !dbg !5314
  %conv37 = trunc i32 %cond36 to i8, !dbg !5316
  store i8 %conv37, i8* %pixel, align 1, !dbg !5317
  %32 = load i8, i8* %pixel, align 1, !dbg !5318
  %conv38 = zext i8 %32 to i32, !dbg !5319
  %cmp39 = icmp ne i32 %conv38, 0, !dbg !5320
  %33 = zext i1 %cmp39 to i64, !dbg !5319
  %cond41 = select i1 %cmp39, i32 0, i32 1, !dbg !5319
  %shl42 = shl i32 %cond41, 4, !dbg !5321
  %34 = load i8*, i8** %q.addr, align 8, !dbg !5322
  %35 = load i8, i8* %34, align 1, !dbg !5323
  %conv43 = zext i8 %35 to i32, !dbg !5323
  %or44 = or i32 %conv43, %shl42, !dbg !5323
  %conv45 = trunc i32 %or44 to i8, !dbg !5323
  store i8 %conv45, i8* %34, align 1, !dbg !5323
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5324
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !5324
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %p.addr, align 8, !dbg !5324
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5325
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5326
  %call47 = call float @GetPixelLuma(%struct._Image* %37, %struct._PixelPacket* %38), !dbg !5327
  %39 = load float, float* %threshold, align 4, !dbg !5328
  %cmp48 = fcmp ogt float %call47, %39, !dbg !5329
  br i1 %cmp48, label %cond.true50, label %cond.false52, !dbg !5327

cond.true50:                                      ; preds = %cond.end26
  %40 = load i8, i8* %black, align 1, !dbg !5330
  %conv51 = zext i8 %40 to i32, !dbg !5330
  br label %cond.end54, !dbg !5327

cond.false52:                                     ; preds = %cond.end26
  %41 = load i8, i8* %white, align 1, !dbg !5331
  %conv53 = zext i8 %41 to i32, !dbg !5331
  br label %cond.end54, !dbg !5327

cond.end54:                                       ; preds = %cond.false52, %cond.true50
  %cond55 = phi i32 [ %conv51, %cond.true50 ], [ %conv53, %cond.false52 ], !dbg !5327
  %shl56 = shl i32 %cond55, 3, !dbg !5332
  %42 = load i8*, i8** %q.addr, align 8, !dbg !5333
  %43 = load i8, i8* %42, align 1, !dbg !5334
  %conv57 = zext i8 %43 to i32, !dbg !5334
  %or58 = or i32 %conv57, %shl56, !dbg !5334
  %conv59 = trunc i32 %or58 to i8, !dbg !5334
  store i8 %conv59, i8* %42, align 1, !dbg !5334
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5335
  %opacity60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 3, !dbg !5335
  %45 = load i16, i16* %opacity60, align 2, !dbg !5335
  %conv61 = zext i16 %45 to i32, !dbg !5335
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !5336
  %46 = zext i1 %cmp62 to i64, !dbg !5335
  %cond64 = select i1 %cmp62, i32 0, i32 1, !dbg !5335
  %conv65 = trunc i32 %cond64 to i8, !dbg !5337
  store i8 %conv65, i8* %pixel, align 1, !dbg !5338
  %47 = load i8, i8* %pixel, align 1, !dbg !5339
  %conv66 = zext i8 %47 to i32, !dbg !5340
  %cmp67 = icmp ne i32 %conv66, 0, !dbg !5341
  %48 = zext i1 %cmp67 to i64, !dbg !5340
  %cond69 = select i1 %cmp67, i32 0, i32 1, !dbg !5340
  %shl70 = shl i32 %cond69, 2, !dbg !5342
  %49 = load i8*, i8** %q.addr, align 8, !dbg !5343
  %50 = load i8, i8* %49, align 1, !dbg !5344
  %conv71 = zext i8 %50 to i32, !dbg !5344
  %or72 = or i32 %conv71, %shl70, !dbg !5344
  %conv73 = trunc i32 %or72 to i8, !dbg !5344
  store i8 %conv73, i8* %49, align 1, !dbg !5344
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5345
  %incdec.ptr74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 1, !dbg !5345
  store %struct._PixelPacket* %incdec.ptr74, %struct._PixelPacket** %p.addr, align 8, !dbg !5345
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5346
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5347
  %call75 = call float @GetPixelLuma(%struct._Image* %52, %struct._PixelPacket* %53), !dbg !5348
  %54 = load float, float* %threshold, align 4, !dbg !5349
  %cmp76 = fcmp ogt float %call75, %54, !dbg !5350
  br i1 %cmp76, label %cond.true78, label %cond.false80, !dbg !5348

cond.true78:                                      ; preds = %cond.end54
  %55 = load i8, i8* %black, align 1, !dbg !5351
  %conv79 = zext i8 %55 to i32, !dbg !5351
  br label %cond.end82, !dbg !5348

cond.false80:                                     ; preds = %cond.end54
  %56 = load i8, i8* %white, align 1, !dbg !5352
  %conv81 = zext i8 %56 to i32, !dbg !5352
  br label %cond.end82, !dbg !5348

cond.end82:                                       ; preds = %cond.false80, %cond.true78
  %cond83 = phi i32 [ %conv79, %cond.true78 ], [ %conv81, %cond.false80 ], !dbg !5348
  %shl84 = shl i32 %cond83, 1, !dbg !5353
  %57 = load i8*, i8** %q.addr, align 8, !dbg !5354
  %58 = load i8, i8* %57, align 1, !dbg !5355
  %conv85 = zext i8 %58 to i32, !dbg !5355
  %or86 = or i32 %conv85, %shl84, !dbg !5355
  %conv87 = trunc i32 %or86 to i8, !dbg !5355
  store i8 %conv87, i8* %57, align 1, !dbg !5355
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5356
  %opacity88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 3, !dbg !5356
  %60 = load i16, i16* %opacity88, align 2, !dbg !5356
  %conv89 = zext i16 %60 to i32, !dbg !5356
  %cmp90 = icmp eq i32 %conv89, 0, !dbg !5357
  %61 = zext i1 %cmp90 to i64, !dbg !5356
  %cond92 = select i1 %cmp90, i32 0, i32 1, !dbg !5356
  %conv93 = trunc i32 %cond92 to i8, !dbg !5358
  store i8 %conv93, i8* %pixel, align 1, !dbg !5359
  %62 = load i8, i8* %pixel, align 1, !dbg !5360
  %conv94 = zext i8 %62 to i32, !dbg !5361
  %cmp95 = icmp ne i32 %conv94, 0, !dbg !5362
  %63 = zext i1 %cmp95 to i64, !dbg !5361
  %cond97 = select i1 %cmp95, i32 0, i32 1, !dbg !5361
  %shl98 = shl i32 %cond97, 0, !dbg !5363
  %64 = load i8*, i8** %q.addr, align 8, !dbg !5364
  %65 = load i8, i8* %64, align 1, !dbg !5365
  %conv99 = zext i8 %65 to i32, !dbg !5365
  %or100 = or i32 %conv99, %shl98, !dbg !5365
  %conv101 = trunc i32 %or100 to i8, !dbg !5365
  store i8 %conv101, i8* %64, align 1, !dbg !5365
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5366
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 1, !dbg !5366
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %p.addr, align 8, !dbg !5366
  %67 = load i8*, i8** %q.addr, align 8, !dbg !5367
  %incdec.ptr103 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !5367
  store i8* %incdec.ptr103, i8** %q.addr, align 8, !dbg !5367
  br label %for.inc, !dbg !5368

for.inc:                                          ; preds = %cond.end82
  %68 = load i64, i64* %x, align 8, !dbg !5369
  %sub104 = sub nsw i64 %68, 4, !dbg !5369
  store i64 %sub104, i64* %x, align 8, !dbg !5369
  br label %for.cond, !dbg !5370, !llvm.loop !5371

for.end:                                          ; preds = %for.cond
  %69 = load i64, i64* %number_pixels.addr, align 8, !dbg !5373
  %rem = urem i64 %69, 4, !dbg !5375
  %cmp105 = icmp ne i64 %rem, 0, !dbg !5376
  br i1 %cmp105, label %if.then107, label %if.end149, !dbg !5377

if.then107:                                       ; preds = %for.end
  %70 = load i8*, i8** %q.addr, align 8, !dbg !5378
  store i8 0, i8* %70, align 1, !dbg !5380
  store i64 0, i64* %bit, align 8, !dbg !5381
  br label %for.cond108, !dbg !5383

for.cond108:                                      ; preds = %for.inc146, %if.then107
  %71 = load i64, i64* %bit, align 8, !dbg !5384
  %72 = load i64, i64* %number_pixels.addr, align 8, !dbg !5386
  %rem109 = urem i64 %72, 4, !dbg !5387
  %cmp110 = icmp sle i64 %71, %rem109, !dbg !5388
  br i1 %cmp110, label %for.body112, label %for.end147, !dbg !5389

for.body112:                                      ; preds = %for.cond108
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5390
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5392
  %call113 = call float @GetPixelLuma(%struct._Image* %73, %struct._PixelPacket* %74), !dbg !5393
  %75 = load float, float* %threshold, align 4, !dbg !5394
  %cmp114 = fcmp ogt float %call113, %75, !dbg !5395
  br i1 %cmp114, label %cond.true116, label %cond.false118, !dbg !5393

cond.true116:                                     ; preds = %for.body112
  %76 = load i8, i8* %black, align 1, !dbg !5396
  %conv117 = zext i8 %76 to i32, !dbg !5396
  br label %cond.end120, !dbg !5393

cond.false118:                                    ; preds = %for.body112
  %77 = load i8, i8* %white, align 1, !dbg !5397
  %conv119 = zext i8 %77 to i32, !dbg !5397
  br label %cond.end120, !dbg !5393

cond.end120:                                      ; preds = %cond.false118, %cond.true116
  %cond121 = phi i32 [ %conv117, %cond.true116 ], [ %conv119, %cond.false118 ], !dbg !5393
  %78 = load i64, i64* %bit, align 8, !dbg !5398
  %sub122 = sub nsw i64 7, %78, !dbg !5399
  %sh_prom = trunc i64 %sub122 to i32, !dbg !5400
  %shl123 = shl i32 %cond121, %sh_prom, !dbg !5400
  %79 = load i8*, i8** %q.addr, align 8, !dbg !5401
  %80 = load i8, i8* %79, align 1, !dbg !5402
  %conv124 = zext i8 %80 to i32, !dbg !5402
  %or125 = or i32 %conv124, %shl123, !dbg !5402
  %conv126 = trunc i32 %or125 to i8, !dbg !5402
  store i8 %conv126, i8* %79, align 1, !dbg !5402
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5403
  %opacity127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 3, !dbg !5403
  %82 = load i16, i16* %opacity127, align 2, !dbg !5403
  %conv128 = zext i16 %82 to i32, !dbg !5403
  %cmp129 = icmp eq i32 %conv128, 0, !dbg !5404
  %83 = zext i1 %cmp129 to i64, !dbg !5403
  %cond131 = select i1 %cmp129, i32 0, i32 1, !dbg !5403
  %conv132 = trunc i32 %cond131 to i8, !dbg !5405
  store i8 %conv132, i8* %pixel, align 1, !dbg !5406
  %84 = load i8, i8* %pixel, align 1, !dbg !5407
  %conv133 = zext i8 %84 to i32, !dbg !5408
  %cmp134 = icmp ne i32 %conv133, 0, !dbg !5409
  %85 = zext i1 %cmp134 to i64, !dbg !5408
  %cond136 = select i1 %cmp134, i32 0, i32 1, !dbg !5408
  %86 = load i64, i64* %bit, align 8, !dbg !5410
  %sub137 = sub nsw i64 7, %86, !dbg !5411
  %sub138 = sub nsw i64 %sub137, 1, !dbg !5412
  %conv139 = trunc i64 %sub138 to i8, !dbg !5413
  %conv140 = zext i8 %conv139 to i32, !dbg !5413
  %shl141 = shl i32 %cond136, %conv140, !dbg !5414
  %87 = load i8*, i8** %q.addr, align 8, !dbg !5415
  %88 = load i8, i8* %87, align 1, !dbg !5416
  %conv142 = zext i8 %88 to i32, !dbg !5416
  %or143 = or i32 %conv142, %shl141, !dbg !5416
  %conv144 = trunc i32 %or143 to i8, !dbg !5416
  store i8 %conv144, i8* %87, align 1, !dbg !5416
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5417
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !5417
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %p.addr, align 8, !dbg !5417
  br label %for.inc146, !dbg !5418

for.inc146:                                       ; preds = %cond.end120
  %90 = load i64, i64* %bit, align 8, !dbg !5419
  %add = add nsw i64 %90, 2, !dbg !5419
  store i64 %add, i64* %bit, align 8, !dbg !5419
  br label %for.cond108, !dbg !5420, !llvm.loop !5421

for.end147:                                       ; preds = %for.cond108
  %91 = load i8*, i8** %q.addr, align 8, !dbg !5423
  %incdec.ptr148 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !5423
  store i8* %incdec.ptr148, i8** %q.addr, align 8, !dbg !5423
  br label %if.end149, !dbg !5424

if.end149:                                        ; preds = %for.end147, %for.end
  br label %sw.epilog, !dbg !5425

sw.bb150:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel151, metadata !5426, metadata !DIExpression()), !dbg !5428
  store i64 0, i64* %x, align 8, !dbg !5429
  br label %for.cond152, !dbg !5431

for.cond152:                                      ; preds = %for.inc177, %sw.bb150
  %92 = load i64, i64* %x, align 8, !dbg !5432
  %93 = load i64, i64* %number_pixels.addr, align 8, !dbg !5434
  %cmp153 = icmp slt i64 %92, %93, !dbg !5435
  br i1 %cmp153, label %for.body155, label %for.end178, !dbg !5436

for.body155:                                      ; preds = %for.cond152
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5437
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5439
  %call156 = call float @GetPixelLuma(%struct._Image* %94, %struct._PixelPacket* %95), !dbg !5440
  %call157 = call zeroext i16 @ClampToQuantum(float %call156), !dbg !5441
  %call158 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call157), !dbg !5442
  store i8 %call158, i8* %pixel151, align 1, !dbg !5443
  %96 = load i8, i8* %pixel151, align 1, !dbg !5444
  %conv159 = zext i8 %96 to i32, !dbg !5444
  %shr = ashr i32 %conv159, 4, !dbg !5445
  %and = and i32 %shr, 15, !dbg !5446
  %shl160 = shl i32 %and, 4, !dbg !5447
  %conv161 = trunc i32 %shl160 to i8, !dbg !5448
  %97 = load i8*, i8** %q.addr, align 8, !dbg !5449
  store i8 %conv161, i8* %97, align 1, !dbg !5450
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5451
  %opacity162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i32 0, i32 3, !dbg !5451
  %99 = load i16, i16* %opacity162, align 2, !dbg !5451
  %conv163 = zext i16 %99 to i32, !dbg !5451
  %sub164 = sub nsw i32 65535, %conv163, !dbg !5452
  %conv165 = trunc i32 %sub164 to i16, !dbg !5453
  %conv166 = zext i16 %conv165 to i32, !dbg !5454
  %conv167 = sitofp i32 %conv166 to double, !dbg !5454
  %mul = fmul double 0x3F30001000100010, %conv167, !dbg !5455
  %add168 = fadd double %mul, 5.000000e-01, !dbg !5456
  %conv169 = fptoui double %add168 to i8, !dbg !5457
  store i8 %conv169, i8* %pixel151, align 1, !dbg !5458
  %100 = load i8, i8* %pixel151, align 1, !dbg !5459
  %conv170 = zext i8 %100 to i32, !dbg !5459
  %and171 = and i32 %conv170, 15, !dbg !5460
  %101 = load i8*, i8** %q.addr, align 8, !dbg !5461
  %102 = load i8, i8* %101, align 1, !dbg !5462
  %conv172 = zext i8 %102 to i32, !dbg !5462
  %or173 = or i32 %conv172, %and171, !dbg !5462
  %conv174 = trunc i32 %or173 to i8, !dbg !5462
  store i8 %conv174, i8* %101, align 1, !dbg !5462
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5463
  %incdec.ptr175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 1, !dbg !5463
  store %struct._PixelPacket* %incdec.ptr175, %struct._PixelPacket** %p.addr, align 8, !dbg !5463
  %104 = load i8*, i8** %q.addr, align 8, !dbg !5464
  %incdec.ptr176 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !5464
  store i8* %incdec.ptr176, i8** %q.addr, align 8, !dbg !5464
  br label %for.inc177, !dbg !5465

for.inc177:                                       ; preds = %for.body155
  %105 = load i64, i64* %x, align 8, !dbg !5466
  %inc = add nsw i64 %105, 1, !dbg !5466
  store i64 %inc, i64* %x, align 8, !dbg !5466
  br label %for.cond152, !dbg !5467, !llvm.loop !5468

for.end178:                                       ; preds = %for.cond152
  br label %sw.epilog, !dbg !5470

sw.bb179:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel180, metadata !5471, metadata !DIExpression()), !dbg !5473
  store i64 0, i64* %x, align 8, !dbg !5474
  br label %for.cond181, !dbg !5476

for.cond181:                                      ; preds = %for.inc196, %sw.bb179
  %106 = load i64, i64* %x, align 8, !dbg !5477
  %107 = load i64, i64* %number_pixels.addr, align 8, !dbg !5479
  %cmp182 = icmp slt i64 %106, %107, !dbg !5480
  br i1 %cmp182, label %for.body184, label %for.end198, !dbg !5481

for.body184:                                      ; preds = %for.cond181
  %108 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5482
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5484
  %call185 = call float @GetPixelLuma(%struct._Image* %108, %struct._PixelPacket* %109), !dbg !5485
  %call186 = call zeroext i16 @ClampToQuantum(float %call185), !dbg !5486
  %call187 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call186), !dbg !5487
  store i8 %call187, i8* %pixel180, align 1, !dbg !5488
  %110 = load i8, i8* %pixel180, align 1, !dbg !5489
  %111 = load i8*, i8** %q.addr, align 8, !dbg !5490
  %call188 = call i8* @PopCharPixel(i8 zeroext %110, i8* %111), !dbg !5491
  store i8* %call188, i8** %q.addr, align 8, !dbg !5492
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5493
  %opacity189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 3, !dbg !5493
  %113 = load i16, i16* %opacity189, align 2, !dbg !5493
  %conv190 = zext i16 %113 to i32, !dbg !5493
  %sub191 = sub nsw i32 65535, %conv190, !dbg !5494
  %conv192 = trunc i32 %sub191 to i16, !dbg !5495
  %call193 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv192), !dbg !5496
  store i8 %call193, i8* %pixel180, align 1, !dbg !5497
  %114 = load i8, i8* %pixel180, align 1, !dbg !5498
  %115 = load i8*, i8** %q.addr, align 8, !dbg !5499
  %call194 = call i8* @PopCharPixel(i8 zeroext %114, i8* %115), !dbg !5500
  store i8* %call194, i8** %q.addr, align 8, !dbg !5501
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5502
  %incdec.ptr195 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 1, !dbg !5502
  store %struct._PixelPacket* %incdec.ptr195, %struct._PixelPacket** %p.addr, align 8, !dbg !5502
  %117 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5503
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %117, i32 0, i32 6, !dbg !5504
  %118 = load i64, i64* %pad, align 8, !dbg !5504
  %119 = load i8*, i8** %q.addr, align 8, !dbg !5505
  %add.ptr = getelementptr inbounds i8, i8* %119, i64 %118, !dbg !5505
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !5505
  br label %for.inc196, !dbg !5506

for.inc196:                                       ; preds = %for.body184
  %120 = load i64, i64* %x, align 8, !dbg !5507
  %inc197 = add nsw i64 %120, 1, !dbg !5507
  store i64 %inc197, i64* %x, align 8, !dbg !5507
  br label %for.cond181, !dbg !5508, !llvm.loop !5509

for.end198:                                       ; preds = %for.cond181
  br label %sw.epilog, !dbg !5511

sw.bb199:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel200, metadata !5512, metadata !DIExpression()), !dbg !5514
  %121 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5515
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %121, i32 0, i32 2, !dbg !5517
  %122 = load i32, i32* %format, align 8, !dbg !5517
  %cmp201 = icmp eq i32 %122, 1, !dbg !5518
  br i1 %cmp201, label %if.then203, label %if.end229, !dbg !5519

if.then203:                                       ; preds = %sw.bb199
  store i64 0, i64* %x, align 8, !dbg !5520
  br label %for.cond204, !dbg !5523

for.cond204:                                      ; preds = %for.inc226, %if.then203
  %123 = load i64, i64* %x, align 8, !dbg !5524
  %124 = load i64, i64* %number_pixels.addr, align 8, !dbg !5526
  %cmp205 = icmp slt i64 %123, %124, !dbg !5527
  br i1 %cmp205, label %for.body207, label %for.end228, !dbg !5528

for.body207:                                      ; preds = %for.cond204
  %125 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5529
  %126 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5531
  %call208 = call float @GetPixelLuma(%struct._Image* %125, %struct._PixelPacket* %126), !dbg !5532
  %conv209 = fpext float %call208 to double, !dbg !5532
  %mul210 = fmul double 0x3EF0001000100010, %conv209, !dbg !5533
  %conv211 = fptrunc double %mul210 to float, !dbg !5534
  %call212 = call zeroext i16 @SinglePrecisionToHalf(float %conv211), !dbg !5535
  store i16 %call212, i16* %pixel200, align 2, !dbg !5536
  %127 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5537
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %127, i32 0, i32 13, !dbg !5538
  %128 = load i32, i32* %endian, align 8, !dbg !5538
  %129 = load i16, i16* %pixel200, align 2, !dbg !5539
  %130 = load i8*, i8** %q.addr, align 8, !dbg !5540
  %call213 = call i8* @PopShortPixel(i32 %128, i16 zeroext %129, i8* %130), !dbg !5541
  store i8* %call213, i8** %q.addr, align 8, !dbg !5542
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5543
  %opacity214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 3, !dbg !5543
  %132 = load i16, i16* %opacity214, align 2, !dbg !5543
  %conv215 = zext i16 %132 to i32, !dbg !5543
  %sub216 = sub nsw i32 65535, %conv215, !dbg !5543
  %conv217 = sitofp i32 %sub216 to double, !dbg !5543
  %mul218 = fmul double 0x3EF0001000100010, %conv217, !dbg !5544
  %conv219 = fptrunc double %mul218 to float, !dbg !5545
  %call220 = call zeroext i16 @SinglePrecisionToHalf(float %conv219), !dbg !5546
  store i16 %call220, i16* %pixel200, align 2, !dbg !5547
  %133 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5548
  %endian221 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %133, i32 0, i32 13, !dbg !5549
  %134 = load i32, i32* %endian221, align 8, !dbg !5549
  %135 = load i16, i16* %pixel200, align 2, !dbg !5550
  %136 = load i8*, i8** %q.addr, align 8, !dbg !5551
  %call222 = call i8* @PopShortPixel(i32 %134, i16 zeroext %135, i8* %136), !dbg !5552
  store i8* %call222, i8** %q.addr, align 8, !dbg !5553
  %137 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5554
  %incdec.ptr223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %137, i32 1, !dbg !5554
  store %struct._PixelPacket* %incdec.ptr223, %struct._PixelPacket** %p.addr, align 8, !dbg !5554
  %138 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5555
  %pad224 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %138, i32 0, i32 6, !dbg !5556
  %139 = load i64, i64* %pad224, align 8, !dbg !5556
  %140 = load i8*, i8** %q.addr, align 8, !dbg !5557
  %add.ptr225 = getelementptr inbounds i8, i8* %140, i64 %139, !dbg !5557
  store i8* %add.ptr225, i8** %q.addr, align 8, !dbg !5557
  br label %for.inc226, !dbg !5558

for.inc226:                                       ; preds = %for.body207
  %141 = load i64, i64* %x, align 8, !dbg !5559
  %inc227 = add nsw i64 %141, 1, !dbg !5559
  store i64 %inc227, i64* %x, align 8, !dbg !5559
  br label %for.cond204, !dbg !5560, !llvm.loop !5561

for.end228:                                       ; preds = %for.cond204
  br label %sw.epilog, !dbg !5563

if.end229:                                        ; preds = %sw.bb199
  store i64 0, i64* %x, align 8, !dbg !5564
  br label %for.cond230, !dbg !5566

for.cond230:                                      ; preds = %for.inc249, %if.end229
  %142 = load i64, i64* %x, align 8, !dbg !5567
  %143 = load i64, i64* %number_pixels.addr, align 8, !dbg !5569
  %cmp231 = icmp slt i64 %142, %143, !dbg !5570
  br i1 %cmp231, label %for.body233, label %for.end251, !dbg !5571

for.body233:                                      ; preds = %for.cond230
  %144 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5572
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5574
  %call234 = call float @GetPixelLuma(%struct._Image* %144, %struct._PixelPacket* %145), !dbg !5575
  %call235 = call zeroext i16 @ClampToQuantum(float %call234), !dbg !5576
  %call236 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %call235), !dbg !5577
  store i16 %call236, i16* %pixel200, align 2, !dbg !5578
  %146 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5579
  %endian237 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %146, i32 0, i32 13, !dbg !5580
  %147 = load i32, i32* %endian237, align 8, !dbg !5580
  %148 = load i16, i16* %pixel200, align 2, !dbg !5581
  %149 = load i8*, i8** %q.addr, align 8, !dbg !5582
  %call238 = call i8* @PopShortPixel(i32 %147, i16 zeroext %148, i8* %149), !dbg !5583
  store i8* %call238, i8** %q.addr, align 8, !dbg !5584
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5585
  %opacity239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %150, i32 0, i32 3, !dbg !5585
  %151 = load i16, i16* %opacity239, align 2, !dbg !5585
  %conv240 = zext i16 %151 to i32, !dbg !5585
  %sub241 = sub nsw i32 65535, %conv240, !dbg !5586
  %conv242 = trunc i32 %sub241 to i16, !dbg !5587
  %call243 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv242), !dbg !5588
  store i16 %call243, i16* %pixel200, align 2, !dbg !5589
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5590
  %endian244 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 13, !dbg !5591
  %153 = load i32, i32* %endian244, align 8, !dbg !5591
  %154 = load i16, i16* %pixel200, align 2, !dbg !5592
  %155 = load i8*, i8** %q.addr, align 8, !dbg !5593
  %call245 = call i8* @PopShortPixel(i32 %153, i16 zeroext %154, i8* %155), !dbg !5594
  store i8* %call245, i8** %q.addr, align 8, !dbg !5595
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5596
  %incdec.ptr246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !5596
  store %struct._PixelPacket* %incdec.ptr246, %struct._PixelPacket** %p.addr, align 8, !dbg !5596
  %157 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5597
  %pad247 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %157, i32 0, i32 6, !dbg !5598
  %158 = load i64, i64* %pad247, align 8, !dbg !5598
  %159 = load i8*, i8** %q.addr, align 8, !dbg !5599
  %add.ptr248 = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !5599
  store i8* %add.ptr248, i8** %q.addr, align 8, !dbg !5599
  br label %for.inc249, !dbg !5600

for.inc249:                                       ; preds = %for.body233
  %160 = load i64, i64* %x, align 8, !dbg !5601
  %inc250 = add nsw i64 %160, 1, !dbg !5601
  store i64 %inc250, i64* %x, align 8, !dbg !5601
  br label %for.cond230, !dbg !5602, !llvm.loop !5603

for.end251:                                       ; preds = %for.cond230
  br label %sw.epilog, !dbg !5605

sw.bb252:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel253, metadata !5606, metadata !DIExpression()), !dbg !5608
  %161 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5609
  %format254 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %161, i32 0, i32 2, !dbg !5611
  %162 = load i32, i32* %format254, align 8, !dbg !5611
  %cmp255 = icmp eq i32 %162, 1, !dbg !5612
  br i1 %cmp255, label %if.then257, label %if.end276, !dbg !5613

if.then257:                                       ; preds = %sw.bb252
  store i64 0, i64* %x, align 8, !dbg !5614
  br label %for.cond258, !dbg !5617

for.cond258:                                      ; preds = %for.inc273, %if.then257
  %163 = load i64, i64* %x, align 8, !dbg !5618
  %164 = load i64, i64* %number_pixels.addr, align 8, !dbg !5620
  %cmp259 = icmp slt i64 %163, %164, !dbg !5621
  br i1 %cmp259, label %for.body261, label %for.end275, !dbg !5622

for.body261:                                      ; preds = %for.cond258
  call void @llvm.dbg.declare(metadata float* %pixel262, metadata !5623, metadata !DIExpression()), !dbg !5625
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5626
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5627
  %call263 = call float @GetPixelLuma(%struct._Image* %165, %struct._PixelPacket* %166), !dbg !5628
  store float %call263, float* %pixel262, align 4, !dbg !5629
  %167 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5630
  %168 = load float, float* %pixel262, align 4, !dbg !5631
  %169 = load i8*, i8** %q.addr, align 8, !dbg !5632
  %call264 = call i8* @PopFloatPixel(%struct._QuantumInfo* %167, float %168, i8* %169), !dbg !5633
  store i8* %call264, i8** %q.addr, align 8, !dbg !5634
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5635
  %opacity265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 0, i32 3, !dbg !5635
  %171 = load i16, i16* %opacity265, align 2, !dbg !5635
  %conv266 = zext i16 %171 to i32, !dbg !5635
  %sub267 = sub nsw i32 65535, %conv266, !dbg !5635
  %conv268 = sitofp i32 %sub267 to float, !dbg !5636
  store float %conv268, float* %pixel262, align 4, !dbg !5637
  %172 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5638
  %173 = load float, float* %pixel262, align 4, !dbg !5639
  %174 = load i8*, i8** %q.addr, align 8, !dbg !5640
  %call269 = call i8* @PopFloatPixel(%struct._QuantumInfo* %172, float %173, i8* %174), !dbg !5641
  store i8* %call269, i8** %q.addr, align 8, !dbg !5642
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5643
  %incdec.ptr270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 1, !dbg !5643
  store %struct._PixelPacket* %incdec.ptr270, %struct._PixelPacket** %p.addr, align 8, !dbg !5643
  %176 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5644
  %pad271 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %176, i32 0, i32 6, !dbg !5645
  %177 = load i64, i64* %pad271, align 8, !dbg !5645
  %178 = load i8*, i8** %q.addr, align 8, !dbg !5646
  %add.ptr272 = getelementptr inbounds i8, i8* %178, i64 %177, !dbg !5646
  store i8* %add.ptr272, i8** %q.addr, align 8, !dbg !5646
  br label %for.inc273, !dbg !5647

for.inc273:                                       ; preds = %for.body261
  %179 = load i64, i64* %x, align 8, !dbg !5648
  %inc274 = add nsw i64 %179, 1, !dbg !5648
  store i64 %inc274, i64* %x, align 8, !dbg !5648
  br label %for.cond258, !dbg !5649, !llvm.loop !5650

for.end275:                                       ; preds = %for.cond258
  br label %sw.epilog, !dbg !5652

if.end276:                                        ; preds = %sw.bb252
  store i64 0, i64* %x, align 8, !dbg !5653
  br label %for.cond277, !dbg !5655

for.cond277:                                      ; preds = %for.inc296, %if.end276
  %180 = load i64, i64* %x, align 8, !dbg !5656
  %181 = load i64, i64* %number_pixels.addr, align 8, !dbg !5658
  %cmp278 = icmp slt i64 %180, %181, !dbg !5659
  br i1 %cmp278, label %for.body280, label %for.end298, !dbg !5660

for.body280:                                      ; preds = %for.cond277
  %182 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5661
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5663
  %call281 = call float @GetPixelLuma(%struct._Image* %182, %struct._PixelPacket* %183), !dbg !5664
  %call282 = call zeroext i16 @ClampToQuantum(float %call281), !dbg !5665
  %call283 = call i32 @ScaleQuantumToLong(i16 zeroext %call282), !dbg !5666
  store i32 %call283, i32* %pixel253, align 4, !dbg !5667
  %184 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5668
  %endian284 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %184, i32 0, i32 13, !dbg !5669
  %185 = load i32, i32* %endian284, align 8, !dbg !5669
  %186 = load i32, i32* %pixel253, align 4, !dbg !5670
  %187 = load i8*, i8** %q.addr, align 8, !dbg !5671
  %call285 = call i8* @PopLongPixel(i32 %185, i32 %186, i8* %187), !dbg !5672
  store i8* %call285, i8** %q.addr, align 8, !dbg !5673
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5674
  %opacity286 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 0, i32 3, !dbg !5674
  %189 = load i16, i16* %opacity286, align 2, !dbg !5674
  %conv287 = zext i16 %189 to i32, !dbg !5674
  %sub288 = sub nsw i32 65535, %conv287, !dbg !5675
  %conv289 = trunc i32 %sub288 to i16, !dbg !5676
  %call290 = call i32 @ScaleQuantumToLong(i16 zeroext %conv289), !dbg !5677
  store i32 %call290, i32* %pixel253, align 4, !dbg !5678
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5679
  %endian291 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %190, i32 0, i32 13, !dbg !5680
  %191 = load i32, i32* %endian291, align 8, !dbg !5680
  %192 = load i32, i32* %pixel253, align 4, !dbg !5681
  %193 = load i8*, i8** %q.addr, align 8, !dbg !5682
  %call292 = call i8* @PopLongPixel(i32 %191, i32 %192, i8* %193), !dbg !5683
  store i8* %call292, i8** %q.addr, align 8, !dbg !5684
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5685
  %incdec.ptr293 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 1, !dbg !5685
  store %struct._PixelPacket* %incdec.ptr293, %struct._PixelPacket** %p.addr, align 8, !dbg !5685
  %195 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5686
  %pad294 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %195, i32 0, i32 6, !dbg !5687
  %196 = load i64, i64* %pad294, align 8, !dbg !5687
  %197 = load i8*, i8** %q.addr, align 8, !dbg !5688
  %add.ptr295 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !5688
  store i8* %add.ptr295, i8** %q.addr, align 8, !dbg !5688
  br label %for.inc296, !dbg !5689

for.inc296:                                       ; preds = %for.body280
  %198 = load i64, i64* %x, align 8, !dbg !5690
  %inc297 = add nsw i64 %198, 1, !dbg !5690
  store i64 %inc297, i64* %x, align 8, !dbg !5690
  br label %for.cond277, !dbg !5691, !llvm.loop !5692

for.end298:                                       ; preds = %for.cond277
  br label %sw.epilog, !dbg !5694

sw.bb299:                                         ; preds = %entry
  %199 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5695
  %format300 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %199, i32 0, i32 2, !dbg !5698
  %200 = load i32, i32* %format300, align 8, !dbg !5698
  %cmp301 = icmp eq i32 %200, 1, !dbg !5699
  br i1 %cmp301, label %if.then303, label %if.end323, !dbg !5700

if.then303:                                       ; preds = %sw.bb299
  store i64 0, i64* %x, align 8, !dbg !5701
  br label %for.cond304, !dbg !5704

for.cond304:                                      ; preds = %for.inc320, %if.then303
  %201 = load i64, i64* %x, align 8, !dbg !5705
  %202 = load i64, i64* %number_pixels.addr, align 8, !dbg !5707
  %cmp305 = icmp slt i64 %201, %202, !dbg !5708
  br i1 %cmp305, label %for.body307, label %for.end322, !dbg !5709

for.body307:                                      ; preds = %for.cond304
  call void @llvm.dbg.declare(metadata double* %pixel308, metadata !5710, metadata !DIExpression()), !dbg !5712
  %203 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5713
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5714
  %call309 = call float @GetPixelLuma(%struct._Image* %203, %struct._PixelPacket* %204), !dbg !5715
  %conv310 = fpext float %call309 to double, !dbg !5716
  store double %conv310, double* %pixel308, align 8, !dbg !5717
  %205 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5718
  %206 = load double, double* %pixel308, align 8, !dbg !5719
  %207 = load i8*, i8** %q.addr, align 8, !dbg !5720
  %call311 = call i8* @PopDoublePixel(%struct._QuantumInfo* %205, double %206, i8* %207), !dbg !5721
  store i8* %call311, i8** %q.addr, align 8, !dbg !5722
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5723
  %opacity312 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %208, i32 0, i32 3, !dbg !5723
  %209 = load i16, i16* %opacity312, align 2, !dbg !5723
  %conv313 = zext i16 %209 to i32, !dbg !5723
  %sub314 = sub nsw i32 65535, %conv313, !dbg !5723
  %conv315 = sitofp i32 %sub314 to double, !dbg !5724
  store double %conv315, double* %pixel308, align 8, !dbg !5725
  %210 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5726
  %211 = load double, double* %pixel308, align 8, !dbg !5727
  %212 = load i8*, i8** %q.addr, align 8, !dbg !5728
  %call316 = call i8* @PopDoublePixel(%struct._QuantumInfo* %210, double %211, i8* %212), !dbg !5729
  store i8* %call316, i8** %q.addr, align 8, !dbg !5730
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5731
  %incdec.ptr317 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 1, !dbg !5731
  store %struct._PixelPacket* %incdec.ptr317, %struct._PixelPacket** %p.addr, align 8, !dbg !5731
  %214 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5732
  %pad318 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %214, i32 0, i32 6, !dbg !5733
  %215 = load i64, i64* %pad318, align 8, !dbg !5733
  %216 = load i8*, i8** %q.addr, align 8, !dbg !5734
  %add.ptr319 = getelementptr inbounds i8, i8* %216, i64 %215, !dbg !5734
  store i8* %add.ptr319, i8** %q.addr, align 8, !dbg !5734
  br label %for.inc320, !dbg !5735

for.inc320:                                       ; preds = %for.body307
  %217 = load i64, i64* %x, align 8, !dbg !5736
  %inc321 = add nsw i64 %217, 1, !dbg !5736
  store i64 %inc321, i64* %x, align 8, !dbg !5736
  br label %for.cond304, !dbg !5737, !llvm.loop !5738

for.end322:                                       ; preds = %for.cond304
  br label %sw.epilog, !dbg !5740

if.end323:                                        ; preds = %sw.bb299
  br label %sw.default, !dbg !5741

sw.default:                                       ; preds = %entry, %if.end323
  %218 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5742
  %depth324 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %218, i32 0, i32 0, !dbg !5744
  %219 = load i64, i64* %depth324, align 8, !dbg !5744
  %call325 = call i64 @GetQuantumRange(i64 %219), !dbg !5745
  store i64 %call325, i64* %range, align 8, !dbg !5746
  store i64 0, i64* %x, align 8, !dbg !5747
  br label %for.cond326, !dbg !5749

for.cond326:                                      ; preds = %for.inc343, %sw.default
  %220 = load i64, i64* %x, align 8, !dbg !5750
  %221 = load i64, i64* %number_pixels.addr, align 8, !dbg !5752
  %cmp327 = icmp slt i64 %220, %221, !dbg !5753
  br i1 %cmp327, label %for.body329, label %for.end345, !dbg !5754

for.body329:                                      ; preds = %for.cond326
  %222 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5755
  %223 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5757
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5758
  %call330 = call float @GetPixelLuma(%struct._Image* %223, %struct._PixelPacket* %224), !dbg !5759
  %call331 = call zeroext i16 @ClampToQuantum(float %call330), !dbg !5760
  %225 = load i64, i64* %range, align 8, !dbg !5761
  %call332 = call i64 @ScaleQuantumToAny(i16 zeroext %call331, i64 %225), !dbg !5762
  %226 = load i8*, i8** %q.addr, align 8, !dbg !5763
  %call333 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %222, i64 %call332, i8* %226), !dbg !5764
  store i8* %call333, i8** %q.addr, align 8, !dbg !5765
  %227 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5766
  %228 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5767
  %opacity334 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %228, i32 0, i32 3, !dbg !5767
  %229 = load i16, i16* %opacity334, align 2, !dbg !5767
  %conv335 = zext i16 %229 to i32, !dbg !5767
  %sub336 = sub nsw i32 65535, %conv335, !dbg !5767
  %conv337 = trunc i32 %sub336 to i16, !dbg !5768
  %230 = load i64, i64* %range, align 8, !dbg !5769
  %call338 = call i64 @ScaleQuantumToAny(i16 zeroext %conv337, i64 %230), !dbg !5770
  %231 = load i8*, i8** %q.addr, align 8, !dbg !5771
  %call339 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %227, i64 %call338, i8* %231), !dbg !5772
  store i8* %call339, i8** %q.addr, align 8, !dbg !5773
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5774
  %incdec.ptr340 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 1, !dbg !5774
  store %struct._PixelPacket* %incdec.ptr340, %struct._PixelPacket** %p.addr, align 8, !dbg !5774
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5775
  %pad341 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %233, i32 0, i32 6, !dbg !5776
  %234 = load i64, i64* %pad341, align 8, !dbg !5776
  %235 = load i8*, i8** %q.addr, align 8, !dbg !5777
  %add.ptr342 = getelementptr inbounds i8, i8* %235, i64 %234, !dbg !5777
  store i8* %add.ptr342, i8** %q.addr, align 8, !dbg !5777
  br label %for.inc343, !dbg !5778

for.inc343:                                       ; preds = %for.body329
  %236 = load i64, i64* %x, align 8, !dbg !5779
  %inc344 = add nsw i64 %236, 1, !dbg !5779
  store i64 %inc344, i64* %x, align 8, !dbg !5779
  br label %for.cond326, !dbg !5780, !llvm.loop !5781

for.end345:                                       ; preds = %for.cond326
  br label %sw.epilog, !dbg !5783

sw.epilog:                                        ; preds = %for.end345, %for.end322, %for.end298, %for.end275, %for.end251, %for.end228, %for.end198, %for.end178, %if.end149
  ret void, !dbg !5784
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportGreenQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !5785 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel3 = alloca i16, align 2
  %pixel34 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !5786, metadata !DIExpression()), !dbg !5787
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !5788, metadata !DIExpression()), !dbg !5789
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !5790, metadata !DIExpression()), !dbg !5791
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.declare(metadata i64* %range, metadata !5794, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5796, metadata !DIExpression()), !dbg !5797
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5798
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !5799
  %1 = load i64, i64* %depth, align 8, !dbg !5799
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb2
    i64 32, label %sw.bb33
    i64 64, label %sw.bb67
  ], !dbg !5800

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !5801, metadata !DIExpression()), !dbg !5804
  store i64 0, i64* %x, align 8, !dbg !5805
  br label %for.cond, !dbg !5807

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !5808
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !5810
  %cmp = icmp slt i64 %2, %3, !dbg !5811
  br i1 %cmp, label %for.body, label %for.end, !dbg !5812

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5813
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 1, !dbg !5813
  %5 = load i16, i16* %green, align 2, !dbg !5813
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !5815
  store i8 %call, i8* %pixel, align 1, !dbg !5816
  %6 = load i8, i8* %pixel, align 1, !dbg !5817
  %7 = load i8*, i8** %q.addr, align 8, !dbg !5818
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !5819
  store i8* %call1, i8** %q.addr, align 8, !dbg !5820
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5821
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 1, !dbg !5821
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !5821
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5822
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 6, !dbg !5823
  %10 = load i64, i64* %pad, align 8, !dbg !5823
  %11 = load i8*, i8** %q.addr, align 8, !dbg !5824
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !5824
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !5824
  br label %for.inc, !dbg !5825

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %x, align 8, !dbg !5826
  %inc = add nsw i64 %12, 1, !dbg !5826
  store i64 %inc, i64* %x, align 8, !dbg !5826
  br label %for.cond, !dbg !5827, !llvm.loop !5828

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !5830

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel3, metadata !5831, metadata !DIExpression()), !dbg !5833
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5834
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 2, !dbg !5836
  %14 = load i32, i32* %format, align 8, !dbg !5836
  %cmp4 = icmp eq i32 %14, 1, !dbg !5837
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5838

if.then:                                          ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !5839
  br label %for.cond5, !dbg !5842

for.cond5:                                        ; preds = %for.inc16, %if.then
  %15 = load i64, i64* %x, align 8, !dbg !5843
  %16 = load i64, i64* %number_pixels.addr, align 8, !dbg !5845
  %cmp6 = icmp slt i64 %15, %16, !dbg !5846
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !5847

for.body7:                                        ; preds = %for.cond5
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5848
  %green8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 1, !dbg !5848
  %18 = load i16, i16* %green8, align 2, !dbg !5848
  %conv = zext i16 %18 to i32, !dbg !5848
  %conv9 = sitofp i32 %conv to double, !dbg !5848
  %mul = fmul double 0x3EF0001000100010, %conv9, !dbg !5850
  %conv10 = fptrunc double %mul to float, !dbg !5851
  %call11 = call zeroext i16 @SinglePrecisionToHalf(float %conv10), !dbg !5852
  store i16 %call11, i16* %pixel3, align 2, !dbg !5853
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5854
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 13, !dbg !5855
  %20 = load i32, i32* %endian, align 8, !dbg !5855
  %21 = load i16, i16* %pixel3, align 2, !dbg !5856
  %22 = load i8*, i8** %q.addr, align 8, !dbg !5857
  %call12 = call i8* @PopShortPixel(i32 %20, i16 zeroext %21, i8* %22), !dbg !5858
  store i8* %call12, i8** %q.addr, align 8, !dbg !5859
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5860
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !5860
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p.addr, align 8, !dbg !5860
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5861
  %pad14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 6, !dbg !5862
  %25 = load i64, i64* %pad14, align 8, !dbg !5862
  %26 = load i8*, i8** %q.addr, align 8, !dbg !5863
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !5863
  store i8* %add.ptr15, i8** %q.addr, align 8, !dbg !5863
  br label %for.inc16, !dbg !5864

for.inc16:                                        ; preds = %for.body7
  %27 = load i64, i64* %x, align 8, !dbg !5865
  %inc17 = add nsw i64 %27, 1, !dbg !5865
  store i64 %inc17, i64* %x, align 8, !dbg !5865
  br label %for.cond5, !dbg !5866, !llvm.loop !5867

for.end18:                                        ; preds = %for.cond5
  br label %sw.epilog, !dbg !5869

if.end:                                           ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !5870
  br label %for.cond19, !dbg !5872

for.cond19:                                       ; preds = %for.inc30, %if.end
  %28 = load i64, i64* %x, align 8, !dbg !5873
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !5875
  %cmp20 = icmp slt i64 %28, %29, !dbg !5876
  br i1 %cmp20, label %for.body22, label %for.end32, !dbg !5877

for.body22:                                       ; preds = %for.cond19
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5878
  %green23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 1, !dbg !5878
  %31 = load i16, i16* %green23, align 2, !dbg !5878
  %call24 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %31), !dbg !5880
  store i16 %call24, i16* %pixel3, align 2, !dbg !5881
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5882
  %endian25 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !5883
  %33 = load i32, i32* %endian25, align 8, !dbg !5883
  %34 = load i16, i16* %pixel3, align 2, !dbg !5884
  %35 = load i8*, i8** %q.addr, align 8, !dbg !5885
  %call26 = call i8* @PopShortPixel(i32 %33, i16 zeroext %34, i8* %35), !dbg !5886
  store i8* %call26, i8** %q.addr, align 8, !dbg !5887
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5888
  %incdec.ptr27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !5888
  store %struct._PixelPacket* %incdec.ptr27, %struct._PixelPacket** %p.addr, align 8, !dbg !5888
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5889
  %pad28 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !5890
  %38 = load i64, i64* %pad28, align 8, !dbg !5890
  %39 = load i8*, i8** %q.addr, align 8, !dbg !5891
  %add.ptr29 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !5891
  store i8* %add.ptr29, i8** %q.addr, align 8, !dbg !5891
  br label %for.inc30, !dbg !5892

for.inc30:                                        ; preds = %for.body22
  %40 = load i64, i64* %x, align 8, !dbg !5893
  %inc31 = add nsw i64 %40, 1, !dbg !5893
  store i64 %inc31, i64* %x, align 8, !dbg !5893
  br label %for.cond19, !dbg !5894, !llvm.loop !5895

for.end32:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !5897

sw.bb33:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel34, metadata !5898, metadata !DIExpression()), !dbg !5900
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5901
  %format35 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 2, !dbg !5903
  %42 = load i32, i32* %format35, align 8, !dbg !5903
  %cmp36 = icmp eq i32 %42, 1, !dbg !5904
  br i1 %cmp36, label %if.then38, label %if.end52, !dbg !5905

if.then38:                                        ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !5906
  br label %for.cond39, !dbg !5909

for.cond39:                                       ; preds = %for.inc49, %if.then38
  %43 = load i64, i64* %x, align 8, !dbg !5910
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !5912
  %cmp40 = icmp slt i64 %43, %44, !dbg !5913
  br i1 %cmp40, label %for.body42, label %for.end51, !dbg !5914

for.body42:                                       ; preds = %for.cond39
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5915
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5917
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 1, !dbg !5917
  %47 = load i16, i16* %green43, align 2, !dbg !5917
  %conv44 = uitofp i16 %47 to float, !dbg !5918
  %48 = load i8*, i8** %q.addr, align 8, !dbg !5919
  %call45 = call i8* @PopFloatPixel(%struct._QuantumInfo* %45, float %conv44, i8* %48), !dbg !5920
  store i8* %call45, i8** %q.addr, align 8, !dbg !5921
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5922
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !5922
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %p.addr, align 8, !dbg !5922
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5923
  %pad47 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 6, !dbg !5924
  %51 = load i64, i64* %pad47, align 8, !dbg !5924
  %52 = load i8*, i8** %q.addr, align 8, !dbg !5925
  %add.ptr48 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !5925
  store i8* %add.ptr48, i8** %q.addr, align 8, !dbg !5925
  br label %for.inc49, !dbg !5926

for.inc49:                                        ; preds = %for.body42
  %53 = load i64, i64* %x, align 8, !dbg !5927
  %inc50 = add nsw i64 %53, 1, !dbg !5927
  store i64 %inc50, i64* %x, align 8, !dbg !5927
  br label %for.cond39, !dbg !5928, !llvm.loop !5929

for.end51:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !5931

if.end52:                                         ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !5932
  br label %for.cond53, !dbg !5934

for.cond53:                                       ; preds = %for.inc64, %if.end52
  %54 = load i64, i64* %x, align 8, !dbg !5935
  %55 = load i64, i64* %number_pixels.addr, align 8, !dbg !5937
  %cmp54 = icmp slt i64 %54, %55, !dbg !5938
  br i1 %cmp54, label %for.body56, label %for.end66, !dbg !5939

for.body56:                                       ; preds = %for.cond53
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5940
  %green57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 1, !dbg !5940
  %57 = load i16, i16* %green57, align 2, !dbg !5940
  %call58 = call i32 @ScaleQuantumToLong(i16 zeroext %57), !dbg !5942
  store i32 %call58, i32* %pixel34, align 4, !dbg !5943
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5944
  %endian59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 13, !dbg !5945
  %59 = load i32, i32* %endian59, align 8, !dbg !5945
  %60 = load i32, i32* %pixel34, align 4, !dbg !5946
  %61 = load i8*, i8** %q.addr, align 8, !dbg !5947
  %call60 = call i8* @PopLongPixel(i32 %59, i32 %60, i8* %61), !dbg !5948
  store i8* %call60, i8** %q.addr, align 8, !dbg !5949
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5950
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !5950
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %p.addr, align 8, !dbg !5950
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5951
  %pad62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 6, !dbg !5952
  %64 = load i64, i64* %pad62, align 8, !dbg !5952
  %65 = load i8*, i8** %q.addr, align 8, !dbg !5953
  %add.ptr63 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !5953
  store i8* %add.ptr63, i8** %q.addr, align 8, !dbg !5953
  br label %for.inc64, !dbg !5954

for.inc64:                                        ; preds = %for.body56
  %66 = load i64, i64* %x, align 8, !dbg !5955
  %inc65 = add nsw i64 %66, 1, !dbg !5955
  store i64 %inc65, i64* %x, align 8, !dbg !5955
  br label %for.cond53, !dbg !5956, !llvm.loop !5957

for.end66:                                        ; preds = %for.cond53
  br label %sw.epilog, !dbg !5959

sw.bb67:                                          ; preds = %entry
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5960
  %format68 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %67, i32 0, i32 2, !dbg !5963
  %68 = load i32, i32* %format68, align 8, !dbg !5963
  %cmp69 = icmp eq i32 %68, 1, !dbg !5964
  br i1 %cmp69, label %if.then71, label %if.end85, !dbg !5965

if.then71:                                        ; preds = %sw.bb67
  store i64 0, i64* %x, align 8, !dbg !5966
  br label %for.cond72, !dbg !5969

for.cond72:                                       ; preds = %for.inc82, %if.then71
  %69 = load i64, i64* %x, align 8, !dbg !5970
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !5972
  %cmp73 = icmp slt i64 %69, %70, !dbg !5973
  br i1 %cmp73, label %for.body75, label %for.end84, !dbg !5974

for.body75:                                       ; preds = %for.cond72
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5975
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5977
  %green76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 1, !dbg !5977
  %73 = load i16, i16* %green76, align 2, !dbg !5977
  %conv77 = uitofp i16 %73 to double, !dbg !5978
  %74 = load i8*, i8** %q.addr, align 8, !dbg !5979
  %call78 = call i8* @PopDoublePixel(%struct._QuantumInfo* %71, double %conv77, i8* %74), !dbg !5980
  store i8* %call78, i8** %q.addr, align 8, !dbg !5981
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5982
  %incdec.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 1, !dbg !5982
  store %struct._PixelPacket* %incdec.ptr79, %struct._PixelPacket** %p.addr, align 8, !dbg !5982
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5983
  %pad80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 6, !dbg !5984
  %77 = load i64, i64* %pad80, align 8, !dbg !5984
  %78 = load i8*, i8** %q.addr, align 8, !dbg !5985
  %add.ptr81 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !5985
  store i8* %add.ptr81, i8** %q.addr, align 8, !dbg !5985
  br label %for.inc82, !dbg !5986

for.inc82:                                        ; preds = %for.body75
  %79 = load i64, i64* %x, align 8, !dbg !5987
  %inc83 = add nsw i64 %79, 1, !dbg !5987
  store i64 %inc83, i64* %x, align 8, !dbg !5987
  br label %for.cond72, !dbg !5988, !llvm.loop !5989

for.end84:                                        ; preds = %for.cond72
  br label %sw.epilog, !dbg !5991

if.end85:                                         ; preds = %sw.bb67
  br label %sw.default, !dbg !5992

sw.default:                                       ; preds = %entry, %if.end85
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5993
  %depth86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 0, !dbg !5995
  %81 = load i64, i64* %depth86, align 8, !dbg !5995
  %call87 = call i64 @GetQuantumRange(i64 %81), !dbg !5996
  store i64 %call87, i64* %range, align 8, !dbg !5997
  store i64 0, i64* %x, align 8, !dbg !5998
  br label %for.cond88, !dbg !6000

for.cond88:                                       ; preds = %for.inc98, %sw.default
  %82 = load i64, i64* %x, align 8, !dbg !6001
  %83 = load i64, i64* %number_pixels.addr, align 8, !dbg !6003
  %cmp89 = icmp slt i64 %82, %83, !dbg !6004
  br i1 %cmp89, label %for.body91, label %for.end100, !dbg !6005

for.body91:                                       ; preds = %for.cond88
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6006
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6008
  %green92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 1, !dbg !6008
  %86 = load i16, i16* %green92, align 2, !dbg !6008
  %87 = load i64, i64* %range, align 8, !dbg !6009
  %call93 = call i64 @ScaleQuantumToAny(i16 zeroext %86, i64 %87), !dbg !6010
  %88 = load i8*, i8** %q.addr, align 8, !dbg !6011
  %call94 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %84, i64 %call93, i8* %88), !dbg !6012
  store i8* %call94, i8** %q.addr, align 8, !dbg !6013
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6014
  %incdec.ptr95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !6014
  store %struct._PixelPacket* %incdec.ptr95, %struct._PixelPacket** %p.addr, align 8, !dbg !6014
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6015
  %pad96 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !6016
  %91 = load i64, i64* %pad96, align 8, !dbg !6016
  %92 = load i8*, i8** %q.addr, align 8, !dbg !6017
  %add.ptr97 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !6017
  store i8* %add.ptr97, i8** %q.addr, align 8, !dbg !6017
  br label %for.inc98, !dbg !6018

for.inc98:                                        ; preds = %for.body91
  %93 = load i64, i64* %x, align 8, !dbg !6019
  %inc99 = add nsw i64 %93, 1, !dbg !6019
  store i64 %inc99, i64* %x, align 8, !dbg !6019
  br label %for.cond88, !dbg !6020, !llvm.loop !6021

for.end100:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !6023

sw.epilog:                                        ; preds = %for.end100, %for.end84, %for.end66, %for.end51, %for.end32, %for.end18, %for.end
  ret void, !dbg !6024
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportIndexQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i16* noalias %indexes, i8* noalias %q, %struct._ExceptionInfo* %exception) #0 !dbg !6025 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %q.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel85 = alloca i8, align 1
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !6042, metadata !DIExpression()), !dbg !6043
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6044
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 0, !dbg !6046
  %1 = load i32, i32* %storage_class, align 8, !dbg !6046
  %cmp = icmp ne i32 %1, 2, !dbg !6047
  br i1 %cmp, label %if.then, label %if.end, !dbg !6048

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6049
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6051
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !6052
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6051
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2099, i32 465, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !6053
  br label %sw.epilog, !dbg !6054

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6055
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !6056
  %5 = load i64, i64* %depth, align 8, !dbg !6056
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb84
    i64 8, label %sw.bb120
    i64 16, label %sw.bb134
    i64 32, label %sw.bb182
    i64 64, label %sw.bb229
  ], !dbg !6057

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !6058, metadata !DIExpression()), !dbg !6061
  %6 = load i64, i64* %number_pixels.addr, align 8, !dbg !6062
  %sub = sub nsw i64 %6, 7, !dbg !6064
  store i64 %sub, i64* %x, align 8, !dbg !6065
  br label %for.cond, !dbg !6066

for.cond:                                         ; preds = %for.inc, %sw.bb
  %7 = load i64, i64* %x, align 8, !dbg !6067
  %cmp1 = icmp sgt i64 %7, 0, !dbg !6069
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6070

for.body:                                         ; preds = %for.cond
  %8 = load i16*, i16** %indexes.addr, align 8, !dbg !6071
  %incdec.ptr = getelementptr inbounds i16, i16* %8, i32 1, !dbg !6071
  store i16* %incdec.ptr, i16** %indexes.addr, align 8, !dbg !6071
  %9 = load i16, i16* %8, align 2, !dbg !6073
  %conv = trunc i16 %9 to i8, !dbg !6074
  store i8 %conv, i8* %pixel, align 1, !dbg !6075
  %10 = load i8, i8* %pixel, align 1, !dbg !6076
  %conv2 = zext i8 %10 to i32, !dbg !6076
  %and = and i32 %conv2, 1, !dbg !6077
  %shl = shl i32 %and, 7, !dbg !6078
  %conv3 = trunc i32 %shl to i8, !dbg !6079
  %11 = load i8*, i8** %q.addr, align 8, !dbg !6080
  store i8 %conv3, i8* %11, align 1, !dbg !6081
  %12 = load i16*, i16** %indexes.addr, align 8, !dbg !6082
  %incdec.ptr4 = getelementptr inbounds i16, i16* %12, i32 1, !dbg !6082
  store i16* %incdec.ptr4, i16** %indexes.addr, align 8, !dbg !6082
  %13 = load i16, i16* %12, align 2, !dbg !6083
  %conv5 = trunc i16 %13 to i8, !dbg !6084
  store i8 %conv5, i8* %pixel, align 1, !dbg !6085
  %14 = load i8, i8* %pixel, align 1, !dbg !6086
  %conv6 = zext i8 %14 to i32, !dbg !6086
  %and7 = and i32 %conv6, 1, !dbg !6087
  %shl8 = shl i32 %and7, 6, !dbg !6088
  %15 = load i8*, i8** %q.addr, align 8, !dbg !6089
  %16 = load i8, i8* %15, align 1, !dbg !6090
  %conv9 = zext i8 %16 to i32, !dbg !6090
  %or = or i32 %conv9, %shl8, !dbg !6090
  %conv10 = trunc i32 %or to i8, !dbg !6090
  store i8 %conv10, i8* %15, align 1, !dbg !6090
  %17 = load i16*, i16** %indexes.addr, align 8, !dbg !6091
  %incdec.ptr11 = getelementptr inbounds i16, i16* %17, i32 1, !dbg !6091
  store i16* %incdec.ptr11, i16** %indexes.addr, align 8, !dbg !6091
  %18 = load i16, i16* %17, align 2, !dbg !6092
  %conv12 = trunc i16 %18 to i8, !dbg !6093
  store i8 %conv12, i8* %pixel, align 1, !dbg !6094
  %19 = load i8, i8* %pixel, align 1, !dbg !6095
  %conv13 = zext i8 %19 to i32, !dbg !6095
  %and14 = and i32 %conv13, 1, !dbg !6096
  %shl15 = shl i32 %and14, 5, !dbg !6097
  %20 = load i8*, i8** %q.addr, align 8, !dbg !6098
  %21 = load i8, i8* %20, align 1, !dbg !6099
  %conv16 = zext i8 %21 to i32, !dbg !6099
  %or17 = or i32 %conv16, %shl15, !dbg !6099
  %conv18 = trunc i32 %or17 to i8, !dbg !6099
  store i8 %conv18, i8* %20, align 1, !dbg !6099
  %22 = load i16*, i16** %indexes.addr, align 8, !dbg !6100
  %incdec.ptr19 = getelementptr inbounds i16, i16* %22, i32 1, !dbg !6100
  store i16* %incdec.ptr19, i16** %indexes.addr, align 8, !dbg !6100
  %23 = load i16, i16* %22, align 2, !dbg !6101
  %conv20 = trunc i16 %23 to i8, !dbg !6102
  store i8 %conv20, i8* %pixel, align 1, !dbg !6103
  %24 = load i8, i8* %pixel, align 1, !dbg !6104
  %conv21 = zext i8 %24 to i32, !dbg !6104
  %and22 = and i32 %conv21, 1, !dbg !6105
  %shl23 = shl i32 %and22, 4, !dbg !6106
  %25 = load i8*, i8** %q.addr, align 8, !dbg !6107
  %26 = load i8, i8* %25, align 1, !dbg !6108
  %conv24 = zext i8 %26 to i32, !dbg !6108
  %or25 = or i32 %conv24, %shl23, !dbg !6108
  %conv26 = trunc i32 %or25 to i8, !dbg !6108
  store i8 %conv26, i8* %25, align 1, !dbg !6108
  %27 = load i16*, i16** %indexes.addr, align 8, !dbg !6109
  %incdec.ptr27 = getelementptr inbounds i16, i16* %27, i32 1, !dbg !6109
  store i16* %incdec.ptr27, i16** %indexes.addr, align 8, !dbg !6109
  %28 = load i16, i16* %27, align 2, !dbg !6110
  %conv28 = trunc i16 %28 to i8, !dbg !6111
  store i8 %conv28, i8* %pixel, align 1, !dbg !6112
  %29 = load i8, i8* %pixel, align 1, !dbg !6113
  %conv29 = zext i8 %29 to i32, !dbg !6113
  %and30 = and i32 %conv29, 1, !dbg !6114
  %shl31 = shl i32 %and30, 3, !dbg !6115
  %30 = load i8*, i8** %q.addr, align 8, !dbg !6116
  %31 = load i8, i8* %30, align 1, !dbg !6117
  %conv32 = zext i8 %31 to i32, !dbg !6117
  %or33 = or i32 %conv32, %shl31, !dbg !6117
  %conv34 = trunc i32 %or33 to i8, !dbg !6117
  store i8 %conv34, i8* %30, align 1, !dbg !6117
  %32 = load i16*, i16** %indexes.addr, align 8, !dbg !6118
  %incdec.ptr35 = getelementptr inbounds i16, i16* %32, i32 1, !dbg !6118
  store i16* %incdec.ptr35, i16** %indexes.addr, align 8, !dbg !6118
  %33 = load i16, i16* %32, align 2, !dbg !6119
  %conv36 = trunc i16 %33 to i8, !dbg !6120
  store i8 %conv36, i8* %pixel, align 1, !dbg !6121
  %34 = load i8, i8* %pixel, align 1, !dbg !6122
  %conv37 = zext i8 %34 to i32, !dbg !6122
  %and38 = and i32 %conv37, 1, !dbg !6123
  %shl39 = shl i32 %and38, 2, !dbg !6124
  %35 = load i8*, i8** %q.addr, align 8, !dbg !6125
  %36 = load i8, i8* %35, align 1, !dbg !6126
  %conv40 = zext i8 %36 to i32, !dbg !6126
  %or41 = or i32 %conv40, %shl39, !dbg !6126
  %conv42 = trunc i32 %or41 to i8, !dbg !6126
  store i8 %conv42, i8* %35, align 1, !dbg !6126
  %37 = load i16*, i16** %indexes.addr, align 8, !dbg !6127
  %incdec.ptr43 = getelementptr inbounds i16, i16* %37, i32 1, !dbg !6127
  store i16* %incdec.ptr43, i16** %indexes.addr, align 8, !dbg !6127
  %38 = load i16, i16* %37, align 2, !dbg !6128
  %conv44 = trunc i16 %38 to i8, !dbg !6129
  store i8 %conv44, i8* %pixel, align 1, !dbg !6130
  %39 = load i8, i8* %pixel, align 1, !dbg !6131
  %conv45 = zext i8 %39 to i32, !dbg !6131
  %and46 = and i32 %conv45, 1, !dbg !6132
  %shl47 = shl i32 %and46, 1, !dbg !6133
  %40 = load i8*, i8** %q.addr, align 8, !dbg !6134
  %41 = load i8, i8* %40, align 1, !dbg !6135
  %conv48 = zext i8 %41 to i32, !dbg !6135
  %or49 = or i32 %conv48, %shl47, !dbg !6135
  %conv50 = trunc i32 %or49 to i8, !dbg !6135
  store i8 %conv50, i8* %40, align 1, !dbg !6135
  %42 = load i16*, i16** %indexes.addr, align 8, !dbg !6136
  %incdec.ptr51 = getelementptr inbounds i16, i16* %42, i32 1, !dbg !6136
  store i16* %incdec.ptr51, i16** %indexes.addr, align 8, !dbg !6136
  %43 = load i16, i16* %42, align 2, !dbg !6137
  %conv52 = trunc i16 %43 to i8, !dbg !6138
  store i8 %conv52, i8* %pixel, align 1, !dbg !6139
  %44 = load i8, i8* %pixel, align 1, !dbg !6140
  %conv53 = zext i8 %44 to i32, !dbg !6140
  %and54 = and i32 %conv53, 1, !dbg !6141
  %shl55 = shl i32 %and54, 0, !dbg !6142
  %45 = load i8*, i8** %q.addr, align 8, !dbg !6143
  %46 = load i8, i8* %45, align 1, !dbg !6144
  %conv56 = zext i8 %46 to i32, !dbg !6144
  %or57 = or i32 %conv56, %shl55, !dbg !6144
  %conv58 = trunc i32 %or57 to i8, !dbg !6144
  store i8 %conv58, i8* %45, align 1, !dbg !6144
  %47 = load i8*, i8** %q.addr, align 8, !dbg !6145
  %incdec.ptr59 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !6145
  store i8* %incdec.ptr59, i8** %q.addr, align 8, !dbg !6145
  br label %for.inc, !dbg !6146

for.inc:                                          ; preds = %for.body
  %48 = load i64, i64* %x, align 8, !dbg !6147
  %sub60 = sub nsw i64 %48, 8, !dbg !6147
  store i64 %sub60, i64* %x, align 8, !dbg !6147
  br label %for.cond, !dbg !6148, !llvm.loop !6149

for.end:                                          ; preds = %for.cond
  %49 = load i64, i64* %number_pixels.addr, align 8, !dbg !6151
  %rem = urem i64 %49, 8, !dbg !6153
  %cmp61 = icmp ne i64 %rem, 0, !dbg !6154
  br i1 %cmp61, label %if.then63, label %if.end83, !dbg !6155

if.then63:                                        ; preds = %for.end
  %50 = load i8*, i8** %q.addr, align 8, !dbg !6156
  store i8 0, i8* %50, align 1, !dbg !6158
  store i64 7, i64* %bit, align 8, !dbg !6159
  br label %for.cond64, !dbg !6161

for.cond64:                                       ; preds = %for.inc80, %if.then63
  %51 = load i64, i64* %bit, align 8, !dbg !6162
  %52 = load i64, i64* %number_pixels.addr, align 8, !dbg !6164
  %rem65 = urem i64 %52, 8, !dbg !6165
  %sub66 = sub i64 8, %rem65, !dbg !6166
  %cmp67 = icmp sge i64 %51, %sub66, !dbg !6167
  br i1 %cmp67, label %for.body69, label %for.end81, !dbg !6168

for.body69:                                       ; preds = %for.cond64
  %53 = load i16*, i16** %indexes.addr, align 8, !dbg !6169
  %incdec.ptr70 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !6169
  store i16* %incdec.ptr70, i16** %indexes.addr, align 8, !dbg !6169
  %54 = load i16, i16* %53, align 2, !dbg !6171
  %conv71 = trunc i16 %54 to i8, !dbg !6172
  store i8 %conv71, i8* %pixel, align 1, !dbg !6173
  %55 = load i8, i8* %pixel, align 1, !dbg !6174
  %conv72 = zext i8 %55 to i32, !dbg !6174
  %and73 = and i32 %conv72, 1, !dbg !6175
  %56 = load i64, i64* %bit, align 8, !dbg !6176
  %conv74 = trunc i64 %56 to i8, !dbg !6177
  %conv75 = zext i8 %conv74 to i32, !dbg !6177
  %shl76 = shl i32 %and73, %conv75, !dbg !6178
  %57 = load i8*, i8** %q.addr, align 8, !dbg !6179
  %58 = load i8, i8* %57, align 1, !dbg !6180
  %conv77 = zext i8 %58 to i32, !dbg !6180
  %or78 = or i32 %conv77, %shl76, !dbg !6180
  %conv79 = trunc i32 %or78 to i8, !dbg !6180
  store i8 %conv79, i8* %57, align 1, !dbg !6180
  br label %for.inc80, !dbg !6181

for.inc80:                                        ; preds = %for.body69
  %59 = load i64, i64* %bit, align 8, !dbg !6182
  %dec = add nsw i64 %59, -1, !dbg !6182
  store i64 %dec, i64* %bit, align 8, !dbg !6182
  br label %for.cond64, !dbg !6183, !llvm.loop !6184

for.end81:                                        ; preds = %for.cond64
  %60 = load i8*, i8** %q.addr, align 8, !dbg !6186
  %incdec.ptr82 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !6186
  store i8* %incdec.ptr82, i8** %q.addr, align 8, !dbg !6186
  br label %if.end83, !dbg !6187

if.end83:                                         ; preds = %for.end81, %for.end
  br label %sw.epilog, !dbg !6188

sw.bb84:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel85, metadata !6189, metadata !DIExpression()), !dbg !6191
  store i64 0, i64* %x, align 8, !dbg !6192
  br label %for.cond86, !dbg !6194

for.cond86:                                       ; preds = %for.inc106, %sw.bb84
  %61 = load i64, i64* %x, align 8, !dbg !6195
  %62 = load i64, i64* %number_pixels.addr, align 8, !dbg !6197
  %sub87 = sub i64 %62, 1, !dbg !6198
  %cmp88 = icmp slt i64 %61, %sub87, !dbg !6199
  br i1 %cmp88, label %for.body90, label %for.end107, !dbg !6200

for.body90:                                       ; preds = %for.cond86
  %63 = load i16*, i16** %indexes.addr, align 8, !dbg !6201
  %incdec.ptr91 = getelementptr inbounds i16, i16* %63, i32 1, !dbg !6201
  store i16* %incdec.ptr91, i16** %indexes.addr, align 8, !dbg !6201
  %64 = load i16, i16* %63, align 2, !dbg !6203
  %conv92 = trunc i16 %64 to i8, !dbg !6204
  store i8 %conv92, i8* %pixel85, align 1, !dbg !6205
  %65 = load i8, i8* %pixel85, align 1, !dbg !6206
  %conv93 = zext i8 %65 to i32, !dbg !6206
  %and94 = and i32 %conv93, 15, !dbg !6207
  %shl95 = shl i32 %and94, 4, !dbg !6208
  %conv96 = trunc i32 %shl95 to i8, !dbg !6209
  %66 = load i8*, i8** %q.addr, align 8, !dbg !6210
  store i8 %conv96, i8* %66, align 1, !dbg !6211
  %67 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %incdec.ptr97 = getelementptr inbounds i16, i16* %67, i32 1, !dbg !6212
  store i16* %incdec.ptr97, i16** %indexes.addr, align 8, !dbg !6212
  %68 = load i16, i16* %67, align 2, !dbg !6213
  %conv98 = trunc i16 %68 to i8, !dbg !6214
  store i8 %conv98, i8* %pixel85, align 1, !dbg !6215
  %69 = load i8, i8* %pixel85, align 1, !dbg !6216
  %conv99 = zext i8 %69 to i32, !dbg !6216
  %and100 = and i32 %conv99, 15, !dbg !6217
  %shl101 = shl i32 %and100, 0, !dbg !6218
  %70 = load i8*, i8** %q.addr, align 8, !dbg !6219
  %71 = load i8, i8* %70, align 1, !dbg !6220
  %conv102 = zext i8 %71 to i32, !dbg !6220
  %or103 = or i32 %conv102, %shl101, !dbg !6220
  %conv104 = trunc i32 %or103 to i8, !dbg !6220
  store i8 %conv104, i8* %70, align 1, !dbg !6220
  %72 = load i8*, i8** %q.addr, align 8, !dbg !6221
  %incdec.ptr105 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !6221
  store i8* %incdec.ptr105, i8** %q.addr, align 8, !dbg !6221
  br label %for.inc106, !dbg !6222

for.inc106:                                       ; preds = %for.body90
  %73 = load i64, i64* %x, align 8, !dbg !6223
  %add = add nsw i64 %73, 2, !dbg !6223
  store i64 %add, i64* %x, align 8, !dbg !6223
  br label %for.cond86, !dbg !6224, !llvm.loop !6225

for.end107:                                       ; preds = %for.cond86
  %74 = load i64, i64* %number_pixels.addr, align 8, !dbg !6227
  %rem108 = urem i64 %74, 2, !dbg !6229
  %cmp109 = icmp ne i64 %rem108, 0, !dbg !6230
  br i1 %cmp109, label %if.then111, label %if.end119, !dbg !6231

if.then111:                                       ; preds = %for.end107
  %75 = load i16*, i16** %indexes.addr, align 8, !dbg !6232
  %incdec.ptr112 = getelementptr inbounds i16, i16* %75, i32 1, !dbg !6232
  store i16* %incdec.ptr112, i16** %indexes.addr, align 8, !dbg !6232
  %76 = load i16, i16* %75, align 2, !dbg !6234
  %conv113 = trunc i16 %76 to i8, !dbg !6235
  store i8 %conv113, i8* %pixel85, align 1, !dbg !6236
  %77 = load i8, i8* %pixel85, align 1, !dbg !6237
  %conv114 = zext i8 %77 to i32, !dbg !6237
  %and115 = and i32 %conv114, 15, !dbg !6238
  %shl116 = shl i32 %and115, 4, !dbg !6239
  %conv117 = trunc i32 %shl116 to i8, !dbg !6240
  %78 = load i8*, i8** %q.addr, align 8, !dbg !6241
  store i8 %conv117, i8* %78, align 1, !dbg !6242
  %79 = load i8*, i8** %q.addr, align 8, !dbg !6243
  %incdec.ptr118 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !6243
  store i8* %incdec.ptr118, i8** %q.addr, align 8, !dbg !6243
  br label %if.end119, !dbg !6244

if.end119:                                        ; preds = %if.then111, %for.end107
  br label %sw.epilog, !dbg !6245

sw.bb120:                                         ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !6246
  br label %for.cond121, !dbg !6249

for.cond121:                                      ; preds = %for.inc132, %sw.bb120
  %80 = load i64, i64* %x, align 8, !dbg !6250
  %81 = load i64, i64* %number_pixels.addr, align 8, !dbg !6252
  %cmp122 = icmp slt i64 %80, %81, !dbg !6253
  br i1 %cmp122, label %for.body124, label %for.end133, !dbg !6254

for.body124:                                      ; preds = %for.cond121
  %82 = load i16*, i16** %indexes.addr, align 8, !dbg !6255
  %83 = load i64, i64* %x, align 8, !dbg !6255
  %add.ptr = getelementptr inbounds i16, i16* %82, i64 %83, !dbg !6255
  %cmp125 = icmp eq i16* %add.ptr, null, !dbg !6255
  br i1 %cmp125, label %cond.true, label %cond.false, !dbg !6255

cond.true:                                        ; preds = %for.body124
  br label %cond.end, !dbg !6255

cond.false:                                       ; preds = %for.body124
  %84 = load i16*, i16** %indexes.addr, align 8, !dbg !6255
  %85 = load i64, i64* %x, align 8, !dbg !6255
  %add.ptr127 = getelementptr inbounds i16, i16* %84, i64 %85, !dbg !6255
  %86 = load i16, i16* %add.ptr127, align 2, !dbg !6255
  %conv128 = zext i16 %86 to i32, !dbg !6255
  br label %cond.end, !dbg !6255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv128, %cond.false ], !dbg !6255
  %conv129 = trunc i32 %cond to i8, !dbg !6257
  %87 = load i8*, i8** %q.addr, align 8, !dbg !6258
  %call130 = call i8* @PopCharPixel(i8 zeroext %conv129, i8* %87), !dbg !6259
  store i8* %call130, i8** %q.addr, align 8, !dbg !6260
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6261
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 6, !dbg !6262
  %89 = load i64, i64* %pad, align 8, !dbg !6262
  %90 = load i8*, i8** %q.addr, align 8, !dbg !6263
  %add.ptr131 = getelementptr inbounds i8, i8* %90, i64 %89, !dbg !6263
  store i8* %add.ptr131, i8** %q.addr, align 8, !dbg !6263
  br label %for.inc132, !dbg !6264

for.inc132:                                       ; preds = %cond.end
  %91 = load i64, i64* %x, align 8, !dbg !6265
  %inc = add nsw i64 %91, 1, !dbg !6265
  store i64 %inc, i64* %x, align 8, !dbg !6265
  br label %for.cond121, !dbg !6266, !llvm.loop !6267

for.end133:                                       ; preds = %for.cond121
  br label %sw.epilog, !dbg !6269

sw.bb134:                                         ; preds = %if.end
  %92 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6270
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %92, i32 0, i32 2, !dbg !6273
  %93 = load i32, i32* %format, align 8, !dbg !6273
  %cmp135 = icmp eq i32 %93, 1, !dbg !6274
  br i1 %cmp135, label %if.then137, label %if.end160, !dbg !6275

if.then137:                                       ; preds = %sw.bb134
  store i64 0, i64* %x, align 8, !dbg !6276
  br label %for.cond138, !dbg !6279

for.cond138:                                      ; preds = %for.inc157, %if.then137
  %94 = load i64, i64* %x, align 8, !dbg !6280
  %95 = load i64, i64* %number_pixels.addr, align 8, !dbg !6282
  %cmp139 = icmp slt i64 %94, %95, !dbg !6283
  br i1 %cmp139, label %for.body141, label %for.end159, !dbg !6284

for.body141:                                      ; preds = %for.cond138
  %96 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6285
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %96, i32 0, i32 13, !dbg !6287
  %97 = load i32, i32* %endian, align 8, !dbg !6287
  %98 = load i16*, i16** %indexes.addr, align 8, !dbg !6288
  %99 = load i64, i64* %x, align 8, !dbg !6288
  %add.ptr142 = getelementptr inbounds i16, i16* %98, i64 %99, !dbg !6288
  %cmp143 = icmp eq i16* %add.ptr142, null, !dbg !6288
  br i1 %cmp143, label %cond.true145, label %cond.false146, !dbg !6288

cond.true145:                                     ; preds = %for.body141
  br label %cond.end149, !dbg !6288

cond.false146:                                    ; preds = %for.body141
  %100 = load i16*, i16** %indexes.addr, align 8, !dbg !6288
  %101 = load i64, i64* %x, align 8, !dbg !6288
  %add.ptr147 = getelementptr inbounds i16, i16* %100, i64 %101, !dbg !6288
  %102 = load i16, i16* %add.ptr147, align 2, !dbg !6288
  %conv148 = zext i16 %102 to i32, !dbg !6288
  br label %cond.end149, !dbg !6288

cond.end149:                                      ; preds = %cond.false146, %cond.true145
  %cond150 = phi i32 [ 0, %cond.true145 ], [ %conv148, %cond.false146 ], !dbg !6288
  %conv151 = sitofp i32 %cond150 to double, !dbg !6288
  %mul = fmul double 0x3EF0001000100010, %conv151, !dbg !6289
  %conv152 = fptrunc double %mul to float, !dbg !6290
  %call153 = call zeroext i16 @SinglePrecisionToHalf(float %conv152), !dbg !6291
  %103 = load i8*, i8** %q.addr, align 8, !dbg !6292
  %call154 = call i8* @PopShortPixel(i32 %97, i16 zeroext %call153, i8* %103), !dbg !6293
  store i8* %call154, i8** %q.addr, align 8, !dbg !6294
  %104 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6295
  %pad155 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %104, i32 0, i32 6, !dbg !6296
  %105 = load i64, i64* %pad155, align 8, !dbg !6296
  %106 = load i8*, i8** %q.addr, align 8, !dbg !6297
  %add.ptr156 = getelementptr inbounds i8, i8* %106, i64 %105, !dbg !6297
  store i8* %add.ptr156, i8** %q.addr, align 8, !dbg !6297
  br label %for.inc157, !dbg !6298

for.inc157:                                       ; preds = %cond.end149
  %107 = load i64, i64* %x, align 8, !dbg !6299
  %inc158 = add nsw i64 %107, 1, !dbg !6299
  store i64 %inc158, i64* %x, align 8, !dbg !6299
  br label %for.cond138, !dbg !6300, !llvm.loop !6301

for.end159:                                       ; preds = %for.cond138
  br label %sw.epilog, !dbg !6303

if.end160:                                        ; preds = %sw.bb134
  store i64 0, i64* %x, align 8, !dbg !6304
  br label %for.cond161, !dbg !6306

for.cond161:                                      ; preds = %for.inc179, %if.end160
  %108 = load i64, i64* %x, align 8, !dbg !6307
  %109 = load i64, i64* %number_pixels.addr, align 8, !dbg !6309
  %cmp162 = icmp slt i64 %108, %109, !dbg !6310
  br i1 %cmp162, label %for.body164, label %for.end181, !dbg !6311

for.body164:                                      ; preds = %for.cond161
  %110 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6312
  %endian165 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %110, i32 0, i32 13, !dbg !6314
  %111 = load i32, i32* %endian165, align 8, !dbg !6314
  %112 = load i16*, i16** %indexes.addr, align 8, !dbg !6315
  %113 = load i64, i64* %x, align 8, !dbg !6315
  %add.ptr166 = getelementptr inbounds i16, i16* %112, i64 %113, !dbg !6315
  %cmp167 = icmp eq i16* %add.ptr166, null, !dbg !6315
  br i1 %cmp167, label %cond.true169, label %cond.false170, !dbg !6315

cond.true169:                                     ; preds = %for.body164
  br label %cond.end173, !dbg !6315

cond.false170:                                    ; preds = %for.body164
  %114 = load i16*, i16** %indexes.addr, align 8, !dbg !6315
  %115 = load i64, i64* %x, align 8, !dbg !6315
  %add.ptr171 = getelementptr inbounds i16, i16* %114, i64 %115, !dbg !6315
  %116 = load i16, i16* %add.ptr171, align 2, !dbg !6315
  %conv172 = zext i16 %116 to i32, !dbg !6315
  br label %cond.end173, !dbg !6315

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi i32 [ 0, %cond.true169 ], [ %conv172, %cond.false170 ], !dbg !6315
  %conv175 = trunc i32 %cond174 to i16, !dbg !6316
  %117 = load i8*, i8** %q.addr, align 8, !dbg !6317
  %call176 = call i8* @PopShortPixel(i32 %111, i16 zeroext %conv175, i8* %117), !dbg !6318
  store i8* %call176, i8** %q.addr, align 8, !dbg !6319
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6320
  %pad177 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %118, i32 0, i32 6, !dbg !6321
  %119 = load i64, i64* %pad177, align 8, !dbg !6321
  %120 = load i8*, i8** %q.addr, align 8, !dbg !6322
  %add.ptr178 = getelementptr inbounds i8, i8* %120, i64 %119, !dbg !6322
  store i8* %add.ptr178, i8** %q.addr, align 8, !dbg !6322
  br label %for.inc179, !dbg !6323

for.inc179:                                       ; preds = %cond.end173
  %121 = load i64, i64* %x, align 8, !dbg !6324
  %inc180 = add nsw i64 %121, 1, !dbg !6324
  store i64 %inc180, i64* %x, align 8, !dbg !6324
  br label %for.cond161, !dbg !6325, !llvm.loop !6326

for.end181:                                       ; preds = %for.cond161
  br label %sw.epilog, !dbg !6328

sw.bb182:                                         ; preds = %if.end
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6329
  %format183 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 2, !dbg !6332
  %123 = load i32, i32* %format183, align 8, !dbg !6332
  %cmp184 = icmp eq i32 %123, 1, !dbg !6333
  br i1 %cmp184, label %if.then186, label %if.end208, !dbg !6334

if.then186:                                       ; preds = %sw.bb182
  store i64 0, i64* %x, align 8, !dbg !6335
  br label %for.cond187, !dbg !6338

for.cond187:                                      ; preds = %for.inc205, %if.then186
  %124 = load i64, i64* %x, align 8, !dbg !6339
  %125 = load i64, i64* %number_pixels.addr, align 8, !dbg !6341
  %cmp188 = icmp slt i64 %124, %125, !dbg !6342
  br i1 %cmp188, label %for.body190, label %for.end207, !dbg !6343

for.body190:                                      ; preds = %for.cond187
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6344
  %127 = load i16*, i16** %indexes.addr, align 8, !dbg !6346
  %128 = load i64, i64* %x, align 8, !dbg !6346
  %add.ptr191 = getelementptr inbounds i16, i16* %127, i64 %128, !dbg !6346
  %cmp192 = icmp eq i16* %add.ptr191, null, !dbg !6346
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !6346

cond.true194:                                     ; preds = %for.body190
  br label %cond.end198, !dbg !6346

cond.false195:                                    ; preds = %for.body190
  %129 = load i16*, i16** %indexes.addr, align 8, !dbg !6346
  %130 = load i64, i64* %x, align 8, !dbg !6346
  %add.ptr196 = getelementptr inbounds i16, i16* %129, i64 %130, !dbg !6346
  %131 = load i16, i16* %add.ptr196, align 2, !dbg !6346
  %conv197 = zext i16 %131 to i32, !dbg !6346
  br label %cond.end198, !dbg !6346

cond.end198:                                      ; preds = %cond.false195, %cond.true194
  %cond199 = phi i32 [ 0, %cond.true194 ], [ %conv197, %cond.false195 ], !dbg !6346
  %conv200 = sitofp i32 %cond199 to float, !dbg !6347
  %132 = load i8*, i8** %q.addr, align 8, !dbg !6348
  %call201 = call i8* @PopFloatPixel(%struct._QuantumInfo* %126, float %conv200, i8* %132), !dbg !6349
  store i8* %call201, i8** %q.addr, align 8, !dbg !6350
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6351
  %incdec.ptr202 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 1, !dbg !6351
  store %struct._PixelPacket* %incdec.ptr202, %struct._PixelPacket** %p.addr, align 8, !dbg !6351
  %134 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6352
  %pad203 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %134, i32 0, i32 6, !dbg !6353
  %135 = load i64, i64* %pad203, align 8, !dbg !6353
  %136 = load i8*, i8** %q.addr, align 8, !dbg !6354
  %add.ptr204 = getelementptr inbounds i8, i8* %136, i64 %135, !dbg !6354
  store i8* %add.ptr204, i8** %q.addr, align 8, !dbg !6354
  br label %for.inc205, !dbg !6355

for.inc205:                                       ; preds = %cond.end198
  %137 = load i64, i64* %x, align 8, !dbg !6356
  %inc206 = add nsw i64 %137, 1, !dbg !6356
  store i64 %inc206, i64* %x, align 8, !dbg !6356
  br label %for.cond187, !dbg !6357, !llvm.loop !6358

for.end207:                                       ; preds = %for.cond187
  br label %sw.epilog, !dbg !6360

if.end208:                                        ; preds = %sw.bb182
  store i64 0, i64* %x, align 8, !dbg !6361
  br label %for.cond209, !dbg !6363

for.cond209:                                      ; preds = %for.inc226, %if.end208
  %138 = load i64, i64* %x, align 8, !dbg !6364
  %139 = load i64, i64* %number_pixels.addr, align 8, !dbg !6366
  %cmp210 = icmp slt i64 %138, %139, !dbg !6367
  br i1 %cmp210, label %for.body212, label %for.end228, !dbg !6368

for.body212:                                      ; preds = %for.cond209
  %140 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6369
  %endian213 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %140, i32 0, i32 13, !dbg !6371
  %141 = load i32, i32* %endian213, align 8, !dbg !6371
  %142 = load i16*, i16** %indexes.addr, align 8, !dbg !6372
  %143 = load i64, i64* %x, align 8, !dbg !6372
  %add.ptr214 = getelementptr inbounds i16, i16* %142, i64 %143, !dbg !6372
  %cmp215 = icmp eq i16* %add.ptr214, null, !dbg !6372
  br i1 %cmp215, label %cond.true217, label %cond.false218, !dbg !6372

cond.true217:                                     ; preds = %for.body212
  br label %cond.end221, !dbg !6372

cond.false218:                                    ; preds = %for.body212
  %144 = load i16*, i16** %indexes.addr, align 8, !dbg !6372
  %145 = load i64, i64* %x, align 8, !dbg !6372
  %add.ptr219 = getelementptr inbounds i16, i16* %144, i64 %145, !dbg !6372
  %146 = load i16, i16* %add.ptr219, align 2, !dbg !6372
  %conv220 = zext i16 %146 to i32, !dbg !6372
  br label %cond.end221, !dbg !6372

cond.end221:                                      ; preds = %cond.false218, %cond.true217
  %cond222 = phi i32 [ 0, %cond.true217 ], [ %conv220, %cond.false218 ], !dbg !6372
  %147 = load i8*, i8** %q.addr, align 8, !dbg !6373
  %call223 = call i8* @PopLongPixel(i32 %141, i32 %cond222, i8* %147), !dbg !6374
  store i8* %call223, i8** %q.addr, align 8, !dbg !6375
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6376
  %pad224 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 6, !dbg !6377
  %149 = load i64, i64* %pad224, align 8, !dbg !6377
  %150 = load i8*, i8** %q.addr, align 8, !dbg !6378
  %add.ptr225 = getelementptr inbounds i8, i8* %150, i64 %149, !dbg !6378
  store i8* %add.ptr225, i8** %q.addr, align 8, !dbg !6378
  br label %for.inc226, !dbg !6379

for.inc226:                                       ; preds = %cond.end221
  %151 = load i64, i64* %x, align 8, !dbg !6380
  %inc227 = add nsw i64 %151, 1, !dbg !6380
  store i64 %inc227, i64* %x, align 8, !dbg !6380
  br label %for.cond209, !dbg !6381, !llvm.loop !6382

for.end228:                                       ; preds = %for.cond209
  br label %sw.epilog, !dbg !6384

sw.bb229:                                         ; preds = %if.end
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6385
  %format230 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 2, !dbg !6388
  %153 = load i32, i32* %format230, align 8, !dbg !6388
  %cmp231 = icmp eq i32 %153, 1, !dbg !6389
  br i1 %cmp231, label %if.then233, label %if.end255, !dbg !6390

if.then233:                                       ; preds = %sw.bb229
  store i64 0, i64* %x, align 8, !dbg !6391
  br label %for.cond234, !dbg !6394

for.cond234:                                      ; preds = %for.inc252, %if.then233
  %154 = load i64, i64* %x, align 8, !dbg !6395
  %155 = load i64, i64* %number_pixels.addr, align 8, !dbg !6397
  %cmp235 = icmp slt i64 %154, %155, !dbg !6398
  br i1 %cmp235, label %for.body237, label %for.end254, !dbg !6399

for.body237:                                      ; preds = %for.cond234
  %156 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6400
  %157 = load i16*, i16** %indexes.addr, align 8, !dbg !6402
  %158 = load i64, i64* %x, align 8, !dbg !6402
  %add.ptr238 = getelementptr inbounds i16, i16* %157, i64 %158, !dbg !6402
  %cmp239 = icmp eq i16* %add.ptr238, null, !dbg !6402
  br i1 %cmp239, label %cond.true241, label %cond.false242, !dbg !6402

cond.true241:                                     ; preds = %for.body237
  br label %cond.end245, !dbg !6402

cond.false242:                                    ; preds = %for.body237
  %159 = load i16*, i16** %indexes.addr, align 8, !dbg !6402
  %160 = load i64, i64* %x, align 8, !dbg !6402
  %add.ptr243 = getelementptr inbounds i16, i16* %159, i64 %160, !dbg !6402
  %161 = load i16, i16* %add.ptr243, align 2, !dbg !6402
  %conv244 = zext i16 %161 to i32, !dbg !6402
  br label %cond.end245, !dbg !6402

cond.end245:                                      ; preds = %cond.false242, %cond.true241
  %cond246 = phi i32 [ 0, %cond.true241 ], [ %conv244, %cond.false242 ], !dbg !6402
  %conv247 = sitofp i32 %cond246 to double, !dbg !6403
  %162 = load i8*, i8** %q.addr, align 8, !dbg !6404
  %call248 = call i8* @PopDoublePixel(%struct._QuantumInfo* %156, double %conv247, i8* %162), !dbg !6405
  store i8* %call248, i8** %q.addr, align 8, !dbg !6406
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6407
  %incdec.ptr249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 1, !dbg !6407
  store %struct._PixelPacket* %incdec.ptr249, %struct._PixelPacket** %p.addr, align 8, !dbg !6407
  %164 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6408
  %pad250 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %164, i32 0, i32 6, !dbg !6409
  %165 = load i64, i64* %pad250, align 8, !dbg !6409
  %166 = load i8*, i8** %q.addr, align 8, !dbg !6410
  %add.ptr251 = getelementptr inbounds i8, i8* %166, i64 %165, !dbg !6410
  store i8* %add.ptr251, i8** %q.addr, align 8, !dbg !6410
  br label %for.inc252, !dbg !6411

for.inc252:                                       ; preds = %cond.end245
  %167 = load i64, i64* %x, align 8, !dbg !6412
  %inc253 = add nsw i64 %167, 1, !dbg !6412
  store i64 %inc253, i64* %x, align 8, !dbg !6412
  br label %for.cond234, !dbg !6413, !llvm.loop !6414

for.end254:                                       ; preds = %for.cond234
  br label %sw.epilog, !dbg !6416

if.end255:                                        ; preds = %sw.bb229
  br label %sw.default, !dbg !6417

sw.default:                                       ; preds = %if.end, %if.end255
  store i64 0, i64* %x, align 8, !dbg !6418
  br label %for.cond256, !dbg !6421

for.cond256:                                      ; preds = %for.inc274, %sw.default
  %168 = load i64, i64* %x, align 8, !dbg !6422
  %169 = load i64, i64* %number_pixels.addr, align 8, !dbg !6424
  %cmp257 = icmp slt i64 %168, %169, !dbg !6425
  br i1 %cmp257, label %for.body259, label %for.end276, !dbg !6426

for.body259:                                      ; preds = %for.cond256
  %170 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6427
  %171 = load i16*, i16** %indexes.addr, align 8, !dbg !6429
  %172 = load i64, i64* %x, align 8, !dbg !6429
  %add.ptr260 = getelementptr inbounds i16, i16* %171, i64 %172, !dbg !6429
  %cmp261 = icmp eq i16* %add.ptr260, null, !dbg !6429
  br i1 %cmp261, label %cond.true263, label %cond.false264, !dbg !6429

cond.true263:                                     ; preds = %for.body259
  br label %cond.end267, !dbg !6429

cond.false264:                                    ; preds = %for.body259
  %173 = load i16*, i16** %indexes.addr, align 8, !dbg !6429
  %174 = load i64, i64* %x, align 8, !dbg !6429
  %add.ptr265 = getelementptr inbounds i16, i16* %173, i64 %174, !dbg !6429
  %175 = load i16, i16* %add.ptr265, align 2, !dbg !6429
  %conv266 = zext i16 %175 to i32, !dbg !6429
  br label %cond.end267, !dbg !6429

cond.end267:                                      ; preds = %cond.false264, %cond.true263
  %cond268 = phi i32 [ 0, %cond.true263 ], [ %conv266, %cond.false264 ], !dbg !6429
  %conv269 = sext i32 %cond268 to i64, !dbg !6429
  %176 = load i8*, i8** %q.addr, align 8, !dbg !6430
  %call270 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %170, i64 %conv269, i8* %176), !dbg !6431
  store i8* %call270, i8** %q.addr, align 8, !dbg !6432
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6433
  %incdec.ptr271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 1, !dbg !6433
  store %struct._PixelPacket* %incdec.ptr271, %struct._PixelPacket** %p.addr, align 8, !dbg !6433
  %178 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6434
  %pad272 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %178, i32 0, i32 6, !dbg !6435
  %179 = load i64, i64* %pad272, align 8, !dbg !6435
  %180 = load i8*, i8** %q.addr, align 8, !dbg !6436
  %add.ptr273 = getelementptr inbounds i8, i8* %180, i64 %179, !dbg !6436
  store i8* %add.ptr273, i8** %q.addr, align 8, !dbg !6436
  br label %for.inc274, !dbg !6437

for.inc274:                                       ; preds = %cond.end267
  %181 = load i64, i64* %x, align 8, !dbg !6438
  %inc275 = add nsw i64 %181, 1, !dbg !6438
  store i64 %inc275, i64* %x, align 8, !dbg !6438
  br label %for.cond256, !dbg !6439, !llvm.loop !6440

for.end276:                                       ; preds = %for.cond256
  br label %sw.epilog, !dbg !6442

sw.epilog:                                        ; preds = %if.then, %for.end276, %for.end254, %for.end228, %for.end207, %for.end181, %for.end159, %for.end133, %if.end119, %if.end83
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportIndexAlphaQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i16* noalias %indexes, i8* noalias %q, %struct._ExceptionInfo* %exception) #0 !dbg !6444 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %q.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel121 = alloca i8, align 1
  %pixel151 = alloca i8, align 1
  %pixel175 = alloca i16, align 2
  %pixel240 = alloca i32, align 4
  %pixel249 = alloca float, align 4
  %pixel310 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6445, metadata !DIExpression()), !dbg !6446
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !6447, metadata !DIExpression()), !dbg !6448
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !6449, metadata !DIExpression()), !dbg !6450
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !6451, metadata !DIExpression()), !dbg !6452
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !6453, metadata !DIExpression()), !dbg !6454
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !6455, metadata !DIExpression()), !dbg !6456
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6457, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6459, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !6461, metadata !DIExpression()), !dbg !6462
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6463
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 0, !dbg !6465
  %1 = load i32, i32* %storage_class, align 8, !dbg !6465
  %cmp = icmp ne i32 %1, 2, !dbg !6466
  br i1 %cmp, label %if.then, label %if.end, !dbg !6467

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6468
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6470
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !6471
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6470
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2251, i32 465, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !6472
  br label %sw.epilog, !dbg !6473

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6474
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !6475
  %5 = load i64, i64* %depth, align 8, !dbg !6475
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb120
    i64 8, label %sw.bb150
    i64 16, label %sw.bb174
    i64 32, label %sw.bb239
    i64 64, label %sw.bb301
  ], !dbg !6476

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !6477, metadata !DIExpression()), !dbg !6480
  %6 = load i64, i64* %number_pixels.addr, align 8, !dbg !6481
  %sub = sub nsw i64 %6, 3, !dbg !6483
  store i64 %sub, i64* %x, align 8, !dbg !6484
  br label %for.cond, !dbg !6485

for.cond:                                         ; preds = %for.inc, %sw.bb
  %7 = load i64, i64* %x, align 8, !dbg !6486
  %cmp1 = icmp sgt i64 %7, 0, !dbg !6488
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6489

for.body:                                         ; preds = %for.cond
  %8 = load i16*, i16** %indexes.addr, align 8, !dbg !6490
  %incdec.ptr = getelementptr inbounds i16, i16* %8, i32 1, !dbg !6490
  store i16* %incdec.ptr, i16** %indexes.addr, align 8, !dbg !6490
  %9 = load i16, i16* %8, align 2, !dbg !6492
  %conv = trunc i16 %9 to i8, !dbg !6493
  store i8 %conv, i8* %pixel, align 1, !dbg !6494
  %10 = load i8, i8* %pixel, align 1, !dbg !6495
  %conv2 = zext i8 %10 to i32, !dbg !6495
  %and = and i32 %conv2, 1, !dbg !6496
  %shl = shl i32 %and, 7, !dbg !6497
  %conv3 = trunc i32 %shl to i8, !dbg !6498
  %11 = load i8*, i8** %q.addr, align 8, !dbg !6499
  store i8 %conv3, i8* %11, align 1, !dbg !6500
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6501
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 3, !dbg !6501
  %13 = load i16, i16* %opacity, align 2, !dbg !6501
  %conv4 = zext i16 %13 to i32, !dbg !6501
  %cmp5 = icmp eq i32 %conv4, 65535, !dbg !6502
  %14 = zext i1 %cmp5 to i64, !dbg !6501
  %cond = select i1 %cmp5, i32 1, i32 0, !dbg !6501
  %conv7 = trunc i32 %cond to i8, !dbg !6503
  store i8 %conv7, i8* %pixel, align 1, !dbg !6504
  %15 = load i8, i8* %pixel, align 1, !dbg !6505
  %conv8 = zext i8 %15 to i32, !dbg !6505
  %and9 = and i32 %conv8, 1, !dbg !6506
  %shl10 = shl i32 %and9, 6, !dbg !6507
  %16 = load i8*, i8** %q.addr, align 8, !dbg !6508
  %17 = load i8, i8* %16, align 1, !dbg !6509
  %conv11 = zext i8 %17 to i32, !dbg !6509
  %or = or i32 %conv11, %shl10, !dbg !6509
  %conv12 = trunc i32 %or to i8, !dbg !6509
  store i8 %conv12, i8* %16, align 1, !dbg !6509
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6510
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 1, !dbg !6510
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p.addr, align 8, !dbg !6510
  %19 = load i16*, i16** %indexes.addr, align 8, !dbg !6511
  %incdec.ptr14 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !6511
  store i16* %incdec.ptr14, i16** %indexes.addr, align 8, !dbg !6511
  %20 = load i16, i16* %19, align 2, !dbg !6512
  %conv15 = trunc i16 %20 to i8, !dbg !6513
  store i8 %conv15, i8* %pixel, align 1, !dbg !6514
  %21 = load i8, i8* %pixel, align 1, !dbg !6515
  %conv16 = zext i8 %21 to i32, !dbg !6515
  %and17 = and i32 %conv16, 1, !dbg !6516
  %shl18 = shl i32 %and17, 5, !dbg !6517
  %22 = load i8*, i8** %q.addr, align 8, !dbg !6518
  %23 = load i8, i8* %22, align 1, !dbg !6519
  %conv19 = zext i8 %23 to i32, !dbg !6519
  %or20 = or i32 %conv19, %shl18, !dbg !6519
  %conv21 = trunc i32 %or20 to i8, !dbg !6519
  store i8 %conv21, i8* %22, align 1, !dbg !6519
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6520
  %opacity22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 3, !dbg !6520
  %25 = load i16, i16* %opacity22, align 2, !dbg !6520
  %conv23 = zext i16 %25 to i32, !dbg !6520
  %cmp24 = icmp eq i32 %conv23, 65535, !dbg !6521
  %26 = zext i1 %cmp24 to i64, !dbg !6520
  %cond26 = select i1 %cmp24, i32 1, i32 0, !dbg !6520
  %conv27 = trunc i32 %cond26 to i8, !dbg !6522
  store i8 %conv27, i8* %pixel, align 1, !dbg !6523
  %27 = load i8, i8* %pixel, align 1, !dbg !6524
  %conv28 = zext i8 %27 to i32, !dbg !6524
  %and29 = and i32 %conv28, 1, !dbg !6525
  %shl30 = shl i32 %and29, 4, !dbg !6526
  %28 = load i8*, i8** %q.addr, align 8, !dbg !6527
  %29 = load i8, i8* %28, align 1, !dbg !6528
  %conv31 = zext i8 %29 to i32, !dbg !6528
  %or32 = or i32 %conv31, %shl30, !dbg !6528
  %conv33 = trunc i32 %or32 to i8, !dbg !6528
  store i8 %conv33, i8* %28, align 1, !dbg !6528
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6529
  %incdec.ptr34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 1, !dbg !6529
  store %struct._PixelPacket* %incdec.ptr34, %struct._PixelPacket** %p.addr, align 8, !dbg !6529
  %31 = load i16*, i16** %indexes.addr, align 8, !dbg !6530
  %incdec.ptr35 = getelementptr inbounds i16, i16* %31, i32 1, !dbg !6530
  store i16* %incdec.ptr35, i16** %indexes.addr, align 8, !dbg !6530
  %32 = load i16, i16* %31, align 2, !dbg !6531
  %conv36 = trunc i16 %32 to i8, !dbg !6532
  store i8 %conv36, i8* %pixel, align 1, !dbg !6533
  %33 = load i8, i8* %pixel, align 1, !dbg !6534
  %conv37 = zext i8 %33 to i32, !dbg !6534
  %and38 = and i32 %conv37, 1, !dbg !6535
  %shl39 = shl i32 %and38, 3, !dbg !6536
  %34 = load i8*, i8** %q.addr, align 8, !dbg !6537
  %35 = load i8, i8* %34, align 1, !dbg !6538
  %conv40 = zext i8 %35 to i32, !dbg !6538
  %or41 = or i32 %conv40, %shl39, !dbg !6538
  %conv42 = trunc i32 %or41 to i8, !dbg !6538
  store i8 %conv42, i8* %34, align 1, !dbg !6538
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6539
  %opacity43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 3, !dbg !6539
  %37 = load i16, i16* %opacity43, align 2, !dbg !6539
  %conv44 = zext i16 %37 to i32, !dbg !6539
  %cmp45 = icmp eq i32 %conv44, 65535, !dbg !6540
  %38 = zext i1 %cmp45 to i64, !dbg !6539
  %cond47 = select i1 %cmp45, i32 1, i32 0, !dbg !6539
  %conv48 = trunc i32 %cond47 to i8, !dbg !6541
  store i8 %conv48, i8* %pixel, align 1, !dbg !6542
  %39 = load i8, i8* %pixel, align 1, !dbg !6543
  %conv49 = zext i8 %39 to i32, !dbg !6543
  %and50 = and i32 %conv49, 1, !dbg !6544
  %shl51 = shl i32 %and50, 2, !dbg !6545
  %40 = load i8*, i8** %q.addr, align 8, !dbg !6546
  %41 = load i8, i8* %40, align 1, !dbg !6547
  %conv52 = zext i8 %41 to i32, !dbg !6547
  %or53 = or i32 %conv52, %shl51, !dbg !6547
  %conv54 = trunc i32 %or53 to i8, !dbg !6547
  store i8 %conv54, i8* %40, align 1, !dbg !6547
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6548
  %incdec.ptr55 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 1, !dbg !6548
  store %struct._PixelPacket* %incdec.ptr55, %struct._PixelPacket** %p.addr, align 8, !dbg !6548
  %43 = load i16*, i16** %indexes.addr, align 8, !dbg !6549
  %incdec.ptr56 = getelementptr inbounds i16, i16* %43, i32 1, !dbg !6549
  store i16* %incdec.ptr56, i16** %indexes.addr, align 8, !dbg !6549
  %44 = load i16, i16* %43, align 2, !dbg !6550
  %conv57 = trunc i16 %44 to i8, !dbg !6551
  store i8 %conv57, i8* %pixel, align 1, !dbg !6552
  %45 = load i8, i8* %pixel, align 1, !dbg !6553
  %conv58 = zext i8 %45 to i32, !dbg !6553
  %and59 = and i32 %conv58, 1, !dbg !6554
  %shl60 = shl i32 %and59, 1, !dbg !6555
  %46 = load i8*, i8** %q.addr, align 8, !dbg !6556
  %47 = load i8, i8* %46, align 1, !dbg !6557
  %conv61 = zext i8 %47 to i32, !dbg !6557
  %or62 = or i32 %conv61, %shl60, !dbg !6557
  %conv63 = trunc i32 %or62 to i8, !dbg !6557
  store i8 %conv63, i8* %46, align 1, !dbg !6557
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6558
  %opacity64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 3, !dbg !6558
  %49 = load i16, i16* %opacity64, align 2, !dbg !6558
  %conv65 = zext i16 %49 to i32, !dbg !6558
  %cmp66 = icmp eq i32 %conv65, 65535, !dbg !6559
  %50 = zext i1 %cmp66 to i64, !dbg !6558
  %cond68 = select i1 %cmp66, i32 1, i32 0, !dbg !6558
  %conv69 = trunc i32 %cond68 to i8, !dbg !6560
  store i8 %conv69, i8* %pixel, align 1, !dbg !6561
  %51 = load i8, i8* %pixel, align 1, !dbg !6562
  %conv70 = zext i8 %51 to i32, !dbg !6562
  %and71 = and i32 %conv70, 1, !dbg !6563
  %shl72 = shl i32 %and71, 0, !dbg !6564
  %52 = load i8*, i8** %q.addr, align 8, !dbg !6565
  %53 = load i8, i8* %52, align 1, !dbg !6566
  %conv73 = zext i8 %53 to i32, !dbg !6566
  %or74 = or i32 %conv73, %shl72, !dbg !6566
  %conv75 = trunc i32 %or74 to i8, !dbg !6566
  store i8 %conv75, i8* %52, align 1, !dbg !6566
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6567
  %incdec.ptr76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 1, !dbg !6567
  store %struct._PixelPacket* %incdec.ptr76, %struct._PixelPacket** %p.addr, align 8, !dbg !6567
  %55 = load i8*, i8** %q.addr, align 8, !dbg !6568
  %incdec.ptr77 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !6568
  store i8* %incdec.ptr77, i8** %q.addr, align 8, !dbg !6568
  br label %for.inc, !dbg !6569

for.inc:                                          ; preds = %for.body
  %56 = load i64, i64* %x, align 8, !dbg !6570
  %sub78 = sub nsw i64 %56, 4, !dbg !6570
  store i64 %sub78, i64* %x, align 8, !dbg !6570
  br label %for.cond, !dbg !6571, !llvm.loop !6572

for.end:                                          ; preds = %for.cond
  %57 = load i64, i64* %number_pixels.addr, align 8, !dbg !6574
  %rem = urem i64 %57, 4, !dbg !6576
  %cmp79 = icmp ne i64 %rem, 0, !dbg !6577
  br i1 %cmp79, label %if.then81, label %if.end119, !dbg !6578

if.then81:                                        ; preds = %for.end
  %58 = load i8*, i8** %q.addr, align 8, !dbg !6579
  store i8 0, i8* %58, align 1, !dbg !6581
  store i64 3, i64* %bit, align 8, !dbg !6582
  br label %for.cond82, !dbg !6584

for.cond82:                                       ; preds = %for.inc115, %if.then81
  %59 = load i64, i64* %bit, align 8, !dbg !6585
  %60 = load i64, i64* %number_pixels.addr, align 8, !dbg !6587
  %rem83 = urem i64 %60, 4, !dbg !6588
  %sub84 = sub i64 4, %rem83, !dbg !6589
  %cmp85 = icmp sge i64 %59, %sub84, !dbg !6590
  br i1 %cmp85, label %for.body87, label %for.end117, !dbg !6591

for.body87:                                       ; preds = %for.cond82
  %61 = load i16*, i16** %indexes.addr, align 8, !dbg !6592
  %incdec.ptr88 = getelementptr inbounds i16, i16* %61, i32 1, !dbg !6592
  store i16* %incdec.ptr88, i16** %indexes.addr, align 8, !dbg !6592
  %62 = load i16, i16* %61, align 2, !dbg !6594
  %conv89 = trunc i16 %62 to i8, !dbg !6595
  store i8 %conv89, i8* %pixel, align 1, !dbg !6596
  %63 = load i8, i8* %pixel, align 1, !dbg !6597
  %conv90 = zext i8 %63 to i32, !dbg !6597
  %and91 = and i32 %conv90, 1, !dbg !6598
  %64 = load i64, i64* %bit, align 8, !dbg !6599
  %add = add nsw i64 %64, 4, !dbg !6600
  %conv92 = trunc i64 %add to i8, !dbg !6601
  %conv93 = zext i8 %conv92 to i32, !dbg !6601
  %shl94 = shl i32 %and91, %conv93, !dbg !6602
  %65 = load i8*, i8** %q.addr, align 8, !dbg !6603
  %66 = load i8, i8* %65, align 1, !dbg !6604
  %conv95 = zext i8 %66 to i32, !dbg !6604
  %or96 = or i32 %conv95, %shl94, !dbg !6604
  %conv97 = trunc i32 %or96 to i8, !dbg !6604
  store i8 %conv97, i8* %65, align 1, !dbg !6604
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6605
  %opacity98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !6605
  %68 = load i16, i16* %opacity98, align 2, !dbg !6605
  %conv99 = zext i16 %68 to i32, !dbg !6605
  %cmp100 = icmp eq i32 %conv99, 65535, !dbg !6606
  %69 = zext i1 %cmp100 to i64, !dbg !6605
  %cond102 = select i1 %cmp100, i32 1, i32 0, !dbg !6605
  %conv103 = trunc i32 %cond102 to i8, !dbg !6607
  store i8 %conv103, i8* %pixel, align 1, !dbg !6608
  %70 = load i8, i8* %pixel, align 1, !dbg !6609
  %conv104 = zext i8 %70 to i32, !dbg !6609
  %and105 = and i32 %conv104, 1, !dbg !6610
  %71 = load i64, i64* %bit, align 8, !dbg !6611
  %add106 = add nsw i64 %71, 4, !dbg !6612
  %sub107 = sub nsw i64 %add106, 1, !dbg !6613
  %conv108 = trunc i64 %sub107 to i8, !dbg !6614
  %conv109 = zext i8 %conv108 to i32, !dbg !6614
  %shl110 = shl i32 %and105, %conv109, !dbg !6615
  %72 = load i8*, i8** %q.addr, align 8, !dbg !6616
  %73 = load i8, i8* %72, align 1, !dbg !6617
  %conv111 = zext i8 %73 to i32, !dbg !6617
  %or112 = or i32 %conv111, %shl110, !dbg !6617
  %conv113 = trunc i32 %or112 to i8, !dbg !6617
  store i8 %conv113, i8* %72, align 1, !dbg !6617
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6618
  %incdec.ptr114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 1, !dbg !6618
  store %struct._PixelPacket* %incdec.ptr114, %struct._PixelPacket** %p.addr, align 8, !dbg !6618
  br label %for.inc115, !dbg !6619

for.inc115:                                       ; preds = %for.body87
  %75 = load i64, i64* %bit, align 8, !dbg !6620
  %sub116 = sub nsw i64 %75, 2, !dbg !6620
  store i64 %sub116, i64* %bit, align 8, !dbg !6620
  br label %for.cond82, !dbg !6621, !llvm.loop !6622

for.end117:                                       ; preds = %for.cond82
  %76 = load i8*, i8** %q.addr, align 8, !dbg !6624
  %incdec.ptr118 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !6624
  store i8* %incdec.ptr118, i8** %q.addr, align 8, !dbg !6624
  br label %if.end119, !dbg !6625

if.end119:                                        ; preds = %for.end117, %for.end
  br label %sw.epilog, !dbg !6626

sw.bb120:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel121, metadata !6627, metadata !DIExpression()), !dbg !6629
  store i64 0, i64* %x, align 8, !dbg !6630
  br label %for.cond122, !dbg !6632

for.cond122:                                      ; preds = %for.inc148, %sw.bb120
  %77 = load i64, i64* %x, align 8, !dbg !6633
  %78 = load i64, i64* %number_pixels.addr, align 8, !dbg !6635
  %cmp123 = icmp slt i64 %77, %78, !dbg !6636
  br i1 %cmp123, label %for.body125, label %for.end149, !dbg !6637

for.body125:                                      ; preds = %for.cond122
  %79 = load i16*, i16** %indexes.addr, align 8, !dbg !6638
  %incdec.ptr126 = getelementptr inbounds i16, i16* %79, i32 1, !dbg !6638
  store i16* %incdec.ptr126, i16** %indexes.addr, align 8, !dbg !6638
  %80 = load i16, i16* %79, align 2, !dbg !6640
  %conv127 = trunc i16 %80 to i8, !dbg !6641
  store i8 %conv127, i8* %pixel121, align 1, !dbg !6642
  %81 = load i8, i8* %pixel121, align 1, !dbg !6643
  %conv128 = zext i8 %81 to i32, !dbg !6643
  %and129 = and i32 %conv128, 15, !dbg !6644
  %shl130 = shl i32 %and129, 4, !dbg !6645
  %conv131 = trunc i32 %shl130 to i8, !dbg !6646
  %82 = load i8*, i8** %q.addr, align 8, !dbg !6647
  store i8 %conv131, i8* %82, align 1, !dbg !6648
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6649
  %opacity132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 3, !dbg !6649
  %84 = load i16, i16* %opacity132, align 2, !dbg !6649
  %conv133 = zext i16 %84 to i32, !dbg !6649
  %sub134 = sub nsw i32 65535, %conv133, !dbg !6650
  %conv135 = trunc i32 %sub134 to i16, !dbg !6651
  %conv136 = zext i16 %conv135 to i32, !dbg !6652
  %conv137 = sitofp i32 %conv136 to double, !dbg !6652
  %mul = fmul double 0x3F30001000100010, %conv137, !dbg !6653
  %add138 = fadd double %mul, 5.000000e-01, !dbg !6654
  %conv139 = fptoui double %add138 to i8, !dbg !6655
  store i8 %conv139, i8* %pixel121, align 1, !dbg !6656
  %85 = load i8, i8* %pixel121, align 1, !dbg !6657
  %conv140 = zext i8 %85 to i32, !dbg !6657
  %and141 = and i32 %conv140, 15, !dbg !6658
  %shl142 = shl i32 %and141, 0, !dbg !6659
  %86 = load i8*, i8** %q.addr, align 8, !dbg !6660
  %87 = load i8, i8* %86, align 1, !dbg !6661
  %conv143 = zext i8 %87 to i32, !dbg !6661
  %or144 = or i32 %conv143, %shl142, !dbg !6661
  %conv145 = trunc i32 %or144 to i8, !dbg !6661
  store i8 %conv145, i8* %86, align 1, !dbg !6661
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6662
  %incdec.ptr146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !6662
  store %struct._PixelPacket* %incdec.ptr146, %struct._PixelPacket** %p.addr, align 8, !dbg !6662
  %89 = load i8*, i8** %q.addr, align 8, !dbg !6663
  %incdec.ptr147 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !6663
  store i8* %incdec.ptr147, i8** %q.addr, align 8, !dbg !6663
  br label %for.inc148, !dbg !6664

for.inc148:                                       ; preds = %for.body125
  %90 = load i64, i64* %x, align 8, !dbg !6665
  %inc = add nsw i64 %90, 1, !dbg !6665
  store i64 %inc, i64* %x, align 8, !dbg !6665
  br label %for.cond122, !dbg !6666, !llvm.loop !6667

for.end149:                                       ; preds = %for.cond122
  br label %sw.epilog, !dbg !6669

sw.bb150:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel151, metadata !6670, metadata !DIExpression()), !dbg !6672
  store i64 0, i64* %x, align 8, !dbg !6673
  br label %for.cond152, !dbg !6675

for.cond152:                                      ; preds = %for.inc171, %sw.bb150
  %91 = load i64, i64* %x, align 8, !dbg !6676
  %92 = load i64, i64* %number_pixels.addr, align 8, !dbg !6678
  %cmp153 = icmp slt i64 %91, %92, !dbg !6679
  br i1 %cmp153, label %for.body155, label %for.end173, !dbg !6680

for.body155:                                      ; preds = %for.cond152
  %93 = load i16*, i16** %indexes.addr, align 8, !dbg !6681
  %94 = load i64, i64* %x, align 8, !dbg !6681
  %add.ptr = getelementptr inbounds i16, i16* %93, i64 %94, !dbg !6681
  %cmp156 = icmp eq i16* %add.ptr, null, !dbg !6681
  br i1 %cmp156, label %cond.true, label %cond.false, !dbg !6681

cond.true:                                        ; preds = %for.body155
  br label %cond.end, !dbg !6681

cond.false:                                       ; preds = %for.body155
  %95 = load i16*, i16** %indexes.addr, align 8, !dbg !6681
  %96 = load i64, i64* %x, align 8, !dbg !6681
  %add.ptr158 = getelementptr inbounds i16, i16* %95, i64 %96, !dbg !6681
  %97 = load i16, i16* %add.ptr158, align 2, !dbg !6681
  %conv159 = zext i16 %97 to i32, !dbg !6681
  br label %cond.end, !dbg !6681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond160 = phi i32 [ 0, %cond.true ], [ %conv159, %cond.false ], !dbg !6681
  %conv161 = trunc i32 %cond160 to i8, !dbg !6683
  %98 = load i8*, i8** %q.addr, align 8, !dbg !6684
  %call162 = call i8* @PopCharPixel(i8 zeroext %conv161, i8* %98), !dbg !6685
  store i8* %call162, i8** %q.addr, align 8, !dbg !6686
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6687
  %opacity163 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 3, !dbg !6687
  %100 = load i16, i16* %opacity163, align 2, !dbg !6687
  %conv164 = zext i16 %100 to i32, !dbg !6687
  %sub165 = sub nsw i32 65535, %conv164, !dbg !6688
  %conv166 = trunc i32 %sub165 to i16, !dbg !6689
  %call167 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv166), !dbg !6690
  store i8 %call167, i8* %pixel151, align 1, !dbg !6691
  %101 = load i8, i8* %pixel151, align 1, !dbg !6692
  %102 = load i8*, i8** %q.addr, align 8, !dbg !6693
  %call168 = call i8* @PopCharPixel(i8 zeroext %101, i8* %102), !dbg !6694
  store i8* %call168, i8** %q.addr, align 8, !dbg !6695
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6696
  %incdec.ptr169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 1, !dbg !6696
  store %struct._PixelPacket* %incdec.ptr169, %struct._PixelPacket** %p.addr, align 8, !dbg !6696
  %104 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6697
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %104, i32 0, i32 6, !dbg !6698
  %105 = load i64, i64* %pad, align 8, !dbg !6698
  %106 = load i8*, i8** %q.addr, align 8, !dbg !6699
  %add.ptr170 = getelementptr inbounds i8, i8* %106, i64 %105, !dbg !6699
  store i8* %add.ptr170, i8** %q.addr, align 8, !dbg !6699
  br label %for.inc171, !dbg !6700

for.inc171:                                       ; preds = %cond.end
  %107 = load i64, i64* %x, align 8, !dbg !6701
  %inc172 = add nsw i64 %107, 1, !dbg !6701
  store i64 %inc172, i64* %x, align 8, !dbg !6701
  br label %for.cond152, !dbg !6702, !llvm.loop !6703

for.end173:                                       ; preds = %for.cond152
  br label %sw.epilog, !dbg !6705

sw.bb174:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel175, metadata !6706, metadata !DIExpression()), !dbg !6708
  %108 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6709
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %108, i32 0, i32 2, !dbg !6711
  %109 = load i32, i32* %format, align 8, !dbg !6711
  %cmp176 = icmp eq i32 %109, 1, !dbg !6712
  br i1 %cmp176, label %if.then178, label %if.end209, !dbg !6713

if.then178:                                       ; preds = %sw.bb174
  store i64 0, i64* %x, align 8, !dbg !6714
  br label %for.cond179, !dbg !6717

for.cond179:                                      ; preds = %for.inc206, %if.then178
  %110 = load i64, i64* %x, align 8, !dbg !6718
  %111 = load i64, i64* %number_pixels.addr, align 8, !dbg !6720
  %cmp180 = icmp slt i64 %110, %111, !dbg !6721
  br i1 %cmp180, label %for.body182, label %for.end208, !dbg !6722

for.body182:                                      ; preds = %for.cond179
  %112 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6723
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %112, i32 0, i32 13, !dbg !6725
  %113 = load i32, i32* %endian, align 8, !dbg !6725
  %114 = load i16*, i16** %indexes.addr, align 8, !dbg !6726
  %115 = load i64, i64* %x, align 8, !dbg !6726
  %add.ptr183 = getelementptr inbounds i16, i16* %114, i64 %115, !dbg !6726
  %cmp184 = icmp eq i16* %add.ptr183, null, !dbg !6726
  br i1 %cmp184, label %cond.true186, label %cond.false187, !dbg !6726

cond.true186:                                     ; preds = %for.body182
  br label %cond.end190, !dbg !6726

cond.false187:                                    ; preds = %for.body182
  %116 = load i16*, i16** %indexes.addr, align 8, !dbg !6726
  %117 = load i64, i64* %x, align 8, !dbg !6726
  %add.ptr188 = getelementptr inbounds i16, i16* %116, i64 %117, !dbg !6726
  %118 = load i16, i16* %add.ptr188, align 2, !dbg !6726
  %conv189 = zext i16 %118 to i32, !dbg !6726
  br label %cond.end190, !dbg !6726

cond.end190:                                      ; preds = %cond.false187, %cond.true186
  %cond191 = phi i32 [ 0, %cond.true186 ], [ %conv189, %cond.false187 ], !dbg !6726
  %conv192 = trunc i32 %cond191 to i16, !dbg !6727
  %119 = load i8*, i8** %q.addr, align 8, !dbg !6728
  %call193 = call i8* @PopShortPixel(i32 %113, i16 zeroext %conv192, i8* %119), !dbg !6729
  store i8* %call193, i8** %q.addr, align 8, !dbg !6730
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6731
  %opacity194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %120, i32 0, i32 3, !dbg !6731
  %121 = load i16, i16* %opacity194, align 2, !dbg !6731
  %conv195 = zext i16 %121 to i32, !dbg !6731
  %sub196 = sub nsw i32 65535, %conv195, !dbg !6731
  %conv197 = sitofp i32 %sub196 to double, !dbg !6731
  %mul198 = fmul double 0x3EF0001000100010, %conv197, !dbg !6732
  %conv199 = fptrunc double %mul198 to float, !dbg !6733
  %call200 = call zeroext i16 @SinglePrecisionToHalf(float %conv199), !dbg !6734
  store i16 %call200, i16* %pixel175, align 2, !dbg !6735
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6736
  %endian201 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 13, !dbg !6737
  %123 = load i32, i32* %endian201, align 8, !dbg !6737
  %124 = load i16, i16* %pixel175, align 2, !dbg !6738
  %125 = load i8*, i8** %q.addr, align 8, !dbg !6739
  %call202 = call i8* @PopShortPixel(i32 %123, i16 zeroext %124, i8* %125), !dbg !6740
  store i8* %call202, i8** %q.addr, align 8, !dbg !6741
  %126 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6742
  %incdec.ptr203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %126, i32 1, !dbg !6742
  store %struct._PixelPacket* %incdec.ptr203, %struct._PixelPacket** %p.addr, align 8, !dbg !6742
  %127 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6743
  %pad204 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %127, i32 0, i32 6, !dbg !6744
  %128 = load i64, i64* %pad204, align 8, !dbg !6744
  %129 = load i8*, i8** %q.addr, align 8, !dbg !6745
  %add.ptr205 = getelementptr inbounds i8, i8* %129, i64 %128, !dbg !6745
  store i8* %add.ptr205, i8** %q.addr, align 8, !dbg !6745
  br label %for.inc206, !dbg !6746

for.inc206:                                       ; preds = %cond.end190
  %130 = load i64, i64* %x, align 8, !dbg !6747
  %inc207 = add nsw i64 %130, 1, !dbg !6747
  store i64 %inc207, i64* %x, align 8, !dbg !6747
  br label %for.cond179, !dbg !6748, !llvm.loop !6749

for.end208:                                       ; preds = %for.cond179
  br label %sw.epilog, !dbg !6751

if.end209:                                        ; preds = %sw.bb174
  store i64 0, i64* %x, align 8, !dbg !6752
  br label %for.cond210, !dbg !6754

for.cond210:                                      ; preds = %for.inc236, %if.end209
  %131 = load i64, i64* %x, align 8, !dbg !6755
  %132 = load i64, i64* %number_pixels.addr, align 8, !dbg !6757
  %cmp211 = icmp slt i64 %131, %132, !dbg !6758
  br i1 %cmp211, label %for.body213, label %for.end238, !dbg !6759

for.body213:                                      ; preds = %for.cond210
  %133 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6760
  %endian214 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %133, i32 0, i32 13, !dbg !6762
  %134 = load i32, i32* %endian214, align 8, !dbg !6762
  %135 = load i16*, i16** %indexes.addr, align 8, !dbg !6763
  %136 = load i64, i64* %x, align 8, !dbg !6763
  %add.ptr215 = getelementptr inbounds i16, i16* %135, i64 %136, !dbg !6763
  %cmp216 = icmp eq i16* %add.ptr215, null, !dbg !6763
  br i1 %cmp216, label %cond.true218, label %cond.false219, !dbg !6763

cond.true218:                                     ; preds = %for.body213
  br label %cond.end222, !dbg !6763

cond.false219:                                    ; preds = %for.body213
  %137 = load i16*, i16** %indexes.addr, align 8, !dbg !6763
  %138 = load i64, i64* %x, align 8, !dbg !6763
  %add.ptr220 = getelementptr inbounds i16, i16* %137, i64 %138, !dbg !6763
  %139 = load i16, i16* %add.ptr220, align 2, !dbg !6763
  %conv221 = zext i16 %139 to i32, !dbg !6763
  br label %cond.end222, !dbg !6763

cond.end222:                                      ; preds = %cond.false219, %cond.true218
  %cond223 = phi i32 [ 0, %cond.true218 ], [ %conv221, %cond.false219 ], !dbg !6763
  %conv224 = trunc i32 %cond223 to i16, !dbg !6764
  %140 = load i8*, i8** %q.addr, align 8, !dbg !6765
  %call225 = call i8* @PopShortPixel(i32 %134, i16 zeroext %conv224, i8* %140), !dbg !6766
  store i8* %call225, i8** %q.addr, align 8, !dbg !6767
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6768
  %opacity226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 3, !dbg !6768
  %142 = load i16, i16* %opacity226, align 2, !dbg !6768
  %conv227 = zext i16 %142 to i32, !dbg !6768
  %sub228 = sub nsw i32 65535, %conv227, !dbg !6769
  %conv229 = trunc i32 %sub228 to i16, !dbg !6770
  %call230 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv229), !dbg !6771
  store i16 %call230, i16* %pixel175, align 2, !dbg !6772
  %143 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6773
  %endian231 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %143, i32 0, i32 13, !dbg !6774
  %144 = load i32, i32* %endian231, align 8, !dbg !6774
  %145 = load i16, i16* %pixel175, align 2, !dbg !6775
  %146 = load i8*, i8** %q.addr, align 8, !dbg !6776
  %call232 = call i8* @PopShortPixel(i32 %144, i16 zeroext %145, i8* %146), !dbg !6777
  store i8* %call232, i8** %q.addr, align 8, !dbg !6778
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6779
  %incdec.ptr233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i32 1, !dbg !6779
  store %struct._PixelPacket* %incdec.ptr233, %struct._PixelPacket** %p.addr, align 8, !dbg !6779
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6780
  %pad234 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 6, !dbg !6781
  %149 = load i64, i64* %pad234, align 8, !dbg !6781
  %150 = load i8*, i8** %q.addr, align 8, !dbg !6782
  %add.ptr235 = getelementptr inbounds i8, i8* %150, i64 %149, !dbg !6782
  store i8* %add.ptr235, i8** %q.addr, align 8, !dbg !6782
  br label %for.inc236, !dbg !6783

for.inc236:                                       ; preds = %cond.end222
  %151 = load i64, i64* %x, align 8, !dbg !6784
  %inc237 = add nsw i64 %151, 1, !dbg !6784
  store i64 %inc237, i64* %x, align 8, !dbg !6784
  br label %for.cond210, !dbg !6785, !llvm.loop !6786

for.end238:                                       ; preds = %for.cond210
  br label %sw.epilog, !dbg !6788

sw.bb239:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel240, metadata !6789, metadata !DIExpression()), !dbg !6791
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6792
  %format241 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 2, !dbg !6794
  %153 = load i32, i32* %format241, align 8, !dbg !6794
  %cmp242 = icmp eq i32 %153, 1, !dbg !6795
  br i1 %cmp242, label %if.then244, label %if.end272, !dbg !6796

if.then244:                                       ; preds = %sw.bb239
  store i64 0, i64* %x, align 8, !dbg !6797
  br label %for.cond245, !dbg !6800

for.cond245:                                      ; preds = %for.inc269, %if.then244
  %154 = load i64, i64* %x, align 8, !dbg !6801
  %155 = load i64, i64* %number_pixels.addr, align 8, !dbg !6803
  %cmp246 = icmp slt i64 %154, %155, !dbg !6804
  br i1 %cmp246, label %for.body248, label %for.end271, !dbg !6805

for.body248:                                      ; preds = %for.cond245
  call void @llvm.dbg.declare(metadata float* %pixel249, metadata !6806, metadata !DIExpression()), !dbg !6808
  %156 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6809
  %157 = load i16*, i16** %indexes.addr, align 8, !dbg !6810
  %158 = load i64, i64* %x, align 8, !dbg !6810
  %add.ptr250 = getelementptr inbounds i16, i16* %157, i64 %158, !dbg !6810
  %cmp251 = icmp eq i16* %add.ptr250, null, !dbg !6810
  br i1 %cmp251, label %cond.true253, label %cond.false254, !dbg !6810

cond.true253:                                     ; preds = %for.body248
  br label %cond.end257, !dbg !6810

cond.false254:                                    ; preds = %for.body248
  %159 = load i16*, i16** %indexes.addr, align 8, !dbg !6810
  %160 = load i64, i64* %x, align 8, !dbg !6810
  %add.ptr255 = getelementptr inbounds i16, i16* %159, i64 %160, !dbg !6810
  %161 = load i16, i16* %add.ptr255, align 2, !dbg !6810
  %conv256 = zext i16 %161 to i32, !dbg !6810
  br label %cond.end257, !dbg !6810

cond.end257:                                      ; preds = %cond.false254, %cond.true253
  %cond258 = phi i32 [ 0, %cond.true253 ], [ %conv256, %cond.false254 ], !dbg !6810
  %conv259 = sitofp i32 %cond258 to float, !dbg !6811
  %162 = load i8*, i8** %q.addr, align 8, !dbg !6812
  %call260 = call i8* @PopFloatPixel(%struct._QuantumInfo* %156, float %conv259, i8* %162), !dbg !6813
  store i8* %call260, i8** %q.addr, align 8, !dbg !6814
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6815
  %opacity261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 0, i32 3, !dbg !6815
  %164 = load i16, i16* %opacity261, align 2, !dbg !6815
  %conv262 = zext i16 %164 to i32, !dbg !6815
  %sub263 = sub nsw i32 65535, %conv262, !dbg !6815
  %conv264 = sitofp i32 %sub263 to float, !dbg !6816
  store float %conv264, float* %pixel249, align 4, !dbg !6817
  %165 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6818
  %166 = load float, float* %pixel249, align 4, !dbg !6819
  %167 = load i8*, i8** %q.addr, align 8, !dbg !6820
  %call265 = call i8* @PopFloatPixel(%struct._QuantumInfo* %165, float %166, i8* %167), !dbg !6821
  store i8* %call265, i8** %q.addr, align 8, !dbg !6822
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6823
  %incdec.ptr266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 1, !dbg !6823
  store %struct._PixelPacket* %incdec.ptr266, %struct._PixelPacket** %p.addr, align 8, !dbg !6823
  %169 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6824
  %pad267 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %169, i32 0, i32 6, !dbg !6825
  %170 = load i64, i64* %pad267, align 8, !dbg !6825
  %171 = load i8*, i8** %q.addr, align 8, !dbg !6826
  %add.ptr268 = getelementptr inbounds i8, i8* %171, i64 %170, !dbg !6826
  store i8* %add.ptr268, i8** %q.addr, align 8, !dbg !6826
  br label %for.inc269, !dbg !6827

for.inc269:                                       ; preds = %cond.end257
  %172 = load i64, i64* %x, align 8, !dbg !6828
  %inc270 = add nsw i64 %172, 1, !dbg !6828
  store i64 %inc270, i64* %x, align 8, !dbg !6828
  br label %for.cond245, !dbg !6829, !llvm.loop !6830

for.end271:                                       ; preds = %for.cond245
  br label %sw.epilog, !dbg !6832

if.end272:                                        ; preds = %sw.bb239
  store i64 0, i64* %x, align 8, !dbg !6833
  br label %for.cond273, !dbg !6835

for.cond273:                                      ; preds = %for.inc298, %if.end272
  %173 = load i64, i64* %x, align 8, !dbg !6836
  %174 = load i64, i64* %number_pixels.addr, align 8, !dbg !6838
  %cmp274 = icmp slt i64 %173, %174, !dbg !6839
  br i1 %cmp274, label %for.body276, label %for.end300, !dbg !6840

for.body276:                                      ; preds = %for.cond273
  %175 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6841
  %endian277 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %175, i32 0, i32 13, !dbg !6843
  %176 = load i32, i32* %endian277, align 8, !dbg !6843
  %177 = load i16*, i16** %indexes.addr, align 8, !dbg !6844
  %178 = load i64, i64* %x, align 8, !dbg !6844
  %add.ptr278 = getelementptr inbounds i16, i16* %177, i64 %178, !dbg !6844
  %cmp279 = icmp eq i16* %add.ptr278, null, !dbg !6844
  br i1 %cmp279, label %cond.true281, label %cond.false282, !dbg !6844

cond.true281:                                     ; preds = %for.body276
  br label %cond.end285, !dbg !6844

cond.false282:                                    ; preds = %for.body276
  %179 = load i16*, i16** %indexes.addr, align 8, !dbg !6844
  %180 = load i64, i64* %x, align 8, !dbg !6844
  %add.ptr283 = getelementptr inbounds i16, i16* %179, i64 %180, !dbg !6844
  %181 = load i16, i16* %add.ptr283, align 2, !dbg !6844
  %conv284 = zext i16 %181 to i32, !dbg !6844
  br label %cond.end285, !dbg !6844

cond.end285:                                      ; preds = %cond.false282, %cond.true281
  %cond286 = phi i32 [ 0, %cond.true281 ], [ %conv284, %cond.false282 ], !dbg !6844
  %182 = load i8*, i8** %q.addr, align 8, !dbg !6845
  %call287 = call i8* @PopLongPixel(i32 %176, i32 %cond286, i8* %182), !dbg !6846
  store i8* %call287, i8** %q.addr, align 8, !dbg !6847
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6848
  %opacity288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 3, !dbg !6848
  %184 = load i16, i16* %opacity288, align 2, !dbg !6848
  %conv289 = zext i16 %184 to i32, !dbg !6848
  %sub290 = sub nsw i32 65535, %conv289, !dbg !6849
  %conv291 = trunc i32 %sub290 to i16, !dbg !6850
  %call292 = call i32 @ScaleQuantumToLong(i16 zeroext %conv291), !dbg !6851
  store i32 %call292, i32* %pixel240, align 4, !dbg !6852
  %185 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6853
  %endian293 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %185, i32 0, i32 13, !dbg !6854
  %186 = load i32, i32* %endian293, align 8, !dbg !6854
  %187 = load i32, i32* %pixel240, align 4, !dbg !6855
  %188 = load i8*, i8** %q.addr, align 8, !dbg !6856
  %call294 = call i8* @PopLongPixel(i32 %186, i32 %187, i8* %188), !dbg !6857
  store i8* %call294, i8** %q.addr, align 8, !dbg !6858
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6859
  %incdec.ptr295 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 1, !dbg !6859
  store %struct._PixelPacket* %incdec.ptr295, %struct._PixelPacket** %p.addr, align 8, !dbg !6859
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6860
  %pad296 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %190, i32 0, i32 6, !dbg !6861
  %191 = load i64, i64* %pad296, align 8, !dbg !6861
  %192 = load i8*, i8** %q.addr, align 8, !dbg !6862
  %add.ptr297 = getelementptr inbounds i8, i8* %192, i64 %191, !dbg !6862
  store i8* %add.ptr297, i8** %q.addr, align 8, !dbg !6862
  br label %for.inc298, !dbg !6863

for.inc298:                                       ; preds = %cond.end285
  %193 = load i64, i64* %x, align 8, !dbg !6864
  %inc299 = add nsw i64 %193, 1, !dbg !6864
  store i64 %inc299, i64* %x, align 8, !dbg !6864
  br label %for.cond273, !dbg !6865, !llvm.loop !6866

for.end300:                                       ; preds = %for.cond273
  br label %sw.epilog, !dbg !6868

sw.bb301:                                         ; preds = %if.end
  %194 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6869
  %format302 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %194, i32 0, i32 2, !dbg !6872
  %195 = load i32, i32* %format302, align 8, !dbg !6872
  %cmp303 = icmp eq i32 %195, 1, !dbg !6873
  br i1 %cmp303, label %if.then305, label %if.end333, !dbg !6874

if.then305:                                       ; preds = %sw.bb301
  store i64 0, i64* %x, align 8, !dbg !6875
  br label %for.cond306, !dbg !6878

for.cond306:                                      ; preds = %for.inc330, %if.then305
  %196 = load i64, i64* %x, align 8, !dbg !6879
  %197 = load i64, i64* %number_pixels.addr, align 8, !dbg !6881
  %cmp307 = icmp slt i64 %196, %197, !dbg !6882
  br i1 %cmp307, label %for.body309, label %for.end332, !dbg !6883

for.body309:                                      ; preds = %for.cond306
  call void @llvm.dbg.declare(metadata double* %pixel310, metadata !6884, metadata !DIExpression()), !dbg !6886
  %198 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6887
  %199 = load i16*, i16** %indexes.addr, align 8, !dbg !6888
  %200 = load i64, i64* %x, align 8, !dbg !6888
  %add.ptr311 = getelementptr inbounds i16, i16* %199, i64 %200, !dbg !6888
  %cmp312 = icmp eq i16* %add.ptr311, null, !dbg !6888
  br i1 %cmp312, label %cond.true314, label %cond.false315, !dbg !6888

cond.true314:                                     ; preds = %for.body309
  br label %cond.end318, !dbg !6888

cond.false315:                                    ; preds = %for.body309
  %201 = load i16*, i16** %indexes.addr, align 8, !dbg !6888
  %202 = load i64, i64* %x, align 8, !dbg !6888
  %add.ptr316 = getelementptr inbounds i16, i16* %201, i64 %202, !dbg !6888
  %203 = load i16, i16* %add.ptr316, align 2, !dbg !6888
  %conv317 = zext i16 %203 to i32, !dbg !6888
  br label %cond.end318, !dbg !6888

cond.end318:                                      ; preds = %cond.false315, %cond.true314
  %cond319 = phi i32 [ 0, %cond.true314 ], [ %conv317, %cond.false315 ], !dbg !6888
  %conv320 = sitofp i32 %cond319 to double, !dbg !6889
  %204 = load i8*, i8** %q.addr, align 8, !dbg !6890
  %call321 = call i8* @PopDoublePixel(%struct._QuantumInfo* %198, double %conv320, i8* %204), !dbg !6891
  store i8* %call321, i8** %q.addr, align 8, !dbg !6892
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6893
  %opacity322 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 0, i32 3, !dbg !6893
  %206 = load i16, i16* %opacity322, align 2, !dbg !6893
  %conv323 = zext i16 %206 to i32, !dbg !6893
  %sub324 = sub nsw i32 65535, %conv323, !dbg !6893
  %conv325 = sitofp i32 %sub324 to double, !dbg !6894
  store double %conv325, double* %pixel310, align 8, !dbg !6895
  %207 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6896
  %208 = load double, double* %pixel310, align 8, !dbg !6897
  %209 = load i8*, i8** %q.addr, align 8, !dbg !6898
  %call326 = call i8* @PopDoublePixel(%struct._QuantumInfo* %207, double %208, i8* %209), !dbg !6899
  store i8* %call326, i8** %q.addr, align 8, !dbg !6900
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6901
  %incdec.ptr327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 1, !dbg !6901
  store %struct._PixelPacket* %incdec.ptr327, %struct._PixelPacket** %p.addr, align 8, !dbg !6901
  %211 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6902
  %pad328 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %211, i32 0, i32 6, !dbg !6903
  %212 = load i64, i64* %pad328, align 8, !dbg !6903
  %213 = load i8*, i8** %q.addr, align 8, !dbg !6904
  %add.ptr329 = getelementptr inbounds i8, i8* %213, i64 %212, !dbg !6904
  store i8* %add.ptr329, i8** %q.addr, align 8, !dbg !6904
  br label %for.inc330, !dbg !6905

for.inc330:                                       ; preds = %cond.end318
  %214 = load i64, i64* %x, align 8, !dbg !6906
  %inc331 = add nsw i64 %214, 1, !dbg !6906
  store i64 %inc331, i64* %x, align 8, !dbg !6906
  br label %for.cond306, !dbg !6907, !llvm.loop !6908

for.end332:                                       ; preds = %for.cond306
  br label %sw.epilog, !dbg !6910

if.end333:                                        ; preds = %sw.bb301
  br label %sw.default, !dbg !6911

sw.default:                                       ; preds = %if.end, %if.end333
  call void @llvm.dbg.declare(metadata i64* %range, metadata !6912, metadata !DIExpression()), !dbg !6914
  %215 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6915
  %depth334 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %215, i32 0, i32 0, !dbg !6916
  %216 = load i64, i64* %depth334, align 8, !dbg !6916
  %call335 = call i64 @GetQuantumRange(i64 %216), !dbg !6917
  store i64 %call335, i64* %range, align 8, !dbg !6918
  store i64 0, i64* %x, align 8, !dbg !6919
  br label %for.cond336, !dbg !6921

for.cond336:                                      ; preds = %for.inc360, %sw.default
  %217 = load i64, i64* %x, align 8, !dbg !6922
  %218 = load i64, i64* %number_pixels.addr, align 8, !dbg !6924
  %cmp337 = icmp slt i64 %217, %218, !dbg !6925
  br i1 %cmp337, label %for.body339, label %for.end362, !dbg !6926

for.body339:                                      ; preds = %for.cond336
  %219 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6927
  %220 = load i16*, i16** %indexes.addr, align 8, !dbg !6929
  %221 = load i64, i64* %x, align 8, !dbg !6929
  %add.ptr340 = getelementptr inbounds i16, i16* %220, i64 %221, !dbg !6929
  %cmp341 = icmp eq i16* %add.ptr340, null, !dbg !6929
  br i1 %cmp341, label %cond.true343, label %cond.false344, !dbg !6929

cond.true343:                                     ; preds = %for.body339
  br label %cond.end347, !dbg !6929

cond.false344:                                    ; preds = %for.body339
  %222 = load i16*, i16** %indexes.addr, align 8, !dbg !6929
  %223 = load i64, i64* %x, align 8, !dbg !6929
  %add.ptr345 = getelementptr inbounds i16, i16* %222, i64 %223, !dbg !6929
  %224 = load i16, i16* %add.ptr345, align 2, !dbg !6929
  %conv346 = zext i16 %224 to i32, !dbg !6929
  br label %cond.end347, !dbg !6929

cond.end347:                                      ; preds = %cond.false344, %cond.true343
  %cond348 = phi i32 [ 0, %cond.true343 ], [ %conv346, %cond.false344 ], !dbg !6929
  %conv349 = sext i32 %cond348 to i64, !dbg !6929
  %225 = load i8*, i8** %q.addr, align 8, !dbg !6930
  %call350 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %219, i64 %conv349, i8* %225), !dbg !6931
  store i8* %call350, i8** %q.addr, align 8, !dbg !6932
  %226 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6933
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6934
  %opacity351 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 0, i32 3, !dbg !6934
  %228 = load i16, i16* %opacity351, align 2, !dbg !6934
  %conv352 = zext i16 %228 to i32, !dbg !6934
  %sub353 = sub nsw i32 65535, %conv352, !dbg !6934
  %conv354 = trunc i32 %sub353 to i16, !dbg !6935
  %229 = load i64, i64* %range, align 8, !dbg !6936
  %call355 = call i64 @ScaleQuantumToAny(i16 zeroext %conv354, i64 %229), !dbg !6937
  %230 = load i8*, i8** %q.addr, align 8, !dbg !6938
  %call356 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %226, i64 %call355, i8* %230), !dbg !6939
  store i8* %call356, i8** %q.addr, align 8, !dbg !6940
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6941
  %incdec.ptr357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 1, !dbg !6941
  store %struct._PixelPacket* %incdec.ptr357, %struct._PixelPacket** %p.addr, align 8, !dbg !6941
  %232 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6942
  %pad358 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %232, i32 0, i32 6, !dbg !6943
  %233 = load i64, i64* %pad358, align 8, !dbg !6943
  %234 = load i8*, i8** %q.addr, align 8, !dbg !6944
  %add.ptr359 = getelementptr inbounds i8, i8* %234, i64 %233, !dbg !6944
  store i8* %add.ptr359, i8** %q.addr, align 8, !dbg !6944
  br label %for.inc360, !dbg !6945

for.inc360:                                       ; preds = %cond.end347
  %235 = load i64, i64* %x, align 8, !dbg !6946
  %inc361 = add nsw i64 %235, 1, !dbg !6946
  store i64 %inc361, i64* %x, align 8, !dbg !6946
  br label %for.cond336, !dbg !6947, !llvm.loop !6948

for.end362:                                       ; preds = %for.cond336
  br label %sw.epilog, !dbg !6950

sw.epilog:                                        ; preds = %if.then, %for.end362, %for.end332, %for.end300, %for.end271, %for.end238, %for.end208, %for.end173, %for.end149, %if.end119
  ret void, !dbg !6951
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportOpacityQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !6952 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel3 = alloca i16, align 2
  %pixel34 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %range, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6963, metadata !DIExpression()), !dbg !6964
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6965
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !6966
  %1 = load i64, i64* %depth, align 8, !dbg !6966
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb2
    i64 32, label %sw.bb33
    i64 64, label %sw.bb67
  ], !dbg !6967

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !6968, metadata !DIExpression()), !dbg !6971
  store i64 0, i64* %x, align 8, !dbg !6972
  br label %for.cond, !dbg !6974

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !6975
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !6977
  %cmp = icmp slt i64 %2, %3, !dbg !6978
  br i1 %cmp, label %for.body, label %for.end, !dbg !6979

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6980
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 3, !dbg !6980
  %5 = load i16, i16* %opacity, align 2, !dbg !6980
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !6982
  store i8 %call, i8* %pixel, align 1, !dbg !6983
  %6 = load i8, i8* %pixel, align 1, !dbg !6984
  %7 = load i8*, i8** %q.addr, align 8, !dbg !6985
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !6986
  store i8* %call1, i8** %q.addr, align 8, !dbg !6987
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !6988
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 1, !dbg !6988
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !6988
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6989
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 6, !dbg !6990
  %10 = load i64, i64* %pad, align 8, !dbg !6990
  %11 = load i8*, i8** %q.addr, align 8, !dbg !6991
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !6991
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !6991
  br label %for.inc, !dbg !6992

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %x, align 8, !dbg !6993
  %inc = add nsw i64 %12, 1, !dbg !6993
  store i64 %inc, i64* %x, align 8, !dbg !6993
  br label %for.cond, !dbg !6994, !llvm.loop !6995

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6997

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel3, metadata !6998, metadata !DIExpression()), !dbg !7000
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7001
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 2, !dbg !7003
  %14 = load i32, i32* %format, align 8, !dbg !7003
  %cmp4 = icmp eq i32 %14, 1, !dbg !7004
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7005

if.then:                                          ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !7006
  br label %for.cond5, !dbg !7009

for.cond5:                                        ; preds = %for.inc16, %if.then
  %15 = load i64, i64* %x, align 8, !dbg !7010
  %16 = load i64, i64* %number_pixels.addr, align 8, !dbg !7012
  %cmp6 = icmp slt i64 %15, %16, !dbg !7013
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !7014

for.body7:                                        ; preds = %for.cond5
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7015
  %opacity8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 3, !dbg !7015
  %18 = load i16, i16* %opacity8, align 2, !dbg !7015
  %conv = zext i16 %18 to i32, !dbg !7015
  %conv9 = sitofp i32 %conv to double, !dbg !7015
  %mul = fmul double 0x3EF0001000100010, %conv9, !dbg !7017
  %conv10 = fptrunc double %mul to float, !dbg !7018
  %call11 = call zeroext i16 @SinglePrecisionToHalf(float %conv10), !dbg !7019
  store i16 %call11, i16* %pixel3, align 2, !dbg !7020
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7021
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 13, !dbg !7022
  %20 = load i32, i32* %endian, align 8, !dbg !7022
  %21 = load i16, i16* %pixel3, align 2, !dbg !7023
  %22 = load i8*, i8** %q.addr, align 8, !dbg !7024
  %call12 = call i8* @PopShortPixel(i32 %20, i16 zeroext %21, i8* %22), !dbg !7025
  store i8* %call12, i8** %q.addr, align 8, !dbg !7026
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7027
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !7027
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p.addr, align 8, !dbg !7027
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7028
  %pad14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 6, !dbg !7029
  %25 = load i64, i64* %pad14, align 8, !dbg !7029
  %26 = load i8*, i8** %q.addr, align 8, !dbg !7030
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !7030
  store i8* %add.ptr15, i8** %q.addr, align 8, !dbg !7030
  br label %for.inc16, !dbg !7031

for.inc16:                                        ; preds = %for.body7
  %27 = load i64, i64* %x, align 8, !dbg !7032
  %inc17 = add nsw i64 %27, 1, !dbg !7032
  store i64 %inc17, i64* %x, align 8, !dbg !7032
  br label %for.cond5, !dbg !7033, !llvm.loop !7034

for.end18:                                        ; preds = %for.cond5
  br label %sw.epilog, !dbg !7036

if.end:                                           ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !7037
  br label %for.cond19, !dbg !7039

for.cond19:                                       ; preds = %for.inc30, %if.end
  %28 = load i64, i64* %x, align 8, !dbg !7040
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !7042
  %cmp20 = icmp slt i64 %28, %29, !dbg !7043
  br i1 %cmp20, label %for.body22, label %for.end32, !dbg !7044

for.body22:                                       ; preds = %for.cond19
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7045
  %opacity23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 3, !dbg !7045
  %31 = load i16, i16* %opacity23, align 2, !dbg !7045
  %call24 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %31), !dbg !7047
  store i16 %call24, i16* %pixel3, align 2, !dbg !7048
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7049
  %endian25 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !7050
  %33 = load i32, i32* %endian25, align 8, !dbg !7050
  %34 = load i16, i16* %pixel3, align 2, !dbg !7051
  %35 = load i8*, i8** %q.addr, align 8, !dbg !7052
  %call26 = call i8* @PopShortPixel(i32 %33, i16 zeroext %34, i8* %35), !dbg !7053
  store i8* %call26, i8** %q.addr, align 8, !dbg !7054
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7055
  %incdec.ptr27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !7055
  store %struct._PixelPacket* %incdec.ptr27, %struct._PixelPacket** %p.addr, align 8, !dbg !7055
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7056
  %pad28 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !7057
  %38 = load i64, i64* %pad28, align 8, !dbg !7057
  %39 = load i8*, i8** %q.addr, align 8, !dbg !7058
  %add.ptr29 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !7058
  store i8* %add.ptr29, i8** %q.addr, align 8, !dbg !7058
  br label %for.inc30, !dbg !7059

for.inc30:                                        ; preds = %for.body22
  %40 = load i64, i64* %x, align 8, !dbg !7060
  %inc31 = add nsw i64 %40, 1, !dbg !7060
  store i64 %inc31, i64* %x, align 8, !dbg !7060
  br label %for.cond19, !dbg !7061, !llvm.loop !7062

for.end32:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !7064

sw.bb33:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel34, metadata !7065, metadata !DIExpression()), !dbg !7067
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7068
  %format35 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 2, !dbg !7070
  %42 = load i32, i32* %format35, align 8, !dbg !7070
  %cmp36 = icmp eq i32 %42, 1, !dbg !7071
  br i1 %cmp36, label %if.then38, label %if.end52, !dbg !7072

if.then38:                                        ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !7073
  br label %for.cond39, !dbg !7076

for.cond39:                                       ; preds = %for.inc49, %if.then38
  %43 = load i64, i64* %x, align 8, !dbg !7077
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !7079
  %cmp40 = icmp slt i64 %43, %44, !dbg !7080
  br i1 %cmp40, label %for.body42, label %for.end51, !dbg !7081

for.body42:                                       ; preds = %for.cond39
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7082
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7084
  %opacity43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 3, !dbg !7084
  %47 = load i16, i16* %opacity43, align 2, !dbg !7084
  %conv44 = uitofp i16 %47 to float, !dbg !7085
  %48 = load i8*, i8** %q.addr, align 8, !dbg !7086
  %call45 = call i8* @PopFloatPixel(%struct._QuantumInfo* %45, float %conv44, i8* %48), !dbg !7087
  store i8* %call45, i8** %q.addr, align 8, !dbg !7088
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7089
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !7089
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %p.addr, align 8, !dbg !7089
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7090
  %pad47 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 6, !dbg !7091
  %51 = load i64, i64* %pad47, align 8, !dbg !7091
  %52 = load i8*, i8** %q.addr, align 8, !dbg !7092
  %add.ptr48 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !7092
  store i8* %add.ptr48, i8** %q.addr, align 8, !dbg !7092
  br label %for.inc49, !dbg !7093

for.inc49:                                        ; preds = %for.body42
  %53 = load i64, i64* %x, align 8, !dbg !7094
  %inc50 = add nsw i64 %53, 1, !dbg !7094
  store i64 %inc50, i64* %x, align 8, !dbg !7094
  br label %for.cond39, !dbg !7095, !llvm.loop !7096

for.end51:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !7098

if.end52:                                         ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !7099
  br label %for.cond53, !dbg !7101

for.cond53:                                       ; preds = %for.inc64, %if.end52
  %54 = load i64, i64* %x, align 8, !dbg !7102
  %55 = load i64, i64* %number_pixels.addr, align 8, !dbg !7104
  %cmp54 = icmp slt i64 %54, %55, !dbg !7105
  br i1 %cmp54, label %for.body56, label %for.end66, !dbg !7106

for.body56:                                       ; preds = %for.cond53
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7107
  %opacity57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 3, !dbg !7107
  %57 = load i16, i16* %opacity57, align 2, !dbg !7107
  %call58 = call i32 @ScaleQuantumToLong(i16 zeroext %57), !dbg !7109
  store i32 %call58, i32* %pixel34, align 4, !dbg !7110
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7111
  %endian59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 13, !dbg !7112
  %59 = load i32, i32* %endian59, align 8, !dbg !7112
  %60 = load i32, i32* %pixel34, align 4, !dbg !7113
  %61 = load i8*, i8** %q.addr, align 8, !dbg !7114
  %call60 = call i8* @PopLongPixel(i32 %59, i32 %60, i8* %61), !dbg !7115
  store i8* %call60, i8** %q.addr, align 8, !dbg !7116
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7117
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !7117
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %p.addr, align 8, !dbg !7117
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7118
  %pad62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 6, !dbg !7119
  %64 = load i64, i64* %pad62, align 8, !dbg !7119
  %65 = load i8*, i8** %q.addr, align 8, !dbg !7120
  %add.ptr63 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !7120
  store i8* %add.ptr63, i8** %q.addr, align 8, !dbg !7120
  br label %for.inc64, !dbg !7121

for.inc64:                                        ; preds = %for.body56
  %66 = load i64, i64* %x, align 8, !dbg !7122
  %inc65 = add nsw i64 %66, 1, !dbg !7122
  store i64 %inc65, i64* %x, align 8, !dbg !7122
  br label %for.cond53, !dbg !7123, !llvm.loop !7124

for.end66:                                        ; preds = %for.cond53
  br label %sw.epilog, !dbg !7126

sw.bb67:                                          ; preds = %entry
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7127
  %format68 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %67, i32 0, i32 2, !dbg !7130
  %68 = load i32, i32* %format68, align 8, !dbg !7130
  %cmp69 = icmp eq i32 %68, 1, !dbg !7131
  br i1 %cmp69, label %if.then71, label %if.end85, !dbg !7132

if.then71:                                        ; preds = %sw.bb67
  store i64 0, i64* %x, align 8, !dbg !7133
  br label %for.cond72, !dbg !7136

for.cond72:                                       ; preds = %for.inc82, %if.then71
  %69 = load i64, i64* %x, align 8, !dbg !7137
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !7139
  %cmp73 = icmp slt i64 %69, %70, !dbg !7140
  br i1 %cmp73, label %for.body75, label %for.end84, !dbg !7141

for.body75:                                       ; preds = %for.cond72
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7142
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7144
  %opacity76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 3, !dbg !7144
  %73 = load i16, i16* %opacity76, align 2, !dbg !7144
  %conv77 = uitofp i16 %73 to double, !dbg !7145
  %74 = load i8*, i8** %q.addr, align 8, !dbg !7146
  %call78 = call i8* @PopDoublePixel(%struct._QuantumInfo* %71, double %conv77, i8* %74), !dbg !7147
  store i8* %call78, i8** %q.addr, align 8, !dbg !7148
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7149
  %incdec.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 1, !dbg !7149
  store %struct._PixelPacket* %incdec.ptr79, %struct._PixelPacket** %p.addr, align 8, !dbg !7149
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7150
  %pad80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 6, !dbg !7151
  %77 = load i64, i64* %pad80, align 8, !dbg !7151
  %78 = load i8*, i8** %q.addr, align 8, !dbg !7152
  %add.ptr81 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !7152
  store i8* %add.ptr81, i8** %q.addr, align 8, !dbg !7152
  br label %for.inc82, !dbg !7153

for.inc82:                                        ; preds = %for.body75
  %79 = load i64, i64* %x, align 8, !dbg !7154
  %inc83 = add nsw i64 %79, 1, !dbg !7154
  store i64 %inc83, i64* %x, align 8, !dbg !7154
  br label %for.cond72, !dbg !7155, !llvm.loop !7156

for.end84:                                        ; preds = %for.cond72
  br label %sw.epilog, !dbg !7158

if.end85:                                         ; preds = %sw.bb67
  br label %sw.default, !dbg !7159

sw.default:                                       ; preds = %entry, %if.end85
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7160
  %depth86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 0, !dbg !7162
  %81 = load i64, i64* %depth86, align 8, !dbg !7162
  %call87 = call i64 @GetQuantumRange(i64 %81), !dbg !7163
  store i64 %call87, i64* %range, align 8, !dbg !7164
  store i64 0, i64* %x, align 8, !dbg !7165
  br label %for.cond88, !dbg !7167

for.cond88:                                       ; preds = %for.inc98, %sw.default
  %82 = load i64, i64* %x, align 8, !dbg !7168
  %83 = load i64, i64* %number_pixels.addr, align 8, !dbg !7170
  %cmp89 = icmp slt i64 %82, %83, !dbg !7171
  br i1 %cmp89, label %for.body91, label %for.end100, !dbg !7172

for.body91:                                       ; preds = %for.cond88
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7173
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7175
  %opacity92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 3, !dbg !7175
  %86 = load i16, i16* %opacity92, align 2, !dbg !7175
  %87 = load i64, i64* %range, align 8, !dbg !7176
  %call93 = call i64 @ScaleQuantumToAny(i16 zeroext %86, i64 %87), !dbg !7177
  %88 = load i8*, i8** %q.addr, align 8, !dbg !7178
  %call94 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %84, i64 %call93, i8* %88), !dbg !7179
  store i8* %call94, i8** %q.addr, align 8, !dbg !7180
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7181
  %incdec.ptr95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !7181
  store %struct._PixelPacket* %incdec.ptr95, %struct._PixelPacket** %p.addr, align 8, !dbg !7181
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7182
  %pad96 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !7183
  %91 = load i64, i64* %pad96, align 8, !dbg !7183
  %92 = load i8*, i8** %q.addr, align 8, !dbg !7184
  %add.ptr97 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !7184
  store i8* %add.ptr97, i8** %q.addr, align 8, !dbg !7184
  br label %for.inc98, !dbg !7185

for.inc98:                                        ; preds = %for.body91
  %93 = load i64, i64* %x, align 8, !dbg !7186
  %inc99 = add nsw i64 %93, 1, !dbg !7186
  store i64 %inc99, i64* %x, align 8, !dbg !7186
  br label %for.cond88, !dbg !7187, !llvm.loop !7188

for.end100:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !7190

sw.epilog:                                        ; preds = %for.end100, %for.end84, %for.end66, %for.end51, %for.end32, %for.end18, %for.end
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportRedQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !7192 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel3 = alloca i16, align 2
  %pixel34 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.declare(metadata i64* %range, metadata !7201, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7203, metadata !DIExpression()), !dbg !7204
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7205
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !7206
  %1 = load i64, i64* %depth, align 8, !dbg !7206
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb2
    i64 32, label %sw.bb33
    i64 64, label %sw.bb67
  ], !dbg !7207

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !7208, metadata !DIExpression()), !dbg !7211
  store i64 0, i64* %x, align 8, !dbg !7212
  br label %for.cond, !dbg !7214

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !7215
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !7217
  %cmp = icmp slt i64 %2, %3, !dbg !7218
  br i1 %cmp, label %for.body, label %for.end, !dbg !7219

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7220
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !7220
  %5 = load i16, i16* %red, align 2, !dbg !7220
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !7222
  store i8 %call, i8* %pixel, align 1, !dbg !7223
  %6 = load i8, i8* %pixel, align 1, !dbg !7224
  %7 = load i8*, i8** %q.addr, align 8, !dbg !7225
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !7226
  store i8* %call1, i8** %q.addr, align 8, !dbg !7227
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7228
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 1, !dbg !7228
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !7228
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7229
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 6, !dbg !7230
  %10 = load i64, i64* %pad, align 8, !dbg !7230
  %11 = load i8*, i8** %q.addr, align 8, !dbg !7231
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !7231
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !7231
  br label %for.inc, !dbg !7232

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %x, align 8, !dbg !7233
  %inc = add nsw i64 %12, 1, !dbg !7233
  store i64 %inc, i64* %x, align 8, !dbg !7233
  br label %for.cond, !dbg !7234, !llvm.loop !7235

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !7237

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel3, metadata !7238, metadata !DIExpression()), !dbg !7240
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7241
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 2, !dbg !7243
  %14 = load i32, i32* %format, align 8, !dbg !7243
  %cmp4 = icmp eq i32 %14, 1, !dbg !7244
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7245

if.then:                                          ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !7246
  br label %for.cond5, !dbg !7249

for.cond5:                                        ; preds = %for.inc16, %if.then
  %15 = load i64, i64* %x, align 8, !dbg !7250
  %16 = load i64, i64* %number_pixels.addr, align 8, !dbg !7252
  %cmp6 = icmp slt i64 %15, %16, !dbg !7253
  br i1 %cmp6, label %for.body7, label %for.end18, !dbg !7254

for.body7:                                        ; preds = %for.cond5
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7255
  %red8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 2, !dbg !7255
  %18 = load i16, i16* %red8, align 2, !dbg !7255
  %conv = zext i16 %18 to i32, !dbg !7255
  %conv9 = sitofp i32 %conv to double, !dbg !7255
  %mul = fmul double 0x3EF0001000100010, %conv9, !dbg !7257
  %conv10 = fptrunc double %mul to float, !dbg !7258
  %call11 = call zeroext i16 @SinglePrecisionToHalf(float %conv10), !dbg !7259
  store i16 %call11, i16* %pixel3, align 2, !dbg !7260
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7261
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 13, !dbg !7262
  %20 = load i32, i32* %endian, align 8, !dbg !7262
  %21 = load i16, i16* %pixel3, align 2, !dbg !7263
  %22 = load i8*, i8** %q.addr, align 8, !dbg !7264
  %call12 = call i8* @PopShortPixel(i32 %20, i16 zeroext %21, i8* %22), !dbg !7265
  store i8* %call12, i8** %q.addr, align 8, !dbg !7266
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7267
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !7267
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p.addr, align 8, !dbg !7267
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7268
  %pad14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 6, !dbg !7269
  %25 = load i64, i64* %pad14, align 8, !dbg !7269
  %26 = load i8*, i8** %q.addr, align 8, !dbg !7270
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !7270
  store i8* %add.ptr15, i8** %q.addr, align 8, !dbg !7270
  br label %for.inc16, !dbg !7271

for.inc16:                                        ; preds = %for.body7
  %27 = load i64, i64* %x, align 8, !dbg !7272
  %inc17 = add nsw i64 %27, 1, !dbg !7272
  store i64 %inc17, i64* %x, align 8, !dbg !7272
  br label %for.cond5, !dbg !7273, !llvm.loop !7274

for.end18:                                        ; preds = %for.cond5
  br label %sw.epilog, !dbg !7276

if.end:                                           ; preds = %sw.bb2
  store i64 0, i64* %x, align 8, !dbg !7277
  br label %for.cond19, !dbg !7279

for.cond19:                                       ; preds = %for.inc30, %if.end
  %28 = load i64, i64* %x, align 8, !dbg !7280
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !7282
  %cmp20 = icmp slt i64 %28, %29, !dbg !7283
  br i1 %cmp20, label %for.body22, label %for.end32, !dbg !7284

for.body22:                                       ; preds = %for.cond19
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7285
  %red23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !7285
  %31 = load i16, i16* %red23, align 2, !dbg !7285
  %call24 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %31), !dbg !7287
  store i16 %call24, i16* %pixel3, align 2, !dbg !7288
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7289
  %endian25 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !7290
  %33 = load i32, i32* %endian25, align 8, !dbg !7290
  %34 = load i16, i16* %pixel3, align 2, !dbg !7291
  %35 = load i8*, i8** %q.addr, align 8, !dbg !7292
  %call26 = call i8* @PopShortPixel(i32 %33, i16 zeroext %34, i8* %35), !dbg !7293
  store i8* %call26, i8** %q.addr, align 8, !dbg !7294
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7295
  %incdec.ptr27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !7295
  store %struct._PixelPacket* %incdec.ptr27, %struct._PixelPacket** %p.addr, align 8, !dbg !7295
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7296
  %pad28 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !7297
  %38 = load i64, i64* %pad28, align 8, !dbg !7297
  %39 = load i8*, i8** %q.addr, align 8, !dbg !7298
  %add.ptr29 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !7298
  store i8* %add.ptr29, i8** %q.addr, align 8, !dbg !7298
  br label %for.inc30, !dbg !7299

for.inc30:                                        ; preds = %for.body22
  %40 = load i64, i64* %x, align 8, !dbg !7300
  %inc31 = add nsw i64 %40, 1, !dbg !7300
  store i64 %inc31, i64* %x, align 8, !dbg !7300
  br label %for.cond19, !dbg !7301, !llvm.loop !7302

for.end32:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !7304

sw.bb33:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel34, metadata !7305, metadata !DIExpression()), !dbg !7307
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7308
  %format35 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 2, !dbg !7310
  %42 = load i32, i32* %format35, align 8, !dbg !7310
  %cmp36 = icmp eq i32 %42, 1, !dbg !7311
  br i1 %cmp36, label %if.then38, label %if.end52, !dbg !7312

if.then38:                                        ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !7313
  br label %for.cond39, !dbg !7316

for.cond39:                                       ; preds = %for.inc49, %if.then38
  %43 = load i64, i64* %x, align 8, !dbg !7317
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !7319
  %cmp40 = icmp slt i64 %43, %44, !dbg !7320
  br i1 %cmp40, label %for.body42, label %for.end51, !dbg !7321

for.body42:                                       ; preds = %for.cond39
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7322
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7324
  %red43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 2, !dbg !7324
  %47 = load i16, i16* %red43, align 2, !dbg !7324
  %conv44 = uitofp i16 %47 to float, !dbg !7325
  %48 = load i8*, i8** %q.addr, align 8, !dbg !7326
  %call45 = call i8* @PopFloatPixel(%struct._QuantumInfo* %45, float %conv44, i8* %48), !dbg !7327
  store i8* %call45, i8** %q.addr, align 8, !dbg !7328
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7329
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !7329
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %p.addr, align 8, !dbg !7329
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7330
  %pad47 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 6, !dbg !7331
  %51 = load i64, i64* %pad47, align 8, !dbg !7331
  %52 = load i8*, i8** %q.addr, align 8, !dbg !7332
  %add.ptr48 = getelementptr inbounds i8, i8* %52, i64 %51, !dbg !7332
  store i8* %add.ptr48, i8** %q.addr, align 8, !dbg !7332
  br label %for.inc49, !dbg !7333

for.inc49:                                        ; preds = %for.body42
  %53 = load i64, i64* %x, align 8, !dbg !7334
  %inc50 = add nsw i64 %53, 1, !dbg !7334
  store i64 %inc50, i64* %x, align 8, !dbg !7334
  br label %for.cond39, !dbg !7335, !llvm.loop !7336

for.end51:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !7338

if.end52:                                         ; preds = %sw.bb33
  store i64 0, i64* %x, align 8, !dbg !7339
  br label %for.cond53, !dbg !7341

for.cond53:                                       ; preds = %for.inc64, %if.end52
  %54 = load i64, i64* %x, align 8, !dbg !7342
  %55 = load i64, i64* %number_pixels.addr, align 8, !dbg !7344
  %cmp54 = icmp slt i64 %54, %55, !dbg !7345
  br i1 %cmp54, label %for.body56, label %for.end66, !dbg !7346

for.body56:                                       ; preds = %for.cond53
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7347
  %red57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 2, !dbg !7347
  %57 = load i16, i16* %red57, align 2, !dbg !7347
  %call58 = call i32 @ScaleQuantumToLong(i16 zeroext %57), !dbg !7349
  store i32 %call58, i32* %pixel34, align 4, !dbg !7350
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7351
  %endian59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 13, !dbg !7352
  %59 = load i32, i32* %endian59, align 8, !dbg !7352
  %60 = load i32, i32* %pixel34, align 4, !dbg !7353
  %61 = load i8*, i8** %q.addr, align 8, !dbg !7354
  %call60 = call i8* @PopLongPixel(i32 %59, i32 %60, i8* %61), !dbg !7355
  store i8* %call60, i8** %q.addr, align 8, !dbg !7356
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7357
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !7357
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %p.addr, align 8, !dbg !7357
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7358
  %pad62 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 6, !dbg !7359
  %64 = load i64, i64* %pad62, align 8, !dbg !7359
  %65 = load i8*, i8** %q.addr, align 8, !dbg !7360
  %add.ptr63 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !7360
  store i8* %add.ptr63, i8** %q.addr, align 8, !dbg !7360
  br label %for.inc64, !dbg !7361

for.inc64:                                        ; preds = %for.body56
  %66 = load i64, i64* %x, align 8, !dbg !7362
  %inc65 = add nsw i64 %66, 1, !dbg !7362
  store i64 %inc65, i64* %x, align 8, !dbg !7362
  br label %for.cond53, !dbg !7363, !llvm.loop !7364

for.end66:                                        ; preds = %for.cond53
  br label %sw.epilog, !dbg !7366

sw.bb67:                                          ; preds = %entry
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7367
  %format68 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %67, i32 0, i32 2, !dbg !7370
  %68 = load i32, i32* %format68, align 8, !dbg !7370
  %cmp69 = icmp eq i32 %68, 1, !dbg !7371
  br i1 %cmp69, label %if.then71, label %if.end85, !dbg !7372

if.then71:                                        ; preds = %sw.bb67
  store i64 0, i64* %x, align 8, !dbg !7373
  br label %for.cond72, !dbg !7376

for.cond72:                                       ; preds = %for.inc82, %if.then71
  %69 = load i64, i64* %x, align 8, !dbg !7377
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !7379
  %cmp73 = icmp slt i64 %69, %70, !dbg !7380
  br i1 %cmp73, label %for.body75, label %for.end84, !dbg !7381

for.body75:                                       ; preds = %for.cond72
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7382
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7384
  %red76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 2, !dbg !7384
  %73 = load i16, i16* %red76, align 2, !dbg !7384
  %conv77 = uitofp i16 %73 to double, !dbg !7385
  %74 = load i8*, i8** %q.addr, align 8, !dbg !7386
  %call78 = call i8* @PopDoublePixel(%struct._QuantumInfo* %71, double %conv77, i8* %74), !dbg !7387
  store i8* %call78, i8** %q.addr, align 8, !dbg !7388
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7389
  %incdec.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 1, !dbg !7389
  store %struct._PixelPacket* %incdec.ptr79, %struct._PixelPacket** %p.addr, align 8, !dbg !7389
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7390
  %pad80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 6, !dbg !7391
  %77 = load i64, i64* %pad80, align 8, !dbg !7391
  %78 = load i8*, i8** %q.addr, align 8, !dbg !7392
  %add.ptr81 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !7392
  store i8* %add.ptr81, i8** %q.addr, align 8, !dbg !7392
  br label %for.inc82, !dbg !7393

for.inc82:                                        ; preds = %for.body75
  %79 = load i64, i64* %x, align 8, !dbg !7394
  %inc83 = add nsw i64 %79, 1, !dbg !7394
  store i64 %inc83, i64* %x, align 8, !dbg !7394
  br label %for.cond72, !dbg !7395, !llvm.loop !7396

for.end84:                                        ; preds = %for.cond72
  br label %sw.epilog, !dbg !7398

if.end85:                                         ; preds = %sw.bb67
  br label %sw.default, !dbg !7399

sw.default:                                       ; preds = %entry, %if.end85
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7400
  %depth86 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 0, !dbg !7402
  %81 = load i64, i64* %depth86, align 8, !dbg !7402
  %call87 = call i64 @GetQuantumRange(i64 %81), !dbg !7403
  store i64 %call87, i64* %range, align 8, !dbg !7404
  store i64 0, i64* %x, align 8, !dbg !7405
  br label %for.cond88, !dbg !7407

for.cond88:                                       ; preds = %for.inc98, %sw.default
  %82 = load i64, i64* %x, align 8, !dbg !7408
  %83 = load i64, i64* %number_pixels.addr, align 8, !dbg !7410
  %cmp89 = icmp slt i64 %82, %83, !dbg !7411
  br i1 %cmp89, label %for.body91, label %for.end100, !dbg !7412

for.body91:                                       ; preds = %for.cond88
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7413
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7415
  %red92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 2, !dbg !7415
  %86 = load i16, i16* %red92, align 2, !dbg !7415
  %87 = load i64, i64* %range, align 8, !dbg !7416
  %call93 = call i64 @ScaleQuantumToAny(i16 zeroext %86, i64 %87), !dbg !7417
  %88 = load i8*, i8** %q.addr, align 8, !dbg !7418
  %call94 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %84, i64 %call93, i8* %88), !dbg !7419
  store i8* %call94, i8** %q.addr, align 8, !dbg !7420
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7421
  %incdec.ptr95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !7421
  store %struct._PixelPacket* %incdec.ptr95, %struct._PixelPacket** %p.addr, align 8, !dbg !7421
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7422
  %pad96 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !7423
  %91 = load i64, i64* %pad96, align 8, !dbg !7423
  %92 = load i8*, i8** %q.addr, align 8, !dbg !7424
  %add.ptr97 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !7424
  store i8* %add.ptr97, i8** %q.addr, align 8, !dbg !7424
  br label %for.inc98, !dbg !7425

for.inc98:                                        ; preds = %for.body91
  %93 = load i64, i64* %x, align 8, !dbg !7426
  %inc99 = add nsw i64 %93, 1, !dbg !7426
  store i64 %inc99, i64* %x, align 8, !dbg !7426
  br label %for.cond88, !dbg !7427, !llvm.loop !7428

for.end100:                                       ; preds = %for.cond88
  br label %sw.epilog, !dbg !7430

sw.epilog:                                        ; preds = %for.end100, %for.end84, %for.end66, %for.end51, %for.end32, %for.end18, %for.end
  ret void, !dbg !7431
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportRGBQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !7432 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel84 = alloca i32, align 4
  %pixel231 = alloca i16, align 2
  %pixel293 = alloca i32, align 4
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !7433, metadata !DIExpression()), !dbg !7434
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata i64* %range, metadata !7441, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !7445, metadata !DIExpression()), !dbg !7446
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7447
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !7448
  %1 = load i64, i64* %depth, align 8, !dbg !7448
  switch i64 %1, label %sw.default365 [
    i64 8, label %sw.bb
    i64 10, label %sw.bb6
    i64 12, label %sw.bb83
    i64 16, label %sw.bb230
    i64 32, label %sw.bb292
    i64 64, label %sw.bb340
  ], !dbg !7449

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %x, align 8, !dbg !7450
  br label %for.cond, !dbg !7454

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !7455
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !7457
  %cmp = icmp slt i64 %2, %3, !dbg !7458
  br i1 %cmp, label %for.body, label %for.end, !dbg !7459

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7460
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !7460
  %5 = load i16, i16* %red, align 2, !dbg !7460
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !7462
  %6 = load i8*, i8** %q.addr, align 8, !dbg !7463
  %call1 = call i8* @PopCharPixel(i8 zeroext %call, i8* %6), !dbg !7464
  store i8* %call1, i8** %q.addr, align 8, !dbg !7465
  %7 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7466
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %7, i32 0, i32 1, !dbg !7466
  %8 = load i16, i16* %green, align 2, !dbg !7466
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %8), !dbg !7467
  %9 = load i8*, i8** %q.addr, align 8, !dbg !7468
  %call3 = call i8* @PopCharPixel(i8 zeroext %call2, i8* %9), !dbg !7469
  store i8* %call3, i8** %q.addr, align 8, !dbg !7470
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7471
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 0, !dbg !7471
  %11 = load i16, i16* %blue, align 2, !dbg !7471
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %11), !dbg !7472
  %12 = load i8*, i8** %q.addr, align 8, !dbg !7473
  %call5 = call i8* @PopCharPixel(i8 zeroext %call4, i8* %12), !dbg !7474
  store i8* %call5, i8** %q.addr, align 8, !dbg !7475
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7476
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 1, !dbg !7476
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !7476
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7477
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 6, !dbg !7478
  %15 = load i64, i64* %pad, align 8, !dbg !7478
  %16 = load i8*, i8** %q.addr, align 8, !dbg !7479
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !7479
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !7479
  br label %for.inc, !dbg !7480

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %x, align 8, !dbg !7481
  %inc = add nsw i64 %17, 1, !dbg !7481
  store i64 %inc, i64* %x, align 8, !dbg !7481
  br label %for.cond, !dbg !7482, !llvm.loop !7483

for.end:                                          ; preds = %for.cond
  br label %sw.epilog387, !dbg !7485

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !7486, metadata !DIExpression()), !dbg !7488
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7489
  %depth7 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %18, i32 0, i32 0, !dbg !7490
  %19 = load i64, i64* %depth7, align 8, !dbg !7490
  %call8 = call i64 @GetQuantumRange(i64 %19), !dbg !7491
  store i64 %call8, i64* %range, align 8, !dbg !7492
  %20 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7493
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %20, i32 0, i32 8, !dbg !7495
  %21 = load i32, i32* %pack, align 4, !dbg !7495
  %cmp9 = icmp eq i32 %21, 0, !dbg !7496
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7497

if.then:                                          ; preds = %sw.bb6
  store i64 0, i64* %x, align 8, !dbg !7498
  br label %for.cond10, !dbg !7501

for.cond10:                                       ; preds = %for.inc26, %if.then
  %22 = load i64, i64* %x, align 8, !dbg !7502
  %23 = load i64, i64* %number_pixels.addr, align 8, !dbg !7504
  %cmp11 = icmp slt i64 %22, %23, !dbg !7505
  br i1 %cmp11, label %for.body12, label %for.end28, !dbg !7506

for.body12:                                       ; preds = %for.cond10
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7507
  %red13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 2, !dbg !7507
  %25 = load i16, i16* %red13, align 2, !dbg !7507
  %26 = load i64, i64* %range, align 8, !dbg !7509
  %call14 = call i64 @ScaleQuantumToAny(i16 zeroext %25, i64 %26), !dbg !7510
  %shl = shl i64 %call14, 22, !dbg !7511
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7512
  %green15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 1, !dbg !7512
  %28 = load i16, i16* %green15, align 2, !dbg !7512
  %29 = load i64, i64* %range, align 8, !dbg !7513
  %call16 = call i64 @ScaleQuantumToAny(i16 zeroext %28, i64 %29), !dbg !7514
  %shl17 = shl i64 %call16, 12, !dbg !7515
  %or = or i64 %shl, %shl17, !dbg !7516
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7517
  %blue18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !7517
  %31 = load i16, i16* %blue18, align 2, !dbg !7517
  %32 = load i64, i64* %range, align 8, !dbg !7518
  %call19 = call i64 @ScaleQuantumToAny(i16 zeroext %31, i64 %32), !dbg !7519
  %shl20 = shl i64 %call19, 2, !dbg !7520
  %or21 = or i64 %or, %shl20, !dbg !7521
  %conv = trunc i64 %or21 to i32, !dbg !7522
  store i32 %conv, i32* %pixel, align 4, !dbg !7523
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7524
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 13, !dbg !7525
  %34 = load i32, i32* %endian, align 8, !dbg !7525
  %35 = load i32, i32* %pixel, align 4, !dbg !7526
  %36 = load i8*, i8** %q.addr, align 8, !dbg !7527
  %call22 = call i8* @PopLongPixel(i32 %34, i32 %35, i8* %36), !dbg !7528
  store i8* %call22, i8** %q.addr, align 8, !dbg !7529
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7530
  %incdec.ptr23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 1, !dbg !7530
  store %struct._PixelPacket* %incdec.ptr23, %struct._PixelPacket** %p.addr, align 8, !dbg !7530
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7531
  %pad24 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 6, !dbg !7532
  %39 = load i64, i64* %pad24, align 8, !dbg !7532
  %40 = load i8*, i8** %q.addr, align 8, !dbg !7533
  %add.ptr25 = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !7533
  store i8* %add.ptr25, i8** %q.addr, align 8, !dbg !7533
  br label %for.inc26, !dbg !7534

for.inc26:                                        ; preds = %for.body12
  %41 = load i64, i64* %x, align 8, !dbg !7535
  %inc27 = add nsw i64 %41, 1, !dbg !7535
  store i64 %inc27, i64* %x, align 8, !dbg !7535
  br label %for.cond10, !dbg !7536, !llvm.loop !7537

for.end28:                                        ; preds = %for.cond10
  br label %sw.epilog387, !dbg !7539

if.end:                                           ; preds = %sw.bb6
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7540
  %quantum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 1, !dbg !7542
  %43 = load i64, i64* %quantum, align 8, !dbg !7542
  %cmp29 = icmp eq i64 %43, 32, !dbg !7543
  br i1 %cmp29, label %if.then31, label %if.end57, !dbg !7544

if.then31:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !7545
  br label %for.cond32, !dbg !7548

for.cond32:                                       ; preds = %for.inc54, %if.then31
  %44 = load i64, i64* %x, align 8, !dbg !7549
  %45 = load i64, i64* %number_pixels.addr, align 8, !dbg !7551
  %cmp33 = icmp slt i64 %44, %45, !dbg !7552
  br i1 %cmp33, label %for.body35, label %for.end56, !dbg !7553

for.body35:                                       ; preds = %for.cond32
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7554
  %red36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 2, !dbg !7554
  %47 = load i16, i16* %red36, align 2, !dbg !7554
  %48 = load i64, i64* %range, align 8, !dbg !7556
  %call37 = call i64 @ScaleQuantumToAny(i16 zeroext %47, i64 %48), !dbg !7557
  %conv38 = trunc i64 %call37 to i32, !dbg !7558
  store i32 %conv38, i32* %pixel, align 4, !dbg !7559
  %49 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7560
  %50 = load i32, i32* %pixel, align 4, !dbg !7561
  %conv39 = zext i32 %50 to i64, !dbg !7561
  %51 = load i8*, i8** %q.addr, align 8, !dbg !7562
  %call40 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %49, i64 %conv39, i8* %51), !dbg !7563
  store i8* %call40, i8** %q.addr, align 8, !dbg !7564
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7565
  %green41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 1, !dbg !7565
  %53 = load i16, i16* %green41, align 2, !dbg !7565
  %54 = load i64, i64* %range, align 8, !dbg !7566
  %call42 = call i64 @ScaleQuantumToAny(i16 zeroext %53, i64 %54), !dbg !7567
  %conv43 = trunc i64 %call42 to i32, !dbg !7568
  store i32 %conv43, i32* %pixel, align 4, !dbg !7569
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7570
  %56 = load i32, i32* %pixel, align 4, !dbg !7571
  %conv44 = zext i32 %56 to i64, !dbg !7571
  %57 = load i8*, i8** %q.addr, align 8, !dbg !7572
  %call45 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %55, i64 %conv44, i8* %57), !dbg !7573
  store i8* %call45, i8** %q.addr, align 8, !dbg !7574
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7575
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 0, !dbg !7575
  %59 = load i16, i16* %blue46, align 2, !dbg !7575
  %60 = load i64, i64* %range, align 8, !dbg !7576
  %call47 = call i64 @ScaleQuantumToAny(i16 zeroext %59, i64 %60), !dbg !7577
  %conv48 = trunc i64 %call47 to i32, !dbg !7578
  store i32 %conv48, i32* %pixel, align 4, !dbg !7579
  %61 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7580
  %62 = load i32, i32* %pixel, align 4, !dbg !7581
  %conv49 = zext i32 %62 to i64, !dbg !7581
  %63 = load i8*, i8** %q.addr, align 8, !dbg !7582
  %call50 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %61, i64 %conv49, i8* %63), !dbg !7583
  store i8* %call50, i8** %q.addr, align 8, !dbg !7584
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7585
  %incdec.ptr51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 1, !dbg !7585
  store %struct._PixelPacket* %incdec.ptr51, %struct._PixelPacket** %p.addr, align 8, !dbg !7585
  %65 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7586
  %pad52 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %65, i32 0, i32 6, !dbg !7587
  %66 = load i64, i64* %pad52, align 8, !dbg !7587
  %67 = load i8*, i8** %q.addr, align 8, !dbg !7588
  %add.ptr53 = getelementptr inbounds i8, i8* %67, i64 %66, !dbg !7588
  store i8* %add.ptr53, i8** %q.addr, align 8, !dbg !7588
  br label %for.inc54, !dbg !7589

for.inc54:                                        ; preds = %for.body35
  %68 = load i64, i64* %x, align 8, !dbg !7590
  %inc55 = add nsw i64 %68, 1, !dbg !7590
  store i64 %inc55, i64* %x, align 8, !dbg !7590
  br label %for.cond32, !dbg !7591, !llvm.loop !7592

for.end56:                                        ; preds = %for.cond32
  br label %sw.epilog387, !dbg !7594

if.end57:                                         ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !7595
  br label %for.cond58, !dbg !7597

for.cond58:                                       ; preds = %for.inc80, %if.end57
  %69 = load i64, i64* %x, align 8, !dbg !7598
  %70 = load i64, i64* %number_pixels.addr, align 8, !dbg !7600
  %cmp59 = icmp slt i64 %69, %70, !dbg !7601
  br i1 %cmp59, label %for.body61, label %for.end82, !dbg !7602

for.body61:                                       ; preds = %for.cond58
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7603
  %red62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 2, !dbg !7603
  %72 = load i16, i16* %red62, align 2, !dbg !7603
  %73 = load i64, i64* %range, align 8, !dbg !7605
  %call63 = call i64 @ScaleQuantumToAny(i16 zeroext %72, i64 %73), !dbg !7606
  %conv64 = trunc i64 %call63 to i32, !dbg !7607
  store i32 %conv64, i32* %pixel, align 4, !dbg !7608
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7609
  %75 = load i32, i32* %pixel, align 4, !dbg !7610
  %conv65 = zext i32 %75 to i64, !dbg !7610
  %76 = load i8*, i8** %q.addr, align 8, !dbg !7611
  %call66 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %74, i64 %conv65, i8* %76), !dbg !7612
  store i8* %call66, i8** %q.addr, align 8, !dbg !7613
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7614
  %green67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 1, !dbg !7614
  %78 = load i16, i16* %green67, align 2, !dbg !7614
  %79 = load i64, i64* %range, align 8, !dbg !7615
  %call68 = call i64 @ScaleQuantumToAny(i16 zeroext %78, i64 %79), !dbg !7616
  %conv69 = trunc i64 %call68 to i32, !dbg !7617
  store i32 %conv69, i32* %pixel, align 4, !dbg !7618
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7619
  %81 = load i32, i32* %pixel, align 4, !dbg !7620
  %conv70 = zext i32 %81 to i64, !dbg !7620
  %82 = load i8*, i8** %q.addr, align 8, !dbg !7621
  %call71 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %80, i64 %conv70, i8* %82), !dbg !7622
  store i8* %call71, i8** %q.addr, align 8, !dbg !7623
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7624
  %blue72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !7624
  %84 = load i16, i16* %blue72, align 2, !dbg !7624
  %85 = load i64, i64* %range, align 8, !dbg !7625
  %call73 = call i64 @ScaleQuantumToAny(i16 zeroext %84, i64 %85), !dbg !7626
  %conv74 = trunc i64 %call73 to i32, !dbg !7627
  store i32 %conv74, i32* %pixel, align 4, !dbg !7628
  %86 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7629
  %87 = load i32, i32* %pixel, align 4, !dbg !7630
  %conv75 = zext i32 %87 to i64, !dbg !7630
  %88 = load i8*, i8** %q.addr, align 8, !dbg !7631
  %call76 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %86, i64 %conv75, i8* %88), !dbg !7632
  store i8* %call76, i8** %q.addr, align 8, !dbg !7633
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7634
  %incdec.ptr77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !7634
  store %struct._PixelPacket* %incdec.ptr77, %struct._PixelPacket** %p.addr, align 8, !dbg !7634
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7635
  %pad78 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !7636
  %91 = load i64, i64* %pad78, align 8, !dbg !7636
  %92 = load i8*, i8** %q.addr, align 8, !dbg !7637
  %add.ptr79 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !7637
  store i8* %add.ptr79, i8** %q.addr, align 8, !dbg !7637
  br label %for.inc80, !dbg !7638

for.inc80:                                        ; preds = %for.body61
  %93 = load i64, i64* %x, align 8, !dbg !7639
  %inc81 = add nsw i64 %93, 1, !dbg !7639
  store i64 %inc81, i64* %x, align 8, !dbg !7639
  br label %for.cond58, !dbg !7640, !llvm.loop !7641

for.end82:                                        ; preds = %for.cond58
  br label %sw.epilog387, !dbg !7643

sw.bb83:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel84, metadata !7644, metadata !DIExpression()), !dbg !7646
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7647
  %depth85 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %94, i32 0, i32 0, !dbg !7648
  %95 = load i64, i64* %depth85, align 8, !dbg !7648
  %call86 = call i64 @GetQuantumRange(i64 %95), !dbg !7649
  store i64 %call86, i64* %range, align 8, !dbg !7650
  %96 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7651
  %pack87 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %96, i32 0, i32 8, !dbg !7653
  %97 = load i32, i32* %pack87, align 4, !dbg !7653
  %cmp88 = icmp eq i32 %97, 0, !dbg !7654
  br i1 %cmp88, label %if.then90, label %if.end174, !dbg !7655

if.then90:                                        ; preds = %sw.bb83
  store i64 0, i64* %x, align 8, !dbg !7656
  br label %for.cond91, !dbg !7659

for.cond91:                                       ; preds = %for.inc134, %if.then90
  %98 = load i64, i64* %x, align 8, !dbg !7660
  %99 = load i64, i64* %number_pixels.addr, align 8, !dbg !7662
  %mul = mul i64 3, %99, !dbg !7663
  %sub = sub i64 %mul, 1, !dbg !7664
  %cmp92 = icmp slt i64 %98, %sub, !dbg !7665
  br i1 %cmp92, label %for.body94, label %for.end136, !dbg !7666

for.body94:                                       ; preds = %for.cond91
  %100 = load i64, i64* %x, align 8, !dbg !7667
  %rem = srem i64 %100, 3, !dbg !7669
  switch i64 %rem, label %sw.default [
    i64 0, label %sw.bb95
    i64 1, label %sw.bb99
    i64 2, label %sw.bb103
  ], !dbg !7670

sw.default:                                       ; preds = %for.body94
  br label %sw.bb95, !dbg !7671

sw.bb95:                                          ; preds = %for.body94, %sw.default
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7672
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 2, !dbg !7672
  %102 = load i16, i16* %red96, align 2, !dbg !7672
  %103 = load i64, i64* %range, align 8, !dbg !7675
  %call97 = call i64 @ScaleQuantumToAny(i16 zeroext %102, i64 %103), !dbg !7676
  %conv98 = trunc i64 %call97 to i32, !dbg !7677
  store i32 %conv98, i32* %pixel84, align 4, !dbg !7678
  br label %sw.epilog, !dbg !7679

sw.bb99:                                          ; preds = %for.body94
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7680
  %green100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 1, !dbg !7680
  %105 = load i16, i16* %green100, align 2, !dbg !7680
  %106 = load i64, i64* %range, align 8, !dbg !7682
  %call101 = call i64 @ScaleQuantumToAny(i16 zeroext %105, i64 %106), !dbg !7683
  %conv102 = trunc i64 %call101 to i32, !dbg !7684
  store i32 %conv102, i32* %pixel84, align 4, !dbg !7685
  br label %sw.epilog, !dbg !7686

sw.bb103:                                         ; preds = %for.body94
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7687
  %blue104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 0, !dbg !7687
  %108 = load i16, i16* %blue104, align 2, !dbg !7687
  %109 = load i64, i64* %range, align 8, !dbg !7689
  %call105 = call i64 @ScaleQuantumToAny(i16 zeroext %108, i64 %109), !dbg !7690
  %conv106 = trunc i64 %call105 to i32, !dbg !7691
  store i32 %conv106, i32* %pixel84, align 4, !dbg !7692
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7693
  %incdec.ptr107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 1, !dbg !7693
  store %struct._PixelPacket* %incdec.ptr107, %struct._PixelPacket** %p.addr, align 8, !dbg !7693
  br label %sw.epilog, !dbg !7694

sw.epilog:                                        ; preds = %sw.bb103, %sw.bb99, %sw.bb95
  %111 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7695
  %endian108 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %111, i32 0, i32 13, !dbg !7696
  %112 = load i32, i32* %endian108, align 8, !dbg !7696
  %113 = load i32, i32* %pixel84, align 4, !dbg !7697
  %shl109 = shl i32 %113, 4, !dbg !7698
  %conv110 = trunc i32 %shl109 to i16, !dbg !7699
  %114 = load i8*, i8** %q.addr, align 8, !dbg !7700
  %call111 = call i8* @PopShortPixel(i32 %112, i16 zeroext %conv110, i8* %114), !dbg !7701
  store i8* %call111, i8** %q.addr, align 8, !dbg !7702
  %115 = load i64, i64* %x, align 8, !dbg !7703
  %add = add nsw i64 %115, 1, !dbg !7704
  %rem112 = srem i64 %add, 3, !dbg !7705
  switch i64 %rem112, label %sw.default113 [
    i64 0, label %sw.bb114
    i64 1, label %sw.bb118
    i64 2, label %sw.bb122
  ], !dbg !7706

sw.default113:                                    ; preds = %sw.epilog
  br label %sw.bb114, !dbg !7707

sw.bb114:                                         ; preds = %sw.epilog, %sw.default113
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7708
  %red115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 2, !dbg !7708
  %117 = load i16, i16* %red115, align 2, !dbg !7708
  %118 = load i64, i64* %range, align 8, !dbg !7711
  %call116 = call i64 @ScaleQuantumToAny(i16 zeroext %117, i64 %118), !dbg !7712
  %conv117 = trunc i64 %call116 to i32, !dbg !7713
  store i32 %conv117, i32* %pixel84, align 4, !dbg !7714
  br label %sw.epilog127, !dbg !7715

sw.bb118:                                         ; preds = %sw.epilog
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7716
  %green119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 1, !dbg !7716
  %120 = load i16, i16* %green119, align 2, !dbg !7716
  %121 = load i64, i64* %range, align 8, !dbg !7718
  %call120 = call i64 @ScaleQuantumToAny(i16 zeroext %120, i64 %121), !dbg !7719
  %conv121 = trunc i64 %call120 to i32, !dbg !7720
  store i32 %conv121, i32* %pixel84, align 4, !dbg !7721
  br label %sw.epilog127, !dbg !7722

sw.bb122:                                         ; preds = %sw.epilog
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7723
  %blue123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 0, !dbg !7723
  %123 = load i16, i16* %blue123, align 2, !dbg !7723
  %124 = load i64, i64* %range, align 8, !dbg !7725
  %call124 = call i64 @ScaleQuantumToAny(i16 zeroext %123, i64 %124), !dbg !7726
  %conv125 = trunc i64 %call124 to i32, !dbg !7727
  store i32 %conv125, i32* %pixel84, align 4, !dbg !7728
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7729
  %incdec.ptr126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !7729
  store %struct._PixelPacket* %incdec.ptr126, %struct._PixelPacket** %p.addr, align 8, !dbg !7729
  br label %sw.epilog127, !dbg !7730

sw.epilog127:                                     ; preds = %sw.bb122, %sw.bb118, %sw.bb114
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7731
  %endian128 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %126, i32 0, i32 13, !dbg !7732
  %127 = load i32, i32* %endian128, align 8, !dbg !7732
  %128 = load i32, i32* %pixel84, align 4, !dbg !7733
  %shl129 = shl i32 %128, 4, !dbg !7734
  %conv130 = trunc i32 %shl129 to i16, !dbg !7735
  %129 = load i8*, i8** %q.addr, align 8, !dbg !7736
  %call131 = call i8* @PopShortPixel(i32 %127, i16 zeroext %conv130, i8* %129), !dbg !7737
  store i8* %call131, i8** %q.addr, align 8, !dbg !7738
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7739
  %pad132 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %130, i32 0, i32 6, !dbg !7740
  %131 = load i64, i64* %pad132, align 8, !dbg !7740
  %132 = load i8*, i8** %q.addr, align 8, !dbg !7741
  %add.ptr133 = getelementptr inbounds i8, i8* %132, i64 %131, !dbg !7741
  store i8* %add.ptr133, i8** %q.addr, align 8, !dbg !7741
  br label %for.inc134, !dbg !7742

for.inc134:                                       ; preds = %sw.epilog127
  %133 = load i64, i64* %x, align 8, !dbg !7743
  %add135 = add nsw i64 %133, 2, !dbg !7743
  store i64 %add135, i64* %x, align 8, !dbg !7743
  br label %for.cond91, !dbg !7744, !llvm.loop !7745

for.end136:                                       ; preds = %for.cond91
  store i64 0, i64* %bit, align 8, !dbg !7747
  br label %for.cond137, !dbg !7749

for.cond137:                                      ; preds = %for.inc166, %for.end136
  %134 = load i64, i64* %bit, align 8, !dbg !7750
  %135 = load i64, i64* %number_pixels.addr, align 8, !dbg !7752
  %mul138 = mul i64 3, %135, !dbg !7753
  %rem139 = urem i64 %mul138, 2, !dbg !7754
  %cmp140 = icmp slt i64 %134, %rem139, !dbg !7755
  br i1 %cmp140, label %for.body142, label %for.end168, !dbg !7756

for.body142:                                      ; preds = %for.cond137
  %136 = load i64, i64* %x, align 8, !dbg !7757
  %137 = load i64, i64* %bit, align 8, !dbg !7759
  %add143 = add nsw i64 %136, %137, !dbg !7760
  %rem144 = srem i64 %add143, 3, !dbg !7761
  switch i64 %rem144, label %sw.default145 [
    i64 0, label %sw.bb146
    i64 1, label %sw.bb150
    i64 2, label %sw.bb154
  ], !dbg !7762

sw.default145:                                    ; preds = %for.body142
  br label %sw.bb146, !dbg !7763

sw.bb146:                                         ; preds = %for.body142, %sw.default145
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7764
  %red147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 2, !dbg !7764
  %139 = load i16, i16* %red147, align 2, !dbg !7764
  %140 = load i64, i64* %range, align 8, !dbg !7767
  %call148 = call i64 @ScaleQuantumToAny(i16 zeroext %139, i64 %140), !dbg !7768
  %conv149 = trunc i64 %call148 to i32, !dbg !7769
  store i32 %conv149, i32* %pixel84, align 4, !dbg !7770
  br label %sw.epilog159, !dbg !7771

sw.bb150:                                         ; preds = %for.body142
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7772
  %green151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 1, !dbg !7772
  %142 = load i16, i16* %green151, align 2, !dbg !7772
  %143 = load i64, i64* %range, align 8, !dbg !7774
  %call152 = call i64 @ScaleQuantumToAny(i16 zeroext %142, i64 %143), !dbg !7775
  %conv153 = trunc i64 %call152 to i32, !dbg !7776
  store i32 %conv153, i32* %pixel84, align 4, !dbg !7777
  br label %sw.epilog159, !dbg !7778

sw.bb154:                                         ; preds = %for.body142
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7779
  %blue155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 0, !dbg !7779
  %145 = load i16, i16* %blue155, align 2, !dbg !7779
  %146 = load i64, i64* %range, align 8, !dbg !7781
  %call156 = call i64 @ScaleQuantumToAny(i16 zeroext %145, i64 %146), !dbg !7782
  %conv157 = trunc i64 %call156 to i32, !dbg !7783
  store i32 %conv157, i32* %pixel84, align 4, !dbg !7784
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7785
  %incdec.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i32 1, !dbg !7785
  store %struct._PixelPacket* %incdec.ptr158, %struct._PixelPacket** %p.addr, align 8, !dbg !7785
  br label %sw.epilog159, !dbg !7786

sw.epilog159:                                     ; preds = %sw.bb154, %sw.bb150, %sw.bb146
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7787
  %endian160 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 13, !dbg !7788
  %149 = load i32, i32* %endian160, align 8, !dbg !7788
  %150 = load i32, i32* %pixel84, align 4, !dbg !7789
  %shl161 = shl i32 %150, 4, !dbg !7790
  %conv162 = trunc i32 %shl161 to i16, !dbg !7791
  %151 = load i8*, i8** %q.addr, align 8, !dbg !7792
  %call163 = call i8* @PopShortPixel(i32 %149, i16 zeroext %conv162, i8* %151), !dbg !7793
  store i8* %call163, i8** %q.addr, align 8, !dbg !7794
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7795
  %pad164 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 6, !dbg !7796
  %153 = load i64, i64* %pad164, align 8, !dbg !7796
  %154 = load i8*, i8** %q.addr, align 8, !dbg !7797
  %add.ptr165 = getelementptr inbounds i8, i8* %154, i64 %153, !dbg !7797
  store i8* %add.ptr165, i8** %q.addr, align 8, !dbg !7797
  br label %for.inc166, !dbg !7798

for.inc166:                                       ; preds = %sw.epilog159
  %155 = load i64, i64* %bit, align 8, !dbg !7799
  %inc167 = add nsw i64 %155, 1, !dbg !7799
  store i64 %inc167, i64* %bit, align 8, !dbg !7799
  br label %for.cond137, !dbg !7800, !llvm.loop !7801

for.end168:                                       ; preds = %for.cond137
  %156 = load i64, i64* %bit, align 8, !dbg !7803
  %cmp169 = icmp ne i64 %156, 0, !dbg !7805
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !7806

if.then171:                                       ; preds = %for.end168
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7807
  %incdec.ptr172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %157, i32 1, !dbg !7807
  store %struct._PixelPacket* %incdec.ptr172, %struct._PixelPacket** %p.addr, align 8, !dbg !7807
  br label %if.end173, !dbg !7808

if.end173:                                        ; preds = %if.then171, %for.end168
  br label %sw.epilog387, !dbg !7809

if.end174:                                        ; preds = %sw.bb83
  %158 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7810
  %quantum175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %158, i32 0, i32 1, !dbg !7812
  %159 = load i64, i64* %quantum175, align 8, !dbg !7812
  %cmp176 = icmp eq i64 %159, 32, !dbg !7813
  br i1 %cmp176, label %if.then178, label %if.end204, !dbg !7814

if.then178:                                       ; preds = %if.end174
  store i64 0, i64* %x, align 8, !dbg !7815
  br label %for.cond179, !dbg !7818

for.cond179:                                      ; preds = %for.inc201, %if.then178
  %160 = load i64, i64* %x, align 8, !dbg !7819
  %161 = load i64, i64* %number_pixels.addr, align 8, !dbg !7821
  %cmp180 = icmp slt i64 %160, %161, !dbg !7822
  br i1 %cmp180, label %for.body182, label %for.end203, !dbg !7823

for.body182:                                      ; preds = %for.cond179
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7824
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !7824
  %163 = load i16, i16* %red183, align 2, !dbg !7824
  %164 = load i64, i64* %range, align 8, !dbg !7826
  %call184 = call i64 @ScaleQuantumToAny(i16 zeroext %163, i64 %164), !dbg !7827
  %conv185 = trunc i64 %call184 to i32, !dbg !7828
  store i32 %conv185, i32* %pixel84, align 4, !dbg !7829
  %165 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7830
  %166 = load i32, i32* %pixel84, align 4, !dbg !7831
  %conv186 = zext i32 %166 to i64, !dbg !7831
  %167 = load i8*, i8** %q.addr, align 8, !dbg !7832
  %call187 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %165, i64 %conv186, i8* %167), !dbg !7833
  store i8* %call187, i8** %q.addr, align 8, !dbg !7834
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7835
  %green188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 1, !dbg !7835
  %169 = load i16, i16* %green188, align 2, !dbg !7835
  %170 = load i64, i64* %range, align 8, !dbg !7836
  %call189 = call i64 @ScaleQuantumToAny(i16 zeroext %169, i64 %170), !dbg !7837
  %conv190 = trunc i64 %call189 to i32, !dbg !7838
  store i32 %conv190, i32* %pixel84, align 4, !dbg !7839
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7840
  %172 = load i32, i32* %pixel84, align 4, !dbg !7841
  %conv191 = zext i32 %172 to i64, !dbg !7841
  %173 = load i8*, i8** %q.addr, align 8, !dbg !7842
  %call192 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %171, i64 %conv191, i8* %173), !dbg !7843
  store i8* %call192, i8** %q.addr, align 8, !dbg !7844
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7845
  %blue193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 0, i32 0, !dbg !7845
  %175 = load i16, i16* %blue193, align 2, !dbg !7845
  %176 = load i64, i64* %range, align 8, !dbg !7846
  %call194 = call i64 @ScaleQuantumToAny(i16 zeroext %175, i64 %176), !dbg !7847
  %conv195 = trunc i64 %call194 to i32, !dbg !7848
  store i32 %conv195, i32* %pixel84, align 4, !dbg !7849
  %177 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7850
  %178 = load i32, i32* %pixel84, align 4, !dbg !7851
  %conv196 = zext i32 %178 to i64, !dbg !7851
  %179 = load i8*, i8** %q.addr, align 8, !dbg !7852
  %call197 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %177, i64 %conv196, i8* %179), !dbg !7853
  store i8* %call197, i8** %q.addr, align 8, !dbg !7854
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7855
  %incdec.ptr198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 1, !dbg !7855
  store %struct._PixelPacket* %incdec.ptr198, %struct._PixelPacket** %p.addr, align 8, !dbg !7855
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7856
  %pad199 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %181, i32 0, i32 6, !dbg !7857
  %182 = load i64, i64* %pad199, align 8, !dbg !7857
  %183 = load i8*, i8** %q.addr, align 8, !dbg !7858
  %add.ptr200 = getelementptr inbounds i8, i8* %183, i64 %182, !dbg !7858
  store i8* %add.ptr200, i8** %q.addr, align 8, !dbg !7858
  br label %for.inc201, !dbg !7859

for.inc201:                                       ; preds = %for.body182
  %184 = load i64, i64* %x, align 8, !dbg !7860
  %inc202 = add nsw i64 %184, 1, !dbg !7860
  store i64 %inc202, i64* %x, align 8, !dbg !7860
  br label %for.cond179, !dbg !7861, !llvm.loop !7862

for.end203:                                       ; preds = %for.cond179
  br label %sw.epilog387, !dbg !7864

if.end204:                                        ; preds = %if.end174
  store i64 0, i64* %x, align 8, !dbg !7865
  br label %for.cond205, !dbg !7867

for.cond205:                                      ; preds = %for.inc227, %if.end204
  %185 = load i64, i64* %x, align 8, !dbg !7868
  %186 = load i64, i64* %number_pixels.addr, align 8, !dbg !7870
  %cmp206 = icmp slt i64 %185, %186, !dbg !7871
  br i1 %cmp206, label %for.body208, label %for.end229, !dbg !7872

for.body208:                                      ; preds = %for.cond205
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7873
  %red209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 0, i32 2, !dbg !7873
  %188 = load i16, i16* %red209, align 2, !dbg !7873
  %189 = load i64, i64* %range, align 8, !dbg !7875
  %call210 = call i64 @ScaleQuantumToAny(i16 zeroext %188, i64 %189), !dbg !7876
  %conv211 = trunc i64 %call210 to i32, !dbg !7877
  store i32 %conv211, i32* %pixel84, align 4, !dbg !7878
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7879
  %191 = load i32, i32* %pixel84, align 4, !dbg !7880
  %conv212 = zext i32 %191 to i64, !dbg !7880
  %192 = load i8*, i8** %q.addr, align 8, !dbg !7881
  %call213 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %190, i64 %conv212, i8* %192), !dbg !7882
  store i8* %call213, i8** %q.addr, align 8, !dbg !7883
  %193 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7884
  %green214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %193, i32 0, i32 1, !dbg !7884
  %194 = load i16, i16* %green214, align 2, !dbg !7884
  %195 = load i64, i64* %range, align 8, !dbg !7885
  %call215 = call i64 @ScaleQuantumToAny(i16 zeroext %194, i64 %195), !dbg !7886
  %conv216 = trunc i64 %call215 to i32, !dbg !7887
  store i32 %conv216, i32* %pixel84, align 4, !dbg !7888
  %196 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7889
  %197 = load i32, i32* %pixel84, align 4, !dbg !7890
  %conv217 = zext i32 %197 to i64, !dbg !7890
  %198 = load i8*, i8** %q.addr, align 8, !dbg !7891
  %call218 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %196, i64 %conv217, i8* %198), !dbg !7892
  store i8* %call218, i8** %q.addr, align 8, !dbg !7893
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7894
  %blue219 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 0, !dbg !7894
  %200 = load i16, i16* %blue219, align 2, !dbg !7894
  %201 = load i64, i64* %range, align 8, !dbg !7895
  %call220 = call i64 @ScaleQuantumToAny(i16 zeroext %200, i64 %201), !dbg !7896
  %conv221 = trunc i64 %call220 to i32, !dbg !7897
  store i32 %conv221, i32* %pixel84, align 4, !dbg !7898
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7899
  %203 = load i32, i32* %pixel84, align 4, !dbg !7900
  %conv222 = zext i32 %203 to i64, !dbg !7900
  %204 = load i8*, i8** %q.addr, align 8, !dbg !7901
  %call223 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %202, i64 %conv222, i8* %204), !dbg !7902
  store i8* %call223, i8** %q.addr, align 8, !dbg !7903
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7904
  %incdec.ptr224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 1, !dbg !7904
  store %struct._PixelPacket* %incdec.ptr224, %struct._PixelPacket** %p.addr, align 8, !dbg !7904
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7905
  %pad225 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %206, i32 0, i32 6, !dbg !7906
  %207 = load i64, i64* %pad225, align 8, !dbg !7906
  %208 = load i8*, i8** %q.addr, align 8, !dbg !7907
  %add.ptr226 = getelementptr inbounds i8, i8* %208, i64 %207, !dbg !7907
  store i8* %add.ptr226, i8** %q.addr, align 8, !dbg !7907
  br label %for.inc227, !dbg !7908

for.inc227:                                       ; preds = %for.body208
  %209 = load i64, i64* %x, align 8, !dbg !7909
  %inc228 = add nsw i64 %209, 1, !dbg !7909
  store i64 %inc228, i64* %x, align 8, !dbg !7909
  br label %for.cond205, !dbg !7910, !llvm.loop !7911

for.end229:                                       ; preds = %for.cond205
  br label %sw.epilog387, !dbg !7913

sw.bb230:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel231, metadata !7914, metadata !DIExpression()), !dbg !7916
  %210 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7917
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %210, i32 0, i32 2, !dbg !7919
  %211 = load i32, i32* %format, align 8, !dbg !7919
  %cmp232 = icmp eq i32 %211, 1, !dbg !7920
  br i1 %cmp232, label %if.then234, label %if.end269, !dbg !7921

if.then234:                                       ; preds = %sw.bb230
  store i64 0, i64* %x, align 8, !dbg !7922
  br label %for.cond235, !dbg !7925

for.cond235:                                      ; preds = %for.inc266, %if.then234
  %212 = load i64, i64* %x, align 8, !dbg !7926
  %213 = load i64, i64* %number_pixels.addr, align 8, !dbg !7928
  %cmp236 = icmp slt i64 %212, %213, !dbg !7929
  br i1 %cmp236, label %for.body238, label %for.end268, !dbg !7930

for.body238:                                      ; preds = %for.cond235
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7931
  %red239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 2, !dbg !7931
  %215 = load i16, i16* %red239, align 2, !dbg !7931
  %conv240 = zext i16 %215 to i32, !dbg !7931
  %conv241 = sitofp i32 %conv240 to double, !dbg !7931
  %mul242 = fmul double 0x3EF0001000100010, %conv241, !dbg !7933
  %conv243 = fptrunc double %mul242 to float, !dbg !7934
  %call244 = call zeroext i16 @SinglePrecisionToHalf(float %conv243), !dbg !7935
  store i16 %call244, i16* %pixel231, align 2, !dbg !7936
  %216 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7937
  %endian245 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %216, i32 0, i32 13, !dbg !7938
  %217 = load i32, i32* %endian245, align 8, !dbg !7938
  %218 = load i16, i16* %pixel231, align 2, !dbg !7939
  %219 = load i8*, i8** %q.addr, align 8, !dbg !7940
  %call246 = call i8* @PopShortPixel(i32 %217, i16 zeroext %218, i8* %219), !dbg !7941
  store i8* %call246, i8** %q.addr, align 8, !dbg !7942
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7943
  %green247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 1, !dbg !7943
  %221 = load i16, i16* %green247, align 2, !dbg !7943
  %conv248 = zext i16 %221 to i32, !dbg !7943
  %conv249 = sitofp i32 %conv248 to double, !dbg !7943
  %mul250 = fmul double 0x3EF0001000100010, %conv249, !dbg !7944
  %conv251 = fptrunc double %mul250 to float, !dbg !7945
  %call252 = call zeroext i16 @SinglePrecisionToHalf(float %conv251), !dbg !7946
  store i16 %call252, i16* %pixel231, align 2, !dbg !7947
  %222 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7948
  %endian253 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %222, i32 0, i32 13, !dbg !7949
  %223 = load i32, i32* %endian253, align 8, !dbg !7949
  %224 = load i16, i16* %pixel231, align 2, !dbg !7950
  %225 = load i8*, i8** %q.addr, align 8, !dbg !7951
  %call254 = call i8* @PopShortPixel(i32 %223, i16 zeroext %224, i8* %225), !dbg !7952
  store i8* %call254, i8** %q.addr, align 8, !dbg !7953
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7954
  %blue255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 0, i32 0, !dbg !7954
  %227 = load i16, i16* %blue255, align 2, !dbg !7954
  %conv256 = zext i16 %227 to i32, !dbg !7954
  %conv257 = sitofp i32 %conv256 to double, !dbg !7954
  %mul258 = fmul double 0x3EF0001000100010, %conv257, !dbg !7955
  %conv259 = fptrunc double %mul258 to float, !dbg !7956
  %call260 = call zeroext i16 @SinglePrecisionToHalf(float %conv259), !dbg !7957
  store i16 %call260, i16* %pixel231, align 2, !dbg !7958
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7959
  %endian261 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %228, i32 0, i32 13, !dbg !7960
  %229 = load i32, i32* %endian261, align 8, !dbg !7960
  %230 = load i16, i16* %pixel231, align 2, !dbg !7961
  %231 = load i8*, i8** %q.addr, align 8, !dbg !7962
  %call262 = call i8* @PopShortPixel(i32 %229, i16 zeroext %230, i8* %231), !dbg !7963
  store i8* %call262, i8** %q.addr, align 8, !dbg !7964
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7965
  %incdec.ptr263 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 1, !dbg !7965
  store %struct._PixelPacket* %incdec.ptr263, %struct._PixelPacket** %p.addr, align 8, !dbg !7965
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7966
  %pad264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %233, i32 0, i32 6, !dbg !7967
  %234 = load i64, i64* %pad264, align 8, !dbg !7967
  %235 = load i8*, i8** %q.addr, align 8, !dbg !7968
  %add.ptr265 = getelementptr inbounds i8, i8* %235, i64 %234, !dbg !7968
  store i8* %add.ptr265, i8** %q.addr, align 8, !dbg !7968
  br label %for.inc266, !dbg !7969

for.inc266:                                       ; preds = %for.body238
  %236 = load i64, i64* %x, align 8, !dbg !7970
  %inc267 = add nsw i64 %236, 1, !dbg !7970
  store i64 %inc267, i64* %x, align 8, !dbg !7970
  br label %for.cond235, !dbg !7971, !llvm.loop !7972

for.end268:                                       ; preds = %for.cond235
  br label %sw.epilog387, !dbg !7974

if.end269:                                        ; preds = %sw.bb230
  store i64 0, i64* %x, align 8, !dbg !7975
  br label %for.cond270, !dbg !7977

for.cond270:                                      ; preds = %for.inc289, %if.end269
  %237 = load i64, i64* %x, align 8, !dbg !7978
  %238 = load i64, i64* %number_pixels.addr, align 8, !dbg !7980
  %cmp271 = icmp slt i64 %237, %238, !dbg !7981
  br i1 %cmp271, label %for.body273, label %for.end291, !dbg !7982

for.body273:                                      ; preds = %for.cond270
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7983
  %red274 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %239, i32 0, i32 2, !dbg !7983
  %240 = load i16, i16* %red274, align 2, !dbg !7983
  %call275 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %240), !dbg !7985
  store i16 %call275, i16* %pixel231, align 2, !dbg !7986
  %241 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7987
  %endian276 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %241, i32 0, i32 13, !dbg !7988
  %242 = load i32, i32* %endian276, align 8, !dbg !7988
  %243 = load i16, i16* %pixel231, align 2, !dbg !7989
  %244 = load i8*, i8** %q.addr, align 8, !dbg !7990
  %call277 = call i8* @PopShortPixel(i32 %242, i16 zeroext %243, i8* %244), !dbg !7991
  store i8* %call277, i8** %q.addr, align 8, !dbg !7992
  %245 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !7993
  %green278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %245, i32 0, i32 1, !dbg !7993
  %246 = load i16, i16* %green278, align 2, !dbg !7993
  %call279 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %246), !dbg !7994
  store i16 %call279, i16* %pixel231, align 2, !dbg !7995
  %247 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7996
  %endian280 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %247, i32 0, i32 13, !dbg !7997
  %248 = load i32, i32* %endian280, align 8, !dbg !7997
  %249 = load i16, i16* %pixel231, align 2, !dbg !7998
  %250 = load i8*, i8** %q.addr, align 8, !dbg !7999
  %call281 = call i8* @PopShortPixel(i32 %248, i16 zeroext %249, i8* %250), !dbg !8000
  store i8* %call281, i8** %q.addr, align 8, !dbg !8001
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8002
  %blue282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 0, !dbg !8002
  %252 = load i16, i16* %blue282, align 2, !dbg !8002
  %call283 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %252), !dbg !8003
  store i16 %call283, i16* %pixel231, align 2, !dbg !8004
  %253 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8005
  %endian284 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %253, i32 0, i32 13, !dbg !8006
  %254 = load i32, i32* %endian284, align 8, !dbg !8006
  %255 = load i16, i16* %pixel231, align 2, !dbg !8007
  %256 = load i8*, i8** %q.addr, align 8, !dbg !8008
  %call285 = call i8* @PopShortPixel(i32 %254, i16 zeroext %255, i8* %256), !dbg !8009
  store i8* %call285, i8** %q.addr, align 8, !dbg !8010
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8011
  %incdec.ptr286 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 1, !dbg !8011
  store %struct._PixelPacket* %incdec.ptr286, %struct._PixelPacket** %p.addr, align 8, !dbg !8011
  %258 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8012
  %pad287 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %258, i32 0, i32 6, !dbg !8013
  %259 = load i64, i64* %pad287, align 8, !dbg !8013
  %260 = load i8*, i8** %q.addr, align 8, !dbg !8014
  %add.ptr288 = getelementptr inbounds i8, i8* %260, i64 %259, !dbg !8014
  store i8* %add.ptr288, i8** %q.addr, align 8, !dbg !8014
  br label %for.inc289, !dbg !8015

for.inc289:                                       ; preds = %for.body273
  %261 = load i64, i64* %x, align 8, !dbg !8016
  %inc290 = add nsw i64 %261, 1, !dbg !8016
  store i64 %inc290, i64* %x, align 8, !dbg !8016
  br label %for.cond270, !dbg !8017, !llvm.loop !8018

for.end291:                                       ; preds = %for.cond270
  br label %sw.epilog387, !dbg !8020

sw.bb292:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel293, metadata !8021, metadata !DIExpression()), !dbg !8023
  %262 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8024
  %format294 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %262, i32 0, i32 2, !dbg !8026
  %263 = load i32, i32* %format294, align 8, !dbg !8026
  %cmp295 = icmp eq i32 %263, 1, !dbg !8027
  br i1 %cmp295, label %if.then297, label %if.end317, !dbg !8028

if.then297:                                       ; preds = %sw.bb292
  store i64 0, i64* %x, align 8, !dbg !8029
  br label %for.cond298, !dbg !8032

for.cond298:                                      ; preds = %for.inc314, %if.then297
  %264 = load i64, i64* %x, align 8, !dbg !8033
  %265 = load i64, i64* %number_pixels.addr, align 8, !dbg !8035
  %cmp299 = icmp slt i64 %264, %265, !dbg !8036
  br i1 %cmp299, label %for.body301, label %for.end316, !dbg !8037

for.body301:                                      ; preds = %for.cond298
  %266 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8038
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8040
  %red302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %267, i32 0, i32 2, !dbg !8040
  %268 = load i16, i16* %red302, align 2, !dbg !8040
  %conv303 = uitofp i16 %268 to float, !dbg !8041
  %269 = load i8*, i8** %q.addr, align 8, !dbg !8042
  %call304 = call i8* @PopFloatPixel(%struct._QuantumInfo* %266, float %conv303, i8* %269), !dbg !8043
  store i8* %call304, i8** %q.addr, align 8, !dbg !8044
  %270 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8045
  %271 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8046
  %green305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %271, i32 0, i32 1, !dbg !8046
  %272 = load i16, i16* %green305, align 2, !dbg !8046
  %conv306 = uitofp i16 %272 to float, !dbg !8047
  %273 = load i8*, i8** %q.addr, align 8, !dbg !8048
  %call307 = call i8* @PopFloatPixel(%struct._QuantumInfo* %270, float %conv306, i8* %273), !dbg !8049
  store i8* %call307, i8** %q.addr, align 8, !dbg !8050
  %274 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8051
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8052
  %blue308 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 0, !dbg !8052
  %276 = load i16, i16* %blue308, align 2, !dbg !8052
  %conv309 = uitofp i16 %276 to float, !dbg !8053
  %277 = load i8*, i8** %q.addr, align 8, !dbg !8054
  %call310 = call i8* @PopFloatPixel(%struct._QuantumInfo* %274, float %conv309, i8* %277), !dbg !8055
  store i8* %call310, i8** %q.addr, align 8, !dbg !8056
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8057
  %incdec.ptr311 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 1, !dbg !8057
  store %struct._PixelPacket* %incdec.ptr311, %struct._PixelPacket** %p.addr, align 8, !dbg !8057
  %279 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8058
  %pad312 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %279, i32 0, i32 6, !dbg !8059
  %280 = load i64, i64* %pad312, align 8, !dbg !8059
  %281 = load i8*, i8** %q.addr, align 8, !dbg !8060
  %add.ptr313 = getelementptr inbounds i8, i8* %281, i64 %280, !dbg !8060
  store i8* %add.ptr313, i8** %q.addr, align 8, !dbg !8060
  br label %for.inc314, !dbg !8061

for.inc314:                                       ; preds = %for.body301
  %282 = load i64, i64* %x, align 8, !dbg !8062
  %inc315 = add nsw i64 %282, 1, !dbg !8062
  store i64 %inc315, i64* %x, align 8, !dbg !8062
  br label %for.cond298, !dbg !8063, !llvm.loop !8064

for.end316:                                       ; preds = %for.cond298
  br label %sw.epilog387, !dbg !8066

if.end317:                                        ; preds = %sw.bb292
  store i64 0, i64* %x, align 8, !dbg !8067
  br label %for.cond318, !dbg !8069

for.cond318:                                      ; preds = %for.inc337, %if.end317
  %283 = load i64, i64* %x, align 8, !dbg !8070
  %284 = load i64, i64* %number_pixels.addr, align 8, !dbg !8072
  %cmp319 = icmp slt i64 %283, %284, !dbg !8073
  br i1 %cmp319, label %for.body321, label %for.end339, !dbg !8074

for.body321:                                      ; preds = %for.cond318
  %285 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8075
  %red322 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %285, i32 0, i32 2, !dbg !8075
  %286 = load i16, i16* %red322, align 2, !dbg !8075
  %call323 = call i32 @ScaleQuantumToLong(i16 zeroext %286), !dbg !8077
  store i32 %call323, i32* %pixel293, align 4, !dbg !8078
  %287 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8079
  %endian324 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %287, i32 0, i32 13, !dbg !8080
  %288 = load i32, i32* %endian324, align 8, !dbg !8080
  %289 = load i32, i32* %pixel293, align 4, !dbg !8081
  %290 = load i8*, i8** %q.addr, align 8, !dbg !8082
  %call325 = call i8* @PopLongPixel(i32 %288, i32 %289, i8* %290), !dbg !8083
  store i8* %call325, i8** %q.addr, align 8, !dbg !8084
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8085
  %green326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 0, i32 1, !dbg !8085
  %292 = load i16, i16* %green326, align 2, !dbg !8085
  %call327 = call i32 @ScaleQuantumToLong(i16 zeroext %292), !dbg !8086
  store i32 %call327, i32* %pixel293, align 4, !dbg !8087
  %293 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8088
  %endian328 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %293, i32 0, i32 13, !dbg !8089
  %294 = load i32, i32* %endian328, align 8, !dbg !8089
  %295 = load i32, i32* %pixel293, align 4, !dbg !8090
  %296 = load i8*, i8** %q.addr, align 8, !dbg !8091
  %call329 = call i8* @PopLongPixel(i32 %294, i32 %295, i8* %296), !dbg !8092
  store i8* %call329, i8** %q.addr, align 8, !dbg !8093
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8094
  %blue330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 0, i32 0, !dbg !8094
  %298 = load i16, i16* %blue330, align 2, !dbg !8094
  %call331 = call i32 @ScaleQuantumToLong(i16 zeroext %298), !dbg !8095
  store i32 %call331, i32* %pixel293, align 4, !dbg !8096
  %299 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8097
  %endian332 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %299, i32 0, i32 13, !dbg !8098
  %300 = load i32, i32* %endian332, align 8, !dbg !8098
  %301 = load i32, i32* %pixel293, align 4, !dbg !8099
  %302 = load i8*, i8** %q.addr, align 8, !dbg !8100
  %call333 = call i8* @PopLongPixel(i32 %300, i32 %301, i8* %302), !dbg !8101
  store i8* %call333, i8** %q.addr, align 8, !dbg !8102
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8103
  %incdec.ptr334 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %303, i32 1, !dbg !8103
  store %struct._PixelPacket* %incdec.ptr334, %struct._PixelPacket** %p.addr, align 8, !dbg !8103
  %304 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8104
  %pad335 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %304, i32 0, i32 6, !dbg !8105
  %305 = load i64, i64* %pad335, align 8, !dbg !8105
  %306 = load i8*, i8** %q.addr, align 8, !dbg !8106
  %add.ptr336 = getelementptr inbounds i8, i8* %306, i64 %305, !dbg !8106
  store i8* %add.ptr336, i8** %q.addr, align 8, !dbg !8106
  br label %for.inc337, !dbg !8107

for.inc337:                                       ; preds = %for.body321
  %307 = load i64, i64* %x, align 8, !dbg !8108
  %inc338 = add nsw i64 %307, 1, !dbg !8108
  store i64 %inc338, i64* %x, align 8, !dbg !8108
  br label %for.cond318, !dbg !8109, !llvm.loop !8110

for.end339:                                       ; preds = %for.cond318
  br label %sw.epilog387, !dbg !8112

sw.bb340:                                         ; preds = %entry
  %308 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8113
  %format341 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %308, i32 0, i32 2, !dbg !8116
  %309 = load i32, i32* %format341, align 8, !dbg !8116
  %cmp342 = icmp eq i32 %309, 1, !dbg !8117
  br i1 %cmp342, label %if.then344, label %if.end364, !dbg !8118

if.then344:                                       ; preds = %sw.bb340
  store i64 0, i64* %x, align 8, !dbg !8119
  br label %for.cond345, !dbg !8122

for.cond345:                                      ; preds = %for.inc361, %if.then344
  %310 = load i64, i64* %x, align 8, !dbg !8123
  %311 = load i64, i64* %number_pixels.addr, align 8, !dbg !8125
  %cmp346 = icmp slt i64 %310, %311, !dbg !8126
  br i1 %cmp346, label %for.body348, label %for.end363, !dbg !8127

for.body348:                                      ; preds = %for.cond345
  %312 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8128
  %313 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8130
  %red349 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %313, i32 0, i32 2, !dbg !8130
  %314 = load i16, i16* %red349, align 2, !dbg !8130
  %conv350 = uitofp i16 %314 to double, !dbg !8131
  %315 = load i8*, i8** %q.addr, align 8, !dbg !8132
  %call351 = call i8* @PopDoublePixel(%struct._QuantumInfo* %312, double %conv350, i8* %315), !dbg !8133
  store i8* %call351, i8** %q.addr, align 8, !dbg !8134
  %316 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8135
  %317 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8136
  %green352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %317, i32 0, i32 1, !dbg !8136
  %318 = load i16, i16* %green352, align 2, !dbg !8136
  %conv353 = uitofp i16 %318 to double, !dbg !8137
  %319 = load i8*, i8** %q.addr, align 8, !dbg !8138
  %call354 = call i8* @PopDoublePixel(%struct._QuantumInfo* %316, double %conv353, i8* %319), !dbg !8139
  store i8* %call354, i8** %q.addr, align 8, !dbg !8140
  %320 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8141
  %321 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8142
  %blue355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %321, i32 0, i32 0, !dbg !8142
  %322 = load i16, i16* %blue355, align 2, !dbg !8142
  %conv356 = uitofp i16 %322 to double, !dbg !8143
  %323 = load i8*, i8** %q.addr, align 8, !dbg !8144
  %call357 = call i8* @PopDoublePixel(%struct._QuantumInfo* %320, double %conv356, i8* %323), !dbg !8145
  store i8* %call357, i8** %q.addr, align 8, !dbg !8146
  %324 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8147
  %incdec.ptr358 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %324, i32 1, !dbg !8147
  store %struct._PixelPacket* %incdec.ptr358, %struct._PixelPacket** %p.addr, align 8, !dbg !8147
  %325 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8148
  %pad359 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %325, i32 0, i32 6, !dbg !8149
  %326 = load i64, i64* %pad359, align 8, !dbg !8149
  %327 = load i8*, i8** %q.addr, align 8, !dbg !8150
  %add.ptr360 = getelementptr inbounds i8, i8* %327, i64 %326, !dbg !8150
  store i8* %add.ptr360, i8** %q.addr, align 8, !dbg !8150
  br label %for.inc361, !dbg !8151

for.inc361:                                       ; preds = %for.body348
  %328 = load i64, i64* %x, align 8, !dbg !8152
  %inc362 = add nsw i64 %328, 1, !dbg !8152
  store i64 %inc362, i64* %x, align 8, !dbg !8152
  br label %for.cond345, !dbg !8153, !llvm.loop !8154

for.end363:                                       ; preds = %for.cond345
  br label %sw.epilog387, !dbg !8156

if.end364:                                        ; preds = %sw.bb340
  br label %sw.default365, !dbg !8157

sw.default365:                                    ; preds = %entry, %if.end364
  %329 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8158
  %depth366 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %329, i32 0, i32 0, !dbg !8160
  %330 = load i64, i64* %depth366, align 8, !dbg !8160
  %call367 = call i64 @GetQuantumRange(i64 %330), !dbg !8161
  store i64 %call367, i64* %range, align 8, !dbg !8162
  store i64 0, i64* %x, align 8, !dbg !8163
  br label %for.cond368, !dbg !8165

for.cond368:                                      ; preds = %for.inc384, %sw.default365
  %331 = load i64, i64* %x, align 8, !dbg !8166
  %332 = load i64, i64* %number_pixels.addr, align 8, !dbg !8168
  %cmp369 = icmp slt i64 %331, %332, !dbg !8169
  br i1 %cmp369, label %for.body371, label %for.end386, !dbg !8170

for.body371:                                      ; preds = %for.cond368
  %333 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8171
  %334 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8173
  %red372 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %334, i32 0, i32 2, !dbg !8173
  %335 = load i16, i16* %red372, align 2, !dbg !8173
  %336 = load i64, i64* %range, align 8, !dbg !8174
  %call373 = call i64 @ScaleQuantumToAny(i16 zeroext %335, i64 %336), !dbg !8175
  %337 = load i8*, i8** %q.addr, align 8, !dbg !8176
  %call374 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %333, i64 %call373, i8* %337), !dbg !8177
  store i8* %call374, i8** %q.addr, align 8, !dbg !8178
  %338 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8179
  %339 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8180
  %green375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %339, i32 0, i32 1, !dbg !8180
  %340 = load i16, i16* %green375, align 2, !dbg !8180
  %341 = load i64, i64* %range, align 8, !dbg !8181
  %call376 = call i64 @ScaleQuantumToAny(i16 zeroext %340, i64 %341), !dbg !8182
  %342 = load i8*, i8** %q.addr, align 8, !dbg !8183
  %call377 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %338, i64 %call376, i8* %342), !dbg !8184
  store i8* %call377, i8** %q.addr, align 8, !dbg !8185
  %343 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8186
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8187
  %blue378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %344, i32 0, i32 0, !dbg !8187
  %345 = load i16, i16* %blue378, align 2, !dbg !8187
  %346 = load i64, i64* %range, align 8, !dbg !8188
  %call379 = call i64 @ScaleQuantumToAny(i16 zeroext %345, i64 %346), !dbg !8189
  %347 = load i8*, i8** %q.addr, align 8, !dbg !8190
  %call380 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %343, i64 %call379, i8* %347), !dbg !8191
  store i8* %call380, i8** %q.addr, align 8, !dbg !8192
  %348 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8193
  %incdec.ptr381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %348, i32 1, !dbg !8193
  store %struct._PixelPacket* %incdec.ptr381, %struct._PixelPacket** %p.addr, align 8, !dbg !8193
  %349 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8194
  %pad382 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %349, i32 0, i32 6, !dbg !8195
  %350 = load i64, i64* %pad382, align 8, !dbg !8195
  %351 = load i8*, i8** %q.addr, align 8, !dbg !8196
  %add.ptr383 = getelementptr inbounds i8, i8* %351, i64 %350, !dbg !8196
  store i8* %add.ptr383, i8** %q.addr, align 8, !dbg !8196
  br label %for.inc384, !dbg !8197

for.inc384:                                       ; preds = %for.body371
  %352 = load i64, i64* %x, align 8, !dbg !8198
  %inc385 = add nsw i64 %352, 1, !dbg !8198
  store i64 %inc385, i64* %x, align 8, !dbg !8198
  br label %for.cond368, !dbg !8199, !llvm.loop !8200

for.end386:                                       ; preds = %for.cond368
  br label %sw.epilog387, !dbg !8202

sw.epilog387:                                     ; preds = %for.end386, %for.end363, %for.end339, %for.end316, %for.end291, %for.end268, %for.end229, %for.end203, %if.end173, %for.end82, %for.end56, %for.end28, %for.end
  ret void, !dbg !8203
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportRGBAQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, %struct._PixelPacket* noalias %p, i8* noalias %q) #0 !dbg !8204 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca i8*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i8, align 1
  %pixel10 = alloca i32, align 4
  %i = alloca i64, align 8
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  %pixel141 = alloca i16, align 2
  %pixel218 = alloca i32, align 4
  %pixel227 = alloca float, align 4
  %pixel283 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !8207, metadata !DIExpression()), !dbg !8208
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !8209, metadata !DIExpression()), !dbg !8210
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !8211, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.declare(metadata i64* %range, metadata !8213, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8215, metadata !DIExpression()), !dbg !8216
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8217
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !8218
  %1 = load i64, i64* %depth, align 8, !dbg !8218
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 10, label %sw.bb9
    i64 16, label %sw.bb140
    i64 32, label %sw.bb217
    i64 64, label %sw.bb278
  ], !dbg !8219

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel, metadata !8220, metadata !DIExpression()), !dbg !8223
  store i64 0, i64* %x, align 8, !dbg !8224
  br label %for.cond, !dbg !8226

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !8227
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !8229
  %cmp = icmp slt i64 %2, %3, !dbg !8230
  br i1 %cmp, label %for.body, label %for.end, !dbg !8231

for.body:                                         ; preds = %for.cond
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8232
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !8232
  %5 = load i16, i16* %red, align 2, !dbg !8232
  %call = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %5), !dbg !8234
  store i8 %call, i8* %pixel, align 1, !dbg !8235
  %6 = load i8, i8* %pixel, align 1, !dbg !8236
  %7 = load i8*, i8** %q.addr, align 8, !dbg !8237
  %call1 = call i8* @PopCharPixel(i8 zeroext %6, i8* %7), !dbg !8238
  store i8* %call1, i8** %q.addr, align 8, !dbg !8239
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8240
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 1, !dbg !8240
  %9 = load i16, i16* %green, align 2, !dbg !8240
  %call2 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %9), !dbg !8241
  store i8 %call2, i8* %pixel, align 1, !dbg !8242
  %10 = load i8, i8* %pixel, align 1, !dbg !8243
  %11 = load i8*, i8** %q.addr, align 8, !dbg !8244
  %call3 = call i8* @PopCharPixel(i8 zeroext %10, i8* %11), !dbg !8245
  store i8* %call3, i8** %q.addr, align 8, !dbg !8246
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8247
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 0, !dbg !8247
  %13 = load i16, i16* %blue, align 2, !dbg !8247
  %call4 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %13), !dbg !8248
  store i8 %call4, i8* %pixel, align 1, !dbg !8249
  %14 = load i8, i8* %pixel, align 1, !dbg !8250
  %15 = load i8*, i8** %q.addr, align 8, !dbg !8251
  %call5 = call i8* @PopCharPixel(i8 zeroext %14, i8* %15), !dbg !8252
  store i8* %call5, i8** %q.addr, align 8, !dbg !8253
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8254
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 3, !dbg !8254
  %17 = load i16, i16* %opacity, align 2, !dbg !8254
  %conv = zext i16 %17 to i32, !dbg !8254
  %sub = sub nsw i32 65535, %conv, !dbg !8254
  %conv6 = trunc i32 %sub to i16, !dbg !8255
  %call7 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv6), !dbg !8256
  store i8 %call7, i8* %pixel, align 1, !dbg !8257
  %18 = load i8, i8* %pixel, align 1, !dbg !8258
  %19 = load i8*, i8** %q.addr, align 8, !dbg !8259
  %call8 = call i8* @PopCharPixel(i8 zeroext %18, i8* %19), !dbg !8260
  store i8* %call8, i8** %q.addr, align 8, !dbg !8261
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8262
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 1, !dbg !8262
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p.addr, align 8, !dbg !8262
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8263
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !8264
  %22 = load i64, i64* %pad, align 8, !dbg !8264
  %23 = load i8*, i8** %q.addr, align 8, !dbg !8265
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !8265
  store i8* %add.ptr, i8** %q.addr, align 8, !dbg !8265
  br label %for.inc, !dbg !8266

for.inc:                                          ; preds = %for.body
  %24 = load i64, i64* %x, align 8, !dbg !8267
  %inc = add nsw i64 %24, 1, !dbg !8267
  store i64 %inc, i64* %x, align 8, !dbg !8267
  br label %for.cond, !dbg !8268, !llvm.loop !8269

for.end:                                          ; preds = %for.cond
  br label %sw.epilog336, !dbg !8271

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel10, metadata !8272, metadata !DIExpression()), !dbg !8274
  %25 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8275
  %depth11 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %25, i32 0, i32 0, !dbg !8276
  %26 = load i64, i64* %depth11, align 8, !dbg !8276
  %call12 = call i64 @GetQuantumRange(i64 %26), !dbg !8277
  store i64 %call12, i64* %range, align 8, !dbg !8278
  %27 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8279
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %27, i32 0, i32 8, !dbg !8281
  %28 = load i32, i32* %pack, align 4, !dbg !8281
  %cmp13 = icmp eq i32 %28, 0, !dbg !8282
  br i1 %cmp13, label %if.then, label %if.end, !dbg !8283

if.then:                                          ; preds = %sw.bb9
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8284, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8289, metadata !DIExpression()), !dbg !8290
  store i64 0, i64* %n, align 8, !dbg !8291
  store i64 0, i64* %quantum, align 8, !dbg !8292
  store i32 0, i32* %pixel10, align 4, !dbg !8293
  store i64 0, i64* %x, align 8, !dbg !8294
  br label %for.cond15, !dbg !8296

for.cond15:                                       ; preds = %for.inc66, %if.then
  %29 = load i64, i64* %x, align 8, !dbg !8297
  %30 = load i64, i64* %number_pixels.addr, align 8, !dbg !8299
  %cmp16 = icmp slt i64 %29, %30, !dbg !8300
  br i1 %cmp16, label %for.body18, label %for.end68, !dbg !8301

for.body18:                                       ; preds = %for.cond15
  store i64 0, i64* %i, align 8, !dbg !8302
  br label %for.cond19, !dbg !8305

for.cond19:                                       ; preds = %for.inc60, %for.body18
  %31 = load i64, i64* %i, align 8, !dbg !8306
  %cmp20 = icmp slt i64 %31, 4, !dbg !8308
  br i1 %cmp20, label %for.body22, label %for.end62, !dbg !8309

for.body22:                                       ; preds = %for.cond19
  %32 = load i64, i64* %i, align 8, !dbg !8310
  switch i64 %32, label %sw.epilog [
    i64 0, label %sw.bb23
    i64 1, label %sw.bb26
    i64 2, label %sw.bb29
    i64 3, label %sw.bb32
  ], !dbg !8312

sw.bb23:                                          ; preds = %for.body22
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8313
  %red24 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 2, !dbg !8313
  %34 = load i16, i16* %red24, align 2, !dbg !8313
  %conv25 = zext i16 %34 to i64, !dbg !8313
  store i64 %conv25, i64* %quantum, align 8, !dbg !8315
  br label %sw.epilog, !dbg !8316

sw.bb26:                                          ; preds = %for.body22
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8317
  %green27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 1, !dbg !8317
  %36 = load i16, i16* %green27, align 2, !dbg !8317
  %conv28 = zext i16 %36 to i64, !dbg !8317
  store i64 %conv28, i64* %quantum, align 8, !dbg !8318
  br label %sw.epilog, !dbg !8319

sw.bb29:                                          ; preds = %for.body22
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8320
  %blue30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 0, !dbg !8320
  %38 = load i16, i16* %blue30, align 2, !dbg !8320
  %conv31 = zext i16 %38 to i64, !dbg !8320
  store i64 %conv31, i64* %quantum, align 8, !dbg !8321
  br label %sw.epilog, !dbg !8322

sw.bb32:                                          ; preds = %for.body22
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8323
  %opacity33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 3, !dbg !8323
  %40 = load i16, i16* %opacity33, align 2, !dbg !8323
  %conv34 = zext i16 %40 to i32, !dbg !8323
  %sub35 = sub nsw i32 65535, %conv34, !dbg !8324
  %conv36 = trunc i32 %sub35 to i16, !dbg !8325
  %conv37 = zext i16 %conv36 to i64, !dbg !8325
  store i64 %conv37, i64* %quantum, align 8, !dbg !8326
  br label %sw.epilog, !dbg !8327

sw.epilog:                                        ; preds = %for.body22, %sw.bb32, %sw.bb29, %sw.bb26, %sw.bb23
  %41 = load i64, i64* %n, align 8, !dbg !8328
  %rem = srem i64 %41, 3, !dbg !8329
  switch i64 %rem, label %sw.epilog58 [
    i64 0, label %sw.bb38
    i64 1, label %sw.bb43
    i64 2, label %sw.bb50
  ], !dbg !8330

sw.bb38:                                          ; preds = %sw.epilog
  %42 = load i64, i64* %quantum, align 8, !dbg !8331
  %conv39 = trunc i64 %42 to i16, !dbg !8334
  %43 = load i64, i64* %range, align 8, !dbg !8335
  %call40 = call i64 @ScaleQuantumToAny(i16 zeroext %conv39, i64 %43), !dbg !8336
  %shl = shl i64 %call40, 22, !dbg !8337
  %44 = load i32, i32* %pixel10, align 4, !dbg !8338
  %conv41 = zext i32 %44 to i64, !dbg !8338
  %or = or i64 %conv41, %shl, !dbg !8338
  %conv42 = trunc i64 %or to i32, !dbg !8338
  store i32 %conv42, i32* %pixel10, align 4, !dbg !8338
  br label %sw.epilog58, !dbg !8339

sw.bb43:                                          ; preds = %sw.epilog
  %45 = load i64, i64* %quantum, align 8, !dbg !8340
  %conv44 = trunc i64 %45 to i16, !dbg !8342
  %46 = load i64, i64* %range, align 8, !dbg !8343
  %call45 = call i64 @ScaleQuantumToAny(i16 zeroext %conv44, i64 %46), !dbg !8344
  %shl46 = shl i64 %call45, 12, !dbg !8345
  %47 = load i32, i32* %pixel10, align 4, !dbg !8346
  %conv47 = zext i32 %47 to i64, !dbg !8346
  %or48 = or i64 %conv47, %shl46, !dbg !8346
  %conv49 = trunc i64 %or48 to i32, !dbg !8346
  store i32 %conv49, i32* %pixel10, align 4, !dbg !8346
  br label %sw.epilog58, !dbg !8347

sw.bb50:                                          ; preds = %sw.epilog
  %48 = load i64, i64* %quantum, align 8, !dbg !8348
  %conv51 = trunc i64 %48 to i16, !dbg !8350
  %49 = load i64, i64* %range, align 8, !dbg !8351
  %call52 = call i64 @ScaleQuantumToAny(i16 zeroext %conv51, i64 %49), !dbg !8352
  %shl53 = shl i64 %call52, 2, !dbg !8353
  %50 = load i32, i32* %pixel10, align 4, !dbg !8354
  %conv54 = zext i32 %50 to i64, !dbg !8354
  %or55 = or i64 %conv54, %shl53, !dbg !8354
  %conv56 = trunc i64 %or55 to i32, !dbg !8354
  store i32 %conv56, i32* %pixel10, align 4, !dbg !8354
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8355
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %51, i32 0, i32 13, !dbg !8356
  %52 = load i32, i32* %endian, align 8, !dbg !8356
  %53 = load i32, i32* %pixel10, align 4, !dbg !8357
  %54 = load i8*, i8** %q.addr, align 8, !dbg !8358
  %call57 = call i8* @PopLongPixel(i32 %52, i32 %53, i8* %54), !dbg !8359
  store i8* %call57, i8** %q.addr, align 8, !dbg !8360
  store i32 0, i32* %pixel10, align 4, !dbg !8361
  br label %sw.epilog58, !dbg !8362

sw.epilog58:                                      ; preds = %sw.epilog, %sw.bb50, %sw.bb43, %sw.bb38
  %55 = load i64, i64* %n, align 8, !dbg !8363
  %inc59 = add nsw i64 %55, 1, !dbg !8363
  store i64 %inc59, i64* %n, align 8, !dbg !8363
  br label %for.inc60, !dbg !8364

for.inc60:                                        ; preds = %sw.epilog58
  %56 = load i64, i64* %i, align 8, !dbg !8365
  %inc61 = add nsw i64 %56, 1, !dbg !8365
  store i64 %inc61, i64* %i, align 8, !dbg !8365
  br label %for.cond19, !dbg !8366, !llvm.loop !8367

for.end62:                                        ; preds = %for.cond19
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8369
  %incdec.ptr63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 1, !dbg !8369
  store %struct._PixelPacket* %incdec.ptr63, %struct._PixelPacket** %p.addr, align 8, !dbg !8369
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8370
  %pad64 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !8371
  %59 = load i64, i64* %pad64, align 8, !dbg !8371
  %60 = load i8*, i8** %q.addr, align 8, !dbg !8372
  %add.ptr65 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !8372
  store i8* %add.ptr65, i8** %q.addr, align 8, !dbg !8372
  br label %for.inc66, !dbg !8373

for.inc66:                                        ; preds = %for.end62
  %61 = load i64, i64* %x, align 8, !dbg !8374
  %inc67 = add nsw i64 %61, 1, !dbg !8374
  store i64 %inc67, i64* %x, align 8, !dbg !8374
  br label %for.cond15, !dbg !8375, !llvm.loop !8376

for.end68:                                        ; preds = %for.cond15
  br label %sw.epilog336, !dbg !8378

if.end:                                           ; preds = %sw.bb9
  %62 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8379
  %quantum69 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %62, i32 0, i32 1, !dbg !8381
  %63 = load i64, i64* %quantum69, align 8, !dbg !8381
  %cmp70 = icmp eq i64 %63, 32, !dbg !8382
  br i1 %cmp70, label %if.then72, label %if.end106, !dbg !8383

if.then72:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !8384
  br label %for.cond73, !dbg !8387

for.cond73:                                       ; preds = %for.inc103, %if.then72
  %64 = load i64, i64* %x, align 8, !dbg !8388
  %65 = load i64, i64* %number_pixels.addr, align 8, !dbg !8390
  %cmp74 = icmp slt i64 %64, %65, !dbg !8391
  br i1 %cmp74, label %for.body76, label %for.end105, !dbg !8392

for.body76:                                       ; preds = %for.cond73
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8393
  %red77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 2, !dbg !8393
  %67 = load i16, i16* %red77, align 2, !dbg !8393
  %68 = load i64, i64* %range, align 8, !dbg !8395
  %call78 = call i64 @ScaleQuantumToAny(i16 zeroext %67, i64 %68), !dbg !8396
  %conv79 = trunc i64 %call78 to i32, !dbg !8397
  store i32 %conv79, i32* %pixel10, align 4, !dbg !8398
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8399
  %70 = load i32, i32* %pixel10, align 4, !dbg !8400
  %conv80 = zext i32 %70 to i64, !dbg !8400
  %71 = load i8*, i8** %q.addr, align 8, !dbg !8401
  %call81 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %69, i64 %conv80, i8* %71), !dbg !8402
  store i8* %call81, i8** %q.addr, align 8, !dbg !8403
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8404
  %green82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 1, !dbg !8404
  %73 = load i16, i16* %green82, align 2, !dbg !8404
  %74 = load i64, i64* %range, align 8, !dbg !8405
  %call83 = call i64 @ScaleQuantumToAny(i16 zeroext %73, i64 %74), !dbg !8406
  %conv84 = trunc i64 %call83 to i32, !dbg !8407
  store i32 %conv84, i32* %pixel10, align 4, !dbg !8408
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8409
  %76 = load i32, i32* %pixel10, align 4, !dbg !8410
  %conv85 = zext i32 %76 to i64, !dbg !8410
  %77 = load i8*, i8** %q.addr, align 8, !dbg !8411
  %call86 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %75, i64 %conv85, i8* %77), !dbg !8412
  store i8* %call86, i8** %q.addr, align 8, !dbg !8413
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8414
  %blue87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 0, !dbg !8414
  %79 = load i16, i16* %blue87, align 2, !dbg !8414
  %80 = load i64, i64* %range, align 8, !dbg !8415
  %call88 = call i64 @ScaleQuantumToAny(i16 zeroext %79, i64 %80), !dbg !8416
  %conv89 = trunc i64 %call88 to i32, !dbg !8417
  store i32 %conv89, i32* %pixel10, align 4, !dbg !8418
  %81 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8419
  %82 = load i32, i32* %pixel10, align 4, !dbg !8420
  %conv90 = zext i32 %82 to i64, !dbg !8420
  %83 = load i8*, i8** %q.addr, align 8, !dbg !8421
  %call91 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %81, i64 %conv90, i8* %83), !dbg !8422
  store i8* %call91, i8** %q.addr, align 8, !dbg !8423
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8424
  %opacity92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 3, !dbg !8424
  %85 = load i16, i16* %opacity92, align 2, !dbg !8424
  %conv93 = zext i16 %85 to i32, !dbg !8424
  %sub94 = sub nsw i32 65535, %conv93, !dbg !8425
  %conv95 = trunc i32 %sub94 to i16, !dbg !8426
  %86 = load i64, i64* %range, align 8, !dbg !8427
  %call96 = call i64 @ScaleQuantumToAny(i16 zeroext %conv95, i64 %86), !dbg !8428
  %conv97 = trunc i64 %call96 to i32, !dbg !8429
  store i32 %conv97, i32* %pixel10, align 4, !dbg !8430
  %87 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8431
  %88 = load i32, i32* %pixel10, align 4, !dbg !8432
  %conv98 = zext i32 %88 to i64, !dbg !8432
  %89 = load i8*, i8** %q.addr, align 8, !dbg !8433
  %call99 = call i8* @PopQuantumLongPixel(%struct._QuantumInfo* %87, i64 %conv98, i8* %89), !dbg !8434
  store i8* %call99, i8** %q.addr, align 8, !dbg !8435
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8436
  %incdec.ptr100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !8436
  store %struct._PixelPacket* %incdec.ptr100, %struct._PixelPacket** %p.addr, align 8, !dbg !8436
  %91 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8437
  %pad101 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %91, i32 0, i32 6, !dbg !8438
  %92 = load i64, i64* %pad101, align 8, !dbg !8438
  %93 = load i8*, i8** %q.addr, align 8, !dbg !8439
  %add.ptr102 = getelementptr inbounds i8, i8* %93, i64 %92, !dbg !8439
  store i8* %add.ptr102, i8** %q.addr, align 8, !dbg !8439
  br label %for.inc103, !dbg !8440

for.inc103:                                       ; preds = %for.body76
  %94 = load i64, i64* %x, align 8, !dbg !8441
  %inc104 = add nsw i64 %94, 1, !dbg !8441
  store i64 %inc104, i64* %x, align 8, !dbg !8441
  br label %for.cond73, !dbg !8442, !llvm.loop !8443

for.end105:                                       ; preds = %for.cond73
  br label %sw.epilog336, !dbg !8445

if.end106:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !8446
  br label %for.cond107, !dbg !8448

for.cond107:                                      ; preds = %for.inc137, %if.end106
  %95 = load i64, i64* %x, align 8, !dbg !8449
  %96 = load i64, i64* %number_pixels.addr, align 8, !dbg !8451
  %cmp108 = icmp slt i64 %95, %96, !dbg !8452
  br i1 %cmp108, label %for.body110, label %for.end139, !dbg !8453

for.body110:                                      ; preds = %for.cond107
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8454
  %red111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !8454
  %98 = load i16, i16* %red111, align 2, !dbg !8454
  %99 = load i64, i64* %range, align 8, !dbg !8456
  %call112 = call i64 @ScaleQuantumToAny(i16 zeroext %98, i64 %99), !dbg !8457
  %conv113 = trunc i64 %call112 to i32, !dbg !8458
  store i32 %conv113, i32* %pixel10, align 4, !dbg !8459
  %100 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8460
  %101 = load i32, i32* %pixel10, align 4, !dbg !8461
  %conv114 = zext i32 %101 to i64, !dbg !8461
  %102 = load i8*, i8** %q.addr, align 8, !dbg !8462
  %call115 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %100, i64 %conv114, i8* %102), !dbg !8463
  store i8* %call115, i8** %q.addr, align 8, !dbg !8464
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8465
  %green116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 0, i32 1, !dbg !8465
  %104 = load i16, i16* %green116, align 2, !dbg !8465
  %105 = load i64, i64* %range, align 8, !dbg !8466
  %call117 = call i64 @ScaleQuantumToAny(i16 zeroext %104, i64 %105), !dbg !8467
  %conv118 = trunc i64 %call117 to i32, !dbg !8468
  store i32 %conv118, i32* %pixel10, align 4, !dbg !8469
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8470
  %107 = load i32, i32* %pixel10, align 4, !dbg !8471
  %conv119 = zext i32 %107 to i64, !dbg !8471
  %108 = load i8*, i8** %q.addr, align 8, !dbg !8472
  %call120 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %106, i64 %conv119, i8* %108), !dbg !8473
  store i8* %call120, i8** %q.addr, align 8, !dbg !8474
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8475
  %blue121 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 0, !dbg !8475
  %110 = load i16, i16* %blue121, align 2, !dbg !8475
  %111 = load i64, i64* %range, align 8, !dbg !8476
  %call122 = call i64 @ScaleQuantumToAny(i16 zeroext %110, i64 %111), !dbg !8477
  %conv123 = trunc i64 %call122 to i32, !dbg !8478
  store i32 %conv123, i32* %pixel10, align 4, !dbg !8479
  %112 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8480
  %113 = load i32, i32* %pixel10, align 4, !dbg !8481
  %conv124 = zext i32 %113 to i64, !dbg !8481
  %114 = load i8*, i8** %q.addr, align 8, !dbg !8482
  %call125 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %112, i64 %conv124, i8* %114), !dbg !8483
  store i8* %call125, i8** %q.addr, align 8, !dbg !8484
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8485
  %opacity126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 3, !dbg !8485
  %116 = load i16, i16* %opacity126, align 2, !dbg !8485
  %conv127 = zext i16 %116 to i32, !dbg !8485
  %sub128 = sub nsw i32 65535, %conv127, !dbg !8486
  %conv129 = trunc i32 %sub128 to i16, !dbg !8487
  %117 = load i64, i64* %range, align 8, !dbg !8488
  %call130 = call i64 @ScaleQuantumToAny(i16 zeroext %conv129, i64 %117), !dbg !8489
  %conv131 = trunc i64 %call130 to i32, !dbg !8490
  store i32 %conv131, i32* %pixel10, align 4, !dbg !8491
  %118 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8492
  %119 = load i32, i32* %pixel10, align 4, !dbg !8493
  %conv132 = zext i32 %119 to i64, !dbg !8493
  %120 = load i8*, i8** %q.addr, align 8, !dbg !8494
  %call133 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %118, i64 %conv132, i8* %120), !dbg !8495
  store i8* %call133, i8** %q.addr, align 8, !dbg !8496
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8497
  %incdec.ptr134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 1, !dbg !8497
  store %struct._PixelPacket* %incdec.ptr134, %struct._PixelPacket** %p.addr, align 8, !dbg !8497
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8498
  %pad135 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 6, !dbg !8499
  %123 = load i64, i64* %pad135, align 8, !dbg !8499
  %124 = load i8*, i8** %q.addr, align 8, !dbg !8500
  %add.ptr136 = getelementptr inbounds i8, i8* %124, i64 %123, !dbg !8500
  store i8* %add.ptr136, i8** %q.addr, align 8, !dbg !8500
  br label %for.inc137, !dbg !8501

for.inc137:                                       ; preds = %for.body110
  %125 = load i64, i64* %x, align 8, !dbg !8502
  %inc138 = add nsw i64 %125, 1, !dbg !8502
  store i64 %inc138, i64* %x, align 8, !dbg !8502
  br label %for.cond107, !dbg !8503, !llvm.loop !8504

for.end139:                                       ; preds = %for.cond107
  br label %sw.epilog336, !dbg !8506

sw.bb140:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel141, metadata !8507, metadata !DIExpression()), !dbg !8509
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8510
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %126, i32 0, i32 2, !dbg !8512
  %127 = load i32, i32* %format, align 8, !dbg !8512
  %cmp142 = icmp eq i32 %127, 1, !dbg !8513
  br i1 %cmp142, label %if.then144, label %if.end187, !dbg !8514

if.then144:                                       ; preds = %sw.bb140
  store i64 0, i64* %x, align 8, !dbg !8515
  br label %for.cond145, !dbg !8518

for.cond145:                                      ; preds = %for.inc184, %if.then144
  %128 = load i64, i64* %x, align 8, !dbg !8519
  %129 = load i64, i64* %number_pixels.addr, align 8, !dbg !8521
  %cmp146 = icmp slt i64 %128, %129, !dbg !8522
  br i1 %cmp146, label %for.body148, label %for.end186, !dbg !8523

for.body148:                                      ; preds = %for.cond145
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8524
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 2, !dbg !8524
  %131 = load i16, i16* %red149, align 2, !dbg !8524
  %conv150 = zext i16 %131 to i32, !dbg !8524
  %conv151 = sitofp i32 %conv150 to double, !dbg !8524
  %mul = fmul double 0x3EF0001000100010, %conv151, !dbg !8526
  %conv152 = fptrunc double %mul to float, !dbg !8527
  %call153 = call zeroext i16 @SinglePrecisionToHalf(float %conv152), !dbg !8528
  store i16 %call153, i16* %pixel141, align 2, !dbg !8529
  %132 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8530
  %endian154 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %132, i32 0, i32 13, !dbg !8531
  %133 = load i32, i32* %endian154, align 8, !dbg !8531
  %134 = load i16, i16* %pixel141, align 2, !dbg !8532
  %135 = load i8*, i8** %q.addr, align 8, !dbg !8533
  %call155 = call i8* @PopShortPixel(i32 %133, i16 zeroext %134, i8* %135), !dbg !8534
  store i8* %call155, i8** %q.addr, align 8, !dbg !8535
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8536
  %green156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !8536
  %137 = load i16, i16* %green156, align 2, !dbg !8536
  %conv157 = zext i16 %137 to i32, !dbg !8536
  %conv158 = sitofp i32 %conv157 to double, !dbg !8536
  %mul159 = fmul double 0x3EF0001000100010, %conv158, !dbg !8537
  %conv160 = fptrunc double %mul159 to float, !dbg !8538
  %call161 = call zeroext i16 @SinglePrecisionToHalf(float %conv160), !dbg !8539
  store i16 %call161, i16* %pixel141, align 2, !dbg !8540
  %138 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8541
  %endian162 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %138, i32 0, i32 13, !dbg !8542
  %139 = load i32, i32* %endian162, align 8, !dbg !8542
  %140 = load i16, i16* %pixel141, align 2, !dbg !8543
  %141 = load i8*, i8** %q.addr, align 8, !dbg !8544
  %call163 = call i8* @PopShortPixel(i32 %139, i16 zeroext %140, i8* %141), !dbg !8545
  store i8* %call163, i8** %q.addr, align 8, !dbg !8546
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8547
  %blue164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 0, i32 0, !dbg !8547
  %143 = load i16, i16* %blue164, align 2, !dbg !8547
  %conv165 = zext i16 %143 to i32, !dbg !8547
  %conv166 = sitofp i32 %conv165 to double, !dbg !8547
  %mul167 = fmul double 0x3EF0001000100010, %conv166, !dbg !8548
  %conv168 = fptrunc double %mul167 to float, !dbg !8549
  %call169 = call zeroext i16 @SinglePrecisionToHalf(float %conv168), !dbg !8550
  store i16 %call169, i16* %pixel141, align 2, !dbg !8551
  %144 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8552
  %endian170 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %144, i32 0, i32 13, !dbg !8553
  %145 = load i32, i32* %endian170, align 8, !dbg !8553
  %146 = load i16, i16* %pixel141, align 2, !dbg !8554
  %147 = load i8*, i8** %q.addr, align 8, !dbg !8555
  %call171 = call i8* @PopShortPixel(i32 %145, i16 zeroext %146, i8* %147), !dbg !8556
  store i8* %call171, i8** %q.addr, align 8, !dbg !8557
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8558
  %opacity172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 3, !dbg !8558
  %149 = load i16, i16* %opacity172, align 2, !dbg !8558
  %conv173 = zext i16 %149 to i32, !dbg !8558
  %sub174 = sub nsw i32 65535, %conv173, !dbg !8558
  %conv175 = sitofp i32 %sub174 to double, !dbg !8558
  %mul176 = fmul double 0x3EF0001000100010, %conv175, !dbg !8559
  %conv177 = fptrunc double %mul176 to float, !dbg !8560
  %call178 = call zeroext i16 @SinglePrecisionToHalf(float %conv177), !dbg !8561
  store i16 %call178, i16* %pixel141, align 2, !dbg !8562
  %150 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8563
  %endian179 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %150, i32 0, i32 13, !dbg !8564
  %151 = load i32, i32* %endian179, align 8, !dbg !8564
  %152 = load i16, i16* %pixel141, align 2, !dbg !8565
  %153 = load i8*, i8** %q.addr, align 8, !dbg !8566
  %call180 = call i8* @PopShortPixel(i32 %151, i16 zeroext %152, i8* %153), !dbg !8567
  store i8* %call180, i8** %q.addr, align 8, !dbg !8568
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8569
  %incdec.ptr181 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 1, !dbg !8569
  store %struct._PixelPacket* %incdec.ptr181, %struct._PixelPacket** %p.addr, align 8, !dbg !8569
  %155 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8570
  %pad182 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %155, i32 0, i32 6, !dbg !8571
  %156 = load i64, i64* %pad182, align 8, !dbg !8571
  %157 = load i8*, i8** %q.addr, align 8, !dbg !8572
  %add.ptr183 = getelementptr inbounds i8, i8* %157, i64 %156, !dbg !8572
  store i8* %add.ptr183, i8** %q.addr, align 8, !dbg !8572
  br label %for.inc184, !dbg !8573

for.inc184:                                       ; preds = %for.body148
  %158 = load i64, i64* %x, align 8, !dbg !8574
  %inc185 = add nsw i64 %158, 1, !dbg !8574
  store i64 %inc185, i64* %x, align 8, !dbg !8574
  br label %for.cond145, !dbg !8575, !llvm.loop !8576

for.end186:                                       ; preds = %for.cond145
  br label %sw.epilog336, !dbg !8578

if.end187:                                        ; preds = %sw.bb140
  store i64 0, i64* %x, align 8, !dbg !8579
  br label %for.cond188, !dbg !8581

for.cond188:                                      ; preds = %for.inc214, %if.end187
  %159 = load i64, i64* %x, align 8, !dbg !8582
  %160 = load i64, i64* %number_pixels.addr, align 8, !dbg !8584
  %cmp189 = icmp slt i64 %159, %160, !dbg !8585
  br i1 %cmp189, label %for.body191, label %for.end216, !dbg !8586

for.body191:                                      ; preds = %for.cond188
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8587
  %red192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 2, !dbg !8587
  %162 = load i16, i16* %red192, align 2, !dbg !8587
  %call193 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %162), !dbg !8589
  store i16 %call193, i16* %pixel141, align 2, !dbg !8590
  %163 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8591
  %endian194 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %163, i32 0, i32 13, !dbg !8592
  %164 = load i32, i32* %endian194, align 8, !dbg !8592
  %165 = load i16, i16* %pixel141, align 2, !dbg !8593
  %166 = load i8*, i8** %q.addr, align 8, !dbg !8594
  %call195 = call i8* @PopShortPixel(i32 %164, i16 zeroext %165, i8* %166), !dbg !8595
  store i8* %call195, i8** %q.addr, align 8, !dbg !8596
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8597
  %green196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 0, i32 1, !dbg !8597
  %168 = load i16, i16* %green196, align 2, !dbg !8597
  %call197 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %168), !dbg !8598
  store i16 %call197, i16* %pixel141, align 2, !dbg !8599
  %169 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8600
  %endian198 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %169, i32 0, i32 13, !dbg !8601
  %170 = load i32, i32* %endian198, align 8, !dbg !8601
  %171 = load i16, i16* %pixel141, align 2, !dbg !8602
  %172 = load i8*, i8** %q.addr, align 8, !dbg !8603
  %call199 = call i8* @PopShortPixel(i32 %170, i16 zeroext %171, i8* %172), !dbg !8604
  store i8* %call199, i8** %q.addr, align 8, !dbg !8605
  %173 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8606
  %blue200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %173, i32 0, i32 0, !dbg !8606
  %174 = load i16, i16* %blue200, align 2, !dbg !8606
  %call201 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %174), !dbg !8607
  store i16 %call201, i16* %pixel141, align 2, !dbg !8608
  %175 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8609
  %endian202 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %175, i32 0, i32 13, !dbg !8610
  %176 = load i32, i32* %endian202, align 8, !dbg !8610
  %177 = load i16, i16* %pixel141, align 2, !dbg !8611
  %178 = load i8*, i8** %q.addr, align 8, !dbg !8612
  %call203 = call i8* @PopShortPixel(i32 %176, i16 zeroext %177, i8* %178), !dbg !8613
  store i8* %call203, i8** %q.addr, align 8, !dbg !8614
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8615
  %opacity204 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 3, !dbg !8615
  %180 = load i16, i16* %opacity204, align 2, !dbg !8615
  %conv205 = zext i16 %180 to i32, !dbg !8615
  %sub206 = sub nsw i32 65535, %conv205, !dbg !8615
  %conv207 = trunc i32 %sub206 to i16, !dbg !8616
  %call208 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv207), !dbg !8617
  store i16 %call208, i16* %pixel141, align 2, !dbg !8618
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8619
  %endian209 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %181, i32 0, i32 13, !dbg !8620
  %182 = load i32, i32* %endian209, align 8, !dbg !8620
  %183 = load i16, i16* %pixel141, align 2, !dbg !8621
  %184 = load i8*, i8** %q.addr, align 8, !dbg !8622
  %call210 = call i8* @PopShortPixel(i32 %182, i16 zeroext %183, i8* %184), !dbg !8623
  store i8* %call210, i8** %q.addr, align 8, !dbg !8624
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8625
  %incdec.ptr211 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %185, i32 1, !dbg !8625
  store %struct._PixelPacket* %incdec.ptr211, %struct._PixelPacket** %p.addr, align 8, !dbg !8625
  %186 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8626
  %pad212 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %186, i32 0, i32 6, !dbg !8627
  %187 = load i64, i64* %pad212, align 8, !dbg !8627
  %188 = load i8*, i8** %q.addr, align 8, !dbg !8628
  %add.ptr213 = getelementptr inbounds i8, i8* %188, i64 %187, !dbg !8628
  store i8* %add.ptr213, i8** %q.addr, align 8, !dbg !8628
  br label %for.inc214, !dbg !8629

for.inc214:                                       ; preds = %for.body191
  %189 = load i64, i64* %x, align 8, !dbg !8630
  %inc215 = add nsw i64 %189, 1, !dbg !8630
  store i64 %inc215, i64* %x, align 8, !dbg !8630
  br label %for.cond188, !dbg !8631, !llvm.loop !8632

for.end216:                                       ; preds = %for.cond188
  br label %sw.epilog336, !dbg !8634

sw.bb217:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel218, metadata !8635, metadata !DIExpression()), !dbg !8637
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8638
  %format219 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %190, i32 0, i32 2, !dbg !8640
  %191 = load i32, i32* %format219, align 8, !dbg !8640
  %cmp220 = icmp eq i32 %191, 1, !dbg !8641
  br i1 %cmp220, label %if.then222, label %if.end248, !dbg !8642

if.then222:                                       ; preds = %sw.bb217
  store i64 0, i64* %x, align 8, !dbg !8643
  br label %for.cond223, !dbg !8646

for.cond223:                                      ; preds = %for.inc245, %if.then222
  %192 = load i64, i64* %x, align 8, !dbg !8647
  %193 = load i64, i64* %number_pixels.addr, align 8, !dbg !8649
  %cmp224 = icmp slt i64 %192, %193, !dbg !8650
  br i1 %cmp224, label %for.body226, label %for.end247, !dbg !8651

for.body226:                                      ; preds = %for.cond223
  call void @llvm.dbg.declare(metadata float* %pixel227, metadata !8652, metadata !DIExpression()), !dbg !8654
  %194 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8655
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8656
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i32 0, i32 2, !dbg !8656
  %196 = load i16, i16* %red228, align 2, !dbg !8656
  %conv229 = uitofp i16 %196 to float, !dbg !8657
  %197 = load i8*, i8** %q.addr, align 8, !dbg !8658
  %call230 = call i8* @PopFloatPixel(%struct._QuantumInfo* %194, float %conv229, i8* %197), !dbg !8659
  store i8* %call230, i8** %q.addr, align 8, !dbg !8660
  %198 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8661
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8662
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 1, !dbg !8662
  %200 = load i16, i16* %green231, align 2, !dbg !8662
  %conv232 = uitofp i16 %200 to float, !dbg !8663
  %201 = load i8*, i8** %q.addr, align 8, !dbg !8664
  %call233 = call i8* @PopFloatPixel(%struct._QuantumInfo* %198, float %conv232, i8* %201), !dbg !8665
  store i8* %call233, i8** %q.addr, align 8, !dbg !8666
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8667
  %203 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8668
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %203, i32 0, i32 0, !dbg !8668
  %204 = load i16, i16* %blue234, align 2, !dbg !8668
  %conv235 = uitofp i16 %204 to float, !dbg !8669
  %205 = load i8*, i8** %q.addr, align 8, !dbg !8670
  %call236 = call i8* @PopFloatPixel(%struct._QuantumInfo* %202, float %conv235, i8* %205), !dbg !8671
  store i8* %call236, i8** %q.addr, align 8, !dbg !8672
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8673
  %opacity237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i32 0, i32 3, !dbg !8673
  %207 = load i16, i16* %opacity237, align 2, !dbg !8673
  %conv238 = zext i16 %207 to i32, !dbg !8673
  %sub239 = sub nsw i32 65535, %conv238, !dbg !8673
  %conv240 = sitofp i32 %sub239 to float, !dbg !8674
  store float %conv240, float* %pixel227, align 4, !dbg !8675
  %208 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8676
  %209 = load float, float* %pixel227, align 4, !dbg !8677
  %210 = load i8*, i8** %q.addr, align 8, !dbg !8678
  %call241 = call i8* @PopFloatPixel(%struct._QuantumInfo* %208, float %209, i8* %210), !dbg !8679
  store i8* %call241, i8** %q.addr, align 8, !dbg !8680
  %211 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8681
  %incdec.ptr242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %211, i32 1, !dbg !8681
  store %struct._PixelPacket* %incdec.ptr242, %struct._PixelPacket** %p.addr, align 8, !dbg !8681
  %212 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8682
  %pad243 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %212, i32 0, i32 6, !dbg !8683
  %213 = load i64, i64* %pad243, align 8, !dbg !8683
  %214 = load i8*, i8** %q.addr, align 8, !dbg !8684
  %add.ptr244 = getelementptr inbounds i8, i8* %214, i64 %213, !dbg !8684
  store i8* %add.ptr244, i8** %q.addr, align 8, !dbg !8684
  br label %for.inc245, !dbg !8685

for.inc245:                                       ; preds = %for.body226
  %215 = load i64, i64* %x, align 8, !dbg !8686
  %inc246 = add nsw i64 %215, 1, !dbg !8686
  store i64 %inc246, i64* %x, align 8, !dbg !8686
  br label %for.cond223, !dbg !8687, !llvm.loop !8688

for.end247:                                       ; preds = %for.cond223
  br label %sw.epilog336, !dbg !8690

if.end248:                                        ; preds = %sw.bb217
  store i64 0, i64* %x, align 8, !dbg !8691
  br label %for.cond249, !dbg !8693

for.cond249:                                      ; preds = %for.inc275, %if.end248
  %216 = load i64, i64* %x, align 8, !dbg !8694
  %217 = load i64, i64* %number_pixels.addr, align 8, !dbg !8696
  %cmp250 = icmp slt i64 %216, %217, !dbg !8697
  br i1 %cmp250, label %for.body252, label %for.end277, !dbg !8698

for.body252:                                      ; preds = %for.cond249
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8699
  %red253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 0, i32 2, !dbg !8699
  %219 = load i16, i16* %red253, align 2, !dbg !8699
  %call254 = call i32 @ScaleQuantumToLong(i16 zeroext %219), !dbg !8701
  store i32 %call254, i32* %pixel218, align 4, !dbg !8702
  %220 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8703
  %endian255 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %220, i32 0, i32 13, !dbg !8704
  %221 = load i32, i32* %endian255, align 8, !dbg !8704
  %222 = load i32, i32* %pixel218, align 4, !dbg !8705
  %223 = load i8*, i8** %q.addr, align 8, !dbg !8706
  %call256 = call i8* @PopLongPixel(i32 %221, i32 %222, i8* %223), !dbg !8707
  store i8* %call256, i8** %q.addr, align 8, !dbg !8708
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8709
  %green257 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i32 0, i32 1, !dbg !8709
  %225 = load i16, i16* %green257, align 2, !dbg !8709
  %call258 = call i32 @ScaleQuantumToLong(i16 zeroext %225), !dbg !8710
  store i32 %call258, i32* %pixel218, align 4, !dbg !8711
  %226 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8712
  %endian259 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %226, i32 0, i32 13, !dbg !8713
  %227 = load i32, i32* %endian259, align 8, !dbg !8713
  %228 = load i32, i32* %pixel218, align 4, !dbg !8714
  %229 = load i8*, i8** %q.addr, align 8, !dbg !8715
  %call260 = call i8* @PopLongPixel(i32 %227, i32 %228, i8* %229), !dbg !8716
  store i8* %call260, i8** %q.addr, align 8, !dbg !8717
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8718
  %blue261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %230, i32 0, i32 0, !dbg !8718
  %231 = load i16, i16* %blue261, align 2, !dbg !8718
  %call262 = call i32 @ScaleQuantumToLong(i16 zeroext %231), !dbg !8719
  store i32 %call262, i32* %pixel218, align 4, !dbg !8720
  %232 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8721
  %endian263 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %232, i32 0, i32 13, !dbg !8722
  %233 = load i32, i32* %endian263, align 8, !dbg !8722
  %234 = load i32, i32* %pixel218, align 4, !dbg !8723
  %235 = load i8*, i8** %q.addr, align 8, !dbg !8724
  %call264 = call i8* @PopLongPixel(i32 %233, i32 %234, i8* %235), !dbg !8725
  store i8* %call264, i8** %q.addr, align 8, !dbg !8726
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8727
  %opacity265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 3, !dbg !8727
  %237 = load i16, i16* %opacity265, align 2, !dbg !8727
  %conv266 = zext i16 %237 to i32, !dbg !8727
  %sub267 = sub nsw i32 65535, %conv266, !dbg !8727
  %conv268 = trunc i32 %sub267 to i16, !dbg !8728
  %call269 = call i32 @ScaleQuantumToLong(i16 zeroext %conv268), !dbg !8729
  store i32 %call269, i32* %pixel218, align 4, !dbg !8730
  %238 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8731
  %endian270 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %238, i32 0, i32 13, !dbg !8732
  %239 = load i32, i32* %endian270, align 8, !dbg !8732
  %240 = load i32, i32* %pixel218, align 4, !dbg !8733
  %241 = load i8*, i8** %q.addr, align 8, !dbg !8734
  %call271 = call i8* @PopLongPixel(i32 %239, i32 %240, i8* %241), !dbg !8735
  store i8* %call271, i8** %q.addr, align 8, !dbg !8736
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8737
  %incdec.ptr272 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 1, !dbg !8737
  store %struct._PixelPacket* %incdec.ptr272, %struct._PixelPacket** %p.addr, align 8, !dbg !8737
  %243 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8738
  %pad273 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %243, i32 0, i32 6, !dbg !8739
  %244 = load i64, i64* %pad273, align 8, !dbg !8739
  %245 = load i8*, i8** %q.addr, align 8, !dbg !8740
  %add.ptr274 = getelementptr inbounds i8, i8* %245, i64 %244, !dbg !8740
  store i8* %add.ptr274, i8** %q.addr, align 8, !dbg !8740
  br label %for.inc275, !dbg !8741

for.inc275:                                       ; preds = %for.body252
  %246 = load i64, i64* %x, align 8, !dbg !8742
  %inc276 = add nsw i64 %246, 1, !dbg !8742
  store i64 %inc276, i64* %x, align 8, !dbg !8742
  br label %for.cond249, !dbg !8743, !llvm.loop !8744

for.end277:                                       ; preds = %for.cond249
  br label %sw.epilog336, !dbg !8746

sw.bb278:                                         ; preds = %entry
  %247 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8747
  %format279 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %247, i32 0, i32 2, !dbg !8750
  %248 = load i32, i32* %format279, align 8, !dbg !8750
  %cmp280 = icmp eq i32 %248, 1, !dbg !8751
  br i1 %cmp280, label %if.then282, label %if.end308, !dbg !8752

if.then282:                                       ; preds = %sw.bb278
  call void @llvm.dbg.declare(metadata double* %pixel283, metadata !8753, metadata !DIExpression()), !dbg !8755
  store i64 0, i64* %x, align 8, !dbg !8756
  br label %for.cond284, !dbg !8758

for.cond284:                                      ; preds = %for.inc305, %if.then282
  %249 = load i64, i64* %x, align 8, !dbg !8759
  %250 = load i64, i64* %number_pixels.addr, align 8, !dbg !8761
  %cmp285 = icmp slt i64 %249, %250, !dbg !8762
  br i1 %cmp285, label %for.body287, label %for.end307, !dbg !8763

for.body287:                                      ; preds = %for.cond284
  %251 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8764
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8766
  %red288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !8766
  %253 = load i16, i16* %red288, align 2, !dbg !8766
  %conv289 = uitofp i16 %253 to double, !dbg !8767
  %254 = load i8*, i8** %q.addr, align 8, !dbg !8768
  %call290 = call i8* @PopDoublePixel(%struct._QuantumInfo* %251, double %conv289, i8* %254), !dbg !8769
  store i8* %call290, i8** %q.addr, align 8, !dbg !8770
  %255 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8771
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8772
  %green291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 1, !dbg !8772
  %257 = load i16, i16* %green291, align 2, !dbg !8772
  %conv292 = uitofp i16 %257 to double, !dbg !8773
  %258 = load i8*, i8** %q.addr, align 8, !dbg !8774
  %call293 = call i8* @PopDoublePixel(%struct._QuantumInfo* %255, double %conv292, i8* %258), !dbg !8775
  store i8* %call293, i8** %q.addr, align 8, !dbg !8776
  %259 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8777
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8778
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 0, i32 0, !dbg !8778
  %261 = load i16, i16* %blue294, align 2, !dbg !8778
  %conv295 = uitofp i16 %261 to double, !dbg !8779
  %262 = load i8*, i8** %q.addr, align 8, !dbg !8780
  %call296 = call i8* @PopDoublePixel(%struct._QuantumInfo* %259, double %conv295, i8* %262), !dbg !8781
  store i8* %call296, i8** %q.addr, align 8, !dbg !8782
  %263 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8783
  %opacity297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %263, i32 0, i32 3, !dbg !8783
  %264 = load i16, i16* %opacity297, align 2, !dbg !8783
  %conv298 = zext i16 %264 to i32, !dbg !8783
  %sub299 = sub nsw i32 65535, %conv298, !dbg !8783
  %conv300 = sitofp i32 %sub299 to double, !dbg !8784
  store double %conv300, double* %pixel283, align 8, !dbg !8785
  %265 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8786
  %266 = load double, double* %pixel283, align 8, !dbg !8787
  %267 = load i8*, i8** %q.addr, align 8, !dbg !8788
  %call301 = call i8* @PopDoublePixel(%struct._QuantumInfo* %265, double %266, i8* %267), !dbg !8789
  store i8* %call301, i8** %q.addr, align 8, !dbg !8790
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8791
  %incdec.ptr302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 1, !dbg !8791
  store %struct._PixelPacket* %incdec.ptr302, %struct._PixelPacket** %p.addr, align 8, !dbg !8791
  %269 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8792
  %pad303 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %269, i32 0, i32 6, !dbg !8793
  %270 = load i64, i64* %pad303, align 8, !dbg !8793
  %271 = load i8*, i8** %q.addr, align 8, !dbg !8794
  %add.ptr304 = getelementptr inbounds i8, i8* %271, i64 %270, !dbg !8794
  store i8* %add.ptr304, i8** %q.addr, align 8, !dbg !8794
  br label %for.inc305, !dbg !8795

for.inc305:                                       ; preds = %for.body287
  %272 = load i64, i64* %x, align 8, !dbg !8796
  %inc306 = add nsw i64 %272, 1, !dbg !8796
  store i64 %inc306, i64* %x, align 8, !dbg !8796
  br label %for.cond284, !dbg !8797, !llvm.loop !8798

for.end307:                                       ; preds = %for.cond284
  br label %sw.epilog336, !dbg !8800

if.end308:                                        ; preds = %sw.bb278
  br label %sw.default, !dbg !8801

sw.default:                                       ; preds = %entry, %if.end308
  %273 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8802
  %depth309 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %273, i32 0, i32 0, !dbg !8804
  %274 = load i64, i64* %depth309, align 8, !dbg !8804
  %call310 = call i64 @GetQuantumRange(i64 %274), !dbg !8805
  store i64 %call310, i64* %range, align 8, !dbg !8806
  store i64 0, i64* %x, align 8, !dbg !8807
  br label %for.cond311, !dbg !8809

for.cond311:                                      ; preds = %for.inc333, %sw.default
  %275 = load i64, i64* %x, align 8, !dbg !8810
  %276 = load i64, i64* %number_pixels.addr, align 8, !dbg !8812
  %cmp312 = icmp slt i64 %275, %276, !dbg !8813
  br i1 %cmp312, label %for.body314, label %for.end335, !dbg !8814

for.body314:                                      ; preds = %for.cond311
  %277 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8815
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8817
  %red315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 0, i32 2, !dbg !8817
  %279 = load i16, i16* %red315, align 2, !dbg !8817
  %280 = load i64, i64* %range, align 8, !dbg !8818
  %call316 = call i64 @ScaleQuantumToAny(i16 zeroext %279, i64 %280), !dbg !8819
  %281 = load i8*, i8** %q.addr, align 8, !dbg !8820
  %call317 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %277, i64 %call316, i8* %281), !dbg !8821
  store i8* %call317, i8** %q.addr, align 8, !dbg !8822
  %282 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8823
  %283 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8824
  %green318 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %283, i32 0, i32 1, !dbg !8824
  %284 = load i16, i16* %green318, align 2, !dbg !8824
  %285 = load i64, i64* %range, align 8, !dbg !8825
  %call319 = call i64 @ScaleQuantumToAny(i16 zeroext %284, i64 %285), !dbg !8826
  %286 = load i8*, i8** %q.addr, align 8, !dbg !8827
  %call320 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %282, i64 %call319, i8* %286), !dbg !8828
  store i8* %call320, i8** %q.addr, align 8, !dbg !8829
  %287 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8830
  %288 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8831
  %blue321 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %288, i32 0, i32 0, !dbg !8831
  %289 = load i16, i16* %blue321, align 2, !dbg !8831
  %290 = load i64, i64* %range, align 8, !dbg !8832
  %call322 = call i64 @ScaleQuantumToAny(i16 zeroext %289, i64 %290), !dbg !8833
  %291 = load i8*, i8** %q.addr, align 8, !dbg !8834
  %call323 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %287, i64 %call322, i8* %291), !dbg !8835
  store i8* %call323, i8** %q.addr, align 8, !dbg !8836
  %292 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8837
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8838
  %opacity324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 0, i32 3, !dbg !8838
  %294 = load i16, i16* %opacity324, align 2, !dbg !8838
  %conv325 = zext i16 %294 to i32, !dbg !8838
  %sub326 = sub nsw i32 65535, %conv325, !dbg !8838
  %conv327 = trunc i32 %sub326 to i16, !dbg !8839
  %295 = load i64, i64* %range, align 8, !dbg !8840
  %call328 = call i64 @ScaleQuantumToAny(i16 zeroext %conv327, i64 %295), !dbg !8841
  %296 = load i8*, i8** %q.addr, align 8, !dbg !8842
  %call329 = call i8* @PopQuantumPixel(%struct._QuantumInfo* %292, i64 %call328, i8* %296), !dbg !8843
  store i8* %call329, i8** %q.addr, align 8, !dbg !8844
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !8845
  %incdec.ptr330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 1, !dbg !8845
  store %struct._PixelPacket* %incdec.ptr330, %struct._PixelPacket** %p.addr, align 8, !dbg !8845
  %298 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8846
  %pad331 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %298, i32 0, i32 6, !dbg !8847
  %299 = load i64, i64* %pad331, align 8, !dbg !8847
  %300 = load i8*, i8** %q.addr, align 8, !dbg !8848
  %add.ptr332 = getelementptr inbounds i8, i8* %300, i64 %299, !dbg !8848
  store i8* %add.ptr332, i8** %q.addr, align 8, !dbg !8848
  br label %for.inc333, !dbg !8849

for.inc333:                                       ; preds = %for.body314
  %301 = load i64, i64* %x, align 8, !dbg !8850
  %inc334 = add nsw i64 %301, 1, !dbg !8850
  store i64 %inc334, i64* %x, align 8, !dbg !8850
  br label %for.cond311, !dbg !8851, !llvm.loop !8852

for.end335:                                       ; preds = %for.cond311
  br label %sw.epilog336, !dbg !8854

sw.epilog336:                                     ; preds = %for.end335, %for.end307, %for.end277, %for.end247, %for.end216, %for.end186, %for.end139, %for.end105, %for.end68, %for.end
  ret void, !dbg !8855
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ScaleQuantumToChar(i16 zeroext %quantum) #0 !dbg !8856 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !8862
  %conv = zext i16 %0 to i64, !dbg !8862
  %add = add i64 %conv, 128, !dbg !8863
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !8864
  %conv1 = zext i16 %1 to i64, !dbg !8864
  %add2 = add i64 %conv1, 128, !dbg !8865
  %shr = lshr i64 %add2, 8, !dbg !8866
  %sub = sub i64 %add, %shr, !dbg !8867
  %shr3 = lshr i64 %sub, 8, !dbg !8868
  %conv4 = trunc i64 %shr3 to i8, !dbg !8869
  ret i8 %conv4, !dbg !8870
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopCharPixel(i8 zeroext %pixel, i8* %pixels) #0 !dbg !8871 {
entry:
  %pixel.addr = alloca i8, align 1
  %pixels.addr = alloca i8*, align 8
  store i8 %pixel, i8* %pixel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pixel.addr, metadata !8875, metadata !DIExpression()), !dbg !8876
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !8877, metadata !DIExpression()), !dbg !8878
  %0 = load i8, i8* %pixel.addr, align 1, !dbg !8879
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !8880
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !8880
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !8880
  store i8 %0, i8* %1, align 1, !dbg !8881
  %2 = load i8*, i8** %pixels.addr, align 8, !dbg !8882
  ret i8* %2, !dbg !8883
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @SinglePrecisionToHalf(float %value) #0 !dbg !8884 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  %exponent = alloca i32, align 4
  %significand = alloca i32, align 4
  %sign_bit = alloca i32, align 4
  %map = alloca %union._SinglePrecision, align 4
  %half = alloca i16, align 2
  %shift = alloca i32, align 4
  %alpha = alloca float, align 4
  %i = alloca i32, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.declare(metadata i32* %significand, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.declare(metadata i32* %sign_bit, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.declare(metadata %union._SinglePrecision* %map, metadata !8896, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.declare(metadata i16* %half, metadata !8903, metadata !DIExpression()), !dbg !8904
  %0 = load float, float* %value.addr, align 4, !dbg !8905
  %single_precision = bitcast %union._SinglePrecision* %map to float*, !dbg !8906
  store float %0, float* %single_precision, align 4, !dbg !8907
  %fixed_point = bitcast %union._SinglePrecision* %map to i32*, !dbg !8908
  %1 = load i32, i32* %fixed_point, align 4, !dbg !8908
  %shr = lshr i32 %1, 16, !dbg !8909
  %and = and i32 %shr, 32768, !dbg !8910
  store i32 %and, i32* %sign_bit, align 4, !dbg !8911
  %fixed_point1 = bitcast %union._SinglePrecision* %map to i32*, !dbg !8912
  %2 = load i32, i32* %fixed_point1, align 4, !dbg !8912
  %shr2 = lshr i32 %2, 23, !dbg !8913
  %and3 = and i32 %shr2, 255, !dbg !8914
  %sub = sub nsw i32 %and3, 112, !dbg !8915
  store i32 %sub, i32* %exponent, align 4, !dbg !8916
  %fixed_point4 = bitcast %union._SinglePrecision* %map to i32*, !dbg !8917
  %3 = load i32, i32* %fixed_point4, align 4, !dbg !8917
  %and5 = and i32 %3, 8388607, !dbg !8918
  store i32 %and5, i32* %significand, align 4, !dbg !8919
  %4 = load i32, i32* %exponent, align 4, !dbg !8920
  %cmp = icmp sle i32 %4, 0, !dbg !8922
  br i1 %cmp, label %if.then, label %if.else, !dbg !8923

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8924, metadata !DIExpression()), !dbg !8926
  %5 = load i32, i32* %exponent, align 4, !dbg !8927
  %cmp6 = icmp slt i32 %5, -10, !dbg !8929
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !8930

if.then7:                                         ; preds = %if.then
  %6 = load i32, i32* %sign_bit, align 4, !dbg !8931
  %conv = trunc i32 %6 to i16, !dbg !8932
  store i16 %conv, i16* %retval, align 2, !dbg !8933
  br label %return, !dbg !8933

if.end:                                           ; preds = %if.then
  %7 = load i32, i32* %significand, align 4, !dbg !8934
  %or = or i32 %7, 8388608, !dbg !8935
  store i32 %or, i32* %significand, align 4, !dbg !8936
  %8 = load i32, i32* %exponent, align 4, !dbg !8937
  %sub8 = sub nsw i32 14, %8, !dbg !8938
  store i32 %sub8, i32* %shift, align 4, !dbg !8939
  %9 = load i32, i32* %significand, align 4, !dbg !8940
  %10 = load i32, i32* %shift, align 4, !dbg !8941
  %sub9 = sub nsw i32 %10, 1, !dbg !8942
  %shl = shl i32 1, %sub9, !dbg !8943
  %sub10 = sub nsw i32 %shl, 1, !dbg !8944
  %add = add i32 %9, %sub10, !dbg !8945
  %11 = load i32, i32* %significand, align 4, !dbg !8946
  %12 = load i32, i32* %shift, align 4, !dbg !8947
  %shr11 = lshr i32 %11, %12, !dbg !8948
  %and12 = and i32 %shr11, 1, !dbg !8949
  %add13 = add i32 %add, %and12, !dbg !8950
  %13 = load i32, i32* %shift, align 4, !dbg !8951
  %shr14 = lshr i32 %add13, %13, !dbg !8952
  store i32 %shr14, i32* %significand, align 4, !dbg !8953
  %14 = load i32, i32* %sign_bit, align 4, !dbg !8954
  %15 = load i32, i32* %significand, align 4, !dbg !8955
  %or15 = or i32 %14, %15, !dbg !8956
  %conv16 = trunc i32 %or15 to i16, !dbg !8957
  store i16 %conv16, i16* %retval, align 2, !dbg !8958
  br label %return, !dbg !8958

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %exponent, align 4, !dbg !8959
  %cmp17 = icmp eq i32 %16, 143, !dbg !8961
  br i1 %cmp17, label %if.then19, label %if.end33, !dbg !8962

if.then19:                                        ; preds = %if.else
  %17 = load i32, i32* %significand, align 4, !dbg !8963
  %cmp20 = icmp eq i32 %17, 0, !dbg !8966
  br i1 %cmp20, label %if.then22, label %if.else25, !dbg !8967

if.then22:                                        ; preds = %if.then19
  %18 = load i32, i32* %sign_bit, align 4, !dbg !8968
  %or23 = or i32 %18, 31744, !dbg !8969
  %conv24 = trunc i32 %or23 to i16, !dbg !8970
  store i16 %conv24, i16* %retval, align 2, !dbg !8971
  br label %return, !dbg !8971

if.else25:                                        ; preds = %if.then19
  %19 = load i32, i32* %significand, align 4, !dbg !8972
  %shr26 = lshr i32 %19, 13, !dbg !8972
  store i32 %shr26, i32* %significand, align 4, !dbg !8972
  %20 = load i32, i32* %sign_bit, align 4, !dbg !8974
  %21 = load i32, i32* %significand, align 4, !dbg !8975
  %or27 = or i32 %20, %21, !dbg !8976
  %22 = load i32, i32* %significand, align 4, !dbg !8977
  %cmp28 = icmp eq i32 %22, 0, !dbg !8978
  %conv29 = zext i1 %cmp28 to i32, !dbg !8978
  %or30 = or i32 %or27, %conv29, !dbg !8979
  %or31 = or i32 %or30, 31744, !dbg !8980
  %conv32 = trunc i32 %or31 to i16, !dbg !8981
  store i16 %conv32, i16* %half, align 2, !dbg !8982
  %23 = load i16, i16* %half, align 2, !dbg !8983
  store i16 %23, i16* %retval, align 2, !dbg !8984
  br label %return, !dbg !8984

if.end33:                                         ; preds = %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  %24 = load i32, i32* %significand, align 4, !dbg !8985
  %25 = load i32, i32* %significand, align 4, !dbg !8986
  %shr35 = lshr i32 %25, 13, !dbg !8987
  %and36 = and i32 %shr35, 1, !dbg !8988
  %add37 = add i32 %24, %and36, !dbg !8989
  %add38 = add i32 %add37, 4095, !dbg !8990
  store i32 %add38, i32* %significand, align 4, !dbg !8991
  %26 = load i32, i32* %significand, align 4, !dbg !8992
  %and39 = and i32 %26, 8388608, !dbg !8994
  %cmp40 = icmp ne i32 %and39, 0, !dbg !8995
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !8996

if.then42:                                        ; preds = %if.end34
  store i32 0, i32* %significand, align 4, !dbg !8997
  %27 = load i32, i32* %exponent, align 4, !dbg !8999
  %inc = add nsw i32 %27, 1, !dbg !8999
  store i32 %inc, i32* %exponent, align 4, !dbg !8999
  br label %if.end43, !dbg !9000

if.end43:                                         ; preds = %if.then42, %if.end34
  %28 = load i32, i32* %exponent, align 4, !dbg !9001
  %cmp44 = icmp sgt i32 %28, 30, !dbg !9003
  br i1 %cmp44, label %if.then46, label %if.end52, !dbg !9004

if.then46:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !9005, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9008, metadata !DIExpression()), !dbg !9009
  store float 1.000000e+10, float* %alpha, align 4, !dbg !9010
  store i32 0, i32* %i, align 4, !dbg !9011
  br label %for.cond, !dbg !9013

for.cond:                                         ; preds = %for.inc, %if.then46
  %29 = load i32, i32* %i, align 4, !dbg !9014
  %cmp47 = icmp slt i32 %29, 10, !dbg !9016
  br i1 %cmp47, label %for.body, label %for.end, !dbg !9017

for.body:                                         ; preds = %for.cond
  %30 = load float, float* %alpha, align 4, !dbg !9018
  %31 = load float, float* %alpha, align 4, !dbg !9019
  %mul = fmul float %31, %30, !dbg !9019
  store float %mul, float* %alpha, align 4, !dbg !9019
  br label %for.inc, !dbg !9020

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !9021
  %inc49 = add nsw i32 %32, 1, !dbg !9021
  store i32 %inc49, i32* %i, align 4, !dbg !9021
  br label %for.cond, !dbg !9022, !llvm.loop !9023

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %sign_bit, align 4, !dbg !9025
  %or50 = or i32 %33, 31744, !dbg !9026
  %conv51 = trunc i32 %or50 to i16, !dbg !9027
  store i16 %conv51, i16* %retval, align 2, !dbg !9028
  br label %return, !dbg !9028

if.end52:                                         ; preds = %if.end43
  %34 = load i32, i32* %sign_bit, align 4, !dbg !9029
  %35 = load i32, i32* %exponent, align 4, !dbg !9030
  %shl53 = shl i32 %35, 10, !dbg !9031
  %or54 = or i32 %34, %shl53, !dbg !9032
  %36 = load i32, i32* %significand, align 4, !dbg !9033
  %shr55 = lshr i32 %36, 13, !dbg !9034
  %or56 = or i32 %or54, %shr55, !dbg !9035
  %conv57 = trunc i32 %or56 to i16, !dbg !9036
  store i16 %conv57, i16* %half, align 2, !dbg !9037
  %37 = load i16, i16* %half, align 2, !dbg !9038
  store i16 %37, i16* %retval, align 2, !dbg !9039
  br label %return, !dbg !9039

return:                                           ; preds = %if.end52, %for.end, %if.else25, %if.then22, %if.end, %if.then7
  %38 = load i16, i16* %retval, align 2, !dbg !9040
  ret i16 %38, !dbg !9040
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopShortPixel(i32 %endian, i16 zeroext %pixel, i8* %pixels) #0 !dbg !9041 {
entry:
  %retval = alloca i8*, align 8
  %endian.addr = alloca i32, align 4
  %pixel.addr = alloca i16, align 2
  %pixels.addr = alloca i8*, align 8
  %quantum = alloca i32, align 4
  store i32 %endian, i32* %endian.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endian.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  store i16 %pixel, i16* %pixel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pixel.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.declare(metadata i32* %quantum, metadata !9052, metadata !DIExpression()), !dbg !9053
  %0 = load i16, i16* %pixel.addr, align 2, !dbg !9054
  %conv = zext i16 %0 to i32, !dbg !9054
  store i32 %conv, i32* %quantum, align 4, !dbg !9055
  %1 = load i32, i32* %endian.addr, align 4, !dbg !9056
  %cmp = icmp eq i32 %1, 1, !dbg !9058
  br i1 %cmp, label %if.then, label %if.end, !dbg !9059

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %quantum, align 4, !dbg !9060
  %conv2 = trunc i32 %2 to i8, !dbg !9062
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !9063
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !9063
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !9063
  store i8 %conv2, i8* %3, align 1, !dbg !9064
  %4 = load i32, i32* %quantum, align 4, !dbg !9065
  %shr = lshr i32 %4, 8, !dbg !9066
  %conv3 = trunc i32 %shr to i8, !dbg !9067
  %5 = load i8*, i8** %pixels.addr, align 8, !dbg !9068
  %incdec.ptr4 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9068
  store i8* %incdec.ptr4, i8** %pixels.addr, align 8, !dbg !9068
  store i8 %conv3, i8* %5, align 1, !dbg !9069
  %6 = load i8*, i8** %pixels.addr, align 8, !dbg !9070
  store i8* %6, i8** %retval, align 8, !dbg !9071
  br label %return, !dbg !9071

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %quantum, align 4, !dbg !9072
  %shr5 = lshr i32 %7, 8, !dbg !9073
  %conv6 = trunc i32 %shr5 to i8, !dbg !9074
  %8 = load i8*, i8** %pixels.addr, align 8, !dbg !9075
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9075
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !9075
  store i8 %conv6, i8* %8, align 1, !dbg !9076
  %9 = load i32, i32* %quantum, align 4, !dbg !9077
  %conv8 = trunc i32 %9 to i8, !dbg !9078
  %10 = load i8*, i8** %pixels.addr, align 8, !dbg !9079
  %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9079
  store i8* %incdec.ptr9, i8** %pixels.addr, align 8, !dbg !9079
  store i8 %conv8, i8* %10, align 1, !dbg !9080
  %11 = load i8*, i8** %pixels.addr, align 8, !dbg !9081
  store i8* %11, i8** %retval, align 8, !dbg !9082
  br label %return, !dbg !9082

return:                                           ; preds = %if.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !9083
  ret i8* %12, !dbg !9083
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleQuantumToShort(i16 zeroext %quantum) #0 !dbg !9084 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !9089
  ret i16 %0, !dbg !9090
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopFloatPixel(%struct._QuantumInfo* %quantum_info, float %pixel, i8* noalias %pixels) #0 !dbg !9091 {
entry:
  %retval = alloca i8*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixel.addr = alloca float, align 4
  %pixels.addr = alloca i8*, align 8
  %p = alloca float*, align 8
  %quantum = alloca [4 x i8], align 1
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !9094, metadata !DIExpression()), !dbg !9095
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata float** %p, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.declare(metadata [4 x i8]* %quantum, metadata !9102, metadata !DIExpression()), !dbg !9104
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !9105
  %call = call i8* @ResetMagickMemory(i8* %arraydecay, i32 0, i64 4), !dbg !9106
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !9107
  %0 = bitcast i8* %arraydecay1 to float*, !dbg !9108
  store float* %0, float** %p, align 8, !dbg !9109
  %1 = load float, float* %pixel.addr, align 4, !dbg !9110
  %conv = fpext float %1 to double, !dbg !9111
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9112
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 14, !dbg !9113
  %inverse_scale = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 0, !dbg !9114
  %3 = load double, double* %inverse_scale, align 8, !dbg !9114
  %mul = fmul double %conv, %3, !dbg !9115
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9116
  %minimum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 3, !dbg !9117
  %5 = load double, double* %minimum, align 8, !dbg !9117
  %add = fadd double %mul, %5, !dbg !9118
  %conv2 = fptrunc double %add to float, !dbg !9119
  %6 = load float*, float** %p, align 8, !dbg !9120
  store float %conv2, float* %6, align 4, !dbg !9121
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9122
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 13, !dbg !9124
  %8 = load i32, i32* %endian, align 8, !dbg !9124
  %cmp = icmp eq i32 %8, 1, !dbg !9125
  br i1 %cmp, label %if.then, label %if.end, !dbg !9126

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !9127
  %9 = load i8, i8* %arrayidx, align 1, !dbg !9127
  %10 = load i8*, i8** %pixels.addr, align 8, !dbg !9129
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9129
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !9129
  store i8 %9, i8* %10, align 1, !dbg !9130
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 1, !dbg !9131
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !9131
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !9132
  %incdec.ptr5 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !9132
  store i8* %incdec.ptr5, i8** %pixels.addr, align 8, !dbg !9132
  store i8 %11, i8* %12, align 1, !dbg !9133
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 2, !dbg !9134
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !9134
  %14 = load i8*, i8** %pixels.addr, align 8, !dbg !9135
  %incdec.ptr7 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9135
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !9135
  store i8 %13, i8* %14, align 1, !dbg !9136
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 3, !dbg !9137
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !9137
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !9138
  %incdec.ptr9 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !9138
  store i8* %incdec.ptr9, i8** %pixels.addr, align 8, !dbg !9138
  store i8 %15, i8* %16, align 1, !dbg !9139
  %17 = load i8*, i8** %pixels.addr, align 8, !dbg !9140
  store i8* %17, i8** %retval, align 8, !dbg !9141
  br label %return, !dbg !9141

if.end:                                           ; preds = %entry
  %arrayidx10 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 3, !dbg !9142
  %18 = load i8, i8* %arrayidx10, align 1, !dbg !9142
  %19 = load i8*, i8** %pixels.addr, align 8, !dbg !9143
  %incdec.ptr11 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9143
  store i8* %incdec.ptr11, i8** %pixels.addr, align 8, !dbg !9143
  store i8 %18, i8* %19, align 1, !dbg !9144
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 2, !dbg !9145
  %20 = load i8, i8* %arrayidx12, align 1, !dbg !9145
  %21 = load i8*, i8** %pixels.addr, align 8, !dbg !9146
  %incdec.ptr13 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !9146
  store i8* %incdec.ptr13, i8** %pixels.addr, align 8, !dbg !9146
  store i8 %20, i8* %21, align 1, !dbg !9147
  %arrayidx14 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 1, !dbg !9148
  %22 = load i8, i8* %arrayidx14, align 1, !dbg !9148
  %23 = load i8*, i8** %pixels.addr, align 8, !dbg !9149
  %incdec.ptr15 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9149
  store i8* %incdec.ptr15, i8** %pixels.addr, align 8, !dbg !9149
  store i8 %22, i8* %23, align 1, !dbg !9150
  %arrayidx16 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !9151
  %24 = load i8, i8* %arrayidx16, align 1, !dbg !9151
  %25 = load i8*, i8** %pixels.addr, align 8, !dbg !9152
  %incdec.ptr17 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !9152
  store i8* %incdec.ptr17, i8** %pixels.addr, align 8, !dbg !9152
  store i8 %24, i8* %25, align 1, !dbg !9153
  %26 = load i8*, i8** %pixels.addr, align 8, !dbg !9154
  store i8* %26, i8** %retval, align 8, !dbg !9155
  br label %return, !dbg !9155

return:                                           ; preds = %if.end, %if.then
  %27 = load i8*, i8** %retval, align 8, !dbg !9156
  ret i8* %27, !dbg !9156
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ScaleQuantumToLong(i16 zeroext %quantum) #0 !dbg !9157 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !9160, metadata !DIExpression()), !dbg !9161
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !9162
  %conv = zext i16 %0 to i64, !dbg !9162
  %mul = mul i64 65537, %conv, !dbg !9163
  %conv1 = trunc i64 %mul to i32, !dbg !9164
  ret i32 %conv1, !dbg !9165
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopLongPixel(i32 %endian, i32 %pixel, i8* %pixels) #0 !dbg !9166 {
entry:
  %retval = alloca i8*, align 8
  %endian.addr = alloca i32, align 4
  %pixel.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %quantum = alloca i32, align 4
  store i32 %endian, i32* %endian.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endian.addr, metadata !9169, metadata !DIExpression()), !dbg !9170
  store i32 %pixel, i32* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pixel.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %quantum, metadata !9175, metadata !DIExpression()), !dbg !9176
  %0 = load i32, i32* %pixel.addr, align 4, !dbg !9177
  store i32 %0, i32* %quantum, align 4, !dbg !9178
  %1 = load i32, i32* %endian.addr, align 4, !dbg !9179
  %cmp = icmp eq i32 %1, 1, !dbg !9181
  br i1 %cmp, label %if.then, label %if.end, !dbg !9182

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %quantum, align 4, !dbg !9183
  %conv = trunc i32 %2 to i8, !dbg !9185
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !9186
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !9186
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !9186
  store i8 %conv, i8* %3, align 1, !dbg !9187
  %4 = load i32, i32* %quantum, align 4, !dbg !9188
  %shr = lshr i32 %4, 8, !dbg !9189
  %conv1 = trunc i32 %shr to i8, !dbg !9190
  %5 = load i8*, i8** %pixels.addr, align 8, !dbg !9191
  %incdec.ptr2 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9191
  store i8* %incdec.ptr2, i8** %pixels.addr, align 8, !dbg !9191
  store i8 %conv1, i8* %5, align 1, !dbg !9192
  %6 = load i32, i32* %quantum, align 4, !dbg !9193
  %shr3 = lshr i32 %6, 16, !dbg !9194
  %conv4 = trunc i32 %shr3 to i8, !dbg !9195
  %7 = load i8*, i8** %pixels.addr, align 8, !dbg !9196
  %incdec.ptr5 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9196
  store i8* %incdec.ptr5, i8** %pixels.addr, align 8, !dbg !9196
  store i8 %conv4, i8* %7, align 1, !dbg !9197
  %8 = load i32, i32* %quantum, align 4, !dbg !9198
  %shr6 = lshr i32 %8, 24, !dbg !9199
  %conv7 = trunc i32 %shr6 to i8, !dbg !9200
  %9 = load i8*, i8** %pixels.addr, align 8, !dbg !9201
  %incdec.ptr8 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9201
  store i8* %incdec.ptr8, i8** %pixels.addr, align 8, !dbg !9201
  store i8 %conv7, i8* %9, align 1, !dbg !9202
  %10 = load i8*, i8** %pixels.addr, align 8, !dbg !9203
  store i8* %10, i8** %retval, align 8, !dbg !9204
  br label %return, !dbg !9204

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %quantum, align 4, !dbg !9205
  %shr9 = lshr i32 %11, 24, !dbg !9206
  %conv10 = trunc i32 %shr9 to i8, !dbg !9207
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !9208
  %incdec.ptr11 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !9208
  store i8* %incdec.ptr11, i8** %pixels.addr, align 8, !dbg !9208
  store i8 %conv10, i8* %12, align 1, !dbg !9209
  %13 = load i32, i32* %quantum, align 4, !dbg !9210
  %shr12 = lshr i32 %13, 16, !dbg !9211
  %conv13 = trunc i32 %shr12 to i8, !dbg !9212
  %14 = load i8*, i8** %pixels.addr, align 8, !dbg !9213
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9213
  store i8* %incdec.ptr14, i8** %pixels.addr, align 8, !dbg !9213
  store i8 %conv13, i8* %14, align 1, !dbg !9214
  %15 = load i32, i32* %quantum, align 4, !dbg !9215
  %shr15 = lshr i32 %15, 8, !dbg !9216
  %conv16 = trunc i32 %shr15 to i8, !dbg !9217
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !9218
  %incdec.ptr17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !9218
  store i8* %incdec.ptr17, i8** %pixels.addr, align 8, !dbg !9218
  store i8 %conv16, i8* %16, align 1, !dbg !9219
  %17 = load i32, i32* %quantum, align 4, !dbg !9220
  %conv18 = trunc i32 %17 to i8, !dbg !9221
  %18 = load i8*, i8** %pixels.addr, align 8, !dbg !9222
  %incdec.ptr19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9222
  store i8* %incdec.ptr19, i8** %pixels.addr, align 8, !dbg !9222
  store i8 %conv18, i8* %18, align 1, !dbg !9223
  %19 = load i8*, i8** %pixels.addr, align 8, !dbg !9224
  store i8* %19, i8** %retval, align 8, !dbg !9225
  br label %return, !dbg !9225

return:                                           ; preds = %if.end, %if.then
  %20 = load i8*, i8** %retval, align 8, !dbg !9226
  ret i8* %20, !dbg !9226
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopDoublePixel(%struct._QuantumInfo* %quantum_info, double %pixel, i8* noalias %pixels) #0 !dbg !9227 {
entry:
  %retval = alloca i8*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixel.addr = alloca double, align 8
  %pixels.addr = alloca i8*, align 8
  %p = alloca double*, align 8
  %quantum = alloca [8 x i8], align 1
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  store double %pixel, double* %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata double* %pixel.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata double** %p, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata [8 x i8]* %quantum, metadata !9239, metadata !DIExpression()), !dbg !9243
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !9244
  %call = call i8* @ResetMagickMemory(i8* %arraydecay, i32 0, i64 8), !dbg !9245
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !9246
  %0 = bitcast i8* %arraydecay1 to double*, !dbg !9247
  store double* %0, double** %p, align 8, !dbg !9248
  %1 = load double, double* %pixel.addr, align 8, !dbg !9249
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9250
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 14, !dbg !9251
  %inverse_scale = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 0, !dbg !9252
  %3 = load double, double* %inverse_scale, align 8, !dbg !9252
  %mul = fmul double %1, %3, !dbg !9253
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9254
  %minimum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 3, !dbg !9255
  %5 = load double, double* %minimum, align 8, !dbg !9255
  %add = fadd double %mul, %5, !dbg !9256
  %6 = load double*, double** %p, align 8, !dbg !9257
  store double %add, double* %6, align 8, !dbg !9258
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9259
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 13, !dbg !9261
  %8 = load i32, i32* %endian, align 8, !dbg !9261
  %cmp = icmp eq i32 %8, 1, !dbg !9262
  br i1 %cmp, label %if.then, label %if.end, !dbg !9263

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !9264
  %9 = load i8, i8* %arrayidx, align 1, !dbg !9264
  %10 = load i8*, i8** %pixels.addr, align 8, !dbg !9266
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9266
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !9266
  store i8 %9, i8* %10, align 1, !dbg !9267
  %arrayidx2 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 1, !dbg !9268
  %11 = load i8, i8* %arrayidx2, align 1, !dbg !9268
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !9269
  %incdec.ptr3 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !9269
  store i8* %incdec.ptr3, i8** %pixels.addr, align 8, !dbg !9269
  store i8 %11, i8* %12, align 1, !dbg !9270
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 2, !dbg !9271
  %13 = load i8, i8* %arrayidx4, align 1, !dbg !9271
  %14 = load i8*, i8** %pixels.addr, align 8, !dbg !9272
  %incdec.ptr5 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9272
  store i8* %incdec.ptr5, i8** %pixels.addr, align 8, !dbg !9272
  store i8 %13, i8* %14, align 1, !dbg !9273
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 3, !dbg !9274
  %15 = load i8, i8* %arrayidx6, align 1, !dbg !9274
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !9275
  %incdec.ptr7 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !9275
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !9275
  store i8 %15, i8* %16, align 1, !dbg !9276
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 4, !dbg !9277
  %17 = load i8, i8* %arrayidx8, align 1, !dbg !9277
  %18 = load i8*, i8** %pixels.addr, align 8, !dbg !9278
  %incdec.ptr9 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9278
  store i8* %incdec.ptr9, i8** %pixels.addr, align 8, !dbg !9278
  store i8 %17, i8* %18, align 1, !dbg !9279
  %arrayidx10 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 5, !dbg !9280
  %19 = load i8, i8* %arrayidx10, align 1, !dbg !9280
  %20 = load i8*, i8** %pixels.addr, align 8, !dbg !9281
  %incdec.ptr11 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !9281
  store i8* %incdec.ptr11, i8** %pixels.addr, align 8, !dbg !9281
  store i8 %19, i8* %20, align 1, !dbg !9282
  %arrayidx12 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 6, !dbg !9283
  %21 = load i8, i8* %arrayidx12, align 1, !dbg !9283
  %22 = load i8*, i8** %pixels.addr, align 8, !dbg !9284
  %incdec.ptr13 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !9284
  store i8* %incdec.ptr13, i8** %pixels.addr, align 8, !dbg !9284
  store i8 %21, i8* %22, align 1, !dbg !9285
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 7, !dbg !9286
  %23 = load i8, i8* %arrayidx14, align 1, !dbg !9286
  %24 = load i8*, i8** %pixels.addr, align 8, !dbg !9287
  %incdec.ptr15 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !9287
  store i8* %incdec.ptr15, i8** %pixels.addr, align 8, !dbg !9287
  store i8 %23, i8* %24, align 1, !dbg !9288
  %25 = load i8*, i8** %pixels.addr, align 8, !dbg !9289
  store i8* %25, i8** %retval, align 8, !dbg !9290
  br label %return, !dbg !9290

if.end:                                           ; preds = %entry
  %arrayidx16 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 7, !dbg !9291
  %26 = load i8, i8* %arrayidx16, align 1, !dbg !9291
  %27 = load i8*, i8** %pixels.addr, align 8, !dbg !9292
  %incdec.ptr17 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !9292
  store i8* %incdec.ptr17, i8** %pixels.addr, align 8, !dbg !9292
  store i8 %26, i8* %27, align 1, !dbg !9293
  %arrayidx18 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 6, !dbg !9294
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !9294
  %29 = load i8*, i8** %pixels.addr, align 8, !dbg !9295
  %incdec.ptr19 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !9295
  store i8* %incdec.ptr19, i8** %pixels.addr, align 8, !dbg !9295
  store i8 %28, i8* %29, align 1, !dbg !9296
  %arrayidx20 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 5, !dbg !9297
  %30 = load i8, i8* %arrayidx20, align 1, !dbg !9297
  %31 = load i8*, i8** %pixels.addr, align 8, !dbg !9298
  %incdec.ptr21 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !9298
  store i8* %incdec.ptr21, i8** %pixels.addr, align 8, !dbg !9298
  store i8 %30, i8* %31, align 1, !dbg !9299
  %arrayidx22 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 4, !dbg !9300
  %32 = load i8, i8* %arrayidx22, align 1, !dbg !9300
  %33 = load i8*, i8** %pixels.addr, align 8, !dbg !9301
  %incdec.ptr23 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !9301
  store i8* %incdec.ptr23, i8** %pixels.addr, align 8, !dbg !9301
  store i8 %32, i8* %33, align 1, !dbg !9302
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 3, !dbg !9303
  %34 = load i8, i8* %arrayidx24, align 1, !dbg !9303
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !9304
  %incdec.ptr25 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !9304
  store i8* %incdec.ptr25, i8** %pixels.addr, align 8, !dbg !9304
  store i8 %34, i8* %35, align 1, !dbg !9305
  %arrayidx26 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 2, !dbg !9306
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !9306
  %37 = load i8*, i8** %pixels.addr, align 8, !dbg !9307
  %incdec.ptr27 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !9307
  store i8* %incdec.ptr27, i8** %pixels.addr, align 8, !dbg !9307
  store i8 %36, i8* %37, align 1, !dbg !9308
  %arrayidx28 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 1, !dbg !9309
  %38 = load i8, i8* %arrayidx28, align 1, !dbg !9309
  %39 = load i8*, i8** %pixels.addr, align 8, !dbg !9310
  %incdec.ptr29 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !9310
  store i8* %incdec.ptr29, i8** %pixels.addr, align 8, !dbg !9310
  store i8 %38, i8* %39, align 1, !dbg !9311
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !9312
  %40 = load i8, i8* %arrayidx30, align 1, !dbg !9312
  %41 = load i8*, i8** %pixels.addr, align 8, !dbg !9313
  %incdec.ptr31 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !9313
  store i8* %incdec.ptr31, i8** %pixels.addr, align 8, !dbg !9313
  store i8 %40, i8* %41, align 1, !dbg !9314
  %42 = load i8*, i8** %pixels.addr, align 8, !dbg !9315
  store i8* %42, i8** %retval, align 8, !dbg !9316
  br label %return, !dbg !9316

return:                                           ; preds = %if.end, %if.then
  %43 = load i8*, i8** %retval, align 8, !dbg !9317
  ret i8* %43, !dbg !9317
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @GetQuantumRange(i64 %depth) #0 !dbg !9318 {
entry:
  %depth.addr = alloca i64, align 8
  %one = alloca i64, align 8
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.declare(metadata i64* %one, metadata !9324, metadata !DIExpression()), !dbg !9325
  store i64 1, i64* %one, align 8, !dbg !9326
  %0 = load i64, i64* %one, align 8, !dbg !9327
  %1 = load i64, i64* %depth.addr, align 8, !dbg !9328
  %sub = sub i64 %1, 1, !dbg !9329
  %shl = shl i64 %0, %sub, !dbg !9330
  %2 = load i64, i64* %one, align 8, !dbg !9331
  %3 = load i64, i64* %depth.addr, align 8, !dbg !9332
  %sub1 = sub i64 %3, 1, !dbg !9333
  %shl2 = shl i64 %2, %sub1, !dbg !9334
  %sub3 = sub i64 %shl2, 1, !dbg !9335
  %add = add i64 %shl, %sub3, !dbg !9336
  ret i64 %add, !dbg !9337
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopQuantumPixel(%struct._QuantumInfo* %quantum_info, i64 %pixel, i8* noalias %pixels) #0 !dbg !9338 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixel.addr = alloca i64, align 8
  %pixels.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %quantum_bits = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !9342, metadata !DIExpression()), !dbg !9343
  store i64 %pixel, i64* %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pixel.addr, metadata !9344, metadata !DIExpression()), !dbg !9345
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9346, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9348, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.declare(metadata i64* %quantum_bits, metadata !9350, metadata !DIExpression()), !dbg !9351
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9352
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 14, !dbg !9354
  %bits = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 2, !dbg !9355
  %1 = load i64, i64* %bits, align 8, !dbg !9355
  %cmp = icmp eq i64 %1, 0, !dbg !9356
  br i1 %cmp, label %if.then, label %if.end, !dbg !9357

if.then:                                          ; preds = %entry
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9358
  %state1 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 14, !dbg !9359
  %bits2 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state1, i32 0, i32 2, !dbg !9360
  store i64 8, i64* %bits2, align 8, !dbg !9361
  br label %if.end, !dbg !9358

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9362
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %3, i32 0, i32 0, !dbg !9364
  %4 = load i64, i64* %depth, align 8, !dbg !9364
  store i64 %4, i64* %i, align 8, !dbg !9365
  br label %for.cond, !dbg !9366

for.cond:                                         ; preds = %if.end33, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !9367
  %cmp3 = icmp sgt i64 %5, 0, !dbg !9369
  br i1 %cmp3, label %for.body, label %for.end, !dbg !9370

for.body:                                         ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !9371
  store i64 %6, i64* %quantum_bits, align 8, !dbg !9373
  %7 = load i64, i64* %quantum_bits, align 8, !dbg !9374
  %8 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9376
  %state4 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %8, i32 0, i32 14, !dbg !9377
  %bits5 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state4, i32 0, i32 2, !dbg !9378
  %9 = load i64, i64* %bits5, align 8, !dbg !9378
  %cmp6 = icmp ugt i64 %7, %9, !dbg !9379
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9380

if.then7:                                         ; preds = %for.body
  %10 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9381
  %state8 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %10, i32 0, i32 14, !dbg !9382
  %bits9 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state8, i32 0, i32 2, !dbg !9383
  %11 = load i64, i64* %bits9, align 8, !dbg !9383
  store i64 %11, i64* %quantum_bits, align 8, !dbg !9384
  br label %if.end10, !dbg !9385

if.end10:                                         ; preds = %if.then7, %for.body
  %12 = load i64, i64* %quantum_bits, align 8, !dbg !9386
  %13 = load i64, i64* %i, align 8, !dbg !9387
  %sub = sub nsw i64 %13, %12, !dbg !9387
  store i64 %sub, i64* %i, align 8, !dbg !9387
  %14 = load i64, i64* %i, align 8, !dbg !9388
  %cmp11 = icmp slt i64 %14, 0, !dbg !9390
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9391

if.then12:                                        ; preds = %if.end10
  store i64 0, i64* %i, align 8, !dbg !9392
  br label %if.end13, !dbg !9393

if.end13:                                         ; preds = %if.then12, %if.end10
  %15 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9394
  %state14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %15, i32 0, i32 14, !dbg !9396
  %bits15 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state14, i32 0, i32 2, !dbg !9397
  %16 = load i64, i64* %bits15, align 8, !dbg !9397
  %cmp16 = icmp eq i64 %16, 8, !dbg !9398
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9399

if.then17:                                        ; preds = %if.end13
  %17 = load i8*, i8** %pixels.addr, align 8, !dbg !9400
  store i8 0, i8* %17, align 1, !dbg !9401
  br label %if.end18, !dbg !9402

if.end18:                                         ; preds = %if.then17, %if.end13
  %18 = load i64, i64* %quantum_bits, align 8, !dbg !9403
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9404
  %state19 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 14, !dbg !9405
  %bits20 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state19, i32 0, i32 2, !dbg !9406
  %20 = load i64, i64* %bits20, align 8, !dbg !9407
  %sub21 = sub i64 %20, %18, !dbg !9407
  store i64 %sub21, i64* %bits20, align 8, !dbg !9407
  %21 = load i64, i64* %pixel.addr, align 8, !dbg !9408
  %22 = load i64, i64* %i, align 8, !dbg !9409
  %shr = lshr i64 %21, %22, !dbg !9410
  %23 = load i64, i64* %quantum_bits, align 8, !dbg !9411
  %shl = shl i64 -1, %23, !dbg !9412
  %neg = xor i64 %shl, -1, !dbg !9413
  %and = and i64 %shr, %neg, !dbg !9414
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9415
  %state22 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 14, !dbg !9416
  %bits23 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state22, i32 0, i32 2, !dbg !9417
  %25 = load i64, i64* %bits23, align 8, !dbg !9417
  %shl24 = shl i64 %and, %25, !dbg !9418
  %26 = load i8*, i8** %pixels.addr, align 8, !dbg !9419
  %27 = load i8, i8* %26, align 1, !dbg !9420
  %conv = zext i8 %27 to i64, !dbg !9420
  %or = or i64 %conv, %shl24, !dbg !9420
  %conv25 = trunc i64 %or to i8, !dbg !9420
  store i8 %conv25, i8* %26, align 1, !dbg !9420
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9421
  %state26 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 14, !dbg !9423
  %bits27 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state26, i32 0, i32 2, !dbg !9424
  %29 = load i64, i64* %bits27, align 8, !dbg !9424
  %cmp28 = icmp eq i64 %29, 0, !dbg !9425
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !9426

if.then30:                                        ; preds = %if.end18
  %30 = load i8*, i8** %pixels.addr, align 8, !dbg !9427
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !9427
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !9427
  %31 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9429
  %state31 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %31, i32 0, i32 14, !dbg !9430
  %bits32 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state31, i32 0, i32 2, !dbg !9431
  store i64 8, i64* %bits32, align 8, !dbg !9432
  br label %if.end33, !dbg !9433

if.end33:                                         ; preds = %if.then30, %if.end18
  br label %for.cond, !dbg !9434, !llvm.loop !9435

for.end:                                          ; preds = %for.cond
  %32 = load i8*, i8** %pixels.addr, align 8, !dbg !9437
  ret i8* %32, !dbg !9438
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @ScaleQuantumToAny(i16 zeroext %quantum, i64 %range) #0 !dbg !9439 {
entry:
  %quantum.addr = alloca i16, align 2
  %range.addr = alloca i64, align 8
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !9442, metadata !DIExpression()), !dbg !9443
  store i64 %range, i64* %range.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %range.addr, metadata !9444, metadata !DIExpression()), !dbg !9445
  %0 = load i64, i64* %range.addr, align 8, !dbg !9446
  %conv = uitofp i64 %0 to float, !dbg !9447
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !9448
  %conv1 = zext i16 %1 to i32, !dbg !9448
  %conv2 = sitofp i32 %conv1 to float, !dbg !9448
  %mul = fmul float %conv, %conv2, !dbg !9449
  %div = fdiv float %mul, 6.553500e+04, !dbg !9450
  %conv3 = fpext float %div to double, !dbg !9451
  %add = fadd double %conv3, 5.000000e-01, !dbg !9452
  %conv4 = fptoui double %add to i64, !dbg !9453
  ret i64 %conv4, !dbg !9454
}

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @PopQuantumLongPixel(%struct._QuantumInfo* %quantum_info, i64 %pixel, i8* noalias %pixels) #0 !dbg !9455 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixel.addr = alloca i64, align 8
  %pixels.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %quantum_bits = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  store i64 %pixel, i64* %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pixel.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9462, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9464, metadata !DIExpression()), !dbg !9465
  call void @llvm.dbg.declare(metadata i64* %quantum_bits, metadata !9466, metadata !DIExpression()), !dbg !9467
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9468
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 14, !dbg !9470
  %bits = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 2, !dbg !9471
  %1 = load i64, i64* %bits, align 8, !dbg !9471
  %cmp = icmp eq i64 %1, 0, !dbg !9472
  br i1 %cmp, label %if.then, label %if.end, !dbg !9473

if.then:                                          ; preds = %entry
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9474
  %state1 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 14, !dbg !9475
  %bits2 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state1, i32 0, i32 2, !dbg !9476
  store i64 32, i64* %bits2, align 8, !dbg !9477
  br label %if.end, !dbg !9474

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9478
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %3, i32 0, i32 0, !dbg !9480
  %4 = load i64, i64* %depth, align 8, !dbg !9480
  store i64 %4, i64* %i, align 8, !dbg !9481
  br label %for.cond, !dbg !9482

for.cond:                                         ; preds = %if.end35, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !9483
  %cmp3 = icmp sgt i64 %5, 0, !dbg !9485
  br i1 %cmp3, label %for.body, label %for.end, !dbg !9486

for.body:                                         ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !9487
  store i64 %6, i64* %quantum_bits, align 8, !dbg !9489
  %7 = load i64, i64* %quantum_bits, align 8, !dbg !9490
  %8 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9492
  %state4 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %8, i32 0, i32 14, !dbg !9493
  %bits5 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state4, i32 0, i32 2, !dbg !9494
  %9 = load i64, i64* %bits5, align 8, !dbg !9494
  %cmp6 = icmp ugt i64 %7, %9, !dbg !9495
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9496

if.then7:                                         ; preds = %for.body
  %10 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9497
  %state8 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %10, i32 0, i32 14, !dbg !9498
  %bits9 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state8, i32 0, i32 2, !dbg !9499
  %11 = load i64, i64* %bits9, align 8, !dbg !9499
  store i64 %11, i64* %quantum_bits, align 8, !dbg !9500
  br label %if.end10, !dbg !9501

if.end10:                                         ; preds = %if.then7, %for.body
  %12 = load i64, i64* %pixel.addr, align 8, !dbg !9502
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9503
  %depth11 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 0, !dbg !9504
  %14 = load i64, i64* %depth11, align 8, !dbg !9504
  %15 = load i64, i64* %i, align 8, !dbg !9505
  %sub = sub i64 %14, %15, !dbg !9506
  %shr = lshr i64 %12, %sub, !dbg !9507
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9508
  %state12 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 14, !dbg !9509
  %mask = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state12, i32 0, i32 3, !dbg !9510
  %17 = load i32*, i32** %mask, align 8, !dbg !9510
  %18 = load i64, i64* %quantum_bits, align 8, !dbg !9511
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 %18, !dbg !9508
  %19 = load i32, i32* %arrayidx, align 4, !dbg !9508
  %conv = zext i32 %19 to i64, !dbg !9508
  %and = and i64 %shr, %conv, !dbg !9512
  %20 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9513
  %state13 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %20, i32 0, i32 14, !dbg !9514
  %bits14 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state13, i32 0, i32 2, !dbg !9515
  %21 = load i64, i64* %bits14, align 8, !dbg !9515
  %sub15 = sub i64 32, %21, !dbg !9516
  %shl = shl i64 %and, %sub15, !dbg !9517
  %22 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9518
  %state16 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %22, i32 0, i32 14, !dbg !9519
  %pixel17 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state16, i32 0, i32 1, !dbg !9520
  %23 = load i32, i32* %pixel17, align 8, !dbg !9521
  %conv18 = zext i32 %23 to i64, !dbg !9521
  %or = or i64 %conv18, %shl, !dbg !9521
  %conv19 = trunc i64 %or to i32, !dbg !9521
  store i32 %conv19, i32* %pixel17, align 8, !dbg !9521
  %24 = load i64, i64* %quantum_bits, align 8, !dbg !9522
  %25 = load i64, i64* %i, align 8, !dbg !9523
  %sub20 = sub nsw i64 %25, %24, !dbg !9523
  store i64 %sub20, i64* %i, align 8, !dbg !9523
  %26 = load i64, i64* %quantum_bits, align 8, !dbg !9524
  %27 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9525
  %state21 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %27, i32 0, i32 14, !dbg !9526
  %bits22 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state21, i32 0, i32 2, !dbg !9527
  %28 = load i64, i64* %bits22, align 8, !dbg !9528
  %sub23 = sub i64 %28, %26, !dbg !9528
  store i64 %sub23, i64* %bits22, align 8, !dbg !9528
  %29 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9529
  %state24 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %29, i32 0, i32 14, !dbg !9531
  %bits25 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state24, i32 0, i32 2, !dbg !9532
  %30 = load i64, i64* %bits25, align 8, !dbg !9532
  %cmp26 = icmp eq i64 %30, 0, !dbg !9533
  br i1 %cmp26, label %if.then28, label %if.end35, !dbg !9534

if.then28:                                        ; preds = %if.end10
  %31 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9535
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %31, i32 0, i32 13, !dbg !9537
  %32 = load i32, i32* %endian, align 8, !dbg !9537
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9538
  %state29 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 14, !dbg !9539
  %pixel30 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state29, i32 0, i32 1, !dbg !9540
  %34 = load i32, i32* %pixel30, align 8, !dbg !9540
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !9541
  %call = call i8* @PopLongPixel(i32 %32, i32 %34, i8* %35), !dbg !9542
  store i8* %call, i8** %pixels.addr, align 8, !dbg !9543
  %36 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9544
  %state31 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %36, i32 0, i32 14, !dbg !9545
  %pixel32 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state31, i32 0, i32 1, !dbg !9546
  store i32 0, i32* %pixel32, align 8, !dbg !9547
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !9548
  %state33 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 14, !dbg !9549
  %bits34 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state33, i32 0, i32 2, !dbg !9550
  store i64 32, i64* %bits34, align 8, !dbg !9551
  br label %if.end35, !dbg !9552

if.end35:                                         ; preds = %if.then28, %if.end10
  br label %for.cond, !dbg !9553, !llvm.loop !9554

for.end:                                          ; preds = %for.cond
  %38 = load i8*, i8** %pixels.addr, align 8, !dbg !9556
  ret i8* %38, !dbg !9557
}

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal float @GetPixelLuma(%struct._Image* noalias %image, %struct._PixelPacket* noalias %pixel) #0 !dbg !9558 {
entry:
  %retval = alloca float, align 4
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9567
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !9569
  %1 = load i32, i32* %colorspace, align 4, !dbg !9569
  %cmp = icmp eq i32 %1, 2, !dbg !9570
  br i1 %cmp, label %if.then, label %if.end, !dbg !9571

if.then:                                          ; preds = %entry
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !9572
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !9573
  %3 = load i16, i16* %red, align 2, !dbg !9573
  %conv = uitofp i16 %3 to float, !dbg !9574
  store float %conv, float* %retval, align 4, !dbg !9575
  br label %return, !dbg !9575

if.end:                                           ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !9576
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !9577
  %5 = load i16, i16* %red1, align 2, !dbg !9577
  %conv2 = zext i16 %5 to i32, !dbg !9576
  %conv3 = sitofp i32 %conv2 to float, !dbg !9576
  %mul = fmul float 0x3FCB384FE0000000, %conv3, !dbg !9578
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !9579
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !9580
  %7 = load i16, i16* %green, align 2, !dbg !9580
  %conv4 = zext i16 %7 to i32, !dbg !9579
  %conv5 = sitofp i32 %conv4 to float, !dbg !9579
  %mul6 = fmul float 0x3FE6E29300000000, %conv5, !dbg !9581
  %add = fadd float %mul, %mul6, !dbg !9582
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !9583
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !9584
  %9 = load i16, i16* %blue, align 2, !dbg !9584
  %conv7 = zext i16 %9 to i32, !dbg !9583
  %conv8 = sitofp i32 %conv7 to float, !dbg !9583
  %mul9 = fmul float 0x3FB27AC820000000, %conv8, !dbg !9585
  %add10 = fadd float %add, %mul9, !dbg !9586
  store float %add10, float* %retval, align 4, !dbg !9587
  br label %return, !dbg !9587

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !9588
  ret float %10, !dbg !9588
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!512, !513, !514}
!llvm.ident = !{!515}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !434, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/quantum-export.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !374, !379, !409}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 44, baseType: !5, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIEnumerator(name: "UndefinedQuantumFormat", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "FloatingPointQuantumFormat", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "SignedQuantumFormat", value: 2, isUnsigned: true)
!373 = !DIEnumerator(name: "UnsignedQuantumFormat", value: 3, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 37, baseType: !5, size: 32, elements: !375)
!375 = !{!376, !377, !378}
!376 = !DIEnumerator(name: "UndefinedQuantumAlpha", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "AssociatedQuantumAlpha", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "DisassociatedQuantumAlpha", value: 2, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 52, baseType: !5, size: 32, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408}
!381 = !DIEnumerator(name: "UndefinedQuantum", value: 0, isUnsigned: true)
!382 = !DIEnumerator(name: "AlphaQuantum", value: 1, isUnsigned: true)
!383 = !DIEnumerator(name: "BlackQuantum", value: 2, isUnsigned: true)
!384 = !DIEnumerator(name: "BlueQuantum", value: 3, isUnsigned: true)
!385 = !DIEnumerator(name: "CMYKAQuantum", value: 4, isUnsigned: true)
!386 = !DIEnumerator(name: "CMYKQuantum", value: 5, isUnsigned: true)
!387 = !DIEnumerator(name: "CyanQuantum", value: 6, isUnsigned: true)
!388 = !DIEnumerator(name: "GrayAlphaQuantum", value: 7, isUnsigned: true)
!389 = !DIEnumerator(name: "GrayQuantum", value: 8, isUnsigned: true)
!390 = !DIEnumerator(name: "GreenQuantum", value: 9, isUnsigned: true)
!391 = !DIEnumerator(name: "IndexAlphaQuantum", value: 10, isUnsigned: true)
!392 = !DIEnumerator(name: "IndexQuantum", value: 11, isUnsigned: true)
!393 = !DIEnumerator(name: "MagentaQuantum", value: 12, isUnsigned: true)
!394 = !DIEnumerator(name: "OpacityQuantum", value: 13, isUnsigned: true)
!395 = !DIEnumerator(name: "RedQuantum", value: 14, isUnsigned: true)
!396 = !DIEnumerator(name: "RGBAQuantum", value: 15, isUnsigned: true)
!397 = !DIEnumerator(name: "BGRAQuantum", value: 16, isUnsigned: true)
!398 = !DIEnumerator(name: "RGBOQuantum", value: 17, isUnsigned: true)
!399 = !DIEnumerator(name: "RGBQuantum", value: 18, isUnsigned: true)
!400 = !DIEnumerator(name: "YellowQuantum", value: 19, isUnsigned: true)
!401 = !DIEnumerator(name: "GrayPadQuantum", value: 20, isUnsigned: true)
!402 = !DIEnumerator(name: "RGBPadQuantum", value: 21, isUnsigned: true)
!403 = !DIEnumerator(name: "CbYCrYQuantum", value: 22, isUnsigned: true)
!404 = !DIEnumerator(name: "CbYCrQuantum", value: 23, isUnsigned: true)
!405 = !DIEnumerator(name: "CbYCrAQuantum", value: 24, isUnsigned: true)
!406 = !DIEnumerator(name: "CMYKOQuantum", value: 25, isUnsigned: true)
!407 = !DIEnumerator(name: "BGRQuantum", value: 26, isUnsigned: true)
!408 = !DIEnumerator(name: "BGROQuantum", value: 27, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !410, line: 34, baseType: !5, size: 32, elements: !411)
!410 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!411 = !{!412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433}
!412 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!413 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!414 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!415 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!416 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!417 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!418 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!419 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!421 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!422 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!423 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!424 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!425 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!426 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!427 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!428 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!429 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!430 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!431 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!432 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!433 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!434 = !{!435, !436, !438, !439, !443, !453, !458, !448, !459, !501, !502, !437, !503, !449, !5, !504, !505, !506, !465, !508, !509}
!435 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !441, line: 50, baseType: !442)
!441 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!442 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !446)
!446 = !{!447, !450, !451, !452}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !445, file: !326, line: 143, baseType: !448, size: 16)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !449)
!449 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !445, file: !326, line: 144, baseType: !448, size: 16, offset: 16)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !445, file: !326, line: 145, baseType: !448, size: 16, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !445, file: !326, line: 146, baseType: !448, size: 16, offset: 48)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !454, line: 77, baseType: !455)
!454 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !456, line: 193, baseType: !457)
!456 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!457 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!458 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumInfo", file: !147, line: 85, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumInfo", file: !462, line: 42, size: 1216, elements: !463)
!462 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!463 = !{!464, !467, !468, !470, !471, !472, !473, !474, !476, !477, !479, !480, !482, !483, !485, !495, !500}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !461, file: !462, line: 45, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !466, line: 46, baseType: !435)
!466 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!467 = !DIDerivedType(tag: DW_TAG_member, name: "quantum", scope: !461, file: !462, line: 46, baseType: !465, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !461, file: !462, line: 49, baseType: !469, size: 32, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumFormatType", file: !147, line: 50, baseType: !368)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !461, file: !462, line: 52, baseType: !458, size: 64, offset: 192)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !461, file: !462, line: 53, baseType: !458, size: 64, offset: 256)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !461, file: !462, line: 54, baseType: !458, size: 64, offset: 320)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !461, file: !462, line: 57, baseType: !465, size: 64, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "min_is_white", scope: !461, file: !462, line: 60, baseType: !475, size: 32, offset: 448)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "pack", scope: !461, file: !462, line: 61, baseType: !475, size: 32, offset: 480)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_type", scope: !461, file: !462, line: 64, baseType: !478, size: 32, offset: 512)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAlphaType", file: !147, line: 42, baseType: !374)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "number_threads", scope: !461, file: !462, line: 67, baseType: !465, size: 64, offset: 576)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !461, file: !462, line: 70, baseType: !481, size: 64, offset: 640)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !461, file: !462, line: 73, baseType: !465, size: 64, offset: 704)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !461, file: !462, line: 76, baseType: !484, size: 32, offset: 768)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !461, file: !462, line: 79, baseType: !486, size: 256, offset: 832)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumState", file: !462, line: 40, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumState", file: !462, line: 27, size: 256, elements: !488)
!488 = !{!489, !490, !491, !492}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "inverse_scale", scope: !487, file: !462, line: 30, baseType: !458, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !487, file: !462, line: 33, baseType: !5, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !487, file: !462, line: 36, baseType: !465, size: 64, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !487, file: !462, line: 39, baseType: !493, size: 64, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !461, file: !462, line: 82, baseType: !496, size: 64, offset: 1088)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !498, line: 26, baseType: !499)
!498 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !498, line: 25, flags: DIFlagFwdDecl)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !461, file: !462, line: 85, baseType: !465, size: 64, offset: 1152)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !502)
!502 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!503 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !507)
!507 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAny", file: !4, line: 170, baseType: !506)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !448)
!512 = !{i32 7, !"Dwarf Version", i32 4}
!513 = !{i32 2, !"Debug Info Version", i32 3}
!514 = !{i32 1, !"wchar_size", i32 4}
!515 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!516 = distinct !DISubprogram(name: "ExportQuantumPixels", scope: !1, file: !1, line: 3165, type: !517, scopeLine: 3169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!517 = !DISubroutineType(types: !518)
!518 = !{!465, !519, !711, !713, !715, !717, !718}
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !523)
!523 = !{!524, !526, !528, !530, !531, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !558, !560, !561, !563, !566, !567, !568, !569, !570, !571, !579, !580, !581, !582, !583, !584, !586, !588, !589, !591, !593, !595, !597, !598, !599, !600, !601, !602, !603, !611, !626, !638, !639, !640, !641, !645, !649, !653, !654, !655, !656, !657, !670, !671, !673, !674, !682, !683, !685, !686, !687, !688, !689, !690, !692, !693, !694, !695, !696, !697, !698, !700, !701, !702, !703, !704, !708, !710}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !522, file: !73, line: 153, baseType: !525, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !522, file: !73, line: 156, baseType: !527, size: 32, offset: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !522, file: !73, line: 159, baseType: !529, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !522, file: !73, line: 162, baseType: !465, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !522, file: !73, line: 165, baseType: !532, size: 32, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !522, file: !73, line: 168, baseType: !475, size: 32, offset: 224)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !522, file: !73, line: 169, baseType: !475, size: 32, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !522, file: !73, line: 172, baseType: !465, size: 64, offset: 320)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !522, file: !73, line: 173, baseType: !465, size: 64, offset: 384)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !522, file: !73, line: 174, baseType: !465, size: 64, offset: 448)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !522, file: !73, line: 175, baseType: !465, size: 64, offset: 512)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !522, file: !73, line: 178, baseType: !443, size: 64, offset: 576)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !522, file: !73, line: 179, baseType: !444, size: 64, offset: 640)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !522, file: !73, line: 180, baseType: !444, size: 64, offset: 704)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !522, file: !73, line: 181, baseType: !444, size: 64, offset: 768)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !522, file: !73, line: 184, baseType: !458, size: 64, offset: 832)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !522, file: !73, line: 187, baseType: !545, size: 768, offset: 896)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !547)
!547 = !{!548, !555, !556, !557}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !546, file: !73, line: 124, baseType: !549, size: 192)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !551)
!551 = !{!552, !553, !554}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !550, file: !73, line: 98, baseType: !458, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !550, file: !73, line: 99, baseType: !458, size: 64, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !550, file: !73, line: 100, baseType: !458, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !546, file: !73, line: 125, baseType: !549, size: 192, offset: 192)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !546, file: !73, line: 126, baseType: !549, size: 192, offset: 384)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !546, file: !73, line: 127, baseType: !549, size: 192, offset: 576)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !522, file: !73, line: 190, baseType: !559, size: 32, offset: 1664)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !522, file: !73, line: 193, baseType: !438, size: 64, offset: 1728)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !522, file: !73, line: 196, baseType: !562, size: 32, offset: 1792)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !522, file: !73, line: 199, baseType: !564, size: 64, offset: 1856)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !522, file: !73, line: 200, baseType: !564, size: 64, offset: 1920)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !522, file: !73, line: 201, baseType: !564, size: 64, offset: 1984)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !522, file: !73, line: 204, baseType: !453, size: 64, offset: 2048)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !522, file: !73, line: 207, baseType: !458, size: 64, offset: 2112)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !522, file: !73, line: 208, baseType: !458, size: 64, offset: 2176)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !522, file: !73, line: 211, baseType: !572, size: 256, offset: 2240)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !573)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !574)
!574 = !{!575, !576, !577, !578}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !573, file: !153, line: 124, baseType: !465, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !573, file: !153, line: 125, baseType: !465, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !573, file: !153, line: 128, baseType: !453, size: 64, offset: 128)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !573, file: !153, line: 129, baseType: !453, size: 64, offset: 192)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !522, file: !73, line: 212, baseType: !572, size: 256, offset: 2496)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !522, file: !73, line: 213, baseType: !572, size: 256, offset: 2752)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !522, file: !73, line: 216, baseType: !458, size: 64, offset: 3008)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !522, file: !73, line: 217, baseType: !458, size: 64, offset: 3072)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !522, file: !73, line: 218, baseType: !458, size: 64, offset: 3136)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !522, file: !73, line: 221, baseType: !585, size: 32, offset: 3200)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !522, file: !73, line: 224, baseType: !587, size: 32, offset: 3232)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !522, file: !73, line: 227, baseType: !484, size: 32, offset: 3264)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !522, file: !73, line: 230, baseType: !590, size: 32, offset: 3296)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !522, file: !73, line: 233, baseType: !592, size: 32, offset: 3328)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !522, file: !73, line: 236, baseType: !594, size: 32, offset: 3360)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !522, file: !73, line: 239, baseType: !596, size: 64, offset: 3392)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !522, file: !73, line: 242, baseType: !465, size: 64, offset: 3456)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !522, file: !73, line: 243, baseType: !465, size: 64, offset: 3520)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !522, file: !73, line: 246, baseType: !453, size: 64, offset: 3584)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !522, file: !73, line: 249, baseType: !465, size: 64, offset: 3648)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !522, file: !73, line: 250, baseType: !465, size: 64, offset: 3712)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !522, file: !73, line: 253, baseType: !453, size: 64, offset: 3776)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !522, file: !73, line: 256, baseType: !604, size: 192, offset: 3840)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !605, line: 68, baseType: !606)
!605 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !605, line: 62, size: 192, elements: !607)
!607 = !{!608, !609, !610}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !606, file: !605, line: 65, baseType: !458, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !606, file: !605, line: 66, baseType: !458, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !606, file: !605, line: 67, baseType: !458, size: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !522, file: !73, line: 259, baseType: !612, size: 512, offset: 4032)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !614)
!614 = !{!615, !622, !623, !625}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !613, file: !247, line: 43, baseType: !616, size: 192)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !617)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !618)
!618 = !{!619, !620, !621}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !617, file: !247, line: 35, baseType: !458, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !617, file: !247, line: 36, baseType: !458, size: 64, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !617, file: !247, line: 37, baseType: !458, size: 64, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !613, file: !247, line: 44, baseType: !616, size: 192, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !613, file: !247, line: 47, baseType: !624, size: 32, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !613, file: !247, line: 50, baseType: !465, size: 64, offset: 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !522, file: !73, line: 262, baseType: !627, size: 64, offset: 4544)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !628, line: 26, baseType: !629)
!628 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!475, !632, !634, !637, !438}
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !636)
!636 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !522, file: !73, line: 265, baseType: !438, size: 64, offset: 4608)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !522, file: !73, line: 266, baseType: !438, size: 64, offset: 4672)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !522, file: !73, line: 267, baseType: !438, size: 64, offset: 4736)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !522, file: !73, line: 270, baseType: !642, size: 64, offset: 4800)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !644)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !522, file: !73, line: 273, baseType: !646, size: 64, offset: 4864)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !648)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !522, file: !73, line: 276, baseType: !650, size: 32768, offset: 4928)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 32768, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 4096)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !522, file: !73, line: 277, baseType: !650, size: 32768, offset: 37696)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !522, file: !73, line: 278, baseType: !650, size: 32768, offset: 70464)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !522, file: !73, line: 281, baseType: !465, size: 64, offset: 103232)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !522, file: !73, line: 282, baseType: !465, size: 64, offset: 103296)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !522, file: !73, line: 285, baseType: !658, size: 448, offset: 103360)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !660)
!660 = !{!661, !663, !664, !665, !666, !667, !668, !669}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !659, file: !253, line: 105, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !659, file: !253, line: 108, baseType: !503, size: 32, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !659, file: !253, line: 111, baseType: !564, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !659, file: !253, line: 112, baseType: !564, size: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !659, file: !253, line: 115, baseType: !438, size: 64, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !659, file: !253, line: 118, baseType: !475, size: 32, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !659, file: !253, line: 121, baseType: !496, size: 64, offset: 320)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !659, file: !253, line: 124, baseType: !465, size: 64, offset: 384)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !522, file: !73, line: 288, baseType: !475, size: 32, offset: 103808)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !522, file: !73, line: 291, baseType: !672, size: 64, offset: 103872)
!672 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !453)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !522, file: !73, line: 294, baseType: !496, size: 64, offset: 103936)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !522, file: !73, line: 297, baseType: !675, size: 256, offset: 104000)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !676)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !677)
!677 = !{!678, !679, !680, !681}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !676, file: !89, line: 30, baseType: !564, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !676, file: !89, line: 33, baseType: !465, size: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !676, file: !89, line: 36, baseType: !436, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !676, file: !89, line: 39, baseType: !465, size: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !522, file: !73, line: 298, baseType: !675, size: 256, offset: 104256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !522, file: !73, line: 299, baseType: !684, size: 64, offset: 104512)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !522, file: !73, line: 302, baseType: !465, size: 64, offset: 104576)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !522, file: !73, line: 305, baseType: !465, size: 64, offset: 104640)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !522, file: !73, line: 308, baseType: !596, size: 64, offset: 104704)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !522, file: !73, line: 309, baseType: !596, size: 64, offset: 104768)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !522, file: !73, line: 310, baseType: !596, size: 64, offset: 104832)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !522, file: !73, line: 313, baseType: !691, size: 32, offset: 104896)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !522, file: !73, line: 316, baseType: !475, size: 32, offset: 104928)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !522, file: !73, line: 319, baseType: !444, size: 64, offset: 104960)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !522, file: !73, line: 322, baseType: !596, size: 64, offset: 105024)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !522, file: !73, line: 325, baseType: !572, size: 256, offset: 105088)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !522, file: !73, line: 328, baseType: !438, size: 64, offset: 105344)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !522, file: !73, line: 329, baseType: !438, size: 64, offset: 105408)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !522, file: !73, line: 332, baseType: !699, size: 32, offset: 105472)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !522, file: !73, line: 335, baseType: !475, size: 32, offset: 105504)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !522, file: !73, line: 338, baseType: !506, size: 64, offset: 105536)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !522, file: !73, line: 341, baseType: !475, size: 32, offset: 105600)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !522, file: !73, line: 344, baseType: !465, size: 64, offset: 105664)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !522, file: !73, line: 347, baseType: !705, size: 64, offset: 105728)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !706, line: 7, baseType: !707)
!706 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !456, line: 160, baseType: !457)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !522, file: !73, line: 350, baseType: !709, size: 32, offset: 105792)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !522, file: !73, line: 353, baseType: !465, size: 64, offset: 105856)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !440)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumType", file: !147, line: 82, baseType: !379)
!717 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!719 = !{}
!720 = !DILocalVariable(name: "image", arg: 1, scope: !516, file: !1, line: 3165, type: !519)
!721 = !DILocation(line: 3165, column: 54, scope: !516)
!722 = !DILocalVariable(name: "image_view", arg: 2, scope: !516, file: !1, line: 3166, type: !711)
!723 = !DILocation(line: 3166, column: 20, scope: !516)
!724 = !DILocalVariable(name: "quantum_info", arg: 3, scope: !516, file: !1, line: 3166, type: !713)
!725 = !DILocation(line: 3166, column: 50, scope: !516)
!726 = !DILocalVariable(name: "quantum_type", arg: 4, scope: !516, file: !1, line: 3167, type: !715)
!727 = !DILocation(line: 3167, column: 21, scope: !516)
!728 = !DILocalVariable(name: "pixels", arg: 5, scope: !516, file: !1, line: 3167, type: !717)
!729 = !DILocation(line: 3167, column: 58, scope: !516)
!730 = !DILocalVariable(name: "exception", arg: 6, scope: !516, file: !1, line: 3168, type: !718)
!731 = !DILocation(line: 3168, column: 18, scope: !516)
!732 = !DILocalVariable(name: "alpha", scope: !516, file: !1, line: 3171, type: !501)
!733 = !DILocation(line: 3171, column: 5, scope: !516)
!734 = !DILocalVariable(name: "number_pixels", scope: !516, file: !1, line: 3174, type: !506)
!735 = !DILocation(line: 3174, column: 5, scope: !516)
!736 = !DILocalVariable(name: "indexes", scope: !516, file: !1, line: 3177, type: !737)
!737 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !509)
!738 = !DILocation(line: 3177, column: 15, scope: !516)
!739 = !DILocalVariable(name: "p", scope: !516, file: !1, line: 3180, type: !740)
!740 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !741)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!743 = !DILocation(line: 3180, column: 15, scope: !516)
!744 = !DILocalVariable(name: "x", scope: !516, file: !1, line: 3183, type: !453)
!745 = !DILocation(line: 3183, column: 5, scope: !516)
!746 = !DILocalVariable(name: "q", scope: !516, file: !1, line: 3186, type: !717)
!747 = !DILocation(line: 3186, column: 15, scope: !516)
!748 = !DILocalVariable(name: "extent", scope: !516, file: !1, line: 3189, type: !465)
!749 = !DILocation(line: 3189, column: 5, scope: !516)
!750 = !DILocation(line: 3193, column: 7, scope: !751)
!751 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3193, column: 7)
!752 = !DILocation(line: 3193, column: 14, scope: !751)
!753 = !DILocation(line: 3193, column: 20, scope: !751)
!754 = !DILocation(line: 3193, column: 7, scope: !516)
!755 = !DILocation(line: 3194, column: 61, scope: !751)
!756 = !DILocation(line: 3194, column: 68, scope: !751)
!757 = !DILocation(line: 3194, column: 12, scope: !751)
!758 = !DILocation(line: 3194, column: 5, scope: !751)
!759 = !DILocation(line: 3197, column: 7, scope: !760)
!760 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3197, column: 7)
!761 = !DILocation(line: 3197, column: 14, scope: !760)
!762 = !DILocation(line: 3197, column: 7, scope: !516)
!763 = !DILocation(line: 3198, column: 29, scope: !760)
!764 = !DILocation(line: 3198, column: 12, scope: !760)
!765 = !DILocation(line: 3198, column: 11, scope: !760)
!766 = !DILocation(line: 3198, column: 5, scope: !760)
!767 = !DILocation(line: 3199, column: 7, scope: !768)
!768 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3199, column: 7)
!769 = !DILocation(line: 3199, column: 18, scope: !768)
!770 = !DILocation(line: 3199, column: 7, scope: !516)
!771 = !DILocation(line: 3201, column: 36, scope: !772)
!772 = distinct !DILexicalBlock(scope: !768, file: !1, line: 3200, column: 5)
!773 = !DILocation(line: 3201, column: 21, scope: !772)
!774 = !DILocation(line: 3201, column: 20, scope: !772)
!775 = !DILocation(line: 3202, column: 30, scope: !772)
!776 = !DILocation(line: 3202, column: 9, scope: !772)
!777 = !DILocation(line: 3202, column: 8, scope: !772)
!778 = !DILocation(line: 3203, column: 36, scope: !772)
!779 = !DILocation(line: 3203, column: 15, scope: !772)
!780 = !DILocation(line: 3203, column: 14, scope: !772)
!781 = !DILocation(line: 3204, column: 5, scope: !772)
!782 = !DILocation(line: 3207, column: 40, scope: !783)
!783 = distinct !DILexicalBlock(scope: !768, file: !1, line: 3206, column: 5)
!784 = !DILocation(line: 3207, column: 21, scope: !783)
!785 = !DILocation(line: 3207, column: 20, scope: !783)
!786 = !DILocation(line: 3208, column: 39, scope: !783)
!787 = !DILocation(line: 3208, column: 9, scope: !783)
!788 = !DILocation(line: 3208, column: 8, scope: !783)
!789 = !DILocation(line: 3209, column: 45, scope: !783)
!790 = !DILocation(line: 3209, column: 15, scope: !783)
!791 = !DILocation(line: 3209, column: 14, scope: !783)
!792 = !DILocation(line: 3211, column: 7, scope: !793)
!793 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3211, column: 7)
!794 = !DILocation(line: 3211, column: 21, scope: !793)
!795 = !DILocation(line: 3211, column: 32, scope: !793)
!796 = !DILocation(line: 3211, column: 7, scope: !516)
!797 = !DILocalVariable(name: "q", scope: !798, file: !1, line: 3214, type: !799)
!798 = distinct !DILexicalBlock(scope: !793, file: !1, line: 3212, column: 5)
!799 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!800 = !DILocation(line: 3214, column: 19, scope: !798)
!801 = !DILocation(line: 3219, column: 32, scope: !798)
!802 = !DILocation(line: 3219, column: 9, scope: !798)
!803 = !DILocation(line: 3219, column: 8, scope: !798)
!804 = !DILocation(line: 3220, column: 11, scope: !805)
!805 = distinct !DILexicalBlock(scope: !798, file: !1, line: 3220, column: 11)
!806 = !DILocation(line: 3220, column: 22, scope: !805)
!807 = !DILocation(line: 3220, column: 11, scope: !798)
!808 = !DILocation(line: 3221, column: 57, scope: !805)
!809 = !DILocation(line: 3221, column: 27, scope: !805)
!810 = !DILocation(line: 3221, column: 10, scope: !805)
!811 = !DILocation(line: 3221, column: 9, scope: !805)
!812 = !DILocation(line: 3222, column: 13, scope: !813)
!813 = distinct !DILexicalBlock(scope: !798, file: !1, line: 3222, column: 7)
!814 = !DILocation(line: 3222, column: 12, scope: !813)
!815 = !DILocation(line: 3222, column: 17, scope: !816)
!816 = distinct !DILexicalBlock(scope: !813, file: !1, line: 3222, column: 7)
!817 = !DILocation(line: 3222, column: 31, scope: !816)
!818 = !DILocation(line: 3222, column: 38, scope: !816)
!819 = !DILocation(line: 3222, column: 19, scope: !816)
!820 = !DILocation(line: 3222, column: 7, scope: !813)
!821 = !DILocation(line: 3224, column: 28, scope: !822)
!822 = distinct !DILexicalBlock(scope: !816, file: !1, line: 3223, column: 7)
!823 = !DILocation(line: 3224, column: 27, scope: !822)
!824 = !DILocation(line: 3224, column: 15, scope: !822)
!825 = !DILocation(line: 3224, column: 14, scope: !822)
!826 = !DILocation(line: 3225, column: 9, scope: !822)
!827 = !DILocation(line: 3226, column: 9, scope: !822)
!828 = !DILocation(line: 3227, column: 9, scope: !822)
!829 = !DILocation(line: 3228, column: 10, scope: !822)
!830 = !DILocation(line: 3229, column: 7, scope: !822)
!831 = !DILocation(line: 3222, column: 48, scope: !816)
!832 = !DILocation(line: 3222, column: 7, scope: !816)
!833 = distinct !{!833, !820, !834}
!834 = !DILocation(line: 3229, column: 7, scope: !813)
!835 = !DILocation(line: 3230, column: 5, scope: !798)
!836 = !DILocation(line: 3231, column: 8, scope: !837)
!837 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3231, column: 7)
!838 = !DILocation(line: 3231, column: 21, scope: !837)
!839 = !DILocation(line: 3231, column: 37, scope: !837)
!840 = !DILocation(line: 3231, column: 41, scope: !837)
!841 = !DILocation(line: 3231, column: 54, scope: !837)
!842 = !DILocation(line: 3231, column: 71, scope: !837)
!843 = !DILocation(line: 3232, column: 8, scope: !837)
!844 = !DILocation(line: 3232, column: 21, scope: !837)
!845 = !DILocation(line: 3231, column: 7, scope: !516)
!846 = !DILocalVariable(name: "q", scope: !847, file: !1, line: 3235, type: !799)
!847 = distinct !DILexicalBlock(scope: !837, file: !1, line: 3233, column: 5)
!848 = !DILocation(line: 3235, column: 19, scope: !847)
!849 = !DILocation(line: 3237, column: 32, scope: !847)
!850 = !DILocation(line: 3237, column: 9, scope: !847)
!851 = !DILocation(line: 3237, column: 8, scope: !847)
!852 = !DILocation(line: 3238, column: 11, scope: !853)
!853 = distinct !DILexicalBlock(scope: !847, file: !1, line: 3238, column: 11)
!854 = !DILocation(line: 3238, column: 22, scope: !853)
!855 = !DILocation(line: 3238, column: 11, scope: !847)
!856 = !DILocation(line: 3239, column: 57, scope: !853)
!857 = !DILocation(line: 3239, column: 27, scope: !853)
!858 = !DILocation(line: 3239, column: 10, scope: !853)
!859 = !DILocation(line: 3239, column: 9, scope: !853)
!860 = !DILocation(line: 3240, column: 13, scope: !861)
!861 = distinct !DILexicalBlock(scope: !847, file: !1, line: 3240, column: 7)
!862 = !DILocation(line: 3240, column: 12, scope: !861)
!863 = !DILocation(line: 3240, column: 17, scope: !864)
!864 = distinct !DILexicalBlock(scope: !861, file: !1, line: 3240, column: 7)
!865 = !DILocation(line: 3240, column: 31, scope: !864)
!866 = !DILocation(line: 3240, column: 19, scope: !864)
!867 = !DILocation(line: 3240, column: 7, scope: !861)
!868 = !DILocation(line: 3242, column: 30, scope: !869)
!869 = distinct !DILexicalBlock(scope: !864, file: !1, line: 3241, column: 7)
!870 = !DILocation(line: 3242, column: 20, scope: !869)
!871 = !DILocation(line: 3242, column: 9, scope: !869)
!872 = !DILocation(line: 3242, column: 12, scope: !869)
!873 = !DILocation(line: 3242, column: 19, scope: !869)
!874 = !DILocation(line: 3243, column: 10, scope: !869)
!875 = !DILocation(line: 3244, column: 7, scope: !869)
!876 = !DILocation(line: 3240, column: 47, scope: !864)
!877 = !DILocation(line: 3240, column: 7, scope: !864)
!878 = distinct !{!878, !867, !879}
!879 = !DILocation(line: 3244, column: 7, scope: !861)
!880 = !DILocation(line: 3245, column: 5, scope: !847)
!881 = !DILocation(line: 3246, column: 8, scope: !882)
!882 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3246, column: 7)
!883 = !DILocation(line: 3246, column: 21, scope: !882)
!884 = !DILocation(line: 3246, column: 38, scope: !882)
!885 = !DILocation(line: 3246, column: 42, scope: !882)
!886 = !DILocation(line: 3246, column: 55, scope: !882)
!887 = !DILocation(line: 3246, column: 7, scope: !516)
!888 = !DILocalVariable(name: "quantum", scope: !889, file: !1, line: 3249, type: !448)
!889 = distinct !DILexicalBlock(scope: !882, file: !1, line: 3247, column: 5)
!890 = !DILocation(line: 3249, column: 9, scope: !889)
!891 = !DILocalVariable(name: "q", scope: !889, file: !1, line: 3252, type: !799)
!892 = !DILocation(line: 3252, column: 19, scope: !889)
!893 = !DILocation(line: 3254, column: 32, scope: !889)
!894 = !DILocation(line: 3254, column: 9, scope: !889)
!895 = !DILocation(line: 3254, column: 8, scope: !889)
!896 = !DILocation(line: 3255, column: 11, scope: !897)
!897 = distinct !DILexicalBlock(scope: !889, file: !1, line: 3255, column: 11)
!898 = !DILocation(line: 3255, column: 22, scope: !897)
!899 = !DILocation(line: 3255, column: 11, scope: !889)
!900 = !DILocation(line: 3256, column: 34, scope: !897)
!901 = !DILocation(line: 3256, column: 11, scope: !897)
!902 = !DILocation(line: 3256, column: 10, scope: !897)
!903 = !DILocation(line: 3256, column: 9, scope: !897)
!904 = !DILocation(line: 3257, column: 13, scope: !905)
!905 = distinct !DILexicalBlock(scope: !889, file: !1, line: 3257, column: 7)
!906 = !DILocation(line: 3257, column: 12, scope: !905)
!907 = !DILocation(line: 3257, column: 17, scope: !908)
!908 = distinct !DILexicalBlock(scope: !905, file: !1, line: 3257, column: 7)
!909 = !DILocation(line: 3257, column: 31, scope: !908)
!910 = !DILocation(line: 3257, column: 19, scope: !908)
!911 = !DILocation(line: 3257, column: 7, scope: !905)
!912 = !DILocation(line: 3259, column: 17, scope: !913)
!913 = distinct !DILexicalBlock(scope: !908, file: !1, line: 3258, column: 7)
!914 = !DILocation(line: 3259, column: 16, scope: !913)
!915 = !DILocation(line: 3260, column: 9, scope: !913)
!916 = !DILocation(line: 3261, column: 9, scope: !913)
!917 = !DILocation(line: 3262, column: 10, scope: !913)
!918 = !DILocation(line: 3263, column: 7, scope: !913)
!919 = !DILocation(line: 3257, column: 47, scope: !908)
!920 = !DILocation(line: 3257, column: 7, scope: !908)
!921 = distinct !{!921, !911, !922}
!922 = !DILocation(line: 3263, column: 7, scope: !905)
!923 = !DILocation(line: 3264, column: 5, scope: !889)
!924 = !DILocation(line: 3265, column: 4, scope: !516)
!925 = !DILocation(line: 3266, column: 5, scope: !516)
!926 = !DILocation(line: 3266, column: 4, scope: !516)
!927 = !DILocation(line: 3267, column: 37, scope: !516)
!928 = !DILocation(line: 3267, column: 3, scope: !516)
!929 = !DILocation(line: 3268, column: 27, scope: !516)
!930 = !DILocation(line: 3268, column: 33, scope: !516)
!931 = !DILocation(line: 3268, column: 46, scope: !516)
!932 = !DILocation(line: 3268, column: 10, scope: !516)
!933 = !DILocation(line: 3268, column: 9, scope: !516)
!934 = !DILocation(line: 3269, column: 11, scope: !516)
!935 = !DILocation(line: 3269, column: 3, scope: !516)
!936 = !DILocation(line: 3273, column: 42, scope: !937)
!937 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3272, column: 5)
!938 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3270, column: 3)
!939 = !DILocation(line: 3273, column: 55, scope: !937)
!940 = !DILocation(line: 3273, column: 69, scope: !937)
!941 = !DILocation(line: 3273, column: 71, scope: !937)
!942 = !DILocation(line: 3273, column: 7, scope: !937)
!943 = !DILocation(line: 3274, column: 7, scope: !937)
!944 = !DILocation(line: 3278, column: 40, scope: !945)
!945 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3277, column: 5)
!946 = !DILocation(line: 3278, column: 53, scope: !945)
!947 = !DILocation(line: 3278, column: 67, scope: !945)
!948 = !DILocation(line: 3278, column: 69, scope: !945)
!949 = !DILocation(line: 3278, column: 7, scope: !945)
!950 = !DILocation(line: 3279, column: 7, scope: !945)
!951 = !DILocation(line: 3284, column: 41, scope: !952)
!952 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3283, column: 5)
!953 = !DILocation(line: 3284, column: 54, scope: !952)
!954 = !DILocation(line: 3284, column: 68, scope: !952)
!955 = !DILocation(line: 3284, column: 70, scope: !952)
!956 = !DILocation(line: 3284, column: 7, scope: !952)
!957 = !DILocation(line: 3285, column: 7, scope: !952)
!958 = !DILocation(line: 3289, column: 26, scope: !959)
!959 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3288, column: 5)
!960 = !DILocation(line: 3289, column: 48, scope: !959)
!961 = !DILocation(line: 3289, column: 61, scope: !959)
!962 = !DILocation(line: 3289, column: 75, scope: !959)
!963 = !DILocation(line: 3290, column: 9, scope: !959)
!964 = !DILocation(line: 3290, column: 17, scope: !959)
!965 = !DILocation(line: 3290, column: 19, scope: !959)
!966 = !DILocation(line: 3289, column: 7, scope: !959)
!967 = !DILocation(line: 3291, column: 7, scope: !959)
!968 = !DILocation(line: 3296, column: 41, scope: !969)
!969 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3295, column: 5)
!970 = !DILocation(line: 3296, column: 54, scope: !969)
!971 = !DILocation(line: 3296, column: 68, scope: !969)
!972 = !DILocation(line: 3296, column: 70, scope: !969)
!973 = !DILocation(line: 3296, column: 7, scope: !969)
!974 = !DILocation(line: 3297, column: 7, scope: !969)
!975 = !DILocation(line: 3301, column: 43, scope: !976)
!976 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3300, column: 5)
!977 = !DILocation(line: 3301, column: 56, scope: !976)
!978 = !DILocation(line: 3301, column: 70, scope: !976)
!979 = !DILocation(line: 3301, column: 72, scope: !976)
!980 = !DILocation(line: 3301, column: 7, scope: !976)
!981 = !DILocation(line: 3302, column: 7, scope: !976)
!982 = !DILocation(line: 3306, column: 25, scope: !983)
!983 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3305, column: 5)
!984 = !DILocation(line: 3306, column: 47, scope: !983)
!985 = !DILocation(line: 3306, column: 60, scope: !983)
!986 = !DILocation(line: 3306, column: 74, scope: !983)
!987 = !DILocation(line: 3307, column: 9, scope: !983)
!988 = !DILocation(line: 3307, column: 17, scope: !983)
!989 = !DILocation(line: 3307, column: 19, scope: !983)
!990 = !DILocation(line: 3306, column: 7, scope: !983)
!991 = !DILocation(line: 3308, column: 7, scope: !983)
!992 = !DILocation(line: 3313, column: 26, scope: !993)
!993 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3312, column: 5)
!994 = !DILocation(line: 3313, column: 48, scope: !993)
!995 = !DILocation(line: 3313, column: 61, scope: !993)
!996 = !DILocation(line: 3313, column: 75, scope: !993)
!997 = !DILocation(line: 3314, column: 9, scope: !993)
!998 = !DILocation(line: 3314, column: 17, scope: !993)
!999 = !DILocation(line: 3314, column: 19, scope: !993)
!1000 = !DILocation(line: 3313, column: 7, scope: !993)
!1001 = !DILocation(line: 3315, column: 7, scope: !993)
!1002 = !DILocation(line: 3319, column: 25, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3318, column: 5)
!1004 = !DILocation(line: 3319, column: 47, scope: !1003)
!1005 = !DILocation(line: 3319, column: 60, scope: !1003)
!1006 = !DILocation(line: 3319, column: 74, scope: !1003)
!1007 = !DILocation(line: 3319, column: 76, scope: !1003)
!1008 = !DILocation(line: 3319, column: 7, scope: !1003)
!1009 = !DILocation(line: 3320, column: 7, scope: !1003)
!1010 = !DILocation(line: 3324, column: 30, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3323, column: 5)
!1012 = !DILocation(line: 3324, column: 52, scope: !1011)
!1013 = !DILocation(line: 3324, column: 65, scope: !1011)
!1014 = !DILocation(line: 3325, column: 9, scope: !1011)
!1015 = !DILocation(line: 3325, column: 11, scope: !1011)
!1016 = !DILocation(line: 3324, column: 7, scope: !1011)
!1017 = !DILocation(line: 3326, column: 7, scope: !1011)
!1018 = !DILocation(line: 3331, column: 42, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3330, column: 5)
!1020 = !DILocation(line: 3331, column: 55, scope: !1019)
!1021 = !DILocation(line: 3331, column: 69, scope: !1019)
!1022 = !DILocation(line: 3331, column: 71, scope: !1019)
!1023 = !DILocation(line: 3331, column: 7, scope: !1019)
!1024 = !DILocation(line: 3332, column: 7, scope: !1019)
!1025 = !DILocation(line: 3336, column: 26, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3335, column: 5)
!1027 = !DILocation(line: 3336, column: 48, scope: !1026)
!1028 = !DILocation(line: 3336, column: 61, scope: !1026)
!1029 = !DILocation(line: 3336, column: 75, scope: !1026)
!1030 = !DILocation(line: 3337, column: 9, scope: !1026)
!1031 = !DILocation(line: 3337, column: 17, scope: !1026)
!1032 = !DILocation(line: 3337, column: 19, scope: !1026)
!1033 = !DILocation(line: 3336, column: 7, scope: !1026)
!1034 = !DILocation(line: 3338, column: 7, scope: !1026)
!1035 = !DILocation(line: 3342, column: 31, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3341, column: 5)
!1037 = !DILocation(line: 3342, column: 53, scope: !1036)
!1038 = !DILocation(line: 3342, column: 66, scope: !1036)
!1039 = !DILocation(line: 3343, column: 9, scope: !1036)
!1040 = !DILocation(line: 3343, column: 11, scope: !1036)
!1041 = !DILocation(line: 3343, column: 19, scope: !1036)
!1042 = !DILocation(line: 3343, column: 21, scope: !1036)
!1043 = !DILocation(line: 3342, column: 7, scope: !1036)
!1044 = !DILocation(line: 3344, column: 7, scope: !1036)
!1045 = !DILocation(line: 3348, column: 44, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3347, column: 5)
!1047 = !DILocation(line: 3348, column: 57, scope: !1046)
!1048 = !DILocation(line: 3348, column: 71, scope: !1046)
!1049 = !DILocation(line: 3348, column: 73, scope: !1046)
!1050 = !DILocation(line: 3348, column: 7, scope: !1046)
!1051 = !DILocation(line: 3349, column: 7, scope: !1046)
!1052 = !DILocation(line: 3354, column: 40, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3353, column: 5)
!1054 = !DILocation(line: 3354, column: 53, scope: !1053)
!1055 = !DILocation(line: 3354, column: 67, scope: !1053)
!1056 = !DILocation(line: 3354, column: 69, scope: !1053)
!1057 = !DILocation(line: 3354, column: 7, scope: !1053)
!1058 = !DILocation(line: 3355, column: 7, scope: !1053)
!1059 = !DILocation(line: 3360, column: 40, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3359, column: 5)
!1061 = !DILocation(line: 3360, column: 53, scope: !1060)
!1062 = !DILocation(line: 3360, column: 67, scope: !1060)
!1063 = !DILocation(line: 3360, column: 69, scope: !1060)
!1064 = !DILocation(line: 3360, column: 7, scope: !1060)
!1065 = !DILocation(line: 3361, column: 7, scope: !1060)
!1066 = !DILocation(line: 3367, column: 41, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !938, file: !1, line: 3366, column: 5)
!1068 = !DILocation(line: 3367, column: 54, scope: !1067)
!1069 = !DILocation(line: 3367, column: 68, scope: !1067)
!1070 = !DILocation(line: 3367, column: 70, scope: !1067)
!1071 = !DILocation(line: 3367, column: 7, scope: !1067)
!1072 = !DILocation(line: 3368, column: 7, scope: !1067)
!1073 = !DILocation(line: 3371, column: 7, scope: !938)
!1074 = !DILocation(line: 3373, column: 8, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3373, column: 7)
!1076 = !DILocation(line: 3373, column: 21, scope: !1075)
!1077 = !DILocation(line: 3373, column: 38, scope: !1075)
!1078 = !DILocation(line: 3373, column: 42, scope: !1075)
!1079 = !DILocation(line: 3373, column: 55, scope: !1075)
!1080 = !DILocation(line: 3373, column: 7, scope: !516)
!1081 = !DILocalVariable(name: "quantum", scope: !1082, file: !1, line: 3376, type: !448)
!1082 = distinct !DILexicalBlock(scope: !1075, file: !1, line: 3374, column: 5)
!1083 = !DILocation(line: 3376, column: 9, scope: !1082)
!1084 = !DILocalVariable(name: "q", scope: !1082, file: !1, line: 3379, type: !799)
!1085 = !DILocation(line: 3379, column: 19, scope: !1082)
!1086 = !DILocation(line: 3381, column: 32, scope: !1082)
!1087 = !DILocation(line: 3381, column: 9, scope: !1082)
!1088 = !DILocation(line: 3381, column: 8, scope: !1082)
!1089 = !DILocation(line: 3382, column: 11, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1082, file: !1, line: 3382, column: 11)
!1091 = !DILocation(line: 3382, column: 22, scope: !1090)
!1092 = !DILocation(line: 3382, column: 11, scope: !1082)
!1093 = !DILocation(line: 3383, column: 57, scope: !1090)
!1094 = !DILocation(line: 3383, column: 27, scope: !1090)
!1095 = !DILocation(line: 3383, column: 10, scope: !1090)
!1096 = !DILocation(line: 3383, column: 9, scope: !1090)
!1097 = !DILocation(line: 3384, column: 13, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1082, file: !1, line: 3384, column: 7)
!1099 = !DILocation(line: 3384, column: 12, scope: !1098)
!1100 = !DILocation(line: 3384, column: 17, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1098, file: !1, line: 3384, column: 7)
!1102 = !DILocation(line: 3384, column: 31, scope: !1101)
!1103 = !DILocation(line: 3384, column: 19, scope: !1101)
!1104 = !DILocation(line: 3384, column: 7, scope: !1098)
!1105 = !DILocation(line: 3386, column: 17, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 3385, column: 7)
!1107 = !DILocation(line: 3386, column: 16, scope: !1106)
!1108 = !DILocation(line: 3387, column: 9, scope: !1106)
!1109 = !DILocation(line: 3388, column: 9, scope: !1106)
!1110 = !DILocation(line: 3389, column: 10, scope: !1106)
!1111 = !DILocation(line: 3390, column: 7, scope: !1106)
!1112 = !DILocation(line: 3384, column: 47, scope: !1101)
!1113 = !DILocation(line: 3384, column: 7, scope: !1101)
!1114 = distinct !{!1114, !1104, !1115}
!1115 = !DILocation(line: 3390, column: 7, scope: !1098)
!1116 = !DILocation(line: 3391, column: 5, scope: !1082)
!1117 = !DILocation(line: 3392, column: 8, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !516, file: !1, line: 3392, column: 7)
!1119 = !DILocation(line: 3392, column: 21, scope: !1118)
!1120 = !DILocation(line: 3392, column: 37, scope: !1118)
!1121 = !DILocation(line: 3392, column: 41, scope: !1118)
!1122 = !DILocation(line: 3392, column: 54, scope: !1118)
!1123 = !DILocation(line: 3392, column: 71, scope: !1118)
!1124 = !DILocation(line: 3393, column: 8, scope: !1118)
!1125 = !DILocation(line: 3393, column: 21, scope: !1118)
!1126 = !DILocation(line: 3392, column: 7, scope: !516)
!1127 = !DILocalVariable(name: "q", scope: !1128, file: !1, line: 3396, type: !799)
!1128 = distinct !DILexicalBlock(scope: !1118, file: !1, line: 3394, column: 5)
!1129 = !DILocation(line: 3396, column: 19, scope: !1128)
!1130 = !DILocation(line: 3398, column: 32, scope: !1128)
!1131 = !DILocation(line: 3398, column: 9, scope: !1128)
!1132 = !DILocation(line: 3398, column: 8, scope: !1128)
!1133 = !DILocation(line: 3399, column: 11, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1128, file: !1, line: 3399, column: 11)
!1135 = !DILocation(line: 3399, column: 22, scope: !1134)
!1136 = !DILocation(line: 3399, column: 11, scope: !1128)
!1137 = !DILocation(line: 3400, column: 57, scope: !1134)
!1138 = !DILocation(line: 3400, column: 27, scope: !1134)
!1139 = !DILocation(line: 3400, column: 10, scope: !1134)
!1140 = !DILocation(line: 3400, column: 9, scope: !1134)
!1141 = !DILocation(line: 3401, column: 13, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1128, file: !1, line: 3401, column: 7)
!1143 = !DILocation(line: 3401, column: 12, scope: !1142)
!1144 = !DILocation(line: 3401, column: 17, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1142, file: !1, line: 3401, column: 7)
!1146 = !DILocation(line: 3401, column: 31, scope: !1145)
!1147 = !DILocation(line: 3401, column: 19, scope: !1145)
!1148 = !DILocation(line: 3401, column: 7, scope: !1142)
!1149 = !DILocation(line: 3403, column: 9, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 3402, column: 7)
!1151 = !DILocation(line: 3404, column: 10, scope: !1150)
!1152 = !DILocation(line: 3405, column: 7, scope: !1150)
!1153 = !DILocation(line: 3401, column: 47, scope: !1145)
!1154 = !DILocation(line: 3401, column: 7, scope: !1145)
!1155 = distinct !{!1155, !1148, !1156}
!1156 = !DILocation(line: 3405, column: 7, scope: !1142)
!1157 = !DILocation(line: 3406, column: 5, scope: !1128)
!1158 = !DILocation(line: 3407, column: 10, scope: !516)
!1159 = !DILocation(line: 3407, column: 3, scope: !516)
!1160 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !1161, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!448, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!1164 = !DILocalVariable(name: "value", arg: 1, scope: !1160, file: !147, line: 87, type: !1163)
!1165 = !DILocation(line: 87, column: 59, scope: !1160)
!1166 = !DILocation(line: 92, column: 7, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1160, file: !147, line: 92, column: 7)
!1168 = !DILocation(line: 92, column: 13, scope: !1167)
!1169 = !DILocation(line: 92, column: 7, scope: !1160)
!1170 = !DILocation(line: 93, column: 5, scope: !1167)
!1171 = !DILocation(line: 94, column: 7, scope: !1172)
!1172 = distinct !DILexicalBlock(scope: !1160, file: !147, line: 94, column: 7)
!1173 = !DILocation(line: 94, column: 13, scope: !1172)
!1174 = !DILocation(line: 94, column: 7, scope: !1160)
!1175 = !DILocation(line: 95, column: 5, scope: !1172)
!1176 = !DILocation(line: 96, column: 21, scope: !1160)
!1177 = !DILocation(line: 96, column: 26, scope: !1160)
!1178 = !DILocation(line: 96, column: 10, scope: !1160)
!1179 = !DILocation(line: 96, column: 3, scope: !1160)
!1180 = !DILocation(line: 98, column: 1, scope: !1160)
!1181 = distinct !DISubprogram(name: "ExportAlphaQuantum", scope: !1, file: !1, line: 242, type: !1182, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{null, !459, !637, !740, !717}
!1184 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !1181, file: !1, line: 242, type: !459)
!1185 = !DILocation(line: 242, column: 45, scope: !1181)
!1186 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !1181, file: !1, line: 243, type: !637)
!1187 = !DILocation(line: 243, column: 24, scope: !1181)
!1188 = !DILocalVariable(name: "p", arg: 3, scope: !1181, file: !1, line: 243, type: !740)
!1189 = !DILocation(line: 243, column: 66, scope: !1181)
!1190 = !DILocalVariable(name: "q", arg: 4, scope: !1181, file: !1, line: 244, type: !717)
!1191 = !DILocation(line: 244, column: 27, scope: !1181)
!1192 = !DILocalVariable(name: "range", scope: !1181, file: !1, line: 247, type: !508)
!1193 = !DILocation(line: 247, column: 5, scope: !1181)
!1194 = !DILocalVariable(name: "x", scope: !1181, file: !1, line: 250, type: !453)
!1195 = !DILocation(line: 250, column: 5, scope: !1181)
!1196 = !DILocation(line: 252, column: 11, scope: !1181)
!1197 = !DILocation(line: 252, column: 25, scope: !1181)
!1198 = !DILocation(line: 252, column: 3, scope: !1181)
!1199 = !DILocalVariable(name: "pixel", scope: !1200, file: !1, line: 257, type: !437)
!1200 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 255, column: 5)
!1201 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 253, column: 3)
!1202 = !DILocation(line: 257, column: 9, scope: !1200)
!1203 = !DILocation(line: 259, column: 13, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 259, column: 7)
!1205 = !DILocation(line: 259, column: 12, scope: !1204)
!1206 = !DILocation(line: 259, column: 17, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 259, column: 7)
!1208 = !DILocation(line: 259, column: 31, scope: !1207)
!1209 = !DILocation(line: 259, column: 19, scope: !1207)
!1210 = !DILocation(line: 259, column: 7, scope: !1204)
!1211 = !DILocation(line: 261, column: 58, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1207, file: !1, line: 260, column: 7)
!1213 = !DILocation(line: 261, column: 57, scope: !1212)
!1214 = !DILocation(line: 261, column: 34, scope: !1212)
!1215 = !DILocation(line: 261, column: 15, scope: !1212)
!1216 = !DILocation(line: 261, column: 14, scope: !1212)
!1217 = !DILocation(line: 262, column: 24, scope: !1212)
!1218 = !DILocation(line: 262, column: 30, scope: !1212)
!1219 = !DILocation(line: 262, column: 11, scope: !1212)
!1220 = !DILocation(line: 262, column: 10, scope: !1212)
!1221 = !DILocation(line: 263, column: 10, scope: !1212)
!1222 = !DILocation(line: 264, column: 12, scope: !1212)
!1223 = !DILocation(line: 264, column: 26, scope: !1212)
!1224 = !DILocation(line: 264, column: 10, scope: !1212)
!1225 = !DILocation(line: 265, column: 7, scope: !1212)
!1226 = !DILocation(line: 259, column: 47, scope: !1207)
!1227 = !DILocation(line: 259, column: 7, scope: !1207)
!1228 = distinct !{!1228, !1210, !1229}
!1229 = !DILocation(line: 265, column: 7, scope: !1204)
!1230 = !DILocation(line: 266, column: 7, scope: !1200)
!1231 = !DILocalVariable(name: "pixel", scope: !1232, file: !1, line: 271, type: !449)
!1232 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 269, column: 5)
!1233 = !DILocation(line: 271, column: 9, scope: !1232)
!1234 = !DILocation(line: 273, column: 11, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 273, column: 11)
!1236 = !DILocation(line: 273, column: 25, scope: !1235)
!1237 = !DILocation(line: 273, column: 32, scope: !1235)
!1238 = !DILocation(line: 273, column: 11, scope: !1232)
!1239 = !DILocation(line: 275, column: 17, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !1, line: 275, column: 11)
!1241 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 274, column: 9)
!1242 = !DILocation(line: 275, column: 16, scope: !1240)
!1243 = !DILocation(line: 275, column: 21, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 275, column: 11)
!1245 = !DILocation(line: 275, column: 35, scope: !1244)
!1246 = !DILocation(line: 275, column: 23, scope: !1244)
!1247 = !DILocation(line: 275, column: 11, scope: !1240)
!1248 = !DILocation(line: 277, column: 54, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1244, file: !1, line: 276, column: 11)
!1250 = !DILocation(line: 277, column: 53, scope: !1249)
!1251 = !DILocation(line: 277, column: 41, scope: !1249)
!1252 = !DILocation(line: 277, column: 19, scope: !1249)
!1253 = !DILocation(line: 277, column: 18, scope: !1249)
!1254 = !DILocation(line: 278, column: 29, scope: !1249)
!1255 = !DILocation(line: 278, column: 43, scope: !1249)
!1256 = !DILocation(line: 278, column: 50, scope: !1249)
!1257 = !DILocation(line: 278, column: 56, scope: !1249)
!1258 = !DILocation(line: 278, column: 15, scope: !1249)
!1259 = !DILocation(line: 278, column: 14, scope: !1249)
!1260 = !DILocation(line: 279, column: 14, scope: !1249)
!1261 = !DILocation(line: 280, column: 16, scope: !1249)
!1262 = !DILocation(line: 280, column: 30, scope: !1249)
!1263 = !DILocation(line: 280, column: 14, scope: !1249)
!1264 = !DILocation(line: 281, column: 11, scope: !1249)
!1265 = !DILocation(line: 275, column: 51, scope: !1244)
!1266 = !DILocation(line: 275, column: 11, scope: !1244)
!1267 = distinct !{!1267, !1247, !1268}
!1268 = !DILocation(line: 281, column: 11, scope: !1240)
!1269 = !DILocation(line: 282, column: 11, scope: !1241)
!1270 = !DILocation(line: 284, column: 13, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 284, column: 7)
!1272 = !DILocation(line: 284, column: 12, scope: !1271)
!1273 = !DILocation(line: 284, column: 17, scope: !1274)
!1274 = distinct !DILexicalBlock(scope: !1271, file: !1, line: 284, column: 7)
!1275 = !DILocation(line: 284, column: 31, scope: !1274)
!1276 = !DILocation(line: 284, column: 19, scope: !1274)
!1277 = !DILocation(line: 284, column: 7, scope: !1271)
!1278 = !DILocation(line: 286, column: 59, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1274, file: !1, line: 285, column: 7)
!1280 = !DILocation(line: 286, column: 58, scope: !1279)
!1281 = !DILocation(line: 286, column: 35, scope: !1279)
!1282 = !DILocation(line: 286, column: 15, scope: !1279)
!1283 = !DILocation(line: 286, column: 14, scope: !1279)
!1284 = !DILocation(line: 287, column: 25, scope: !1279)
!1285 = !DILocation(line: 287, column: 39, scope: !1279)
!1286 = !DILocation(line: 287, column: 46, scope: !1279)
!1287 = !DILocation(line: 287, column: 52, scope: !1279)
!1288 = !DILocation(line: 287, column: 11, scope: !1279)
!1289 = !DILocation(line: 287, column: 10, scope: !1279)
!1290 = !DILocation(line: 288, column: 10, scope: !1279)
!1291 = !DILocation(line: 289, column: 12, scope: !1279)
!1292 = !DILocation(line: 289, column: 26, scope: !1279)
!1293 = !DILocation(line: 289, column: 10, scope: !1279)
!1294 = !DILocation(line: 290, column: 7, scope: !1279)
!1295 = !DILocation(line: 284, column: 47, scope: !1274)
!1296 = !DILocation(line: 284, column: 7, scope: !1274)
!1297 = distinct !{!1297, !1277, !1298}
!1298 = !DILocation(line: 290, column: 7, scope: !1271)
!1299 = !DILocation(line: 291, column: 7, scope: !1232)
!1300 = !DILocalVariable(name: "pixel", scope: !1301, file: !1, line: 296, type: !5)
!1301 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 294, column: 5)
!1302 = !DILocation(line: 296, column: 9, scope: !1301)
!1303 = !DILocation(line: 298, column: 11, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 298, column: 11)
!1305 = !DILocation(line: 298, column: 25, scope: !1304)
!1306 = !DILocation(line: 298, column: 32, scope: !1304)
!1307 = !DILocation(line: 298, column: 11, scope: !1301)
!1308 = !DILocation(line: 300, column: 17, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1310, file: !1, line: 300, column: 11)
!1310 = distinct !DILexicalBlock(scope: !1304, file: !1, line: 299, column: 9)
!1311 = !DILocation(line: 300, column: 16, scope: !1309)
!1312 = !DILocation(line: 300, column: 21, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1309, file: !1, line: 300, column: 11)
!1314 = !DILocation(line: 300, column: 35, scope: !1313)
!1315 = !DILocation(line: 300, column: 23, scope: !1313)
!1316 = !DILocation(line: 300, column: 11, scope: !1309)
!1317 = !DILocalVariable(name: "pixel", scope: !1318, file: !1, line: 303, type: !502)
!1318 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 301, column: 11)
!1319 = !DILocation(line: 303, column: 15, scope: !1318)
!1320 = !DILocation(line: 305, column: 28, scope: !1318)
!1321 = !DILocation(line: 305, column: 19, scope: !1318)
!1322 = !DILocation(line: 305, column: 18, scope: !1318)
!1323 = !DILocation(line: 306, column: 29, scope: !1318)
!1324 = !DILocation(line: 306, column: 42, scope: !1318)
!1325 = !DILocation(line: 306, column: 48, scope: !1318)
!1326 = !DILocation(line: 306, column: 15, scope: !1318)
!1327 = !DILocation(line: 306, column: 14, scope: !1318)
!1328 = !DILocation(line: 307, column: 14, scope: !1318)
!1329 = !DILocation(line: 308, column: 16, scope: !1318)
!1330 = !DILocation(line: 308, column: 30, scope: !1318)
!1331 = !DILocation(line: 308, column: 14, scope: !1318)
!1332 = !DILocation(line: 309, column: 11, scope: !1318)
!1333 = !DILocation(line: 300, column: 51, scope: !1313)
!1334 = !DILocation(line: 300, column: 11, scope: !1313)
!1335 = distinct !{!1335, !1316, !1336}
!1336 = !DILocation(line: 309, column: 11, scope: !1309)
!1337 = !DILocation(line: 310, column: 11, scope: !1310)
!1338 = !DILocation(line: 312, column: 13, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 312, column: 7)
!1340 = !DILocation(line: 312, column: 12, scope: !1339)
!1341 = !DILocation(line: 312, column: 17, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1339, file: !1, line: 312, column: 7)
!1343 = !DILocation(line: 312, column: 31, scope: !1342)
!1344 = !DILocation(line: 312, column: 19, scope: !1342)
!1345 = !DILocation(line: 312, column: 7, scope: !1339)
!1346 = !DILocation(line: 314, column: 58, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1342, file: !1, line: 313, column: 7)
!1348 = !DILocation(line: 314, column: 57, scope: !1347)
!1349 = !DILocation(line: 314, column: 34, scope: !1347)
!1350 = !DILocation(line: 314, column: 15, scope: !1347)
!1351 = !DILocation(line: 314, column: 14, scope: !1347)
!1352 = !DILocation(line: 315, column: 24, scope: !1347)
!1353 = !DILocation(line: 315, column: 38, scope: !1347)
!1354 = !DILocation(line: 315, column: 45, scope: !1347)
!1355 = !DILocation(line: 315, column: 51, scope: !1347)
!1356 = !DILocation(line: 315, column: 11, scope: !1347)
!1357 = !DILocation(line: 315, column: 10, scope: !1347)
!1358 = !DILocation(line: 316, column: 10, scope: !1347)
!1359 = !DILocation(line: 317, column: 12, scope: !1347)
!1360 = !DILocation(line: 317, column: 26, scope: !1347)
!1361 = !DILocation(line: 317, column: 10, scope: !1347)
!1362 = !DILocation(line: 318, column: 7, scope: !1347)
!1363 = !DILocation(line: 312, column: 47, scope: !1342)
!1364 = !DILocation(line: 312, column: 7, scope: !1342)
!1365 = distinct !{!1365, !1345, !1366}
!1366 = !DILocation(line: 318, column: 7, scope: !1339)
!1367 = !DILocation(line: 319, column: 7, scope: !1301)
!1368 = !DILocation(line: 323, column: 11, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1370, file: !1, line: 323, column: 11)
!1370 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 322, column: 5)
!1371 = !DILocation(line: 323, column: 25, scope: !1369)
!1372 = !DILocation(line: 323, column: 32, scope: !1369)
!1373 = !DILocation(line: 323, column: 11, scope: !1370)
!1374 = !DILocation(line: 325, column: 17, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 325, column: 11)
!1376 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 324, column: 9)
!1377 = !DILocation(line: 325, column: 16, scope: !1375)
!1378 = !DILocation(line: 325, column: 21, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1375, file: !1, line: 325, column: 11)
!1380 = !DILocation(line: 325, column: 35, scope: !1379)
!1381 = !DILocation(line: 325, column: 23, scope: !1379)
!1382 = !DILocation(line: 325, column: 11, scope: !1375)
!1383 = !DILocalVariable(name: "pixel", scope: !1384, file: !1, line: 328, type: !458)
!1384 = distinct !DILexicalBlock(scope: !1379, file: !1, line: 326, column: 11)
!1385 = !DILocation(line: 328, column: 15, scope: !1384)
!1386 = !DILocation(line: 330, column: 29, scope: !1384)
!1387 = !DILocation(line: 330, column: 19, scope: !1384)
!1388 = !DILocation(line: 330, column: 18, scope: !1384)
!1389 = !DILocation(line: 331, column: 30, scope: !1384)
!1390 = !DILocation(line: 331, column: 43, scope: !1384)
!1391 = !DILocation(line: 331, column: 49, scope: !1384)
!1392 = !DILocation(line: 331, column: 15, scope: !1384)
!1393 = !DILocation(line: 331, column: 14, scope: !1384)
!1394 = !DILocation(line: 332, column: 14, scope: !1384)
!1395 = !DILocation(line: 333, column: 16, scope: !1384)
!1396 = !DILocation(line: 333, column: 30, scope: !1384)
!1397 = !DILocation(line: 333, column: 14, scope: !1384)
!1398 = !DILocation(line: 334, column: 11, scope: !1384)
!1399 = !DILocation(line: 325, column: 51, scope: !1379)
!1400 = !DILocation(line: 325, column: 11, scope: !1379)
!1401 = distinct !{!1401, !1382, !1402}
!1402 = !DILocation(line: 334, column: 11, scope: !1375)
!1403 = !DILocation(line: 335, column: 11, scope: !1376)
!1404 = !DILocation(line: 337, column: 5, scope: !1370)
!1405 = !DILocation(line: 340, column: 29, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 339, column: 5)
!1407 = !DILocation(line: 340, column: 43, scope: !1406)
!1408 = !DILocation(line: 340, column: 13, scope: !1406)
!1409 = !DILocation(line: 340, column: 12, scope: !1406)
!1410 = !DILocation(line: 341, column: 13, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1406, file: !1, line: 341, column: 7)
!1412 = !DILocation(line: 341, column: 12, scope: !1411)
!1413 = !DILocation(line: 341, column: 17, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 341, column: 7)
!1415 = !DILocation(line: 341, column: 31, scope: !1414)
!1416 = !DILocation(line: 341, column: 19, scope: !1414)
!1417 = !DILocation(line: 341, column: 7, scope: !1411)
!1418 = !DILocation(line: 343, column: 27, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1414, file: !1, line: 342, column: 7)
!1420 = !DILocation(line: 344, column: 12, scope: !1419)
!1421 = !DILocation(line: 343, column: 58, scope: !1419)
!1422 = !DILocation(line: 344, column: 30, scope: !1419)
!1423 = !DILocation(line: 343, column: 40, scope: !1419)
!1424 = !DILocation(line: 344, column: 37, scope: !1419)
!1425 = !DILocation(line: 343, column: 11, scope: !1419)
!1426 = !DILocation(line: 343, column: 10, scope: !1419)
!1427 = !DILocation(line: 345, column: 10, scope: !1419)
!1428 = !DILocation(line: 346, column: 12, scope: !1419)
!1429 = !DILocation(line: 346, column: 26, scope: !1419)
!1430 = !DILocation(line: 346, column: 10, scope: !1419)
!1431 = !DILocation(line: 347, column: 7, scope: !1419)
!1432 = !DILocation(line: 341, column: 47, scope: !1414)
!1433 = !DILocation(line: 341, column: 7, scope: !1414)
!1434 = distinct !{!1434, !1417, !1435}
!1435 = !DILocation(line: 347, column: 7, scope: !1411)
!1436 = !DILocation(line: 348, column: 7, scope: !1406)
!1437 = !DILocation(line: 351, column: 1, scope: !1181)
!1438 = distinct !DISubprogram(name: "ExportBGRQuantum", scope: !1, file: !1, line: 353, type: !1182, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1439 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !1438, file: !1, line: 353, type: !459)
!1440 = !DILocation(line: 353, column: 43, scope: !1438)
!1441 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !1438, file: !1, line: 354, type: !637)
!1442 = !DILocation(line: 354, column: 24, scope: !1438)
!1443 = !DILocalVariable(name: "p", arg: 3, scope: !1438, file: !1, line: 354, type: !740)
!1444 = !DILocation(line: 354, column: 66, scope: !1438)
!1445 = !DILocalVariable(name: "q", arg: 4, scope: !1438, file: !1, line: 355, type: !717)
!1446 = !DILocation(line: 355, column: 27, scope: !1438)
!1447 = !DILocalVariable(name: "range", scope: !1438, file: !1, line: 358, type: !508)
!1448 = !DILocation(line: 358, column: 5, scope: !1438)
!1449 = !DILocalVariable(name: "x", scope: !1438, file: !1, line: 361, type: !453)
!1450 = !DILocation(line: 361, column: 5, scope: !1438)
!1451 = !DILocalVariable(name: "bit", scope: !1438, file: !1, line: 364, type: !453)
!1452 = !DILocation(line: 364, column: 5, scope: !1438)
!1453 = !DILocation(line: 366, column: 11, scope: !1438)
!1454 = !DILocation(line: 366, column: 25, scope: !1438)
!1455 = !DILocation(line: 366, column: 3, scope: !1438)
!1456 = !DILocation(line: 370, column: 13, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1458, file: !1, line: 370, column: 7)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 369, column: 5)
!1459 = distinct !DILexicalBlock(scope: !1438, file: !1, line: 367, column: 3)
!1460 = !DILocation(line: 370, column: 12, scope: !1457)
!1461 = !DILocation(line: 370, column: 17, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1457, file: !1, line: 370, column: 7)
!1463 = !DILocation(line: 370, column: 31, scope: !1462)
!1464 = !DILocation(line: 370, column: 19, scope: !1462)
!1465 = !DILocation(line: 370, column: 7, scope: !1457)
!1466 = !DILocation(line: 372, column: 43, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1462, file: !1, line: 371, column: 7)
!1468 = !DILocation(line: 372, column: 24, scope: !1467)
!1469 = !DILocation(line: 372, column: 60, scope: !1467)
!1470 = !DILocation(line: 372, column: 11, scope: !1467)
!1471 = !DILocation(line: 372, column: 10, scope: !1467)
!1472 = !DILocation(line: 373, column: 43, scope: !1467)
!1473 = !DILocation(line: 373, column: 24, scope: !1467)
!1474 = !DILocation(line: 373, column: 61, scope: !1467)
!1475 = !DILocation(line: 373, column: 11, scope: !1467)
!1476 = !DILocation(line: 373, column: 10, scope: !1467)
!1477 = !DILocation(line: 374, column: 43, scope: !1467)
!1478 = !DILocation(line: 374, column: 24, scope: !1467)
!1479 = !DILocation(line: 374, column: 59, scope: !1467)
!1480 = !DILocation(line: 374, column: 11, scope: !1467)
!1481 = !DILocation(line: 374, column: 10, scope: !1467)
!1482 = !DILocation(line: 375, column: 10, scope: !1467)
!1483 = !DILocation(line: 376, column: 12, scope: !1467)
!1484 = !DILocation(line: 376, column: 26, scope: !1467)
!1485 = !DILocation(line: 376, column: 10, scope: !1467)
!1486 = !DILocation(line: 377, column: 7, scope: !1467)
!1487 = !DILocation(line: 370, column: 47, scope: !1462)
!1488 = !DILocation(line: 370, column: 7, scope: !1462)
!1489 = distinct !{!1489, !1465, !1490}
!1490 = !DILocation(line: 377, column: 7, scope: !1457)
!1491 = !DILocation(line: 378, column: 7, scope: !1458)
!1492 = !DILocalVariable(name: "pixel", scope: !1493, file: !1, line: 383, type: !5)
!1493 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 381, column: 5)
!1494 = !DILocation(line: 383, column: 9, scope: !1493)
!1495 = !DILocation(line: 385, column: 29, scope: !1493)
!1496 = !DILocation(line: 385, column: 43, scope: !1493)
!1497 = !DILocation(line: 385, column: 13, scope: !1493)
!1498 = !DILocation(line: 385, column: 12, scope: !1493)
!1499 = !DILocation(line: 386, column: 11, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 386, column: 11)
!1501 = !DILocation(line: 386, column: 25, scope: !1500)
!1502 = !DILocation(line: 386, column: 30, scope: !1500)
!1503 = !DILocation(line: 386, column: 11, scope: !1493)
!1504 = !DILocation(line: 388, column: 17, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !1, line: 388, column: 11)
!1506 = distinct !DILexicalBlock(scope: !1500, file: !1, line: 387, column: 9)
!1507 = !DILocation(line: 388, column: 16, scope: !1505)
!1508 = !DILocation(line: 388, column: 21, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1505, file: !1, line: 388, column: 11)
!1510 = !DILocation(line: 388, column: 35, scope: !1509)
!1511 = !DILocation(line: 388, column: 23, scope: !1509)
!1512 = !DILocation(line: 388, column: 11, scope: !1505)
!1513 = !DILocation(line: 391, column: 33, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 389, column: 11)
!1515 = !DILocation(line: 391, column: 48, scope: !1514)
!1516 = !DILocation(line: 391, column: 15, scope: !1514)
!1517 = !DILocation(line: 391, column: 55, scope: !1514)
!1518 = !DILocation(line: 392, column: 33, scope: !1514)
!1519 = !DILocation(line: 392, column: 50, scope: !1514)
!1520 = !DILocation(line: 392, column: 15, scope: !1514)
!1521 = !DILocation(line: 392, column: 57, scope: !1514)
!1522 = !DILocation(line: 391, column: 61, scope: !1514)
!1523 = !DILocation(line: 393, column: 33, scope: !1514)
!1524 = !DILocation(line: 393, column: 49, scope: !1514)
!1525 = !DILocation(line: 393, column: 15, scope: !1514)
!1526 = !DILocation(line: 393, column: 56, scope: !1514)
!1527 = !DILocation(line: 392, column: 63, scope: !1514)
!1528 = !DILocation(line: 390, column: 19, scope: !1514)
!1529 = !DILocation(line: 390, column: 18, scope: !1514)
!1530 = !DILocation(line: 394, column: 28, scope: !1514)
!1531 = !DILocation(line: 394, column: 42, scope: !1514)
!1532 = !DILocation(line: 394, column: 49, scope: !1514)
!1533 = !DILocation(line: 394, column: 55, scope: !1514)
!1534 = !DILocation(line: 394, column: 15, scope: !1514)
!1535 = !DILocation(line: 394, column: 14, scope: !1514)
!1536 = !DILocation(line: 395, column: 14, scope: !1514)
!1537 = !DILocation(line: 396, column: 16, scope: !1514)
!1538 = !DILocation(line: 396, column: 30, scope: !1514)
!1539 = !DILocation(line: 396, column: 14, scope: !1514)
!1540 = !DILocation(line: 397, column: 11, scope: !1514)
!1541 = !DILocation(line: 388, column: 51, scope: !1509)
!1542 = !DILocation(line: 388, column: 11, scope: !1509)
!1543 = distinct !{!1543, !1512, !1544}
!1544 = !DILocation(line: 397, column: 11, scope: !1505)
!1545 = !DILocation(line: 398, column: 11, scope: !1506)
!1546 = !DILocation(line: 400, column: 11, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 400, column: 11)
!1548 = !DILocation(line: 400, column: 25, scope: !1547)
!1549 = !DILocation(line: 400, column: 33, scope: !1547)
!1550 = !DILocation(line: 400, column: 11, scope: !1493)
!1551 = !DILocation(line: 402, column: 17, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1553, file: !1, line: 402, column: 11)
!1553 = distinct !DILexicalBlock(scope: !1547, file: !1, line: 401, column: 9)
!1554 = !DILocation(line: 402, column: 16, scope: !1552)
!1555 = !DILocation(line: 402, column: 21, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1552, file: !1, line: 402, column: 11)
!1557 = !DILocation(line: 402, column: 35, scope: !1556)
!1558 = !DILocation(line: 402, column: 23, scope: !1556)
!1559 = !DILocation(line: 402, column: 11, scope: !1552)
!1560 = !DILocation(line: 404, column: 52, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1556, file: !1, line: 403, column: 11)
!1562 = !DILocation(line: 404, column: 67, scope: !1561)
!1563 = !DILocation(line: 404, column: 34, scope: !1561)
!1564 = !DILocation(line: 404, column: 19, scope: !1561)
!1565 = !DILocation(line: 404, column: 18, scope: !1561)
!1566 = !DILocation(line: 405, column: 35, scope: !1561)
!1567 = !DILocation(line: 405, column: 48, scope: !1561)
!1568 = !DILocation(line: 405, column: 54, scope: !1561)
!1569 = !DILocation(line: 405, column: 15, scope: !1561)
!1570 = !DILocation(line: 405, column: 14, scope: !1561)
!1571 = !DILocation(line: 406, column: 52, scope: !1561)
!1572 = !DILocation(line: 406, column: 69, scope: !1561)
!1573 = !DILocation(line: 406, column: 34, scope: !1561)
!1574 = !DILocation(line: 406, column: 19, scope: !1561)
!1575 = !DILocation(line: 406, column: 18, scope: !1561)
!1576 = !DILocation(line: 407, column: 35, scope: !1561)
!1577 = !DILocation(line: 407, column: 48, scope: !1561)
!1578 = !DILocation(line: 407, column: 54, scope: !1561)
!1579 = !DILocation(line: 407, column: 15, scope: !1561)
!1580 = !DILocation(line: 407, column: 14, scope: !1561)
!1581 = !DILocation(line: 408, column: 52, scope: !1561)
!1582 = !DILocation(line: 408, column: 68, scope: !1561)
!1583 = !DILocation(line: 408, column: 34, scope: !1561)
!1584 = !DILocation(line: 408, column: 19, scope: !1561)
!1585 = !DILocation(line: 408, column: 18, scope: !1561)
!1586 = !DILocation(line: 409, column: 35, scope: !1561)
!1587 = !DILocation(line: 409, column: 48, scope: !1561)
!1588 = !DILocation(line: 409, column: 54, scope: !1561)
!1589 = !DILocation(line: 409, column: 15, scope: !1561)
!1590 = !DILocation(line: 409, column: 14, scope: !1561)
!1591 = !DILocation(line: 410, column: 14, scope: !1561)
!1592 = !DILocation(line: 411, column: 16, scope: !1561)
!1593 = !DILocation(line: 411, column: 30, scope: !1561)
!1594 = !DILocation(line: 411, column: 14, scope: !1561)
!1595 = !DILocation(line: 412, column: 11, scope: !1561)
!1596 = !DILocation(line: 402, column: 51, scope: !1556)
!1597 = !DILocation(line: 402, column: 11, scope: !1556)
!1598 = distinct !{!1598, !1559, !1599}
!1599 = !DILocation(line: 412, column: 11, scope: !1552)
!1600 = !DILocation(line: 413, column: 11, scope: !1553)
!1601 = !DILocation(line: 415, column: 13, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 415, column: 7)
!1603 = !DILocation(line: 415, column: 12, scope: !1602)
!1604 = !DILocation(line: 415, column: 17, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1602, file: !1, line: 415, column: 7)
!1606 = !DILocation(line: 415, column: 31, scope: !1605)
!1607 = !DILocation(line: 415, column: 19, scope: !1605)
!1608 = !DILocation(line: 415, column: 7, scope: !1602)
!1609 = !DILocation(line: 417, column: 48, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1605, file: !1, line: 416, column: 7)
!1611 = !DILocation(line: 417, column: 63, scope: !1610)
!1612 = !DILocation(line: 417, column: 30, scope: !1610)
!1613 = !DILocation(line: 417, column: 15, scope: !1610)
!1614 = !DILocation(line: 417, column: 14, scope: !1610)
!1615 = !DILocation(line: 418, column: 27, scope: !1610)
!1616 = !DILocation(line: 418, column: 40, scope: !1610)
!1617 = !DILocation(line: 418, column: 46, scope: !1610)
!1618 = !DILocation(line: 418, column: 11, scope: !1610)
!1619 = !DILocation(line: 418, column: 10, scope: !1610)
!1620 = !DILocation(line: 419, column: 48, scope: !1610)
!1621 = !DILocation(line: 419, column: 65, scope: !1610)
!1622 = !DILocation(line: 419, column: 30, scope: !1610)
!1623 = !DILocation(line: 419, column: 15, scope: !1610)
!1624 = !DILocation(line: 419, column: 14, scope: !1610)
!1625 = !DILocation(line: 420, column: 27, scope: !1610)
!1626 = !DILocation(line: 420, column: 40, scope: !1610)
!1627 = !DILocation(line: 420, column: 46, scope: !1610)
!1628 = !DILocation(line: 420, column: 11, scope: !1610)
!1629 = !DILocation(line: 420, column: 10, scope: !1610)
!1630 = !DILocation(line: 421, column: 48, scope: !1610)
!1631 = !DILocation(line: 421, column: 64, scope: !1610)
!1632 = !DILocation(line: 421, column: 30, scope: !1610)
!1633 = !DILocation(line: 421, column: 15, scope: !1610)
!1634 = !DILocation(line: 421, column: 14, scope: !1610)
!1635 = !DILocation(line: 422, column: 27, scope: !1610)
!1636 = !DILocation(line: 422, column: 40, scope: !1610)
!1637 = !DILocation(line: 422, column: 46, scope: !1610)
!1638 = !DILocation(line: 422, column: 11, scope: !1610)
!1639 = !DILocation(line: 422, column: 10, scope: !1610)
!1640 = !DILocation(line: 423, column: 10, scope: !1610)
!1641 = !DILocation(line: 424, column: 12, scope: !1610)
!1642 = !DILocation(line: 424, column: 26, scope: !1610)
!1643 = !DILocation(line: 424, column: 10, scope: !1610)
!1644 = !DILocation(line: 425, column: 7, scope: !1610)
!1645 = !DILocation(line: 415, column: 47, scope: !1605)
!1646 = !DILocation(line: 415, column: 7, scope: !1605)
!1647 = distinct !{!1647, !1608, !1648}
!1648 = !DILocation(line: 425, column: 7, scope: !1602)
!1649 = !DILocation(line: 426, column: 7, scope: !1493)
!1650 = !DILocalVariable(name: "pixel", scope: !1651, file: !1, line: 431, type: !5)
!1651 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 429, column: 5)
!1652 = !DILocation(line: 431, column: 9, scope: !1651)
!1653 = !DILocation(line: 433, column: 29, scope: !1651)
!1654 = !DILocation(line: 433, column: 43, scope: !1651)
!1655 = !DILocation(line: 433, column: 13, scope: !1651)
!1656 = !DILocation(line: 433, column: 12, scope: !1651)
!1657 = !DILocation(line: 434, column: 11, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 434, column: 11)
!1659 = !DILocation(line: 434, column: 25, scope: !1658)
!1660 = !DILocation(line: 434, column: 30, scope: !1658)
!1661 = !DILocation(line: 434, column: 11, scope: !1651)
!1662 = !DILocation(line: 436, column: 17, scope: !1663)
!1663 = distinct !DILexicalBlock(scope: !1664, file: !1, line: 436, column: 11)
!1664 = distinct !DILexicalBlock(scope: !1658, file: !1, line: 435, column: 9)
!1665 = !DILocation(line: 436, column: 16, scope: !1663)
!1666 = !DILocation(line: 436, column: 21, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 436, column: 11)
!1668 = !DILocation(line: 436, column: 38, scope: !1667)
!1669 = !DILocation(line: 436, column: 37, scope: !1667)
!1670 = !DILocation(line: 436, column: 51, scope: !1667)
!1671 = !DILocation(line: 436, column: 23, scope: !1667)
!1672 = !DILocation(line: 436, column: 11, scope: !1663)
!1673 = !DILocation(line: 438, column: 21, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1667, file: !1, line: 437, column: 11)
!1675 = !DILocation(line: 438, column: 23, scope: !1674)
!1676 = !DILocation(line: 438, column: 13, scope: !1674)
!1677 = !DILocation(line: 439, column: 13, scope: !1674)
!1678 = !DILocation(line: 443, column: 56, scope: !1679)
!1679 = distinct !DILexicalBlock(scope: !1680, file: !1, line: 442, column: 15)
!1680 = distinct !DILexicalBlock(scope: !1674, file: !1, line: 439, column: 13)
!1681 = !DILocation(line: 443, column: 71, scope: !1679)
!1682 = !DILocation(line: 443, column: 38, scope: !1679)
!1683 = !DILocation(line: 443, column: 23, scope: !1679)
!1684 = !DILocation(line: 443, column: 22, scope: !1679)
!1685 = !DILocation(line: 444, column: 17, scope: !1679)
!1686 = !DILocation(line: 448, column: 56, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1680, file: !1, line: 447, column: 15)
!1688 = !DILocation(line: 448, column: 73, scope: !1687)
!1689 = !DILocation(line: 448, column: 38, scope: !1687)
!1690 = !DILocation(line: 448, column: 23, scope: !1687)
!1691 = !DILocation(line: 448, column: 22, scope: !1687)
!1692 = !DILocation(line: 449, column: 17, scope: !1687)
!1693 = !DILocation(line: 453, column: 56, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1680, file: !1, line: 452, column: 15)
!1695 = !DILocation(line: 453, column: 72, scope: !1694)
!1696 = !DILocation(line: 453, column: 38, scope: !1694)
!1697 = !DILocation(line: 453, column: 23, scope: !1694)
!1698 = !DILocation(line: 453, column: 22, scope: !1694)
!1699 = !DILocation(line: 454, column: 18, scope: !1694)
!1700 = !DILocation(line: 455, column: 17, scope: !1694)
!1701 = !DILocation(line: 458, column: 29, scope: !1674)
!1702 = !DILocation(line: 458, column: 43, scope: !1674)
!1703 = !DILocation(line: 458, column: 68, scope: !1674)
!1704 = !DILocation(line: 458, column: 74, scope: !1674)
!1705 = !DILocation(line: 458, column: 50, scope: !1674)
!1706 = !DILocation(line: 458, column: 80, scope: !1674)
!1707 = !DILocation(line: 458, column: 15, scope: !1674)
!1708 = !DILocation(line: 458, column: 14, scope: !1674)
!1709 = !DILocation(line: 459, column: 22, scope: !1674)
!1710 = !DILocation(line: 459, column: 23, scope: !1674)
!1711 = !DILocation(line: 459, column: 27, scope: !1674)
!1712 = !DILocation(line: 459, column: 13, scope: !1674)
!1713 = !DILocation(line: 460, column: 13, scope: !1674)
!1714 = !DILocation(line: 464, column: 56, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 463, column: 15)
!1716 = distinct !DILexicalBlock(scope: !1674, file: !1, line: 460, column: 13)
!1717 = !DILocation(line: 464, column: 71, scope: !1715)
!1718 = !DILocation(line: 464, column: 38, scope: !1715)
!1719 = !DILocation(line: 464, column: 23, scope: !1715)
!1720 = !DILocation(line: 464, column: 22, scope: !1715)
!1721 = !DILocation(line: 465, column: 17, scope: !1715)
!1722 = !DILocation(line: 469, column: 56, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 468, column: 15)
!1724 = !DILocation(line: 469, column: 73, scope: !1723)
!1725 = !DILocation(line: 469, column: 38, scope: !1723)
!1726 = !DILocation(line: 469, column: 23, scope: !1723)
!1727 = !DILocation(line: 469, column: 22, scope: !1723)
!1728 = !DILocation(line: 470, column: 17, scope: !1723)
!1729 = !DILocation(line: 474, column: 56, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 473, column: 15)
!1731 = !DILocation(line: 474, column: 72, scope: !1730)
!1732 = !DILocation(line: 474, column: 38, scope: !1730)
!1733 = !DILocation(line: 474, column: 23, scope: !1730)
!1734 = !DILocation(line: 474, column: 22, scope: !1730)
!1735 = !DILocation(line: 475, column: 18, scope: !1730)
!1736 = !DILocation(line: 476, column: 17, scope: !1730)
!1737 = !DILocation(line: 479, column: 29, scope: !1674)
!1738 = !DILocation(line: 479, column: 43, scope: !1674)
!1739 = !DILocation(line: 479, column: 68, scope: !1674)
!1740 = !DILocation(line: 479, column: 74, scope: !1674)
!1741 = !DILocation(line: 479, column: 50, scope: !1674)
!1742 = !DILocation(line: 479, column: 80, scope: !1674)
!1743 = !DILocation(line: 479, column: 15, scope: !1674)
!1744 = !DILocation(line: 479, column: 14, scope: !1674)
!1745 = !DILocation(line: 480, column: 16, scope: !1674)
!1746 = !DILocation(line: 480, column: 30, scope: !1674)
!1747 = !DILocation(line: 480, column: 14, scope: !1674)
!1748 = !DILocation(line: 481, column: 11, scope: !1674)
!1749 = !DILocation(line: 436, column: 57, scope: !1667)
!1750 = !DILocation(line: 436, column: 11, scope: !1667)
!1751 = distinct !{!1751, !1672, !1752}
!1752 = !DILocation(line: 481, column: 11, scope: !1663)
!1753 = !DILocation(line: 482, column: 19, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1664, file: !1, line: 482, column: 11)
!1755 = !DILocation(line: 482, column: 16, scope: !1754)
!1756 = !DILocation(line: 482, column: 23, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 482, column: 11)
!1758 = !DILocation(line: 482, column: 42, scope: !1757)
!1759 = !DILocation(line: 482, column: 41, scope: !1757)
!1760 = !DILocation(line: 482, column: 56, scope: !1757)
!1761 = !DILocation(line: 482, column: 27, scope: !1757)
!1762 = !DILocation(line: 482, column: 11, scope: !1754)
!1763 = !DILocation(line: 484, column: 22, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 483, column: 11)
!1765 = !DILocation(line: 484, column: 24, scope: !1764)
!1766 = !DILocation(line: 484, column: 23, scope: !1764)
!1767 = !DILocation(line: 484, column: 29, scope: !1764)
!1768 = !DILocation(line: 484, column: 13, scope: !1764)
!1769 = !DILocation(line: 485, column: 13, scope: !1764)
!1770 = !DILocation(line: 489, column: 56, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 488, column: 15)
!1772 = distinct !DILexicalBlock(scope: !1764, file: !1, line: 485, column: 13)
!1773 = !DILocation(line: 489, column: 71, scope: !1771)
!1774 = !DILocation(line: 489, column: 38, scope: !1771)
!1775 = !DILocation(line: 489, column: 23, scope: !1771)
!1776 = !DILocation(line: 489, column: 22, scope: !1771)
!1777 = !DILocation(line: 490, column: 17, scope: !1771)
!1778 = !DILocation(line: 494, column: 56, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 493, column: 15)
!1780 = !DILocation(line: 494, column: 73, scope: !1779)
!1781 = !DILocation(line: 494, column: 38, scope: !1779)
!1782 = !DILocation(line: 494, column: 23, scope: !1779)
!1783 = !DILocation(line: 494, column: 22, scope: !1779)
!1784 = !DILocation(line: 495, column: 17, scope: !1779)
!1785 = !DILocation(line: 499, column: 56, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1772, file: !1, line: 498, column: 15)
!1787 = !DILocation(line: 499, column: 72, scope: !1786)
!1788 = !DILocation(line: 499, column: 38, scope: !1786)
!1789 = !DILocation(line: 499, column: 23, scope: !1786)
!1790 = !DILocation(line: 499, column: 22, scope: !1786)
!1791 = !DILocation(line: 500, column: 18, scope: !1786)
!1792 = !DILocation(line: 501, column: 17, scope: !1786)
!1793 = !DILocation(line: 504, column: 29, scope: !1764)
!1794 = !DILocation(line: 504, column: 43, scope: !1764)
!1795 = !DILocation(line: 504, column: 68, scope: !1764)
!1796 = !DILocation(line: 504, column: 74, scope: !1764)
!1797 = !DILocation(line: 504, column: 50, scope: !1764)
!1798 = !DILocation(line: 504, column: 80, scope: !1764)
!1799 = !DILocation(line: 504, column: 15, scope: !1764)
!1800 = !DILocation(line: 504, column: 14, scope: !1764)
!1801 = !DILocation(line: 505, column: 16, scope: !1764)
!1802 = !DILocation(line: 505, column: 30, scope: !1764)
!1803 = !DILocation(line: 505, column: 14, scope: !1764)
!1804 = !DILocation(line: 506, column: 11, scope: !1764)
!1805 = !DILocation(line: 482, column: 65, scope: !1757)
!1806 = !DILocation(line: 482, column: 11, scope: !1757)
!1807 = distinct !{!1807, !1762, !1808}
!1808 = !DILocation(line: 506, column: 11, scope: !1754)
!1809 = !DILocation(line: 507, column: 15, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !1664, file: !1, line: 507, column: 15)
!1811 = !DILocation(line: 507, column: 19, scope: !1810)
!1812 = !DILocation(line: 507, column: 15, scope: !1664)
!1813 = !DILocation(line: 508, column: 14, scope: !1810)
!1814 = !DILocation(line: 508, column: 13, scope: !1810)
!1815 = !DILocation(line: 509, column: 11, scope: !1664)
!1816 = !DILocation(line: 511, column: 11, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 511, column: 11)
!1818 = !DILocation(line: 511, column: 25, scope: !1817)
!1819 = !DILocation(line: 511, column: 33, scope: !1817)
!1820 = !DILocation(line: 511, column: 11, scope: !1651)
!1821 = !DILocation(line: 513, column: 17, scope: !1822)
!1822 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 513, column: 11)
!1823 = distinct !DILexicalBlock(scope: !1817, file: !1, line: 512, column: 9)
!1824 = !DILocation(line: 513, column: 16, scope: !1822)
!1825 = !DILocation(line: 513, column: 21, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 513, column: 11)
!1827 = !DILocation(line: 513, column: 35, scope: !1826)
!1828 = !DILocation(line: 513, column: 23, scope: !1826)
!1829 = !DILocation(line: 513, column: 11, scope: !1822)
!1830 = !DILocation(line: 515, column: 52, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1826, file: !1, line: 514, column: 11)
!1832 = !DILocation(line: 515, column: 67, scope: !1831)
!1833 = !DILocation(line: 515, column: 34, scope: !1831)
!1834 = !DILocation(line: 515, column: 19, scope: !1831)
!1835 = !DILocation(line: 515, column: 18, scope: !1831)
!1836 = !DILocation(line: 516, column: 35, scope: !1831)
!1837 = !DILocation(line: 516, column: 48, scope: !1831)
!1838 = !DILocation(line: 516, column: 54, scope: !1831)
!1839 = !DILocation(line: 516, column: 15, scope: !1831)
!1840 = !DILocation(line: 516, column: 14, scope: !1831)
!1841 = !DILocation(line: 517, column: 52, scope: !1831)
!1842 = !DILocation(line: 517, column: 69, scope: !1831)
!1843 = !DILocation(line: 517, column: 34, scope: !1831)
!1844 = !DILocation(line: 517, column: 19, scope: !1831)
!1845 = !DILocation(line: 517, column: 18, scope: !1831)
!1846 = !DILocation(line: 518, column: 35, scope: !1831)
!1847 = !DILocation(line: 518, column: 48, scope: !1831)
!1848 = !DILocation(line: 518, column: 54, scope: !1831)
!1849 = !DILocation(line: 518, column: 15, scope: !1831)
!1850 = !DILocation(line: 518, column: 14, scope: !1831)
!1851 = !DILocation(line: 519, column: 52, scope: !1831)
!1852 = !DILocation(line: 519, column: 68, scope: !1831)
!1853 = !DILocation(line: 519, column: 34, scope: !1831)
!1854 = !DILocation(line: 519, column: 19, scope: !1831)
!1855 = !DILocation(line: 519, column: 18, scope: !1831)
!1856 = !DILocation(line: 520, column: 35, scope: !1831)
!1857 = !DILocation(line: 520, column: 48, scope: !1831)
!1858 = !DILocation(line: 520, column: 54, scope: !1831)
!1859 = !DILocation(line: 520, column: 15, scope: !1831)
!1860 = !DILocation(line: 520, column: 14, scope: !1831)
!1861 = !DILocation(line: 521, column: 14, scope: !1831)
!1862 = !DILocation(line: 522, column: 16, scope: !1831)
!1863 = !DILocation(line: 522, column: 30, scope: !1831)
!1864 = !DILocation(line: 522, column: 14, scope: !1831)
!1865 = !DILocation(line: 523, column: 11, scope: !1831)
!1866 = !DILocation(line: 513, column: 51, scope: !1826)
!1867 = !DILocation(line: 513, column: 11, scope: !1826)
!1868 = distinct !{!1868, !1829, !1869}
!1869 = !DILocation(line: 523, column: 11, scope: !1822)
!1870 = !DILocation(line: 524, column: 11, scope: !1823)
!1871 = !DILocation(line: 526, column: 13, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 526, column: 7)
!1873 = !DILocation(line: 526, column: 12, scope: !1872)
!1874 = !DILocation(line: 526, column: 17, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1872, file: !1, line: 526, column: 7)
!1876 = !DILocation(line: 526, column: 31, scope: !1875)
!1877 = !DILocation(line: 526, column: 19, scope: !1875)
!1878 = !DILocation(line: 526, column: 7, scope: !1872)
!1879 = !DILocation(line: 528, column: 48, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1875, file: !1, line: 527, column: 7)
!1881 = !DILocation(line: 528, column: 63, scope: !1880)
!1882 = !DILocation(line: 528, column: 30, scope: !1880)
!1883 = !DILocation(line: 528, column: 15, scope: !1880)
!1884 = !DILocation(line: 528, column: 14, scope: !1880)
!1885 = !DILocation(line: 529, column: 27, scope: !1880)
!1886 = !DILocation(line: 529, column: 40, scope: !1880)
!1887 = !DILocation(line: 529, column: 46, scope: !1880)
!1888 = !DILocation(line: 529, column: 11, scope: !1880)
!1889 = !DILocation(line: 529, column: 10, scope: !1880)
!1890 = !DILocation(line: 530, column: 48, scope: !1880)
!1891 = !DILocation(line: 530, column: 65, scope: !1880)
!1892 = !DILocation(line: 530, column: 30, scope: !1880)
!1893 = !DILocation(line: 530, column: 15, scope: !1880)
!1894 = !DILocation(line: 530, column: 14, scope: !1880)
!1895 = !DILocation(line: 531, column: 27, scope: !1880)
!1896 = !DILocation(line: 531, column: 40, scope: !1880)
!1897 = !DILocation(line: 531, column: 46, scope: !1880)
!1898 = !DILocation(line: 531, column: 11, scope: !1880)
!1899 = !DILocation(line: 531, column: 10, scope: !1880)
!1900 = !DILocation(line: 532, column: 48, scope: !1880)
!1901 = !DILocation(line: 532, column: 64, scope: !1880)
!1902 = !DILocation(line: 532, column: 30, scope: !1880)
!1903 = !DILocation(line: 532, column: 15, scope: !1880)
!1904 = !DILocation(line: 532, column: 14, scope: !1880)
!1905 = !DILocation(line: 533, column: 27, scope: !1880)
!1906 = !DILocation(line: 533, column: 40, scope: !1880)
!1907 = !DILocation(line: 533, column: 46, scope: !1880)
!1908 = !DILocation(line: 533, column: 11, scope: !1880)
!1909 = !DILocation(line: 533, column: 10, scope: !1880)
!1910 = !DILocation(line: 534, column: 10, scope: !1880)
!1911 = !DILocation(line: 535, column: 12, scope: !1880)
!1912 = !DILocation(line: 535, column: 26, scope: !1880)
!1913 = !DILocation(line: 535, column: 10, scope: !1880)
!1914 = !DILocation(line: 536, column: 7, scope: !1880)
!1915 = !DILocation(line: 526, column: 47, scope: !1875)
!1916 = !DILocation(line: 526, column: 7, scope: !1875)
!1917 = distinct !{!1917, !1878, !1918}
!1918 = !DILocation(line: 536, column: 7, scope: !1872)
!1919 = !DILocation(line: 537, column: 7, scope: !1651)
!1920 = !DILocalVariable(name: "pixel", scope: !1921, file: !1, line: 542, type: !449)
!1921 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 540, column: 5)
!1922 = !DILocation(line: 542, column: 9, scope: !1921)
!1923 = !DILocation(line: 544, column: 11, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 544, column: 11)
!1925 = !DILocation(line: 544, column: 25, scope: !1924)
!1926 = !DILocation(line: 544, column: 32, scope: !1924)
!1927 = !DILocation(line: 544, column: 11, scope: !1921)
!1928 = !DILocation(line: 546, column: 17, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !1, line: 546, column: 11)
!1930 = distinct !DILexicalBlock(scope: !1924, file: !1, line: 545, column: 9)
!1931 = !DILocation(line: 546, column: 16, scope: !1929)
!1932 = !DILocation(line: 546, column: 21, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1929, file: !1, line: 546, column: 11)
!1934 = !DILocation(line: 546, column: 35, scope: !1933)
!1935 = !DILocation(line: 546, column: 23, scope: !1933)
!1936 = !DILocation(line: 546, column: 11, scope: !1929)
!1937 = !DILocation(line: 548, column: 54, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1933, file: !1, line: 547, column: 11)
!1939 = !DILocation(line: 548, column: 53, scope: !1938)
!1940 = !DILocation(line: 548, column: 41, scope: !1938)
!1941 = !DILocation(line: 548, column: 19, scope: !1938)
!1942 = !DILocation(line: 548, column: 18, scope: !1938)
!1943 = !DILocation(line: 549, column: 29, scope: !1938)
!1944 = !DILocation(line: 549, column: 43, scope: !1938)
!1945 = !DILocation(line: 549, column: 50, scope: !1938)
!1946 = !DILocation(line: 549, column: 56, scope: !1938)
!1947 = !DILocation(line: 549, column: 15, scope: !1938)
!1948 = !DILocation(line: 549, column: 14, scope: !1938)
!1949 = !DILocation(line: 550, column: 54, scope: !1938)
!1950 = !DILocation(line: 550, column: 53, scope: !1938)
!1951 = !DILocation(line: 550, column: 41, scope: !1938)
!1952 = !DILocation(line: 550, column: 19, scope: !1938)
!1953 = !DILocation(line: 550, column: 18, scope: !1938)
!1954 = !DILocation(line: 551, column: 29, scope: !1938)
!1955 = !DILocation(line: 551, column: 43, scope: !1938)
!1956 = !DILocation(line: 551, column: 50, scope: !1938)
!1957 = !DILocation(line: 551, column: 56, scope: !1938)
!1958 = !DILocation(line: 551, column: 15, scope: !1938)
!1959 = !DILocation(line: 551, column: 14, scope: !1938)
!1960 = !DILocation(line: 552, column: 54, scope: !1938)
!1961 = !DILocation(line: 552, column: 53, scope: !1938)
!1962 = !DILocation(line: 552, column: 41, scope: !1938)
!1963 = !DILocation(line: 552, column: 19, scope: !1938)
!1964 = !DILocation(line: 552, column: 18, scope: !1938)
!1965 = !DILocation(line: 553, column: 29, scope: !1938)
!1966 = !DILocation(line: 553, column: 43, scope: !1938)
!1967 = !DILocation(line: 553, column: 50, scope: !1938)
!1968 = !DILocation(line: 553, column: 56, scope: !1938)
!1969 = !DILocation(line: 553, column: 15, scope: !1938)
!1970 = !DILocation(line: 553, column: 14, scope: !1938)
!1971 = !DILocation(line: 554, column: 14, scope: !1938)
!1972 = !DILocation(line: 555, column: 16, scope: !1938)
!1973 = !DILocation(line: 555, column: 30, scope: !1938)
!1974 = !DILocation(line: 555, column: 14, scope: !1938)
!1975 = !DILocation(line: 556, column: 11, scope: !1938)
!1976 = !DILocation(line: 546, column: 51, scope: !1933)
!1977 = !DILocation(line: 546, column: 11, scope: !1933)
!1978 = distinct !{!1978, !1936, !1979}
!1979 = !DILocation(line: 556, column: 11, scope: !1929)
!1980 = !DILocation(line: 557, column: 11, scope: !1930)
!1981 = !DILocation(line: 559, column: 13, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 559, column: 7)
!1983 = !DILocation(line: 559, column: 12, scope: !1982)
!1984 = !DILocation(line: 559, column: 17, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1982, file: !1, line: 559, column: 7)
!1986 = !DILocation(line: 559, column: 31, scope: !1985)
!1987 = !DILocation(line: 559, column: 19, scope: !1985)
!1988 = !DILocation(line: 559, column: 7, scope: !1982)
!1989 = !DILocation(line: 561, column: 35, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1985, file: !1, line: 560, column: 7)
!1991 = !DILocation(line: 561, column: 15, scope: !1990)
!1992 = !DILocation(line: 561, column: 14, scope: !1990)
!1993 = !DILocation(line: 562, column: 25, scope: !1990)
!1994 = !DILocation(line: 562, column: 39, scope: !1990)
!1995 = !DILocation(line: 562, column: 46, scope: !1990)
!1996 = !DILocation(line: 562, column: 52, scope: !1990)
!1997 = !DILocation(line: 562, column: 11, scope: !1990)
!1998 = !DILocation(line: 562, column: 10, scope: !1990)
!1999 = !DILocation(line: 563, column: 35, scope: !1990)
!2000 = !DILocation(line: 563, column: 15, scope: !1990)
!2001 = !DILocation(line: 563, column: 14, scope: !1990)
!2002 = !DILocation(line: 564, column: 25, scope: !1990)
!2003 = !DILocation(line: 564, column: 39, scope: !1990)
!2004 = !DILocation(line: 564, column: 46, scope: !1990)
!2005 = !DILocation(line: 564, column: 52, scope: !1990)
!2006 = !DILocation(line: 564, column: 11, scope: !1990)
!2007 = !DILocation(line: 564, column: 10, scope: !1990)
!2008 = !DILocation(line: 565, column: 35, scope: !1990)
!2009 = !DILocation(line: 565, column: 15, scope: !1990)
!2010 = !DILocation(line: 565, column: 14, scope: !1990)
!2011 = !DILocation(line: 566, column: 25, scope: !1990)
!2012 = !DILocation(line: 566, column: 39, scope: !1990)
!2013 = !DILocation(line: 566, column: 46, scope: !1990)
!2014 = !DILocation(line: 566, column: 52, scope: !1990)
!2015 = !DILocation(line: 566, column: 11, scope: !1990)
!2016 = !DILocation(line: 566, column: 10, scope: !1990)
!2017 = !DILocation(line: 567, column: 10, scope: !1990)
!2018 = !DILocation(line: 568, column: 12, scope: !1990)
!2019 = !DILocation(line: 568, column: 26, scope: !1990)
!2020 = !DILocation(line: 568, column: 10, scope: !1990)
!2021 = !DILocation(line: 569, column: 7, scope: !1990)
!2022 = !DILocation(line: 559, column: 47, scope: !1985)
!2023 = !DILocation(line: 559, column: 7, scope: !1985)
!2024 = distinct !{!2024, !1988, !2025}
!2025 = !DILocation(line: 569, column: 7, scope: !1982)
!2026 = !DILocation(line: 570, column: 7, scope: !1921)
!2027 = !DILocalVariable(name: "pixel", scope: !2028, file: !1, line: 575, type: !5)
!2028 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 573, column: 5)
!2029 = !DILocation(line: 575, column: 9, scope: !2028)
!2030 = !DILocation(line: 577, column: 11, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !2028, file: !1, line: 577, column: 11)
!2032 = !DILocation(line: 577, column: 25, scope: !2031)
!2033 = !DILocation(line: 577, column: 32, scope: !2031)
!2034 = !DILocation(line: 577, column: 11, scope: !2028)
!2035 = !DILocation(line: 579, column: 17, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2037, file: !1, line: 579, column: 11)
!2037 = distinct !DILexicalBlock(scope: !2031, file: !1, line: 578, column: 9)
!2038 = !DILocation(line: 579, column: 16, scope: !2036)
!2039 = !DILocation(line: 579, column: 21, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2036, file: !1, line: 579, column: 11)
!2041 = !DILocation(line: 579, column: 35, scope: !2040)
!2042 = !DILocation(line: 579, column: 23, scope: !2040)
!2043 = !DILocation(line: 579, column: 11, scope: !2036)
!2044 = !DILocation(line: 581, column: 29, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2040, file: !1, line: 580, column: 11)
!2046 = !DILocation(line: 581, column: 50, scope: !2045)
!2047 = !DILocation(line: 581, column: 42, scope: !2045)
!2048 = !DILocation(line: 581, column: 65, scope: !2045)
!2049 = !DILocation(line: 581, column: 15, scope: !2045)
!2050 = !DILocation(line: 581, column: 14, scope: !2045)
!2051 = !DILocation(line: 582, column: 29, scope: !2045)
!2052 = !DILocation(line: 582, column: 50, scope: !2045)
!2053 = !DILocation(line: 582, column: 42, scope: !2045)
!2054 = !DILocation(line: 582, column: 67, scope: !2045)
!2055 = !DILocation(line: 582, column: 15, scope: !2045)
!2056 = !DILocation(line: 582, column: 14, scope: !2045)
!2057 = !DILocation(line: 583, column: 29, scope: !2045)
!2058 = !DILocation(line: 583, column: 50, scope: !2045)
!2059 = !DILocation(line: 583, column: 42, scope: !2045)
!2060 = !DILocation(line: 583, column: 66, scope: !2045)
!2061 = !DILocation(line: 583, column: 15, scope: !2045)
!2062 = !DILocation(line: 583, column: 14, scope: !2045)
!2063 = !DILocation(line: 584, column: 14, scope: !2045)
!2064 = !DILocation(line: 585, column: 16, scope: !2045)
!2065 = !DILocation(line: 585, column: 30, scope: !2045)
!2066 = !DILocation(line: 585, column: 14, scope: !2045)
!2067 = !DILocation(line: 586, column: 11, scope: !2045)
!2068 = !DILocation(line: 579, column: 51, scope: !2040)
!2069 = !DILocation(line: 579, column: 11, scope: !2040)
!2070 = distinct !{!2070, !2043, !2071}
!2071 = !DILocation(line: 586, column: 11, scope: !2036)
!2072 = !DILocation(line: 587, column: 11, scope: !2037)
!2073 = !DILocation(line: 589, column: 13, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2028, file: !1, line: 589, column: 7)
!2075 = !DILocation(line: 589, column: 12, scope: !2074)
!2076 = !DILocation(line: 589, column: 17, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2074, file: !1, line: 589, column: 7)
!2078 = !DILocation(line: 589, column: 31, scope: !2077)
!2079 = !DILocation(line: 589, column: 19, scope: !2077)
!2080 = !DILocation(line: 589, column: 7, scope: !2074)
!2081 = !DILocation(line: 591, column: 34, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2077, file: !1, line: 590, column: 7)
!2083 = !DILocation(line: 591, column: 15, scope: !2082)
!2084 = !DILocation(line: 591, column: 14, scope: !2082)
!2085 = !DILocation(line: 592, column: 24, scope: !2082)
!2086 = !DILocation(line: 592, column: 38, scope: !2082)
!2087 = !DILocation(line: 592, column: 45, scope: !2082)
!2088 = !DILocation(line: 592, column: 51, scope: !2082)
!2089 = !DILocation(line: 592, column: 11, scope: !2082)
!2090 = !DILocation(line: 592, column: 10, scope: !2082)
!2091 = !DILocation(line: 593, column: 34, scope: !2082)
!2092 = !DILocation(line: 593, column: 15, scope: !2082)
!2093 = !DILocation(line: 593, column: 14, scope: !2082)
!2094 = !DILocation(line: 594, column: 24, scope: !2082)
!2095 = !DILocation(line: 594, column: 38, scope: !2082)
!2096 = !DILocation(line: 594, column: 45, scope: !2082)
!2097 = !DILocation(line: 594, column: 51, scope: !2082)
!2098 = !DILocation(line: 594, column: 11, scope: !2082)
!2099 = !DILocation(line: 594, column: 10, scope: !2082)
!2100 = !DILocation(line: 595, column: 34, scope: !2082)
!2101 = !DILocation(line: 595, column: 15, scope: !2082)
!2102 = !DILocation(line: 595, column: 14, scope: !2082)
!2103 = !DILocation(line: 596, column: 24, scope: !2082)
!2104 = !DILocation(line: 596, column: 38, scope: !2082)
!2105 = !DILocation(line: 596, column: 45, scope: !2082)
!2106 = !DILocation(line: 596, column: 51, scope: !2082)
!2107 = !DILocation(line: 596, column: 11, scope: !2082)
!2108 = !DILocation(line: 596, column: 10, scope: !2082)
!2109 = !DILocation(line: 597, column: 10, scope: !2082)
!2110 = !DILocation(line: 598, column: 12, scope: !2082)
!2111 = !DILocation(line: 598, column: 26, scope: !2082)
!2112 = !DILocation(line: 598, column: 10, scope: !2082)
!2113 = !DILocation(line: 599, column: 7, scope: !2082)
!2114 = !DILocation(line: 589, column: 47, scope: !2077)
!2115 = !DILocation(line: 589, column: 7, scope: !2077)
!2116 = distinct !{!2116, !2080, !2117}
!2117 = !DILocation(line: 599, column: 7, scope: !2074)
!2118 = !DILocation(line: 600, column: 7, scope: !2028)
!2119 = !DILocation(line: 604, column: 11, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !1, line: 604, column: 11)
!2121 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 603, column: 5)
!2122 = !DILocation(line: 604, column: 25, scope: !2120)
!2123 = !DILocation(line: 604, column: 32, scope: !2120)
!2124 = !DILocation(line: 604, column: 11, scope: !2121)
!2125 = !DILocation(line: 606, column: 17, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2127, file: !1, line: 606, column: 11)
!2127 = distinct !DILexicalBlock(scope: !2120, file: !1, line: 605, column: 9)
!2128 = !DILocation(line: 606, column: 16, scope: !2126)
!2129 = !DILocation(line: 606, column: 21, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2126, file: !1, line: 606, column: 11)
!2131 = !DILocation(line: 606, column: 35, scope: !2130)
!2132 = !DILocation(line: 606, column: 23, scope: !2130)
!2133 = !DILocation(line: 606, column: 11, scope: !2126)
!2134 = !DILocation(line: 608, column: 30, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2130, file: !1, line: 607, column: 11)
!2136 = !DILocation(line: 608, column: 52, scope: !2135)
!2137 = !DILocation(line: 608, column: 43, scope: !2135)
!2138 = !DILocation(line: 608, column: 67, scope: !2135)
!2139 = !DILocation(line: 608, column: 15, scope: !2135)
!2140 = !DILocation(line: 608, column: 14, scope: !2135)
!2141 = !DILocation(line: 609, column: 30, scope: !2135)
!2142 = !DILocation(line: 609, column: 52, scope: !2135)
!2143 = !DILocation(line: 609, column: 43, scope: !2135)
!2144 = !DILocation(line: 609, column: 69, scope: !2135)
!2145 = !DILocation(line: 609, column: 15, scope: !2135)
!2146 = !DILocation(line: 609, column: 14, scope: !2135)
!2147 = !DILocation(line: 610, column: 30, scope: !2135)
!2148 = !DILocation(line: 610, column: 52, scope: !2135)
!2149 = !DILocation(line: 610, column: 43, scope: !2135)
!2150 = !DILocation(line: 610, column: 68, scope: !2135)
!2151 = !DILocation(line: 610, column: 15, scope: !2135)
!2152 = !DILocation(line: 610, column: 14, scope: !2135)
!2153 = !DILocation(line: 611, column: 14, scope: !2135)
!2154 = !DILocation(line: 612, column: 16, scope: !2135)
!2155 = !DILocation(line: 612, column: 30, scope: !2135)
!2156 = !DILocation(line: 612, column: 14, scope: !2135)
!2157 = !DILocation(line: 613, column: 11, scope: !2135)
!2158 = !DILocation(line: 606, column: 51, scope: !2130)
!2159 = !DILocation(line: 606, column: 11, scope: !2130)
!2160 = distinct !{!2160, !2133, !2161}
!2161 = !DILocation(line: 613, column: 11, scope: !2126)
!2162 = !DILocation(line: 614, column: 11, scope: !2127)
!2163 = !DILocation(line: 616, column: 5, scope: !2121)
!2164 = !DILocation(line: 619, column: 29, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 618, column: 5)
!2166 = !DILocation(line: 619, column: 43, scope: !2165)
!2167 = !DILocation(line: 619, column: 13, scope: !2165)
!2168 = !DILocation(line: 619, column: 12, scope: !2165)
!2169 = !DILocation(line: 620, column: 13, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 620, column: 7)
!2171 = !DILocation(line: 620, column: 12, scope: !2170)
!2172 = !DILocation(line: 620, column: 17, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2170, file: !1, line: 620, column: 7)
!2174 = !DILocation(line: 620, column: 31, scope: !2173)
!2175 = !DILocation(line: 620, column: 19, scope: !2173)
!2176 = !DILocation(line: 620, column: 7, scope: !2170)
!2177 = !DILocation(line: 622, column: 27, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2173, file: !1, line: 621, column: 7)
!2179 = !DILocation(line: 623, column: 29, scope: !2178)
!2180 = !DILocation(line: 623, column: 44, scope: !2178)
!2181 = !DILocation(line: 623, column: 11, scope: !2178)
!2182 = !DILocation(line: 623, column: 51, scope: !2178)
!2183 = !DILocation(line: 622, column: 11, scope: !2178)
!2184 = !DILocation(line: 622, column: 10, scope: !2178)
!2185 = !DILocation(line: 624, column: 27, scope: !2178)
!2186 = !DILocation(line: 625, column: 29, scope: !2178)
!2187 = !DILocation(line: 625, column: 46, scope: !2178)
!2188 = !DILocation(line: 625, column: 11, scope: !2178)
!2189 = !DILocation(line: 625, column: 53, scope: !2178)
!2190 = !DILocation(line: 624, column: 11, scope: !2178)
!2191 = !DILocation(line: 624, column: 10, scope: !2178)
!2192 = !DILocation(line: 626, column: 27, scope: !2178)
!2193 = !DILocation(line: 627, column: 29, scope: !2178)
!2194 = !DILocation(line: 627, column: 45, scope: !2178)
!2195 = !DILocation(line: 627, column: 11, scope: !2178)
!2196 = !DILocation(line: 627, column: 52, scope: !2178)
!2197 = !DILocation(line: 626, column: 11, scope: !2178)
!2198 = !DILocation(line: 626, column: 10, scope: !2178)
!2199 = !DILocation(line: 628, column: 10, scope: !2178)
!2200 = !DILocation(line: 629, column: 12, scope: !2178)
!2201 = !DILocation(line: 629, column: 26, scope: !2178)
!2202 = !DILocation(line: 629, column: 10, scope: !2178)
!2203 = !DILocation(line: 630, column: 7, scope: !2178)
!2204 = !DILocation(line: 620, column: 47, scope: !2173)
!2205 = !DILocation(line: 620, column: 7, scope: !2173)
!2206 = distinct !{!2206, !2176, !2207}
!2207 = !DILocation(line: 630, column: 7, scope: !2170)
!2208 = !DILocation(line: 631, column: 7, scope: !2165)
!2209 = !DILocation(line: 634, column: 1, scope: !1438)
!2210 = distinct !DISubprogram(name: "ExportBGRAQuantum", scope: !1, file: !1, line: 636, type: !1182, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2211 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !2210, file: !1, line: 636, type: !459)
!2212 = !DILocation(line: 636, column: 44, scope: !2210)
!2213 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !2210, file: !1, line: 637, type: !637)
!2214 = !DILocation(line: 637, column: 24, scope: !2210)
!2215 = !DILocalVariable(name: "p", arg: 3, scope: !2210, file: !1, line: 637, type: !740)
!2216 = !DILocation(line: 637, column: 66, scope: !2210)
!2217 = !DILocalVariable(name: "q", arg: 4, scope: !2210, file: !1, line: 638, type: !717)
!2218 = !DILocation(line: 638, column: 27, scope: !2210)
!2219 = !DILocalVariable(name: "range", scope: !2210, file: !1, line: 641, type: !508)
!2220 = !DILocation(line: 641, column: 5, scope: !2210)
!2221 = !DILocalVariable(name: "x", scope: !2210, file: !1, line: 644, type: !453)
!2222 = !DILocation(line: 644, column: 5, scope: !2210)
!2223 = !DILocation(line: 646, column: 11, scope: !2210)
!2224 = !DILocation(line: 646, column: 25, scope: !2210)
!2225 = !DILocation(line: 646, column: 3, scope: !2210)
!2226 = !DILocalVariable(name: "pixel", scope: !2227, file: !1, line: 651, type: !437)
!2227 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 649, column: 5)
!2228 = distinct !DILexicalBlock(scope: !2210, file: !1, line: 647, column: 3)
!2229 = !DILocation(line: 651, column: 9, scope: !2227)
!2230 = !DILocation(line: 653, column: 13, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2227, file: !1, line: 653, column: 7)
!2232 = !DILocation(line: 653, column: 12, scope: !2231)
!2233 = !DILocation(line: 653, column: 17, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 653, column: 7)
!2235 = !DILocation(line: 653, column: 31, scope: !2234)
!2236 = !DILocation(line: 653, column: 19, scope: !2234)
!2237 = !DILocation(line: 653, column: 7, scope: !2231)
!2238 = !DILocation(line: 655, column: 34, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2234, file: !1, line: 654, column: 7)
!2240 = !DILocation(line: 655, column: 15, scope: !2239)
!2241 = !DILocation(line: 655, column: 14, scope: !2239)
!2242 = !DILocation(line: 656, column: 24, scope: !2239)
!2243 = !DILocation(line: 656, column: 30, scope: !2239)
!2244 = !DILocation(line: 656, column: 11, scope: !2239)
!2245 = !DILocation(line: 656, column: 10, scope: !2239)
!2246 = !DILocation(line: 657, column: 34, scope: !2239)
!2247 = !DILocation(line: 657, column: 15, scope: !2239)
!2248 = !DILocation(line: 657, column: 14, scope: !2239)
!2249 = !DILocation(line: 658, column: 24, scope: !2239)
!2250 = !DILocation(line: 658, column: 30, scope: !2239)
!2251 = !DILocation(line: 658, column: 11, scope: !2239)
!2252 = !DILocation(line: 658, column: 10, scope: !2239)
!2253 = !DILocation(line: 659, column: 34, scope: !2239)
!2254 = !DILocation(line: 659, column: 15, scope: !2239)
!2255 = !DILocation(line: 659, column: 14, scope: !2239)
!2256 = !DILocation(line: 660, column: 24, scope: !2239)
!2257 = !DILocation(line: 660, column: 30, scope: !2239)
!2258 = !DILocation(line: 660, column: 11, scope: !2239)
!2259 = !DILocation(line: 660, column: 10, scope: !2239)
!2260 = !DILocation(line: 661, column: 44, scope: !2239)
!2261 = !DILocation(line: 661, column: 34, scope: !2239)
!2262 = !DILocation(line: 661, column: 15, scope: !2239)
!2263 = !DILocation(line: 661, column: 14, scope: !2239)
!2264 = !DILocation(line: 662, column: 24, scope: !2239)
!2265 = !DILocation(line: 662, column: 30, scope: !2239)
!2266 = !DILocation(line: 662, column: 11, scope: !2239)
!2267 = !DILocation(line: 662, column: 10, scope: !2239)
!2268 = !DILocation(line: 663, column: 10, scope: !2239)
!2269 = !DILocation(line: 664, column: 12, scope: !2239)
!2270 = !DILocation(line: 664, column: 26, scope: !2239)
!2271 = !DILocation(line: 664, column: 10, scope: !2239)
!2272 = !DILocation(line: 665, column: 7, scope: !2239)
!2273 = !DILocation(line: 653, column: 47, scope: !2234)
!2274 = !DILocation(line: 653, column: 7, scope: !2234)
!2275 = distinct !{!2275, !2237, !2276}
!2276 = !DILocation(line: 665, column: 7, scope: !2231)
!2277 = !DILocation(line: 666, column: 7, scope: !2227)
!2278 = !DILocalVariable(name: "pixel", scope: !2279, file: !1, line: 671, type: !5)
!2279 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 669, column: 5)
!2280 = !DILocation(line: 671, column: 9, scope: !2279)
!2281 = !DILocation(line: 673, column: 29, scope: !2279)
!2282 = !DILocation(line: 673, column: 43, scope: !2279)
!2283 = !DILocation(line: 673, column: 13, scope: !2279)
!2284 = !DILocation(line: 673, column: 12, scope: !2279)
!2285 = !DILocation(line: 674, column: 11, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 674, column: 11)
!2287 = !DILocation(line: 674, column: 25, scope: !2286)
!2288 = !DILocation(line: 674, column: 30, scope: !2286)
!2289 = !DILocation(line: 674, column: 11, scope: !2279)
!2290 = !DILocalVariable(name: "i", scope: !2291, file: !1, line: 677, type: !453)
!2291 = distinct !DILexicalBlock(scope: !2286, file: !1, line: 675, column: 9)
!2292 = !DILocation(line: 677, column: 13, scope: !2291)
!2293 = !DILocalVariable(name: "quantum", scope: !2291, file: !1, line: 680, type: !465)
!2294 = !DILocation(line: 680, column: 13, scope: !2291)
!2295 = !DILocalVariable(name: "n", scope: !2291, file: !1, line: 683, type: !453)
!2296 = !DILocation(line: 683, column: 13, scope: !2291)
!2297 = !DILocation(line: 685, column: 12, scope: !2291)
!2298 = !DILocation(line: 686, column: 18, scope: !2291)
!2299 = !DILocation(line: 687, column: 16, scope: !2291)
!2300 = !DILocation(line: 688, column: 17, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2291, file: !1, line: 688, column: 11)
!2302 = !DILocation(line: 688, column: 16, scope: !2301)
!2303 = !DILocation(line: 688, column: 21, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2301, file: !1, line: 688, column: 11)
!2305 = !DILocation(line: 688, column: 35, scope: !2304)
!2306 = !DILocation(line: 688, column: 23, scope: !2304)
!2307 = !DILocation(line: 688, column: 11, scope: !2301)
!2308 = !DILocation(line: 690, column: 19, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2310, file: !1, line: 690, column: 13)
!2310 = distinct !DILexicalBlock(scope: !2304, file: !1, line: 689, column: 11)
!2311 = !DILocation(line: 690, column: 18, scope: !2309)
!2312 = !DILocation(line: 690, column: 23, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 690, column: 13)
!2314 = !DILocation(line: 690, column: 25, scope: !2313)
!2315 = !DILocation(line: 690, column: 13, scope: !2309)
!2316 = !DILocation(line: 692, column: 23, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2313, file: !1, line: 691, column: 13)
!2318 = !DILocation(line: 692, column: 15, scope: !2317)
!2319 = !DILocation(line: 694, column: 33, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2317, file: !1, line: 693, column: 15)
!2321 = !DILocation(line: 694, column: 32, scope: !2320)
!2322 = !DILocation(line: 694, column: 49, scope: !2320)
!2323 = !DILocation(line: 695, column: 33, scope: !2320)
!2324 = !DILocation(line: 695, column: 32, scope: !2320)
!2325 = !DILocation(line: 695, column: 51, scope: !2320)
!2326 = !DILocation(line: 696, column: 33, scope: !2320)
!2327 = !DILocation(line: 696, column: 32, scope: !2320)
!2328 = !DILocation(line: 696, column: 50, scope: !2320)
!2329 = !DILocation(line: 697, column: 57, scope: !2320)
!2330 = !DILocation(line: 697, column: 56, scope: !2320)
!2331 = !DILocation(line: 697, column: 33, scope: !2320)
!2332 = !DILocation(line: 697, column: 32, scope: !2320)
!2333 = !DILocation(line: 697, column: 78, scope: !2320)
!2334 = !DILocation(line: 699, column: 23, scope: !2317)
!2335 = !DILocation(line: 699, column: 25, scope: !2317)
!2336 = !DILocation(line: 699, column: 15, scope: !2317)
!2337 = !DILocation(line: 703, column: 64, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 702, column: 17)
!2339 = distinct !DILexicalBlock(scope: !2317, file: !1, line: 700, column: 15)
!2340 = !DILocation(line: 703, column: 54, scope: !2338)
!2341 = !DILocation(line: 704, column: 21, scope: !2338)
!2342 = !DILocation(line: 703, column: 36, scope: !2338)
!2343 = !DILocation(line: 704, column: 28, scope: !2338)
!2344 = !DILocation(line: 703, column: 24, scope: !2338)
!2345 = !DILocation(line: 705, column: 19, scope: !2338)
!2346 = !DILocation(line: 709, column: 64, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 708, column: 17)
!2348 = !DILocation(line: 709, column: 54, scope: !2347)
!2349 = !DILocation(line: 710, column: 21, scope: !2347)
!2350 = !DILocation(line: 709, column: 36, scope: !2347)
!2351 = !DILocation(line: 710, column: 28, scope: !2347)
!2352 = !DILocation(line: 709, column: 24, scope: !2347)
!2353 = !DILocation(line: 711, column: 19, scope: !2347)
!2354 = !DILocation(line: 715, column: 64, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 714, column: 17)
!2356 = !DILocation(line: 715, column: 54, scope: !2355)
!2357 = !DILocation(line: 716, column: 21, scope: !2355)
!2358 = !DILocation(line: 715, column: 36, scope: !2355)
!2359 = !DILocation(line: 716, column: 28, scope: !2355)
!2360 = !DILocation(line: 715, column: 24, scope: !2355)
!2361 = !DILocation(line: 717, column: 34, scope: !2355)
!2362 = !DILocation(line: 717, column: 48, scope: !2355)
!2363 = !DILocation(line: 717, column: 55, scope: !2355)
!2364 = !DILocation(line: 717, column: 61, scope: !2355)
!2365 = !DILocation(line: 717, column: 21, scope: !2355)
!2366 = !DILocation(line: 717, column: 20, scope: !2355)
!2367 = !DILocation(line: 718, column: 24, scope: !2355)
!2368 = !DILocation(line: 719, column: 19, scope: !2355)
!2369 = !DILocation(line: 722, column: 16, scope: !2317)
!2370 = !DILocation(line: 723, column: 13, scope: !2317)
!2371 = !DILocation(line: 690, column: 31, scope: !2313)
!2372 = !DILocation(line: 690, column: 13, scope: !2313)
!2373 = distinct !{!2373, !2315, !2374}
!2374 = !DILocation(line: 723, column: 13, scope: !2309)
!2375 = !DILocation(line: 724, column: 14, scope: !2310)
!2376 = !DILocation(line: 725, column: 16, scope: !2310)
!2377 = !DILocation(line: 725, column: 30, scope: !2310)
!2378 = !DILocation(line: 725, column: 14, scope: !2310)
!2379 = !DILocation(line: 726, column: 11, scope: !2310)
!2380 = !DILocation(line: 688, column: 51, scope: !2304)
!2381 = !DILocation(line: 688, column: 11, scope: !2304)
!2382 = distinct !{!2382, !2307, !2383}
!2383 = !DILocation(line: 726, column: 11, scope: !2301)
!2384 = !DILocation(line: 727, column: 11, scope: !2291)
!2385 = !DILocation(line: 729, column: 11, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 729, column: 11)
!2387 = !DILocation(line: 729, column: 25, scope: !2386)
!2388 = !DILocation(line: 729, column: 33, scope: !2386)
!2389 = !DILocation(line: 729, column: 11, scope: !2279)
!2390 = !DILocation(line: 731, column: 17, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !1, line: 731, column: 11)
!2392 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 730, column: 9)
!2393 = !DILocation(line: 731, column: 16, scope: !2391)
!2394 = !DILocation(line: 731, column: 21, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2391, file: !1, line: 731, column: 11)
!2396 = !DILocation(line: 731, column: 35, scope: !2395)
!2397 = !DILocation(line: 731, column: 23, scope: !2395)
!2398 = !DILocation(line: 731, column: 11, scope: !2391)
!2399 = !DILocation(line: 733, column: 52, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2395, file: !1, line: 732, column: 11)
!2401 = !DILocation(line: 733, column: 67, scope: !2400)
!2402 = !DILocation(line: 733, column: 34, scope: !2400)
!2403 = !DILocation(line: 733, column: 19, scope: !2400)
!2404 = !DILocation(line: 733, column: 18, scope: !2400)
!2405 = !DILocation(line: 734, column: 35, scope: !2400)
!2406 = !DILocation(line: 734, column: 48, scope: !2400)
!2407 = !DILocation(line: 734, column: 54, scope: !2400)
!2408 = !DILocation(line: 734, column: 15, scope: !2400)
!2409 = !DILocation(line: 734, column: 14, scope: !2400)
!2410 = !DILocation(line: 735, column: 52, scope: !2400)
!2411 = !DILocation(line: 735, column: 69, scope: !2400)
!2412 = !DILocation(line: 735, column: 34, scope: !2400)
!2413 = !DILocation(line: 735, column: 19, scope: !2400)
!2414 = !DILocation(line: 735, column: 18, scope: !2400)
!2415 = !DILocation(line: 736, column: 35, scope: !2400)
!2416 = !DILocation(line: 736, column: 48, scope: !2400)
!2417 = !DILocation(line: 736, column: 54, scope: !2400)
!2418 = !DILocation(line: 736, column: 15, scope: !2400)
!2419 = !DILocation(line: 736, column: 14, scope: !2400)
!2420 = !DILocation(line: 737, column: 52, scope: !2400)
!2421 = !DILocation(line: 737, column: 68, scope: !2400)
!2422 = !DILocation(line: 737, column: 34, scope: !2400)
!2423 = !DILocation(line: 737, column: 19, scope: !2400)
!2424 = !DILocation(line: 737, column: 18, scope: !2400)
!2425 = !DILocation(line: 738, column: 35, scope: !2400)
!2426 = !DILocation(line: 738, column: 48, scope: !2400)
!2427 = !DILocation(line: 738, column: 54, scope: !2400)
!2428 = !DILocation(line: 738, column: 15, scope: !2400)
!2429 = !DILocation(line: 738, column: 14, scope: !2400)
!2430 = !DILocation(line: 740, column: 15, scope: !2400)
!2431 = !DILocation(line: 739, column: 75, scope: !2400)
!2432 = !DILocation(line: 739, column: 52, scope: !2400)
!2433 = !DILocation(line: 740, column: 35, scope: !2400)
!2434 = !DILocation(line: 739, column: 34, scope: !2400)
!2435 = !DILocation(line: 739, column: 19, scope: !2400)
!2436 = !DILocation(line: 739, column: 18, scope: !2400)
!2437 = !DILocation(line: 741, column: 35, scope: !2400)
!2438 = !DILocation(line: 741, column: 48, scope: !2400)
!2439 = !DILocation(line: 741, column: 54, scope: !2400)
!2440 = !DILocation(line: 741, column: 15, scope: !2400)
!2441 = !DILocation(line: 741, column: 14, scope: !2400)
!2442 = !DILocation(line: 742, column: 14, scope: !2400)
!2443 = !DILocation(line: 743, column: 16, scope: !2400)
!2444 = !DILocation(line: 743, column: 30, scope: !2400)
!2445 = !DILocation(line: 743, column: 14, scope: !2400)
!2446 = !DILocation(line: 744, column: 11, scope: !2400)
!2447 = !DILocation(line: 731, column: 51, scope: !2395)
!2448 = !DILocation(line: 731, column: 11, scope: !2395)
!2449 = distinct !{!2449, !2398, !2450}
!2450 = !DILocation(line: 744, column: 11, scope: !2391)
!2451 = !DILocation(line: 745, column: 11, scope: !2392)
!2452 = !DILocation(line: 747, column: 13, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 747, column: 7)
!2454 = !DILocation(line: 747, column: 12, scope: !2453)
!2455 = !DILocation(line: 747, column: 17, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 747, column: 7)
!2457 = !DILocation(line: 747, column: 31, scope: !2456)
!2458 = !DILocation(line: 747, column: 19, scope: !2456)
!2459 = !DILocation(line: 747, column: 7, scope: !2453)
!2460 = !DILocation(line: 749, column: 48, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2456, file: !1, line: 748, column: 7)
!2462 = !DILocation(line: 749, column: 63, scope: !2461)
!2463 = !DILocation(line: 749, column: 30, scope: !2461)
!2464 = !DILocation(line: 749, column: 15, scope: !2461)
!2465 = !DILocation(line: 749, column: 14, scope: !2461)
!2466 = !DILocation(line: 750, column: 27, scope: !2461)
!2467 = !DILocation(line: 750, column: 40, scope: !2461)
!2468 = !DILocation(line: 750, column: 46, scope: !2461)
!2469 = !DILocation(line: 750, column: 11, scope: !2461)
!2470 = !DILocation(line: 750, column: 10, scope: !2461)
!2471 = !DILocation(line: 751, column: 48, scope: !2461)
!2472 = !DILocation(line: 751, column: 65, scope: !2461)
!2473 = !DILocation(line: 751, column: 30, scope: !2461)
!2474 = !DILocation(line: 751, column: 15, scope: !2461)
!2475 = !DILocation(line: 751, column: 14, scope: !2461)
!2476 = !DILocation(line: 752, column: 27, scope: !2461)
!2477 = !DILocation(line: 752, column: 40, scope: !2461)
!2478 = !DILocation(line: 752, column: 46, scope: !2461)
!2479 = !DILocation(line: 752, column: 11, scope: !2461)
!2480 = !DILocation(line: 752, column: 10, scope: !2461)
!2481 = !DILocation(line: 753, column: 48, scope: !2461)
!2482 = !DILocation(line: 753, column: 64, scope: !2461)
!2483 = !DILocation(line: 753, column: 30, scope: !2461)
!2484 = !DILocation(line: 753, column: 15, scope: !2461)
!2485 = !DILocation(line: 753, column: 14, scope: !2461)
!2486 = !DILocation(line: 754, column: 27, scope: !2461)
!2487 = !DILocation(line: 754, column: 40, scope: !2461)
!2488 = !DILocation(line: 754, column: 46, scope: !2461)
!2489 = !DILocation(line: 754, column: 11, scope: !2461)
!2490 = !DILocation(line: 754, column: 10, scope: !2461)
!2491 = !DILocation(line: 756, column: 11, scope: !2461)
!2492 = !DILocation(line: 755, column: 71, scope: !2461)
!2493 = !DILocation(line: 755, column: 48, scope: !2461)
!2494 = !DILocation(line: 756, column: 31, scope: !2461)
!2495 = !DILocation(line: 755, column: 30, scope: !2461)
!2496 = !DILocation(line: 755, column: 15, scope: !2461)
!2497 = !DILocation(line: 755, column: 14, scope: !2461)
!2498 = !DILocation(line: 757, column: 27, scope: !2461)
!2499 = !DILocation(line: 757, column: 40, scope: !2461)
!2500 = !DILocation(line: 757, column: 46, scope: !2461)
!2501 = !DILocation(line: 757, column: 11, scope: !2461)
!2502 = !DILocation(line: 757, column: 10, scope: !2461)
!2503 = !DILocation(line: 758, column: 10, scope: !2461)
!2504 = !DILocation(line: 759, column: 12, scope: !2461)
!2505 = !DILocation(line: 759, column: 26, scope: !2461)
!2506 = !DILocation(line: 759, column: 10, scope: !2461)
!2507 = !DILocation(line: 760, column: 7, scope: !2461)
!2508 = !DILocation(line: 747, column: 47, scope: !2456)
!2509 = !DILocation(line: 747, column: 7, scope: !2456)
!2510 = distinct !{!2510, !2459, !2511}
!2511 = !DILocation(line: 760, column: 7, scope: !2453)
!2512 = !DILocation(line: 761, column: 7, scope: !2279)
!2513 = !DILocalVariable(name: "pixel", scope: !2514, file: !1, line: 766, type: !449)
!2514 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 764, column: 5)
!2515 = !DILocation(line: 766, column: 9, scope: !2514)
!2516 = !DILocation(line: 768, column: 11, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 768, column: 11)
!2518 = !DILocation(line: 768, column: 25, scope: !2517)
!2519 = !DILocation(line: 768, column: 32, scope: !2517)
!2520 = !DILocation(line: 768, column: 11, scope: !2514)
!2521 = !DILocation(line: 770, column: 17, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 770, column: 11)
!2523 = distinct !DILexicalBlock(scope: !2517, file: !1, line: 769, column: 9)
!2524 = !DILocation(line: 770, column: 16, scope: !2522)
!2525 = !DILocation(line: 770, column: 21, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2522, file: !1, line: 770, column: 11)
!2527 = !DILocation(line: 770, column: 35, scope: !2526)
!2528 = !DILocation(line: 770, column: 23, scope: !2526)
!2529 = !DILocation(line: 770, column: 11, scope: !2522)
!2530 = !DILocation(line: 772, column: 54, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 771, column: 11)
!2532 = !DILocation(line: 772, column: 53, scope: !2531)
!2533 = !DILocation(line: 772, column: 41, scope: !2531)
!2534 = !DILocation(line: 772, column: 19, scope: !2531)
!2535 = !DILocation(line: 772, column: 18, scope: !2531)
!2536 = !DILocation(line: 773, column: 29, scope: !2531)
!2537 = !DILocation(line: 773, column: 43, scope: !2531)
!2538 = !DILocation(line: 773, column: 50, scope: !2531)
!2539 = !DILocation(line: 773, column: 56, scope: !2531)
!2540 = !DILocation(line: 773, column: 15, scope: !2531)
!2541 = !DILocation(line: 773, column: 14, scope: !2531)
!2542 = !DILocation(line: 774, column: 54, scope: !2531)
!2543 = !DILocation(line: 774, column: 53, scope: !2531)
!2544 = !DILocation(line: 774, column: 41, scope: !2531)
!2545 = !DILocation(line: 774, column: 19, scope: !2531)
!2546 = !DILocation(line: 774, column: 18, scope: !2531)
!2547 = !DILocation(line: 775, column: 29, scope: !2531)
!2548 = !DILocation(line: 775, column: 43, scope: !2531)
!2549 = !DILocation(line: 775, column: 50, scope: !2531)
!2550 = !DILocation(line: 775, column: 56, scope: !2531)
!2551 = !DILocation(line: 775, column: 15, scope: !2531)
!2552 = !DILocation(line: 775, column: 14, scope: !2531)
!2553 = !DILocation(line: 776, column: 54, scope: !2531)
!2554 = !DILocation(line: 776, column: 53, scope: !2531)
!2555 = !DILocation(line: 776, column: 41, scope: !2531)
!2556 = !DILocation(line: 776, column: 19, scope: !2531)
!2557 = !DILocation(line: 776, column: 18, scope: !2531)
!2558 = !DILocation(line: 777, column: 29, scope: !2531)
!2559 = !DILocation(line: 777, column: 43, scope: !2531)
!2560 = !DILocation(line: 777, column: 50, scope: !2531)
!2561 = !DILocation(line: 777, column: 56, scope: !2531)
!2562 = !DILocation(line: 777, column: 15, scope: !2531)
!2563 = !DILocation(line: 777, column: 14, scope: !2531)
!2564 = !DILocation(line: 778, column: 54, scope: !2531)
!2565 = !DILocation(line: 778, column: 53, scope: !2531)
!2566 = !DILocation(line: 778, column: 41, scope: !2531)
!2567 = !DILocation(line: 778, column: 19, scope: !2531)
!2568 = !DILocation(line: 778, column: 18, scope: !2531)
!2569 = !DILocation(line: 779, column: 29, scope: !2531)
!2570 = !DILocation(line: 779, column: 43, scope: !2531)
!2571 = !DILocation(line: 779, column: 50, scope: !2531)
!2572 = !DILocation(line: 779, column: 56, scope: !2531)
!2573 = !DILocation(line: 779, column: 15, scope: !2531)
!2574 = !DILocation(line: 779, column: 14, scope: !2531)
!2575 = !DILocation(line: 780, column: 14, scope: !2531)
!2576 = !DILocation(line: 781, column: 16, scope: !2531)
!2577 = !DILocation(line: 781, column: 30, scope: !2531)
!2578 = !DILocation(line: 781, column: 14, scope: !2531)
!2579 = !DILocation(line: 782, column: 11, scope: !2531)
!2580 = !DILocation(line: 770, column: 51, scope: !2526)
!2581 = !DILocation(line: 770, column: 11, scope: !2526)
!2582 = distinct !{!2582, !2529, !2583}
!2583 = !DILocation(line: 782, column: 11, scope: !2522)
!2584 = !DILocation(line: 783, column: 11, scope: !2523)
!2585 = !DILocation(line: 785, column: 13, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 785, column: 7)
!2587 = !DILocation(line: 785, column: 12, scope: !2586)
!2588 = !DILocation(line: 785, column: 17, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2586, file: !1, line: 785, column: 7)
!2590 = !DILocation(line: 785, column: 31, scope: !2589)
!2591 = !DILocation(line: 785, column: 19, scope: !2589)
!2592 = !DILocation(line: 785, column: 7, scope: !2586)
!2593 = !DILocation(line: 787, column: 35, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2589, file: !1, line: 786, column: 7)
!2595 = !DILocation(line: 787, column: 15, scope: !2594)
!2596 = !DILocation(line: 787, column: 14, scope: !2594)
!2597 = !DILocation(line: 788, column: 25, scope: !2594)
!2598 = !DILocation(line: 788, column: 39, scope: !2594)
!2599 = !DILocation(line: 788, column: 46, scope: !2594)
!2600 = !DILocation(line: 788, column: 52, scope: !2594)
!2601 = !DILocation(line: 788, column: 11, scope: !2594)
!2602 = !DILocation(line: 788, column: 10, scope: !2594)
!2603 = !DILocation(line: 789, column: 35, scope: !2594)
!2604 = !DILocation(line: 789, column: 15, scope: !2594)
!2605 = !DILocation(line: 789, column: 14, scope: !2594)
!2606 = !DILocation(line: 790, column: 25, scope: !2594)
!2607 = !DILocation(line: 790, column: 39, scope: !2594)
!2608 = !DILocation(line: 790, column: 46, scope: !2594)
!2609 = !DILocation(line: 790, column: 52, scope: !2594)
!2610 = !DILocation(line: 790, column: 11, scope: !2594)
!2611 = !DILocation(line: 790, column: 10, scope: !2594)
!2612 = !DILocation(line: 791, column: 35, scope: !2594)
!2613 = !DILocation(line: 791, column: 15, scope: !2594)
!2614 = !DILocation(line: 791, column: 14, scope: !2594)
!2615 = !DILocation(line: 792, column: 25, scope: !2594)
!2616 = !DILocation(line: 792, column: 39, scope: !2594)
!2617 = !DILocation(line: 792, column: 46, scope: !2594)
!2618 = !DILocation(line: 792, column: 52, scope: !2594)
!2619 = !DILocation(line: 792, column: 11, scope: !2594)
!2620 = !DILocation(line: 792, column: 10, scope: !2594)
!2621 = !DILocation(line: 793, column: 45, scope: !2594)
!2622 = !DILocation(line: 793, column: 35, scope: !2594)
!2623 = !DILocation(line: 793, column: 15, scope: !2594)
!2624 = !DILocation(line: 793, column: 14, scope: !2594)
!2625 = !DILocation(line: 794, column: 25, scope: !2594)
!2626 = !DILocation(line: 794, column: 39, scope: !2594)
!2627 = !DILocation(line: 794, column: 46, scope: !2594)
!2628 = !DILocation(line: 794, column: 52, scope: !2594)
!2629 = !DILocation(line: 794, column: 11, scope: !2594)
!2630 = !DILocation(line: 794, column: 10, scope: !2594)
!2631 = !DILocation(line: 795, column: 10, scope: !2594)
!2632 = !DILocation(line: 796, column: 12, scope: !2594)
!2633 = !DILocation(line: 796, column: 26, scope: !2594)
!2634 = !DILocation(line: 796, column: 10, scope: !2594)
!2635 = !DILocation(line: 797, column: 7, scope: !2594)
!2636 = !DILocation(line: 785, column: 47, scope: !2589)
!2637 = !DILocation(line: 785, column: 7, scope: !2589)
!2638 = distinct !{!2638, !2592, !2639}
!2639 = !DILocation(line: 797, column: 7, scope: !2586)
!2640 = !DILocation(line: 798, column: 7, scope: !2514)
!2641 = !DILocalVariable(name: "pixel", scope: !2642, file: !1, line: 803, type: !5)
!2642 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 801, column: 5)
!2643 = !DILocation(line: 803, column: 9, scope: !2642)
!2644 = !DILocation(line: 805, column: 11, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 805, column: 11)
!2646 = !DILocation(line: 805, column: 25, scope: !2645)
!2647 = !DILocation(line: 805, column: 32, scope: !2645)
!2648 = !DILocation(line: 805, column: 11, scope: !2642)
!2649 = !DILocation(line: 807, column: 17, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !1, line: 807, column: 11)
!2651 = distinct !DILexicalBlock(scope: !2645, file: !1, line: 806, column: 9)
!2652 = !DILocation(line: 807, column: 16, scope: !2650)
!2653 = !DILocation(line: 807, column: 21, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2650, file: !1, line: 807, column: 11)
!2655 = !DILocation(line: 807, column: 35, scope: !2654)
!2656 = !DILocation(line: 807, column: 23, scope: !2654)
!2657 = !DILocation(line: 807, column: 11, scope: !2650)
!2658 = !DILocalVariable(name: "pixel", scope: !2659, file: !1, line: 810, type: !502)
!2659 = distinct !DILexicalBlock(scope: !2654, file: !1, line: 808, column: 11)
!2660 = !DILocation(line: 810, column: 15, scope: !2659)
!2661 = !DILocation(line: 812, column: 29, scope: !2659)
!2662 = !DILocation(line: 812, column: 50, scope: !2659)
!2663 = !DILocation(line: 812, column: 42, scope: !2659)
!2664 = !DILocation(line: 812, column: 65, scope: !2659)
!2665 = !DILocation(line: 812, column: 15, scope: !2659)
!2666 = !DILocation(line: 812, column: 14, scope: !2659)
!2667 = !DILocation(line: 813, column: 29, scope: !2659)
!2668 = !DILocation(line: 813, column: 50, scope: !2659)
!2669 = !DILocation(line: 813, column: 42, scope: !2659)
!2670 = !DILocation(line: 813, column: 67, scope: !2659)
!2671 = !DILocation(line: 813, column: 15, scope: !2659)
!2672 = !DILocation(line: 813, column: 14, scope: !2659)
!2673 = !DILocation(line: 814, column: 29, scope: !2659)
!2674 = !DILocation(line: 814, column: 50, scope: !2659)
!2675 = !DILocation(line: 814, column: 42, scope: !2659)
!2676 = !DILocation(line: 814, column: 66, scope: !2659)
!2677 = !DILocation(line: 814, column: 15, scope: !2659)
!2678 = !DILocation(line: 814, column: 14, scope: !2659)
!2679 = !DILocation(line: 815, column: 27, scope: !2659)
!2680 = !DILocation(line: 815, column: 19, scope: !2659)
!2681 = !DILocation(line: 815, column: 18, scope: !2659)
!2682 = !DILocation(line: 816, column: 29, scope: !2659)
!2683 = !DILocation(line: 816, column: 42, scope: !2659)
!2684 = !DILocation(line: 816, column: 48, scope: !2659)
!2685 = !DILocation(line: 816, column: 15, scope: !2659)
!2686 = !DILocation(line: 816, column: 14, scope: !2659)
!2687 = !DILocation(line: 817, column: 14, scope: !2659)
!2688 = !DILocation(line: 818, column: 16, scope: !2659)
!2689 = !DILocation(line: 818, column: 30, scope: !2659)
!2690 = !DILocation(line: 818, column: 14, scope: !2659)
!2691 = !DILocation(line: 819, column: 11, scope: !2659)
!2692 = !DILocation(line: 807, column: 51, scope: !2654)
!2693 = !DILocation(line: 807, column: 11, scope: !2654)
!2694 = distinct !{!2694, !2657, !2695}
!2695 = !DILocation(line: 819, column: 11, scope: !2650)
!2696 = !DILocation(line: 820, column: 11, scope: !2651)
!2697 = !DILocation(line: 822, column: 13, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2642, file: !1, line: 822, column: 7)
!2699 = !DILocation(line: 822, column: 12, scope: !2698)
!2700 = !DILocation(line: 822, column: 17, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2698, file: !1, line: 822, column: 7)
!2702 = !DILocation(line: 822, column: 31, scope: !2701)
!2703 = !DILocation(line: 822, column: 19, scope: !2701)
!2704 = !DILocation(line: 822, column: 7, scope: !2698)
!2705 = !DILocation(line: 824, column: 34, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2701, file: !1, line: 823, column: 7)
!2707 = !DILocation(line: 824, column: 15, scope: !2706)
!2708 = !DILocation(line: 824, column: 14, scope: !2706)
!2709 = !DILocation(line: 825, column: 24, scope: !2706)
!2710 = !DILocation(line: 825, column: 38, scope: !2706)
!2711 = !DILocation(line: 825, column: 45, scope: !2706)
!2712 = !DILocation(line: 825, column: 51, scope: !2706)
!2713 = !DILocation(line: 825, column: 11, scope: !2706)
!2714 = !DILocation(line: 825, column: 10, scope: !2706)
!2715 = !DILocation(line: 826, column: 34, scope: !2706)
!2716 = !DILocation(line: 826, column: 15, scope: !2706)
!2717 = !DILocation(line: 826, column: 14, scope: !2706)
!2718 = !DILocation(line: 827, column: 24, scope: !2706)
!2719 = !DILocation(line: 827, column: 38, scope: !2706)
!2720 = !DILocation(line: 827, column: 45, scope: !2706)
!2721 = !DILocation(line: 827, column: 51, scope: !2706)
!2722 = !DILocation(line: 827, column: 11, scope: !2706)
!2723 = !DILocation(line: 827, column: 10, scope: !2706)
!2724 = !DILocation(line: 828, column: 34, scope: !2706)
!2725 = !DILocation(line: 828, column: 15, scope: !2706)
!2726 = !DILocation(line: 828, column: 14, scope: !2706)
!2727 = !DILocation(line: 829, column: 24, scope: !2706)
!2728 = !DILocation(line: 829, column: 38, scope: !2706)
!2729 = !DILocation(line: 829, column: 45, scope: !2706)
!2730 = !DILocation(line: 829, column: 51, scope: !2706)
!2731 = !DILocation(line: 829, column: 11, scope: !2706)
!2732 = !DILocation(line: 829, column: 10, scope: !2706)
!2733 = !DILocation(line: 830, column: 44, scope: !2706)
!2734 = !DILocation(line: 830, column: 34, scope: !2706)
!2735 = !DILocation(line: 830, column: 15, scope: !2706)
!2736 = !DILocation(line: 830, column: 14, scope: !2706)
!2737 = !DILocation(line: 831, column: 24, scope: !2706)
!2738 = !DILocation(line: 831, column: 38, scope: !2706)
!2739 = !DILocation(line: 831, column: 45, scope: !2706)
!2740 = !DILocation(line: 831, column: 51, scope: !2706)
!2741 = !DILocation(line: 831, column: 11, scope: !2706)
!2742 = !DILocation(line: 831, column: 10, scope: !2706)
!2743 = !DILocation(line: 832, column: 10, scope: !2706)
!2744 = !DILocation(line: 833, column: 12, scope: !2706)
!2745 = !DILocation(line: 833, column: 26, scope: !2706)
!2746 = !DILocation(line: 833, column: 10, scope: !2706)
!2747 = !DILocation(line: 834, column: 7, scope: !2706)
!2748 = !DILocation(line: 822, column: 47, scope: !2701)
!2749 = !DILocation(line: 822, column: 7, scope: !2701)
!2750 = distinct !{!2750, !2704, !2751}
!2751 = !DILocation(line: 834, column: 7, scope: !2698)
!2752 = !DILocation(line: 835, column: 7, scope: !2642)
!2753 = !DILocation(line: 839, column: 11, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2755, file: !1, line: 839, column: 11)
!2755 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 838, column: 5)
!2756 = !DILocation(line: 839, column: 25, scope: !2754)
!2757 = !DILocation(line: 839, column: 32, scope: !2754)
!2758 = !DILocation(line: 839, column: 11, scope: !2755)
!2759 = !DILocalVariable(name: "pixel", scope: !2760, file: !1, line: 842, type: !458)
!2760 = distinct !DILexicalBlock(scope: !2754, file: !1, line: 840, column: 9)
!2761 = !DILocation(line: 842, column: 13, scope: !2760)
!2762 = !DILocation(line: 844, column: 17, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2760, file: !1, line: 844, column: 11)
!2764 = !DILocation(line: 844, column: 16, scope: !2763)
!2765 = !DILocation(line: 844, column: 21, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2763, file: !1, line: 844, column: 11)
!2767 = !DILocation(line: 844, column: 35, scope: !2766)
!2768 = !DILocation(line: 844, column: 23, scope: !2766)
!2769 = !DILocation(line: 844, column: 11, scope: !2763)
!2770 = !DILocation(line: 846, column: 30, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2766, file: !1, line: 845, column: 11)
!2772 = !DILocation(line: 846, column: 52, scope: !2771)
!2773 = !DILocation(line: 846, column: 43, scope: !2771)
!2774 = !DILocation(line: 846, column: 67, scope: !2771)
!2775 = !DILocation(line: 846, column: 15, scope: !2771)
!2776 = !DILocation(line: 846, column: 14, scope: !2771)
!2777 = !DILocation(line: 847, column: 30, scope: !2771)
!2778 = !DILocation(line: 847, column: 52, scope: !2771)
!2779 = !DILocation(line: 847, column: 43, scope: !2771)
!2780 = !DILocation(line: 847, column: 69, scope: !2771)
!2781 = !DILocation(line: 847, column: 15, scope: !2771)
!2782 = !DILocation(line: 847, column: 14, scope: !2771)
!2783 = !DILocation(line: 848, column: 30, scope: !2771)
!2784 = !DILocation(line: 848, column: 52, scope: !2771)
!2785 = !DILocation(line: 848, column: 43, scope: !2771)
!2786 = !DILocation(line: 848, column: 68, scope: !2771)
!2787 = !DILocation(line: 848, column: 15, scope: !2771)
!2788 = !DILocation(line: 848, column: 14, scope: !2771)
!2789 = !DILocation(line: 849, column: 28, scope: !2771)
!2790 = !DILocation(line: 849, column: 19, scope: !2771)
!2791 = !DILocation(line: 849, column: 18, scope: !2771)
!2792 = !DILocation(line: 850, column: 30, scope: !2771)
!2793 = !DILocation(line: 850, column: 43, scope: !2771)
!2794 = !DILocation(line: 850, column: 49, scope: !2771)
!2795 = !DILocation(line: 850, column: 15, scope: !2771)
!2796 = !DILocation(line: 850, column: 14, scope: !2771)
!2797 = !DILocation(line: 851, column: 14, scope: !2771)
!2798 = !DILocation(line: 852, column: 16, scope: !2771)
!2799 = !DILocation(line: 852, column: 30, scope: !2771)
!2800 = !DILocation(line: 852, column: 14, scope: !2771)
!2801 = !DILocation(line: 853, column: 11, scope: !2771)
!2802 = !DILocation(line: 844, column: 51, scope: !2766)
!2803 = !DILocation(line: 844, column: 11, scope: !2766)
!2804 = distinct !{!2804, !2769, !2805}
!2805 = !DILocation(line: 853, column: 11, scope: !2763)
!2806 = !DILocation(line: 854, column: 11, scope: !2760)
!2807 = !DILocation(line: 856, column: 5, scope: !2755)
!2808 = !DILocation(line: 859, column: 29, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 858, column: 5)
!2810 = !DILocation(line: 859, column: 43, scope: !2809)
!2811 = !DILocation(line: 859, column: 13, scope: !2809)
!2812 = !DILocation(line: 859, column: 12, scope: !2809)
!2813 = !DILocation(line: 860, column: 13, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2809, file: !1, line: 860, column: 7)
!2815 = !DILocation(line: 860, column: 12, scope: !2814)
!2816 = !DILocation(line: 860, column: 17, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2814, file: !1, line: 860, column: 7)
!2818 = !DILocation(line: 860, column: 31, scope: !2817)
!2819 = !DILocation(line: 860, column: 19, scope: !2817)
!2820 = !DILocation(line: 860, column: 7, scope: !2814)
!2821 = !DILocation(line: 862, column: 27, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2817, file: !1, line: 861, column: 7)
!2823 = !DILocation(line: 863, column: 29, scope: !2822)
!2824 = !DILocation(line: 863, column: 45, scope: !2822)
!2825 = !DILocation(line: 863, column: 11, scope: !2822)
!2826 = !DILocation(line: 863, column: 52, scope: !2822)
!2827 = !DILocation(line: 862, column: 11, scope: !2822)
!2828 = !DILocation(line: 862, column: 10, scope: !2822)
!2829 = !DILocation(line: 864, column: 27, scope: !2822)
!2830 = !DILocation(line: 865, column: 29, scope: !2822)
!2831 = !DILocation(line: 865, column: 46, scope: !2822)
!2832 = !DILocation(line: 865, column: 11, scope: !2822)
!2833 = !DILocation(line: 865, column: 53, scope: !2822)
!2834 = !DILocation(line: 864, column: 11, scope: !2822)
!2835 = !DILocation(line: 864, column: 10, scope: !2822)
!2836 = !DILocation(line: 866, column: 27, scope: !2822)
!2837 = !DILocation(line: 867, column: 29, scope: !2822)
!2838 = !DILocation(line: 867, column: 44, scope: !2822)
!2839 = !DILocation(line: 867, column: 11, scope: !2822)
!2840 = !DILocation(line: 867, column: 51, scope: !2822)
!2841 = !DILocation(line: 866, column: 11, scope: !2822)
!2842 = !DILocation(line: 866, column: 10, scope: !2822)
!2843 = !DILocation(line: 868, column: 27, scope: !2822)
!2844 = !DILocation(line: 869, column: 39, scope: !2822)
!2845 = !DILocation(line: 869, column: 29, scope: !2822)
!2846 = !DILocation(line: 869, column: 56, scope: !2822)
!2847 = !DILocation(line: 869, column: 11, scope: !2822)
!2848 = !DILocation(line: 869, column: 63, scope: !2822)
!2849 = !DILocation(line: 868, column: 11, scope: !2822)
!2850 = !DILocation(line: 868, column: 10, scope: !2822)
!2851 = !DILocation(line: 870, column: 10, scope: !2822)
!2852 = !DILocation(line: 871, column: 12, scope: !2822)
!2853 = !DILocation(line: 871, column: 26, scope: !2822)
!2854 = !DILocation(line: 871, column: 10, scope: !2822)
!2855 = !DILocation(line: 872, column: 7, scope: !2822)
!2856 = !DILocation(line: 860, column: 47, scope: !2817)
!2857 = !DILocation(line: 860, column: 7, scope: !2817)
!2858 = distinct !{!2858, !2820, !2859}
!2859 = !DILocation(line: 872, column: 7, scope: !2814)
!2860 = !DILocation(line: 873, column: 7, scope: !2809)
!2861 = !DILocation(line: 876, column: 1, scope: !2210)
!2862 = distinct !DISubprogram(name: "ExportBlackQuantum", scope: !1, file: !1, line: 878, type: !2863, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{null, !519, !459, !637, !740, !737, !717, !718}
!2865 = !DILocalVariable(name: "image", arg: 1, scope: !2862, file: !1, line: 878, type: !519)
!2866 = !DILocation(line: 878, column: 45, scope: !2862)
!2867 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !2862, file: !1, line: 878, type: !459)
!2868 = !DILocation(line: 878, column: 64, scope: !2862)
!2869 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !2862, file: !1, line: 879, type: !637)
!2870 = !DILocation(line: 879, column: 24, scope: !2862)
!2871 = !DILocalVariable(name: "p", arg: 4, scope: !2862, file: !1, line: 879, type: !740)
!2872 = !DILocation(line: 879, column: 66, scope: !2862)
!2873 = !DILocalVariable(name: "indexes", arg: 5, scope: !2862, file: !1, line: 880, type: !737)
!2874 = !DILocation(line: 880, column: 31, scope: !2862)
!2875 = !DILocalVariable(name: "q", arg: 6, scope: !2862, file: !1, line: 880, type: !717)
!2876 = !DILocation(line: 880, column: 63, scope: !2862)
!2877 = !DILocalVariable(name: "exception", arg: 7, scope: !2862, file: !1, line: 881, type: !718)
!2878 = !DILocation(line: 881, column: 18, scope: !2862)
!2879 = !DILocalVariable(name: "x", scope: !2862, file: !1, line: 884, type: !453)
!2880 = !DILocation(line: 884, column: 5, scope: !2862)
!2881 = !DILocation(line: 886, column: 7, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 886, column: 7)
!2883 = !DILocation(line: 886, column: 14, scope: !2882)
!2884 = !DILocation(line: 886, column: 25, scope: !2882)
!2885 = !DILocation(line: 886, column: 7, scope: !2862)
!2886 = !DILocation(line: 888, column: 35, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 887, column: 5)
!2888 = !DILocation(line: 889, column: 46, scope: !2887)
!2889 = !DILocation(line: 889, column: 53, scope: !2887)
!2890 = !DILocation(line: 888, column: 14, scope: !2887)
!2891 = !DILocation(line: 890, column: 7, scope: !2887)
!2892 = !DILocation(line: 892, column: 11, scope: !2862)
!2893 = !DILocation(line: 892, column: 25, scope: !2862)
!2894 = !DILocation(line: 892, column: 3, scope: !2862)
!2895 = !DILocalVariable(name: "pixel", scope: !2896, file: !1, line: 897, type: !437)
!2896 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 895, column: 5)
!2897 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 893, column: 3)
!2898 = !DILocation(line: 897, column: 9, scope: !2896)
!2899 = !DILocation(line: 899, column: 13, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2896, file: !1, line: 899, column: 7)
!2901 = !DILocation(line: 899, column: 12, scope: !2900)
!2902 = !DILocation(line: 899, column: 17, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2900, file: !1, line: 899, column: 7)
!2904 = !DILocation(line: 899, column: 31, scope: !2903)
!2905 = !DILocation(line: 899, column: 19, scope: !2903)
!2906 = !DILocation(line: 899, column: 7, scope: !2900)
!2907 = !DILocation(line: 901, column: 34, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 900, column: 7)
!2909 = !DILocation(line: 901, column: 15, scope: !2908)
!2910 = !DILocation(line: 901, column: 14, scope: !2908)
!2911 = !DILocation(line: 902, column: 24, scope: !2908)
!2912 = !DILocation(line: 902, column: 30, scope: !2908)
!2913 = !DILocation(line: 902, column: 11, scope: !2908)
!2914 = !DILocation(line: 902, column: 10, scope: !2908)
!2915 = !DILocation(line: 903, column: 10, scope: !2908)
!2916 = !DILocation(line: 904, column: 12, scope: !2908)
!2917 = !DILocation(line: 904, column: 26, scope: !2908)
!2918 = !DILocation(line: 904, column: 10, scope: !2908)
!2919 = !DILocation(line: 905, column: 7, scope: !2908)
!2920 = !DILocation(line: 899, column: 47, scope: !2903)
!2921 = !DILocation(line: 899, column: 7, scope: !2903)
!2922 = distinct !{!2922, !2906, !2923}
!2923 = !DILocation(line: 905, column: 7, scope: !2900)
!2924 = !DILocation(line: 906, column: 7, scope: !2896)
!2925 = !DILocalVariable(name: "pixel", scope: !2926, file: !1, line: 911, type: !449)
!2926 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 909, column: 5)
!2927 = !DILocation(line: 911, column: 9, scope: !2926)
!2928 = !DILocation(line: 913, column: 11, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 913, column: 11)
!2930 = !DILocation(line: 913, column: 25, scope: !2929)
!2931 = !DILocation(line: 913, column: 32, scope: !2929)
!2932 = !DILocation(line: 913, column: 11, scope: !2926)
!2933 = !DILocation(line: 915, column: 17, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2935, file: !1, line: 915, column: 11)
!2935 = distinct !DILexicalBlock(scope: !2929, file: !1, line: 914, column: 9)
!2936 = !DILocation(line: 915, column: 16, scope: !2934)
!2937 = !DILocation(line: 915, column: 21, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2934, file: !1, line: 915, column: 11)
!2939 = !DILocation(line: 915, column: 35, scope: !2938)
!2940 = !DILocation(line: 915, column: 23, scope: !2938)
!2941 = !DILocation(line: 915, column: 11, scope: !2934)
!2942 = !DILocation(line: 917, column: 54, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2938, file: !1, line: 916, column: 11)
!2944 = !DILocation(line: 917, column: 53, scope: !2943)
!2945 = !DILocation(line: 917, column: 41, scope: !2943)
!2946 = !DILocation(line: 917, column: 19, scope: !2943)
!2947 = !DILocation(line: 917, column: 18, scope: !2943)
!2948 = !DILocation(line: 918, column: 29, scope: !2943)
!2949 = !DILocation(line: 918, column: 43, scope: !2943)
!2950 = !DILocation(line: 918, column: 50, scope: !2943)
!2951 = !DILocation(line: 918, column: 56, scope: !2943)
!2952 = !DILocation(line: 918, column: 15, scope: !2943)
!2953 = !DILocation(line: 918, column: 14, scope: !2943)
!2954 = !DILocation(line: 919, column: 14, scope: !2943)
!2955 = !DILocation(line: 920, column: 16, scope: !2943)
!2956 = !DILocation(line: 920, column: 30, scope: !2943)
!2957 = !DILocation(line: 920, column: 14, scope: !2943)
!2958 = !DILocation(line: 921, column: 11, scope: !2943)
!2959 = !DILocation(line: 915, column: 51, scope: !2938)
!2960 = !DILocation(line: 915, column: 11, scope: !2938)
!2961 = distinct !{!2961, !2941, !2962}
!2962 = !DILocation(line: 921, column: 11, scope: !2934)
!2963 = !DILocation(line: 922, column: 11, scope: !2935)
!2964 = !DILocation(line: 924, column: 13, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 924, column: 7)
!2966 = !DILocation(line: 924, column: 12, scope: !2965)
!2967 = !DILocation(line: 924, column: 17, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 924, column: 7)
!2969 = !DILocation(line: 924, column: 31, scope: !2968)
!2970 = !DILocation(line: 924, column: 19, scope: !2968)
!2971 = !DILocation(line: 924, column: 7, scope: !2965)
!2972 = !DILocation(line: 926, column: 35, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2968, file: !1, line: 925, column: 7)
!2974 = !DILocation(line: 926, column: 15, scope: !2973)
!2975 = !DILocation(line: 926, column: 14, scope: !2973)
!2976 = !DILocation(line: 927, column: 25, scope: !2973)
!2977 = !DILocation(line: 927, column: 39, scope: !2973)
!2978 = !DILocation(line: 927, column: 46, scope: !2973)
!2979 = !DILocation(line: 927, column: 52, scope: !2973)
!2980 = !DILocation(line: 927, column: 11, scope: !2973)
!2981 = !DILocation(line: 927, column: 10, scope: !2973)
!2982 = !DILocation(line: 928, column: 10, scope: !2973)
!2983 = !DILocation(line: 929, column: 12, scope: !2973)
!2984 = !DILocation(line: 929, column: 26, scope: !2973)
!2985 = !DILocation(line: 929, column: 10, scope: !2973)
!2986 = !DILocation(line: 930, column: 7, scope: !2973)
!2987 = !DILocation(line: 924, column: 47, scope: !2968)
!2988 = !DILocation(line: 924, column: 7, scope: !2968)
!2989 = distinct !{!2989, !2971, !2990}
!2990 = !DILocation(line: 930, column: 7, scope: !2965)
!2991 = !DILocation(line: 931, column: 7, scope: !2926)
!2992 = !DILocalVariable(name: "pixel", scope: !2993, file: !1, line: 936, type: !5)
!2993 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 934, column: 5)
!2994 = !DILocation(line: 936, column: 9, scope: !2993)
!2995 = !DILocation(line: 938, column: 11, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2993, file: !1, line: 938, column: 11)
!2997 = !DILocation(line: 938, column: 25, scope: !2996)
!2998 = !DILocation(line: 938, column: 32, scope: !2996)
!2999 = !DILocation(line: 938, column: 11, scope: !2993)
!3000 = !DILocation(line: 940, column: 17, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !1, line: 940, column: 11)
!3002 = distinct !DILexicalBlock(scope: !2996, file: !1, line: 939, column: 9)
!3003 = !DILocation(line: 940, column: 16, scope: !3001)
!3004 = !DILocation(line: 940, column: 21, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3001, file: !1, line: 940, column: 11)
!3006 = !DILocation(line: 940, column: 35, scope: !3005)
!3007 = !DILocation(line: 940, column: 23, scope: !3005)
!3008 = !DILocation(line: 940, column: 11, scope: !3001)
!3009 = !DILocation(line: 942, column: 29, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3005, file: !1, line: 941, column: 11)
!3011 = !DILocation(line: 942, column: 50, scope: !3010)
!3012 = !DILocation(line: 942, column: 42, scope: !3010)
!3013 = !DILocation(line: 942, column: 75, scope: !3010)
!3014 = !DILocation(line: 942, column: 15, scope: !3010)
!3015 = !DILocation(line: 942, column: 14, scope: !3010)
!3016 = !DILocation(line: 943, column: 14, scope: !3010)
!3017 = !DILocation(line: 944, column: 16, scope: !3010)
!3018 = !DILocation(line: 944, column: 30, scope: !3010)
!3019 = !DILocation(line: 944, column: 14, scope: !3010)
!3020 = !DILocation(line: 945, column: 11, scope: !3010)
!3021 = !DILocation(line: 940, column: 51, scope: !3005)
!3022 = !DILocation(line: 940, column: 11, scope: !3005)
!3023 = distinct !{!3023, !3008, !3024}
!3024 = !DILocation(line: 945, column: 11, scope: !3001)
!3025 = !DILocation(line: 946, column: 11, scope: !3002)
!3026 = !DILocation(line: 948, column: 13, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !2993, file: !1, line: 948, column: 7)
!3028 = !DILocation(line: 948, column: 12, scope: !3027)
!3029 = !DILocation(line: 948, column: 17, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3027, file: !1, line: 948, column: 7)
!3031 = !DILocation(line: 948, column: 31, scope: !3030)
!3032 = !DILocation(line: 948, column: 19, scope: !3030)
!3033 = !DILocation(line: 948, column: 7, scope: !3027)
!3034 = !DILocation(line: 950, column: 34, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !1, line: 949, column: 7)
!3036 = !DILocation(line: 950, column: 15, scope: !3035)
!3037 = !DILocation(line: 950, column: 14, scope: !3035)
!3038 = !DILocation(line: 951, column: 24, scope: !3035)
!3039 = !DILocation(line: 951, column: 38, scope: !3035)
!3040 = !DILocation(line: 951, column: 45, scope: !3035)
!3041 = !DILocation(line: 951, column: 51, scope: !3035)
!3042 = !DILocation(line: 951, column: 11, scope: !3035)
!3043 = !DILocation(line: 951, column: 10, scope: !3035)
!3044 = !DILocation(line: 952, column: 10, scope: !3035)
!3045 = !DILocation(line: 953, column: 12, scope: !3035)
!3046 = !DILocation(line: 953, column: 26, scope: !3035)
!3047 = !DILocation(line: 953, column: 10, scope: !3035)
!3048 = !DILocation(line: 954, column: 7, scope: !3035)
!3049 = !DILocation(line: 948, column: 47, scope: !3030)
!3050 = !DILocation(line: 948, column: 7, scope: !3030)
!3051 = distinct !{!3051, !3033, !3052}
!3052 = !DILocation(line: 954, column: 7, scope: !3027)
!3053 = !DILocation(line: 955, column: 7, scope: !2993)
!3054 = !DILocation(line: 959, column: 11, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !1, line: 959, column: 11)
!3056 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 958, column: 5)
!3057 = !DILocation(line: 959, column: 25, scope: !3055)
!3058 = !DILocation(line: 959, column: 32, scope: !3055)
!3059 = !DILocation(line: 959, column: 11, scope: !3056)
!3060 = !DILocation(line: 961, column: 17, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !1, line: 961, column: 11)
!3062 = distinct !DILexicalBlock(scope: !3055, file: !1, line: 960, column: 9)
!3063 = !DILocation(line: 961, column: 16, scope: !3061)
!3064 = !DILocation(line: 961, column: 21, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3061, file: !1, line: 961, column: 11)
!3066 = !DILocation(line: 961, column: 35, scope: !3065)
!3067 = !DILocation(line: 961, column: 23, scope: !3065)
!3068 = !DILocation(line: 961, column: 11, scope: !3061)
!3069 = !DILocation(line: 963, column: 30, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3065, file: !1, line: 962, column: 11)
!3071 = !DILocation(line: 963, column: 52, scope: !3070)
!3072 = !DILocation(line: 963, column: 43, scope: !3070)
!3073 = !DILocation(line: 964, column: 15, scope: !3070)
!3074 = !DILocation(line: 963, column: 15, scope: !3070)
!3075 = !DILocation(line: 963, column: 14, scope: !3070)
!3076 = !DILocation(line: 965, column: 14, scope: !3070)
!3077 = !DILocation(line: 966, column: 16, scope: !3070)
!3078 = !DILocation(line: 966, column: 30, scope: !3070)
!3079 = !DILocation(line: 966, column: 14, scope: !3070)
!3080 = !DILocation(line: 967, column: 11, scope: !3070)
!3081 = !DILocation(line: 961, column: 51, scope: !3065)
!3082 = !DILocation(line: 961, column: 11, scope: !3065)
!3083 = distinct !{!3083, !3068, !3084}
!3084 = !DILocation(line: 967, column: 11, scope: !3061)
!3085 = !DILocation(line: 968, column: 11, scope: !3062)
!3086 = !DILocation(line: 970, column: 5, scope: !3056)
!3087 = !DILocalVariable(name: "range", scope: !3088, file: !1, line: 974, type: !508)
!3088 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 972, column: 5)
!3089 = !DILocation(line: 974, column: 9, scope: !3088)
!3090 = !DILocation(line: 976, column: 29, scope: !3088)
!3091 = !DILocation(line: 976, column: 43, scope: !3088)
!3092 = !DILocation(line: 976, column: 13, scope: !3088)
!3093 = !DILocation(line: 976, column: 12, scope: !3088)
!3094 = !DILocation(line: 977, column: 13, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 977, column: 7)
!3096 = !DILocation(line: 977, column: 12, scope: !3095)
!3097 = !DILocation(line: 977, column: 17, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 977, column: 7)
!3099 = !DILocation(line: 977, column: 31, scope: !3098)
!3100 = !DILocation(line: 977, column: 19, scope: !3098)
!3101 = !DILocation(line: 977, column: 7, scope: !3095)
!3102 = !DILocation(line: 979, column: 27, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 978, column: 7)
!3104 = !DILocation(line: 980, column: 39, scope: !3103)
!3105 = !DILocation(line: 980, column: 29, scope: !3103)
!3106 = !DILocation(line: 980, column: 64, scope: !3103)
!3107 = !DILocation(line: 980, column: 11, scope: !3103)
!3108 = !DILocation(line: 980, column: 71, scope: !3103)
!3109 = !DILocation(line: 979, column: 11, scope: !3103)
!3110 = !DILocation(line: 979, column: 10, scope: !3103)
!3111 = !DILocation(line: 981, column: 10, scope: !3103)
!3112 = !DILocation(line: 982, column: 12, scope: !3103)
!3113 = !DILocation(line: 982, column: 26, scope: !3103)
!3114 = !DILocation(line: 982, column: 10, scope: !3103)
!3115 = !DILocation(line: 983, column: 7, scope: !3103)
!3116 = !DILocation(line: 977, column: 47, scope: !3098)
!3117 = !DILocation(line: 977, column: 7, scope: !3098)
!3118 = distinct !{!3118, !3101, !3119}
!3119 = !DILocation(line: 983, column: 7, scope: !3095)
!3120 = !DILocation(line: 984, column: 7, scope: !3088)
!3121 = !DILocation(line: 987, column: 1, scope: !2862)
!3122 = distinct !DISubprogram(name: "ExportBlueQuantum", scope: !1, file: !1, line: 989, type: !1182, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3123 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !3122, file: !1, line: 989, type: !459)
!3124 = !DILocation(line: 989, column: 44, scope: !3122)
!3125 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !3122, file: !1, line: 990, type: !637)
!3126 = !DILocation(line: 990, column: 24, scope: !3122)
!3127 = !DILocalVariable(name: "p", arg: 3, scope: !3122, file: !1, line: 990, type: !740)
!3128 = !DILocation(line: 990, column: 66, scope: !3122)
!3129 = !DILocalVariable(name: "q", arg: 4, scope: !3122, file: !1, line: 991, type: !717)
!3130 = !DILocation(line: 991, column: 27, scope: !3122)
!3131 = !DILocalVariable(name: "range", scope: !3122, file: !1, line: 994, type: !508)
!3132 = !DILocation(line: 994, column: 5, scope: !3122)
!3133 = !DILocalVariable(name: "x", scope: !3122, file: !1, line: 997, type: !453)
!3134 = !DILocation(line: 997, column: 5, scope: !3122)
!3135 = !DILocation(line: 999, column: 11, scope: !3122)
!3136 = !DILocation(line: 999, column: 25, scope: !3122)
!3137 = !DILocation(line: 999, column: 3, scope: !3122)
!3138 = !DILocalVariable(name: "pixel", scope: !3139, file: !1, line: 1004, type: !437)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1002, column: 5)
!3140 = distinct !DILexicalBlock(scope: !3122, file: !1, line: 1000, column: 3)
!3141 = !DILocation(line: 1004, column: 9, scope: !3139)
!3142 = !DILocation(line: 1006, column: 13, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3139, file: !1, line: 1006, column: 7)
!3144 = !DILocation(line: 1006, column: 12, scope: !3143)
!3145 = !DILocation(line: 1006, column: 17, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3143, file: !1, line: 1006, column: 7)
!3147 = !DILocation(line: 1006, column: 31, scope: !3146)
!3148 = !DILocation(line: 1006, column: 19, scope: !3146)
!3149 = !DILocation(line: 1006, column: 7, scope: !3143)
!3150 = !DILocation(line: 1008, column: 34, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3146, file: !1, line: 1007, column: 7)
!3152 = !DILocation(line: 1008, column: 15, scope: !3151)
!3153 = !DILocation(line: 1008, column: 14, scope: !3151)
!3154 = !DILocation(line: 1009, column: 24, scope: !3151)
!3155 = !DILocation(line: 1009, column: 30, scope: !3151)
!3156 = !DILocation(line: 1009, column: 11, scope: !3151)
!3157 = !DILocation(line: 1009, column: 10, scope: !3151)
!3158 = !DILocation(line: 1010, column: 10, scope: !3151)
!3159 = !DILocation(line: 1011, column: 12, scope: !3151)
!3160 = !DILocation(line: 1011, column: 26, scope: !3151)
!3161 = !DILocation(line: 1011, column: 10, scope: !3151)
!3162 = !DILocation(line: 1012, column: 7, scope: !3151)
!3163 = !DILocation(line: 1006, column: 47, scope: !3146)
!3164 = !DILocation(line: 1006, column: 7, scope: !3146)
!3165 = distinct !{!3165, !3149, !3166}
!3166 = !DILocation(line: 1012, column: 7, scope: !3143)
!3167 = !DILocation(line: 1013, column: 7, scope: !3139)
!3168 = !DILocalVariable(name: "pixel", scope: !3169, file: !1, line: 1018, type: !449)
!3169 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1016, column: 5)
!3170 = !DILocation(line: 1018, column: 9, scope: !3169)
!3171 = !DILocation(line: 1020, column: 11, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3169, file: !1, line: 1020, column: 11)
!3173 = !DILocation(line: 1020, column: 25, scope: !3172)
!3174 = !DILocation(line: 1020, column: 32, scope: !3172)
!3175 = !DILocation(line: 1020, column: 11, scope: !3169)
!3176 = !DILocation(line: 1022, column: 17, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 1022, column: 11)
!3178 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 1021, column: 9)
!3179 = !DILocation(line: 1022, column: 16, scope: !3177)
!3180 = !DILocation(line: 1022, column: 21, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3177, file: !1, line: 1022, column: 11)
!3182 = !DILocation(line: 1022, column: 35, scope: !3181)
!3183 = !DILocation(line: 1022, column: 23, scope: !3181)
!3184 = !DILocation(line: 1022, column: 11, scope: !3177)
!3185 = !DILocation(line: 1024, column: 54, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3181, file: !1, line: 1023, column: 11)
!3187 = !DILocation(line: 1024, column: 53, scope: !3186)
!3188 = !DILocation(line: 1024, column: 41, scope: !3186)
!3189 = !DILocation(line: 1024, column: 19, scope: !3186)
!3190 = !DILocation(line: 1024, column: 18, scope: !3186)
!3191 = !DILocation(line: 1025, column: 29, scope: !3186)
!3192 = !DILocation(line: 1025, column: 43, scope: !3186)
!3193 = !DILocation(line: 1025, column: 50, scope: !3186)
!3194 = !DILocation(line: 1025, column: 56, scope: !3186)
!3195 = !DILocation(line: 1025, column: 15, scope: !3186)
!3196 = !DILocation(line: 1025, column: 14, scope: !3186)
!3197 = !DILocation(line: 1026, column: 14, scope: !3186)
!3198 = !DILocation(line: 1027, column: 16, scope: !3186)
!3199 = !DILocation(line: 1027, column: 30, scope: !3186)
!3200 = !DILocation(line: 1027, column: 14, scope: !3186)
!3201 = !DILocation(line: 1028, column: 11, scope: !3186)
!3202 = !DILocation(line: 1022, column: 51, scope: !3181)
!3203 = !DILocation(line: 1022, column: 11, scope: !3181)
!3204 = distinct !{!3204, !3184, !3205}
!3205 = !DILocation(line: 1028, column: 11, scope: !3177)
!3206 = !DILocation(line: 1029, column: 11, scope: !3178)
!3207 = !DILocation(line: 1031, column: 13, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3169, file: !1, line: 1031, column: 7)
!3209 = !DILocation(line: 1031, column: 12, scope: !3208)
!3210 = !DILocation(line: 1031, column: 17, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3208, file: !1, line: 1031, column: 7)
!3212 = !DILocation(line: 1031, column: 31, scope: !3211)
!3213 = !DILocation(line: 1031, column: 19, scope: !3211)
!3214 = !DILocation(line: 1031, column: 7, scope: !3208)
!3215 = !DILocation(line: 1033, column: 35, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 1032, column: 7)
!3217 = !DILocation(line: 1033, column: 15, scope: !3216)
!3218 = !DILocation(line: 1033, column: 14, scope: !3216)
!3219 = !DILocation(line: 1034, column: 25, scope: !3216)
!3220 = !DILocation(line: 1034, column: 39, scope: !3216)
!3221 = !DILocation(line: 1034, column: 46, scope: !3216)
!3222 = !DILocation(line: 1034, column: 52, scope: !3216)
!3223 = !DILocation(line: 1034, column: 11, scope: !3216)
!3224 = !DILocation(line: 1034, column: 10, scope: !3216)
!3225 = !DILocation(line: 1035, column: 10, scope: !3216)
!3226 = !DILocation(line: 1036, column: 12, scope: !3216)
!3227 = !DILocation(line: 1036, column: 26, scope: !3216)
!3228 = !DILocation(line: 1036, column: 10, scope: !3216)
!3229 = !DILocation(line: 1037, column: 7, scope: !3216)
!3230 = !DILocation(line: 1031, column: 47, scope: !3211)
!3231 = !DILocation(line: 1031, column: 7, scope: !3211)
!3232 = distinct !{!3232, !3214, !3233}
!3233 = !DILocation(line: 1037, column: 7, scope: !3208)
!3234 = !DILocation(line: 1038, column: 7, scope: !3169)
!3235 = !DILocalVariable(name: "pixel", scope: !3236, file: !1, line: 1043, type: !5)
!3236 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1041, column: 5)
!3237 = !DILocation(line: 1043, column: 9, scope: !3236)
!3238 = !DILocation(line: 1045, column: 11, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3236, file: !1, line: 1045, column: 11)
!3240 = !DILocation(line: 1045, column: 25, scope: !3239)
!3241 = !DILocation(line: 1045, column: 32, scope: !3239)
!3242 = !DILocation(line: 1045, column: 11, scope: !3236)
!3243 = !DILocation(line: 1047, column: 17, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !1, line: 1047, column: 11)
!3245 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 1046, column: 9)
!3246 = !DILocation(line: 1047, column: 16, scope: !3244)
!3247 = !DILocation(line: 1047, column: 21, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3244, file: !1, line: 1047, column: 11)
!3249 = !DILocation(line: 1047, column: 35, scope: !3248)
!3250 = !DILocation(line: 1047, column: 23, scope: !3248)
!3251 = !DILocation(line: 1047, column: 11, scope: !3244)
!3252 = !DILocation(line: 1049, column: 29, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3248, file: !1, line: 1048, column: 11)
!3254 = !DILocation(line: 1049, column: 50, scope: !3253)
!3255 = !DILocation(line: 1049, column: 42, scope: !3253)
!3256 = !DILocation(line: 1049, column: 66, scope: !3253)
!3257 = !DILocation(line: 1049, column: 15, scope: !3253)
!3258 = !DILocation(line: 1049, column: 14, scope: !3253)
!3259 = !DILocation(line: 1050, column: 14, scope: !3253)
!3260 = !DILocation(line: 1051, column: 16, scope: !3253)
!3261 = !DILocation(line: 1051, column: 30, scope: !3253)
!3262 = !DILocation(line: 1051, column: 14, scope: !3253)
!3263 = !DILocation(line: 1052, column: 11, scope: !3253)
!3264 = !DILocation(line: 1047, column: 51, scope: !3248)
!3265 = !DILocation(line: 1047, column: 11, scope: !3248)
!3266 = distinct !{!3266, !3251, !3267}
!3267 = !DILocation(line: 1052, column: 11, scope: !3244)
!3268 = !DILocation(line: 1053, column: 11, scope: !3245)
!3269 = !DILocation(line: 1055, column: 13, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3236, file: !1, line: 1055, column: 7)
!3271 = !DILocation(line: 1055, column: 12, scope: !3270)
!3272 = !DILocation(line: 1055, column: 17, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3270, file: !1, line: 1055, column: 7)
!3274 = !DILocation(line: 1055, column: 31, scope: !3273)
!3275 = !DILocation(line: 1055, column: 19, scope: !3273)
!3276 = !DILocation(line: 1055, column: 7, scope: !3270)
!3277 = !DILocation(line: 1057, column: 34, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3273, file: !1, line: 1056, column: 7)
!3279 = !DILocation(line: 1057, column: 15, scope: !3278)
!3280 = !DILocation(line: 1057, column: 14, scope: !3278)
!3281 = !DILocation(line: 1058, column: 24, scope: !3278)
!3282 = !DILocation(line: 1058, column: 38, scope: !3278)
!3283 = !DILocation(line: 1058, column: 45, scope: !3278)
!3284 = !DILocation(line: 1058, column: 51, scope: !3278)
!3285 = !DILocation(line: 1058, column: 11, scope: !3278)
!3286 = !DILocation(line: 1058, column: 10, scope: !3278)
!3287 = !DILocation(line: 1059, column: 10, scope: !3278)
!3288 = !DILocation(line: 1060, column: 12, scope: !3278)
!3289 = !DILocation(line: 1060, column: 26, scope: !3278)
!3290 = !DILocation(line: 1060, column: 10, scope: !3278)
!3291 = !DILocation(line: 1061, column: 7, scope: !3278)
!3292 = !DILocation(line: 1055, column: 47, scope: !3273)
!3293 = !DILocation(line: 1055, column: 7, scope: !3273)
!3294 = distinct !{!3294, !3276, !3295}
!3295 = !DILocation(line: 1061, column: 7, scope: !3270)
!3296 = !DILocation(line: 1062, column: 7, scope: !3236)
!3297 = !DILocation(line: 1066, column: 11, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !1, line: 1066, column: 11)
!3299 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1065, column: 5)
!3300 = !DILocation(line: 1066, column: 25, scope: !3298)
!3301 = !DILocation(line: 1066, column: 32, scope: !3298)
!3302 = !DILocation(line: 1066, column: 11, scope: !3299)
!3303 = !DILocation(line: 1068, column: 17, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1068, column: 11)
!3305 = distinct !DILexicalBlock(scope: !3298, file: !1, line: 1067, column: 9)
!3306 = !DILocation(line: 1068, column: 16, scope: !3304)
!3307 = !DILocation(line: 1068, column: 21, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 1068, column: 11)
!3309 = !DILocation(line: 1068, column: 35, scope: !3308)
!3310 = !DILocation(line: 1068, column: 23, scope: !3308)
!3311 = !DILocation(line: 1068, column: 11, scope: !3304)
!3312 = !DILocation(line: 1070, column: 30, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !1, line: 1069, column: 11)
!3314 = !DILocation(line: 1070, column: 52, scope: !3313)
!3315 = !DILocation(line: 1070, column: 43, scope: !3313)
!3316 = !DILocation(line: 1070, column: 68, scope: !3313)
!3317 = !DILocation(line: 1070, column: 15, scope: !3313)
!3318 = !DILocation(line: 1070, column: 14, scope: !3313)
!3319 = !DILocation(line: 1071, column: 14, scope: !3313)
!3320 = !DILocation(line: 1072, column: 16, scope: !3313)
!3321 = !DILocation(line: 1072, column: 30, scope: !3313)
!3322 = !DILocation(line: 1072, column: 14, scope: !3313)
!3323 = !DILocation(line: 1073, column: 11, scope: !3313)
!3324 = !DILocation(line: 1068, column: 51, scope: !3308)
!3325 = !DILocation(line: 1068, column: 11, scope: !3308)
!3326 = distinct !{!3326, !3311, !3327}
!3327 = !DILocation(line: 1073, column: 11, scope: !3304)
!3328 = !DILocation(line: 1074, column: 11, scope: !3305)
!3329 = !DILocation(line: 1076, column: 5, scope: !3299)
!3330 = !DILocation(line: 1079, column: 29, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1078, column: 5)
!3332 = !DILocation(line: 1079, column: 43, scope: !3331)
!3333 = !DILocation(line: 1079, column: 13, scope: !3331)
!3334 = !DILocation(line: 1079, column: 12, scope: !3331)
!3335 = !DILocation(line: 1080, column: 13, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1080, column: 7)
!3337 = !DILocation(line: 1080, column: 12, scope: !3336)
!3338 = !DILocation(line: 1080, column: 17, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3336, file: !1, line: 1080, column: 7)
!3340 = !DILocation(line: 1080, column: 31, scope: !3339)
!3341 = !DILocation(line: 1080, column: 19, scope: !3339)
!3342 = !DILocation(line: 1080, column: 7, scope: !3336)
!3343 = !DILocation(line: 1082, column: 27, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3339, file: !1, line: 1081, column: 7)
!3345 = !DILocation(line: 1083, column: 29, scope: !3344)
!3346 = !DILocation(line: 1083, column: 45, scope: !3344)
!3347 = !DILocation(line: 1083, column: 11, scope: !3344)
!3348 = !DILocation(line: 1083, column: 52, scope: !3344)
!3349 = !DILocation(line: 1082, column: 11, scope: !3344)
!3350 = !DILocation(line: 1082, column: 10, scope: !3344)
!3351 = !DILocation(line: 1084, column: 10, scope: !3344)
!3352 = !DILocation(line: 1085, column: 12, scope: !3344)
!3353 = !DILocation(line: 1085, column: 26, scope: !3344)
!3354 = !DILocation(line: 1085, column: 10, scope: !3344)
!3355 = !DILocation(line: 1086, column: 7, scope: !3344)
!3356 = !DILocation(line: 1080, column: 47, scope: !3339)
!3357 = !DILocation(line: 1080, column: 7, scope: !3339)
!3358 = distinct !{!3358, !3342, !3359}
!3359 = !DILocation(line: 1086, column: 7, scope: !3336)
!3360 = !DILocation(line: 1087, column: 7, scope: !3331)
!3361 = !DILocation(line: 1090, column: 1, scope: !3122)
!3362 = distinct !DISubprogram(name: "ExportCbYCrYQuantum", scope: !1, file: !1, line: 1092, type: !1182, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3363 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !3362, file: !1, line: 1092, type: !459)
!3364 = !DILocation(line: 1092, column: 46, scope: !3362)
!3365 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !3362, file: !1, line: 1093, type: !637)
!3366 = !DILocation(line: 1093, column: 24, scope: !3362)
!3367 = !DILocalVariable(name: "p", arg: 3, scope: !3362, file: !1, line: 1093, type: !740)
!3368 = !DILocation(line: 1093, column: 66, scope: !3362)
!3369 = !DILocalVariable(name: "q", arg: 4, scope: !3362, file: !1, line: 1094, type: !717)
!3370 = !DILocation(line: 1094, column: 27, scope: !3362)
!3371 = !DILocalVariable(name: "cbcr", scope: !3362, file: !1, line: 1097, type: !3372)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 64, elements: !3373)
!3373 = !{!3374}
!3374 = !DISubrange(count: 4)
!3375 = !DILocation(line: 1097, column: 5, scope: !3362)
!3376 = !DILocalVariable(name: "range", scope: !3362, file: !1, line: 1100, type: !508)
!3377 = !DILocation(line: 1100, column: 5, scope: !3362)
!3378 = !DILocalVariable(name: "i", scope: !3362, file: !1, line: 1103, type: !453)
!3379 = !DILocation(line: 1103, column: 5, scope: !3362)
!3380 = !DILocalVariable(name: "x", scope: !3362, file: !1, line: 1104, type: !453)
!3381 = !DILocation(line: 1104, column: 5, scope: !3362)
!3382 = !DILocalVariable(name: "pixel", scope: !3362, file: !1, line: 1107, type: !5)
!3383 = !DILocation(line: 1107, column: 5, scope: !3362)
!3384 = !DILocalVariable(name: "quantum", scope: !3362, file: !1, line: 1110, type: !465)
!3385 = !DILocation(line: 1110, column: 5, scope: !3362)
!3386 = !DILocalVariable(name: "n", scope: !3362, file: !1, line: 1113, type: !453)
!3387 = !DILocation(line: 1113, column: 5, scope: !3362)
!3388 = !DILocation(line: 1115, column: 4, scope: !3362)
!3389 = !DILocation(line: 1116, column: 10, scope: !3362)
!3390 = !DILocation(line: 1117, column: 25, scope: !3362)
!3391 = !DILocation(line: 1117, column: 39, scope: !3362)
!3392 = !DILocation(line: 1117, column: 9, scope: !3362)
!3393 = !DILocation(line: 1117, column: 8, scope: !3362)
!3394 = !DILocation(line: 1118, column: 11, scope: !3362)
!3395 = !DILocation(line: 1118, column: 25, scope: !3362)
!3396 = !DILocation(line: 1118, column: 3, scope: !3362)
!3397 = !DILocation(line: 1122, column: 11, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 1122, column: 11)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !1, line: 1121, column: 5)
!3400 = distinct !DILexicalBlock(scope: !3362, file: !1, line: 1119, column: 3)
!3401 = !DILocation(line: 1122, column: 25, scope: !3398)
!3402 = !DILocation(line: 1122, column: 30, scope: !3398)
!3403 = !DILocation(line: 1122, column: 11, scope: !3399)
!3404 = !DILocation(line: 1124, column: 17, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !1, line: 1124, column: 11)
!3406 = distinct !DILexicalBlock(scope: !3398, file: !1, line: 1123, column: 9)
!3407 = !DILocation(line: 1124, column: 16, scope: !3405)
!3408 = !DILocation(line: 1124, column: 21, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !1, line: 1124, column: 11)
!3410 = !DILocation(line: 1124, column: 35, scope: !3409)
!3411 = !DILocation(line: 1124, column: 23, scope: !3409)
!3412 = !DILocation(line: 1124, column: 11, scope: !3405)
!3413 = !DILocation(line: 1126, column: 19, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !1, line: 1126, column: 13)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !1, line: 1125, column: 11)
!3416 = !DILocation(line: 1126, column: 18, scope: !3414)
!3417 = !DILocation(line: 1126, column: 23, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !1, line: 1126, column: 13)
!3419 = !DILocation(line: 1126, column: 25, scope: !3418)
!3420 = !DILocation(line: 1126, column: 13, scope: !3414)
!3421 = !DILocation(line: 1128, column: 23, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3418, file: !1, line: 1127, column: 13)
!3423 = !DILocation(line: 1128, column: 25, scope: !3422)
!3424 = !DILocation(line: 1128, column: 15, scope: !3422)
!3425 = !DILocation(line: 1132, column: 27, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 1131, column: 17)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !1, line: 1129, column: 15)
!3428 = !DILocation(line: 1132, column: 26, scope: !3426)
!3429 = !DILocation(line: 1133, column: 19, scope: !3426)
!3430 = !DILocation(line: 1137, column: 27, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 1136, column: 17)
!3432 = !DILocation(line: 1137, column: 26, scope: !3431)
!3433 = !DILocation(line: 1138, column: 19, scope: !3431)
!3434 = !DILocation(line: 1142, column: 27, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 1141, column: 17)
!3436 = !DILocation(line: 1142, column: 26, scope: !3435)
!3437 = !DILocation(line: 1143, column: 19, scope: !3435)
!3438 = !DILocation(line: 1146, column: 33, scope: !3422)
!3439 = !DILocation(line: 1146, column: 23, scope: !3422)
!3440 = !DILocation(line: 1146, column: 20, scope: !3422)
!3441 = !DILocation(line: 1146, column: 15, scope: !3422)
!3442 = !DILocation(line: 1146, column: 22, scope: !3422)
!3443 = !DILocation(line: 1147, column: 16, scope: !3422)
!3444 = !DILocation(line: 1148, column: 13, scope: !3422)
!3445 = !DILocation(line: 1126, column: 31, scope: !3418)
!3446 = !DILocation(line: 1126, column: 13, scope: !3418)
!3447 = distinct !{!3447, !3420, !3448}
!3448 = !DILocation(line: 1148, column: 13, scope: !3414)
!3449 = !DILocation(line: 1149, column: 45, scope: !3415)
!3450 = !DILocation(line: 1149, column: 35, scope: !3415)
!3451 = !DILocation(line: 1149, column: 54, scope: !3415)
!3452 = !DILocation(line: 1150, column: 16, scope: !3415)
!3453 = !DILocation(line: 1149, column: 62, scope: !3415)
!3454 = !DILocation(line: 1150, column: 25, scope: !3415)
!3455 = !DILocation(line: 1149, column: 60, scope: !3415)
!3456 = !DILocation(line: 1150, column: 43, scope: !3415)
!3457 = !DILocation(line: 1150, column: 33, scope: !3415)
!3458 = !DILocation(line: 1150, column: 52, scope: !3415)
!3459 = !DILocation(line: 1150, column: 31, scope: !3415)
!3460 = !DILocation(line: 1149, column: 19, scope: !3415)
!3461 = !DILocation(line: 1149, column: 18, scope: !3415)
!3462 = !DILocation(line: 1151, column: 28, scope: !3415)
!3463 = !DILocation(line: 1151, column: 42, scope: !3415)
!3464 = !DILocation(line: 1151, column: 49, scope: !3415)
!3465 = !DILocation(line: 1151, column: 55, scope: !3415)
!3466 = !DILocation(line: 1151, column: 15, scope: !3415)
!3467 = !DILocation(line: 1151, column: 14, scope: !3415)
!3468 = !DILocation(line: 1152, column: 14, scope: !3415)
!3469 = !DILocation(line: 1153, column: 45, scope: !3415)
!3470 = !DILocation(line: 1153, column: 35, scope: !3415)
!3471 = !DILocation(line: 1153, column: 54, scope: !3415)
!3472 = !DILocation(line: 1154, column: 16, scope: !3415)
!3473 = !DILocation(line: 1153, column: 62, scope: !3415)
!3474 = !DILocation(line: 1154, column: 25, scope: !3415)
!3475 = !DILocation(line: 1153, column: 60, scope: !3415)
!3476 = !DILocation(line: 1154, column: 43, scope: !3415)
!3477 = !DILocation(line: 1154, column: 33, scope: !3415)
!3478 = !DILocation(line: 1154, column: 52, scope: !3415)
!3479 = !DILocation(line: 1154, column: 31, scope: !3415)
!3480 = !DILocation(line: 1153, column: 19, scope: !3415)
!3481 = !DILocation(line: 1153, column: 18, scope: !3415)
!3482 = !DILocation(line: 1155, column: 28, scope: !3415)
!3483 = !DILocation(line: 1155, column: 42, scope: !3415)
!3484 = !DILocation(line: 1155, column: 49, scope: !3415)
!3485 = !DILocation(line: 1155, column: 55, scope: !3415)
!3486 = !DILocation(line: 1155, column: 15, scope: !3415)
!3487 = !DILocation(line: 1155, column: 14, scope: !3415)
!3488 = !DILocation(line: 1156, column: 14, scope: !3415)
!3489 = !DILocation(line: 1157, column: 16, scope: !3415)
!3490 = !DILocation(line: 1157, column: 30, scope: !3415)
!3491 = !DILocation(line: 1157, column: 14, scope: !3415)
!3492 = !DILocation(line: 1158, column: 11, scope: !3415)
!3493 = !DILocation(line: 1124, column: 51, scope: !3409)
!3494 = !DILocation(line: 1124, column: 11, scope: !3409)
!3495 = distinct !{!3495, !3412, !3496}
!3496 = !DILocation(line: 1158, column: 11, scope: !3405)
!3497 = !DILocation(line: 1159, column: 11, scope: !3406)
!3498 = !DILocation(line: 1161, column: 7, scope: !3399)
!3499 = !DILocation(line: 1165, column: 13, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !1, line: 1165, column: 7)
!3501 = distinct !DILexicalBlock(scope: !3400, file: !1, line: 1164, column: 5)
!3502 = !DILocation(line: 1165, column: 12, scope: !3500)
!3503 = !DILocation(line: 1165, column: 17, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1165, column: 7)
!3505 = !DILocation(line: 1165, column: 31, scope: !3504)
!3506 = !DILocation(line: 1165, column: 19, scope: !3504)
!3507 = !DILocation(line: 1165, column: 7, scope: !3500)
!3508 = !DILocation(line: 1167, column: 15, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !1, line: 1167, column: 9)
!3510 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 1166, column: 7)
!3511 = !DILocation(line: 1167, column: 14, scope: !3509)
!3512 = !DILocation(line: 1167, column: 19, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1167, column: 9)
!3514 = !DILocation(line: 1167, column: 21, scope: !3513)
!3515 = !DILocation(line: 1167, column: 9, scope: !3509)
!3516 = !DILocation(line: 1169, column: 19, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !1, line: 1168, column: 9)
!3518 = !DILocation(line: 1169, column: 21, scope: !3517)
!3519 = !DILocation(line: 1169, column: 11, scope: !3517)
!3520 = !DILocation(line: 1173, column: 23, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !1, line: 1172, column: 13)
!3522 = distinct !DILexicalBlock(scope: !3517, file: !1, line: 1170, column: 11)
!3523 = !DILocation(line: 1173, column: 22, scope: !3521)
!3524 = !DILocation(line: 1174, column: 15, scope: !3521)
!3525 = !DILocation(line: 1178, column: 23, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3522, file: !1, line: 1177, column: 13)
!3527 = !DILocation(line: 1178, column: 22, scope: !3526)
!3528 = !DILocation(line: 1179, column: 15, scope: !3526)
!3529 = !DILocation(line: 1183, column: 23, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3522, file: !1, line: 1182, column: 13)
!3531 = !DILocation(line: 1183, column: 22, scope: !3530)
!3532 = !DILocation(line: 1184, column: 15, scope: !3530)
!3533 = !DILocation(line: 1187, column: 29, scope: !3517)
!3534 = !DILocation(line: 1187, column: 19, scope: !3517)
!3535 = !DILocation(line: 1187, column: 16, scope: !3517)
!3536 = !DILocation(line: 1187, column: 11, scope: !3517)
!3537 = !DILocation(line: 1187, column: 18, scope: !3517)
!3538 = !DILocation(line: 1188, column: 12, scope: !3517)
!3539 = !DILocation(line: 1189, column: 9, scope: !3517)
!3540 = !DILocation(line: 1167, column: 27, scope: !3513)
!3541 = !DILocation(line: 1167, column: 9, scope: !3513)
!3542 = distinct !{!3542, !3515, !3543}
!3543 = !DILocation(line: 1189, column: 9, scope: !3509)
!3544 = !DILocation(line: 1190, column: 27, scope: !3510)
!3545 = !DILocation(line: 1191, column: 29, scope: !3510)
!3546 = !DILocation(line: 1191, column: 37, scope: !3510)
!3547 = !DILocation(line: 1191, column: 11, scope: !3510)
!3548 = !DILocation(line: 1191, column: 44, scope: !3510)
!3549 = !DILocation(line: 1190, column: 11, scope: !3510)
!3550 = !DILocation(line: 1190, column: 10, scope: !3510)
!3551 = !DILocation(line: 1192, column: 27, scope: !3510)
!3552 = !DILocation(line: 1193, column: 29, scope: !3510)
!3553 = !DILocation(line: 1193, column: 37, scope: !3510)
!3554 = !DILocation(line: 1193, column: 11, scope: !3510)
!3555 = !DILocation(line: 1193, column: 44, scope: !3510)
!3556 = !DILocation(line: 1192, column: 11, scope: !3510)
!3557 = !DILocation(line: 1192, column: 10, scope: !3510)
!3558 = !DILocation(line: 1194, column: 27, scope: !3510)
!3559 = !DILocation(line: 1195, column: 29, scope: !3510)
!3560 = !DILocation(line: 1195, column: 37, scope: !3510)
!3561 = !DILocation(line: 1195, column: 11, scope: !3510)
!3562 = !DILocation(line: 1195, column: 44, scope: !3510)
!3563 = !DILocation(line: 1194, column: 11, scope: !3510)
!3564 = !DILocation(line: 1194, column: 10, scope: !3510)
!3565 = !DILocation(line: 1196, column: 10, scope: !3510)
!3566 = !DILocation(line: 1197, column: 27, scope: !3510)
!3567 = !DILocation(line: 1198, column: 29, scope: !3510)
!3568 = !DILocation(line: 1198, column: 37, scope: !3510)
!3569 = !DILocation(line: 1198, column: 11, scope: !3510)
!3570 = !DILocation(line: 1198, column: 44, scope: !3510)
!3571 = !DILocation(line: 1197, column: 11, scope: !3510)
!3572 = !DILocation(line: 1197, column: 10, scope: !3510)
!3573 = !DILocation(line: 1199, column: 27, scope: !3510)
!3574 = !DILocation(line: 1200, column: 29, scope: !3510)
!3575 = !DILocation(line: 1200, column: 37, scope: !3510)
!3576 = !DILocation(line: 1200, column: 11, scope: !3510)
!3577 = !DILocation(line: 1200, column: 44, scope: !3510)
!3578 = !DILocation(line: 1199, column: 11, scope: !3510)
!3579 = !DILocation(line: 1199, column: 10, scope: !3510)
!3580 = !DILocation(line: 1201, column: 27, scope: !3510)
!3581 = !DILocation(line: 1202, column: 29, scope: !3510)
!3582 = !DILocation(line: 1202, column: 37, scope: !3510)
!3583 = !DILocation(line: 1202, column: 11, scope: !3510)
!3584 = !DILocation(line: 1202, column: 44, scope: !3510)
!3585 = !DILocation(line: 1201, column: 11, scope: !3510)
!3586 = !DILocation(line: 1201, column: 10, scope: !3510)
!3587 = !DILocation(line: 1203, column: 10, scope: !3510)
!3588 = !DILocation(line: 1204, column: 12, scope: !3510)
!3589 = !DILocation(line: 1204, column: 26, scope: !3510)
!3590 = !DILocation(line: 1204, column: 10, scope: !3510)
!3591 = !DILocation(line: 1205, column: 7, scope: !3510)
!3592 = !DILocation(line: 1165, column: 47, scope: !3504)
!3593 = !DILocation(line: 1165, column: 7, scope: !3504)
!3594 = distinct !{!3594, !3507, !3595}
!3595 = !DILocation(line: 1205, column: 7, scope: !3500)
!3596 = !DILocation(line: 1206, column: 7, scope: !3501)
!3597 = !DILocation(line: 1209, column: 1, scope: !3362)
!3598 = distinct !DISubprogram(name: "ExportCMYKQuantum", scope: !1, file: !1, line: 1211, type: !2863, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3599 = !DILocalVariable(name: "image", arg: 1, scope: !3598, file: !1, line: 1211, type: !519)
!3600 = !DILocation(line: 1211, column: 44, scope: !3598)
!3601 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !3598, file: !1, line: 1211, type: !459)
!3602 = !DILocation(line: 1211, column: 63, scope: !3598)
!3603 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !3598, file: !1, line: 1212, type: !637)
!3604 = !DILocation(line: 1212, column: 24, scope: !3598)
!3605 = !DILocalVariable(name: "p", arg: 4, scope: !3598, file: !1, line: 1212, type: !740)
!3606 = !DILocation(line: 1212, column: 66, scope: !3598)
!3607 = !DILocalVariable(name: "indexes", arg: 5, scope: !3598, file: !1, line: 1213, type: !737)
!3608 = !DILocation(line: 1213, column: 31, scope: !3598)
!3609 = !DILocalVariable(name: "q", arg: 6, scope: !3598, file: !1, line: 1213, type: !717)
!3610 = !DILocation(line: 1213, column: 63, scope: !3598)
!3611 = !DILocalVariable(name: "exception", arg: 7, scope: !3598, file: !1, line: 1214, type: !718)
!3612 = !DILocation(line: 1214, column: 18, scope: !3598)
!3613 = !DILocalVariable(name: "range", scope: !3598, file: !1, line: 1217, type: !508)
!3614 = !DILocation(line: 1217, column: 5, scope: !3598)
!3615 = !DILocalVariable(name: "x", scope: !3598, file: !1, line: 1220, type: !453)
!3616 = !DILocation(line: 1220, column: 5, scope: !3598)
!3617 = !DILocation(line: 1222, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3598, file: !1, line: 1222, column: 7)
!3619 = !DILocation(line: 1222, column: 14, scope: !3618)
!3620 = !DILocation(line: 1222, column: 25, scope: !3618)
!3621 = !DILocation(line: 1222, column: 7, scope: !3598)
!3622 = !DILocation(line: 1224, column: 35, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3618, file: !1, line: 1223, column: 5)
!3624 = !DILocation(line: 1225, column: 46, scope: !3623)
!3625 = !DILocation(line: 1225, column: 53, scope: !3623)
!3626 = !DILocation(line: 1224, column: 14, scope: !3623)
!3627 = !DILocation(line: 1226, column: 7, scope: !3623)
!3628 = !DILocation(line: 1228, column: 11, scope: !3598)
!3629 = !DILocation(line: 1228, column: 25, scope: !3598)
!3630 = !DILocation(line: 1228, column: 3, scope: !3598)
!3631 = !DILocalVariable(name: "pixel", scope: !3632, file: !1, line: 1233, type: !437)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1231, column: 5)
!3633 = distinct !DILexicalBlock(scope: !3598, file: !1, line: 1229, column: 3)
!3634 = !DILocation(line: 1233, column: 9, scope: !3632)
!3635 = !DILocation(line: 1235, column: 13, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !1, line: 1235, column: 7)
!3637 = !DILocation(line: 1235, column: 12, scope: !3636)
!3638 = !DILocation(line: 1235, column: 17, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 1235, column: 7)
!3640 = !DILocation(line: 1235, column: 31, scope: !3639)
!3641 = !DILocation(line: 1235, column: 19, scope: !3639)
!3642 = !DILocation(line: 1235, column: 7, scope: !3636)
!3643 = !DILocation(line: 1237, column: 34, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3639, file: !1, line: 1236, column: 7)
!3645 = !DILocation(line: 1237, column: 15, scope: !3644)
!3646 = !DILocation(line: 1237, column: 14, scope: !3644)
!3647 = !DILocation(line: 1238, column: 24, scope: !3644)
!3648 = !DILocation(line: 1238, column: 30, scope: !3644)
!3649 = !DILocation(line: 1238, column: 11, scope: !3644)
!3650 = !DILocation(line: 1238, column: 10, scope: !3644)
!3651 = !DILocation(line: 1239, column: 34, scope: !3644)
!3652 = !DILocation(line: 1239, column: 15, scope: !3644)
!3653 = !DILocation(line: 1239, column: 14, scope: !3644)
!3654 = !DILocation(line: 1240, column: 24, scope: !3644)
!3655 = !DILocation(line: 1240, column: 30, scope: !3644)
!3656 = !DILocation(line: 1240, column: 11, scope: !3644)
!3657 = !DILocation(line: 1240, column: 10, scope: !3644)
!3658 = !DILocation(line: 1241, column: 34, scope: !3644)
!3659 = !DILocation(line: 1241, column: 15, scope: !3644)
!3660 = !DILocation(line: 1241, column: 14, scope: !3644)
!3661 = !DILocation(line: 1242, column: 24, scope: !3644)
!3662 = !DILocation(line: 1242, column: 30, scope: !3644)
!3663 = !DILocation(line: 1242, column: 11, scope: !3644)
!3664 = !DILocation(line: 1242, column: 10, scope: !3644)
!3665 = !DILocation(line: 1243, column: 34, scope: !3644)
!3666 = !DILocation(line: 1243, column: 15, scope: !3644)
!3667 = !DILocation(line: 1243, column: 14, scope: !3644)
!3668 = !DILocation(line: 1244, column: 24, scope: !3644)
!3669 = !DILocation(line: 1244, column: 30, scope: !3644)
!3670 = !DILocation(line: 1244, column: 11, scope: !3644)
!3671 = !DILocation(line: 1244, column: 10, scope: !3644)
!3672 = !DILocation(line: 1245, column: 10, scope: !3644)
!3673 = !DILocation(line: 1246, column: 12, scope: !3644)
!3674 = !DILocation(line: 1246, column: 26, scope: !3644)
!3675 = !DILocation(line: 1246, column: 10, scope: !3644)
!3676 = !DILocation(line: 1247, column: 7, scope: !3644)
!3677 = !DILocation(line: 1235, column: 47, scope: !3639)
!3678 = !DILocation(line: 1235, column: 7, scope: !3639)
!3679 = distinct !{!3679, !3642, !3680}
!3680 = !DILocation(line: 1247, column: 7, scope: !3636)
!3681 = !DILocation(line: 1248, column: 7, scope: !3632)
!3682 = !DILocalVariable(name: "pixel", scope: !3683, file: !1, line: 1253, type: !449)
!3683 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1251, column: 5)
!3684 = !DILocation(line: 1253, column: 9, scope: !3683)
!3685 = !DILocation(line: 1255, column: 11, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !1, line: 1255, column: 11)
!3687 = !DILocation(line: 1255, column: 25, scope: !3686)
!3688 = !DILocation(line: 1255, column: 32, scope: !3686)
!3689 = !DILocation(line: 1255, column: 11, scope: !3683)
!3690 = !DILocation(line: 1257, column: 17, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !1, line: 1257, column: 11)
!3692 = distinct !DILexicalBlock(scope: !3686, file: !1, line: 1256, column: 9)
!3693 = !DILocation(line: 1257, column: 16, scope: !3691)
!3694 = !DILocation(line: 1257, column: 21, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !1, line: 1257, column: 11)
!3696 = !DILocation(line: 1257, column: 35, scope: !3695)
!3697 = !DILocation(line: 1257, column: 23, scope: !3695)
!3698 = !DILocation(line: 1257, column: 11, scope: !3691)
!3699 = !DILocation(line: 1259, column: 54, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3695, file: !1, line: 1258, column: 11)
!3701 = !DILocation(line: 1259, column: 53, scope: !3700)
!3702 = !DILocation(line: 1259, column: 41, scope: !3700)
!3703 = !DILocation(line: 1259, column: 19, scope: !3700)
!3704 = !DILocation(line: 1259, column: 18, scope: !3700)
!3705 = !DILocation(line: 1260, column: 29, scope: !3700)
!3706 = !DILocation(line: 1260, column: 43, scope: !3700)
!3707 = !DILocation(line: 1260, column: 50, scope: !3700)
!3708 = !DILocation(line: 1260, column: 56, scope: !3700)
!3709 = !DILocation(line: 1260, column: 15, scope: !3700)
!3710 = !DILocation(line: 1260, column: 14, scope: !3700)
!3711 = !DILocation(line: 1261, column: 54, scope: !3700)
!3712 = !DILocation(line: 1261, column: 53, scope: !3700)
!3713 = !DILocation(line: 1261, column: 41, scope: !3700)
!3714 = !DILocation(line: 1261, column: 19, scope: !3700)
!3715 = !DILocation(line: 1261, column: 18, scope: !3700)
!3716 = !DILocation(line: 1262, column: 29, scope: !3700)
!3717 = !DILocation(line: 1262, column: 43, scope: !3700)
!3718 = !DILocation(line: 1262, column: 50, scope: !3700)
!3719 = !DILocation(line: 1262, column: 56, scope: !3700)
!3720 = !DILocation(line: 1262, column: 15, scope: !3700)
!3721 = !DILocation(line: 1262, column: 14, scope: !3700)
!3722 = !DILocation(line: 1263, column: 54, scope: !3700)
!3723 = !DILocation(line: 1263, column: 53, scope: !3700)
!3724 = !DILocation(line: 1263, column: 41, scope: !3700)
!3725 = !DILocation(line: 1263, column: 19, scope: !3700)
!3726 = !DILocation(line: 1263, column: 18, scope: !3700)
!3727 = !DILocation(line: 1264, column: 29, scope: !3700)
!3728 = !DILocation(line: 1264, column: 43, scope: !3700)
!3729 = !DILocation(line: 1264, column: 50, scope: !3700)
!3730 = !DILocation(line: 1264, column: 56, scope: !3700)
!3731 = !DILocation(line: 1264, column: 15, scope: !3700)
!3732 = !DILocation(line: 1264, column: 14, scope: !3700)
!3733 = !DILocation(line: 1265, column: 54, scope: !3700)
!3734 = !DILocation(line: 1265, column: 53, scope: !3700)
!3735 = !DILocation(line: 1265, column: 41, scope: !3700)
!3736 = !DILocation(line: 1265, column: 19, scope: !3700)
!3737 = !DILocation(line: 1265, column: 18, scope: !3700)
!3738 = !DILocation(line: 1266, column: 29, scope: !3700)
!3739 = !DILocation(line: 1266, column: 43, scope: !3700)
!3740 = !DILocation(line: 1266, column: 50, scope: !3700)
!3741 = !DILocation(line: 1266, column: 56, scope: !3700)
!3742 = !DILocation(line: 1266, column: 15, scope: !3700)
!3743 = !DILocation(line: 1266, column: 14, scope: !3700)
!3744 = !DILocation(line: 1267, column: 14, scope: !3700)
!3745 = !DILocation(line: 1268, column: 16, scope: !3700)
!3746 = !DILocation(line: 1268, column: 30, scope: !3700)
!3747 = !DILocation(line: 1268, column: 14, scope: !3700)
!3748 = !DILocation(line: 1269, column: 11, scope: !3700)
!3749 = !DILocation(line: 1257, column: 51, scope: !3695)
!3750 = !DILocation(line: 1257, column: 11, scope: !3695)
!3751 = distinct !{!3751, !3698, !3752}
!3752 = !DILocation(line: 1269, column: 11, scope: !3691)
!3753 = !DILocation(line: 1270, column: 11, scope: !3692)
!3754 = !DILocation(line: 1272, column: 13, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3683, file: !1, line: 1272, column: 7)
!3756 = !DILocation(line: 1272, column: 12, scope: !3755)
!3757 = !DILocation(line: 1272, column: 17, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 1272, column: 7)
!3759 = !DILocation(line: 1272, column: 31, scope: !3758)
!3760 = !DILocation(line: 1272, column: 19, scope: !3758)
!3761 = !DILocation(line: 1272, column: 7, scope: !3755)
!3762 = !DILocation(line: 1274, column: 35, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !1, line: 1273, column: 7)
!3764 = !DILocation(line: 1274, column: 15, scope: !3763)
!3765 = !DILocation(line: 1274, column: 14, scope: !3763)
!3766 = !DILocation(line: 1275, column: 25, scope: !3763)
!3767 = !DILocation(line: 1275, column: 39, scope: !3763)
!3768 = !DILocation(line: 1275, column: 46, scope: !3763)
!3769 = !DILocation(line: 1275, column: 52, scope: !3763)
!3770 = !DILocation(line: 1275, column: 11, scope: !3763)
!3771 = !DILocation(line: 1275, column: 10, scope: !3763)
!3772 = !DILocation(line: 1276, column: 35, scope: !3763)
!3773 = !DILocation(line: 1276, column: 15, scope: !3763)
!3774 = !DILocation(line: 1276, column: 14, scope: !3763)
!3775 = !DILocation(line: 1277, column: 25, scope: !3763)
!3776 = !DILocation(line: 1277, column: 39, scope: !3763)
!3777 = !DILocation(line: 1277, column: 46, scope: !3763)
!3778 = !DILocation(line: 1277, column: 52, scope: !3763)
!3779 = !DILocation(line: 1277, column: 11, scope: !3763)
!3780 = !DILocation(line: 1277, column: 10, scope: !3763)
!3781 = !DILocation(line: 1278, column: 35, scope: !3763)
!3782 = !DILocation(line: 1278, column: 15, scope: !3763)
!3783 = !DILocation(line: 1278, column: 14, scope: !3763)
!3784 = !DILocation(line: 1279, column: 25, scope: !3763)
!3785 = !DILocation(line: 1279, column: 39, scope: !3763)
!3786 = !DILocation(line: 1279, column: 46, scope: !3763)
!3787 = !DILocation(line: 1279, column: 52, scope: !3763)
!3788 = !DILocation(line: 1279, column: 11, scope: !3763)
!3789 = !DILocation(line: 1279, column: 10, scope: !3763)
!3790 = !DILocation(line: 1280, column: 35, scope: !3763)
!3791 = !DILocation(line: 1280, column: 15, scope: !3763)
!3792 = !DILocation(line: 1280, column: 14, scope: !3763)
!3793 = !DILocation(line: 1281, column: 25, scope: !3763)
!3794 = !DILocation(line: 1281, column: 39, scope: !3763)
!3795 = !DILocation(line: 1281, column: 46, scope: !3763)
!3796 = !DILocation(line: 1281, column: 52, scope: !3763)
!3797 = !DILocation(line: 1281, column: 11, scope: !3763)
!3798 = !DILocation(line: 1281, column: 10, scope: !3763)
!3799 = !DILocation(line: 1282, column: 10, scope: !3763)
!3800 = !DILocation(line: 1283, column: 12, scope: !3763)
!3801 = !DILocation(line: 1283, column: 26, scope: !3763)
!3802 = !DILocation(line: 1283, column: 10, scope: !3763)
!3803 = !DILocation(line: 1284, column: 7, scope: !3763)
!3804 = !DILocation(line: 1272, column: 47, scope: !3758)
!3805 = !DILocation(line: 1272, column: 7, scope: !3758)
!3806 = distinct !{!3806, !3761, !3807}
!3807 = !DILocation(line: 1284, column: 7, scope: !3755)
!3808 = !DILocation(line: 1285, column: 7, scope: !3683)
!3809 = !DILocalVariable(name: "pixel", scope: !3810, file: !1, line: 1290, type: !5)
!3810 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1288, column: 5)
!3811 = !DILocation(line: 1290, column: 9, scope: !3810)
!3812 = !DILocation(line: 1292, column: 11, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3810, file: !1, line: 1292, column: 11)
!3814 = !DILocation(line: 1292, column: 25, scope: !3813)
!3815 = !DILocation(line: 1292, column: 32, scope: !3813)
!3816 = !DILocation(line: 1292, column: 11, scope: !3810)
!3817 = !DILocation(line: 1294, column: 17, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !1, line: 1294, column: 11)
!3819 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 1293, column: 9)
!3820 = !DILocation(line: 1294, column: 16, scope: !3818)
!3821 = !DILocation(line: 1294, column: 21, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3818, file: !1, line: 1294, column: 11)
!3823 = !DILocation(line: 1294, column: 35, scope: !3822)
!3824 = !DILocation(line: 1294, column: 23, scope: !3822)
!3825 = !DILocation(line: 1294, column: 11, scope: !3818)
!3826 = !DILocation(line: 1296, column: 29, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3822, file: !1, line: 1295, column: 11)
!3828 = !DILocation(line: 1296, column: 50, scope: !3827)
!3829 = !DILocation(line: 1296, column: 42, scope: !3827)
!3830 = !DILocation(line: 1296, column: 65, scope: !3827)
!3831 = !DILocation(line: 1296, column: 15, scope: !3827)
!3832 = !DILocation(line: 1296, column: 14, scope: !3827)
!3833 = !DILocation(line: 1297, column: 29, scope: !3827)
!3834 = !DILocation(line: 1297, column: 50, scope: !3827)
!3835 = !DILocation(line: 1297, column: 42, scope: !3827)
!3836 = !DILocation(line: 1297, column: 67, scope: !3827)
!3837 = !DILocation(line: 1297, column: 15, scope: !3827)
!3838 = !DILocation(line: 1297, column: 14, scope: !3827)
!3839 = !DILocation(line: 1298, column: 29, scope: !3827)
!3840 = !DILocation(line: 1298, column: 50, scope: !3827)
!3841 = !DILocation(line: 1298, column: 42, scope: !3827)
!3842 = !DILocation(line: 1298, column: 66, scope: !3827)
!3843 = !DILocation(line: 1298, column: 15, scope: !3827)
!3844 = !DILocation(line: 1298, column: 14, scope: !3827)
!3845 = !DILocation(line: 1299, column: 29, scope: !3827)
!3846 = !DILocation(line: 1299, column: 50, scope: !3827)
!3847 = !DILocation(line: 1299, column: 42, scope: !3827)
!3848 = !DILocation(line: 1299, column: 75, scope: !3827)
!3849 = !DILocation(line: 1299, column: 15, scope: !3827)
!3850 = !DILocation(line: 1299, column: 14, scope: !3827)
!3851 = !DILocation(line: 1300, column: 14, scope: !3827)
!3852 = !DILocation(line: 1301, column: 16, scope: !3827)
!3853 = !DILocation(line: 1301, column: 30, scope: !3827)
!3854 = !DILocation(line: 1301, column: 14, scope: !3827)
!3855 = !DILocation(line: 1302, column: 11, scope: !3827)
!3856 = !DILocation(line: 1294, column: 51, scope: !3822)
!3857 = !DILocation(line: 1294, column: 11, scope: !3822)
!3858 = distinct !{!3858, !3825, !3859}
!3859 = !DILocation(line: 1302, column: 11, scope: !3818)
!3860 = !DILocation(line: 1303, column: 11, scope: !3819)
!3861 = !DILocation(line: 1305, column: 13, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3810, file: !1, line: 1305, column: 7)
!3863 = !DILocation(line: 1305, column: 12, scope: !3862)
!3864 = !DILocation(line: 1305, column: 17, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 1305, column: 7)
!3866 = !DILocation(line: 1305, column: 31, scope: !3865)
!3867 = !DILocation(line: 1305, column: 19, scope: !3865)
!3868 = !DILocation(line: 1305, column: 7, scope: !3862)
!3869 = !DILocation(line: 1307, column: 34, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3865, file: !1, line: 1306, column: 7)
!3871 = !DILocation(line: 1307, column: 15, scope: !3870)
!3872 = !DILocation(line: 1307, column: 14, scope: !3870)
!3873 = !DILocation(line: 1308, column: 24, scope: !3870)
!3874 = !DILocation(line: 1308, column: 38, scope: !3870)
!3875 = !DILocation(line: 1308, column: 45, scope: !3870)
!3876 = !DILocation(line: 1308, column: 51, scope: !3870)
!3877 = !DILocation(line: 1308, column: 11, scope: !3870)
!3878 = !DILocation(line: 1308, column: 10, scope: !3870)
!3879 = !DILocation(line: 1309, column: 34, scope: !3870)
!3880 = !DILocation(line: 1309, column: 15, scope: !3870)
!3881 = !DILocation(line: 1309, column: 14, scope: !3870)
!3882 = !DILocation(line: 1310, column: 24, scope: !3870)
!3883 = !DILocation(line: 1310, column: 38, scope: !3870)
!3884 = !DILocation(line: 1310, column: 45, scope: !3870)
!3885 = !DILocation(line: 1310, column: 51, scope: !3870)
!3886 = !DILocation(line: 1310, column: 11, scope: !3870)
!3887 = !DILocation(line: 1310, column: 10, scope: !3870)
!3888 = !DILocation(line: 1311, column: 34, scope: !3870)
!3889 = !DILocation(line: 1311, column: 15, scope: !3870)
!3890 = !DILocation(line: 1311, column: 14, scope: !3870)
!3891 = !DILocation(line: 1312, column: 24, scope: !3870)
!3892 = !DILocation(line: 1312, column: 38, scope: !3870)
!3893 = !DILocation(line: 1312, column: 45, scope: !3870)
!3894 = !DILocation(line: 1312, column: 51, scope: !3870)
!3895 = !DILocation(line: 1312, column: 11, scope: !3870)
!3896 = !DILocation(line: 1312, column: 10, scope: !3870)
!3897 = !DILocation(line: 1313, column: 34, scope: !3870)
!3898 = !DILocation(line: 1313, column: 15, scope: !3870)
!3899 = !DILocation(line: 1313, column: 14, scope: !3870)
!3900 = !DILocation(line: 1314, column: 24, scope: !3870)
!3901 = !DILocation(line: 1314, column: 38, scope: !3870)
!3902 = !DILocation(line: 1314, column: 45, scope: !3870)
!3903 = !DILocation(line: 1314, column: 51, scope: !3870)
!3904 = !DILocation(line: 1314, column: 11, scope: !3870)
!3905 = !DILocation(line: 1314, column: 10, scope: !3870)
!3906 = !DILocation(line: 1315, column: 10, scope: !3870)
!3907 = !DILocation(line: 1316, column: 12, scope: !3870)
!3908 = !DILocation(line: 1316, column: 26, scope: !3870)
!3909 = !DILocation(line: 1316, column: 10, scope: !3870)
!3910 = !DILocation(line: 1317, column: 7, scope: !3870)
!3911 = !DILocation(line: 1305, column: 47, scope: !3865)
!3912 = !DILocation(line: 1305, column: 7, scope: !3865)
!3913 = distinct !{!3913, !3868, !3914}
!3914 = !DILocation(line: 1317, column: 7, scope: !3862)
!3915 = !DILocation(line: 1318, column: 7, scope: !3810)
!3916 = !DILocation(line: 1322, column: 11, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !1, line: 1322, column: 11)
!3918 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1321, column: 5)
!3919 = !DILocation(line: 1322, column: 25, scope: !3917)
!3920 = !DILocation(line: 1322, column: 32, scope: !3917)
!3921 = !DILocation(line: 1322, column: 11, scope: !3918)
!3922 = !DILocation(line: 1324, column: 17, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !1, line: 1324, column: 11)
!3924 = distinct !DILexicalBlock(scope: !3917, file: !1, line: 1323, column: 9)
!3925 = !DILocation(line: 1324, column: 16, scope: !3923)
!3926 = !DILocation(line: 1324, column: 21, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !1, line: 1324, column: 11)
!3928 = !DILocation(line: 1324, column: 35, scope: !3927)
!3929 = !DILocation(line: 1324, column: 23, scope: !3927)
!3930 = !DILocation(line: 1324, column: 11, scope: !3923)
!3931 = !DILocation(line: 1326, column: 30, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3927, file: !1, line: 1325, column: 11)
!3933 = !DILocation(line: 1326, column: 52, scope: !3932)
!3934 = !DILocation(line: 1326, column: 43, scope: !3932)
!3935 = !DILocation(line: 1326, column: 67, scope: !3932)
!3936 = !DILocation(line: 1326, column: 15, scope: !3932)
!3937 = !DILocation(line: 1326, column: 14, scope: !3932)
!3938 = !DILocation(line: 1327, column: 30, scope: !3932)
!3939 = !DILocation(line: 1327, column: 52, scope: !3932)
!3940 = !DILocation(line: 1327, column: 43, scope: !3932)
!3941 = !DILocation(line: 1327, column: 69, scope: !3932)
!3942 = !DILocation(line: 1327, column: 15, scope: !3932)
!3943 = !DILocation(line: 1327, column: 14, scope: !3932)
!3944 = !DILocation(line: 1328, column: 30, scope: !3932)
!3945 = !DILocation(line: 1328, column: 52, scope: !3932)
!3946 = !DILocation(line: 1328, column: 43, scope: !3932)
!3947 = !DILocation(line: 1328, column: 68, scope: !3932)
!3948 = !DILocation(line: 1328, column: 15, scope: !3932)
!3949 = !DILocation(line: 1328, column: 14, scope: !3932)
!3950 = !DILocation(line: 1329, column: 30, scope: !3932)
!3951 = !DILocation(line: 1330, column: 15, scope: !3932)
!3952 = !DILocation(line: 1329, column: 43, scope: !3932)
!3953 = !DILocation(line: 1330, column: 40, scope: !3932)
!3954 = !DILocation(line: 1329, column: 15, scope: !3932)
!3955 = !DILocation(line: 1329, column: 14, scope: !3932)
!3956 = !DILocation(line: 1331, column: 14, scope: !3932)
!3957 = !DILocation(line: 1332, column: 16, scope: !3932)
!3958 = !DILocation(line: 1332, column: 30, scope: !3932)
!3959 = !DILocation(line: 1332, column: 14, scope: !3932)
!3960 = !DILocation(line: 1333, column: 11, scope: !3932)
!3961 = !DILocation(line: 1324, column: 51, scope: !3927)
!3962 = !DILocation(line: 1324, column: 11, scope: !3927)
!3963 = distinct !{!3963, !3930, !3964}
!3964 = !DILocation(line: 1333, column: 11, scope: !3923)
!3965 = !DILocation(line: 1334, column: 11, scope: !3924)
!3966 = !DILocation(line: 1336, column: 5, scope: !3918)
!3967 = !DILocation(line: 1339, column: 29, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1338, column: 5)
!3969 = !DILocation(line: 1339, column: 43, scope: !3968)
!3970 = !DILocation(line: 1339, column: 13, scope: !3968)
!3971 = !DILocation(line: 1339, column: 12, scope: !3968)
!3972 = !DILocation(line: 1340, column: 13, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3968, file: !1, line: 1340, column: 7)
!3974 = !DILocation(line: 1340, column: 12, scope: !3973)
!3975 = !DILocation(line: 1340, column: 17, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 1340, column: 7)
!3977 = !DILocation(line: 1340, column: 31, scope: !3976)
!3978 = !DILocation(line: 1340, column: 19, scope: !3976)
!3979 = !DILocation(line: 1340, column: 7, scope: !3973)
!3980 = !DILocation(line: 1342, column: 27, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 1341, column: 7)
!3982 = !DILocation(line: 1343, column: 29, scope: !3981)
!3983 = !DILocation(line: 1343, column: 44, scope: !3981)
!3984 = !DILocation(line: 1343, column: 11, scope: !3981)
!3985 = !DILocation(line: 1343, column: 51, scope: !3981)
!3986 = !DILocation(line: 1342, column: 11, scope: !3981)
!3987 = !DILocation(line: 1342, column: 10, scope: !3981)
!3988 = !DILocation(line: 1344, column: 27, scope: !3981)
!3989 = !DILocation(line: 1345, column: 29, scope: !3981)
!3990 = !DILocation(line: 1345, column: 46, scope: !3981)
!3991 = !DILocation(line: 1345, column: 11, scope: !3981)
!3992 = !DILocation(line: 1345, column: 53, scope: !3981)
!3993 = !DILocation(line: 1344, column: 11, scope: !3981)
!3994 = !DILocation(line: 1344, column: 10, scope: !3981)
!3995 = !DILocation(line: 1346, column: 27, scope: !3981)
!3996 = !DILocation(line: 1347, column: 29, scope: !3981)
!3997 = !DILocation(line: 1347, column: 45, scope: !3981)
!3998 = !DILocation(line: 1347, column: 11, scope: !3981)
!3999 = !DILocation(line: 1347, column: 52, scope: !3981)
!4000 = !DILocation(line: 1346, column: 11, scope: !3981)
!4001 = !DILocation(line: 1346, column: 10, scope: !3981)
!4002 = !DILocation(line: 1348, column: 27, scope: !3981)
!4003 = !DILocation(line: 1349, column: 29, scope: !3981)
!4004 = !DILocation(line: 1349, column: 54, scope: !3981)
!4005 = !DILocation(line: 1349, column: 11, scope: !3981)
!4006 = !DILocation(line: 1349, column: 61, scope: !3981)
!4007 = !DILocation(line: 1348, column: 11, scope: !3981)
!4008 = !DILocation(line: 1348, column: 10, scope: !3981)
!4009 = !DILocation(line: 1350, column: 10, scope: !3981)
!4010 = !DILocation(line: 1351, column: 12, scope: !3981)
!4011 = !DILocation(line: 1351, column: 26, scope: !3981)
!4012 = !DILocation(line: 1351, column: 10, scope: !3981)
!4013 = !DILocation(line: 1352, column: 7, scope: !3981)
!4014 = !DILocation(line: 1340, column: 47, scope: !3976)
!4015 = !DILocation(line: 1340, column: 7, scope: !3976)
!4016 = distinct !{!4016, !3979, !4017}
!4017 = !DILocation(line: 1352, column: 7, scope: !3973)
!4018 = !DILocation(line: 1353, column: 7, scope: !3968)
!4019 = !DILocation(line: 1356, column: 1, scope: !3598)
!4020 = distinct !DISubprogram(name: "ExportCMYKAQuantum", scope: !1, file: !1, line: 1358, type: !2863, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!4021 = !DILocalVariable(name: "image", arg: 1, scope: !4020, file: !1, line: 1358, type: !519)
!4022 = !DILocation(line: 1358, column: 45, scope: !4020)
!4023 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !4020, file: !1, line: 1358, type: !459)
!4024 = !DILocation(line: 1358, column: 64, scope: !4020)
!4025 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !4020, file: !1, line: 1359, type: !637)
!4026 = !DILocation(line: 1359, column: 24, scope: !4020)
!4027 = !DILocalVariable(name: "p", arg: 4, scope: !4020, file: !1, line: 1359, type: !740)
!4028 = !DILocation(line: 1359, column: 66, scope: !4020)
!4029 = !DILocalVariable(name: "indexes", arg: 5, scope: !4020, file: !1, line: 1360, type: !737)
!4030 = !DILocation(line: 1360, column: 31, scope: !4020)
!4031 = !DILocalVariable(name: "q", arg: 6, scope: !4020, file: !1, line: 1360, type: !717)
!4032 = !DILocation(line: 1360, column: 63, scope: !4020)
!4033 = !DILocalVariable(name: "exception", arg: 7, scope: !4020, file: !1, line: 1361, type: !718)
!4034 = !DILocation(line: 1361, column: 18, scope: !4020)
!4035 = !DILocalVariable(name: "range", scope: !4020, file: !1, line: 1364, type: !508)
!4036 = !DILocation(line: 1364, column: 5, scope: !4020)
!4037 = !DILocalVariable(name: "x", scope: !4020, file: !1, line: 1367, type: !453)
!4038 = !DILocation(line: 1367, column: 5, scope: !4020)
!4039 = !DILocation(line: 1369, column: 7, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4020, file: !1, line: 1369, column: 7)
!4041 = !DILocation(line: 1369, column: 14, scope: !4040)
!4042 = !DILocation(line: 1369, column: 25, scope: !4040)
!4043 = !DILocation(line: 1369, column: 7, scope: !4020)
!4044 = !DILocation(line: 1371, column: 35, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4040, file: !1, line: 1370, column: 5)
!4046 = !DILocation(line: 1372, column: 46, scope: !4045)
!4047 = !DILocation(line: 1372, column: 53, scope: !4045)
!4048 = !DILocation(line: 1371, column: 14, scope: !4045)
!4049 = !DILocation(line: 1373, column: 7, scope: !4045)
!4050 = !DILocation(line: 1375, column: 11, scope: !4020)
!4051 = !DILocation(line: 1375, column: 25, scope: !4020)
!4052 = !DILocation(line: 1375, column: 3, scope: !4020)
!4053 = !DILocalVariable(name: "pixel", scope: !4054, file: !1, line: 1380, type: !437)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1378, column: 5)
!4055 = distinct !DILexicalBlock(scope: !4020, file: !1, line: 1376, column: 3)
!4056 = !DILocation(line: 1380, column: 9, scope: !4054)
!4057 = !DILocation(line: 1382, column: 13, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !1, line: 1382, column: 7)
!4059 = !DILocation(line: 1382, column: 12, scope: !4058)
!4060 = !DILocation(line: 1382, column: 17, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1382, column: 7)
!4062 = !DILocation(line: 1382, column: 31, scope: !4061)
!4063 = !DILocation(line: 1382, column: 19, scope: !4061)
!4064 = !DILocation(line: 1382, column: 7, scope: !4058)
!4065 = !DILocation(line: 1384, column: 34, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4061, file: !1, line: 1383, column: 7)
!4067 = !DILocation(line: 1384, column: 15, scope: !4066)
!4068 = !DILocation(line: 1384, column: 14, scope: !4066)
!4069 = !DILocation(line: 1385, column: 24, scope: !4066)
!4070 = !DILocation(line: 1385, column: 30, scope: !4066)
!4071 = !DILocation(line: 1385, column: 11, scope: !4066)
!4072 = !DILocation(line: 1385, column: 10, scope: !4066)
!4073 = !DILocation(line: 1386, column: 34, scope: !4066)
!4074 = !DILocation(line: 1386, column: 15, scope: !4066)
!4075 = !DILocation(line: 1386, column: 14, scope: !4066)
!4076 = !DILocation(line: 1387, column: 24, scope: !4066)
!4077 = !DILocation(line: 1387, column: 30, scope: !4066)
!4078 = !DILocation(line: 1387, column: 11, scope: !4066)
!4079 = !DILocation(line: 1387, column: 10, scope: !4066)
!4080 = !DILocation(line: 1388, column: 34, scope: !4066)
!4081 = !DILocation(line: 1388, column: 15, scope: !4066)
!4082 = !DILocation(line: 1388, column: 14, scope: !4066)
!4083 = !DILocation(line: 1389, column: 24, scope: !4066)
!4084 = !DILocation(line: 1389, column: 30, scope: !4066)
!4085 = !DILocation(line: 1389, column: 11, scope: !4066)
!4086 = !DILocation(line: 1389, column: 10, scope: !4066)
!4087 = !DILocation(line: 1390, column: 34, scope: !4066)
!4088 = !DILocation(line: 1390, column: 15, scope: !4066)
!4089 = !DILocation(line: 1390, column: 14, scope: !4066)
!4090 = !DILocation(line: 1391, column: 24, scope: !4066)
!4091 = !DILocation(line: 1391, column: 30, scope: !4066)
!4092 = !DILocation(line: 1391, column: 11, scope: !4066)
!4093 = !DILocation(line: 1391, column: 10, scope: !4066)
!4094 = !DILocation(line: 1392, column: 58, scope: !4066)
!4095 = !DILocation(line: 1392, column: 57, scope: !4066)
!4096 = !DILocation(line: 1392, column: 34, scope: !4066)
!4097 = !DILocation(line: 1392, column: 15, scope: !4066)
!4098 = !DILocation(line: 1392, column: 14, scope: !4066)
!4099 = !DILocation(line: 1393, column: 24, scope: !4066)
!4100 = !DILocation(line: 1393, column: 30, scope: !4066)
!4101 = !DILocation(line: 1393, column: 11, scope: !4066)
!4102 = !DILocation(line: 1393, column: 10, scope: !4066)
!4103 = !DILocation(line: 1394, column: 10, scope: !4066)
!4104 = !DILocation(line: 1395, column: 12, scope: !4066)
!4105 = !DILocation(line: 1395, column: 26, scope: !4066)
!4106 = !DILocation(line: 1395, column: 10, scope: !4066)
!4107 = !DILocation(line: 1396, column: 7, scope: !4066)
!4108 = !DILocation(line: 1382, column: 47, scope: !4061)
!4109 = !DILocation(line: 1382, column: 7, scope: !4061)
!4110 = distinct !{!4110, !4064, !4111}
!4111 = !DILocation(line: 1396, column: 7, scope: !4058)
!4112 = !DILocation(line: 1397, column: 7, scope: !4054)
!4113 = !DILocalVariable(name: "pixel", scope: !4114, file: !1, line: 1402, type: !449)
!4114 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1400, column: 5)
!4115 = !DILocation(line: 1402, column: 9, scope: !4114)
!4116 = !DILocation(line: 1404, column: 11, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !1, line: 1404, column: 11)
!4118 = !DILocation(line: 1404, column: 25, scope: !4117)
!4119 = !DILocation(line: 1404, column: 32, scope: !4117)
!4120 = !DILocation(line: 1404, column: 11, scope: !4114)
!4121 = !DILocation(line: 1406, column: 17, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !1, line: 1406, column: 11)
!4123 = distinct !DILexicalBlock(scope: !4117, file: !1, line: 1405, column: 9)
!4124 = !DILocation(line: 1406, column: 16, scope: !4122)
!4125 = !DILocation(line: 1406, column: 21, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4122, file: !1, line: 1406, column: 11)
!4127 = !DILocation(line: 1406, column: 35, scope: !4126)
!4128 = !DILocation(line: 1406, column: 23, scope: !4126)
!4129 = !DILocation(line: 1406, column: 11, scope: !4122)
!4130 = !DILocation(line: 1408, column: 54, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !1, line: 1407, column: 11)
!4132 = !DILocation(line: 1408, column: 53, scope: !4131)
!4133 = !DILocation(line: 1408, column: 41, scope: !4131)
!4134 = !DILocation(line: 1408, column: 19, scope: !4131)
!4135 = !DILocation(line: 1408, column: 18, scope: !4131)
!4136 = !DILocation(line: 1409, column: 29, scope: !4131)
!4137 = !DILocation(line: 1409, column: 43, scope: !4131)
!4138 = !DILocation(line: 1409, column: 50, scope: !4131)
!4139 = !DILocation(line: 1409, column: 56, scope: !4131)
!4140 = !DILocation(line: 1409, column: 15, scope: !4131)
!4141 = !DILocation(line: 1409, column: 14, scope: !4131)
!4142 = !DILocation(line: 1410, column: 54, scope: !4131)
!4143 = !DILocation(line: 1410, column: 53, scope: !4131)
!4144 = !DILocation(line: 1410, column: 41, scope: !4131)
!4145 = !DILocation(line: 1410, column: 19, scope: !4131)
!4146 = !DILocation(line: 1410, column: 18, scope: !4131)
!4147 = !DILocation(line: 1411, column: 29, scope: !4131)
!4148 = !DILocation(line: 1411, column: 43, scope: !4131)
!4149 = !DILocation(line: 1411, column: 50, scope: !4131)
!4150 = !DILocation(line: 1411, column: 56, scope: !4131)
!4151 = !DILocation(line: 1411, column: 15, scope: !4131)
!4152 = !DILocation(line: 1411, column: 14, scope: !4131)
!4153 = !DILocation(line: 1412, column: 54, scope: !4131)
!4154 = !DILocation(line: 1412, column: 53, scope: !4131)
!4155 = !DILocation(line: 1412, column: 41, scope: !4131)
!4156 = !DILocation(line: 1412, column: 19, scope: !4131)
!4157 = !DILocation(line: 1412, column: 18, scope: !4131)
!4158 = !DILocation(line: 1413, column: 29, scope: !4131)
!4159 = !DILocation(line: 1413, column: 43, scope: !4131)
!4160 = !DILocation(line: 1413, column: 50, scope: !4131)
!4161 = !DILocation(line: 1413, column: 56, scope: !4131)
!4162 = !DILocation(line: 1413, column: 15, scope: !4131)
!4163 = !DILocation(line: 1413, column: 14, scope: !4131)
!4164 = !DILocation(line: 1414, column: 54, scope: !4131)
!4165 = !DILocation(line: 1414, column: 53, scope: !4131)
!4166 = !DILocation(line: 1414, column: 41, scope: !4131)
!4167 = !DILocation(line: 1414, column: 19, scope: !4131)
!4168 = !DILocation(line: 1414, column: 18, scope: !4131)
!4169 = !DILocation(line: 1415, column: 29, scope: !4131)
!4170 = !DILocation(line: 1415, column: 43, scope: !4131)
!4171 = !DILocation(line: 1415, column: 50, scope: !4131)
!4172 = !DILocation(line: 1415, column: 56, scope: !4131)
!4173 = !DILocation(line: 1415, column: 15, scope: !4131)
!4174 = !DILocation(line: 1415, column: 14, scope: !4131)
!4175 = !DILocation(line: 1416, column: 54, scope: !4131)
!4176 = !DILocation(line: 1416, column: 53, scope: !4131)
!4177 = !DILocation(line: 1416, column: 41, scope: !4131)
!4178 = !DILocation(line: 1416, column: 19, scope: !4131)
!4179 = !DILocation(line: 1416, column: 18, scope: !4131)
!4180 = !DILocation(line: 1417, column: 29, scope: !4131)
!4181 = !DILocation(line: 1417, column: 43, scope: !4131)
!4182 = !DILocation(line: 1417, column: 50, scope: !4131)
!4183 = !DILocation(line: 1417, column: 56, scope: !4131)
!4184 = !DILocation(line: 1417, column: 15, scope: !4131)
!4185 = !DILocation(line: 1417, column: 14, scope: !4131)
!4186 = !DILocation(line: 1418, column: 14, scope: !4131)
!4187 = !DILocation(line: 1419, column: 16, scope: !4131)
!4188 = !DILocation(line: 1419, column: 30, scope: !4131)
!4189 = !DILocation(line: 1419, column: 14, scope: !4131)
!4190 = !DILocation(line: 1420, column: 11, scope: !4131)
!4191 = !DILocation(line: 1406, column: 51, scope: !4126)
!4192 = !DILocation(line: 1406, column: 11, scope: !4126)
!4193 = distinct !{!4193, !4129, !4194}
!4194 = !DILocation(line: 1420, column: 11, scope: !4122)
!4195 = !DILocation(line: 1421, column: 11, scope: !4123)
!4196 = !DILocation(line: 1423, column: 13, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4114, file: !1, line: 1423, column: 7)
!4198 = !DILocation(line: 1423, column: 12, scope: !4197)
!4199 = !DILocation(line: 1423, column: 17, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4197, file: !1, line: 1423, column: 7)
!4201 = !DILocation(line: 1423, column: 31, scope: !4200)
!4202 = !DILocation(line: 1423, column: 19, scope: !4200)
!4203 = !DILocation(line: 1423, column: 7, scope: !4197)
!4204 = !DILocation(line: 1425, column: 35, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !1, line: 1424, column: 7)
!4206 = !DILocation(line: 1425, column: 15, scope: !4205)
!4207 = !DILocation(line: 1425, column: 14, scope: !4205)
!4208 = !DILocation(line: 1426, column: 25, scope: !4205)
!4209 = !DILocation(line: 1426, column: 39, scope: !4205)
!4210 = !DILocation(line: 1426, column: 46, scope: !4205)
!4211 = !DILocation(line: 1426, column: 52, scope: !4205)
!4212 = !DILocation(line: 1426, column: 11, scope: !4205)
!4213 = !DILocation(line: 1426, column: 10, scope: !4205)
!4214 = !DILocation(line: 1427, column: 35, scope: !4205)
!4215 = !DILocation(line: 1427, column: 15, scope: !4205)
!4216 = !DILocation(line: 1427, column: 14, scope: !4205)
!4217 = !DILocation(line: 1428, column: 25, scope: !4205)
!4218 = !DILocation(line: 1428, column: 39, scope: !4205)
!4219 = !DILocation(line: 1428, column: 46, scope: !4205)
!4220 = !DILocation(line: 1428, column: 52, scope: !4205)
!4221 = !DILocation(line: 1428, column: 11, scope: !4205)
!4222 = !DILocation(line: 1428, column: 10, scope: !4205)
!4223 = !DILocation(line: 1429, column: 35, scope: !4205)
!4224 = !DILocation(line: 1429, column: 15, scope: !4205)
!4225 = !DILocation(line: 1429, column: 14, scope: !4205)
!4226 = !DILocation(line: 1430, column: 25, scope: !4205)
!4227 = !DILocation(line: 1430, column: 39, scope: !4205)
!4228 = !DILocation(line: 1430, column: 46, scope: !4205)
!4229 = !DILocation(line: 1430, column: 52, scope: !4205)
!4230 = !DILocation(line: 1430, column: 11, scope: !4205)
!4231 = !DILocation(line: 1430, column: 10, scope: !4205)
!4232 = !DILocation(line: 1431, column: 35, scope: !4205)
!4233 = !DILocation(line: 1431, column: 15, scope: !4205)
!4234 = !DILocation(line: 1431, column: 14, scope: !4205)
!4235 = !DILocation(line: 1432, column: 25, scope: !4205)
!4236 = !DILocation(line: 1432, column: 39, scope: !4205)
!4237 = !DILocation(line: 1432, column: 46, scope: !4205)
!4238 = !DILocation(line: 1432, column: 52, scope: !4205)
!4239 = !DILocation(line: 1432, column: 11, scope: !4205)
!4240 = !DILocation(line: 1432, column: 10, scope: !4205)
!4241 = !DILocation(line: 1433, column: 59, scope: !4205)
!4242 = !DILocation(line: 1433, column: 58, scope: !4205)
!4243 = !DILocation(line: 1433, column: 35, scope: !4205)
!4244 = !DILocation(line: 1433, column: 15, scope: !4205)
!4245 = !DILocation(line: 1433, column: 14, scope: !4205)
!4246 = !DILocation(line: 1434, column: 25, scope: !4205)
!4247 = !DILocation(line: 1434, column: 39, scope: !4205)
!4248 = !DILocation(line: 1434, column: 46, scope: !4205)
!4249 = !DILocation(line: 1434, column: 52, scope: !4205)
!4250 = !DILocation(line: 1434, column: 11, scope: !4205)
!4251 = !DILocation(line: 1434, column: 10, scope: !4205)
!4252 = !DILocation(line: 1435, column: 10, scope: !4205)
!4253 = !DILocation(line: 1436, column: 12, scope: !4205)
!4254 = !DILocation(line: 1436, column: 26, scope: !4205)
!4255 = !DILocation(line: 1436, column: 10, scope: !4205)
!4256 = !DILocation(line: 1437, column: 7, scope: !4205)
!4257 = !DILocation(line: 1423, column: 47, scope: !4200)
!4258 = !DILocation(line: 1423, column: 7, scope: !4200)
!4259 = distinct !{!4259, !4203, !4260}
!4260 = !DILocation(line: 1437, column: 7, scope: !4197)
!4261 = !DILocation(line: 1438, column: 7, scope: !4114)
!4262 = !DILocalVariable(name: "pixel", scope: !4263, file: !1, line: 1443, type: !5)
!4263 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1441, column: 5)
!4264 = !DILocation(line: 1443, column: 9, scope: !4263)
!4265 = !DILocation(line: 1445, column: 11, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 1445, column: 11)
!4267 = !DILocation(line: 1445, column: 25, scope: !4266)
!4268 = !DILocation(line: 1445, column: 32, scope: !4266)
!4269 = !DILocation(line: 1445, column: 11, scope: !4263)
!4270 = !DILocation(line: 1447, column: 17, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !1, line: 1447, column: 11)
!4272 = distinct !DILexicalBlock(scope: !4266, file: !1, line: 1446, column: 9)
!4273 = !DILocation(line: 1447, column: 16, scope: !4271)
!4274 = !DILocation(line: 1447, column: 21, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !1, line: 1447, column: 11)
!4276 = !DILocation(line: 1447, column: 35, scope: !4275)
!4277 = !DILocation(line: 1447, column: 23, scope: !4275)
!4278 = !DILocation(line: 1447, column: 11, scope: !4271)
!4279 = !DILocalVariable(name: "pixel", scope: !4280, file: !1, line: 1450, type: !502)
!4280 = distinct !DILexicalBlock(scope: !4275, file: !1, line: 1448, column: 11)
!4281 = !DILocation(line: 1450, column: 15, scope: !4280)
!4282 = !DILocation(line: 1452, column: 29, scope: !4280)
!4283 = !DILocation(line: 1452, column: 50, scope: !4280)
!4284 = !DILocation(line: 1452, column: 42, scope: !4280)
!4285 = !DILocation(line: 1452, column: 65, scope: !4280)
!4286 = !DILocation(line: 1452, column: 15, scope: !4280)
!4287 = !DILocation(line: 1452, column: 14, scope: !4280)
!4288 = !DILocation(line: 1453, column: 29, scope: !4280)
!4289 = !DILocation(line: 1453, column: 50, scope: !4280)
!4290 = !DILocation(line: 1453, column: 42, scope: !4280)
!4291 = !DILocation(line: 1453, column: 67, scope: !4280)
!4292 = !DILocation(line: 1453, column: 15, scope: !4280)
!4293 = !DILocation(line: 1453, column: 14, scope: !4280)
!4294 = !DILocation(line: 1454, column: 29, scope: !4280)
!4295 = !DILocation(line: 1454, column: 50, scope: !4280)
!4296 = !DILocation(line: 1454, column: 42, scope: !4280)
!4297 = !DILocation(line: 1454, column: 66, scope: !4280)
!4298 = !DILocation(line: 1454, column: 15, scope: !4280)
!4299 = !DILocation(line: 1454, column: 14, scope: !4280)
!4300 = !DILocation(line: 1455, column: 29, scope: !4280)
!4301 = !DILocation(line: 1455, column: 50, scope: !4280)
!4302 = !DILocation(line: 1455, column: 42, scope: !4280)
!4303 = !DILocation(line: 1455, column: 75, scope: !4280)
!4304 = !DILocation(line: 1455, column: 15, scope: !4280)
!4305 = !DILocation(line: 1455, column: 14, scope: !4280)
!4306 = !DILocation(line: 1456, column: 28, scope: !4280)
!4307 = !DILocation(line: 1456, column: 19, scope: !4280)
!4308 = !DILocation(line: 1456, column: 18, scope: !4280)
!4309 = !DILocation(line: 1457, column: 29, scope: !4280)
!4310 = !DILocation(line: 1457, column: 42, scope: !4280)
!4311 = !DILocation(line: 1457, column: 48, scope: !4280)
!4312 = !DILocation(line: 1457, column: 15, scope: !4280)
!4313 = !DILocation(line: 1457, column: 14, scope: !4280)
!4314 = !DILocation(line: 1458, column: 14, scope: !4280)
!4315 = !DILocation(line: 1459, column: 16, scope: !4280)
!4316 = !DILocation(line: 1459, column: 30, scope: !4280)
!4317 = !DILocation(line: 1459, column: 14, scope: !4280)
!4318 = !DILocation(line: 1460, column: 11, scope: !4280)
!4319 = !DILocation(line: 1447, column: 51, scope: !4275)
!4320 = !DILocation(line: 1447, column: 11, scope: !4275)
!4321 = distinct !{!4321, !4278, !4322}
!4322 = !DILocation(line: 1460, column: 11, scope: !4271)
!4323 = !DILocation(line: 1461, column: 11, scope: !4272)
!4324 = !DILocation(line: 1463, column: 13, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 1463, column: 7)
!4326 = !DILocation(line: 1463, column: 12, scope: !4325)
!4327 = !DILocation(line: 1463, column: 17, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4325, file: !1, line: 1463, column: 7)
!4329 = !DILocation(line: 1463, column: 31, scope: !4328)
!4330 = !DILocation(line: 1463, column: 19, scope: !4328)
!4331 = !DILocation(line: 1463, column: 7, scope: !4325)
!4332 = !DILocation(line: 1465, column: 34, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !1, line: 1464, column: 7)
!4334 = !DILocation(line: 1465, column: 15, scope: !4333)
!4335 = !DILocation(line: 1465, column: 14, scope: !4333)
!4336 = !DILocation(line: 1466, column: 24, scope: !4333)
!4337 = !DILocation(line: 1466, column: 38, scope: !4333)
!4338 = !DILocation(line: 1466, column: 45, scope: !4333)
!4339 = !DILocation(line: 1466, column: 51, scope: !4333)
!4340 = !DILocation(line: 1466, column: 11, scope: !4333)
!4341 = !DILocation(line: 1466, column: 10, scope: !4333)
!4342 = !DILocation(line: 1467, column: 34, scope: !4333)
!4343 = !DILocation(line: 1467, column: 15, scope: !4333)
!4344 = !DILocation(line: 1467, column: 14, scope: !4333)
!4345 = !DILocation(line: 1468, column: 24, scope: !4333)
!4346 = !DILocation(line: 1468, column: 38, scope: !4333)
!4347 = !DILocation(line: 1468, column: 45, scope: !4333)
!4348 = !DILocation(line: 1468, column: 51, scope: !4333)
!4349 = !DILocation(line: 1468, column: 11, scope: !4333)
!4350 = !DILocation(line: 1468, column: 10, scope: !4333)
!4351 = !DILocation(line: 1469, column: 34, scope: !4333)
!4352 = !DILocation(line: 1469, column: 15, scope: !4333)
!4353 = !DILocation(line: 1469, column: 14, scope: !4333)
!4354 = !DILocation(line: 1470, column: 24, scope: !4333)
!4355 = !DILocation(line: 1470, column: 38, scope: !4333)
!4356 = !DILocation(line: 1470, column: 45, scope: !4333)
!4357 = !DILocation(line: 1470, column: 51, scope: !4333)
!4358 = !DILocation(line: 1470, column: 11, scope: !4333)
!4359 = !DILocation(line: 1470, column: 10, scope: !4333)
!4360 = !DILocation(line: 1471, column: 34, scope: !4333)
!4361 = !DILocation(line: 1471, column: 15, scope: !4333)
!4362 = !DILocation(line: 1471, column: 14, scope: !4333)
!4363 = !DILocation(line: 1472, column: 24, scope: !4333)
!4364 = !DILocation(line: 1472, column: 38, scope: !4333)
!4365 = !DILocation(line: 1472, column: 45, scope: !4333)
!4366 = !DILocation(line: 1472, column: 51, scope: !4333)
!4367 = !DILocation(line: 1472, column: 11, scope: !4333)
!4368 = !DILocation(line: 1472, column: 10, scope: !4333)
!4369 = !DILocation(line: 1473, column: 58, scope: !4333)
!4370 = !DILocation(line: 1473, column: 57, scope: !4333)
!4371 = !DILocation(line: 1473, column: 34, scope: !4333)
!4372 = !DILocation(line: 1473, column: 15, scope: !4333)
!4373 = !DILocation(line: 1473, column: 14, scope: !4333)
!4374 = !DILocation(line: 1474, column: 24, scope: !4333)
!4375 = !DILocation(line: 1474, column: 38, scope: !4333)
!4376 = !DILocation(line: 1474, column: 45, scope: !4333)
!4377 = !DILocation(line: 1474, column: 51, scope: !4333)
!4378 = !DILocation(line: 1474, column: 11, scope: !4333)
!4379 = !DILocation(line: 1474, column: 10, scope: !4333)
!4380 = !DILocation(line: 1475, column: 10, scope: !4333)
!4381 = !DILocation(line: 1476, column: 12, scope: !4333)
!4382 = !DILocation(line: 1476, column: 26, scope: !4333)
!4383 = !DILocation(line: 1476, column: 10, scope: !4333)
!4384 = !DILocation(line: 1477, column: 7, scope: !4333)
!4385 = !DILocation(line: 1463, column: 47, scope: !4328)
!4386 = !DILocation(line: 1463, column: 7, scope: !4328)
!4387 = distinct !{!4387, !4331, !4388}
!4388 = !DILocation(line: 1477, column: 7, scope: !4325)
!4389 = !DILocation(line: 1478, column: 7, scope: !4263)
!4390 = !DILocation(line: 1482, column: 11, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 1482, column: 11)
!4392 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1481, column: 5)
!4393 = !DILocation(line: 1482, column: 25, scope: !4391)
!4394 = !DILocation(line: 1482, column: 32, scope: !4391)
!4395 = !DILocation(line: 1482, column: 11, scope: !4392)
!4396 = !DILocalVariable(name: "pixel", scope: !4397, file: !1, line: 1485, type: !458)
!4397 = distinct !DILexicalBlock(scope: !4391, file: !1, line: 1483, column: 9)
!4398 = !DILocation(line: 1485, column: 13, scope: !4397)
!4399 = !DILocation(line: 1487, column: 17, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4397, file: !1, line: 1487, column: 11)
!4401 = !DILocation(line: 1487, column: 16, scope: !4400)
!4402 = !DILocation(line: 1487, column: 21, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 1487, column: 11)
!4404 = !DILocation(line: 1487, column: 35, scope: !4403)
!4405 = !DILocation(line: 1487, column: 23, scope: !4403)
!4406 = !DILocation(line: 1487, column: 11, scope: !4400)
!4407 = !DILocation(line: 1489, column: 30, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4403, file: !1, line: 1488, column: 11)
!4409 = !DILocation(line: 1489, column: 52, scope: !4408)
!4410 = !DILocation(line: 1489, column: 43, scope: !4408)
!4411 = !DILocation(line: 1489, column: 67, scope: !4408)
!4412 = !DILocation(line: 1489, column: 15, scope: !4408)
!4413 = !DILocation(line: 1489, column: 14, scope: !4408)
!4414 = !DILocation(line: 1490, column: 30, scope: !4408)
!4415 = !DILocation(line: 1490, column: 52, scope: !4408)
!4416 = !DILocation(line: 1490, column: 43, scope: !4408)
!4417 = !DILocation(line: 1490, column: 69, scope: !4408)
!4418 = !DILocation(line: 1490, column: 15, scope: !4408)
!4419 = !DILocation(line: 1490, column: 14, scope: !4408)
!4420 = !DILocation(line: 1491, column: 30, scope: !4408)
!4421 = !DILocation(line: 1491, column: 52, scope: !4408)
!4422 = !DILocation(line: 1491, column: 43, scope: !4408)
!4423 = !DILocation(line: 1491, column: 68, scope: !4408)
!4424 = !DILocation(line: 1491, column: 15, scope: !4408)
!4425 = !DILocation(line: 1491, column: 14, scope: !4408)
!4426 = !DILocation(line: 1492, column: 30, scope: !4408)
!4427 = !DILocation(line: 1493, column: 15, scope: !4408)
!4428 = !DILocation(line: 1492, column: 43, scope: !4408)
!4429 = !DILocation(line: 1493, column: 40, scope: !4408)
!4430 = !DILocation(line: 1492, column: 15, scope: !4408)
!4431 = !DILocation(line: 1492, column: 14, scope: !4408)
!4432 = !DILocation(line: 1494, column: 29, scope: !4408)
!4433 = !DILocation(line: 1494, column: 19, scope: !4408)
!4434 = !DILocation(line: 1494, column: 18, scope: !4408)
!4435 = !DILocation(line: 1495, column: 30, scope: !4408)
!4436 = !DILocation(line: 1495, column: 43, scope: !4408)
!4437 = !DILocation(line: 1495, column: 49, scope: !4408)
!4438 = !DILocation(line: 1495, column: 15, scope: !4408)
!4439 = !DILocation(line: 1495, column: 14, scope: !4408)
!4440 = !DILocation(line: 1496, column: 14, scope: !4408)
!4441 = !DILocation(line: 1497, column: 16, scope: !4408)
!4442 = !DILocation(line: 1497, column: 30, scope: !4408)
!4443 = !DILocation(line: 1497, column: 14, scope: !4408)
!4444 = !DILocation(line: 1498, column: 11, scope: !4408)
!4445 = !DILocation(line: 1487, column: 51, scope: !4403)
!4446 = !DILocation(line: 1487, column: 11, scope: !4403)
!4447 = distinct !{!4447, !4406, !4448}
!4448 = !DILocation(line: 1498, column: 11, scope: !4400)
!4449 = !DILocation(line: 1499, column: 11, scope: !4397)
!4450 = !DILocation(line: 1501, column: 5, scope: !4392)
!4451 = !DILocation(line: 1504, column: 29, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4055, file: !1, line: 1503, column: 5)
!4453 = !DILocation(line: 1504, column: 43, scope: !4452)
!4454 = !DILocation(line: 1504, column: 13, scope: !4452)
!4455 = !DILocation(line: 1504, column: 12, scope: !4452)
!4456 = !DILocation(line: 1505, column: 13, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !1, line: 1505, column: 7)
!4458 = !DILocation(line: 1505, column: 12, scope: !4457)
!4459 = !DILocation(line: 1505, column: 17, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !1, line: 1505, column: 7)
!4461 = !DILocation(line: 1505, column: 31, scope: !4460)
!4462 = !DILocation(line: 1505, column: 19, scope: !4460)
!4463 = !DILocation(line: 1505, column: 7, scope: !4457)
!4464 = !DILocation(line: 1507, column: 27, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !1, line: 1506, column: 7)
!4466 = !DILocation(line: 1508, column: 29, scope: !4465)
!4467 = !DILocation(line: 1508, column: 44, scope: !4465)
!4468 = !DILocation(line: 1508, column: 11, scope: !4465)
!4469 = !DILocation(line: 1508, column: 51, scope: !4465)
!4470 = !DILocation(line: 1507, column: 11, scope: !4465)
!4471 = !DILocation(line: 1507, column: 10, scope: !4465)
!4472 = !DILocation(line: 1509, column: 27, scope: !4465)
!4473 = !DILocation(line: 1510, column: 29, scope: !4465)
!4474 = !DILocation(line: 1510, column: 46, scope: !4465)
!4475 = !DILocation(line: 1510, column: 11, scope: !4465)
!4476 = !DILocation(line: 1510, column: 53, scope: !4465)
!4477 = !DILocation(line: 1509, column: 11, scope: !4465)
!4478 = !DILocation(line: 1509, column: 10, scope: !4465)
!4479 = !DILocation(line: 1511, column: 27, scope: !4465)
!4480 = !DILocation(line: 1512, column: 29, scope: !4465)
!4481 = !DILocation(line: 1512, column: 45, scope: !4465)
!4482 = !DILocation(line: 1512, column: 11, scope: !4465)
!4483 = !DILocation(line: 1512, column: 52, scope: !4465)
!4484 = !DILocation(line: 1511, column: 11, scope: !4465)
!4485 = !DILocation(line: 1511, column: 10, scope: !4465)
!4486 = !DILocation(line: 1513, column: 27, scope: !4465)
!4487 = !DILocation(line: 1514, column: 29, scope: !4465)
!4488 = !DILocation(line: 1514, column: 54, scope: !4465)
!4489 = !DILocation(line: 1514, column: 11, scope: !4465)
!4490 = !DILocation(line: 1514, column: 61, scope: !4465)
!4491 = !DILocation(line: 1513, column: 11, scope: !4465)
!4492 = !DILocation(line: 1513, column: 10, scope: !4465)
!4493 = !DILocation(line: 1515, column: 27, scope: !4465)
!4494 = !DILocation(line: 1516, column: 29, scope: !4465)
!4495 = !DILocation(line: 1516, column: 48, scope: !4465)
!4496 = !DILocation(line: 1516, column: 11, scope: !4465)
!4497 = !DILocation(line: 1516, column: 55, scope: !4465)
!4498 = !DILocation(line: 1515, column: 11, scope: !4465)
!4499 = !DILocation(line: 1515, column: 10, scope: !4465)
!4500 = !DILocation(line: 1517, column: 10, scope: !4465)
!4501 = !DILocation(line: 1518, column: 12, scope: !4465)
!4502 = !DILocation(line: 1518, column: 26, scope: !4465)
!4503 = !DILocation(line: 1518, column: 10, scope: !4465)
!4504 = !DILocation(line: 1519, column: 7, scope: !4465)
!4505 = !DILocation(line: 1505, column: 47, scope: !4460)
!4506 = !DILocation(line: 1505, column: 7, scope: !4460)
!4507 = distinct !{!4507, !4463, !4508}
!4508 = !DILocation(line: 1519, column: 7, scope: !4457)
!4509 = !DILocation(line: 1520, column: 7, scope: !4452)
!4510 = !DILocation(line: 1523, column: 1, scope: !4020)
!4511 = distinct !DISubprogram(name: "ExportGrayQuantum", scope: !1, file: !1, line: 1525, type: !4512, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !519, !459, !637, !740, !717}
!4514 = !DILocalVariable(name: "image", arg: 1, scope: !4511, file: !1, line: 1525, type: !519)
!4515 = !DILocation(line: 1525, column: 44, scope: !4511)
!4516 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !4511, file: !1, line: 1525, type: !459)
!4517 = !DILocation(line: 1525, column: 63, scope: !4511)
!4518 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !4511, file: !1, line: 1526, type: !637)
!4519 = !DILocation(line: 1526, column: 24, scope: !4511)
!4520 = !DILocalVariable(name: "p", arg: 4, scope: !4511, file: !1, line: 1526, type: !740)
!4521 = !DILocation(line: 1526, column: 66, scope: !4511)
!4522 = !DILocalVariable(name: "q", arg: 5, scope: !4511, file: !1, line: 1527, type: !717)
!4523 = !DILocation(line: 1527, column: 27, scope: !4511)
!4524 = !DILocalVariable(name: "range", scope: !4511, file: !1, line: 1530, type: !508)
!4525 = !DILocation(line: 1530, column: 5, scope: !4511)
!4526 = !DILocalVariable(name: "x", scope: !4511, file: !1, line: 1533, type: !453)
!4527 = !DILocation(line: 1533, column: 5, scope: !4511)
!4528 = !DILocalVariable(name: "bit", scope: !4511, file: !1, line: 1536, type: !453)
!4529 = !DILocation(line: 1536, column: 5, scope: !4511)
!4530 = !DILocation(line: 1538, column: 11, scope: !4511)
!4531 = !DILocation(line: 1538, column: 25, scope: !4511)
!4532 = !DILocation(line: 1538, column: 3, scope: !4511)
!4533 = !DILocalVariable(name: "threshold", scope: !4534, file: !1, line: 1543, type: !501)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1541, column: 5)
!4535 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 1539, column: 3)
!4536 = !DILocation(line: 1543, column: 9, scope: !4534)
!4537 = !DILocalVariable(name: "black", scope: !4534, file: !1, line: 1546, type: !437)
!4538 = !DILocation(line: 1546, column: 9, scope: !4534)
!4539 = !DILocalVariable(name: "white", scope: !4534, file: !1, line: 1547, type: !437)
!4540 = !DILocation(line: 1547, column: 9, scope: !4534)
!4541 = !DILocation(line: 1549, column: 12, scope: !4534)
!4542 = !DILocation(line: 1550, column: 12, scope: !4534)
!4543 = !DILocation(line: 1551, column: 11, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 1551, column: 11)
!4545 = !DILocation(line: 1551, column: 25, scope: !4544)
!4546 = !DILocation(line: 1551, column: 38, scope: !4544)
!4547 = !DILocation(line: 1551, column: 11, scope: !4534)
!4548 = !DILocation(line: 1553, column: 16, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !1, line: 1552, column: 9)
!4550 = !DILocation(line: 1554, column: 16, scope: !4549)
!4551 = !DILocation(line: 1555, column: 9, scope: !4549)
!4552 = !DILocation(line: 1556, column: 16, scope: !4534)
!4553 = !DILocation(line: 1557, column: 25, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 1557, column: 7)
!4555 = !DILocation(line: 1557, column: 38, scope: !4554)
!4556 = !DILocation(line: 1557, column: 13, scope: !4554)
!4557 = !DILocation(line: 1557, column: 12, scope: !4554)
!4558 = !DILocation(line: 1557, column: 43, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 1557, column: 7)
!4560 = !DILocation(line: 1557, column: 45, scope: !4559)
!4561 = !DILocation(line: 1557, column: 7, scope: !4554)
!4562 = !DILocation(line: 1559, column: 10, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4559, file: !1, line: 1558, column: 7)
!4564 = !DILocation(line: 1559, column: 11, scope: !4563)
!4565 = !DILocation(line: 1560, column: 27, scope: !4563)
!4566 = !DILocation(line: 1560, column: 33, scope: !4563)
!4567 = !DILocation(line: 1560, column: 14, scope: !4563)
!4568 = !DILocation(line: 1560, column: 38, scope: !4563)
!4569 = !DILocation(line: 1560, column: 36, scope: !4563)
!4570 = !DILocation(line: 1560, column: 50, scope: !4563)
!4571 = !DILocation(line: 1560, column: 58, scope: !4563)
!4572 = !DILocation(line: 1560, column: 65, scope: !4563)
!4573 = !DILocation(line: 1560, column: 10, scope: !4563)
!4574 = !DILocation(line: 1560, column: 11, scope: !4563)
!4575 = !DILocation(line: 1561, column: 10, scope: !4563)
!4576 = !DILocation(line: 1562, column: 27, scope: !4563)
!4577 = !DILocation(line: 1562, column: 33, scope: !4563)
!4578 = !DILocation(line: 1562, column: 14, scope: !4563)
!4579 = !DILocation(line: 1562, column: 38, scope: !4563)
!4580 = !DILocation(line: 1562, column: 36, scope: !4563)
!4581 = !DILocation(line: 1562, column: 50, scope: !4563)
!4582 = !DILocation(line: 1562, column: 58, scope: !4563)
!4583 = !DILocation(line: 1562, column: 65, scope: !4563)
!4584 = !DILocation(line: 1562, column: 10, scope: !4563)
!4585 = !DILocation(line: 1562, column: 11, scope: !4563)
!4586 = !DILocation(line: 1563, column: 10, scope: !4563)
!4587 = !DILocation(line: 1564, column: 27, scope: !4563)
!4588 = !DILocation(line: 1564, column: 33, scope: !4563)
!4589 = !DILocation(line: 1564, column: 14, scope: !4563)
!4590 = !DILocation(line: 1564, column: 38, scope: !4563)
!4591 = !DILocation(line: 1564, column: 36, scope: !4563)
!4592 = !DILocation(line: 1564, column: 50, scope: !4563)
!4593 = !DILocation(line: 1564, column: 58, scope: !4563)
!4594 = !DILocation(line: 1564, column: 65, scope: !4563)
!4595 = !DILocation(line: 1564, column: 10, scope: !4563)
!4596 = !DILocation(line: 1564, column: 11, scope: !4563)
!4597 = !DILocation(line: 1565, column: 10, scope: !4563)
!4598 = !DILocation(line: 1566, column: 27, scope: !4563)
!4599 = !DILocation(line: 1566, column: 33, scope: !4563)
!4600 = !DILocation(line: 1566, column: 14, scope: !4563)
!4601 = !DILocation(line: 1566, column: 38, scope: !4563)
!4602 = !DILocation(line: 1566, column: 36, scope: !4563)
!4603 = !DILocation(line: 1566, column: 50, scope: !4563)
!4604 = !DILocation(line: 1566, column: 58, scope: !4563)
!4605 = !DILocation(line: 1566, column: 65, scope: !4563)
!4606 = !DILocation(line: 1566, column: 10, scope: !4563)
!4607 = !DILocation(line: 1566, column: 11, scope: !4563)
!4608 = !DILocation(line: 1567, column: 10, scope: !4563)
!4609 = !DILocation(line: 1568, column: 27, scope: !4563)
!4610 = !DILocation(line: 1568, column: 33, scope: !4563)
!4611 = !DILocation(line: 1568, column: 14, scope: !4563)
!4612 = !DILocation(line: 1568, column: 38, scope: !4563)
!4613 = !DILocation(line: 1568, column: 36, scope: !4563)
!4614 = !DILocation(line: 1568, column: 50, scope: !4563)
!4615 = !DILocation(line: 1568, column: 58, scope: !4563)
!4616 = !DILocation(line: 1568, column: 65, scope: !4563)
!4617 = !DILocation(line: 1568, column: 10, scope: !4563)
!4618 = !DILocation(line: 1568, column: 11, scope: !4563)
!4619 = !DILocation(line: 1569, column: 10, scope: !4563)
!4620 = !DILocation(line: 1570, column: 27, scope: !4563)
!4621 = !DILocation(line: 1570, column: 33, scope: !4563)
!4622 = !DILocation(line: 1570, column: 14, scope: !4563)
!4623 = !DILocation(line: 1570, column: 38, scope: !4563)
!4624 = !DILocation(line: 1570, column: 36, scope: !4563)
!4625 = !DILocation(line: 1570, column: 50, scope: !4563)
!4626 = !DILocation(line: 1570, column: 58, scope: !4563)
!4627 = !DILocation(line: 1570, column: 65, scope: !4563)
!4628 = !DILocation(line: 1570, column: 10, scope: !4563)
!4629 = !DILocation(line: 1570, column: 11, scope: !4563)
!4630 = !DILocation(line: 1571, column: 10, scope: !4563)
!4631 = !DILocation(line: 1572, column: 27, scope: !4563)
!4632 = !DILocation(line: 1572, column: 33, scope: !4563)
!4633 = !DILocation(line: 1572, column: 14, scope: !4563)
!4634 = !DILocation(line: 1572, column: 38, scope: !4563)
!4635 = !DILocation(line: 1572, column: 36, scope: !4563)
!4636 = !DILocation(line: 1572, column: 50, scope: !4563)
!4637 = !DILocation(line: 1572, column: 58, scope: !4563)
!4638 = !DILocation(line: 1572, column: 65, scope: !4563)
!4639 = !DILocation(line: 1572, column: 10, scope: !4563)
!4640 = !DILocation(line: 1572, column: 11, scope: !4563)
!4641 = !DILocation(line: 1573, column: 10, scope: !4563)
!4642 = !DILocation(line: 1574, column: 27, scope: !4563)
!4643 = !DILocation(line: 1574, column: 33, scope: !4563)
!4644 = !DILocation(line: 1574, column: 14, scope: !4563)
!4645 = !DILocation(line: 1574, column: 38, scope: !4563)
!4646 = !DILocation(line: 1574, column: 36, scope: !4563)
!4647 = !DILocation(line: 1574, column: 50, scope: !4563)
!4648 = !DILocation(line: 1574, column: 58, scope: !4563)
!4649 = !DILocation(line: 1574, column: 65, scope: !4563)
!4650 = !DILocation(line: 1574, column: 10, scope: !4563)
!4651 = !DILocation(line: 1574, column: 11, scope: !4563)
!4652 = !DILocation(line: 1575, column: 10, scope: !4563)
!4653 = !DILocation(line: 1576, column: 10, scope: !4563)
!4654 = !DILocation(line: 1577, column: 7, scope: !4563)
!4655 = !DILocation(line: 1557, column: 51, scope: !4559)
!4656 = !DILocation(line: 1557, column: 7, scope: !4559)
!4657 = distinct !{!4657, !4561, !4658}
!4658 = !DILocation(line: 1577, column: 7, scope: !4554)
!4659 = !DILocation(line: 1578, column: 12, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 1578, column: 11)
!4661 = !DILocation(line: 1578, column: 26, scope: !4660)
!4662 = !DILocation(line: 1578, column: 31, scope: !4660)
!4663 = !DILocation(line: 1578, column: 11, scope: !4534)
!4664 = !DILocation(line: 1580, column: 12, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4660, file: !1, line: 1579, column: 9)
!4666 = !DILocation(line: 1580, column: 13, scope: !4665)
!4667 = !DILocation(line: 1581, column: 19, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 1581, column: 11)
!4669 = !DILocation(line: 1581, column: 16, scope: !4668)
!4670 = !DILocation(line: 1581, column: 23, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1581, column: 11)
!4672 = !DILocation(line: 1581, column: 44, scope: !4671)
!4673 = !DILocation(line: 1581, column: 58, scope: !4671)
!4674 = !DILocation(line: 1581, column: 42, scope: !4671)
!4675 = !DILocation(line: 1581, column: 27, scope: !4671)
!4676 = !DILocation(line: 1581, column: 11, scope: !4668)
!4677 = !DILocation(line: 1583, column: 31, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 1582, column: 11)
!4679 = !DILocation(line: 1583, column: 37, scope: !4678)
!4680 = !DILocation(line: 1583, column: 18, scope: !4678)
!4681 = !DILocation(line: 1583, column: 42, scope: !4678)
!4682 = !DILocation(line: 1583, column: 40, scope: !4678)
!4683 = !DILocation(line: 1583, column: 54, scope: !4678)
!4684 = !DILocation(line: 1583, column: 62, scope: !4678)
!4685 = !DILocation(line: 1583, column: 72, scope: !4678)
!4686 = !DILocation(line: 1583, column: 69, scope: !4678)
!4687 = !DILocation(line: 1583, column: 14, scope: !4678)
!4688 = !DILocation(line: 1583, column: 15, scope: !4678)
!4689 = !DILocation(line: 1584, column: 14, scope: !4678)
!4690 = !DILocation(line: 1585, column: 11, scope: !4678)
!4691 = !DILocation(line: 1581, column: 68, scope: !4671)
!4692 = !DILocation(line: 1581, column: 11, scope: !4671)
!4693 = distinct !{!4693, !4676, !4694}
!4694 = !DILocation(line: 1585, column: 11, scope: !4668)
!4695 = !DILocation(line: 1586, column: 12, scope: !4665)
!4696 = !DILocation(line: 1587, column: 9, scope: !4665)
!4697 = !DILocation(line: 1588, column: 7, scope: !4534)
!4698 = !DILocalVariable(name: "pixel", scope: !4699, file: !1, line: 1593, type: !437)
!4699 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1591, column: 5)
!4700 = !DILocation(line: 1593, column: 9, scope: !4699)
!4701 = !DILocation(line: 1595, column: 13, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 1595, column: 7)
!4703 = !DILocation(line: 1595, column: 12, scope: !4702)
!4704 = !DILocation(line: 1595, column: 17, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !1, line: 1595, column: 7)
!4706 = !DILocation(line: 1595, column: 32, scope: !4705)
!4707 = !DILocation(line: 1595, column: 45, scope: !4705)
!4708 = !DILocation(line: 1595, column: 19, scope: !4705)
!4709 = !DILocation(line: 1595, column: 7, scope: !4702)
!4710 = !DILocation(line: 1597, column: 62, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4705, file: !1, line: 1596, column: 7)
!4712 = !DILocation(line: 1597, column: 68, scope: !4711)
!4713 = !DILocation(line: 1597, column: 49, scope: !4711)
!4714 = !DILocation(line: 1597, column: 34, scope: !4711)
!4715 = !DILocation(line: 1597, column: 15, scope: !4711)
!4716 = !DILocation(line: 1597, column: 14, scope: !4711)
!4717 = !DILocation(line: 1598, column: 15, scope: !4711)
!4718 = !DILocation(line: 1598, column: 21, scope: !4711)
!4719 = !DILocation(line: 1598, column: 27, scope: !4711)
!4720 = !DILocation(line: 1598, column: 34, scope: !4711)
!4721 = !DILocation(line: 1598, column: 12, scope: !4711)
!4722 = !DILocation(line: 1598, column: 10, scope: !4711)
!4723 = !DILocation(line: 1598, column: 11, scope: !4711)
!4724 = !DILocation(line: 1599, column: 10, scope: !4711)
!4725 = !DILocation(line: 1600, column: 62, scope: !4711)
!4726 = !DILocation(line: 1600, column: 68, scope: !4711)
!4727 = !DILocation(line: 1600, column: 49, scope: !4711)
!4728 = !DILocation(line: 1600, column: 34, scope: !4711)
!4729 = !DILocation(line: 1600, column: 15, scope: !4711)
!4730 = !DILocation(line: 1600, column: 14, scope: !4711)
!4731 = !DILocation(line: 1601, column: 13, scope: !4711)
!4732 = !DILocation(line: 1601, column: 19, scope: !4711)
!4733 = !DILocation(line: 1601, column: 10, scope: !4711)
!4734 = !DILocation(line: 1601, column: 11, scope: !4711)
!4735 = !DILocation(line: 1602, column: 10, scope: !4711)
!4736 = !DILocation(line: 1603, column: 10, scope: !4711)
!4737 = !DILocation(line: 1604, column: 7, scope: !4711)
!4738 = !DILocation(line: 1595, column: 52, scope: !4705)
!4739 = !DILocation(line: 1595, column: 7, scope: !4705)
!4740 = distinct !{!4740, !4709, !4741}
!4741 = !DILocation(line: 1604, column: 7, scope: !4702)
!4742 = !DILocation(line: 1605, column: 12, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 1605, column: 11)
!4744 = !DILocation(line: 1605, column: 26, scope: !4743)
!4745 = !DILocation(line: 1605, column: 31, scope: !4743)
!4746 = !DILocation(line: 1605, column: 11, scope: !4699)
!4747 = !DILocation(line: 1607, column: 64, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !1, line: 1606, column: 9)
!4749 = !DILocation(line: 1607, column: 70, scope: !4748)
!4750 = !DILocation(line: 1607, column: 51, scope: !4748)
!4751 = !DILocation(line: 1607, column: 36, scope: !4748)
!4752 = !DILocation(line: 1607, column: 17, scope: !4748)
!4753 = !DILocation(line: 1607, column: 16, scope: !4748)
!4754 = !DILocation(line: 1608, column: 17, scope: !4748)
!4755 = !DILocation(line: 1608, column: 23, scope: !4748)
!4756 = !DILocation(line: 1608, column: 29, scope: !4748)
!4757 = !DILocation(line: 1608, column: 36, scope: !4748)
!4758 = !DILocation(line: 1608, column: 14, scope: !4748)
!4759 = !DILocation(line: 1608, column: 12, scope: !4748)
!4760 = !DILocation(line: 1608, column: 13, scope: !4748)
!4761 = !DILocation(line: 1609, column: 12, scope: !4748)
!4762 = !DILocation(line: 1610, column: 12, scope: !4748)
!4763 = !DILocation(line: 1611, column: 9, scope: !4748)
!4764 = !DILocation(line: 1612, column: 7, scope: !4699)
!4765 = !DILocalVariable(name: "pixel", scope: !4766, file: !1, line: 1617, type: !437)
!4766 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1615, column: 5)
!4767 = !DILocation(line: 1617, column: 9, scope: !4766)
!4768 = !DILocation(line: 1619, column: 13, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1619, column: 7)
!4770 = !DILocation(line: 1619, column: 12, scope: !4769)
!4771 = !DILocation(line: 1619, column: 17, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4769, file: !1, line: 1619, column: 7)
!4773 = !DILocation(line: 1619, column: 31, scope: !4772)
!4774 = !DILocation(line: 1619, column: 19, scope: !4772)
!4775 = !DILocation(line: 1619, column: 7, scope: !4769)
!4776 = !DILocation(line: 1621, column: 62, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4772, file: !1, line: 1620, column: 7)
!4778 = !DILocation(line: 1621, column: 68, scope: !4777)
!4779 = !DILocation(line: 1621, column: 49, scope: !4777)
!4780 = !DILocation(line: 1621, column: 34, scope: !4777)
!4781 = !DILocation(line: 1621, column: 15, scope: !4777)
!4782 = !DILocation(line: 1621, column: 14, scope: !4777)
!4783 = !DILocation(line: 1622, column: 24, scope: !4777)
!4784 = !DILocation(line: 1622, column: 30, scope: !4777)
!4785 = !DILocation(line: 1622, column: 11, scope: !4777)
!4786 = !DILocation(line: 1622, column: 10, scope: !4777)
!4787 = !DILocation(line: 1623, column: 10, scope: !4777)
!4788 = !DILocation(line: 1624, column: 12, scope: !4777)
!4789 = !DILocation(line: 1624, column: 26, scope: !4777)
!4790 = !DILocation(line: 1624, column: 10, scope: !4777)
!4791 = !DILocation(line: 1625, column: 7, scope: !4777)
!4792 = !DILocation(line: 1619, column: 47, scope: !4772)
!4793 = !DILocation(line: 1619, column: 7, scope: !4772)
!4794 = distinct !{!4794, !4775, !4795}
!4795 = !DILocation(line: 1625, column: 7, scope: !4769)
!4796 = !DILocation(line: 1626, column: 7, scope: !4766)
!4797 = !DILocation(line: 1630, column: 29, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1629, column: 5)
!4799 = !DILocation(line: 1630, column: 43, scope: !4798)
!4800 = !DILocation(line: 1630, column: 13, scope: !4798)
!4801 = !DILocation(line: 1630, column: 12, scope: !4798)
!4802 = !DILocation(line: 1631, column: 11, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4798, file: !1, line: 1631, column: 11)
!4804 = !DILocation(line: 1631, column: 25, scope: !4803)
!4805 = !DILocation(line: 1631, column: 30, scope: !4803)
!4806 = !DILocation(line: 1631, column: 11, scope: !4798)
!4807 = !DILocalVariable(name: "pixel", scope: !4808, file: !1, line: 1634, type: !5)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !1, line: 1632, column: 9)
!4809 = !DILocation(line: 1634, column: 13, scope: !4808)
!4810 = !DILocation(line: 1636, column: 17, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 1636, column: 11)
!4812 = !DILocation(line: 1636, column: 16, scope: !4811)
!4813 = !DILocation(line: 1636, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 1636, column: 11)
!4815 = !DILocation(line: 1636, column: 36, scope: !4814)
!4816 = !DILocation(line: 1636, column: 49, scope: !4814)
!4817 = !DILocation(line: 1636, column: 23, scope: !4814)
!4818 = !DILocation(line: 1636, column: 11, scope: !4811)
!4819 = !DILocation(line: 1639, column: 61, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 1637, column: 11)
!4821 = !DILocation(line: 1639, column: 67, scope: !4820)
!4822 = !DILocation(line: 1639, column: 68, scope: !4820)
!4823 = !DILocation(line: 1639, column: 48, scope: !4820)
!4824 = !DILocation(line: 1639, column: 33, scope: !4820)
!4825 = !DILocation(line: 1639, column: 73, scope: !4820)
!4826 = !DILocation(line: 1639, column: 15, scope: !4820)
!4827 = !DILocation(line: 1639, column: 80, scope: !4820)
!4828 = !DILocation(line: 1640, column: 61, scope: !4820)
!4829 = !DILocation(line: 1640, column: 67, scope: !4820)
!4830 = !DILocation(line: 1640, column: 68, scope: !4820)
!4831 = !DILocation(line: 1640, column: 48, scope: !4820)
!4832 = !DILocation(line: 1640, column: 33, scope: !4820)
!4833 = !DILocation(line: 1640, column: 73, scope: !4820)
!4834 = !DILocation(line: 1640, column: 15, scope: !4820)
!4835 = !DILocation(line: 1640, column: 80, scope: !4820)
!4836 = !DILocation(line: 1639, column: 86, scope: !4820)
!4837 = !DILocation(line: 1641, column: 61, scope: !4820)
!4838 = !DILocation(line: 1641, column: 67, scope: !4820)
!4839 = !DILocation(line: 1641, column: 68, scope: !4820)
!4840 = !DILocation(line: 1641, column: 48, scope: !4820)
!4841 = !DILocation(line: 1641, column: 33, scope: !4820)
!4842 = !DILocation(line: 1641, column: 73, scope: !4820)
!4843 = !DILocation(line: 1641, column: 15, scope: !4820)
!4844 = !DILocation(line: 1641, column: 80, scope: !4820)
!4845 = !DILocation(line: 1640, column: 86, scope: !4820)
!4846 = !DILocation(line: 1638, column: 19, scope: !4820)
!4847 = !DILocation(line: 1638, column: 18, scope: !4820)
!4848 = !DILocation(line: 1642, column: 28, scope: !4820)
!4849 = !DILocation(line: 1642, column: 42, scope: !4820)
!4850 = !DILocation(line: 1642, column: 49, scope: !4820)
!4851 = !DILocation(line: 1642, column: 55, scope: !4820)
!4852 = !DILocation(line: 1642, column: 15, scope: !4820)
!4853 = !DILocation(line: 1642, column: 14, scope: !4820)
!4854 = !DILocation(line: 1643, column: 14, scope: !4820)
!4855 = !DILocation(line: 1644, column: 16, scope: !4820)
!4856 = !DILocation(line: 1644, column: 30, scope: !4820)
!4857 = !DILocation(line: 1644, column: 14, scope: !4820)
!4858 = !DILocation(line: 1645, column: 11, scope: !4820)
!4859 = !DILocation(line: 1636, column: 55, scope: !4814)
!4860 = !DILocation(line: 1636, column: 11, scope: !4814)
!4861 = distinct !{!4861, !4818, !4862}
!4862 = !DILocation(line: 1645, column: 11, scope: !4811)
!4863 = !DILocation(line: 1646, column: 15, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 1646, column: 15)
!4865 = !DILocation(line: 1646, column: 29, scope: !4864)
!4866 = !DILocation(line: 1646, column: 17, scope: !4864)
!4867 = !DILocation(line: 1646, column: 15, scope: !4808)
!4868 = !DILocation(line: 1648, column: 20, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4864, file: !1, line: 1647, column: 13)
!4870 = !DILocation(line: 1649, column: 20, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4869, file: !1, line: 1649, column: 19)
!4872 = !DILocation(line: 1649, column: 36, scope: !4871)
!4873 = !DILocation(line: 1649, column: 49, scope: !4871)
!4874 = !DILocation(line: 1649, column: 23, scope: !4871)
!4875 = !DILocation(line: 1649, column: 19, scope: !4869)
!4876 = !DILocation(line: 1650, column: 70, scope: !4871)
!4877 = !DILocation(line: 1651, column: 19, scope: !4871)
!4878 = !DILocation(line: 1651, column: 20, scope: !4871)
!4879 = !DILocation(line: 1650, column: 57, scope: !4871)
!4880 = !DILocation(line: 1650, column: 42, scope: !4871)
!4881 = !DILocation(line: 1651, column: 25, scope: !4871)
!4882 = !DILocation(line: 1650, column: 24, scope: !4871)
!4883 = !DILocation(line: 1651, column: 32, scope: !4871)
!4884 = !DILocation(line: 1650, column: 22, scope: !4871)
!4885 = !DILocation(line: 1650, column: 17, scope: !4871)
!4886 = !DILocation(line: 1652, column: 20, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4869, file: !1, line: 1652, column: 19)
!4888 = !DILocation(line: 1652, column: 35, scope: !4887)
!4889 = !DILocation(line: 1652, column: 23, scope: !4887)
!4890 = !DILocation(line: 1652, column: 19, scope: !4869)
!4891 = !DILocation(line: 1653, column: 70, scope: !4887)
!4892 = !DILocation(line: 1654, column: 19, scope: !4887)
!4893 = !DILocation(line: 1654, column: 20, scope: !4887)
!4894 = !DILocation(line: 1653, column: 57, scope: !4887)
!4895 = !DILocation(line: 1653, column: 42, scope: !4887)
!4896 = !DILocation(line: 1654, column: 25, scope: !4887)
!4897 = !DILocation(line: 1653, column: 24, scope: !4887)
!4898 = !DILocation(line: 1654, column: 32, scope: !4887)
!4899 = !DILocation(line: 1653, column: 22, scope: !4887)
!4900 = !DILocation(line: 1653, column: 17, scope: !4887)
!4901 = !DILocation(line: 1655, column: 30, scope: !4869)
!4902 = !DILocation(line: 1655, column: 44, scope: !4869)
!4903 = !DILocation(line: 1655, column: 51, scope: !4869)
!4904 = !DILocation(line: 1655, column: 57, scope: !4869)
!4905 = !DILocation(line: 1655, column: 17, scope: !4869)
!4906 = !DILocation(line: 1655, column: 16, scope: !4869)
!4907 = !DILocation(line: 1656, column: 13, scope: !4869)
!4908 = !DILocation(line: 1657, column: 11, scope: !4808)
!4909 = !DILocation(line: 1659, column: 13, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4798, file: !1, line: 1659, column: 7)
!4911 = !DILocation(line: 1659, column: 12, scope: !4910)
!4912 = !DILocation(line: 1659, column: 17, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4910, file: !1, line: 1659, column: 7)
!4914 = !DILocation(line: 1659, column: 31, scope: !4913)
!4915 = !DILocation(line: 1659, column: 19, scope: !4913)
!4916 = !DILocation(line: 1659, column: 7, scope: !4910)
!4917 = !DILocation(line: 1661, column: 27, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 1660, column: 7)
!4919 = !DILocation(line: 1662, column: 24, scope: !4918)
!4920 = !DILocation(line: 1662, column: 30, scope: !4918)
!4921 = !DILocation(line: 1662, column: 11, scope: !4918)
!4922 = !DILocation(line: 1661, column: 58, scope: !4918)
!4923 = !DILocation(line: 1662, column: 34, scope: !4918)
!4924 = !DILocation(line: 1661, column: 40, scope: !4918)
!4925 = !DILocation(line: 1662, column: 41, scope: !4918)
!4926 = !DILocation(line: 1661, column: 11, scope: !4918)
!4927 = !DILocation(line: 1661, column: 10, scope: !4918)
!4928 = !DILocation(line: 1663, column: 10, scope: !4918)
!4929 = !DILocation(line: 1664, column: 12, scope: !4918)
!4930 = !DILocation(line: 1664, column: 26, scope: !4918)
!4931 = !DILocation(line: 1664, column: 10, scope: !4918)
!4932 = !DILocation(line: 1665, column: 7, scope: !4918)
!4933 = !DILocation(line: 1659, column: 47, scope: !4913)
!4934 = !DILocation(line: 1659, column: 7, scope: !4913)
!4935 = distinct !{!4935, !4916, !4936}
!4936 = !DILocation(line: 1665, column: 7, scope: !4910)
!4937 = !DILocation(line: 1666, column: 7, scope: !4798)
!4938 = !DILocalVariable(name: "pixel", scope: !4939, file: !1, line: 1671, type: !449)
!4939 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1669, column: 5)
!4940 = !DILocation(line: 1671, column: 9, scope: !4939)
!4941 = !DILocation(line: 1673, column: 29, scope: !4939)
!4942 = !DILocation(line: 1673, column: 43, scope: !4939)
!4943 = !DILocation(line: 1673, column: 13, scope: !4939)
!4944 = !DILocation(line: 1673, column: 12, scope: !4939)
!4945 = !DILocation(line: 1674, column: 11, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 1674, column: 11)
!4947 = !DILocation(line: 1674, column: 25, scope: !4946)
!4948 = !DILocation(line: 1674, column: 30, scope: !4946)
!4949 = !DILocation(line: 1674, column: 11, scope: !4939)
!4950 = !DILocation(line: 1676, column: 17, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !1, line: 1676, column: 11)
!4952 = distinct !DILexicalBlock(scope: !4946, file: !1, line: 1675, column: 9)
!4953 = !DILocation(line: 1676, column: 16, scope: !4951)
!4954 = !DILocation(line: 1676, column: 21, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4951, file: !1, line: 1676, column: 11)
!4956 = !DILocation(line: 1676, column: 35, scope: !4955)
!4957 = !DILocation(line: 1676, column: 23, scope: !4955)
!4958 = !DILocation(line: 1676, column: 11, scope: !4951)
!4959 = !DILocation(line: 1678, column: 67, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4955, file: !1, line: 1677, column: 11)
!4961 = !DILocation(line: 1678, column: 73, scope: !4960)
!4962 = !DILocation(line: 1678, column: 54, scope: !4960)
!4963 = !DILocation(line: 1678, column: 39, scope: !4960)
!4964 = !DILocation(line: 1678, column: 19, scope: !4960)
!4965 = !DILocation(line: 1678, column: 18, scope: !4960)
!4966 = !DILocation(line: 1679, column: 29, scope: !4960)
!4967 = !DILocation(line: 1679, column: 43, scope: !4960)
!4968 = !DILocation(line: 1679, column: 68, scope: !4960)
!4969 = !DILocation(line: 1679, column: 74, scope: !4960)
!4970 = !DILocation(line: 1679, column: 50, scope: !4960)
!4971 = !DILocation(line: 1679, column: 80, scope: !4960)
!4972 = !DILocation(line: 1679, column: 15, scope: !4960)
!4973 = !DILocation(line: 1679, column: 14, scope: !4960)
!4974 = !DILocation(line: 1680, column: 14, scope: !4960)
!4975 = !DILocation(line: 1681, column: 16, scope: !4960)
!4976 = !DILocation(line: 1681, column: 30, scope: !4960)
!4977 = !DILocation(line: 1681, column: 14, scope: !4960)
!4978 = !DILocation(line: 1682, column: 11, scope: !4960)
!4979 = !DILocation(line: 1676, column: 51, scope: !4955)
!4980 = !DILocation(line: 1676, column: 11, scope: !4955)
!4981 = distinct !{!4981, !4958, !4982}
!4982 = !DILocation(line: 1682, column: 11, scope: !4951)
!4983 = !DILocation(line: 1683, column: 11, scope: !4952)
!4984 = !DILocation(line: 1685, column: 13, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4939, file: !1, line: 1685, column: 7)
!4986 = !DILocation(line: 1685, column: 12, scope: !4985)
!4987 = !DILocation(line: 1685, column: 17, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 1685, column: 7)
!4989 = !DILocation(line: 1685, column: 31, scope: !4988)
!4990 = !DILocation(line: 1685, column: 19, scope: !4988)
!4991 = !DILocation(line: 1685, column: 7, scope: !4985)
!4992 = !DILocation(line: 1687, column: 27, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4988, file: !1, line: 1686, column: 7)
!4994 = !DILocation(line: 1688, column: 24, scope: !4993)
!4995 = !DILocation(line: 1688, column: 30, scope: !4993)
!4996 = !DILocation(line: 1688, column: 11, scope: !4993)
!4997 = !DILocation(line: 1687, column: 58, scope: !4993)
!4998 = !DILocation(line: 1688, column: 34, scope: !4993)
!4999 = !DILocation(line: 1687, column: 40, scope: !4993)
!5000 = !DILocation(line: 1688, column: 41, scope: !4993)
!5001 = !DILocation(line: 1687, column: 11, scope: !4993)
!5002 = !DILocation(line: 1687, column: 10, scope: !4993)
!5003 = !DILocation(line: 1689, column: 10, scope: !4993)
!5004 = !DILocation(line: 1690, column: 12, scope: !4993)
!5005 = !DILocation(line: 1690, column: 26, scope: !4993)
!5006 = !DILocation(line: 1690, column: 10, scope: !4993)
!5007 = !DILocation(line: 1691, column: 7, scope: !4993)
!5008 = !DILocation(line: 1685, column: 47, scope: !4988)
!5009 = !DILocation(line: 1685, column: 7, scope: !4988)
!5010 = distinct !{!5010, !4991, !5011}
!5011 = !DILocation(line: 1691, column: 7, scope: !4985)
!5012 = !DILocation(line: 1692, column: 7, scope: !4939)
!5013 = !DILocalVariable(name: "pixel", scope: !5014, file: !1, line: 1697, type: !449)
!5014 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1695, column: 5)
!5015 = !DILocation(line: 1697, column: 9, scope: !5014)
!5016 = !DILocation(line: 1699, column: 11, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !1, line: 1699, column: 11)
!5018 = !DILocation(line: 1699, column: 25, scope: !5017)
!5019 = !DILocation(line: 1699, column: 32, scope: !5017)
!5020 = !DILocation(line: 1699, column: 11, scope: !5014)
!5021 = !DILocation(line: 1701, column: 17, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 1701, column: 11)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 1700, column: 9)
!5024 = !DILocation(line: 1701, column: 16, scope: !5022)
!5025 = !DILocation(line: 1701, column: 21, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !1, line: 1701, column: 11)
!5027 = !DILocation(line: 1701, column: 35, scope: !5026)
!5028 = !DILocation(line: 1701, column: 23, scope: !5026)
!5029 = !DILocation(line: 1701, column: 11, scope: !5022)
!5030 = !DILocation(line: 1703, column: 67, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 1702, column: 11)
!5032 = !DILocation(line: 1703, column: 73, scope: !5031)
!5033 = !DILocation(line: 1703, column: 54, scope: !5031)
!5034 = !DILocation(line: 1703, column: 53, scope: !5031)
!5035 = !DILocation(line: 1703, column: 41, scope: !5031)
!5036 = !DILocation(line: 1703, column: 19, scope: !5031)
!5037 = !DILocation(line: 1703, column: 18, scope: !5031)
!5038 = !DILocation(line: 1704, column: 29, scope: !5031)
!5039 = !DILocation(line: 1704, column: 43, scope: !5031)
!5040 = !DILocation(line: 1704, column: 50, scope: !5031)
!5041 = !DILocation(line: 1704, column: 56, scope: !5031)
!5042 = !DILocation(line: 1704, column: 15, scope: !5031)
!5043 = !DILocation(line: 1704, column: 14, scope: !5031)
!5044 = !DILocation(line: 1705, column: 14, scope: !5031)
!5045 = !DILocation(line: 1706, column: 16, scope: !5031)
!5046 = !DILocation(line: 1706, column: 30, scope: !5031)
!5047 = !DILocation(line: 1706, column: 14, scope: !5031)
!5048 = !DILocation(line: 1707, column: 11, scope: !5031)
!5049 = !DILocation(line: 1701, column: 51, scope: !5026)
!5050 = !DILocation(line: 1701, column: 11, scope: !5026)
!5051 = distinct !{!5051, !5029, !5052}
!5052 = !DILocation(line: 1707, column: 11, scope: !5022)
!5053 = !DILocation(line: 1708, column: 11, scope: !5023)
!5054 = !DILocation(line: 1710, column: 13, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5014, file: !1, line: 1710, column: 7)
!5056 = !DILocation(line: 1710, column: 12, scope: !5055)
!5057 = !DILocation(line: 1710, column: 17, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1710, column: 7)
!5059 = !DILocation(line: 1710, column: 31, scope: !5058)
!5060 = !DILocation(line: 1710, column: 19, scope: !5058)
!5061 = !DILocation(line: 1710, column: 7, scope: !5055)
!5062 = !DILocation(line: 1712, column: 63, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5058, file: !1, line: 1711, column: 7)
!5064 = !DILocation(line: 1712, column: 69, scope: !5063)
!5065 = !DILocation(line: 1712, column: 50, scope: !5063)
!5066 = !DILocation(line: 1712, column: 35, scope: !5063)
!5067 = !DILocation(line: 1712, column: 15, scope: !5063)
!5068 = !DILocation(line: 1712, column: 14, scope: !5063)
!5069 = !DILocation(line: 1713, column: 25, scope: !5063)
!5070 = !DILocation(line: 1713, column: 39, scope: !5063)
!5071 = !DILocation(line: 1713, column: 46, scope: !5063)
!5072 = !DILocation(line: 1713, column: 52, scope: !5063)
!5073 = !DILocation(line: 1713, column: 11, scope: !5063)
!5074 = !DILocation(line: 1713, column: 10, scope: !5063)
!5075 = !DILocation(line: 1714, column: 10, scope: !5063)
!5076 = !DILocation(line: 1715, column: 12, scope: !5063)
!5077 = !DILocation(line: 1715, column: 26, scope: !5063)
!5078 = !DILocation(line: 1715, column: 10, scope: !5063)
!5079 = !DILocation(line: 1716, column: 7, scope: !5063)
!5080 = !DILocation(line: 1710, column: 47, scope: !5058)
!5081 = !DILocation(line: 1710, column: 7, scope: !5058)
!5082 = distinct !{!5082, !5061, !5083}
!5083 = !DILocation(line: 1716, column: 7, scope: !5055)
!5084 = !DILocation(line: 1717, column: 7, scope: !5014)
!5085 = !DILocalVariable(name: "pixel", scope: !5086, file: !1, line: 1722, type: !5)
!5086 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1720, column: 5)
!5087 = !DILocation(line: 1722, column: 9, scope: !5086)
!5088 = !DILocation(line: 1724, column: 11, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5086, file: !1, line: 1724, column: 11)
!5090 = !DILocation(line: 1724, column: 25, scope: !5089)
!5091 = !DILocation(line: 1724, column: 32, scope: !5089)
!5092 = !DILocation(line: 1724, column: 11, scope: !5086)
!5093 = !DILocation(line: 1726, column: 17, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !1, line: 1726, column: 11)
!5095 = distinct !DILexicalBlock(scope: !5089, file: !1, line: 1725, column: 9)
!5096 = !DILocation(line: 1726, column: 16, scope: !5094)
!5097 = !DILocation(line: 1726, column: 21, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !1, line: 1726, column: 11)
!5099 = !DILocation(line: 1726, column: 35, scope: !5098)
!5100 = !DILocation(line: 1726, column: 23, scope: !5098)
!5101 = !DILocation(line: 1726, column: 11, scope: !5094)
!5102 = !DILocalVariable(name: "pixel", scope: !5103, file: !1, line: 1729, type: !502)
!5103 = distinct !DILexicalBlock(scope: !5098, file: !1, line: 1727, column: 11)
!5104 = !DILocation(line: 1729, column: 15, scope: !5103)
!5105 = !DILocation(line: 1731, column: 40, scope: !5103)
!5106 = !DILocation(line: 1731, column: 46, scope: !5103)
!5107 = !DILocation(line: 1731, column: 27, scope: !5103)
!5108 = !DILocation(line: 1731, column: 18, scope: !5103)
!5109 = !DILocation(line: 1732, column: 29, scope: !5103)
!5110 = !DILocation(line: 1732, column: 42, scope: !5103)
!5111 = !DILocation(line: 1732, column: 48, scope: !5103)
!5112 = !DILocation(line: 1732, column: 15, scope: !5103)
!5113 = !DILocation(line: 1732, column: 14, scope: !5103)
!5114 = !DILocation(line: 1733, column: 14, scope: !5103)
!5115 = !DILocation(line: 1734, column: 16, scope: !5103)
!5116 = !DILocation(line: 1734, column: 30, scope: !5103)
!5117 = !DILocation(line: 1734, column: 14, scope: !5103)
!5118 = !DILocation(line: 1735, column: 11, scope: !5103)
!5119 = !DILocation(line: 1726, column: 51, scope: !5098)
!5120 = !DILocation(line: 1726, column: 11, scope: !5098)
!5121 = distinct !{!5121, !5101, !5122}
!5122 = !DILocation(line: 1735, column: 11, scope: !5094)
!5123 = !DILocation(line: 1736, column: 11, scope: !5095)
!5124 = !DILocation(line: 1738, column: 13, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5086, file: !1, line: 1738, column: 7)
!5126 = !DILocation(line: 1738, column: 12, scope: !5125)
!5127 = !DILocation(line: 1738, column: 17, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5125, file: !1, line: 1738, column: 7)
!5129 = !DILocation(line: 1738, column: 31, scope: !5128)
!5130 = !DILocation(line: 1738, column: 19, scope: !5128)
!5131 = !DILocation(line: 1738, column: 7, scope: !5125)
!5132 = !DILocation(line: 1740, column: 62, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 1739, column: 7)
!5134 = !DILocation(line: 1740, column: 68, scope: !5133)
!5135 = !DILocation(line: 1740, column: 49, scope: !5133)
!5136 = !DILocation(line: 1740, column: 34, scope: !5133)
!5137 = !DILocation(line: 1740, column: 15, scope: !5133)
!5138 = !DILocation(line: 1740, column: 14, scope: !5133)
!5139 = !DILocation(line: 1741, column: 24, scope: !5133)
!5140 = !DILocation(line: 1741, column: 38, scope: !5133)
!5141 = !DILocation(line: 1741, column: 45, scope: !5133)
!5142 = !DILocation(line: 1741, column: 51, scope: !5133)
!5143 = !DILocation(line: 1741, column: 11, scope: !5133)
!5144 = !DILocation(line: 1741, column: 10, scope: !5133)
!5145 = !DILocation(line: 1742, column: 10, scope: !5133)
!5146 = !DILocation(line: 1743, column: 12, scope: !5133)
!5147 = !DILocation(line: 1743, column: 26, scope: !5133)
!5148 = !DILocation(line: 1743, column: 10, scope: !5133)
!5149 = !DILocation(line: 1744, column: 7, scope: !5133)
!5150 = !DILocation(line: 1738, column: 47, scope: !5128)
!5151 = !DILocation(line: 1738, column: 7, scope: !5128)
!5152 = distinct !{!5152, !5131, !5153}
!5153 = !DILocation(line: 1744, column: 7, scope: !5125)
!5154 = !DILocation(line: 1745, column: 7, scope: !5086)
!5155 = !DILocation(line: 1749, column: 11, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 1749, column: 11)
!5157 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1748, column: 5)
!5158 = !DILocation(line: 1749, column: 25, scope: !5156)
!5159 = !DILocation(line: 1749, column: 32, scope: !5156)
!5160 = !DILocation(line: 1749, column: 11, scope: !5157)
!5161 = !DILocation(line: 1751, column: 17, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !1, line: 1751, column: 11)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !1, line: 1750, column: 9)
!5164 = !DILocation(line: 1751, column: 16, scope: !5162)
!5165 = !DILocation(line: 1751, column: 21, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5162, file: !1, line: 1751, column: 11)
!5167 = !DILocation(line: 1751, column: 35, scope: !5166)
!5168 = !DILocation(line: 1751, column: 23, scope: !5166)
!5169 = !DILocation(line: 1751, column: 11, scope: !5162)
!5170 = !DILocalVariable(name: "pixel", scope: !5171, file: !1, line: 1754, type: !458)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !1, line: 1752, column: 11)
!5172 = !DILocation(line: 1754, column: 15, scope: !5171)
!5173 = !DILocation(line: 1756, column: 41, scope: !5171)
!5174 = !DILocation(line: 1756, column: 47, scope: !5171)
!5175 = !DILocation(line: 1756, column: 28, scope: !5171)
!5176 = !DILocation(line: 1756, column: 19, scope: !5171)
!5177 = !DILocation(line: 1756, column: 18, scope: !5171)
!5178 = !DILocation(line: 1757, column: 30, scope: !5171)
!5179 = !DILocation(line: 1757, column: 43, scope: !5171)
!5180 = !DILocation(line: 1757, column: 49, scope: !5171)
!5181 = !DILocation(line: 1757, column: 15, scope: !5171)
!5182 = !DILocation(line: 1757, column: 14, scope: !5171)
!5183 = !DILocation(line: 1758, column: 14, scope: !5171)
!5184 = !DILocation(line: 1759, column: 16, scope: !5171)
!5185 = !DILocation(line: 1759, column: 30, scope: !5171)
!5186 = !DILocation(line: 1759, column: 14, scope: !5171)
!5187 = !DILocation(line: 1760, column: 11, scope: !5171)
!5188 = !DILocation(line: 1751, column: 51, scope: !5166)
!5189 = !DILocation(line: 1751, column: 11, scope: !5166)
!5190 = distinct !{!5190, !5169, !5191}
!5191 = !DILocation(line: 1760, column: 11, scope: !5162)
!5192 = !DILocation(line: 1761, column: 11, scope: !5163)
!5193 = !DILocation(line: 1763, column: 5, scope: !5157)
!5194 = !DILocation(line: 1766, column: 29, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1765, column: 5)
!5196 = !DILocation(line: 1766, column: 43, scope: !5195)
!5197 = !DILocation(line: 1766, column: 13, scope: !5195)
!5198 = !DILocation(line: 1766, column: 12, scope: !5195)
!5199 = !DILocation(line: 1767, column: 13, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !1, line: 1767, column: 7)
!5201 = !DILocation(line: 1767, column: 12, scope: !5200)
!5202 = !DILocation(line: 1767, column: 17, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !1, line: 1767, column: 7)
!5204 = !DILocation(line: 1767, column: 31, scope: !5203)
!5205 = !DILocation(line: 1767, column: 19, scope: !5203)
!5206 = !DILocation(line: 1767, column: 7, scope: !5200)
!5207 = !DILocation(line: 1769, column: 27, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5203, file: !1, line: 1768, column: 7)
!5209 = !DILocation(line: 1770, column: 57, scope: !5208)
!5210 = !DILocation(line: 1770, column: 63, scope: !5208)
!5211 = !DILocation(line: 1770, column: 44, scope: !5208)
!5212 = !DILocation(line: 1770, column: 29, scope: !5208)
!5213 = !DILocation(line: 1770, column: 67, scope: !5208)
!5214 = !DILocation(line: 1770, column: 11, scope: !5208)
!5215 = !DILocation(line: 1770, column: 74, scope: !5208)
!5216 = !DILocation(line: 1769, column: 11, scope: !5208)
!5217 = !DILocation(line: 1769, column: 10, scope: !5208)
!5218 = !DILocation(line: 1771, column: 10, scope: !5208)
!5219 = !DILocation(line: 1772, column: 12, scope: !5208)
!5220 = !DILocation(line: 1772, column: 26, scope: !5208)
!5221 = !DILocation(line: 1772, column: 10, scope: !5208)
!5222 = !DILocation(line: 1773, column: 7, scope: !5208)
!5223 = !DILocation(line: 1767, column: 47, scope: !5203)
!5224 = !DILocation(line: 1767, column: 7, scope: !5203)
!5225 = distinct !{!5225, !5206, !5226}
!5226 = !DILocation(line: 1773, column: 7, scope: !5200)
!5227 = !DILocation(line: 1774, column: 7, scope: !5195)
!5228 = !DILocation(line: 1777, column: 1, scope: !4511)
!5229 = distinct !DISubprogram(name: "ExportGrayAlphaQuantum", scope: !1, file: !1, line: 1779, type: !4512, scopeLine: 1782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5230 = !DILocalVariable(name: "image", arg: 1, scope: !5229, file: !1, line: 1779, type: !519)
!5231 = !DILocation(line: 1779, column: 49, scope: !5229)
!5232 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !5229, file: !1, line: 1779, type: !459)
!5233 = !DILocation(line: 1779, column: 68, scope: !5229)
!5234 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !5229, file: !1, line: 1780, type: !637)
!5235 = !DILocation(line: 1780, column: 24, scope: !5229)
!5236 = !DILocalVariable(name: "p", arg: 4, scope: !5229, file: !1, line: 1780, type: !740)
!5237 = !DILocation(line: 1780, column: 66, scope: !5229)
!5238 = !DILocalVariable(name: "q", arg: 5, scope: !5229, file: !1, line: 1781, type: !717)
!5239 = !DILocation(line: 1781, column: 27, scope: !5229)
!5240 = !DILocalVariable(name: "range", scope: !5229, file: !1, line: 1784, type: !508)
!5241 = !DILocation(line: 1784, column: 5, scope: !5229)
!5242 = !DILocalVariable(name: "x", scope: !5229, file: !1, line: 1787, type: !453)
!5243 = !DILocation(line: 1787, column: 5, scope: !5229)
!5244 = !DILocalVariable(name: "bit", scope: !5229, file: !1, line: 1790, type: !453)
!5245 = !DILocation(line: 1790, column: 5, scope: !5229)
!5246 = !DILocation(line: 1792, column: 11, scope: !5229)
!5247 = !DILocation(line: 1792, column: 25, scope: !5229)
!5248 = !DILocation(line: 1792, column: 3, scope: !5229)
!5249 = !DILocalVariable(name: "threshold", scope: !5250, file: !1, line: 1797, type: !501)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1795, column: 5)
!5251 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 1793, column: 3)
!5252 = !DILocation(line: 1797, column: 9, scope: !5250)
!5253 = !DILocalVariable(name: "black", scope: !5250, file: !1, line: 1800, type: !437)
!5254 = !DILocation(line: 1800, column: 9, scope: !5250)
!5255 = !DILocalVariable(name: "pixel", scope: !5250, file: !1, line: 1801, type: !437)
!5256 = !DILocation(line: 1801, column: 9, scope: !5250)
!5257 = !DILocalVariable(name: "white", scope: !5250, file: !1, line: 1802, type: !437)
!5258 = !DILocation(line: 1802, column: 9, scope: !5250)
!5259 = !DILocation(line: 1804, column: 12, scope: !5250)
!5260 = !DILocation(line: 1805, column: 12, scope: !5250)
!5261 = !DILocation(line: 1806, column: 11, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5250, file: !1, line: 1806, column: 11)
!5263 = !DILocation(line: 1806, column: 25, scope: !5262)
!5264 = !DILocation(line: 1806, column: 38, scope: !5262)
!5265 = !DILocation(line: 1806, column: 11, scope: !5250)
!5266 = !DILocation(line: 1808, column: 16, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5262, file: !1, line: 1807, column: 9)
!5268 = !DILocation(line: 1809, column: 16, scope: !5267)
!5269 = !DILocation(line: 1810, column: 9, scope: !5267)
!5270 = !DILocation(line: 1811, column: 16, scope: !5250)
!5271 = !DILocation(line: 1812, column: 25, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5250, file: !1, line: 1812, column: 7)
!5273 = !DILocation(line: 1812, column: 38, scope: !5272)
!5274 = !DILocation(line: 1812, column: 13, scope: !5272)
!5275 = !DILocation(line: 1812, column: 12, scope: !5272)
!5276 = !DILocation(line: 1812, column: 43, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 1812, column: 7)
!5278 = !DILocation(line: 1812, column: 45, scope: !5277)
!5279 = !DILocation(line: 1812, column: 7, scope: !5272)
!5280 = !DILocation(line: 1814, column: 10, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 1813, column: 7)
!5282 = !DILocation(line: 1814, column: 11, scope: !5281)
!5283 = !DILocation(line: 1815, column: 27, scope: !5281)
!5284 = !DILocation(line: 1815, column: 33, scope: !5281)
!5285 = !DILocation(line: 1815, column: 14, scope: !5281)
!5286 = !DILocation(line: 1815, column: 38, scope: !5281)
!5287 = !DILocation(line: 1815, column: 36, scope: !5281)
!5288 = !DILocation(line: 1815, column: 50, scope: !5281)
!5289 = !DILocation(line: 1815, column: 58, scope: !5281)
!5290 = !DILocation(line: 1815, column: 65, scope: !5281)
!5291 = !DILocation(line: 1815, column: 10, scope: !5281)
!5292 = !DILocation(line: 1815, column: 11, scope: !5281)
!5293 = !DILocation(line: 1816, column: 32, scope: !5281)
!5294 = !DILocation(line: 1816, column: 51, scope: !5281)
!5295 = !DILocation(line: 1816, column: 15, scope: !5281)
!5296 = !DILocation(line: 1816, column: 14, scope: !5281)
!5297 = !DILocation(line: 1818, column: 21, scope: !5281)
!5298 = !DILocation(line: 1818, column: 15, scope: !5281)
!5299 = !DILocation(line: 1818, column: 27, scope: !5281)
!5300 = !DILocation(line: 1818, column: 47, scope: !5281)
!5301 = !DILocation(line: 1818, column: 10, scope: !5281)
!5302 = !DILocation(line: 1818, column: 11, scope: !5281)
!5303 = !DILocation(line: 1819, column: 10, scope: !5281)
!5304 = !DILocation(line: 1820, column: 27, scope: !5281)
!5305 = !DILocation(line: 1820, column: 33, scope: !5281)
!5306 = !DILocation(line: 1820, column: 14, scope: !5281)
!5307 = !DILocation(line: 1820, column: 38, scope: !5281)
!5308 = !DILocation(line: 1820, column: 36, scope: !5281)
!5309 = !DILocation(line: 1820, column: 50, scope: !5281)
!5310 = !DILocation(line: 1820, column: 58, scope: !5281)
!5311 = !DILocation(line: 1820, column: 65, scope: !5281)
!5312 = !DILocation(line: 1820, column: 10, scope: !5281)
!5313 = !DILocation(line: 1820, column: 11, scope: !5281)
!5314 = !DILocation(line: 1821, column: 32, scope: !5281)
!5315 = !DILocation(line: 1821, column: 51, scope: !5281)
!5316 = !DILocation(line: 1821, column: 15, scope: !5281)
!5317 = !DILocation(line: 1821, column: 14, scope: !5281)
!5318 = !DILocation(line: 1823, column: 21, scope: !5281)
!5319 = !DILocation(line: 1823, column: 15, scope: !5281)
!5320 = !DILocation(line: 1823, column: 27, scope: !5281)
!5321 = !DILocation(line: 1823, column: 47, scope: !5281)
!5322 = !DILocation(line: 1823, column: 10, scope: !5281)
!5323 = !DILocation(line: 1823, column: 11, scope: !5281)
!5324 = !DILocation(line: 1824, column: 10, scope: !5281)
!5325 = !DILocation(line: 1825, column: 27, scope: !5281)
!5326 = !DILocation(line: 1825, column: 33, scope: !5281)
!5327 = !DILocation(line: 1825, column: 14, scope: !5281)
!5328 = !DILocation(line: 1825, column: 38, scope: !5281)
!5329 = !DILocation(line: 1825, column: 36, scope: !5281)
!5330 = !DILocation(line: 1825, column: 50, scope: !5281)
!5331 = !DILocation(line: 1825, column: 58, scope: !5281)
!5332 = !DILocation(line: 1825, column: 65, scope: !5281)
!5333 = !DILocation(line: 1825, column: 10, scope: !5281)
!5334 = !DILocation(line: 1825, column: 11, scope: !5281)
!5335 = !DILocation(line: 1826, column: 32, scope: !5281)
!5336 = !DILocation(line: 1826, column: 51, scope: !5281)
!5337 = !DILocation(line: 1826, column: 15, scope: !5281)
!5338 = !DILocation(line: 1826, column: 14, scope: !5281)
!5339 = !DILocation(line: 1828, column: 21, scope: !5281)
!5340 = !DILocation(line: 1828, column: 15, scope: !5281)
!5341 = !DILocation(line: 1828, column: 27, scope: !5281)
!5342 = !DILocation(line: 1828, column: 47, scope: !5281)
!5343 = !DILocation(line: 1828, column: 10, scope: !5281)
!5344 = !DILocation(line: 1828, column: 11, scope: !5281)
!5345 = !DILocation(line: 1829, column: 10, scope: !5281)
!5346 = !DILocation(line: 1830, column: 27, scope: !5281)
!5347 = !DILocation(line: 1830, column: 33, scope: !5281)
!5348 = !DILocation(line: 1830, column: 14, scope: !5281)
!5349 = !DILocation(line: 1830, column: 38, scope: !5281)
!5350 = !DILocation(line: 1830, column: 36, scope: !5281)
!5351 = !DILocation(line: 1830, column: 50, scope: !5281)
!5352 = !DILocation(line: 1830, column: 58, scope: !5281)
!5353 = !DILocation(line: 1830, column: 65, scope: !5281)
!5354 = !DILocation(line: 1830, column: 10, scope: !5281)
!5355 = !DILocation(line: 1830, column: 11, scope: !5281)
!5356 = !DILocation(line: 1831, column: 32, scope: !5281)
!5357 = !DILocation(line: 1831, column: 51, scope: !5281)
!5358 = !DILocation(line: 1831, column: 15, scope: !5281)
!5359 = !DILocation(line: 1831, column: 14, scope: !5281)
!5360 = !DILocation(line: 1833, column: 21, scope: !5281)
!5361 = !DILocation(line: 1833, column: 15, scope: !5281)
!5362 = !DILocation(line: 1833, column: 27, scope: !5281)
!5363 = !DILocation(line: 1833, column: 47, scope: !5281)
!5364 = !DILocation(line: 1833, column: 10, scope: !5281)
!5365 = !DILocation(line: 1833, column: 11, scope: !5281)
!5366 = !DILocation(line: 1834, column: 10, scope: !5281)
!5367 = !DILocation(line: 1835, column: 10, scope: !5281)
!5368 = !DILocation(line: 1836, column: 7, scope: !5281)
!5369 = !DILocation(line: 1812, column: 51, scope: !5277)
!5370 = !DILocation(line: 1812, column: 7, scope: !5277)
!5371 = distinct !{!5371, !5279, !5372}
!5372 = !DILocation(line: 1836, column: 7, scope: !5272)
!5373 = !DILocation(line: 1837, column: 12, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5250, file: !1, line: 1837, column: 11)
!5375 = !DILocation(line: 1837, column: 26, scope: !5374)
!5376 = !DILocation(line: 1837, column: 31, scope: !5374)
!5377 = !DILocation(line: 1837, column: 11, scope: !5250)
!5378 = !DILocation(line: 1839, column: 12, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5374, file: !1, line: 1838, column: 9)
!5380 = !DILocation(line: 1839, column: 13, scope: !5379)
!5381 = !DILocation(line: 1840, column: 19, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 1840, column: 11)
!5383 = !DILocation(line: 1840, column: 16, scope: !5382)
!5384 = !DILocation(line: 1840, column: 23, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5382, file: !1, line: 1840, column: 11)
!5386 = !DILocation(line: 1840, column: 41, scope: !5385)
!5387 = !DILocation(line: 1840, column: 55, scope: !5385)
!5388 = !DILocation(line: 1840, column: 27, scope: !5385)
!5389 = !DILocation(line: 1840, column: 11, scope: !5382)
!5390 = !DILocation(line: 1842, column: 31, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5385, file: !1, line: 1841, column: 11)
!5392 = !DILocation(line: 1842, column: 37, scope: !5391)
!5393 = !DILocation(line: 1842, column: 18, scope: !5391)
!5394 = !DILocation(line: 1842, column: 42, scope: !5391)
!5395 = !DILocation(line: 1842, column: 40, scope: !5391)
!5396 = !DILocation(line: 1842, column: 54, scope: !5391)
!5397 = !DILocation(line: 1842, column: 62, scope: !5391)
!5398 = !DILocation(line: 1843, column: 18, scope: !5391)
!5399 = !DILocation(line: 1843, column: 17, scope: !5391)
!5400 = !DILocation(line: 1842, column: 69, scope: !5391)
!5401 = !DILocation(line: 1842, column: 14, scope: !5391)
!5402 = !DILocation(line: 1842, column: 15, scope: !5391)
!5403 = !DILocation(line: 1844, column: 36, scope: !5391)
!5404 = !DILocation(line: 1844, column: 55, scope: !5391)
!5405 = !DILocation(line: 1844, column: 19, scope: !5391)
!5406 = !DILocation(line: 1844, column: 18, scope: !5391)
!5407 = !DILocation(line: 1846, column: 25, scope: !5391)
!5408 = !DILocation(line: 1846, column: 19, scope: !5391)
!5409 = !DILocation(line: 1846, column: 31, scope: !5391)
!5410 = !DILocation(line: 1846, column: 73, scope: !5391)
!5411 = !DILocation(line: 1846, column: 72, scope: !5391)
!5412 = !DILocation(line: 1846, column: 76, scope: !5391)
!5413 = !DILocation(line: 1846, column: 54, scope: !5391)
!5414 = !DILocation(line: 1846, column: 51, scope: !5391)
!5415 = !DILocation(line: 1846, column: 14, scope: !5391)
!5416 = !DILocation(line: 1846, column: 15, scope: !5391)
!5417 = !DILocation(line: 1847, column: 14, scope: !5391)
!5418 = !DILocation(line: 1848, column: 11, scope: !5391)
!5419 = !DILocation(line: 1840, column: 64, scope: !5385)
!5420 = !DILocation(line: 1840, column: 11, scope: !5385)
!5421 = distinct !{!5421, !5389, !5422}
!5422 = !DILocation(line: 1848, column: 11, scope: !5382)
!5423 = !DILocation(line: 1849, column: 12, scope: !5379)
!5424 = !DILocation(line: 1850, column: 9, scope: !5379)
!5425 = !DILocation(line: 1851, column: 7, scope: !5250)
!5426 = !DILocalVariable(name: "pixel", scope: !5427, file: !1, line: 1856, type: !437)
!5427 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1854, column: 5)
!5428 = !DILocation(line: 1856, column: 9, scope: !5427)
!5429 = !DILocation(line: 1858, column: 13, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !1, line: 1858, column: 7)
!5431 = !DILocation(line: 1858, column: 12, scope: !5430)
!5432 = !DILocation(line: 1858, column: 17, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 1858, column: 7)
!5434 = !DILocation(line: 1858, column: 31, scope: !5433)
!5435 = !DILocation(line: 1858, column: 19, scope: !5433)
!5436 = !DILocation(line: 1858, column: 7, scope: !5430)
!5437 = !DILocation(line: 1860, column: 62, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5433, file: !1, line: 1859, column: 7)
!5439 = !DILocation(line: 1860, column: 68, scope: !5438)
!5440 = !DILocation(line: 1860, column: 49, scope: !5438)
!5441 = !DILocation(line: 1860, column: 34, scope: !5438)
!5442 = !DILocation(line: 1860, column: 15, scope: !5438)
!5443 = !DILocation(line: 1860, column: 14, scope: !5438)
!5444 = !DILocation(line: 1861, column: 15, scope: !5438)
!5445 = !DILocation(line: 1861, column: 21, scope: !5438)
!5446 = !DILocation(line: 1861, column: 27, scope: !5438)
!5447 = !DILocation(line: 1861, column: 34, scope: !5438)
!5448 = !DILocation(line: 1861, column: 12, scope: !5438)
!5449 = !DILocation(line: 1861, column: 10, scope: !5438)
!5450 = !DILocation(line: 1861, column: 11, scope: !5438)
!5451 = !DILocation(line: 1863, column: 11, scope: !5438)
!5452 = !DILocation(line: 1862, column: 72, scope: !5438)
!5453 = !DILocation(line: 1862, column: 49, scope: !5438)
!5454 = !DILocation(line: 1862, column: 48, scope: !5438)
!5455 = !DILocation(line: 1862, column: 47, scope: !5438)
!5456 = !DILocation(line: 1863, column: 31, scope: !5438)
!5457 = !DILocation(line: 1862, column: 15, scope: !5438)
!5458 = !DILocation(line: 1862, column: 14, scope: !5438)
!5459 = !DILocation(line: 1864, column: 13, scope: !5438)
!5460 = !DILocation(line: 1864, column: 19, scope: !5438)
!5461 = !DILocation(line: 1864, column: 10, scope: !5438)
!5462 = !DILocation(line: 1864, column: 11, scope: !5438)
!5463 = !DILocation(line: 1865, column: 10, scope: !5438)
!5464 = !DILocation(line: 1866, column: 10, scope: !5438)
!5465 = !DILocation(line: 1867, column: 7, scope: !5438)
!5466 = !DILocation(line: 1858, column: 48, scope: !5433)
!5467 = !DILocation(line: 1858, column: 7, scope: !5433)
!5468 = distinct !{!5468, !5436, !5469}
!5469 = !DILocation(line: 1867, column: 7, scope: !5430)
!5470 = !DILocation(line: 1868, column: 7, scope: !5427)
!5471 = !DILocalVariable(name: "pixel", scope: !5472, file: !1, line: 1873, type: !437)
!5472 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1871, column: 5)
!5473 = !DILocation(line: 1873, column: 9, scope: !5472)
!5474 = !DILocation(line: 1875, column: 13, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 1875, column: 7)
!5476 = !DILocation(line: 1875, column: 12, scope: !5475)
!5477 = !DILocation(line: 1875, column: 17, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 1875, column: 7)
!5479 = !DILocation(line: 1875, column: 31, scope: !5478)
!5480 = !DILocation(line: 1875, column: 19, scope: !5478)
!5481 = !DILocation(line: 1875, column: 7, scope: !5475)
!5482 = !DILocation(line: 1877, column: 62, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !1, line: 1876, column: 7)
!5484 = !DILocation(line: 1877, column: 68, scope: !5483)
!5485 = !DILocation(line: 1877, column: 49, scope: !5483)
!5486 = !DILocation(line: 1877, column: 34, scope: !5483)
!5487 = !DILocation(line: 1877, column: 15, scope: !5483)
!5488 = !DILocation(line: 1877, column: 14, scope: !5483)
!5489 = !DILocation(line: 1878, column: 24, scope: !5483)
!5490 = !DILocation(line: 1878, column: 30, scope: !5483)
!5491 = !DILocation(line: 1878, column: 11, scope: !5483)
!5492 = !DILocation(line: 1878, column: 10, scope: !5483)
!5493 = !DILocation(line: 1879, column: 58, scope: !5483)
!5494 = !DILocation(line: 1879, column: 57, scope: !5483)
!5495 = !DILocation(line: 1879, column: 34, scope: !5483)
!5496 = !DILocation(line: 1879, column: 15, scope: !5483)
!5497 = !DILocation(line: 1879, column: 14, scope: !5483)
!5498 = !DILocation(line: 1880, column: 24, scope: !5483)
!5499 = !DILocation(line: 1880, column: 30, scope: !5483)
!5500 = !DILocation(line: 1880, column: 11, scope: !5483)
!5501 = !DILocation(line: 1880, column: 10, scope: !5483)
!5502 = !DILocation(line: 1881, column: 10, scope: !5483)
!5503 = !DILocation(line: 1882, column: 12, scope: !5483)
!5504 = !DILocation(line: 1882, column: 26, scope: !5483)
!5505 = !DILocation(line: 1882, column: 10, scope: !5483)
!5506 = !DILocation(line: 1883, column: 7, scope: !5483)
!5507 = !DILocation(line: 1875, column: 47, scope: !5478)
!5508 = !DILocation(line: 1875, column: 7, scope: !5478)
!5509 = distinct !{!5509, !5481, !5510}
!5510 = !DILocation(line: 1883, column: 7, scope: !5475)
!5511 = !DILocation(line: 1884, column: 7, scope: !5472)
!5512 = !DILocalVariable(name: "pixel", scope: !5513, file: !1, line: 1889, type: !449)
!5513 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1887, column: 5)
!5514 = !DILocation(line: 1889, column: 9, scope: !5513)
!5515 = !DILocation(line: 1891, column: 11, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5513, file: !1, line: 1891, column: 11)
!5517 = !DILocation(line: 1891, column: 25, scope: !5516)
!5518 = !DILocation(line: 1891, column: 32, scope: !5516)
!5519 = !DILocation(line: 1891, column: 11, scope: !5513)
!5520 = !DILocation(line: 1893, column: 17, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 1893, column: 11)
!5522 = distinct !DILexicalBlock(scope: !5516, file: !1, line: 1892, column: 9)
!5523 = !DILocation(line: 1893, column: 16, scope: !5521)
!5524 = !DILocation(line: 1893, column: 21, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 1893, column: 11)
!5526 = !DILocation(line: 1893, column: 35, scope: !5525)
!5527 = !DILocation(line: 1893, column: 23, scope: !5525)
!5528 = !DILocation(line: 1893, column: 11, scope: !5521)
!5529 = !DILocation(line: 1895, column: 67, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5525, file: !1, line: 1894, column: 11)
!5531 = !DILocation(line: 1895, column: 73, scope: !5530)
!5532 = !DILocation(line: 1895, column: 54, scope: !5530)
!5533 = !DILocation(line: 1895, column: 53, scope: !5530)
!5534 = !DILocation(line: 1895, column: 41, scope: !5530)
!5535 = !DILocation(line: 1895, column: 19, scope: !5530)
!5536 = !DILocation(line: 1895, column: 18, scope: !5530)
!5537 = !DILocation(line: 1896, column: 29, scope: !5530)
!5538 = !DILocation(line: 1896, column: 43, scope: !5530)
!5539 = !DILocation(line: 1896, column: 50, scope: !5530)
!5540 = !DILocation(line: 1896, column: 56, scope: !5530)
!5541 = !DILocation(line: 1896, column: 15, scope: !5530)
!5542 = !DILocation(line: 1896, column: 14, scope: !5530)
!5543 = !DILocation(line: 1897, column: 54, scope: !5530)
!5544 = !DILocation(line: 1897, column: 53, scope: !5530)
!5545 = !DILocation(line: 1897, column: 41, scope: !5530)
!5546 = !DILocation(line: 1897, column: 19, scope: !5530)
!5547 = !DILocation(line: 1897, column: 18, scope: !5530)
!5548 = !DILocation(line: 1898, column: 29, scope: !5530)
!5549 = !DILocation(line: 1898, column: 43, scope: !5530)
!5550 = !DILocation(line: 1898, column: 50, scope: !5530)
!5551 = !DILocation(line: 1898, column: 56, scope: !5530)
!5552 = !DILocation(line: 1898, column: 15, scope: !5530)
!5553 = !DILocation(line: 1898, column: 14, scope: !5530)
!5554 = !DILocation(line: 1899, column: 14, scope: !5530)
!5555 = !DILocation(line: 1900, column: 16, scope: !5530)
!5556 = !DILocation(line: 1900, column: 30, scope: !5530)
!5557 = !DILocation(line: 1900, column: 14, scope: !5530)
!5558 = !DILocation(line: 1901, column: 11, scope: !5530)
!5559 = !DILocation(line: 1893, column: 51, scope: !5525)
!5560 = !DILocation(line: 1893, column: 11, scope: !5525)
!5561 = distinct !{!5561, !5528, !5562}
!5562 = !DILocation(line: 1901, column: 11, scope: !5521)
!5563 = !DILocation(line: 1902, column: 11, scope: !5522)
!5564 = !DILocation(line: 1904, column: 13, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5513, file: !1, line: 1904, column: 7)
!5566 = !DILocation(line: 1904, column: 12, scope: !5565)
!5567 = !DILocation(line: 1904, column: 17, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5565, file: !1, line: 1904, column: 7)
!5569 = !DILocation(line: 1904, column: 31, scope: !5568)
!5570 = !DILocation(line: 1904, column: 19, scope: !5568)
!5571 = !DILocation(line: 1904, column: 7, scope: !5565)
!5572 = !DILocation(line: 1906, column: 63, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5568, file: !1, line: 1905, column: 7)
!5574 = !DILocation(line: 1906, column: 69, scope: !5573)
!5575 = !DILocation(line: 1906, column: 50, scope: !5573)
!5576 = !DILocation(line: 1906, column: 35, scope: !5573)
!5577 = !DILocation(line: 1906, column: 15, scope: !5573)
!5578 = !DILocation(line: 1906, column: 14, scope: !5573)
!5579 = !DILocation(line: 1907, column: 25, scope: !5573)
!5580 = !DILocation(line: 1907, column: 39, scope: !5573)
!5581 = !DILocation(line: 1907, column: 46, scope: !5573)
!5582 = !DILocation(line: 1907, column: 52, scope: !5573)
!5583 = !DILocation(line: 1907, column: 11, scope: !5573)
!5584 = !DILocation(line: 1907, column: 10, scope: !5573)
!5585 = !DILocation(line: 1908, column: 59, scope: !5573)
!5586 = !DILocation(line: 1908, column: 58, scope: !5573)
!5587 = !DILocation(line: 1908, column: 35, scope: !5573)
!5588 = !DILocation(line: 1908, column: 15, scope: !5573)
!5589 = !DILocation(line: 1908, column: 14, scope: !5573)
!5590 = !DILocation(line: 1909, column: 25, scope: !5573)
!5591 = !DILocation(line: 1909, column: 39, scope: !5573)
!5592 = !DILocation(line: 1909, column: 46, scope: !5573)
!5593 = !DILocation(line: 1909, column: 52, scope: !5573)
!5594 = !DILocation(line: 1909, column: 11, scope: !5573)
!5595 = !DILocation(line: 1909, column: 10, scope: !5573)
!5596 = !DILocation(line: 1910, column: 10, scope: !5573)
!5597 = !DILocation(line: 1911, column: 12, scope: !5573)
!5598 = !DILocation(line: 1911, column: 26, scope: !5573)
!5599 = !DILocation(line: 1911, column: 10, scope: !5573)
!5600 = !DILocation(line: 1912, column: 7, scope: !5573)
!5601 = !DILocation(line: 1904, column: 47, scope: !5568)
!5602 = !DILocation(line: 1904, column: 7, scope: !5568)
!5603 = distinct !{!5603, !5571, !5604}
!5604 = !DILocation(line: 1912, column: 7, scope: !5565)
!5605 = !DILocation(line: 1913, column: 7, scope: !5513)
!5606 = !DILocalVariable(name: "pixel", scope: !5607, file: !1, line: 1918, type: !5)
!5607 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1916, column: 5)
!5608 = !DILocation(line: 1918, column: 9, scope: !5607)
!5609 = !DILocation(line: 1920, column: 11, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5607, file: !1, line: 1920, column: 11)
!5611 = !DILocation(line: 1920, column: 25, scope: !5610)
!5612 = !DILocation(line: 1920, column: 32, scope: !5610)
!5613 = !DILocation(line: 1920, column: 11, scope: !5607)
!5614 = !DILocation(line: 1922, column: 17, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5616, file: !1, line: 1922, column: 11)
!5616 = distinct !DILexicalBlock(scope: !5610, file: !1, line: 1921, column: 9)
!5617 = !DILocation(line: 1922, column: 16, scope: !5615)
!5618 = !DILocation(line: 1922, column: 21, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !1, line: 1922, column: 11)
!5620 = !DILocation(line: 1922, column: 35, scope: !5619)
!5621 = !DILocation(line: 1922, column: 23, scope: !5619)
!5622 = !DILocation(line: 1922, column: 11, scope: !5615)
!5623 = !DILocalVariable(name: "pixel", scope: !5624, file: !1, line: 1925, type: !502)
!5624 = distinct !DILexicalBlock(scope: !5619, file: !1, line: 1923, column: 11)
!5625 = !DILocation(line: 1925, column: 15, scope: !5624)
!5626 = !DILocation(line: 1927, column: 40, scope: !5624)
!5627 = !DILocation(line: 1927, column: 46, scope: !5624)
!5628 = !DILocation(line: 1927, column: 27, scope: !5624)
!5629 = !DILocation(line: 1927, column: 18, scope: !5624)
!5630 = !DILocation(line: 1928, column: 29, scope: !5624)
!5631 = !DILocation(line: 1928, column: 42, scope: !5624)
!5632 = !DILocation(line: 1928, column: 48, scope: !5624)
!5633 = !DILocation(line: 1928, column: 15, scope: !5624)
!5634 = !DILocation(line: 1928, column: 14, scope: !5624)
!5635 = !DILocation(line: 1929, column: 28, scope: !5624)
!5636 = !DILocation(line: 1929, column: 19, scope: !5624)
!5637 = !DILocation(line: 1929, column: 18, scope: !5624)
!5638 = !DILocation(line: 1930, column: 29, scope: !5624)
!5639 = !DILocation(line: 1930, column: 42, scope: !5624)
!5640 = !DILocation(line: 1930, column: 48, scope: !5624)
!5641 = !DILocation(line: 1930, column: 15, scope: !5624)
!5642 = !DILocation(line: 1930, column: 14, scope: !5624)
!5643 = !DILocation(line: 1931, column: 14, scope: !5624)
!5644 = !DILocation(line: 1932, column: 16, scope: !5624)
!5645 = !DILocation(line: 1932, column: 30, scope: !5624)
!5646 = !DILocation(line: 1932, column: 14, scope: !5624)
!5647 = !DILocation(line: 1933, column: 11, scope: !5624)
!5648 = !DILocation(line: 1922, column: 51, scope: !5619)
!5649 = !DILocation(line: 1922, column: 11, scope: !5619)
!5650 = distinct !{!5650, !5622, !5651}
!5651 = !DILocation(line: 1933, column: 11, scope: !5615)
!5652 = !DILocation(line: 1934, column: 11, scope: !5616)
!5653 = !DILocation(line: 1936, column: 13, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5607, file: !1, line: 1936, column: 7)
!5655 = !DILocation(line: 1936, column: 12, scope: !5654)
!5656 = !DILocation(line: 1936, column: 17, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5654, file: !1, line: 1936, column: 7)
!5658 = !DILocation(line: 1936, column: 31, scope: !5657)
!5659 = !DILocation(line: 1936, column: 19, scope: !5657)
!5660 = !DILocation(line: 1936, column: 7, scope: !5654)
!5661 = !DILocation(line: 1938, column: 62, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5657, file: !1, line: 1937, column: 7)
!5663 = !DILocation(line: 1938, column: 68, scope: !5662)
!5664 = !DILocation(line: 1938, column: 49, scope: !5662)
!5665 = !DILocation(line: 1938, column: 34, scope: !5662)
!5666 = !DILocation(line: 1938, column: 15, scope: !5662)
!5667 = !DILocation(line: 1938, column: 14, scope: !5662)
!5668 = !DILocation(line: 1939, column: 24, scope: !5662)
!5669 = !DILocation(line: 1939, column: 38, scope: !5662)
!5670 = !DILocation(line: 1939, column: 45, scope: !5662)
!5671 = !DILocation(line: 1939, column: 51, scope: !5662)
!5672 = !DILocation(line: 1939, column: 11, scope: !5662)
!5673 = !DILocation(line: 1939, column: 10, scope: !5662)
!5674 = !DILocation(line: 1940, column: 58, scope: !5662)
!5675 = !DILocation(line: 1940, column: 57, scope: !5662)
!5676 = !DILocation(line: 1940, column: 34, scope: !5662)
!5677 = !DILocation(line: 1940, column: 15, scope: !5662)
!5678 = !DILocation(line: 1940, column: 14, scope: !5662)
!5679 = !DILocation(line: 1941, column: 24, scope: !5662)
!5680 = !DILocation(line: 1941, column: 38, scope: !5662)
!5681 = !DILocation(line: 1941, column: 45, scope: !5662)
!5682 = !DILocation(line: 1941, column: 51, scope: !5662)
!5683 = !DILocation(line: 1941, column: 11, scope: !5662)
!5684 = !DILocation(line: 1941, column: 10, scope: !5662)
!5685 = !DILocation(line: 1942, column: 10, scope: !5662)
!5686 = !DILocation(line: 1943, column: 12, scope: !5662)
!5687 = !DILocation(line: 1943, column: 26, scope: !5662)
!5688 = !DILocation(line: 1943, column: 10, scope: !5662)
!5689 = !DILocation(line: 1944, column: 7, scope: !5662)
!5690 = !DILocation(line: 1936, column: 47, scope: !5657)
!5691 = !DILocation(line: 1936, column: 7, scope: !5657)
!5692 = distinct !{!5692, !5660, !5693}
!5693 = !DILocation(line: 1944, column: 7, scope: !5654)
!5694 = !DILocation(line: 1945, column: 7, scope: !5607)
!5695 = !DILocation(line: 1949, column: 11, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5697, file: !1, line: 1949, column: 11)
!5697 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1948, column: 5)
!5698 = !DILocation(line: 1949, column: 25, scope: !5696)
!5699 = !DILocation(line: 1949, column: 32, scope: !5696)
!5700 = !DILocation(line: 1949, column: 11, scope: !5697)
!5701 = !DILocation(line: 1951, column: 17, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !1, line: 1951, column: 11)
!5703 = distinct !DILexicalBlock(scope: !5696, file: !1, line: 1950, column: 9)
!5704 = !DILocation(line: 1951, column: 16, scope: !5702)
!5705 = !DILocation(line: 1951, column: 21, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5702, file: !1, line: 1951, column: 11)
!5707 = !DILocation(line: 1951, column: 35, scope: !5706)
!5708 = !DILocation(line: 1951, column: 23, scope: !5706)
!5709 = !DILocation(line: 1951, column: 11, scope: !5702)
!5710 = !DILocalVariable(name: "pixel", scope: !5711, file: !1, line: 1954, type: !458)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !1, line: 1952, column: 11)
!5712 = !DILocation(line: 1954, column: 15, scope: !5711)
!5713 = !DILocation(line: 1956, column: 41, scope: !5711)
!5714 = !DILocation(line: 1956, column: 47, scope: !5711)
!5715 = !DILocation(line: 1956, column: 28, scope: !5711)
!5716 = !DILocation(line: 1956, column: 19, scope: !5711)
!5717 = !DILocation(line: 1956, column: 18, scope: !5711)
!5718 = !DILocation(line: 1957, column: 30, scope: !5711)
!5719 = !DILocation(line: 1957, column: 43, scope: !5711)
!5720 = !DILocation(line: 1957, column: 49, scope: !5711)
!5721 = !DILocation(line: 1957, column: 15, scope: !5711)
!5722 = !DILocation(line: 1957, column: 14, scope: !5711)
!5723 = !DILocation(line: 1958, column: 29, scope: !5711)
!5724 = !DILocation(line: 1958, column: 19, scope: !5711)
!5725 = !DILocation(line: 1958, column: 18, scope: !5711)
!5726 = !DILocation(line: 1959, column: 30, scope: !5711)
!5727 = !DILocation(line: 1959, column: 43, scope: !5711)
!5728 = !DILocation(line: 1959, column: 49, scope: !5711)
!5729 = !DILocation(line: 1959, column: 15, scope: !5711)
!5730 = !DILocation(line: 1959, column: 14, scope: !5711)
!5731 = !DILocation(line: 1960, column: 14, scope: !5711)
!5732 = !DILocation(line: 1961, column: 16, scope: !5711)
!5733 = !DILocation(line: 1961, column: 30, scope: !5711)
!5734 = !DILocation(line: 1961, column: 14, scope: !5711)
!5735 = !DILocation(line: 1962, column: 11, scope: !5711)
!5736 = !DILocation(line: 1951, column: 51, scope: !5706)
!5737 = !DILocation(line: 1951, column: 11, scope: !5706)
!5738 = distinct !{!5738, !5709, !5739}
!5739 = !DILocation(line: 1962, column: 11, scope: !5702)
!5740 = !DILocation(line: 1963, column: 11, scope: !5703)
!5741 = !DILocation(line: 1965, column: 5, scope: !5697)
!5742 = !DILocation(line: 1968, column: 29, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1967, column: 5)
!5744 = !DILocation(line: 1968, column: 43, scope: !5743)
!5745 = !DILocation(line: 1968, column: 13, scope: !5743)
!5746 = !DILocation(line: 1968, column: 12, scope: !5743)
!5747 = !DILocation(line: 1969, column: 13, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !1, line: 1969, column: 7)
!5749 = !DILocation(line: 1969, column: 12, scope: !5748)
!5750 = !DILocation(line: 1969, column: 17, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 1969, column: 7)
!5752 = !DILocation(line: 1969, column: 31, scope: !5751)
!5753 = !DILocation(line: 1969, column: 19, scope: !5751)
!5754 = !DILocation(line: 1969, column: 7, scope: !5748)
!5755 = !DILocation(line: 1971, column: 27, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5751, file: !1, line: 1970, column: 7)
!5757 = !DILocation(line: 1972, column: 57, scope: !5756)
!5758 = !DILocation(line: 1972, column: 63, scope: !5756)
!5759 = !DILocation(line: 1972, column: 44, scope: !5756)
!5760 = !DILocation(line: 1972, column: 29, scope: !5756)
!5761 = !DILocation(line: 1972, column: 67, scope: !5756)
!5762 = !DILocation(line: 1972, column: 11, scope: !5756)
!5763 = !DILocation(line: 1972, column: 74, scope: !5756)
!5764 = !DILocation(line: 1971, column: 11, scope: !5756)
!5765 = !DILocation(line: 1971, column: 10, scope: !5756)
!5766 = !DILocation(line: 1973, column: 27, scope: !5756)
!5767 = !DILocation(line: 1974, column: 40, scope: !5756)
!5768 = !DILocation(line: 1974, column: 29, scope: !5756)
!5769 = !DILocation(line: 1974, column: 58, scope: !5756)
!5770 = !DILocation(line: 1974, column: 11, scope: !5756)
!5771 = !DILocation(line: 1974, column: 65, scope: !5756)
!5772 = !DILocation(line: 1973, column: 11, scope: !5756)
!5773 = !DILocation(line: 1973, column: 10, scope: !5756)
!5774 = !DILocation(line: 1975, column: 10, scope: !5756)
!5775 = !DILocation(line: 1976, column: 12, scope: !5756)
!5776 = !DILocation(line: 1976, column: 26, scope: !5756)
!5777 = !DILocation(line: 1976, column: 10, scope: !5756)
!5778 = !DILocation(line: 1977, column: 7, scope: !5756)
!5779 = !DILocation(line: 1969, column: 47, scope: !5751)
!5780 = !DILocation(line: 1969, column: 7, scope: !5751)
!5781 = distinct !{!5781, !5754, !5782}
!5782 = !DILocation(line: 1977, column: 7, scope: !5748)
!5783 = !DILocation(line: 1978, column: 7, scope: !5743)
!5784 = !DILocation(line: 1981, column: 1, scope: !5229)
!5785 = distinct !DISubprogram(name: "ExportGreenQuantum", scope: !1, file: !1, line: 1983, type: !1182, scopeLine: 1986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5786 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !5785, file: !1, line: 1983, type: !459)
!5787 = !DILocation(line: 1983, column: 45, scope: !5785)
!5788 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !5785, file: !1, line: 1984, type: !637)
!5789 = !DILocation(line: 1984, column: 24, scope: !5785)
!5790 = !DILocalVariable(name: "p", arg: 3, scope: !5785, file: !1, line: 1984, type: !740)
!5791 = !DILocation(line: 1984, column: 66, scope: !5785)
!5792 = !DILocalVariable(name: "q", arg: 4, scope: !5785, file: !1, line: 1985, type: !717)
!5793 = !DILocation(line: 1985, column: 27, scope: !5785)
!5794 = !DILocalVariable(name: "range", scope: !5785, file: !1, line: 1988, type: !508)
!5795 = !DILocation(line: 1988, column: 5, scope: !5785)
!5796 = !DILocalVariable(name: "x", scope: !5785, file: !1, line: 1991, type: !453)
!5797 = !DILocation(line: 1991, column: 5, scope: !5785)
!5798 = !DILocation(line: 1993, column: 11, scope: !5785)
!5799 = !DILocation(line: 1993, column: 25, scope: !5785)
!5800 = !DILocation(line: 1993, column: 3, scope: !5785)
!5801 = !DILocalVariable(name: "pixel", scope: !5802, file: !1, line: 1998, type: !437)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 1996, column: 5)
!5803 = distinct !DILexicalBlock(scope: !5785, file: !1, line: 1994, column: 3)
!5804 = !DILocation(line: 1998, column: 9, scope: !5802)
!5805 = !DILocation(line: 2000, column: 13, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !1, line: 2000, column: 7)
!5807 = !DILocation(line: 2000, column: 12, scope: !5806)
!5808 = !DILocation(line: 2000, column: 17, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !1, line: 2000, column: 7)
!5810 = !DILocation(line: 2000, column: 31, scope: !5809)
!5811 = !DILocation(line: 2000, column: 19, scope: !5809)
!5812 = !DILocation(line: 2000, column: 7, scope: !5806)
!5813 = !DILocation(line: 2002, column: 34, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 2001, column: 7)
!5815 = !DILocation(line: 2002, column: 15, scope: !5814)
!5816 = !DILocation(line: 2002, column: 14, scope: !5814)
!5817 = !DILocation(line: 2003, column: 24, scope: !5814)
!5818 = !DILocation(line: 2003, column: 30, scope: !5814)
!5819 = !DILocation(line: 2003, column: 11, scope: !5814)
!5820 = !DILocation(line: 2003, column: 10, scope: !5814)
!5821 = !DILocation(line: 2004, column: 10, scope: !5814)
!5822 = !DILocation(line: 2005, column: 12, scope: !5814)
!5823 = !DILocation(line: 2005, column: 26, scope: !5814)
!5824 = !DILocation(line: 2005, column: 10, scope: !5814)
!5825 = !DILocation(line: 2006, column: 7, scope: !5814)
!5826 = !DILocation(line: 2000, column: 47, scope: !5809)
!5827 = !DILocation(line: 2000, column: 7, scope: !5809)
!5828 = distinct !{!5828, !5812, !5829}
!5829 = !DILocation(line: 2006, column: 7, scope: !5806)
!5830 = !DILocation(line: 2007, column: 7, scope: !5802)
!5831 = !DILocalVariable(name: "pixel", scope: !5832, file: !1, line: 2012, type: !449)
!5832 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 2010, column: 5)
!5833 = !DILocation(line: 2012, column: 9, scope: !5832)
!5834 = !DILocation(line: 2014, column: 11, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !1, line: 2014, column: 11)
!5836 = !DILocation(line: 2014, column: 25, scope: !5835)
!5837 = !DILocation(line: 2014, column: 32, scope: !5835)
!5838 = !DILocation(line: 2014, column: 11, scope: !5832)
!5839 = !DILocation(line: 2016, column: 17, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !1, line: 2016, column: 11)
!5841 = distinct !DILexicalBlock(scope: !5835, file: !1, line: 2015, column: 9)
!5842 = !DILocation(line: 2016, column: 16, scope: !5840)
!5843 = !DILocation(line: 2016, column: 21, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5840, file: !1, line: 2016, column: 11)
!5845 = !DILocation(line: 2016, column: 35, scope: !5844)
!5846 = !DILocation(line: 2016, column: 23, scope: !5844)
!5847 = !DILocation(line: 2016, column: 11, scope: !5840)
!5848 = !DILocation(line: 2018, column: 54, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5844, file: !1, line: 2017, column: 11)
!5850 = !DILocation(line: 2018, column: 53, scope: !5849)
!5851 = !DILocation(line: 2018, column: 41, scope: !5849)
!5852 = !DILocation(line: 2018, column: 19, scope: !5849)
!5853 = !DILocation(line: 2018, column: 18, scope: !5849)
!5854 = !DILocation(line: 2019, column: 29, scope: !5849)
!5855 = !DILocation(line: 2019, column: 43, scope: !5849)
!5856 = !DILocation(line: 2019, column: 50, scope: !5849)
!5857 = !DILocation(line: 2019, column: 56, scope: !5849)
!5858 = !DILocation(line: 2019, column: 15, scope: !5849)
!5859 = !DILocation(line: 2019, column: 14, scope: !5849)
!5860 = !DILocation(line: 2020, column: 14, scope: !5849)
!5861 = !DILocation(line: 2021, column: 16, scope: !5849)
!5862 = !DILocation(line: 2021, column: 30, scope: !5849)
!5863 = !DILocation(line: 2021, column: 14, scope: !5849)
!5864 = !DILocation(line: 2022, column: 11, scope: !5849)
!5865 = !DILocation(line: 2016, column: 51, scope: !5844)
!5866 = !DILocation(line: 2016, column: 11, scope: !5844)
!5867 = distinct !{!5867, !5847, !5868}
!5868 = !DILocation(line: 2022, column: 11, scope: !5840)
!5869 = !DILocation(line: 2023, column: 11, scope: !5841)
!5870 = !DILocation(line: 2025, column: 13, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5832, file: !1, line: 2025, column: 7)
!5872 = !DILocation(line: 2025, column: 12, scope: !5871)
!5873 = !DILocation(line: 2025, column: 17, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !1, line: 2025, column: 7)
!5875 = !DILocation(line: 2025, column: 31, scope: !5874)
!5876 = !DILocation(line: 2025, column: 19, scope: !5874)
!5877 = !DILocation(line: 2025, column: 7, scope: !5871)
!5878 = !DILocation(line: 2027, column: 35, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 2026, column: 7)
!5880 = !DILocation(line: 2027, column: 15, scope: !5879)
!5881 = !DILocation(line: 2027, column: 14, scope: !5879)
!5882 = !DILocation(line: 2028, column: 25, scope: !5879)
!5883 = !DILocation(line: 2028, column: 39, scope: !5879)
!5884 = !DILocation(line: 2028, column: 46, scope: !5879)
!5885 = !DILocation(line: 2028, column: 52, scope: !5879)
!5886 = !DILocation(line: 2028, column: 11, scope: !5879)
!5887 = !DILocation(line: 2028, column: 10, scope: !5879)
!5888 = !DILocation(line: 2029, column: 10, scope: !5879)
!5889 = !DILocation(line: 2030, column: 12, scope: !5879)
!5890 = !DILocation(line: 2030, column: 26, scope: !5879)
!5891 = !DILocation(line: 2030, column: 10, scope: !5879)
!5892 = !DILocation(line: 2031, column: 7, scope: !5879)
!5893 = !DILocation(line: 2025, column: 47, scope: !5874)
!5894 = !DILocation(line: 2025, column: 7, scope: !5874)
!5895 = distinct !{!5895, !5877, !5896}
!5896 = !DILocation(line: 2031, column: 7, scope: !5871)
!5897 = !DILocation(line: 2032, column: 7, scope: !5832)
!5898 = !DILocalVariable(name: "pixel", scope: !5899, file: !1, line: 2037, type: !5)
!5899 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 2035, column: 5)
!5900 = !DILocation(line: 2037, column: 9, scope: !5899)
!5901 = !DILocation(line: 2039, column: 11, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5899, file: !1, line: 2039, column: 11)
!5903 = !DILocation(line: 2039, column: 25, scope: !5902)
!5904 = !DILocation(line: 2039, column: 32, scope: !5902)
!5905 = !DILocation(line: 2039, column: 11, scope: !5899)
!5906 = !DILocation(line: 2041, column: 17, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !1, line: 2041, column: 11)
!5908 = distinct !DILexicalBlock(scope: !5902, file: !1, line: 2040, column: 9)
!5909 = !DILocation(line: 2041, column: 16, scope: !5907)
!5910 = !DILocation(line: 2041, column: 21, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5907, file: !1, line: 2041, column: 11)
!5912 = !DILocation(line: 2041, column: 35, scope: !5911)
!5913 = !DILocation(line: 2041, column: 23, scope: !5911)
!5914 = !DILocation(line: 2041, column: 11, scope: !5907)
!5915 = !DILocation(line: 2043, column: 29, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5911, file: !1, line: 2042, column: 11)
!5917 = !DILocation(line: 2043, column: 50, scope: !5916)
!5918 = !DILocation(line: 2043, column: 42, scope: !5916)
!5919 = !DILocation(line: 2043, column: 67, scope: !5916)
!5920 = !DILocation(line: 2043, column: 15, scope: !5916)
!5921 = !DILocation(line: 2043, column: 14, scope: !5916)
!5922 = !DILocation(line: 2044, column: 14, scope: !5916)
!5923 = !DILocation(line: 2045, column: 16, scope: !5916)
!5924 = !DILocation(line: 2045, column: 30, scope: !5916)
!5925 = !DILocation(line: 2045, column: 14, scope: !5916)
!5926 = !DILocation(line: 2046, column: 11, scope: !5916)
!5927 = !DILocation(line: 2041, column: 51, scope: !5911)
!5928 = !DILocation(line: 2041, column: 11, scope: !5911)
!5929 = distinct !{!5929, !5914, !5930}
!5930 = !DILocation(line: 2046, column: 11, scope: !5907)
!5931 = !DILocation(line: 2047, column: 11, scope: !5908)
!5932 = !DILocation(line: 2049, column: 13, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5899, file: !1, line: 2049, column: 7)
!5934 = !DILocation(line: 2049, column: 12, scope: !5933)
!5935 = !DILocation(line: 2049, column: 17, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5933, file: !1, line: 2049, column: 7)
!5937 = !DILocation(line: 2049, column: 31, scope: !5936)
!5938 = !DILocation(line: 2049, column: 19, scope: !5936)
!5939 = !DILocation(line: 2049, column: 7, scope: !5933)
!5940 = !DILocation(line: 2051, column: 34, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5936, file: !1, line: 2050, column: 7)
!5942 = !DILocation(line: 2051, column: 15, scope: !5941)
!5943 = !DILocation(line: 2051, column: 14, scope: !5941)
!5944 = !DILocation(line: 2052, column: 24, scope: !5941)
!5945 = !DILocation(line: 2052, column: 38, scope: !5941)
!5946 = !DILocation(line: 2052, column: 45, scope: !5941)
!5947 = !DILocation(line: 2052, column: 51, scope: !5941)
!5948 = !DILocation(line: 2052, column: 11, scope: !5941)
!5949 = !DILocation(line: 2052, column: 10, scope: !5941)
!5950 = !DILocation(line: 2053, column: 10, scope: !5941)
!5951 = !DILocation(line: 2054, column: 12, scope: !5941)
!5952 = !DILocation(line: 2054, column: 26, scope: !5941)
!5953 = !DILocation(line: 2054, column: 10, scope: !5941)
!5954 = !DILocation(line: 2055, column: 7, scope: !5941)
!5955 = !DILocation(line: 2049, column: 47, scope: !5936)
!5956 = !DILocation(line: 2049, column: 7, scope: !5936)
!5957 = distinct !{!5957, !5939, !5958}
!5958 = !DILocation(line: 2055, column: 7, scope: !5933)
!5959 = !DILocation(line: 2056, column: 7, scope: !5899)
!5960 = !DILocation(line: 2060, column: 11, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !1, line: 2060, column: 11)
!5962 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 2059, column: 5)
!5963 = !DILocation(line: 2060, column: 25, scope: !5961)
!5964 = !DILocation(line: 2060, column: 32, scope: !5961)
!5965 = !DILocation(line: 2060, column: 11, scope: !5962)
!5966 = !DILocation(line: 2062, column: 17, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5968, file: !1, line: 2062, column: 11)
!5968 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 2061, column: 9)
!5969 = !DILocation(line: 2062, column: 16, scope: !5967)
!5970 = !DILocation(line: 2062, column: 21, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !1, line: 2062, column: 11)
!5972 = !DILocation(line: 2062, column: 35, scope: !5971)
!5973 = !DILocation(line: 2062, column: 23, scope: !5971)
!5974 = !DILocation(line: 2062, column: 11, scope: !5967)
!5975 = !DILocation(line: 2064, column: 30, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !1, line: 2063, column: 11)
!5977 = !DILocation(line: 2064, column: 52, scope: !5976)
!5978 = !DILocation(line: 2064, column: 43, scope: !5976)
!5979 = !DILocation(line: 2064, column: 69, scope: !5976)
!5980 = !DILocation(line: 2064, column: 15, scope: !5976)
!5981 = !DILocation(line: 2064, column: 14, scope: !5976)
!5982 = !DILocation(line: 2065, column: 14, scope: !5976)
!5983 = !DILocation(line: 2066, column: 16, scope: !5976)
!5984 = !DILocation(line: 2066, column: 30, scope: !5976)
!5985 = !DILocation(line: 2066, column: 14, scope: !5976)
!5986 = !DILocation(line: 2067, column: 11, scope: !5976)
!5987 = !DILocation(line: 2062, column: 51, scope: !5971)
!5988 = !DILocation(line: 2062, column: 11, scope: !5971)
!5989 = distinct !{!5989, !5974, !5990}
!5990 = !DILocation(line: 2067, column: 11, scope: !5967)
!5991 = !DILocation(line: 2068, column: 11, scope: !5968)
!5992 = !DILocation(line: 2070, column: 5, scope: !5962)
!5993 = !DILocation(line: 2073, column: 29, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 2072, column: 5)
!5995 = !DILocation(line: 2073, column: 43, scope: !5994)
!5996 = !DILocation(line: 2073, column: 13, scope: !5994)
!5997 = !DILocation(line: 2073, column: 12, scope: !5994)
!5998 = !DILocation(line: 2074, column: 13, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5994, file: !1, line: 2074, column: 7)
!6000 = !DILocation(line: 2074, column: 12, scope: !5999)
!6001 = !DILocation(line: 2074, column: 17, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5999, file: !1, line: 2074, column: 7)
!6003 = !DILocation(line: 2074, column: 31, scope: !6002)
!6004 = !DILocation(line: 2074, column: 19, scope: !6002)
!6005 = !DILocation(line: 2074, column: 7, scope: !5999)
!6006 = !DILocation(line: 2076, column: 27, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !1, line: 2075, column: 7)
!6008 = !DILocation(line: 2077, column: 29, scope: !6007)
!6009 = !DILocation(line: 2077, column: 46, scope: !6007)
!6010 = !DILocation(line: 2077, column: 11, scope: !6007)
!6011 = !DILocation(line: 2077, column: 53, scope: !6007)
!6012 = !DILocation(line: 2076, column: 11, scope: !6007)
!6013 = !DILocation(line: 2076, column: 10, scope: !6007)
!6014 = !DILocation(line: 2078, column: 10, scope: !6007)
!6015 = !DILocation(line: 2079, column: 12, scope: !6007)
!6016 = !DILocation(line: 2079, column: 26, scope: !6007)
!6017 = !DILocation(line: 2079, column: 10, scope: !6007)
!6018 = !DILocation(line: 2080, column: 7, scope: !6007)
!6019 = !DILocation(line: 2074, column: 47, scope: !6002)
!6020 = !DILocation(line: 2074, column: 7, scope: !6002)
!6021 = distinct !{!6021, !6005, !6022}
!6022 = !DILocation(line: 2080, column: 7, scope: !5999)
!6023 = !DILocation(line: 2081, column: 7, scope: !5994)
!6024 = !DILocation(line: 2084, column: 1, scope: !5785)
!6025 = distinct !DISubprogram(name: "ExportIndexQuantum", scope: !1, file: !1, line: 2086, type: !2863, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6026 = !DILocalVariable(name: "image", arg: 1, scope: !6025, file: !1, line: 2086, type: !519)
!6027 = !DILocation(line: 2086, column: 45, scope: !6025)
!6028 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !6025, file: !1, line: 2086, type: !459)
!6029 = !DILocation(line: 2086, column: 64, scope: !6025)
!6030 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !6025, file: !1, line: 2087, type: !637)
!6031 = !DILocation(line: 2087, column: 24, scope: !6025)
!6032 = !DILocalVariable(name: "p", arg: 4, scope: !6025, file: !1, line: 2087, type: !740)
!6033 = !DILocation(line: 2087, column: 66, scope: !6025)
!6034 = !DILocalVariable(name: "indexes", arg: 5, scope: !6025, file: !1, line: 2088, type: !737)
!6035 = !DILocation(line: 2088, column: 31, scope: !6025)
!6036 = !DILocalVariable(name: "q", arg: 6, scope: !6025, file: !1, line: 2088, type: !717)
!6037 = !DILocation(line: 2088, column: 63, scope: !6025)
!6038 = !DILocalVariable(name: "exception", arg: 7, scope: !6025, file: !1, line: 2089, type: !718)
!6039 = !DILocation(line: 2089, column: 18, scope: !6025)
!6040 = !DILocalVariable(name: "x", scope: !6025, file: !1, line: 2092, type: !453)
!6041 = !DILocation(line: 2092, column: 5, scope: !6025)
!6042 = !DILocalVariable(name: "bit", scope: !6025, file: !1, line: 2095, type: !453)
!6043 = !DILocation(line: 2095, column: 5, scope: !6025)
!6044 = !DILocation(line: 2097, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6025, file: !1, line: 2097, column: 7)
!6046 = !DILocation(line: 2097, column: 14, scope: !6045)
!6047 = !DILocation(line: 2097, column: 28, scope: !6045)
!6048 = !DILocation(line: 2097, column: 7, scope: !6025)
!6049 = !DILocation(line: 2099, column: 35, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 2098, column: 5)
!6051 = !DILocation(line: 2100, column: 43, scope: !6050)
!6052 = !DILocation(line: 2100, column: 50, scope: !6050)
!6053 = !DILocation(line: 2099, column: 14, scope: !6050)
!6054 = !DILocation(line: 2101, column: 7, scope: !6050)
!6055 = !DILocation(line: 2103, column: 11, scope: !6025)
!6056 = !DILocation(line: 2103, column: 25, scope: !6025)
!6057 = !DILocation(line: 2103, column: 3, scope: !6025)
!6058 = !DILocalVariable(name: "pixel", scope: !6059, file: !1, line: 2108, type: !437)
!6059 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2106, column: 5)
!6060 = distinct !DILexicalBlock(scope: !6025, file: !1, line: 2104, column: 3)
!6061 = !DILocation(line: 2108, column: 9, scope: !6059)
!6062 = !DILocation(line: 2110, column: 25, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6059, file: !1, line: 2110, column: 7)
!6064 = !DILocation(line: 2110, column: 38, scope: !6063)
!6065 = !DILocation(line: 2110, column: 13, scope: !6063)
!6066 = !DILocation(line: 2110, column: 12, scope: !6063)
!6067 = !DILocation(line: 2110, column: 43, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 2110, column: 7)
!6069 = !DILocation(line: 2110, column: 45, scope: !6068)
!6070 = !DILocation(line: 2110, column: 7, scope: !6063)
!6071 = !DILocation(line: 2112, column: 39, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6068, file: !1, line: 2111, column: 7)
!6073 = !DILocation(line: 2112, column: 31, scope: !6072)
!6074 = !DILocation(line: 2112, column: 15, scope: !6072)
!6075 = !DILocation(line: 2112, column: 14, scope: !6072)
!6076 = !DILocation(line: 2113, column: 14, scope: !6072)
!6077 = !DILocation(line: 2113, column: 20, scope: !6072)
!6078 = !DILocation(line: 2113, column: 28, scope: !6072)
!6079 = !DILocation(line: 2113, column: 12, scope: !6072)
!6080 = !DILocation(line: 2113, column: 10, scope: !6072)
!6081 = !DILocation(line: 2113, column: 11, scope: !6072)
!6082 = !DILocation(line: 2114, column: 39, scope: !6072)
!6083 = !DILocation(line: 2114, column: 31, scope: !6072)
!6084 = !DILocation(line: 2114, column: 15, scope: !6072)
!6085 = !DILocation(line: 2114, column: 14, scope: !6072)
!6086 = !DILocation(line: 2115, column: 15, scope: !6072)
!6087 = !DILocation(line: 2115, column: 21, scope: !6072)
!6088 = !DILocation(line: 2115, column: 29, scope: !6072)
!6089 = !DILocation(line: 2115, column: 10, scope: !6072)
!6090 = !DILocation(line: 2115, column: 11, scope: !6072)
!6091 = !DILocation(line: 2116, column: 39, scope: !6072)
!6092 = !DILocation(line: 2116, column: 31, scope: !6072)
!6093 = !DILocation(line: 2116, column: 15, scope: !6072)
!6094 = !DILocation(line: 2116, column: 14, scope: !6072)
!6095 = !DILocation(line: 2117, column: 15, scope: !6072)
!6096 = !DILocation(line: 2117, column: 21, scope: !6072)
!6097 = !DILocation(line: 2117, column: 29, scope: !6072)
!6098 = !DILocation(line: 2117, column: 10, scope: !6072)
!6099 = !DILocation(line: 2117, column: 11, scope: !6072)
!6100 = !DILocation(line: 2118, column: 39, scope: !6072)
!6101 = !DILocation(line: 2118, column: 31, scope: !6072)
!6102 = !DILocation(line: 2118, column: 15, scope: !6072)
!6103 = !DILocation(line: 2118, column: 14, scope: !6072)
!6104 = !DILocation(line: 2119, column: 15, scope: !6072)
!6105 = !DILocation(line: 2119, column: 21, scope: !6072)
!6106 = !DILocation(line: 2119, column: 29, scope: !6072)
!6107 = !DILocation(line: 2119, column: 10, scope: !6072)
!6108 = !DILocation(line: 2119, column: 11, scope: !6072)
!6109 = !DILocation(line: 2120, column: 39, scope: !6072)
!6110 = !DILocation(line: 2120, column: 31, scope: !6072)
!6111 = !DILocation(line: 2120, column: 15, scope: !6072)
!6112 = !DILocation(line: 2120, column: 14, scope: !6072)
!6113 = !DILocation(line: 2121, column: 15, scope: !6072)
!6114 = !DILocation(line: 2121, column: 21, scope: !6072)
!6115 = !DILocation(line: 2121, column: 29, scope: !6072)
!6116 = !DILocation(line: 2121, column: 10, scope: !6072)
!6117 = !DILocation(line: 2121, column: 11, scope: !6072)
!6118 = !DILocation(line: 2122, column: 39, scope: !6072)
!6119 = !DILocation(line: 2122, column: 31, scope: !6072)
!6120 = !DILocation(line: 2122, column: 15, scope: !6072)
!6121 = !DILocation(line: 2122, column: 14, scope: !6072)
!6122 = !DILocation(line: 2123, column: 15, scope: !6072)
!6123 = !DILocation(line: 2123, column: 21, scope: !6072)
!6124 = !DILocation(line: 2123, column: 29, scope: !6072)
!6125 = !DILocation(line: 2123, column: 10, scope: !6072)
!6126 = !DILocation(line: 2123, column: 11, scope: !6072)
!6127 = !DILocation(line: 2124, column: 39, scope: !6072)
!6128 = !DILocation(line: 2124, column: 31, scope: !6072)
!6129 = !DILocation(line: 2124, column: 15, scope: !6072)
!6130 = !DILocation(line: 2124, column: 14, scope: !6072)
!6131 = !DILocation(line: 2125, column: 15, scope: !6072)
!6132 = !DILocation(line: 2125, column: 21, scope: !6072)
!6133 = !DILocation(line: 2125, column: 29, scope: !6072)
!6134 = !DILocation(line: 2125, column: 10, scope: !6072)
!6135 = !DILocation(line: 2125, column: 11, scope: !6072)
!6136 = !DILocation(line: 2126, column: 39, scope: !6072)
!6137 = !DILocation(line: 2126, column: 31, scope: !6072)
!6138 = !DILocation(line: 2126, column: 15, scope: !6072)
!6139 = !DILocation(line: 2126, column: 14, scope: !6072)
!6140 = !DILocation(line: 2127, column: 15, scope: !6072)
!6141 = !DILocation(line: 2127, column: 21, scope: !6072)
!6142 = !DILocation(line: 2127, column: 29, scope: !6072)
!6143 = !DILocation(line: 2127, column: 10, scope: !6072)
!6144 = !DILocation(line: 2127, column: 11, scope: !6072)
!6145 = !DILocation(line: 2128, column: 10, scope: !6072)
!6146 = !DILocation(line: 2129, column: 7, scope: !6072)
!6147 = !DILocation(line: 2110, column: 51, scope: !6068)
!6148 = !DILocation(line: 2110, column: 7, scope: !6068)
!6149 = distinct !{!6149, !6070, !6150}
!6150 = !DILocation(line: 2129, column: 7, scope: !6063)
!6151 = !DILocation(line: 2130, column: 12, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6059, file: !1, line: 2130, column: 11)
!6153 = !DILocation(line: 2130, column: 26, scope: !6152)
!6154 = !DILocation(line: 2130, column: 31, scope: !6152)
!6155 = !DILocation(line: 2130, column: 11, scope: !6059)
!6156 = !DILocation(line: 2132, column: 12, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6152, file: !1, line: 2131, column: 9)
!6158 = !DILocation(line: 2132, column: 13, scope: !6157)
!6159 = !DILocation(line: 2133, column: 19, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 2133, column: 11)
!6161 = !DILocation(line: 2133, column: 16, scope: !6160)
!6162 = !DILocation(line: 2133, column: 23, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6160, file: !1, line: 2133, column: 11)
!6164 = !DILocation(line: 2133, column: 44, scope: !6163)
!6165 = !DILocation(line: 2133, column: 58, scope: !6163)
!6166 = !DILocation(line: 2133, column: 42, scope: !6163)
!6167 = !DILocation(line: 2133, column: 27, scope: !6163)
!6168 = !DILocation(line: 2133, column: 11, scope: !6160)
!6169 = !DILocation(line: 2135, column: 43, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6163, file: !1, line: 2134, column: 11)
!6171 = !DILocation(line: 2135, column: 35, scope: !6170)
!6172 = !DILocation(line: 2135, column: 19, scope: !6170)
!6173 = !DILocation(line: 2135, column: 18, scope: !6170)
!6174 = !DILocation(line: 2136, column: 19, scope: !6170)
!6175 = !DILocation(line: 2136, column: 25, scope: !6170)
!6176 = !DILocation(line: 2136, column: 52, scope: !6170)
!6177 = !DILocation(line: 2136, column: 36, scope: !6170)
!6178 = !DILocation(line: 2136, column: 33, scope: !6170)
!6179 = !DILocation(line: 2136, column: 14, scope: !6170)
!6180 = !DILocation(line: 2136, column: 15, scope: !6170)
!6181 = !DILocation(line: 2137, column: 11, scope: !6170)
!6182 = !DILocation(line: 2133, column: 68, scope: !6163)
!6183 = !DILocation(line: 2133, column: 11, scope: !6163)
!6184 = distinct !{!6184, !6168, !6185}
!6185 = !DILocation(line: 2137, column: 11, scope: !6160)
!6186 = !DILocation(line: 2138, column: 12, scope: !6157)
!6187 = !DILocation(line: 2139, column: 9, scope: !6157)
!6188 = !DILocation(line: 2140, column: 7, scope: !6059)
!6189 = !DILocalVariable(name: "pixel", scope: !6190, file: !1, line: 2145, type: !437)
!6190 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2143, column: 5)
!6191 = !DILocation(line: 2145, column: 9, scope: !6190)
!6192 = !DILocation(line: 2147, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6190, file: !1, line: 2147, column: 7)
!6194 = !DILocation(line: 2147, column: 12, scope: !6193)
!6195 = !DILocation(line: 2147, column: 17, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 2147, column: 7)
!6197 = !DILocation(line: 2147, column: 32, scope: !6196)
!6198 = !DILocation(line: 2147, column: 45, scope: !6196)
!6199 = !DILocation(line: 2147, column: 19, scope: !6196)
!6200 = !DILocation(line: 2147, column: 7, scope: !6193)
!6201 = !DILocation(line: 2149, column: 39, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6196, file: !1, line: 2148, column: 7)
!6203 = !DILocation(line: 2149, column: 31, scope: !6202)
!6204 = !DILocation(line: 2149, column: 15, scope: !6202)
!6205 = !DILocation(line: 2149, column: 14, scope: !6202)
!6206 = !DILocation(line: 2150, column: 14, scope: !6202)
!6207 = !DILocation(line: 2150, column: 20, scope: !6202)
!6208 = !DILocation(line: 2150, column: 27, scope: !6202)
!6209 = !DILocation(line: 2150, column: 12, scope: !6202)
!6210 = !DILocation(line: 2150, column: 10, scope: !6202)
!6211 = !DILocation(line: 2150, column: 11, scope: !6202)
!6212 = !DILocation(line: 2151, column: 39, scope: !6202)
!6213 = !DILocation(line: 2151, column: 31, scope: !6202)
!6214 = !DILocation(line: 2151, column: 15, scope: !6202)
!6215 = !DILocation(line: 2151, column: 14, scope: !6202)
!6216 = !DILocation(line: 2152, column: 15, scope: !6202)
!6217 = !DILocation(line: 2152, column: 21, scope: !6202)
!6218 = !DILocation(line: 2152, column: 28, scope: !6202)
!6219 = !DILocation(line: 2152, column: 10, scope: !6202)
!6220 = !DILocation(line: 2152, column: 11, scope: !6202)
!6221 = !DILocation(line: 2153, column: 10, scope: !6202)
!6222 = !DILocation(line: 2154, column: 7, scope: !6202)
!6223 = !DILocation(line: 2147, column: 52, scope: !6196)
!6224 = !DILocation(line: 2147, column: 7, scope: !6196)
!6225 = distinct !{!6225, !6200, !6226}
!6226 = !DILocation(line: 2154, column: 7, scope: !6193)
!6227 = !DILocation(line: 2155, column: 12, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6190, file: !1, line: 2155, column: 11)
!6229 = !DILocation(line: 2155, column: 26, scope: !6228)
!6230 = !DILocation(line: 2155, column: 31, scope: !6228)
!6231 = !DILocation(line: 2155, column: 11, scope: !6190)
!6232 = !DILocation(line: 2157, column: 41, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6228, file: !1, line: 2156, column: 9)
!6234 = !DILocation(line: 2157, column: 33, scope: !6233)
!6235 = !DILocation(line: 2157, column: 17, scope: !6233)
!6236 = !DILocation(line: 2157, column: 16, scope: !6233)
!6237 = !DILocation(line: 2158, column: 16, scope: !6233)
!6238 = !DILocation(line: 2158, column: 22, scope: !6233)
!6239 = !DILocation(line: 2158, column: 29, scope: !6233)
!6240 = !DILocation(line: 2158, column: 14, scope: !6233)
!6241 = !DILocation(line: 2158, column: 12, scope: !6233)
!6242 = !DILocation(line: 2158, column: 13, scope: !6233)
!6243 = !DILocation(line: 2159, column: 12, scope: !6233)
!6244 = !DILocation(line: 2160, column: 9, scope: !6233)
!6245 = !DILocation(line: 2161, column: 7, scope: !6190)
!6246 = !DILocation(line: 2165, column: 13, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 2165, column: 7)
!6248 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2164, column: 5)
!6249 = !DILocation(line: 2165, column: 12, scope: !6247)
!6250 = !DILocation(line: 2165, column: 17, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 2165, column: 7)
!6252 = !DILocation(line: 2165, column: 31, scope: !6251)
!6253 = !DILocation(line: 2165, column: 19, scope: !6251)
!6254 = !DILocation(line: 2165, column: 7, scope: !6247)
!6255 = !DILocation(line: 2167, column: 40, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6251, file: !1, line: 2166, column: 7)
!6257 = !DILocation(line: 2167, column: 24, scope: !6256)
!6258 = !DILocation(line: 2167, column: 65, scope: !6256)
!6259 = !DILocation(line: 2167, column: 11, scope: !6256)
!6260 = !DILocation(line: 2167, column: 10, scope: !6256)
!6261 = !DILocation(line: 2168, column: 12, scope: !6256)
!6262 = !DILocation(line: 2168, column: 26, scope: !6256)
!6263 = !DILocation(line: 2168, column: 10, scope: !6256)
!6264 = !DILocation(line: 2169, column: 7, scope: !6256)
!6265 = !DILocation(line: 2165, column: 47, scope: !6251)
!6266 = !DILocation(line: 2165, column: 7, scope: !6251)
!6267 = distinct !{!6267, !6254, !6268}
!6268 = !DILocation(line: 2169, column: 7, scope: !6247)
!6269 = !DILocation(line: 2170, column: 7, scope: !6248)
!6270 = !DILocation(line: 2174, column: 11, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !1, line: 2174, column: 11)
!6272 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2173, column: 5)
!6273 = !DILocation(line: 2174, column: 25, scope: !6271)
!6274 = !DILocation(line: 2174, column: 32, scope: !6271)
!6275 = !DILocation(line: 2174, column: 11, scope: !6272)
!6276 = !DILocation(line: 2176, column: 17, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 2176, column: 11)
!6278 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 2175, column: 9)
!6279 = !DILocation(line: 2176, column: 16, scope: !6277)
!6280 = !DILocation(line: 2176, column: 21, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6277, file: !1, line: 2176, column: 11)
!6282 = !DILocation(line: 2176, column: 35, scope: !6281)
!6283 = !DILocation(line: 2176, column: 23, scope: !6281)
!6284 = !DILocation(line: 2176, column: 11, scope: !6277)
!6285 = !DILocation(line: 2178, column: 29, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6281, file: !1, line: 2177, column: 11)
!6287 = !DILocation(line: 2178, column: 43, scope: !6286)
!6288 = !DILocation(line: 2179, column: 15, scope: !6286)
!6289 = !DILocation(line: 2178, column: 84, scope: !6286)
!6290 = !DILocation(line: 2178, column: 72, scope: !6286)
!6291 = !DILocation(line: 2178, column: 50, scope: !6286)
!6292 = !DILocation(line: 2179, column: 41, scope: !6286)
!6293 = !DILocation(line: 2178, column: 15, scope: !6286)
!6294 = !DILocation(line: 2178, column: 14, scope: !6286)
!6295 = !DILocation(line: 2180, column: 16, scope: !6286)
!6296 = !DILocation(line: 2180, column: 30, scope: !6286)
!6297 = !DILocation(line: 2180, column: 14, scope: !6286)
!6298 = !DILocation(line: 2181, column: 11, scope: !6286)
!6299 = !DILocation(line: 2176, column: 51, scope: !6281)
!6300 = !DILocation(line: 2176, column: 11, scope: !6281)
!6301 = distinct !{!6301, !6284, !6302}
!6302 = !DILocation(line: 2181, column: 11, scope: !6277)
!6303 = !DILocation(line: 2182, column: 11, scope: !6278)
!6304 = !DILocation(line: 2184, column: 13, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6272, file: !1, line: 2184, column: 7)
!6306 = !DILocation(line: 2184, column: 12, scope: !6305)
!6307 = !DILocation(line: 2184, column: 17, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6305, file: !1, line: 2184, column: 7)
!6309 = !DILocation(line: 2184, column: 31, scope: !6308)
!6310 = !DILocation(line: 2184, column: 19, scope: !6308)
!6311 = !DILocation(line: 2184, column: 7, scope: !6305)
!6312 = !DILocation(line: 2186, column: 25, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !1, line: 2185, column: 7)
!6314 = !DILocation(line: 2186, column: 39, scope: !6313)
!6315 = !DILocation(line: 2186, column: 63, scope: !6313)
!6316 = !DILocation(line: 2186, column: 46, scope: !6313)
!6317 = !DILocation(line: 2186, column: 88, scope: !6313)
!6318 = !DILocation(line: 2186, column: 11, scope: !6313)
!6319 = !DILocation(line: 2186, column: 10, scope: !6313)
!6320 = !DILocation(line: 2187, column: 12, scope: !6313)
!6321 = !DILocation(line: 2187, column: 26, scope: !6313)
!6322 = !DILocation(line: 2187, column: 10, scope: !6313)
!6323 = !DILocation(line: 2188, column: 7, scope: !6313)
!6324 = !DILocation(line: 2184, column: 47, scope: !6308)
!6325 = !DILocation(line: 2184, column: 7, scope: !6308)
!6326 = distinct !{!6326, !6311, !6327}
!6327 = !DILocation(line: 2188, column: 7, scope: !6305)
!6328 = !DILocation(line: 2189, column: 7, scope: !6272)
!6329 = !DILocation(line: 2193, column: 11, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !1, line: 2193, column: 11)
!6331 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2192, column: 5)
!6332 = !DILocation(line: 2193, column: 25, scope: !6330)
!6333 = !DILocation(line: 2193, column: 32, scope: !6330)
!6334 = !DILocation(line: 2193, column: 11, scope: !6331)
!6335 = !DILocation(line: 2195, column: 17, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !1, line: 2195, column: 11)
!6337 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 2194, column: 9)
!6338 = !DILocation(line: 2195, column: 16, scope: !6336)
!6339 = !DILocation(line: 2195, column: 21, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6336, file: !1, line: 2195, column: 11)
!6341 = !DILocation(line: 2195, column: 35, scope: !6340)
!6342 = !DILocation(line: 2195, column: 23, scope: !6340)
!6343 = !DILocation(line: 2195, column: 11, scope: !6336)
!6344 = !DILocation(line: 2197, column: 29, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !1, line: 2196, column: 11)
!6346 = !DILocation(line: 2197, column: 50, scope: !6345)
!6347 = !DILocation(line: 2197, column: 42, scope: !6345)
!6348 = !DILocation(line: 2197, column: 75, scope: !6345)
!6349 = !DILocation(line: 2197, column: 15, scope: !6345)
!6350 = !DILocation(line: 2197, column: 14, scope: !6345)
!6351 = !DILocation(line: 2198, column: 14, scope: !6345)
!6352 = !DILocation(line: 2199, column: 16, scope: !6345)
!6353 = !DILocation(line: 2199, column: 30, scope: !6345)
!6354 = !DILocation(line: 2199, column: 14, scope: !6345)
!6355 = !DILocation(line: 2200, column: 11, scope: !6345)
!6356 = !DILocation(line: 2195, column: 51, scope: !6340)
!6357 = !DILocation(line: 2195, column: 11, scope: !6340)
!6358 = distinct !{!6358, !6343, !6359}
!6359 = !DILocation(line: 2200, column: 11, scope: !6336)
!6360 = !DILocation(line: 2201, column: 11, scope: !6337)
!6361 = !DILocation(line: 2203, column: 13, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6331, file: !1, line: 2203, column: 7)
!6363 = !DILocation(line: 2203, column: 12, scope: !6362)
!6364 = !DILocation(line: 2203, column: 17, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6362, file: !1, line: 2203, column: 7)
!6366 = !DILocation(line: 2203, column: 31, scope: !6365)
!6367 = !DILocation(line: 2203, column: 19, scope: !6365)
!6368 = !DILocation(line: 2203, column: 7, scope: !6362)
!6369 = !DILocation(line: 2205, column: 24, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6365, file: !1, line: 2204, column: 7)
!6371 = !DILocation(line: 2205, column: 38, scope: !6370)
!6372 = !DILocation(line: 2205, column: 60, scope: !6370)
!6373 = !DILocation(line: 2205, column: 85, scope: !6370)
!6374 = !DILocation(line: 2205, column: 11, scope: !6370)
!6375 = !DILocation(line: 2205, column: 10, scope: !6370)
!6376 = !DILocation(line: 2206, column: 12, scope: !6370)
!6377 = !DILocation(line: 2206, column: 26, scope: !6370)
!6378 = !DILocation(line: 2206, column: 10, scope: !6370)
!6379 = !DILocation(line: 2207, column: 7, scope: !6370)
!6380 = !DILocation(line: 2203, column: 47, scope: !6365)
!6381 = !DILocation(line: 2203, column: 7, scope: !6365)
!6382 = distinct !{!6382, !6368, !6383}
!6383 = !DILocation(line: 2207, column: 7, scope: !6362)
!6384 = !DILocation(line: 2208, column: 7, scope: !6331)
!6385 = !DILocation(line: 2212, column: 11, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !1, line: 2212, column: 11)
!6387 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2211, column: 5)
!6388 = !DILocation(line: 2212, column: 25, scope: !6386)
!6389 = !DILocation(line: 2212, column: 32, scope: !6386)
!6390 = !DILocation(line: 2212, column: 11, scope: !6387)
!6391 = !DILocation(line: 2214, column: 17, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 2214, column: 11)
!6393 = distinct !DILexicalBlock(scope: !6386, file: !1, line: 2213, column: 9)
!6394 = !DILocation(line: 2214, column: 16, scope: !6392)
!6395 = !DILocation(line: 2214, column: 21, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6392, file: !1, line: 2214, column: 11)
!6397 = !DILocation(line: 2214, column: 35, scope: !6396)
!6398 = !DILocation(line: 2214, column: 23, scope: !6396)
!6399 = !DILocation(line: 2214, column: 11, scope: !6392)
!6400 = !DILocation(line: 2216, column: 30, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6396, file: !1, line: 2215, column: 11)
!6402 = !DILocation(line: 2216, column: 52, scope: !6401)
!6403 = !DILocation(line: 2216, column: 43, scope: !6401)
!6404 = !DILocation(line: 2217, column: 15, scope: !6401)
!6405 = !DILocation(line: 2216, column: 15, scope: !6401)
!6406 = !DILocation(line: 2216, column: 14, scope: !6401)
!6407 = !DILocation(line: 2218, column: 14, scope: !6401)
!6408 = !DILocation(line: 2219, column: 16, scope: !6401)
!6409 = !DILocation(line: 2219, column: 30, scope: !6401)
!6410 = !DILocation(line: 2219, column: 14, scope: !6401)
!6411 = !DILocation(line: 2220, column: 11, scope: !6401)
!6412 = !DILocation(line: 2214, column: 51, scope: !6396)
!6413 = !DILocation(line: 2214, column: 11, scope: !6396)
!6414 = distinct !{!6414, !6399, !6415}
!6415 = !DILocation(line: 2220, column: 11, scope: !6392)
!6416 = !DILocation(line: 2221, column: 11, scope: !6393)
!6417 = !DILocation(line: 2223, column: 5, scope: !6387)
!6418 = !DILocation(line: 2226, column: 13, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !1, line: 2226, column: 7)
!6420 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 2225, column: 5)
!6421 = !DILocation(line: 2226, column: 12, scope: !6419)
!6422 = !DILocation(line: 2226, column: 17, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !1, line: 2226, column: 7)
!6424 = !DILocation(line: 2226, column: 31, scope: !6423)
!6425 = !DILocation(line: 2226, column: 19, scope: !6423)
!6426 = !DILocation(line: 2226, column: 7, scope: !6419)
!6427 = !DILocation(line: 2228, column: 27, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6423, file: !1, line: 2227, column: 7)
!6429 = !DILocation(line: 2229, column: 11, scope: !6428)
!6430 = !DILocation(line: 2229, column: 36, scope: !6428)
!6431 = !DILocation(line: 2228, column: 11, scope: !6428)
!6432 = !DILocation(line: 2228, column: 10, scope: !6428)
!6433 = !DILocation(line: 2230, column: 10, scope: !6428)
!6434 = !DILocation(line: 2231, column: 12, scope: !6428)
!6435 = !DILocation(line: 2231, column: 26, scope: !6428)
!6436 = !DILocation(line: 2231, column: 10, scope: !6428)
!6437 = !DILocation(line: 2232, column: 7, scope: !6428)
!6438 = !DILocation(line: 2226, column: 47, scope: !6423)
!6439 = !DILocation(line: 2226, column: 7, scope: !6423)
!6440 = distinct !{!6440, !6426, !6441}
!6441 = !DILocation(line: 2232, column: 7, scope: !6419)
!6442 = !DILocation(line: 2233, column: 7, scope: !6420)
!6443 = !DILocation(line: 2236, column: 1, scope: !6025)
!6444 = distinct !DISubprogram(name: "ExportIndexAlphaQuantum", scope: !1, file: !1, line: 2238, type: !2863, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6445 = !DILocalVariable(name: "image", arg: 1, scope: !6444, file: !1, line: 2238, type: !519)
!6446 = !DILocation(line: 2238, column: 50, scope: !6444)
!6447 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !6444, file: !1, line: 2239, type: !459)
!6448 = !DILocation(line: 2239, column: 16, scope: !6444)
!6449 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !6444, file: !1, line: 2239, type: !637)
!6450 = !DILocation(line: 2239, column: 50, scope: !6444)
!6451 = !DILocalVariable(name: "p", arg: 4, scope: !6444, file: !1, line: 2240, type: !740)
!6452 = !DILocation(line: 2240, column: 31, scope: !6444)
!6453 = !DILocalVariable(name: "indexes", arg: 5, scope: !6444, file: !1, line: 2240, type: !737)
!6454 = !DILocation(line: 2240, column: 61, scope: !6444)
!6455 = !DILocalVariable(name: "q", arg: 6, scope: !6444, file: !1, line: 2241, type: !717)
!6456 = !DILocation(line: 2241, column: 27, scope: !6444)
!6457 = !DILocalVariable(name: "exception", arg: 7, scope: !6444, file: !1, line: 2241, type: !718)
!6458 = !DILocation(line: 2241, column: 44, scope: !6444)
!6459 = !DILocalVariable(name: "x", scope: !6444, file: !1, line: 2244, type: !453)
!6460 = !DILocation(line: 2244, column: 5, scope: !6444)
!6461 = !DILocalVariable(name: "bit", scope: !6444, file: !1, line: 2247, type: !453)
!6462 = !DILocation(line: 2247, column: 5, scope: !6444)
!6463 = !DILocation(line: 2249, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6444, file: !1, line: 2249, column: 7)
!6465 = !DILocation(line: 2249, column: 14, scope: !6464)
!6466 = !DILocation(line: 2249, column: 28, scope: !6464)
!6467 = !DILocation(line: 2249, column: 7, scope: !6444)
!6468 = !DILocation(line: 2251, column: 35, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 2250, column: 5)
!6470 = !DILocation(line: 2252, column: 43, scope: !6469)
!6471 = !DILocation(line: 2252, column: 50, scope: !6469)
!6472 = !DILocation(line: 2251, column: 14, scope: !6469)
!6473 = !DILocation(line: 2253, column: 7, scope: !6469)
!6474 = !DILocation(line: 2255, column: 11, scope: !6444)
!6475 = !DILocation(line: 2255, column: 25, scope: !6444)
!6476 = !DILocation(line: 2255, column: 3, scope: !6444)
!6477 = !DILocalVariable(name: "pixel", scope: !6478, file: !1, line: 2260, type: !437)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2258, column: 5)
!6479 = distinct !DILexicalBlock(scope: !6444, file: !1, line: 2256, column: 3)
!6480 = !DILocation(line: 2260, column: 9, scope: !6478)
!6481 = !DILocation(line: 2262, column: 25, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 2262, column: 7)
!6483 = !DILocation(line: 2262, column: 38, scope: !6482)
!6484 = !DILocation(line: 2262, column: 13, scope: !6482)
!6485 = !DILocation(line: 2262, column: 12, scope: !6482)
!6486 = !DILocation(line: 2262, column: 43, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6482, file: !1, line: 2262, column: 7)
!6488 = !DILocation(line: 2262, column: 45, scope: !6487)
!6489 = !DILocation(line: 2262, column: 7, scope: !6482)
!6490 = !DILocation(line: 2264, column: 39, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 2263, column: 7)
!6492 = !DILocation(line: 2264, column: 31, scope: !6491)
!6493 = !DILocation(line: 2264, column: 15, scope: !6491)
!6494 = !DILocation(line: 2264, column: 14, scope: !6491)
!6495 = !DILocation(line: 2265, column: 14, scope: !6491)
!6496 = !DILocation(line: 2265, column: 20, scope: !6491)
!6497 = !DILocation(line: 2265, column: 28, scope: !6491)
!6498 = !DILocation(line: 2265, column: 12, scope: !6491)
!6499 = !DILocation(line: 2265, column: 10, scope: !6491)
!6500 = !DILocation(line: 2265, column: 11, scope: !6491)
!6501 = !DILocation(line: 2266, column: 32, scope: !6491)
!6502 = !DILocation(line: 2266, column: 51, scope: !6491)
!6503 = !DILocation(line: 2266, column: 15, scope: !6491)
!6504 = !DILocation(line: 2266, column: 14, scope: !6491)
!6505 = !DILocation(line: 2268, column: 15, scope: !6491)
!6506 = !DILocation(line: 2268, column: 21, scope: !6491)
!6507 = !DILocation(line: 2268, column: 29, scope: !6491)
!6508 = !DILocation(line: 2268, column: 10, scope: !6491)
!6509 = !DILocation(line: 2268, column: 11, scope: !6491)
!6510 = !DILocation(line: 2269, column: 10, scope: !6491)
!6511 = !DILocation(line: 2270, column: 39, scope: !6491)
!6512 = !DILocation(line: 2270, column: 31, scope: !6491)
!6513 = !DILocation(line: 2270, column: 15, scope: !6491)
!6514 = !DILocation(line: 2270, column: 14, scope: !6491)
!6515 = !DILocation(line: 2271, column: 15, scope: !6491)
!6516 = !DILocation(line: 2271, column: 21, scope: !6491)
!6517 = !DILocation(line: 2271, column: 29, scope: !6491)
!6518 = !DILocation(line: 2271, column: 10, scope: !6491)
!6519 = !DILocation(line: 2271, column: 11, scope: !6491)
!6520 = !DILocation(line: 2272, column: 32, scope: !6491)
!6521 = !DILocation(line: 2272, column: 51, scope: !6491)
!6522 = !DILocation(line: 2272, column: 15, scope: !6491)
!6523 = !DILocation(line: 2272, column: 14, scope: !6491)
!6524 = !DILocation(line: 2274, column: 15, scope: !6491)
!6525 = !DILocation(line: 2274, column: 21, scope: !6491)
!6526 = !DILocation(line: 2274, column: 29, scope: !6491)
!6527 = !DILocation(line: 2274, column: 10, scope: !6491)
!6528 = !DILocation(line: 2274, column: 11, scope: !6491)
!6529 = !DILocation(line: 2275, column: 10, scope: !6491)
!6530 = !DILocation(line: 2276, column: 39, scope: !6491)
!6531 = !DILocation(line: 2276, column: 31, scope: !6491)
!6532 = !DILocation(line: 2276, column: 15, scope: !6491)
!6533 = !DILocation(line: 2276, column: 14, scope: !6491)
!6534 = !DILocation(line: 2277, column: 15, scope: !6491)
!6535 = !DILocation(line: 2277, column: 21, scope: !6491)
!6536 = !DILocation(line: 2277, column: 29, scope: !6491)
!6537 = !DILocation(line: 2277, column: 10, scope: !6491)
!6538 = !DILocation(line: 2277, column: 11, scope: !6491)
!6539 = !DILocation(line: 2278, column: 32, scope: !6491)
!6540 = !DILocation(line: 2278, column: 51, scope: !6491)
!6541 = !DILocation(line: 2278, column: 15, scope: !6491)
!6542 = !DILocation(line: 2278, column: 14, scope: !6491)
!6543 = !DILocation(line: 2280, column: 15, scope: !6491)
!6544 = !DILocation(line: 2280, column: 21, scope: !6491)
!6545 = !DILocation(line: 2280, column: 29, scope: !6491)
!6546 = !DILocation(line: 2280, column: 10, scope: !6491)
!6547 = !DILocation(line: 2280, column: 11, scope: !6491)
!6548 = !DILocation(line: 2281, column: 10, scope: !6491)
!6549 = !DILocation(line: 2282, column: 39, scope: !6491)
!6550 = !DILocation(line: 2282, column: 31, scope: !6491)
!6551 = !DILocation(line: 2282, column: 15, scope: !6491)
!6552 = !DILocation(line: 2282, column: 14, scope: !6491)
!6553 = !DILocation(line: 2283, column: 15, scope: !6491)
!6554 = !DILocation(line: 2283, column: 21, scope: !6491)
!6555 = !DILocation(line: 2283, column: 29, scope: !6491)
!6556 = !DILocation(line: 2283, column: 10, scope: !6491)
!6557 = !DILocation(line: 2283, column: 11, scope: !6491)
!6558 = !DILocation(line: 2284, column: 32, scope: !6491)
!6559 = !DILocation(line: 2284, column: 51, scope: !6491)
!6560 = !DILocation(line: 2284, column: 15, scope: !6491)
!6561 = !DILocation(line: 2284, column: 14, scope: !6491)
!6562 = !DILocation(line: 2286, column: 15, scope: !6491)
!6563 = !DILocation(line: 2286, column: 21, scope: !6491)
!6564 = !DILocation(line: 2286, column: 29, scope: !6491)
!6565 = !DILocation(line: 2286, column: 10, scope: !6491)
!6566 = !DILocation(line: 2286, column: 11, scope: !6491)
!6567 = !DILocation(line: 2287, column: 10, scope: !6491)
!6568 = !DILocation(line: 2288, column: 10, scope: !6491)
!6569 = !DILocation(line: 2289, column: 7, scope: !6491)
!6570 = !DILocation(line: 2262, column: 51, scope: !6487)
!6571 = !DILocation(line: 2262, column: 7, scope: !6487)
!6572 = distinct !{!6572, !6489, !6573}
!6573 = !DILocation(line: 2289, column: 7, scope: !6482)
!6574 = !DILocation(line: 2290, column: 12, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 2290, column: 11)
!6576 = !DILocation(line: 2290, column: 26, scope: !6575)
!6577 = !DILocation(line: 2290, column: 31, scope: !6575)
!6578 = !DILocation(line: 2290, column: 11, scope: !6478)
!6579 = !DILocation(line: 2292, column: 12, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 2291, column: 9)
!6581 = !DILocation(line: 2292, column: 13, scope: !6580)
!6582 = !DILocation(line: 2293, column: 19, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6580, file: !1, line: 2293, column: 11)
!6584 = !DILocation(line: 2293, column: 16, scope: !6583)
!6585 = !DILocation(line: 2293, column: 23, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !1, line: 2293, column: 11)
!6587 = !DILocation(line: 2293, column: 44, scope: !6586)
!6588 = !DILocation(line: 2293, column: 58, scope: !6586)
!6589 = !DILocation(line: 2293, column: 42, scope: !6586)
!6590 = !DILocation(line: 2293, column: 27, scope: !6586)
!6591 = !DILocation(line: 2293, column: 11, scope: !6583)
!6592 = !DILocation(line: 2295, column: 43, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6586, file: !1, line: 2294, column: 11)
!6594 = !DILocation(line: 2295, column: 35, scope: !6593)
!6595 = !DILocation(line: 2295, column: 19, scope: !6593)
!6596 = !DILocation(line: 2295, column: 18, scope: !6593)
!6597 = !DILocation(line: 2296, column: 19, scope: !6593)
!6598 = !DILocation(line: 2296, column: 25, scope: !6593)
!6599 = !DILocation(line: 2296, column: 53, scope: !6593)
!6600 = !DILocation(line: 2296, column: 56, scope: !6593)
!6601 = !DILocation(line: 2296, column: 36, scope: !6593)
!6602 = !DILocation(line: 2296, column: 33, scope: !6593)
!6603 = !DILocation(line: 2296, column: 14, scope: !6593)
!6604 = !DILocation(line: 2296, column: 15, scope: !6593)
!6605 = !DILocation(line: 2297, column: 36, scope: !6593)
!6606 = !DILocation(line: 2297, column: 55, scope: !6593)
!6607 = !DILocation(line: 2297, column: 19, scope: !6593)
!6608 = !DILocation(line: 2297, column: 18, scope: !6593)
!6609 = !DILocation(line: 2299, column: 19, scope: !6593)
!6610 = !DILocation(line: 2299, column: 25, scope: !6593)
!6611 = !DILocation(line: 2299, column: 53, scope: !6593)
!6612 = !DILocation(line: 2299, column: 56, scope: !6593)
!6613 = !DILocation(line: 2299, column: 58, scope: !6593)
!6614 = !DILocation(line: 2299, column: 36, scope: !6593)
!6615 = !DILocation(line: 2299, column: 33, scope: !6593)
!6616 = !DILocation(line: 2299, column: 14, scope: !6593)
!6617 = !DILocation(line: 2299, column: 15, scope: !6593)
!6618 = !DILocation(line: 2300, column: 14, scope: !6593)
!6619 = !DILocation(line: 2301, column: 11, scope: !6593)
!6620 = !DILocation(line: 2293, column: 68, scope: !6586)
!6621 = !DILocation(line: 2293, column: 11, scope: !6586)
!6622 = distinct !{!6622, !6591, !6623}
!6623 = !DILocation(line: 2301, column: 11, scope: !6583)
!6624 = !DILocation(line: 2302, column: 12, scope: !6580)
!6625 = !DILocation(line: 2303, column: 9, scope: !6580)
!6626 = !DILocation(line: 2304, column: 7, scope: !6478)
!6627 = !DILocalVariable(name: "pixel", scope: !6628, file: !1, line: 2309, type: !437)
!6628 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2307, column: 5)
!6629 = !DILocation(line: 2309, column: 9, scope: !6628)
!6630 = !DILocation(line: 2311, column: 13, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !1, line: 2311, column: 7)
!6632 = !DILocation(line: 2311, column: 12, scope: !6631)
!6633 = !DILocation(line: 2311, column: 17, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6631, file: !1, line: 2311, column: 7)
!6635 = !DILocation(line: 2311, column: 31, scope: !6634)
!6636 = !DILocation(line: 2311, column: 19, scope: !6634)
!6637 = !DILocation(line: 2311, column: 7, scope: !6631)
!6638 = !DILocation(line: 2313, column: 39, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 2312, column: 7)
!6640 = !DILocation(line: 2313, column: 31, scope: !6639)
!6641 = !DILocation(line: 2313, column: 15, scope: !6639)
!6642 = !DILocation(line: 2313, column: 14, scope: !6639)
!6643 = !DILocation(line: 2314, column: 14, scope: !6639)
!6644 = !DILocation(line: 2314, column: 20, scope: !6639)
!6645 = !DILocation(line: 2314, column: 27, scope: !6639)
!6646 = !DILocation(line: 2314, column: 12, scope: !6639)
!6647 = !DILocation(line: 2314, column: 10, scope: !6639)
!6648 = !DILocation(line: 2314, column: 11, scope: !6639)
!6649 = !DILocation(line: 2316, column: 11, scope: !6639)
!6650 = !DILocation(line: 2315, column: 72, scope: !6639)
!6651 = !DILocation(line: 2315, column: 49, scope: !6639)
!6652 = !DILocation(line: 2315, column: 48, scope: !6639)
!6653 = !DILocation(line: 2315, column: 47, scope: !6639)
!6654 = !DILocation(line: 2316, column: 31, scope: !6639)
!6655 = !DILocation(line: 2315, column: 15, scope: !6639)
!6656 = !DILocation(line: 2315, column: 14, scope: !6639)
!6657 = !DILocation(line: 2317, column: 15, scope: !6639)
!6658 = !DILocation(line: 2317, column: 21, scope: !6639)
!6659 = !DILocation(line: 2317, column: 28, scope: !6639)
!6660 = !DILocation(line: 2317, column: 10, scope: !6639)
!6661 = !DILocation(line: 2317, column: 11, scope: !6639)
!6662 = !DILocation(line: 2318, column: 10, scope: !6639)
!6663 = !DILocation(line: 2319, column: 10, scope: !6639)
!6664 = !DILocation(line: 2320, column: 7, scope: !6639)
!6665 = !DILocation(line: 2311, column: 48, scope: !6634)
!6666 = !DILocation(line: 2311, column: 7, scope: !6634)
!6667 = distinct !{!6667, !6637, !6668}
!6668 = !DILocation(line: 2320, column: 7, scope: !6631)
!6669 = !DILocation(line: 2321, column: 7, scope: !6628)
!6670 = !DILocalVariable(name: "pixel", scope: !6671, file: !1, line: 2326, type: !437)
!6671 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2324, column: 5)
!6672 = !DILocation(line: 2326, column: 9, scope: !6671)
!6673 = !DILocation(line: 2328, column: 13, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6671, file: !1, line: 2328, column: 7)
!6675 = !DILocation(line: 2328, column: 12, scope: !6674)
!6676 = !DILocation(line: 2328, column: 17, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6674, file: !1, line: 2328, column: 7)
!6678 = !DILocation(line: 2328, column: 31, scope: !6677)
!6679 = !DILocation(line: 2328, column: 19, scope: !6677)
!6680 = !DILocation(line: 2328, column: 7, scope: !6674)
!6681 = !DILocation(line: 2330, column: 40, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6677, file: !1, line: 2329, column: 7)
!6683 = !DILocation(line: 2330, column: 24, scope: !6682)
!6684 = !DILocation(line: 2330, column: 65, scope: !6682)
!6685 = !DILocation(line: 2330, column: 11, scope: !6682)
!6686 = !DILocation(line: 2330, column: 10, scope: !6682)
!6687 = !DILocation(line: 2331, column: 58, scope: !6682)
!6688 = !DILocation(line: 2331, column: 57, scope: !6682)
!6689 = !DILocation(line: 2331, column: 34, scope: !6682)
!6690 = !DILocation(line: 2331, column: 15, scope: !6682)
!6691 = !DILocation(line: 2331, column: 14, scope: !6682)
!6692 = !DILocation(line: 2332, column: 24, scope: !6682)
!6693 = !DILocation(line: 2332, column: 30, scope: !6682)
!6694 = !DILocation(line: 2332, column: 11, scope: !6682)
!6695 = !DILocation(line: 2332, column: 10, scope: !6682)
!6696 = !DILocation(line: 2333, column: 10, scope: !6682)
!6697 = !DILocation(line: 2334, column: 12, scope: !6682)
!6698 = !DILocation(line: 2334, column: 26, scope: !6682)
!6699 = !DILocation(line: 2334, column: 10, scope: !6682)
!6700 = !DILocation(line: 2335, column: 7, scope: !6682)
!6701 = !DILocation(line: 2328, column: 47, scope: !6677)
!6702 = !DILocation(line: 2328, column: 7, scope: !6677)
!6703 = distinct !{!6703, !6680, !6704}
!6704 = !DILocation(line: 2335, column: 7, scope: !6674)
!6705 = !DILocation(line: 2336, column: 7, scope: !6671)
!6706 = !DILocalVariable(name: "pixel", scope: !6707, file: !1, line: 2341, type: !449)
!6707 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2339, column: 5)
!6708 = !DILocation(line: 2341, column: 9, scope: !6707)
!6709 = !DILocation(line: 2343, column: 11, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6707, file: !1, line: 2343, column: 11)
!6711 = !DILocation(line: 2343, column: 25, scope: !6710)
!6712 = !DILocation(line: 2343, column: 32, scope: !6710)
!6713 = !DILocation(line: 2343, column: 11, scope: !6707)
!6714 = !DILocation(line: 2345, column: 17, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 2345, column: 11)
!6716 = distinct !DILexicalBlock(scope: !6710, file: !1, line: 2344, column: 9)
!6717 = !DILocation(line: 2345, column: 16, scope: !6715)
!6718 = !DILocation(line: 2345, column: 21, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6715, file: !1, line: 2345, column: 11)
!6720 = !DILocation(line: 2345, column: 35, scope: !6719)
!6721 = !DILocation(line: 2345, column: 23, scope: !6719)
!6722 = !DILocation(line: 2345, column: 11, scope: !6715)
!6723 = !DILocation(line: 2347, column: 29, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !1, line: 2346, column: 11)
!6725 = !DILocation(line: 2347, column: 43, scope: !6724)
!6726 = !DILocation(line: 2347, column: 67, scope: !6724)
!6727 = !DILocation(line: 2347, column: 50, scope: !6724)
!6728 = !DILocation(line: 2347, column: 92, scope: !6724)
!6729 = !DILocation(line: 2347, column: 15, scope: !6724)
!6730 = !DILocation(line: 2347, column: 14, scope: !6724)
!6731 = !DILocation(line: 2348, column: 54, scope: !6724)
!6732 = !DILocation(line: 2348, column: 53, scope: !6724)
!6733 = !DILocation(line: 2348, column: 41, scope: !6724)
!6734 = !DILocation(line: 2348, column: 19, scope: !6724)
!6735 = !DILocation(line: 2348, column: 18, scope: !6724)
!6736 = !DILocation(line: 2349, column: 29, scope: !6724)
!6737 = !DILocation(line: 2349, column: 43, scope: !6724)
!6738 = !DILocation(line: 2349, column: 50, scope: !6724)
!6739 = !DILocation(line: 2349, column: 56, scope: !6724)
!6740 = !DILocation(line: 2349, column: 15, scope: !6724)
!6741 = !DILocation(line: 2349, column: 14, scope: !6724)
!6742 = !DILocation(line: 2350, column: 14, scope: !6724)
!6743 = !DILocation(line: 2351, column: 16, scope: !6724)
!6744 = !DILocation(line: 2351, column: 30, scope: !6724)
!6745 = !DILocation(line: 2351, column: 14, scope: !6724)
!6746 = !DILocation(line: 2352, column: 11, scope: !6724)
!6747 = !DILocation(line: 2345, column: 51, scope: !6719)
!6748 = !DILocation(line: 2345, column: 11, scope: !6719)
!6749 = distinct !{!6749, !6722, !6750}
!6750 = !DILocation(line: 2352, column: 11, scope: !6715)
!6751 = !DILocation(line: 2353, column: 11, scope: !6716)
!6752 = !DILocation(line: 2355, column: 13, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6707, file: !1, line: 2355, column: 7)
!6754 = !DILocation(line: 2355, column: 12, scope: !6753)
!6755 = !DILocation(line: 2355, column: 17, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !1, line: 2355, column: 7)
!6757 = !DILocation(line: 2355, column: 31, scope: !6756)
!6758 = !DILocation(line: 2355, column: 19, scope: !6756)
!6759 = !DILocation(line: 2355, column: 7, scope: !6753)
!6760 = !DILocation(line: 2357, column: 25, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 2356, column: 7)
!6762 = !DILocation(line: 2357, column: 39, scope: !6761)
!6763 = !DILocation(line: 2357, column: 63, scope: !6761)
!6764 = !DILocation(line: 2357, column: 46, scope: !6761)
!6765 = !DILocation(line: 2357, column: 88, scope: !6761)
!6766 = !DILocation(line: 2357, column: 11, scope: !6761)
!6767 = !DILocation(line: 2357, column: 10, scope: !6761)
!6768 = !DILocation(line: 2358, column: 59, scope: !6761)
!6769 = !DILocation(line: 2358, column: 58, scope: !6761)
!6770 = !DILocation(line: 2358, column: 35, scope: !6761)
!6771 = !DILocation(line: 2358, column: 15, scope: !6761)
!6772 = !DILocation(line: 2358, column: 14, scope: !6761)
!6773 = !DILocation(line: 2359, column: 25, scope: !6761)
!6774 = !DILocation(line: 2359, column: 39, scope: !6761)
!6775 = !DILocation(line: 2359, column: 46, scope: !6761)
!6776 = !DILocation(line: 2359, column: 52, scope: !6761)
!6777 = !DILocation(line: 2359, column: 11, scope: !6761)
!6778 = !DILocation(line: 2359, column: 10, scope: !6761)
!6779 = !DILocation(line: 2360, column: 10, scope: !6761)
!6780 = !DILocation(line: 2361, column: 12, scope: !6761)
!6781 = !DILocation(line: 2361, column: 26, scope: !6761)
!6782 = !DILocation(line: 2361, column: 10, scope: !6761)
!6783 = !DILocation(line: 2362, column: 7, scope: !6761)
!6784 = !DILocation(line: 2355, column: 47, scope: !6756)
!6785 = !DILocation(line: 2355, column: 7, scope: !6756)
!6786 = distinct !{!6786, !6759, !6787}
!6787 = !DILocation(line: 2362, column: 7, scope: !6753)
!6788 = !DILocation(line: 2363, column: 7, scope: !6707)
!6789 = !DILocalVariable(name: "pixel", scope: !6790, file: !1, line: 2368, type: !5)
!6790 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2366, column: 5)
!6791 = !DILocation(line: 2368, column: 9, scope: !6790)
!6792 = !DILocation(line: 2370, column: 11, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6790, file: !1, line: 2370, column: 11)
!6794 = !DILocation(line: 2370, column: 25, scope: !6793)
!6795 = !DILocation(line: 2370, column: 32, scope: !6793)
!6796 = !DILocation(line: 2370, column: 11, scope: !6790)
!6797 = !DILocation(line: 2372, column: 17, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !1, line: 2372, column: 11)
!6799 = distinct !DILexicalBlock(scope: !6793, file: !1, line: 2371, column: 9)
!6800 = !DILocation(line: 2372, column: 16, scope: !6798)
!6801 = !DILocation(line: 2372, column: 21, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !1, line: 2372, column: 11)
!6803 = !DILocation(line: 2372, column: 35, scope: !6802)
!6804 = !DILocation(line: 2372, column: 23, scope: !6802)
!6805 = !DILocation(line: 2372, column: 11, scope: !6798)
!6806 = !DILocalVariable(name: "pixel", scope: !6807, file: !1, line: 2375, type: !502)
!6807 = distinct !DILexicalBlock(scope: !6802, file: !1, line: 2373, column: 11)
!6808 = !DILocation(line: 2375, column: 15, scope: !6807)
!6809 = !DILocation(line: 2377, column: 29, scope: !6807)
!6810 = !DILocation(line: 2377, column: 50, scope: !6807)
!6811 = !DILocation(line: 2377, column: 42, scope: !6807)
!6812 = !DILocation(line: 2377, column: 75, scope: !6807)
!6813 = !DILocation(line: 2377, column: 15, scope: !6807)
!6814 = !DILocation(line: 2377, column: 14, scope: !6807)
!6815 = !DILocation(line: 2378, column: 29, scope: !6807)
!6816 = !DILocation(line: 2378, column: 19, scope: !6807)
!6817 = !DILocation(line: 2378, column: 18, scope: !6807)
!6818 = !DILocation(line: 2379, column: 29, scope: !6807)
!6819 = !DILocation(line: 2379, column: 42, scope: !6807)
!6820 = !DILocation(line: 2379, column: 48, scope: !6807)
!6821 = !DILocation(line: 2379, column: 15, scope: !6807)
!6822 = !DILocation(line: 2379, column: 14, scope: !6807)
!6823 = !DILocation(line: 2380, column: 14, scope: !6807)
!6824 = !DILocation(line: 2381, column: 16, scope: !6807)
!6825 = !DILocation(line: 2381, column: 30, scope: !6807)
!6826 = !DILocation(line: 2381, column: 14, scope: !6807)
!6827 = !DILocation(line: 2382, column: 11, scope: !6807)
!6828 = !DILocation(line: 2372, column: 51, scope: !6802)
!6829 = !DILocation(line: 2372, column: 11, scope: !6802)
!6830 = distinct !{!6830, !6805, !6831}
!6831 = !DILocation(line: 2382, column: 11, scope: !6798)
!6832 = !DILocation(line: 2383, column: 11, scope: !6799)
!6833 = !DILocation(line: 2385, column: 13, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6790, file: !1, line: 2385, column: 7)
!6835 = !DILocation(line: 2385, column: 12, scope: !6834)
!6836 = !DILocation(line: 2385, column: 17, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 2385, column: 7)
!6838 = !DILocation(line: 2385, column: 31, scope: !6837)
!6839 = !DILocation(line: 2385, column: 19, scope: !6837)
!6840 = !DILocation(line: 2385, column: 7, scope: !6834)
!6841 = !DILocation(line: 2387, column: 24, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !1, line: 2386, column: 7)
!6843 = !DILocation(line: 2387, column: 38, scope: !6842)
!6844 = !DILocation(line: 2387, column: 60, scope: !6842)
!6845 = !DILocation(line: 2387, column: 85, scope: !6842)
!6846 = !DILocation(line: 2387, column: 11, scope: !6842)
!6847 = !DILocation(line: 2387, column: 10, scope: !6842)
!6848 = !DILocation(line: 2388, column: 58, scope: !6842)
!6849 = !DILocation(line: 2388, column: 57, scope: !6842)
!6850 = !DILocation(line: 2388, column: 34, scope: !6842)
!6851 = !DILocation(line: 2388, column: 15, scope: !6842)
!6852 = !DILocation(line: 2388, column: 14, scope: !6842)
!6853 = !DILocation(line: 2389, column: 24, scope: !6842)
!6854 = !DILocation(line: 2389, column: 38, scope: !6842)
!6855 = !DILocation(line: 2389, column: 45, scope: !6842)
!6856 = !DILocation(line: 2389, column: 51, scope: !6842)
!6857 = !DILocation(line: 2389, column: 11, scope: !6842)
!6858 = !DILocation(line: 2389, column: 10, scope: !6842)
!6859 = !DILocation(line: 2390, column: 10, scope: !6842)
!6860 = !DILocation(line: 2391, column: 12, scope: !6842)
!6861 = !DILocation(line: 2391, column: 26, scope: !6842)
!6862 = !DILocation(line: 2391, column: 10, scope: !6842)
!6863 = !DILocation(line: 2392, column: 7, scope: !6842)
!6864 = !DILocation(line: 2385, column: 47, scope: !6837)
!6865 = !DILocation(line: 2385, column: 7, scope: !6837)
!6866 = distinct !{!6866, !6840, !6867}
!6867 = !DILocation(line: 2392, column: 7, scope: !6834)
!6868 = !DILocation(line: 2393, column: 7, scope: !6790)
!6869 = !DILocation(line: 2397, column: 11, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !1, line: 2397, column: 11)
!6871 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2396, column: 5)
!6872 = !DILocation(line: 2397, column: 25, scope: !6870)
!6873 = !DILocation(line: 2397, column: 32, scope: !6870)
!6874 = !DILocation(line: 2397, column: 11, scope: !6871)
!6875 = !DILocation(line: 2399, column: 17, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 2399, column: 11)
!6877 = distinct !DILexicalBlock(scope: !6870, file: !1, line: 2398, column: 9)
!6878 = !DILocation(line: 2399, column: 16, scope: !6876)
!6879 = !DILocation(line: 2399, column: 21, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6876, file: !1, line: 2399, column: 11)
!6881 = !DILocation(line: 2399, column: 35, scope: !6880)
!6882 = !DILocation(line: 2399, column: 23, scope: !6880)
!6883 = !DILocation(line: 2399, column: 11, scope: !6876)
!6884 = !DILocalVariable(name: "pixel", scope: !6885, file: !1, line: 2402, type: !458)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 2400, column: 11)
!6886 = !DILocation(line: 2402, column: 15, scope: !6885)
!6887 = !DILocation(line: 2404, column: 30, scope: !6885)
!6888 = !DILocation(line: 2404, column: 52, scope: !6885)
!6889 = !DILocation(line: 2404, column: 43, scope: !6885)
!6890 = !DILocation(line: 2405, column: 15, scope: !6885)
!6891 = !DILocation(line: 2404, column: 15, scope: !6885)
!6892 = !DILocation(line: 2404, column: 14, scope: !6885)
!6893 = !DILocation(line: 2406, column: 29, scope: !6885)
!6894 = !DILocation(line: 2406, column: 19, scope: !6885)
!6895 = !DILocation(line: 2406, column: 18, scope: !6885)
!6896 = !DILocation(line: 2407, column: 30, scope: !6885)
!6897 = !DILocation(line: 2407, column: 43, scope: !6885)
!6898 = !DILocation(line: 2407, column: 49, scope: !6885)
!6899 = !DILocation(line: 2407, column: 15, scope: !6885)
!6900 = !DILocation(line: 2407, column: 14, scope: !6885)
!6901 = !DILocation(line: 2408, column: 14, scope: !6885)
!6902 = !DILocation(line: 2409, column: 16, scope: !6885)
!6903 = !DILocation(line: 2409, column: 30, scope: !6885)
!6904 = !DILocation(line: 2409, column: 14, scope: !6885)
!6905 = !DILocation(line: 2410, column: 11, scope: !6885)
!6906 = !DILocation(line: 2399, column: 51, scope: !6880)
!6907 = !DILocation(line: 2399, column: 11, scope: !6880)
!6908 = distinct !{!6908, !6883, !6909}
!6909 = !DILocation(line: 2410, column: 11, scope: !6876)
!6910 = !DILocation(line: 2411, column: 11, scope: !6877)
!6911 = !DILocation(line: 2413, column: 5, scope: !6871)
!6912 = !DILocalVariable(name: "range", scope: !6913, file: !1, line: 2417, type: !508)
!6913 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2415, column: 5)
!6914 = !DILocation(line: 2417, column: 9, scope: !6913)
!6915 = !DILocation(line: 2419, column: 29, scope: !6913)
!6916 = !DILocation(line: 2419, column: 43, scope: !6913)
!6917 = !DILocation(line: 2419, column: 13, scope: !6913)
!6918 = !DILocation(line: 2419, column: 12, scope: !6913)
!6919 = !DILocation(line: 2420, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6913, file: !1, line: 2420, column: 7)
!6921 = !DILocation(line: 2420, column: 12, scope: !6920)
!6922 = !DILocation(line: 2420, column: 17, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 2420, column: 7)
!6924 = !DILocation(line: 2420, column: 31, scope: !6923)
!6925 = !DILocation(line: 2420, column: 19, scope: !6923)
!6926 = !DILocation(line: 2420, column: 7, scope: !6920)
!6927 = !DILocation(line: 2422, column: 27, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6923, file: !1, line: 2421, column: 7)
!6929 = !DILocation(line: 2423, column: 11, scope: !6928)
!6930 = !DILocation(line: 2423, column: 36, scope: !6928)
!6931 = !DILocation(line: 2422, column: 11, scope: !6928)
!6932 = !DILocation(line: 2422, column: 10, scope: !6928)
!6933 = !DILocation(line: 2424, column: 27, scope: !6928)
!6934 = !DILocation(line: 2425, column: 40, scope: !6928)
!6935 = !DILocation(line: 2425, column: 29, scope: !6928)
!6936 = !DILocation(line: 2425, column: 58, scope: !6928)
!6937 = !DILocation(line: 2425, column: 11, scope: !6928)
!6938 = !DILocation(line: 2425, column: 65, scope: !6928)
!6939 = !DILocation(line: 2424, column: 11, scope: !6928)
!6940 = !DILocation(line: 2424, column: 10, scope: !6928)
!6941 = !DILocation(line: 2426, column: 10, scope: !6928)
!6942 = !DILocation(line: 2427, column: 12, scope: !6928)
!6943 = !DILocation(line: 2427, column: 26, scope: !6928)
!6944 = !DILocation(line: 2427, column: 10, scope: !6928)
!6945 = !DILocation(line: 2428, column: 7, scope: !6928)
!6946 = !DILocation(line: 2420, column: 47, scope: !6923)
!6947 = !DILocation(line: 2420, column: 7, scope: !6923)
!6948 = distinct !{!6948, !6926, !6949}
!6949 = !DILocation(line: 2428, column: 7, scope: !6920)
!6950 = !DILocation(line: 2429, column: 7, scope: !6913)
!6951 = !DILocation(line: 2432, column: 1, scope: !6444)
!6952 = distinct !DISubprogram(name: "ExportOpacityQuantum", scope: !1, file: !1, line: 2434, type: !1182, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6953 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !6952, file: !1, line: 2434, type: !459)
!6954 = !DILocation(line: 2434, column: 47, scope: !6952)
!6955 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !6952, file: !1, line: 2435, type: !637)
!6956 = !DILocation(line: 2435, column: 24, scope: !6952)
!6957 = !DILocalVariable(name: "p", arg: 3, scope: !6952, file: !1, line: 2435, type: !740)
!6958 = !DILocation(line: 2435, column: 66, scope: !6952)
!6959 = !DILocalVariable(name: "q", arg: 4, scope: !6952, file: !1, line: 2436, type: !717)
!6960 = !DILocation(line: 2436, column: 27, scope: !6952)
!6961 = !DILocalVariable(name: "range", scope: !6952, file: !1, line: 2439, type: !508)
!6962 = !DILocation(line: 2439, column: 5, scope: !6952)
!6963 = !DILocalVariable(name: "x", scope: !6952, file: !1, line: 2442, type: !453)
!6964 = !DILocation(line: 2442, column: 5, scope: !6952)
!6965 = !DILocation(line: 2444, column: 11, scope: !6952)
!6966 = !DILocation(line: 2444, column: 25, scope: !6952)
!6967 = !DILocation(line: 2444, column: 3, scope: !6952)
!6968 = !DILocalVariable(name: "pixel", scope: !6969, file: !1, line: 2449, type: !437)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 2447, column: 5)
!6970 = distinct !DILexicalBlock(scope: !6952, file: !1, line: 2445, column: 3)
!6971 = !DILocation(line: 2449, column: 9, scope: !6969)
!6972 = !DILocation(line: 2451, column: 13, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6969, file: !1, line: 2451, column: 7)
!6974 = !DILocation(line: 2451, column: 12, scope: !6973)
!6975 = !DILocation(line: 2451, column: 17, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6973, file: !1, line: 2451, column: 7)
!6977 = !DILocation(line: 2451, column: 31, scope: !6976)
!6978 = !DILocation(line: 2451, column: 19, scope: !6976)
!6979 = !DILocation(line: 2451, column: 7, scope: !6973)
!6980 = !DILocation(line: 2453, column: 34, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6976, file: !1, line: 2452, column: 7)
!6982 = !DILocation(line: 2453, column: 15, scope: !6981)
!6983 = !DILocation(line: 2453, column: 14, scope: !6981)
!6984 = !DILocation(line: 2454, column: 24, scope: !6981)
!6985 = !DILocation(line: 2454, column: 30, scope: !6981)
!6986 = !DILocation(line: 2454, column: 11, scope: !6981)
!6987 = !DILocation(line: 2454, column: 10, scope: !6981)
!6988 = !DILocation(line: 2455, column: 10, scope: !6981)
!6989 = !DILocation(line: 2456, column: 12, scope: !6981)
!6990 = !DILocation(line: 2456, column: 26, scope: !6981)
!6991 = !DILocation(line: 2456, column: 10, scope: !6981)
!6992 = !DILocation(line: 2457, column: 7, scope: !6981)
!6993 = !DILocation(line: 2451, column: 47, scope: !6976)
!6994 = !DILocation(line: 2451, column: 7, scope: !6976)
!6995 = distinct !{!6995, !6979, !6996}
!6996 = !DILocation(line: 2457, column: 7, scope: !6973)
!6997 = !DILocation(line: 2458, column: 7, scope: !6969)
!6998 = !DILocalVariable(name: "pixel", scope: !6999, file: !1, line: 2463, type: !449)
!6999 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 2461, column: 5)
!7000 = !DILocation(line: 2463, column: 9, scope: !6999)
!7001 = !DILocation(line: 2465, column: 11, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2465, column: 11)
!7003 = !DILocation(line: 2465, column: 25, scope: !7002)
!7004 = !DILocation(line: 2465, column: 32, scope: !7002)
!7005 = !DILocation(line: 2465, column: 11, scope: !6999)
!7006 = !DILocation(line: 2467, column: 17, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !1, line: 2467, column: 11)
!7008 = distinct !DILexicalBlock(scope: !7002, file: !1, line: 2466, column: 9)
!7009 = !DILocation(line: 2467, column: 16, scope: !7007)
!7010 = !DILocation(line: 2467, column: 21, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7007, file: !1, line: 2467, column: 11)
!7012 = !DILocation(line: 2467, column: 35, scope: !7011)
!7013 = !DILocation(line: 2467, column: 23, scope: !7011)
!7014 = !DILocation(line: 2467, column: 11, scope: !7007)
!7015 = !DILocation(line: 2469, column: 54, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !1, line: 2468, column: 11)
!7017 = !DILocation(line: 2469, column: 53, scope: !7016)
!7018 = !DILocation(line: 2469, column: 41, scope: !7016)
!7019 = !DILocation(line: 2469, column: 19, scope: !7016)
!7020 = !DILocation(line: 2469, column: 18, scope: !7016)
!7021 = !DILocation(line: 2470, column: 29, scope: !7016)
!7022 = !DILocation(line: 2470, column: 43, scope: !7016)
!7023 = !DILocation(line: 2470, column: 50, scope: !7016)
!7024 = !DILocation(line: 2470, column: 56, scope: !7016)
!7025 = !DILocation(line: 2470, column: 15, scope: !7016)
!7026 = !DILocation(line: 2470, column: 14, scope: !7016)
!7027 = !DILocation(line: 2471, column: 14, scope: !7016)
!7028 = !DILocation(line: 2472, column: 16, scope: !7016)
!7029 = !DILocation(line: 2472, column: 30, scope: !7016)
!7030 = !DILocation(line: 2472, column: 14, scope: !7016)
!7031 = !DILocation(line: 2473, column: 11, scope: !7016)
!7032 = !DILocation(line: 2467, column: 51, scope: !7011)
!7033 = !DILocation(line: 2467, column: 11, scope: !7011)
!7034 = distinct !{!7034, !7014, !7035}
!7035 = !DILocation(line: 2473, column: 11, scope: !7007)
!7036 = !DILocation(line: 2474, column: 11, scope: !7008)
!7037 = !DILocation(line: 2476, column: 13, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2476, column: 7)
!7039 = !DILocation(line: 2476, column: 12, scope: !7038)
!7040 = !DILocation(line: 2476, column: 17, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7038, file: !1, line: 2476, column: 7)
!7042 = !DILocation(line: 2476, column: 31, scope: !7041)
!7043 = !DILocation(line: 2476, column: 19, scope: !7041)
!7044 = !DILocation(line: 2476, column: 7, scope: !7038)
!7045 = !DILocation(line: 2478, column: 35, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7041, file: !1, line: 2477, column: 7)
!7047 = !DILocation(line: 2478, column: 15, scope: !7046)
!7048 = !DILocation(line: 2478, column: 14, scope: !7046)
!7049 = !DILocation(line: 2479, column: 25, scope: !7046)
!7050 = !DILocation(line: 2479, column: 39, scope: !7046)
!7051 = !DILocation(line: 2479, column: 46, scope: !7046)
!7052 = !DILocation(line: 2479, column: 52, scope: !7046)
!7053 = !DILocation(line: 2479, column: 11, scope: !7046)
!7054 = !DILocation(line: 2479, column: 10, scope: !7046)
!7055 = !DILocation(line: 2480, column: 10, scope: !7046)
!7056 = !DILocation(line: 2481, column: 12, scope: !7046)
!7057 = !DILocation(line: 2481, column: 26, scope: !7046)
!7058 = !DILocation(line: 2481, column: 10, scope: !7046)
!7059 = !DILocation(line: 2482, column: 7, scope: !7046)
!7060 = !DILocation(line: 2476, column: 47, scope: !7041)
!7061 = !DILocation(line: 2476, column: 7, scope: !7041)
!7062 = distinct !{!7062, !7044, !7063}
!7063 = !DILocation(line: 2482, column: 7, scope: !7038)
!7064 = !DILocation(line: 2483, column: 7, scope: !6999)
!7065 = !DILocalVariable(name: "pixel", scope: !7066, file: !1, line: 2488, type: !5)
!7066 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 2486, column: 5)
!7067 = !DILocation(line: 2488, column: 9, scope: !7066)
!7068 = !DILocation(line: 2490, column: 11, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7066, file: !1, line: 2490, column: 11)
!7070 = !DILocation(line: 2490, column: 25, scope: !7069)
!7071 = !DILocation(line: 2490, column: 32, scope: !7069)
!7072 = !DILocation(line: 2490, column: 11, scope: !7066)
!7073 = !DILocation(line: 2492, column: 17, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !1, line: 2492, column: 11)
!7075 = distinct !DILexicalBlock(scope: !7069, file: !1, line: 2491, column: 9)
!7076 = !DILocation(line: 2492, column: 16, scope: !7074)
!7077 = !DILocation(line: 2492, column: 21, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7074, file: !1, line: 2492, column: 11)
!7079 = !DILocation(line: 2492, column: 35, scope: !7078)
!7080 = !DILocation(line: 2492, column: 23, scope: !7078)
!7081 = !DILocation(line: 2492, column: 11, scope: !7074)
!7082 = !DILocation(line: 2494, column: 29, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2493, column: 11)
!7084 = !DILocation(line: 2494, column: 50, scope: !7083)
!7085 = !DILocation(line: 2494, column: 42, scope: !7083)
!7086 = !DILocation(line: 2494, column: 69, scope: !7083)
!7087 = !DILocation(line: 2494, column: 15, scope: !7083)
!7088 = !DILocation(line: 2494, column: 14, scope: !7083)
!7089 = !DILocation(line: 2495, column: 14, scope: !7083)
!7090 = !DILocation(line: 2496, column: 16, scope: !7083)
!7091 = !DILocation(line: 2496, column: 30, scope: !7083)
!7092 = !DILocation(line: 2496, column: 14, scope: !7083)
!7093 = !DILocation(line: 2497, column: 11, scope: !7083)
!7094 = !DILocation(line: 2492, column: 51, scope: !7078)
!7095 = !DILocation(line: 2492, column: 11, scope: !7078)
!7096 = distinct !{!7096, !7081, !7097}
!7097 = !DILocation(line: 2497, column: 11, scope: !7074)
!7098 = !DILocation(line: 2498, column: 11, scope: !7075)
!7099 = !DILocation(line: 2500, column: 13, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7066, file: !1, line: 2500, column: 7)
!7101 = !DILocation(line: 2500, column: 12, scope: !7100)
!7102 = !DILocation(line: 2500, column: 17, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7100, file: !1, line: 2500, column: 7)
!7104 = !DILocation(line: 2500, column: 31, scope: !7103)
!7105 = !DILocation(line: 2500, column: 19, scope: !7103)
!7106 = !DILocation(line: 2500, column: 7, scope: !7100)
!7107 = !DILocation(line: 2502, column: 34, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7103, file: !1, line: 2501, column: 7)
!7109 = !DILocation(line: 2502, column: 15, scope: !7108)
!7110 = !DILocation(line: 2502, column: 14, scope: !7108)
!7111 = !DILocation(line: 2503, column: 24, scope: !7108)
!7112 = !DILocation(line: 2503, column: 38, scope: !7108)
!7113 = !DILocation(line: 2503, column: 45, scope: !7108)
!7114 = !DILocation(line: 2503, column: 51, scope: !7108)
!7115 = !DILocation(line: 2503, column: 11, scope: !7108)
!7116 = !DILocation(line: 2503, column: 10, scope: !7108)
!7117 = !DILocation(line: 2504, column: 10, scope: !7108)
!7118 = !DILocation(line: 2505, column: 12, scope: !7108)
!7119 = !DILocation(line: 2505, column: 26, scope: !7108)
!7120 = !DILocation(line: 2505, column: 10, scope: !7108)
!7121 = !DILocation(line: 2506, column: 7, scope: !7108)
!7122 = !DILocation(line: 2500, column: 47, scope: !7103)
!7123 = !DILocation(line: 2500, column: 7, scope: !7103)
!7124 = distinct !{!7124, !7106, !7125}
!7125 = !DILocation(line: 2506, column: 7, scope: !7100)
!7126 = !DILocation(line: 2507, column: 7, scope: !7066)
!7127 = !DILocation(line: 2511, column: 11, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !1, line: 2511, column: 11)
!7129 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 2510, column: 5)
!7130 = !DILocation(line: 2511, column: 25, scope: !7128)
!7131 = !DILocation(line: 2511, column: 32, scope: !7128)
!7132 = !DILocation(line: 2511, column: 11, scope: !7129)
!7133 = !DILocation(line: 2513, column: 17, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !1, line: 2513, column: 11)
!7135 = distinct !DILexicalBlock(scope: !7128, file: !1, line: 2512, column: 9)
!7136 = !DILocation(line: 2513, column: 16, scope: !7134)
!7137 = !DILocation(line: 2513, column: 21, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !1, line: 2513, column: 11)
!7139 = !DILocation(line: 2513, column: 35, scope: !7138)
!7140 = !DILocation(line: 2513, column: 23, scope: !7138)
!7141 = !DILocation(line: 2513, column: 11, scope: !7134)
!7142 = !DILocation(line: 2515, column: 30, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7138, file: !1, line: 2514, column: 11)
!7144 = !DILocation(line: 2515, column: 52, scope: !7143)
!7145 = !DILocation(line: 2515, column: 43, scope: !7143)
!7146 = !DILocation(line: 2515, column: 71, scope: !7143)
!7147 = !DILocation(line: 2515, column: 15, scope: !7143)
!7148 = !DILocation(line: 2515, column: 14, scope: !7143)
!7149 = !DILocation(line: 2516, column: 14, scope: !7143)
!7150 = !DILocation(line: 2517, column: 16, scope: !7143)
!7151 = !DILocation(line: 2517, column: 30, scope: !7143)
!7152 = !DILocation(line: 2517, column: 14, scope: !7143)
!7153 = !DILocation(line: 2518, column: 11, scope: !7143)
!7154 = !DILocation(line: 2513, column: 51, scope: !7138)
!7155 = !DILocation(line: 2513, column: 11, scope: !7138)
!7156 = distinct !{!7156, !7141, !7157}
!7157 = !DILocation(line: 2518, column: 11, scope: !7134)
!7158 = !DILocation(line: 2519, column: 11, scope: !7135)
!7159 = !DILocation(line: 2521, column: 5, scope: !7129)
!7160 = !DILocation(line: 2524, column: 29, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !6970, file: !1, line: 2523, column: 5)
!7162 = !DILocation(line: 2524, column: 43, scope: !7161)
!7163 = !DILocation(line: 2524, column: 13, scope: !7161)
!7164 = !DILocation(line: 2524, column: 12, scope: !7161)
!7165 = !DILocation(line: 2525, column: 13, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7161, file: !1, line: 2525, column: 7)
!7167 = !DILocation(line: 2525, column: 12, scope: !7166)
!7168 = !DILocation(line: 2525, column: 17, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7166, file: !1, line: 2525, column: 7)
!7170 = !DILocation(line: 2525, column: 31, scope: !7169)
!7171 = !DILocation(line: 2525, column: 19, scope: !7169)
!7172 = !DILocation(line: 2525, column: 7, scope: !7166)
!7173 = !DILocation(line: 2527, column: 27, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !1, line: 2526, column: 7)
!7175 = !DILocation(line: 2528, column: 29, scope: !7174)
!7176 = !DILocation(line: 2528, column: 48, scope: !7174)
!7177 = !DILocation(line: 2528, column: 11, scope: !7174)
!7178 = !DILocation(line: 2528, column: 55, scope: !7174)
!7179 = !DILocation(line: 2527, column: 11, scope: !7174)
!7180 = !DILocation(line: 2527, column: 10, scope: !7174)
!7181 = !DILocation(line: 2529, column: 10, scope: !7174)
!7182 = !DILocation(line: 2530, column: 12, scope: !7174)
!7183 = !DILocation(line: 2530, column: 26, scope: !7174)
!7184 = !DILocation(line: 2530, column: 10, scope: !7174)
!7185 = !DILocation(line: 2531, column: 7, scope: !7174)
!7186 = !DILocation(line: 2525, column: 47, scope: !7169)
!7187 = !DILocation(line: 2525, column: 7, scope: !7169)
!7188 = distinct !{!7188, !7172, !7189}
!7189 = !DILocation(line: 2531, column: 7, scope: !7166)
!7190 = !DILocation(line: 2532, column: 7, scope: !7161)
!7191 = !DILocation(line: 2535, column: 1, scope: !6952)
!7192 = distinct !DISubprogram(name: "ExportRedQuantum", scope: !1, file: !1, line: 2537, type: !1182, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7193 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !7192, file: !1, line: 2537, type: !459)
!7194 = !DILocation(line: 2537, column: 43, scope: !7192)
!7195 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !7192, file: !1, line: 2538, type: !637)
!7196 = !DILocation(line: 2538, column: 24, scope: !7192)
!7197 = !DILocalVariable(name: "p", arg: 3, scope: !7192, file: !1, line: 2538, type: !740)
!7198 = !DILocation(line: 2538, column: 66, scope: !7192)
!7199 = !DILocalVariable(name: "q", arg: 4, scope: !7192, file: !1, line: 2539, type: !717)
!7200 = !DILocation(line: 2539, column: 27, scope: !7192)
!7201 = !DILocalVariable(name: "range", scope: !7192, file: !1, line: 2542, type: !508)
!7202 = !DILocation(line: 2542, column: 5, scope: !7192)
!7203 = !DILocalVariable(name: "x", scope: !7192, file: !1, line: 2545, type: !453)
!7204 = !DILocation(line: 2545, column: 5, scope: !7192)
!7205 = !DILocation(line: 2547, column: 11, scope: !7192)
!7206 = !DILocation(line: 2547, column: 25, scope: !7192)
!7207 = !DILocation(line: 2547, column: 3, scope: !7192)
!7208 = !DILocalVariable(name: "pixel", scope: !7209, file: !1, line: 2552, type: !437)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 2550, column: 5)
!7210 = distinct !DILexicalBlock(scope: !7192, file: !1, line: 2548, column: 3)
!7211 = !DILocation(line: 2552, column: 9, scope: !7209)
!7212 = !DILocation(line: 2554, column: 13, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7209, file: !1, line: 2554, column: 7)
!7214 = !DILocation(line: 2554, column: 12, scope: !7213)
!7215 = !DILocation(line: 2554, column: 17, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7213, file: !1, line: 2554, column: 7)
!7217 = !DILocation(line: 2554, column: 31, scope: !7216)
!7218 = !DILocation(line: 2554, column: 19, scope: !7216)
!7219 = !DILocation(line: 2554, column: 7, scope: !7213)
!7220 = !DILocation(line: 2556, column: 34, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7216, file: !1, line: 2555, column: 7)
!7222 = !DILocation(line: 2556, column: 15, scope: !7221)
!7223 = !DILocation(line: 2556, column: 14, scope: !7221)
!7224 = !DILocation(line: 2557, column: 24, scope: !7221)
!7225 = !DILocation(line: 2557, column: 30, scope: !7221)
!7226 = !DILocation(line: 2557, column: 11, scope: !7221)
!7227 = !DILocation(line: 2557, column: 10, scope: !7221)
!7228 = !DILocation(line: 2558, column: 10, scope: !7221)
!7229 = !DILocation(line: 2559, column: 12, scope: !7221)
!7230 = !DILocation(line: 2559, column: 26, scope: !7221)
!7231 = !DILocation(line: 2559, column: 10, scope: !7221)
!7232 = !DILocation(line: 2560, column: 7, scope: !7221)
!7233 = !DILocation(line: 2554, column: 47, scope: !7216)
!7234 = !DILocation(line: 2554, column: 7, scope: !7216)
!7235 = distinct !{!7235, !7219, !7236}
!7236 = !DILocation(line: 2560, column: 7, scope: !7213)
!7237 = !DILocation(line: 2561, column: 7, scope: !7209)
!7238 = !DILocalVariable(name: "pixel", scope: !7239, file: !1, line: 2566, type: !449)
!7239 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 2564, column: 5)
!7240 = !DILocation(line: 2566, column: 9, scope: !7239)
!7241 = !DILocation(line: 2568, column: 11, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 2568, column: 11)
!7243 = !DILocation(line: 2568, column: 25, scope: !7242)
!7244 = !DILocation(line: 2568, column: 32, scope: !7242)
!7245 = !DILocation(line: 2568, column: 11, scope: !7239)
!7246 = !DILocation(line: 2570, column: 17, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 2570, column: 11)
!7248 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 2569, column: 9)
!7249 = !DILocation(line: 2570, column: 16, scope: !7247)
!7250 = !DILocation(line: 2570, column: 21, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 2570, column: 11)
!7252 = !DILocation(line: 2570, column: 35, scope: !7251)
!7253 = !DILocation(line: 2570, column: 23, scope: !7251)
!7254 = !DILocation(line: 2570, column: 11, scope: !7247)
!7255 = !DILocation(line: 2572, column: 54, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7251, file: !1, line: 2571, column: 11)
!7257 = !DILocation(line: 2572, column: 53, scope: !7256)
!7258 = !DILocation(line: 2572, column: 41, scope: !7256)
!7259 = !DILocation(line: 2572, column: 19, scope: !7256)
!7260 = !DILocation(line: 2572, column: 18, scope: !7256)
!7261 = !DILocation(line: 2573, column: 29, scope: !7256)
!7262 = !DILocation(line: 2573, column: 43, scope: !7256)
!7263 = !DILocation(line: 2573, column: 50, scope: !7256)
!7264 = !DILocation(line: 2573, column: 56, scope: !7256)
!7265 = !DILocation(line: 2573, column: 15, scope: !7256)
!7266 = !DILocation(line: 2573, column: 14, scope: !7256)
!7267 = !DILocation(line: 2574, column: 14, scope: !7256)
!7268 = !DILocation(line: 2575, column: 16, scope: !7256)
!7269 = !DILocation(line: 2575, column: 30, scope: !7256)
!7270 = !DILocation(line: 2575, column: 14, scope: !7256)
!7271 = !DILocation(line: 2576, column: 11, scope: !7256)
!7272 = !DILocation(line: 2570, column: 51, scope: !7251)
!7273 = !DILocation(line: 2570, column: 11, scope: !7251)
!7274 = distinct !{!7274, !7254, !7275}
!7275 = !DILocation(line: 2576, column: 11, scope: !7247)
!7276 = !DILocation(line: 2577, column: 11, scope: !7248)
!7277 = !DILocation(line: 2579, column: 13, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 2579, column: 7)
!7279 = !DILocation(line: 2579, column: 12, scope: !7278)
!7280 = !DILocation(line: 2579, column: 17, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7278, file: !1, line: 2579, column: 7)
!7282 = !DILocation(line: 2579, column: 31, scope: !7281)
!7283 = !DILocation(line: 2579, column: 19, scope: !7281)
!7284 = !DILocation(line: 2579, column: 7, scope: !7278)
!7285 = !DILocation(line: 2581, column: 35, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7281, file: !1, line: 2580, column: 7)
!7287 = !DILocation(line: 2581, column: 15, scope: !7286)
!7288 = !DILocation(line: 2581, column: 14, scope: !7286)
!7289 = !DILocation(line: 2582, column: 25, scope: !7286)
!7290 = !DILocation(line: 2582, column: 39, scope: !7286)
!7291 = !DILocation(line: 2582, column: 46, scope: !7286)
!7292 = !DILocation(line: 2582, column: 52, scope: !7286)
!7293 = !DILocation(line: 2582, column: 11, scope: !7286)
!7294 = !DILocation(line: 2582, column: 10, scope: !7286)
!7295 = !DILocation(line: 2583, column: 10, scope: !7286)
!7296 = !DILocation(line: 2584, column: 12, scope: !7286)
!7297 = !DILocation(line: 2584, column: 26, scope: !7286)
!7298 = !DILocation(line: 2584, column: 10, scope: !7286)
!7299 = !DILocation(line: 2585, column: 7, scope: !7286)
!7300 = !DILocation(line: 2579, column: 47, scope: !7281)
!7301 = !DILocation(line: 2579, column: 7, scope: !7281)
!7302 = distinct !{!7302, !7284, !7303}
!7303 = !DILocation(line: 2585, column: 7, scope: !7278)
!7304 = !DILocation(line: 2586, column: 7, scope: !7239)
!7305 = !DILocalVariable(name: "pixel", scope: !7306, file: !1, line: 2591, type: !5)
!7306 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 2589, column: 5)
!7307 = !DILocation(line: 2591, column: 9, scope: !7306)
!7308 = !DILocation(line: 2593, column: 11, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7306, file: !1, line: 2593, column: 11)
!7310 = !DILocation(line: 2593, column: 25, scope: !7309)
!7311 = !DILocation(line: 2593, column: 32, scope: !7309)
!7312 = !DILocation(line: 2593, column: 11, scope: !7306)
!7313 = !DILocation(line: 2595, column: 17, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !1, line: 2595, column: 11)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !1, line: 2594, column: 9)
!7316 = !DILocation(line: 2595, column: 16, scope: !7314)
!7317 = !DILocation(line: 2595, column: 21, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !1, line: 2595, column: 11)
!7319 = !DILocation(line: 2595, column: 35, scope: !7318)
!7320 = !DILocation(line: 2595, column: 23, scope: !7318)
!7321 = !DILocation(line: 2595, column: 11, scope: !7314)
!7322 = !DILocation(line: 2597, column: 29, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7318, file: !1, line: 2596, column: 11)
!7324 = !DILocation(line: 2597, column: 50, scope: !7323)
!7325 = !DILocation(line: 2597, column: 42, scope: !7323)
!7326 = !DILocation(line: 2597, column: 65, scope: !7323)
!7327 = !DILocation(line: 2597, column: 15, scope: !7323)
!7328 = !DILocation(line: 2597, column: 14, scope: !7323)
!7329 = !DILocation(line: 2598, column: 14, scope: !7323)
!7330 = !DILocation(line: 2599, column: 16, scope: !7323)
!7331 = !DILocation(line: 2599, column: 30, scope: !7323)
!7332 = !DILocation(line: 2599, column: 14, scope: !7323)
!7333 = !DILocation(line: 2600, column: 11, scope: !7323)
!7334 = !DILocation(line: 2595, column: 51, scope: !7318)
!7335 = !DILocation(line: 2595, column: 11, scope: !7318)
!7336 = distinct !{!7336, !7321, !7337}
!7337 = !DILocation(line: 2600, column: 11, scope: !7314)
!7338 = !DILocation(line: 2601, column: 11, scope: !7315)
!7339 = !DILocation(line: 2603, column: 13, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7306, file: !1, line: 2603, column: 7)
!7341 = !DILocation(line: 2603, column: 12, scope: !7340)
!7342 = !DILocation(line: 2603, column: 17, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7340, file: !1, line: 2603, column: 7)
!7344 = !DILocation(line: 2603, column: 31, scope: !7343)
!7345 = !DILocation(line: 2603, column: 19, scope: !7343)
!7346 = !DILocation(line: 2603, column: 7, scope: !7340)
!7347 = !DILocation(line: 2605, column: 34, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7343, file: !1, line: 2604, column: 7)
!7349 = !DILocation(line: 2605, column: 15, scope: !7348)
!7350 = !DILocation(line: 2605, column: 14, scope: !7348)
!7351 = !DILocation(line: 2606, column: 24, scope: !7348)
!7352 = !DILocation(line: 2606, column: 38, scope: !7348)
!7353 = !DILocation(line: 2606, column: 45, scope: !7348)
!7354 = !DILocation(line: 2606, column: 51, scope: !7348)
!7355 = !DILocation(line: 2606, column: 11, scope: !7348)
!7356 = !DILocation(line: 2606, column: 10, scope: !7348)
!7357 = !DILocation(line: 2607, column: 10, scope: !7348)
!7358 = !DILocation(line: 2608, column: 12, scope: !7348)
!7359 = !DILocation(line: 2608, column: 26, scope: !7348)
!7360 = !DILocation(line: 2608, column: 10, scope: !7348)
!7361 = !DILocation(line: 2609, column: 7, scope: !7348)
!7362 = !DILocation(line: 2603, column: 47, scope: !7343)
!7363 = !DILocation(line: 2603, column: 7, scope: !7343)
!7364 = distinct !{!7364, !7346, !7365}
!7365 = !DILocation(line: 2609, column: 7, scope: !7340)
!7366 = !DILocation(line: 2610, column: 7, scope: !7306)
!7367 = !DILocation(line: 2614, column: 11, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !1, line: 2614, column: 11)
!7369 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 2613, column: 5)
!7370 = !DILocation(line: 2614, column: 25, scope: !7368)
!7371 = !DILocation(line: 2614, column: 32, scope: !7368)
!7372 = !DILocation(line: 2614, column: 11, scope: !7369)
!7373 = !DILocation(line: 2616, column: 17, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !1, line: 2616, column: 11)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !1, line: 2615, column: 9)
!7376 = !DILocation(line: 2616, column: 16, scope: !7374)
!7377 = !DILocation(line: 2616, column: 21, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7374, file: !1, line: 2616, column: 11)
!7379 = !DILocation(line: 2616, column: 35, scope: !7378)
!7380 = !DILocation(line: 2616, column: 23, scope: !7378)
!7381 = !DILocation(line: 2616, column: 11, scope: !7374)
!7382 = !DILocation(line: 2618, column: 30, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7378, file: !1, line: 2617, column: 11)
!7384 = !DILocation(line: 2618, column: 52, scope: !7383)
!7385 = !DILocation(line: 2618, column: 43, scope: !7383)
!7386 = !DILocation(line: 2618, column: 67, scope: !7383)
!7387 = !DILocation(line: 2618, column: 15, scope: !7383)
!7388 = !DILocation(line: 2618, column: 14, scope: !7383)
!7389 = !DILocation(line: 2619, column: 14, scope: !7383)
!7390 = !DILocation(line: 2620, column: 16, scope: !7383)
!7391 = !DILocation(line: 2620, column: 30, scope: !7383)
!7392 = !DILocation(line: 2620, column: 14, scope: !7383)
!7393 = !DILocation(line: 2621, column: 11, scope: !7383)
!7394 = !DILocation(line: 2616, column: 51, scope: !7378)
!7395 = !DILocation(line: 2616, column: 11, scope: !7378)
!7396 = distinct !{!7396, !7381, !7397}
!7397 = !DILocation(line: 2621, column: 11, scope: !7374)
!7398 = !DILocation(line: 2622, column: 11, scope: !7375)
!7399 = !DILocation(line: 2624, column: 5, scope: !7369)
!7400 = !DILocation(line: 2627, column: 29, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 2626, column: 5)
!7402 = !DILocation(line: 2627, column: 43, scope: !7401)
!7403 = !DILocation(line: 2627, column: 13, scope: !7401)
!7404 = !DILocation(line: 2627, column: 12, scope: !7401)
!7405 = !DILocation(line: 2628, column: 13, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7401, file: !1, line: 2628, column: 7)
!7407 = !DILocation(line: 2628, column: 12, scope: !7406)
!7408 = !DILocation(line: 2628, column: 17, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !1, line: 2628, column: 7)
!7410 = !DILocation(line: 2628, column: 31, scope: !7409)
!7411 = !DILocation(line: 2628, column: 19, scope: !7409)
!7412 = !DILocation(line: 2628, column: 7, scope: !7406)
!7413 = !DILocation(line: 2630, column: 27, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7409, file: !1, line: 2629, column: 7)
!7415 = !DILocation(line: 2631, column: 29, scope: !7414)
!7416 = !DILocation(line: 2631, column: 44, scope: !7414)
!7417 = !DILocation(line: 2631, column: 11, scope: !7414)
!7418 = !DILocation(line: 2631, column: 51, scope: !7414)
!7419 = !DILocation(line: 2630, column: 11, scope: !7414)
!7420 = !DILocation(line: 2630, column: 10, scope: !7414)
!7421 = !DILocation(line: 2632, column: 10, scope: !7414)
!7422 = !DILocation(line: 2633, column: 12, scope: !7414)
!7423 = !DILocation(line: 2633, column: 26, scope: !7414)
!7424 = !DILocation(line: 2633, column: 10, scope: !7414)
!7425 = !DILocation(line: 2634, column: 7, scope: !7414)
!7426 = !DILocation(line: 2628, column: 47, scope: !7409)
!7427 = !DILocation(line: 2628, column: 7, scope: !7409)
!7428 = distinct !{!7428, !7412, !7429}
!7429 = !DILocation(line: 2634, column: 7, scope: !7406)
!7430 = !DILocation(line: 2635, column: 7, scope: !7401)
!7431 = !DILocation(line: 2638, column: 1, scope: !7192)
!7432 = distinct !DISubprogram(name: "ExportRGBQuantum", scope: !1, file: !1, line: 2640, type: !1182, scopeLine: 2643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7433 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !7432, file: !1, line: 2640, type: !459)
!7434 = !DILocation(line: 2640, column: 43, scope: !7432)
!7435 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !7432, file: !1, line: 2641, type: !637)
!7436 = !DILocation(line: 2641, column: 24, scope: !7432)
!7437 = !DILocalVariable(name: "p", arg: 3, scope: !7432, file: !1, line: 2641, type: !740)
!7438 = !DILocation(line: 2641, column: 66, scope: !7432)
!7439 = !DILocalVariable(name: "q", arg: 4, scope: !7432, file: !1, line: 2642, type: !717)
!7440 = !DILocation(line: 2642, column: 27, scope: !7432)
!7441 = !DILocalVariable(name: "range", scope: !7432, file: !1, line: 2645, type: !508)
!7442 = !DILocation(line: 2645, column: 5, scope: !7432)
!7443 = !DILocalVariable(name: "x", scope: !7432, file: !1, line: 2648, type: !453)
!7444 = !DILocation(line: 2648, column: 5, scope: !7432)
!7445 = !DILocalVariable(name: "bit", scope: !7432, file: !1, line: 2651, type: !453)
!7446 = !DILocation(line: 2651, column: 5, scope: !7432)
!7447 = !DILocation(line: 2653, column: 11, scope: !7432)
!7448 = !DILocation(line: 2653, column: 25, scope: !7432)
!7449 = !DILocation(line: 2653, column: 3, scope: !7432)
!7450 = !DILocation(line: 2657, column: 13, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !1, line: 2657, column: 7)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2656, column: 5)
!7453 = distinct !DILexicalBlock(scope: !7432, file: !1, line: 2654, column: 3)
!7454 = !DILocation(line: 2657, column: 12, scope: !7451)
!7455 = !DILocation(line: 2657, column: 17, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7451, file: !1, line: 2657, column: 7)
!7457 = !DILocation(line: 2657, column: 31, scope: !7456)
!7458 = !DILocation(line: 2657, column: 19, scope: !7456)
!7459 = !DILocation(line: 2657, column: 7, scope: !7451)
!7460 = !DILocation(line: 2659, column: 43, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7456, file: !1, line: 2658, column: 7)
!7462 = !DILocation(line: 2659, column: 24, scope: !7461)
!7463 = !DILocation(line: 2659, column: 59, scope: !7461)
!7464 = !DILocation(line: 2659, column: 11, scope: !7461)
!7465 = !DILocation(line: 2659, column: 10, scope: !7461)
!7466 = !DILocation(line: 2660, column: 43, scope: !7461)
!7467 = !DILocation(line: 2660, column: 24, scope: !7461)
!7468 = !DILocation(line: 2660, column: 61, scope: !7461)
!7469 = !DILocation(line: 2660, column: 11, scope: !7461)
!7470 = !DILocation(line: 2660, column: 10, scope: !7461)
!7471 = !DILocation(line: 2661, column: 43, scope: !7461)
!7472 = !DILocation(line: 2661, column: 24, scope: !7461)
!7473 = !DILocation(line: 2661, column: 60, scope: !7461)
!7474 = !DILocation(line: 2661, column: 11, scope: !7461)
!7475 = !DILocation(line: 2661, column: 10, scope: !7461)
!7476 = !DILocation(line: 2662, column: 10, scope: !7461)
!7477 = !DILocation(line: 2663, column: 12, scope: !7461)
!7478 = !DILocation(line: 2663, column: 26, scope: !7461)
!7479 = !DILocation(line: 2663, column: 10, scope: !7461)
!7480 = !DILocation(line: 2664, column: 7, scope: !7461)
!7481 = !DILocation(line: 2657, column: 47, scope: !7456)
!7482 = !DILocation(line: 2657, column: 7, scope: !7456)
!7483 = distinct !{!7483, !7459, !7484}
!7484 = !DILocation(line: 2664, column: 7, scope: !7451)
!7485 = !DILocation(line: 2665, column: 7, scope: !7452)
!7486 = !DILocalVariable(name: "pixel", scope: !7487, file: !1, line: 2670, type: !5)
!7487 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2668, column: 5)
!7488 = !DILocation(line: 2670, column: 9, scope: !7487)
!7489 = !DILocation(line: 2672, column: 29, scope: !7487)
!7490 = !DILocation(line: 2672, column: 43, scope: !7487)
!7491 = !DILocation(line: 2672, column: 13, scope: !7487)
!7492 = !DILocation(line: 2672, column: 12, scope: !7487)
!7493 = !DILocation(line: 2673, column: 11, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2673, column: 11)
!7495 = !DILocation(line: 2673, column: 25, scope: !7494)
!7496 = !DILocation(line: 2673, column: 30, scope: !7494)
!7497 = !DILocation(line: 2673, column: 11, scope: !7487)
!7498 = !DILocation(line: 2675, column: 17, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 2675, column: 11)
!7500 = distinct !DILexicalBlock(scope: !7494, file: !1, line: 2674, column: 9)
!7501 = !DILocation(line: 2675, column: 16, scope: !7499)
!7502 = !DILocation(line: 2675, column: 21, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7499, file: !1, line: 2675, column: 11)
!7504 = !DILocation(line: 2675, column: 35, scope: !7503)
!7505 = !DILocation(line: 2675, column: 23, scope: !7503)
!7506 = !DILocation(line: 2675, column: 11, scope: !7499)
!7507 = !DILocation(line: 2678, column: 33, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7503, file: !1, line: 2676, column: 11)
!7509 = !DILocation(line: 2678, column: 48, scope: !7508)
!7510 = !DILocation(line: 2678, column: 15, scope: !7508)
!7511 = !DILocation(line: 2678, column: 55, scope: !7508)
!7512 = !DILocation(line: 2679, column: 33, scope: !7508)
!7513 = !DILocation(line: 2679, column: 50, scope: !7508)
!7514 = !DILocation(line: 2679, column: 15, scope: !7508)
!7515 = !DILocation(line: 2679, column: 57, scope: !7508)
!7516 = !DILocation(line: 2678, column: 61, scope: !7508)
!7517 = !DILocation(line: 2680, column: 33, scope: !7508)
!7518 = !DILocation(line: 2680, column: 49, scope: !7508)
!7519 = !DILocation(line: 2680, column: 15, scope: !7508)
!7520 = !DILocation(line: 2680, column: 56, scope: !7508)
!7521 = !DILocation(line: 2679, column: 63, scope: !7508)
!7522 = !DILocation(line: 2677, column: 19, scope: !7508)
!7523 = !DILocation(line: 2677, column: 18, scope: !7508)
!7524 = !DILocation(line: 2681, column: 28, scope: !7508)
!7525 = !DILocation(line: 2681, column: 42, scope: !7508)
!7526 = !DILocation(line: 2681, column: 49, scope: !7508)
!7527 = !DILocation(line: 2681, column: 55, scope: !7508)
!7528 = !DILocation(line: 2681, column: 15, scope: !7508)
!7529 = !DILocation(line: 2681, column: 14, scope: !7508)
!7530 = !DILocation(line: 2682, column: 14, scope: !7508)
!7531 = !DILocation(line: 2683, column: 16, scope: !7508)
!7532 = !DILocation(line: 2683, column: 30, scope: !7508)
!7533 = !DILocation(line: 2683, column: 14, scope: !7508)
!7534 = !DILocation(line: 2684, column: 11, scope: !7508)
!7535 = !DILocation(line: 2675, column: 51, scope: !7503)
!7536 = !DILocation(line: 2675, column: 11, scope: !7503)
!7537 = distinct !{!7537, !7506, !7538}
!7538 = !DILocation(line: 2684, column: 11, scope: !7499)
!7539 = !DILocation(line: 2685, column: 11, scope: !7500)
!7540 = !DILocation(line: 2687, column: 11, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2687, column: 11)
!7542 = !DILocation(line: 2687, column: 25, scope: !7541)
!7543 = !DILocation(line: 2687, column: 33, scope: !7541)
!7544 = !DILocation(line: 2687, column: 11, scope: !7487)
!7545 = !DILocation(line: 2689, column: 17, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !1, line: 2689, column: 11)
!7547 = distinct !DILexicalBlock(scope: !7541, file: !1, line: 2688, column: 9)
!7548 = !DILocation(line: 2689, column: 16, scope: !7546)
!7549 = !DILocation(line: 2689, column: 21, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !1, line: 2689, column: 11)
!7551 = !DILocation(line: 2689, column: 35, scope: !7550)
!7552 = !DILocation(line: 2689, column: 23, scope: !7550)
!7553 = !DILocation(line: 2689, column: 11, scope: !7546)
!7554 = !DILocation(line: 2691, column: 52, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7550, file: !1, line: 2690, column: 11)
!7556 = !DILocation(line: 2691, column: 67, scope: !7555)
!7557 = !DILocation(line: 2691, column: 34, scope: !7555)
!7558 = !DILocation(line: 2691, column: 19, scope: !7555)
!7559 = !DILocation(line: 2691, column: 18, scope: !7555)
!7560 = !DILocation(line: 2692, column: 35, scope: !7555)
!7561 = !DILocation(line: 2692, column: 48, scope: !7555)
!7562 = !DILocation(line: 2692, column: 54, scope: !7555)
!7563 = !DILocation(line: 2692, column: 15, scope: !7555)
!7564 = !DILocation(line: 2692, column: 14, scope: !7555)
!7565 = !DILocation(line: 2693, column: 52, scope: !7555)
!7566 = !DILocation(line: 2693, column: 69, scope: !7555)
!7567 = !DILocation(line: 2693, column: 34, scope: !7555)
!7568 = !DILocation(line: 2693, column: 19, scope: !7555)
!7569 = !DILocation(line: 2693, column: 18, scope: !7555)
!7570 = !DILocation(line: 2694, column: 35, scope: !7555)
!7571 = !DILocation(line: 2694, column: 48, scope: !7555)
!7572 = !DILocation(line: 2694, column: 54, scope: !7555)
!7573 = !DILocation(line: 2694, column: 15, scope: !7555)
!7574 = !DILocation(line: 2694, column: 14, scope: !7555)
!7575 = !DILocation(line: 2695, column: 52, scope: !7555)
!7576 = !DILocation(line: 2695, column: 68, scope: !7555)
!7577 = !DILocation(line: 2695, column: 34, scope: !7555)
!7578 = !DILocation(line: 2695, column: 19, scope: !7555)
!7579 = !DILocation(line: 2695, column: 18, scope: !7555)
!7580 = !DILocation(line: 2696, column: 35, scope: !7555)
!7581 = !DILocation(line: 2696, column: 48, scope: !7555)
!7582 = !DILocation(line: 2696, column: 54, scope: !7555)
!7583 = !DILocation(line: 2696, column: 15, scope: !7555)
!7584 = !DILocation(line: 2696, column: 14, scope: !7555)
!7585 = !DILocation(line: 2697, column: 14, scope: !7555)
!7586 = !DILocation(line: 2698, column: 16, scope: !7555)
!7587 = !DILocation(line: 2698, column: 30, scope: !7555)
!7588 = !DILocation(line: 2698, column: 14, scope: !7555)
!7589 = !DILocation(line: 2699, column: 11, scope: !7555)
!7590 = !DILocation(line: 2689, column: 51, scope: !7550)
!7591 = !DILocation(line: 2689, column: 11, scope: !7550)
!7592 = distinct !{!7592, !7553, !7593}
!7593 = !DILocation(line: 2699, column: 11, scope: !7546)
!7594 = !DILocation(line: 2700, column: 11, scope: !7547)
!7595 = !DILocation(line: 2702, column: 13, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2702, column: 7)
!7597 = !DILocation(line: 2702, column: 12, scope: !7596)
!7598 = !DILocation(line: 2702, column: 17, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7596, file: !1, line: 2702, column: 7)
!7600 = !DILocation(line: 2702, column: 31, scope: !7599)
!7601 = !DILocation(line: 2702, column: 19, scope: !7599)
!7602 = !DILocation(line: 2702, column: 7, scope: !7596)
!7603 = !DILocation(line: 2704, column: 48, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7599, file: !1, line: 2703, column: 7)
!7605 = !DILocation(line: 2704, column: 63, scope: !7604)
!7606 = !DILocation(line: 2704, column: 30, scope: !7604)
!7607 = !DILocation(line: 2704, column: 15, scope: !7604)
!7608 = !DILocation(line: 2704, column: 14, scope: !7604)
!7609 = !DILocation(line: 2705, column: 27, scope: !7604)
!7610 = !DILocation(line: 2705, column: 40, scope: !7604)
!7611 = !DILocation(line: 2705, column: 46, scope: !7604)
!7612 = !DILocation(line: 2705, column: 11, scope: !7604)
!7613 = !DILocation(line: 2705, column: 10, scope: !7604)
!7614 = !DILocation(line: 2706, column: 48, scope: !7604)
!7615 = !DILocation(line: 2706, column: 65, scope: !7604)
!7616 = !DILocation(line: 2706, column: 30, scope: !7604)
!7617 = !DILocation(line: 2706, column: 15, scope: !7604)
!7618 = !DILocation(line: 2706, column: 14, scope: !7604)
!7619 = !DILocation(line: 2707, column: 27, scope: !7604)
!7620 = !DILocation(line: 2707, column: 40, scope: !7604)
!7621 = !DILocation(line: 2707, column: 46, scope: !7604)
!7622 = !DILocation(line: 2707, column: 11, scope: !7604)
!7623 = !DILocation(line: 2707, column: 10, scope: !7604)
!7624 = !DILocation(line: 2708, column: 48, scope: !7604)
!7625 = !DILocation(line: 2708, column: 64, scope: !7604)
!7626 = !DILocation(line: 2708, column: 30, scope: !7604)
!7627 = !DILocation(line: 2708, column: 15, scope: !7604)
!7628 = !DILocation(line: 2708, column: 14, scope: !7604)
!7629 = !DILocation(line: 2709, column: 27, scope: !7604)
!7630 = !DILocation(line: 2709, column: 40, scope: !7604)
!7631 = !DILocation(line: 2709, column: 46, scope: !7604)
!7632 = !DILocation(line: 2709, column: 11, scope: !7604)
!7633 = !DILocation(line: 2709, column: 10, scope: !7604)
!7634 = !DILocation(line: 2710, column: 10, scope: !7604)
!7635 = !DILocation(line: 2711, column: 12, scope: !7604)
!7636 = !DILocation(line: 2711, column: 26, scope: !7604)
!7637 = !DILocation(line: 2711, column: 10, scope: !7604)
!7638 = !DILocation(line: 2712, column: 7, scope: !7604)
!7639 = !DILocation(line: 2702, column: 47, scope: !7599)
!7640 = !DILocation(line: 2702, column: 7, scope: !7599)
!7641 = distinct !{!7641, !7602, !7642}
!7642 = !DILocation(line: 2712, column: 7, scope: !7596)
!7643 = !DILocation(line: 2713, column: 7, scope: !7487)
!7644 = !DILocalVariable(name: "pixel", scope: !7645, file: !1, line: 2718, type: !5)
!7645 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2716, column: 5)
!7646 = !DILocation(line: 2718, column: 9, scope: !7645)
!7647 = !DILocation(line: 2720, column: 29, scope: !7645)
!7648 = !DILocation(line: 2720, column: 43, scope: !7645)
!7649 = !DILocation(line: 2720, column: 13, scope: !7645)
!7650 = !DILocation(line: 2720, column: 12, scope: !7645)
!7651 = !DILocation(line: 2721, column: 11, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7645, file: !1, line: 2721, column: 11)
!7653 = !DILocation(line: 2721, column: 25, scope: !7652)
!7654 = !DILocation(line: 2721, column: 30, scope: !7652)
!7655 = !DILocation(line: 2721, column: 11, scope: !7645)
!7656 = !DILocation(line: 2723, column: 17, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !1, line: 2723, column: 11)
!7658 = distinct !DILexicalBlock(scope: !7652, file: !1, line: 2722, column: 9)
!7659 = !DILocation(line: 2723, column: 16, scope: !7657)
!7660 = !DILocation(line: 2723, column: 21, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7657, file: !1, line: 2723, column: 11)
!7662 = !DILocation(line: 2723, column: 38, scope: !7661)
!7663 = !DILocation(line: 2723, column: 37, scope: !7661)
!7664 = !DILocation(line: 2723, column: 51, scope: !7661)
!7665 = !DILocation(line: 2723, column: 23, scope: !7661)
!7666 = !DILocation(line: 2723, column: 11, scope: !7657)
!7667 = !DILocation(line: 2725, column: 21, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7661, file: !1, line: 2724, column: 11)
!7669 = !DILocation(line: 2725, column: 23, scope: !7668)
!7670 = !DILocation(line: 2725, column: 13, scope: !7668)
!7671 = !DILocation(line: 2726, column: 13, scope: !7668)
!7672 = !DILocation(line: 2730, column: 56, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !1, line: 2729, column: 15)
!7674 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 2726, column: 13)
!7675 = !DILocation(line: 2730, column: 71, scope: !7673)
!7676 = !DILocation(line: 2730, column: 38, scope: !7673)
!7677 = !DILocation(line: 2730, column: 23, scope: !7673)
!7678 = !DILocation(line: 2730, column: 22, scope: !7673)
!7679 = !DILocation(line: 2731, column: 17, scope: !7673)
!7680 = !DILocation(line: 2735, column: 56, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7674, file: !1, line: 2734, column: 15)
!7682 = !DILocation(line: 2735, column: 73, scope: !7681)
!7683 = !DILocation(line: 2735, column: 38, scope: !7681)
!7684 = !DILocation(line: 2735, column: 23, scope: !7681)
!7685 = !DILocation(line: 2735, column: 22, scope: !7681)
!7686 = !DILocation(line: 2736, column: 17, scope: !7681)
!7687 = !DILocation(line: 2740, column: 56, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7674, file: !1, line: 2739, column: 15)
!7689 = !DILocation(line: 2740, column: 72, scope: !7688)
!7690 = !DILocation(line: 2740, column: 38, scope: !7688)
!7691 = !DILocation(line: 2740, column: 23, scope: !7688)
!7692 = !DILocation(line: 2740, column: 22, scope: !7688)
!7693 = !DILocation(line: 2741, column: 18, scope: !7688)
!7694 = !DILocation(line: 2742, column: 17, scope: !7688)
!7695 = !DILocation(line: 2745, column: 29, scope: !7668)
!7696 = !DILocation(line: 2745, column: 43, scope: !7668)
!7697 = !DILocation(line: 2745, column: 68, scope: !7668)
!7698 = !DILocation(line: 2745, column: 74, scope: !7668)
!7699 = !DILocation(line: 2745, column: 50, scope: !7668)
!7700 = !DILocation(line: 2745, column: 80, scope: !7668)
!7701 = !DILocation(line: 2745, column: 15, scope: !7668)
!7702 = !DILocation(line: 2745, column: 14, scope: !7668)
!7703 = !DILocation(line: 2746, column: 22, scope: !7668)
!7704 = !DILocation(line: 2746, column: 23, scope: !7668)
!7705 = !DILocation(line: 2746, column: 27, scope: !7668)
!7706 = !DILocation(line: 2746, column: 13, scope: !7668)
!7707 = !DILocation(line: 2747, column: 13, scope: !7668)
!7708 = !DILocation(line: 2751, column: 56, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2750, column: 15)
!7710 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 2747, column: 13)
!7711 = !DILocation(line: 2751, column: 71, scope: !7709)
!7712 = !DILocation(line: 2751, column: 38, scope: !7709)
!7713 = !DILocation(line: 2751, column: 23, scope: !7709)
!7714 = !DILocation(line: 2751, column: 22, scope: !7709)
!7715 = !DILocation(line: 2752, column: 17, scope: !7709)
!7716 = !DILocation(line: 2756, column: 56, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2755, column: 15)
!7718 = !DILocation(line: 2756, column: 73, scope: !7717)
!7719 = !DILocation(line: 2756, column: 38, scope: !7717)
!7720 = !DILocation(line: 2756, column: 23, scope: !7717)
!7721 = !DILocation(line: 2756, column: 22, scope: !7717)
!7722 = !DILocation(line: 2757, column: 17, scope: !7717)
!7723 = !DILocation(line: 2761, column: 56, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7710, file: !1, line: 2760, column: 15)
!7725 = !DILocation(line: 2761, column: 72, scope: !7724)
!7726 = !DILocation(line: 2761, column: 38, scope: !7724)
!7727 = !DILocation(line: 2761, column: 23, scope: !7724)
!7728 = !DILocation(line: 2761, column: 22, scope: !7724)
!7729 = !DILocation(line: 2762, column: 18, scope: !7724)
!7730 = !DILocation(line: 2763, column: 17, scope: !7724)
!7731 = !DILocation(line: 2766, column: 29, scope: !7668)
!7732 = !DILocation(line: 2766, column: 43, scope: !7668)
!7733 = !DILocation(line: 2766, column: 68, scope: !7668)
!7734 = !DILocation(line: 2766, column: 74, scope: !7668)
!7735 = !DILocation(line: 2766, column: 50, scope: !7668)
!7736 = !DILocation(line: 2766, column: 80, scope: !7668)
!7737 = !DILocation(line: 2766, column: 15, scope: !7668)
!7738 = !DILocation(line: 2766, column: 14, scope: !7668)
!7739 = !DILocation(line: 2767, column: 16, scope: !7668)
!7740 = !DILocation(line: 2767, column: 30, scope: !7668)
!7741 = !DILocation(line: 2767, column: 14, scope: !7668)
!7742 = !DILocation(line: 2768, column: 11, scope: !7668)
!7743 = !DILocation(line: 2723, column: 57, scope: !7661)
!7744 = !DILocation(line: 2723, column: 11, scope: !7661)
!7745 = distinct !{!7745, !7666, !7746}
!7746 = !DILocation(line: 2768, column: 11, scope: !7657)
!7747 = !DILocation(line: 2769, column: 19, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7658, file: !1, line: 2769, column: 11)
!7749 = !DILocation(line: 2769, column: 16, scope: !7748)
!7750 = !DILocation(line: 2769, column: 23, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7748, file: !1, line: 2769, column: 11)
!7752 = !DILocation(line: 2769, column: 42, scope: !7751)
!7753 = !DILocation(line: 2769, column: 41, scope: !7751)
!7754 = !DILocation(line: 2769, column: 56, scope: !7751)
!7755 = !DILocation(line: 2769, column: 27, scope: !7751)
!7756 = !DILocation(line: 2769, column: 11, scope: !7748)
!7757 = !DILocation(line: 2771, column: 22, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !1, line: 2770, column: 11)
!7759 = !DILocation(line: 2771, column: 24, scope: !7758)
!7760 = !DILocation(line: 2771, column: 23, scope: !7758)
!7761 = !DILocation(line: 2771, column: 29, scope: !7758)
!7762 = !DILocation(line: 2771, column: 13, scope: !7758)
!7763 = !DILocation(line: 2772, column: 13, scope: !7758)
!7764 = !DILocation(line: 2776, column: 56, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 2775, column: 15)
!7766 = distinct !DILexicalBlock(scope: !7758, file: !1, line: 2772, column: 13)
!7767 = !DILocation(line: 2776, column: 71, scope: !7765)
!7768 = !DILocation(line: 2776, column: 38, scope: !7765)
!7769 = !DILocation(line: 2776, column: 23, scope: !7765)
!7770 = !DILocation(line: 2776, column: 22, scope: !7765)
!7771 = !DILocation(line: 2777, column: 17, scope: !7765)
!7772 = !DILocation(line: 2781, column: 56, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 2780, column: 15)
!7774 = !DILocation(line: 2781, column: 73, scope: !7773)
!7775 = !DILocation(line: 2781, column: 38, scope: !7773)
!7776 = !DILocation(line: 2781, column: 23, scope: !7773)
!7777 = !DILocation(line: 2781, column: 22, scope: !7773)
!7778 = !DILocation(line: 2782, column: 17, scope: !7773)
!7779 = !DILocation(line: 2786, column: 56, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 2785, column: 15)
!7781 = !DILocation(line: 2786, column: 72, scope: !7780)
!7782 = !DILocation(line: 2786, column: 38, scope: !7780)
!7783 = !DILocation(line: 2786, column: 23, scope: !7780)
!7784 = !DILocation(line: 2786, column: 22, scope: !7780)
!7785 = !DILocation(line: 2787, column: 18, scope: !7780)
!7786 = !DILocation(line: 2788, column: 17, scope: !7780)
!7787 = !DILocation(line: 2791, column: 29, scope: !7758)
!7788 = !DILocation(line: 2791, column: 43, scope: !7758)
!7789 = !DILocation(line: 2791, column: 68, scope: !7758)
!7790 = !DILocation(line: 2791, column: 74, scope: !7758)
!7791 = !DILocation(line: 2791, column: 50, scope: !7758)
!7792 = !DILocation(line: 2791, column: 80, scope: !7758)
!7793 = !DILocation(line: 2791, column: 15, scope: !7758)
!7794 = !DILocation(line: 2791, column: 14, scope: !7758)
!7795 = !DILocation(line: 2792, column: 16, scope: !7758)
!7796 = !DILocation(line: 2792, column: 30, scope: !7758)
!7797 = !DILocation(line: 2792, column: 14, scope: !7758)
!7798 = !DILocation(line: 2793, column: 11, scope: !7758)
!7799 = !DILocation(line: 2769, column: 65, scope: !7751)
!7800 = !DILocation(line: 2769, column: 11, scope: !7751)
!7801 = distinct !{!7801, !7756, !7802}
!7802 = !DILocation(line: 2793, column: 11, scope: !7748)
!7803 = !DILocation(line: 2794, column: 15, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7658, file: !1, line: 2794, column: 15)
!7805 = !DILocation(line: 2794, column: 19, scope: !7804)
!7806 = !DILocation(line: 2794, column: 15, scope: !7658)
!7807 = !DILocation(line: 2795, column: 14, scope: !7804)
!7808 = !DILocation(line: 2795, column: 13, scope: !7804)
!7809 = !DILocation(line: 2796, column: 11, scope: !7658)
!7810 = !DILocation(line: 2798, column: 11, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7645, file: !1, line: 2798, column: 11)
!7812 = !DILocation(line: 2798, column: 25, scope: !7811)
!7813 = !DILocation(line: 2798, column: 33, scope: !7811)
!7814 = !DILocation(line: 2798, column: 11, scope: !7645)
!7815 = !DILocation(line: 2800, column: 17, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !1, line: 2800, column: 11)
!7817 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 2799, column: 9)
!7818 = !DILocation(line: 2800, column: 16, scope: !7816)
!7819 = !DILocation(line: 2800, column: 21, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !1, line: 2800, column: 11)
!7821 = !DILocation(line: 2800, column: 35, scope: !7820)
!7822 = !DILocation(line: 2800, column: 23, scope: !7820)
!7823 = !DILocation(line: 2800, column: 11, scope: !7816)
!7824 = !DILocation(line: 2802, column: 52, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7820, file: !1, line: 2801, column: 11)
!7826 = !DILocation(line: 2802, column: 67, scope: !7825)
!7827 = !DILocation(line: 2802, column: 34, scope: !7825)
!7828 = !DILocation(line: 2802, column: 19, scope: !7825)
!7829 = !DILocation(line: 2802, column: 18, scope: !7825)
!7830 = !DILocation(line: 2803, column: 35, scope: !7825)
!7831 = !DILocation(line: 2803, column: 48, scope: !7825)
!7832 = !DILocation(line: 2803, column: 54, scope: !7825)
!7833 = !DILocation(line: 2803, column: 15, scope: !7825)
!7834 = !DILocation(line: 2803, column: 14, scope: !7825)
!7835 = !DILocation(line: 2804, column: 52, scope: !7825)
!7836 = !DILocation(line: 2804, column: 69, scope: !7825)
!7837 = !DILocation(line: 2804, column: 34, scope: !7825)
!7838 = !DILocation(line: 2804, column: 19, scope: !7825)
!7839 = !DILocation(line: 2804, column: 18, scope: !7825)
!7840 = !DILocation(line: 2805, column: 35, scope: !7825)
!7841 = !DILocation(line: 2805, column: 48, scope: !7825)
!7842 = !DILocation(line: 2805, column: 54, scope: !7825)
!7843 = !DILocation(line: 2805, column: 15, scope: !7825)
!7844 = !DILocation(line: 2805, column: 14, scope: !7825)
!7845 = !DILocation(line: 2806, column: 52, scope: !7825)
!7846 = !DILocation(line: 2806, column: 68, scope: !7825)
!7847 = !DILocation(line: 2806, column: 34, scope: !7825)
!7848 = !DILocation(line: 2806, column: 19, scope: !7825)
!7849 = !DILocation(line: 2806, column: 18, scope: !7825)
!7850 = !DILocation(line: 2807, column: 35, scope: !7825)
!7851 = !DILocation(line: 2807, column: 48, scope: !7825)
!7852 = !DILocation(line: 2807, column: 54, scope: !7825)
!7853 = !DILocation(line: 2807, column: 15, scope: !7825)
!7854 = !DILocation(line: 2807, column: 14, scope: !7825)
!7855 = !DILocation(line: 2808, column: 14, scope: !7825)
!7856 = !DILocation(line: 2809, column: 16, scope: !7825)
!7857 = !DILocation(line: 2809, column: 30, scope: !7825)
!7858 = !DILocation(line: 2809, column: 14, scope: !7825)
!7859 = !DILocation(line: 2810, column: 11, scope: !7825)
!7860 = !DILocation(line: 2800, column: 51, scope: !7820)
!7861 = !DILocation(line: 2800, column: 11, scope: !7820)
!7862 = distinct !{!7862, !7823, !7863}
!7863 = !DILocation(line: 2810, column: 11, scope: !7816)
!7864 = !DILocation(line: 2811, column: 11, scope: !7817)
!7865 = !DILocation(line: 2813, column: 13, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7645, file: !1, line: 2813, column: 7)
!7867 = !DILocation(line: 2813, column: 12, scope: !7866)
!7868 = !DILocation(line: 2813, column: 17, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7866, file: !1, line: 2813, column: 7)
!7870 = !DILocation(line: 2813, column: 31, scope: !7869)
!7871 = !DILocation(line: 2813, column: 19, scope: !7869)
!7872 = !DILocation(line: 2813, column: 7, scope: !7866)
!7873 = !DILocation(line: 2815, column: 48, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7869, file: !1, line: 2814, column: 7)
!7875 = !DILocation(line: 2815, column: 63, scope: !7874)
!7876 = !DILocation(line: 2815, column: 30, scope: !7874)
!7877 = !DILocation(line: 2815, column: 15, scope: !7874)
!7878 = !DILocation(line: 2815, column: 14, scope: !7874)
!7879 = !DILocation(line: 2816, column: 27, scope: !7874)
!7880 = !DILocation(line: 2816, column: 40, scope: !7874)
!7881 = !DILocation(line: 2816, column: 46, scope: !7874)
!7882 = !DILocation(line: 2816, column: 11, scope: !7874)
!7883 = !DILocation(line: 2816, column: 10, scope: !7874)
!7884 = !DILocation(line: 2817, column: 48, scope: !7874)
!7885 = !DILocation(line: 2817, column: 65, scope: !7874)
!7886 = !DILocation(line: 2817, column: 30, scope: !7874)
!7887 = !DILocation(line: 2817, column: 15, scope: !7874)
!7888 = !DILocation(line: 2817, column: 14, scope: !7874)
!7889 = !DILocation(line: 2818, column: 27, scope: !7874)
!7890 = !DILocation(line: 2818, column: 40, scope: !7874)
!7891 = !DILocation(line: 2818, column: 46, scope: !7874)
!7892 = !DILocation(line: 2818, column: 11, scope: !7874)
!7893 = !DILocation(line: 2818, column: 10, scope: !7874)
!7894 = !DILocation(line: 2819, column: 48, scope: !7874)
!7895 = !DILocation(line: 2819, column: 64, scope: !7874)
!7896 = !DILocation(line: 2819, column: 30, scope: !7874)
!7897 = !DILocation(line: 2819, column: 15, scope: !7874)
!7898 = !DILocation(line: 2819, column: 14, scope: !7874)
!7899 = !DILocation(line: 2820, column: 27, scope: !7874)
!7900 = !DILocation(line: 2820, column: 40, scope: !7874)
!7901 = !DILocation(line: 2820, column: 46, scope: !7874)
!7902 = !DILocation(line: 2820, column: 11, scope: !7874)
!7903 = !DILocation(line: 2820, column: 10, scope: !7874)
!7904 = !DILocation(line: 2821, column: 10, scope: !7874)
!7905 = !DILocation(line: 2822, column: 12, scope: !7874)
!7906 = !DILocation(line: 2822, column: 26, scope: !7874)
!7907 = !DILocation(line: 2822, column: 10, scope: !7874)
!7908 = !DILocation(line: 2823, column: 7, scope: !7874)
!7909 = !DILocation(line: 2813, column: 47, scope: !7869)
!7910 = !DILocation(line: 2813, column: 7, scope: !7869)
!7911 = distinct !{!7911, !7872, !7912}
!7912 = !DILocation(line: 2823, column: 7, scope: !7866)
!7913 = !DILocation(line: 2824, column: 7, scope: !7645)
!7914 = !DILocalVariable(name: "pixel", scope: !7915, file: !1, line: 2829, type: !449)
!7915 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2827, column: 5)
!7916 = !DILocation(line: 2829, column: 9, scope: !7915)
!7917 = !DILocation(line: 2831, column: 11, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 2831, column: 11)
!7919 = !DILocation(line: 2831, column: 25, scope: !7918)
!7920 = !DILocation(line: 2831, column: 32, scope: !7918)
!7921 = !DILocation(line: 2831, column: 11, scope: !7915)
!7922 = !DILocation(line: 2833, column: 17, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !1, line: 2833, column: 11)
!7924 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 2832, column: 9)
!7925 = !DILocation(line: 2833, column: 16, scope: !7923)
!7926 = !DILocation(line: 2833, column: 21, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 2833, column: 11)
!7928 = !DILocation(line: 2833, column: 35, scope: !7927)
!7929 = !DILocation(line: 2833, column: 23, scope: !7927)
!7930 = !DILocation(line: 2833, column: 11, scope: !7923)
!7931 = !DILocation(line: 2835, column: 54, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7927, file: !1, line: 2834, column: 11)
!7933 = !DILocation(line: 2835, column: 53, scope: !7932)
!7934 = !DILocation(line: 2835, column: 41, scope: !7932)
!7935 = !DILocation(line: 2835, column: 19, scope: !7932)
!7936 = !DILocation(line: 2835, column: 18, scope: !7932)
!7937 = !DILocation(line: 2836, column: 29, scope: !7932)
!7938 = !DILocation(line: 2836, column: 43, scope: !7932)
!7939 = !DILocation(line: 2836, column: 50, scope: !7932)
!7940 = !DILocation(line: 2836, column: 56, scope: !7932)
!7941 = !DILocation(line: 2836, column: 15, scope: !7932)
!7942 = !DILocation(line: 2836, column: 14, scope: !7932)
!7943 = !DILocation(line: 2837, column: 54, scope: !7932)
!7944 = !DILocation(line: 2837, column: 53, scope: !7932)
!7945 = !DILocation(line: 2837, column: 41, scope: !7932)
!7946 = !DILocation(line: 2837, column: 19, scope: !7932)
!7947 = !DILocation(line: 2837, column: 18, scope: !7932)
!7948 = !DILocation(line: 2838, column: 29, scope: !7932)
!7949 = !DILocation(line: 2838, column: 43, scope: !7932)
!7950 = !DILocation(line: 2838, column: 50, scope: !7932)
!7951 = !DILocation(line: 2838, column: 56, scope: !7932)
!7952 = !DILocation(line: 2838, column: 15, scope: !7932)
!7953 = !DILocation(line: 2838, column: 14, scope: !7932)
!7954 = !DILocation(line: 2839, column: 54, scope: !7932)
!7955 = !DILocation(line: 2839, column: 53, scope: !7932)
!7956 = !DILocation(line: 2839, column: 41, scope: !7932)
!7957 = !DILocation(line: 2839, column: 19, scope: !7932)
!7958 = !DILocation(line: 2839, column: 18, scope: !7932)
!7959 = !DILocation(line: 2840, column: 29, scope: !7932)
!7960 = !DILocation(line: 2840, column: 43, scope: !7932)
!7961 = !DILocation(line: 2840, column: 50, scope: !7932)
!7962 = !DILocation(line: 2840, column: 56, scope: !7932)
!7963 = !DILocation(line: 2840, column: 15, scope: !7932)
!7964 = !DILocation(line: 2840, column: 14, scope: !7932)
!7965 = !DILocation(line: 2841, column: 14, scope: !7932)
!7966 = !DILocation(line: 2842, column: 16, scope: !7932)
!7967 = !DILocation(line: 2842, column: 30, scope: !7932)
!7968 = !DILocation(line: 2842, column: 14, scope: !7932)
!7969 = !DILocation(line: 2843, column: 11, scope: !7932)
!7970 = !DILocation(line: 2833, column: 51, scope: !7927)
!7971 = !DILocation(line: 2833, column: 11, scope: !7927)
!7972 = distinct !{!7972, !7930, !7973}
!7973 = !DILocation(line: 2843, column: 11, scope: !7923)
!7974 = !DILocation(line: 2844, column: 11, scope: !7924)
!7975 = !DILocation(line: 2846, column: 13, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 2846, column: 7)
!7977 = !DILocation(line: 2846, column: 12, scope: !7976)
!7978 = !DILocation(line: 2846, column: 17, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7976, file: !1, line: 2846, column: 7)
!7980 = !DILocation(line: 2846, column: 31, scope: !7979)
!7981 = !DILocation(line: 2846, column: 19, scope: !7979)
!7982 = !DILocation(line: 2846, column: 7, scope: !7976)
!7983 = !DILocation(line: 2848, column: 35, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !1, line: 2847, column: 7)
!7985 = !DILocation(line: 2848, column: 15, scope: !7984)
!7986 = !DILocation(line: 2848, column: 14, scope: !7984)
!7987 = !DILocation(line: 2849, column: 25, scope: !7984)
!7988 = !DILocation(line: 2849, column: 39, scope: !7984)
!7989 = !DILocation(line: 2849, column: 46, scope: !7984)
!7990 = !DILocation(line: 2849, column: 52, scope: !7984)
!7991 = !DILocation(line: 2849, column: 11, scope: !7984)
!7992 = !DILocation(line: 2849, column: 10, scope: !7984)
!7993 = !DILocation(line: 2850, column: 35, scope: !7984)
!7994 = !DILocation(line: 2850, column: 15, scope: !7984)
!7995 = !DILocation(line: 2850, column: 14, scope: !7984)
!7996 = !DILocation(line: 2851, column: 25, scope: !7984)
!7997 = !DILocation(line: 2851, column: 39, scope: !7984)
!7998 = !DILocation(line: 2851, column: 46, scope: !7984)
!7999 = !DILocation(line: 2851, column: 52, scope: !7984)
!8000 = !DILocation(line: 2851, column: 11, scope: !7984)
!8001 = !DILocation(line: 2851, column: 10, scope: !7984)
!8002 = !DILocation(line: 2852, column: 35, scope: !7984)
!8003 = !DILocation(line: 2852, column: 15, scope: !7984)
!8004 = !DILocation(line: 2852, column: 14, scope: !7984)
!8005 = !DILocation(line: 2853, column: 25, scope: !7984)
!8006 = !DILocation(line: 2853, column: 39, scope: !7984)
!8007 = !DILocation(line: 2853, column: 46, scope: !7984)
!8008 = !DILocation(line: 2853, column: 52, scope: !7984)
!8009 = !DILocation(line: 2853, column: 11, scope: !7984)
!8010 = !DILocation(line: 2853, column: 10, scope: !7984)
!8011 = !DILocation(line: 2854, column: 10, scope: !7984)
!8012 = !DILocation(line: 2855, column: 12, scope: !7984)
!8013 = !DILocation(line: 2855, column: 26, scope: !7984)
!8014 = !DILocation(line: 2855, column: 10, scope: !7984)
!8015 = !DILocation(line: 2856, column: 7, scope: !7984)
!8016 = !DILocation(line: 2846, column: 47, scope: !7979)
!8017 = !DILocation(line: 2846, column: 7, scope: !7979)
!8018 = distinct !{!8018, !7982, !8019}
!8019 = !DILocation(line: 2856, column: 7, scope: !7976)
!8020 = !DILocation(line: 2857, column: 7, scope: !7915)
!8021 = !DILocalVariable(name: "pixel", scope: !8022, file: !1, line: 2862, type: !5)
!8022 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2860, column: 5)
!8023 = !DILocation(line: 2862, column: 9, scope: !8022)
!8024 = !DILocation(line: 2864, column: 11, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8022, file: !1, line: 2864, column: 11)
!8026 = !DILocation(line: 2864, column: 25, scope: !8025)
!8027 = !DILocation(line: 2864, column: 32, scope: !8025)
!8028 = !DILocation(line: 2864, column: 11, scope: !8022)
!8029 = !DILocation(line: 2866, column: 17, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8031, file: !1, line: 2866, column: 11)
!8031 = distinct !DILexicalBlock(scope: !8025, file: !1, line: 2865, column: 9)
!8032 = !DILocation(line: 2866, column: 16, scope: !8030)
!8033 = !DILocation(line: 2866, column: 21, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !1, line: 2866, column: 11)
!8035 = !DILocation(line: 2866, column: 35, scope: !8034)
!8036 = !DILocation(line: 2866, column: 23, scope: !8034)
!8037 = !DILocation(line: 2866, column: 11, scope: !8030)
!8038 = !DILocation(line: 2868, column: 29, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8034, file: !1, line: 2867, column: 11)
!8040 = !DILocation(line: 2868, column: 50, scope: !8039)
!8041 = !DILocation(line: 2868, column: 42, scope: !8039)
!8042 = !DILocation(line: 2868, column: 65, scope: !8039)
!8043 = !DILocation(line: 2868, column: 15, scope: !8039)
!8044 = !DILocation(line: 2868, column: 14, scope: !8039)
!8045 = !DILocation(line: 2869, column: 29, scope: !8039)
!8046 = !DILocation(line: 2869, column: 50, scope: !8039)
!8047 = !DILocation(line: 2869, column: 42, scope: !8039)
!8048 = !DILocation(line: 2869, column: 67, scope: !8039)
!8049 = !DILocation(line: 2869, column: 15, scope: !8039)
!8050 = !DILocation(line: 2869, column: 14, scope: !8039)
!8051 = !DILocation(line: 2870, column: 29, scope: !8039)
!8052 = !DILocation(line: 2870, column: 50, scope: !8039)
!8053 = !DILocation(line: 2870, column: 42, scope: !8039)
!8054 = !DILocation(line: 2870, column: 66, scope: !8039)
!8055 = !DILocation(line: 2870, column: 15, scope: !8039)
!8056 = !DILocation(line: 2870, column: 14, scope: !8039)
!8057 = !DILocation(line: 2871, column: 14, scope: !8039)
!8058 = !DILocation(line: 2872, column: 16, scope: !8039)
!8059 = !DILocation(line: 2872, column: 30, scope: !8039)
!8060 = !DILocation(line: 2872, column: 14, scope: !8039)
!8061 = !DILocation(line: 2873, column: 11, scope: !8039)
!8062 = !DILocation(line: 2866, column: 51, scope: !8034)
!8063 = !DILocation(line: 2866, column: 11, scope: !8034)
!8064 = distinct !{!8064, !8037, !8065}
!8065 = !DILocation(line: 2873, column: 11, scope: !8030)
!8066 = !DILocation(line: 2874, column: 11, scope: !8031)
!8067 = !DILocation(line: 2876, column: 13, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8022, file: !1, line: 2876, column: 7)
!8069 = !DILocation(line: 2876, column: 12, scope: !8068)
!8070 = !DILocation(line: 2876, column: 17, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8068, file: !1, line: 2876, column: 7)
!8072 = !DILocation(line: 2876, column: 31, scope: !8071)
!8073 = !DILocation(line: 2876, column: 19, scope: !8071)
!8074 = !DILocation(line: 2876, column: 7, scope: !8068)
!8075 = !DILocation(line: 2878, column: 34, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8071, file: !1, line: 2877, column: 7)
!8077 = !DILocation(line: 2878, column: 15, scope: !8076)
!8078 = !DILocation(line: 2878, column: 14, scope: !8076)
!8079 = !DILocation(line: 2879, column: 24, scope: !8076)
!8080 = !DILocation(line: 2879, column: 38, scope: !8076)
!8081 = !DILocation(line: 2879, column: 45, scope: !8076)
!8082 = !DILocation(line: 2879, column: 51, scope: !8076)
!8083 = !DILocation(line: 2879, column: 11, scope: !8076)
!8084 = !DILocation(line: 2879, column: 10, scope: !8076)
!8085 = !DILocation(line: 2880, column: 34, scope: !8076)
!8086 = !DILocation(line: 2880, column: 15, scope: !8076)
!8087 = !DILocation(line: 2880, column: 14, scope: !8076)
!8088 = !DILocation(line: 2881, column: 24, scope: !8076)
!8089 = !DILocation(line: 2881, column: 38, scope: !8076)
!8090 = !DILocation(line: 2881, column: 45, scope: !8076)
!8091 = !DILocation(line: 2881, column: 51, scope: !8076)
!8092 = !DILocation(line: 2881, column: 11, scope: !8076)
!8093 = !DILocation(line: 2881, column: 10, scope: !8076)
!8094 = !DILocation(line: 2882, column: 34, scope: !8076)
!8095 = !DILocation(line: 2882, column: 15, scope: !8076)
!8096 = !DILocation(line: 2882, column: 14, scope: !8076)
!8097 = !DILocation(line: 2883, column: 24, scope: !8076)
!8098 = !DILocation(line: 2883, column: 38, scope: !8076)
!8099 = !DILocation(line: 2883, column: 45, scope: !8076)
!8100 = !DILocation(line: 2883, column: 51, scope: !8076)
!8101 = !DILocation(line: 2883, column: 11, scope: !8076)
!8102 = !DILocation(line: 2883, column: 10, scope: !8076)
!8103 = !DILocation(line: 2884, column: 10, scope: !8076)
!8104 = !DILocation(line: 2885, column: 12, scope: !8076)
!8105 = !DILocation(line: 2885, column: 26, scope: !8076)
!8106 = !DILocation(line: 2885, column: 10, scope: !8076)
!8107 = !DILocation(line: 2886, column: 7, scope: !8076)
!8108 = !DILocation(line: 2876, column: 47, scope: !8071)
!8109 = !DILocation(line: 2876, column: 7, scope: !8071)
!8110 = distinct !{!8110, !8074, !8111}
!8111 = !DILocation(line: 2886, column: 7, scope: !8068)
!8112 = !DILocation(line: 2887, column: 7, scope: !8022)
!8113 = !DILocation(line: 2891, column: 11, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !1, line: 2891, column: 11)
!8115 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2890, column: 5)
!8116 = !DILocation(line: 2891, column: 25, scope: !8114)
!8117 = !DILocation(line: 2891, column: 32, scope: !8114)
!8118 = !DILocation(line: 2891, column: 11, scope: !8115)
!8119 = !DILocation(line: 2893, column: 17, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !1, line: 2893, column: 11)
!8121 = distinct !DILexicalBlock(scope: !8114, file: !1, line: 2892, column: 9)
!8122 = !DILocation(line: 2893, column: 16, scope: !8120)
!8123 = !DILocation(line: 2893, column: 21, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8120, file: !1, line: 2893, column: 11)
!8125 = !DILocation(line: 2893, column: 35, scope: !8124)
!8126 = !DILocation(line: 2893, column: 23, scope: !8124)
!8127 = !DILocation(line: 2893, column: 11, scope: !8120)
!8128 = !DILocation(line: 2895, column: 30, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8124, file: !1, line: 2894, column: 11)
!8130 = !DILocation(line: 2895, column: 52, scope: !8129)
!8131 = !DILocation(line: 2895, column: 43, scope: !8129)
!8132 = !DILocation(line: 2895, column: 67, scope: !8129)
!8133 = !DILocation(line: 2895, column: 15, scope: !8129)
!8134 = !DILocation(line: 2895, column: 14, scope: !8129)
!8135 = !DILocation(line: 2896, column: 30, scope: !8129)
!8136 = !DILocation(line: 2896, column: 52, scope: !8129)
!8137 = !DILocation(line: 2896, column: 43, scope: !8129)
!8138 = !DILocation(line: 2896, column: 69, scope: !8129)
!8139 = !DILocation(line: 2896, column: 15, scope: !8129)
!8140 = !DILocation(line: 2896, column: 14, scope: !8129)
!8141 = !DILocation(line: 2897, column: 30, scope: !8129)
!8142 = !DILocation(line: 2897, column: 52, scope: !8129)
!8143 = !DILocation(line: 2897, column: 43, scope: !8129)
!8144 = !DILocation(line: 2897, column: 68, scope: !8129)
!8145 = !DILocation(line: 2897, column: 15, scope: !8129)
!8146 = !DILocation(line: 2897, column: 14, scope: !8129)
!8147 = !DILocation(line: 2898, column: 14, scope: !8129)
!8148 = !DILocation(line: 2899, column: 16, scope: !8129)
!8149 = !DILocation(line: 2899, column: 30, scope: !8129)
!8150 = !DILocation(line: 2899, column: 14, scope: !8129)
!8151 = !DILocation(line: 2900, column: 11, scope: !8129)
!8152 = !DILocation(line: 2893, column: 51, scope: !8124)
!8153 = !DILocation(line: 2893, column: 11, scope: !8124)
!8154 = distinct !{!8154, !8127, !8155}
!8155 = !DILocation(line: 2900, column: 11, scope: !8120)
!8156 = !DILocation(line: 2901, column: 11, scope: !8121)
!8157 = !DILocation(line: 2903, column: 5, scope: !8115)
!8158 = !DILocation(line: 2906, column: 29, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 2905, column: 5)
!8160 = !DILocation(line: 2906, column: 43, scope: !8159)
!8161 = !DILocation(line: 2906, column: 13, scope: !8159)
!8162 = !DILocation(line: 2906, column: 12, scope: !8159)
!8163 = !DILocation(line: 2907, column: 13, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !1, line: 2907, column: 7)
!8165 = !DILocation(line: 2907, column: 12, scope: !8164)
!8166 = !DILocation(line: 2907, column: 17, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8164, file: !1, line: 2907, column: 7)
!8168 = !DILocation(line: 2907, column: 31, scope: !8167)
!8169 = !DILocation(line: 2907, column: 19, scope: !8167)
!8170 = !DILocation(line: 2907, column: 7, scope: !8164)
!8171 = !DILocation(line: 2909, column: 27, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8167, file: !1, line: 2908, column: 7)
!8173 = !DILocation(line: 2910, column: 29, scope: !8172)
!8174 = !DILocation(line: 2910, column: 44, scope: !8172)
!8175 = !DILocation(line: 2910, column: 11, scope: !8172)
!8176 = !DILocation(line: 2910, column: 51, scope: !8172)
!8177 = !DILocation(line: 2909, column: 11, scope: !8172)
!8178 = !DILocation(line: 2909, column: 10, scope: !8172)
!8179 = !DILocation(line: 2911, column: 27, scope: !8172)
!8180 = !DILocation(line: 2912, column: 29, scope: !8172)
!8181 = !DILocation(line: 2912, column: 46, scope: !8172)
!8182 = !DILocation(line: 2912, column: 11, scope: !8172)
!8183 = !DILocation(line: 2912, column: 53, scope: !8172)
!8184 = !DILocation(line: 2911, column: 11, scope: !8172)
!8185 = !DILocation(line: 2911, column: 10, scope: !8172)
!8186 = !DILocation(line: 2913, column: 27, scope: !8172)
!8187 = !DILocation(line: 2914, column: 29, scope: !8172)
!8188 = !DILocation(line: 2914, column: 45, scope: !8172)
!8189 = !DILocation(line: 2914, column: 11, scope: !8172)
!8190 = !DILocation(line: 2914, column: 52, scope: !8172)
!8191 = !DILocation(line: 2913, column: 11, scope: !8172)
!8192 = !DILocation(line: 2913, column: 10, scope: !8172)
!8193 = !DILocation(line: 2915, column: 10, scope: !8172)
!8194 = !DILocation(line: 2916, column: 12, scope: !8172)
!8195 = !DILocation(line: 2916, column: 26, scope: !8172)
!8196 = !DILocation(line: 2916, column: 10, scope: !8172)
!8197 = !DILocation(line: 2917, column: 7, scope: !8172)
!8198 = !DILocation(line: 2907, column: 47, scope: !8167)
!8199 = !DILocation(line: 2907, column: 7, scope: !8167)
!8200 = distinct !{!8200, !8170, !8201}
!8201 = !DILocation(line: 2917, column: 7, scope: !8164)
!8202 = !DILocation(line: 2918, column: 7, scope: !8159)
!8203 = !DILocation(line: 2921, column: 1, scope: !7432)
!8204 = distinct !DISubprogram(name: "ExportRGBAQuantum", scope: !1, file: !1, line: 2923, type: !1182, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8205 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !8204, file: !1, line: 2923, type: !459)
!8206 = !DILocation(line: 2923, column: 44, scope: !8204)
!8207 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !8204, file: !1, line: 2924, type: !637)
!8208 = !DILocation(line: 2924, column: 24, scope: !8204)
!8209 = !DILocalVariable(name: "p", arg: 3, scope: !8204, file: !1, line: 2924, type: !740)
!8210 = !DILocation(line: 2924, column: 66, scope: !8204)
!8211 = !DILocalVariable(name: "q", arg: 4, scope: !8204, file: !1, line: 2925, type: !717)
!8212 = !DILocation(line: 2925, column: 27, scope: !8204)
!8213 = !DILocalVariable(name: "range", scope: !8204, file: !1, line: 2928, type: !508)
!8214 = !DILocation(line: 2928, column: 5, scope: !8204)
!8215 = !DILocalVariable(name: "x", scope: !8204, file: !1, line: 2931, type: !453)
!8216 = !DILocation(line: 2931, column: 5, scope: !8204)
!8217 = !DILocation(line: 2933, column: 11, scope: !8204)
!8218 = !DILocation(line: 2933, column: 25, scope: !8204)
!8219 = !DILocation(line: 2933, column: 3, scope: !8204)
!8220 = !DILocalVariable(name: "pixel", scope: !8221, file: !1, line: 2938, type: !437)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 2936, column: 5)
!8222 = distinct !DILexicalBlock(scope: !8204, file: !1, line: 2934, column: 3)
!8223 = !DILocation(line: 2938, column: 9, scope: !8221)
!8224 = !DILocation(line: 2940, column: 13, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8221, file: !1, line: 2940, column: 7)
!8226 = !DILocation(line: 2940, column: 12, scope: !8225)
!8227 = !DILocation(line: 2940, column: 17, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8225, file: !1, line: 2940, column: 7)
!8229 = !DILocation(line: 2940, column: 31, scope: !8228)
!8230 = !DILocation(line: 2940, column: 19, scope: !8228)
!8231 = !DILocation(line: 2940, column: 7, scope: !8225)
!8232 = !DILocation(line: 2942, column: 34, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8228, file: !1, line: 2941, column: 7)
!8234 = !DILocation(line: 2942, column: 15, scope: !8233)
!8235 = !DILocation(line: 2942, column: 14, scope: !8233)
!8236 = !DILocation(line: 2943, column: 24, scope: !8233)
!8237 = !DILocation(line: 2943, column: 30, scope: !8233)
!8238 = !DILocation(line: 2943, column: 11, scope: !8233)
!8239 = !DILocation(line: 2943, column: 10, scope: !8233)
!8240 = !DILocation(line: 2944, column: 34, scope: !8233)
!8241 = !DILocation(line: 2944, column: 15, scope: !8233)
!8242 = !DILocation(line: 2944, column: 14, scope: !8233)
!8243 = !DILocation(line: 2945, column: 24, scope: !8233)
!8244 = !DILocation(line: 2945, column: 30, scope: !8233)
!8245 = !DILocation(line: 2945, column: 11, scope: !8233)
!8246 = !DILocation(line: 2945, column: 10, scope: !8233)
!8247 = !DILocation(line: 2946, column: 34, scope: !8233)
!8248 = !DILocation(line: 2946, column: 15, scope: !8233)
!8249 = !DILocation(line: 2946, column: 14, scope: !8233)
!8250 = !DILocation(line: 2947, column: 24, scope: !8233)
!8251 = !DILocation(line: 2947, column: 30, scope: !8233)
!8252 = !DILocation(line: 2947, column: 11, scope: !8233)
!8253 = !DILocation(line: 2947, column: 10, scope: !8233)
!8254 = !DILocation(line: 2948, column: 44, scope: !8233)
!8255 = !DILocation(line: 2948, column: 34, scope: !8233)
!8256 = !DILocation(line: 2948, column: 15, scope: !8233)
!8257 = !DILocation(line: 2948, column: 14, scope: !8233)
!8258 = !DILocation(line: 2949, column: 24, scope: !8233)
!8259 = !DILocation(line: 2949, column: 30, scope: !8233)
!8260 = !DILocation(line: 2949, column: 11, scope: !8233)
!8261 = !DILocation(line: 2949, column: 10, scope: !8233)
!8262 = !DILocation(line: 2950, column: 10, scope: !8233)
!8263 = !DILocation(line: 2951, column: 12, scope: !8233)
!8264 = !DILocation(line: 2951, column: 26, scope: !8233)
!8265 = !DILocation(line: 2951, column: 10, scope: !8233)
!8266 = !DILocation(line: 2952, column: 7, scope: !8233)
!8267 = !DILocation(line: 2940, column: 47, scope: !8228)
!8268 = !DILocation(line: 2940, column: 7, scope: !8228)
!8269 = distinct !{!8269, !8231, !8270}
!8270 = !DILocation(line: 2952, column: 7, scope: !8225)
!8271 = !DILocation(line: 2953, column: 7, scope: !8221)
!8272 = !DILocalVariable(name: "pixel", scope: !8273, file: !1, line: 2958, type: !5)
!8273 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 2956, column: 5)
!8274 = !DILocation(line: 2958, column: 9, scope: !8273)
!8275 = !DILocation(line: 2960, column: 29, scope: !8273)
!8276 = !DILocation(line: 2960, column: 43, scope: !8273)
!8277 = !DILocation(line: 2960, column: 13, scope: !8273)
!8278 = !DILocation(line: 2960, column: 12, scope: !8273)
!8279 = !DILocation(line: 2961, column: 11, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8273, file: !1, line: 2961, column: 11)
!8281 = !DILocation(line: 2961, column: 25, scope: !8280)
!8282 = !DILocation(line: 2961, column: 30, scope: !8280)
!8283 = !DILocation(line: 2961, column: 11, scope: !8273)
!8284 = !DILocalVariable(name: "i", scope: !8285, file: !1, line: 2964, type: !453)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !1, line: 2962, column: 9)
!8286 = !DILocation(line: 2964, column: 13, scope: !8285)
!8287 = !DILocalVariable(name: "quantum", scope: !8285, file: !1, line: 2967, type: !465)
!8288 = !DILocation(line: 2967, column: 13, scope: !8285)
!8289 = !DILocalVariable(name: "n", scope: !8285, file: !1, line: 2970, type: !453)
!8290 = !DILocation(line: 2970, column: 13, scope: !8285)
!8291 = !DILocation(line: 2972, column: 12, scope: !8285)
!8292 = !DILocation(line: 2973, column: 18, scope: !8285)
!8293 = !DILocation(line: 2974, column: 16, scope: !8285)
!8294 = !DILocation(line: 2975, column: 17, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8285, file: !1, line: 2975, column: 11)
!8296 = !DILocation(line: 2975, column: 16, scope: !8295)
!8297 = !DILocation(line: 2975, column: 21, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8295, file: !1, line: 2975, column: 11)
!8299 = !DILocation(line: 2975, column: 35, scope: !8298)
!8300 = !DILocation(line: 2975, column: 23, scope: !8298)
!8301 = !DILocation(line: 2975, column: 11, scope: !8295)
!8302 = !DILocation(line: 2977, column: 19, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !1, line: 2977, column: 13)
!8304 = distinct !DILexicalBlock(scope: !8298, file: !1, line: 2976, column: 11)
!8305 = !DILocation(line: 2977, column: 18, scope: !8303)
!8306 = !DILocation(line: 2977, column: 23, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8303, file: !1, line: 2977, column: 13)
!8308 = !DILocation(line: 2977, column: 25, scope: !8307)
!8309 = !DILocation(line: 2977, column: 13, scope: !8303)
!8310 = !DILocation(line: 2979, column: 23, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8307, file: !1, line: 2978, column: 13)
!8312 = !DILocation(line: 2979, column: 15, scope: !8311)
!8313 = !DILocation(line: 2981, column: 33, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8311, file: !1, line: 2980, column: 15)
!8315 = !DILocation(line: 2981, column: 32, scope: !8314)
!8316 = !DILocation(line: 2981, column: 49, scope: !8314)
!8317 = !DILocation(line: 2982, column: 33, scope: !8314)
!8318 = !DILocation(line: 2982, column: 32, scope: !8314)
!8319 = !DILocation(line: 2982, column: 51, scope: !8314)
!8320 = !DILocation(line: 2983, column: 33, scope: !8314)
!8321 = !DILocation(line: 2983, column: 32, scope: !8314)
!8322 = !DILocation(line: 2983, column: 50, scope: !8314)
!8323 = !DILocation(line: 2984, column: 57, scope: !8314)
!8324 = !DILocation(line: 2984, column: 56, scope: !8314)
!8325 = !DILocation(line: 2984, column: 33, scope: !8314)
!8326 = !DILocation(line: 2984, column: 32, scope: !8314)
!8327 = !DILocation(line: 2984, column: 78, scope: !8314)
!8328 = !DILocation(line: 2986, column: 23, scope: !8311)
!8329 = !DILocation(line: 2986, column: 25, scope: !8311)
!8330 = !DILocation(line: 2986, column: 15, scope: !8311)
!8331 = !DILocation(line: 2990, column: 64, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !1, line: 2989, column: 17)
!8333 = distinct !DILexicalBlock(scope: !8311, file: !1, line: 2987, column: 15)
!8334 = !DILocation(line: 2990, column: 54, scope: !8332)
!8335 = !DILocation(line: 2991, column: 21, scope: !8332)
!8336 = !DILocation(line: 2990, column: 36, scope: !8332)
!8337 = !DILocation(line: 2991, column: 28, scope: !8332)
!8338 = !DILocation(line: 2990, column: 24, scope: !8332)
!8339 = !DILocation(line: 2992, column: 19, scope: !8332)
!8340 = !DILocation(line: 2996, column: 64, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8333, file: !1, line: 2995, column: 17)
!8342 = !DILocation(line: 2996, column: 54, scope: !8341)
!8343 = !DILocation(line: 2997, column: 21, scope: !8341)
!8344 = !DILocation(line: 2996, column: 36, scope: !8341)
!8345 = !DILocation(line: 2997, column: 28, scope: !8341)
!8346 = !DILocation(line: 2996, column: 24, scope: !8341)
!8347 = !DILocation(line: 2998, column: 19, scope: !8341)
!8348 = !DILocation(line: 3002, column: 64, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8333, file: !1, line: 3001, column: 17)
!8350 = !DILocation(line: 3002, column: 54, scope: !8349)
!8351 = !DILocation(line: 3003, column: 21, scope: !8349)
!8352 = !DILocation(line: 3002, column: 36, scope: !8349)
!8353 = !DILocation(line: 3003, column: 28, scope: !8349)
!8354 = !DILocation(line: 3002, column: 24, scope: !8349)
!8355 = !DILocation(line: 3004, column: 34, scope: !8349)
!8356 = !DILocation(line: 3004, column: 48, scope: !8349)
!8357 = !DILocation(line: 3004, column: 55, scope: !8349)
!8358 = !DILocation(line: 3004, column: 61, scope: !8349)
!8359 = !DILocation(line: 3004, column: 21, scope: !8349)
!8360 = !DILocation(line: 3004, column: 20, scope: !8349)
!8361 = !DILocation(line: 3005, column: 24, scope: !8349)
!8362 = !DILocation(line: 3006, column: 19, scope: !8349)
!8363 = !DILocation(line: 3009, column: 16, scope: !8311)
!8364 = !DILocation(line: 3010, column: 13, scope: !8311)
!8365 = !DILocation(line: 2977, column: 31, scope: !8307)
!8366 = !DILocation(line: 2977, column: 13, scope: !8307)
!8367 = distinct !{!8367, !8309, !8368}
!8368 = !DILocation(line: 3010, column: 13, scope: !8303)
!8369 = !DILocation(line: 3011, column: 14, scope: !8304)
!8370 = !DILocation(line: 3012, column: 16, scope: !8304)
!8371 = !DILocation(line: 3012, column: 30, scope: !8304)
!8372 = !DILocation(line: 3012, column: 14, scope: !8304)
!8373 = !DILocation(line: 3013, column: 11, scope: !8304)
!8374 = !DILocation(line: 2975, column: 51, scope: !8298)
!8375 = !DILocation(line: 2975, column: 11, scope: !8298)
!8376 = distinct !{!8376, !8301, !8377}
!8377 = !DILocation(line: 3013, column: 11, scope: !8295)
!8378 = !DILocation(line: 3014, column: 11, scope: !8285)
!8379 = !DILocation(line: 3016, column: 11, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8273, file: !1, line: 3016, column: 11)
!8381 = !DILocation(line: 3016, column: 25, scope: !8380)
!8382 = !DILocation(line: 3016, column: 33, scope: !8380)
!8383 = !DILocation(line: 3016, column: 11, scope: !8273)
!8384 = !DILocation(line: 3018, column: 17, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !1, line: 3018, column: 11)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !1, line: 3017, column: 9)
!8387 = !DILocation(line: 3018, column: 16, scope: !8385)
!8388 = !DILocation(line: 3018, column: 21, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8385, file: !1, line: 3018, column: 11)
!8390 = !DILocation(line: 3018, column: 35, scope: !8389)
!8391 = !DILocation(line: 3018, column: 23, scope: !8389)
!8392 = !DILocation(line: 3018, column: 11, scope: !8385)
!8393 = !DILocation(line: 3020, column: 52, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !1, line: 3019, column: 11)
!8395 = !DILocation(line: 3020, column: 67, scope: !8394)
!8396 = !DILocation(line: 3020, column: 34, scope: !8394)
!8397 = !DILocation(line: 3020, column: 19, scope: !8394)
!8398 = !DILocation(line: 3020, column: 18, scope: !8394)
!8399 = !DILocation(line: 3021, column: 35, scope: !8394)
!8400 = !DILocation(line: 3021, column: 48, scope: !8394)
!8401 = !DILocation(line: 3021, column: 54, scope: !8394)
!8402 = !DILocation(line: 3021, column: 15, scope: !8394)
!8403 = !DILocation(line: 3021, column: 14, scope: !8394)
!8404 = !DILocation(line: 3022, column: 52, scope: !8394)
!8405 = !DILocation(line: 3022, column: 69, scope: !8394)
!8406 = !DILocation(line: 3022, column: 34, scope: !8394)
!8407 = !DILocation(line: 3022, column: 19, scope: !8394)
!8408 = !DILocation(line: 3022, column: 18, scope: !8394)
!8409 = !DILocation(line: 3023, column: 35, scope: !8394)
!8410 = !DILocation(line: 3023, column: 48, scope: !8394)
!8411 = !DILocation(line: 3023, column: 54, scope: !8394)
!8412 = !DILocation(line: 3023, column: 15, scope: !8394)
!8413 = !DILocation(line: 3023, column: 14, scope: !8394)
!8414 = !DILocation(line: 3024, column: 52, scope: !8394)
!8415 = !DILocation(line: 3024, column: 68, scope: !8394)
!8416 = !DILocation(line: 3024, column: 34, scope: !8394)
!8417 = !DILocation(line: 3024, column: 19, scope: !8394)
!8418 = !DILocation(line: 3024, column: 18, scope: !8394)
!8419 = !DILocation(line: 3025, column: 35, scope: !8394)
!8420 = !DILocation(line: 3025, column: 48, scope: !8394)
!8421 = !DILocation(line: 3025, column: 54, scope: !8394)
!8422 = !DILocation(line: 3025, column: 15, scope: !8394)
!8423 = !DILocation(line: 3025, column: 14, scope: !8394)
!8424 = !DILocation(line: 3027, column: 15, scope: !8394)
!8425 = !DILocation(line: 3026, column: 75, scope: !8394)
!8426 = !DILocation(line: 3026, column: 52, scope: !8394)
!8427 = !DILocation(line: 3027, column: 35, scope: !8394)
!8428 = !DILocation(line: 3026, column: 34, scope: !8394)
!8429 = !DILocation(line: 3026, column: 19, scope: !8394)
!8430 = !DILocation(line: 3026, column: 18, scope: !8394)
!8431 = !DILocation(line: 3028, column: 35, scope: !8394)
!8432 = !DILocation(line: 3028, column: 48, scope: !8394)
!8433 = !DILocation(line: 3028, column: 54, scope: !8394)
!8434 = !DILocation(line: 3028, column: 15, scope: !8394)
!8435 = !DILocation(line: 3028, column: 14, scope: !8394)
!8436 = !DILocation(line: 3029, column: 14, scope: !8394)
!8437 = !DILocation(line: 3030, column: 16, scope: !8394)
!8438 = !DILocation(line: 3030, column: 30, scope: !8394)
!8439 = !DILocation(line: 3030, column: 14, scope: !8394)
!8440 = !DILocation(line: 3031, column: 11, scope: !8394)
!8441 = !DILocation(line: 3018, column: 51, scope: !8389)
!8442 = !DILocation(line: 3018, column: 11, scope: !8389)
!8443 = distinct !{!8443, !8392, !8444}
!8444 = !DILocation(line: 3031, column: 11, scope: !8385)
!8445 = !DILocation(line: 3032, column: 11, scope: !8386)
!8446 = !DILocation(line: 3034, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8273, file: !1, line: 3034, column: 7)
!8448 = !DILocation(line: 3034, column: 12, scope: !8447)
!8449 = !DILocation(line: 3034, column: 17, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !1, line: 3034, column: 7)
!8451 = !DILocation(line: 3034, column: 31, scope: !8450)
!8452 = !DILocation(line: 3034, column: 19, scope: !8450)
!8453 = !DILocation(line: 3034, column: 7, scope: !8447)
!8454 = !DILocation(line: 3036, column: 48, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 3035, column: 7)
!8456 = !DILocation(line: 3036, column: 63, scope: !8455)
!8457 = !DILocation(line: 3036, column: 30, scope: !8455)
!8458 = !DILocation(line: 3036, column: 15, scope: !8455)
!8459 = !DILocation(line: 3036, column: 14, scope: !8455)
!8460 = !DILocation(line: 3037, column: 27, scope: !8455)
!8461 = !DILocation(line: 3037, column: 40, scope: !8455)
!8462 = !DILocation(line: 3037, column: 46, scope: !8455)
!8463 = !DILocation(line: 3037, column: 11, scope: !8455)
!8464 = !DILocation(line: 3037, column: 10, scope: !8455)
!8465 = !DILocation(line: 3038, column: 48, scope: !8455)
!8466 = !DILocation(line: 3038, column: 65, scope: !8455)
!8467 = !DILocation(line: 3038, column: 30, scope: !8455)
!8468 = !DILocation(line: 3038, column: 15, scope: !8455)
!8469 = !DILocation(line: 3038, column: 14, scope: !8455)
!8470 = !DILocation(line: 3039, column: 27, scope: !8455)
!8471 = !DILocation(line: 3039, column: 40, scope: !8455)
!8472 = !DILocation(line: 3039, column: 46, scope: !8455)
!8473 = !DILocation(line: 3039, column: 11, scope: !8455)
!8474 = !DILocation(line: 3039, column: 10, scope: !8455)
!8475 = !DILocation(line: 3040, column: 48, scope: !8455)
!8476 = !DILocation(line: 3040, column: 64, scope: !8455)
!8477 = !DILocation(line: 3040, column: 30, scope: !8455)
!8478 = !DILocation(line: 3040, column: 15, scope: !8455)
!8479 = !DILocation(line: 3040, column: 14, scope: !8455)
!8480 = !DILocation(line: 3041, column: 27, scope: !8455)
!8481 = !DILocation(line: 3041, column: 40, scope: !8455)
!8482 = !DILocation(line: 3041, column: 46, scope: !8455)
!8483 = !DILocation(line: 3041, column: 11, scope: !8455)
!8484 = !DILocation(line: 3041, column: 10, scope: !8455)
!8485 = !DILocation(line: 3043, column: 11, scope: !8455)
!8486 = !DILocation(line: 3042, column: 71, scope: !8455)
!8487 = !DILocation(line: 3042, column: 48, scope: !8455)
!8488 = !DILocation(line: 3043, column: 31, scope: !8455)
!8489 = !DILocation(line: 3042, column: 30, scope: !8455)
!8490 = !DILocation(line: 3042, column: 15, scope: !8455)
!8491 = !DILocation(line: 3042, column: 14, scope: !8455)
!8492 = !DILocation(line: 3044, column: 27, scope: !8455)
!8493 = !DILocation(line: 3044, column: 40, scope: !8455)
!8494 = !DILocation(line: 3044, column: 46, scope: !8455)
!8495 = !DILocation(line: 3044, column: 11, scope: !8455)
!8496 = !DILocation(line: 3044, column: 10, scope: !8455)
!8497 = !DILocation(line: 3045, column: 10, scope: !8455)
!8498 = !DILocation(line: 3046, column: 12, scope: !8455)
!8499 = !DILocation(line: 3046, column: 26, scope: !8455)
!8500 = !DILocation(line: 3046, column: 10, scope: !8455)
!8501 = !DILocation(line: 3047, column: 7, scope: !8455)
!8502 = !DILocation(line: 3034, column: 47, scope: !8450)
!8503 = !DILocation(line: 3034, column: 7, scope: !8450)
!8504 = distinct !{!8504, !8453, !8505}
!8505 = !DILocation(line: 3047, column: 7, scope: !8447)
!8506 = !DILocation(line: 3048, column: 7, scope: !8273)
!8507 = !DILocalVariable(name: "pixel", scope: !8508, file: !1, line: 3053, type: !449)
!8508 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 3051, column: 5)
!8509 = !DILocation(line: 3053, column: 9, scope: !8508)
!8510 = !DILocation(line: 3055, column: 11, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8508, file: !1, line: 3055, column: 11)
!8512 = !DILocation(line: 3055, column: 25, scope: !8511)
!8513 = !DILocation(line: 3055, column: 32, scope: !8511)
!8514 = !DILocation(line: 3055, column: 11, scope: !8508)
!8515 = !DILocation(line: 3057, column: 17, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !1, line: 3057, column: 11)
!8517 = distinct !DILexicalBlock(scope: !8511, file: !1, line: 3056, column: 9)
!8518 = !DILocation(line: 3057, column: 16, scope: !8516)
!8519 = !DILocation(line: 3057, column: 21, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8516, file: !1, line: 3057, column: 11)
!8521 = !DILocation(line: 3057, column: 35, scope: !8520)
!8522 = !DILocation(line: 3057, column: 23, scope: !8520)
!8523 = !DILocation(line: 3057, column: 11, scope: !8516)
!8524 = !DILocation(line: 3059, column: 54, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8520, file: !1, line: 3058, column: 11)
!8526 = !DILocation(line: 3059, column: 53, scope: !8525)
!8527 = !DILocation(line: 3059, column: 41, scope: !8525)
!8528 = !DILocation(line: 3059, column: 19, scope: !8525)
!8529 = !DILocation(line: 3059, column: 18, scope: !8525)
!8530 = !DILocation(line: 3060, column: 29, scope: !8525)
!8531 = !DILocation(line: 3060, column: 43, scope: !8525)
!8532 = !DILocation(line: 3060, column: 50, scope: !8525)
!8533 = !DILocation(line: 3060, column: 56, scope: !8525)
!8534 = !DILocation(line: 3060, column: 15, scope: !8525)
!8535 = !DILocation(line: 3060, column: 14, scope: !8525)
!8536 = !DILocation(line: 3061, column: 54, scope: !8525)
!8537 = !DILocation(line: 3061, column: 53, scope: !8525)
!8538 = !DILocation(line: 3061, column: 41, scope: !8525)
!8539 = !DILocation(line: 3061, column: 19, scope: !8525)
!8540 = !DILocation(line: 3061, column: 18, scope: !8525)
!8541 = !DILocation(line: 3062, column: 29, scope: !8525)
!8542 = !DILocation(line: 3062, column: 43, scope: !8525)
!8543 = !DILocation(line: 3062, column: 50, scope: !8525)
!8544 = !DILocation(line: 3062, column: 56, scope: !8525)
!8545 = !DILocation(line: 3062, column: 15, scope: !8525)
!8546 = !DILocation(line: 3062, column: 14, scope: !8525)
!8547 = !DILocation(line: 3063, column: 54, scope: !8525)
!8548 = !DILocation(line: 3063, column: 53, scope: !8525)
!8549 = !DILocation(line: 3063, column: 41, scope: !8525)
!8550 = !DILocation(line: 3063, column: 19, scope: !8525)
!8551 = !DILocation(line: 3063, column: 18, scope: !8525)
!8552 = !DILocation(line: 3064, column: 29, scope: !8525)
!8553 = !DILocation(line: 3064, column: 43, scope: !8525)
!8554 = !DILocation(line: 3064, column: 50, scope: !8525)
!8555 = !DILocation(line: 3064, column: 56, scope: !8525)
!8556 = !DILocation(line: 3064, column: 15, scope: !8525)
!8557 = !DILocation(line: 3064, column: 14, scope: !8525)
!8558 = !DILocation(line: 3065, column: 54, scope: !8525)
!8559 = !DILocation(line: 3065, column: 53, scope: !8525)
!8560 = !DILocation(line: 3065, column: 41, scope: !8525)
!8561 = !DILocation(line: 3065, column: 19, scope: !8525)
!8562 = !DILocation(line: 3065, column: 18, scope: !8525)
!8563 = !DILocation(line: 3066, column: 29, scope: !8525)
!8564 = !DILocation(line: 3066, column: 43, scope: !8525)
!8565 = !DILocation(line: 3066, column: 50, scope: !8525)
!8566 = !DILocation(line: 3066, column: 56, scope: !8525)
!8567 = !DILocation(line: 3066, column: 15, scope: !8525)
!8568 = !DILocation(line: 3066, column: 14, scope: !8525)
!8569 = !DILocation(line: 3067, column: 14, scope: !8525)
!8570 = !DILocation(line: 3068, column: 16, scope: !8525)
!8571 = !DILocation(line: 3068, column: 30, scope: !8525)
!8572 = !DILocation(line: 3068, column: 14, scope: !8525)
!8573 = !DILocation(line: 3069, column: 11, scope: !8525)
!8574 = !DILocation(line: 3057, column: 51, scope: !8520)
!8575 = !DILocation(line: 3057, column: 11, scope: !8520)
!8576 = distinct !{!8576, !8523, !8577}
!8577 = !DILocation(line: 3069, column: 11, scope: !8516)
!8578 = !DILocation(line: 3070, column: 11, scope: !8517)
!8579 = !DILocation(line: 3072, column: 13, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8508, file: !1, line: 3072, column: 7)
!8581 = !DILocation(line: 3072, column: 12, scope: !8580)
!8582 = !DILocation(line: 3072, column: 17, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3072, column: 7)
!8584 = !DILocation(line: 3072, column: 31, scope: !8583)
!8585 = !DILocation(line: 3072, column: 19, scope: !8583)
!8586 = !DILocation(line: 3072, column: 7, scope: !8580)
!8587 = !DILocation(line: 3074, column: 35, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !1, line: 3073, column: 7)
!8589 = !DILocation(line: 3074, column: 15, scope: !8588)
!8590 = !DILocation(line: 3074, column: 14, scope: !8588)
!8591 = !DILocation(line: 3075, column: 25, scope: !8588)
!8592 = !DILocation(line: 3075, column: 39, scope: !8588)
!8593 = !DILocation(line: 3075, column: 46, scope: !8588)
!8594 = !DILocation(line: 3075, column: 52, scope: !8588)
!8595 = !DILocation(line: 3075, column: 11, scope: !8588)
!8596 = !DILocation(line: 3075, column: 10, scope: !8588)
!8597 = !DILocation(line: 3076, column: 35, scope: !8588)
!8598 = !DILocation(line: 3076, column: 15, scope: !8588)
!8599 = !DILocation(line: 3076, column: 14, scope: !8588)
!8600 = !DILocation(line: 3077, column: 25, scope: !8588)
!8601 = !DILocation(line: 3077, column: 39, scope: !8588)
!8602 = !DILocation(line: 3077, column: 46, scope: !8588)
!8603 = !DILocation(line: 3077, column: 52, scope: !8588)
!8604 = !DILocation(line: 3077, column: 11, scope: !8588)
!8605 = !DILocation(line: 3077, column: 10, scope: !8588)
!8606 = !DILocation(line: 3078, column: 35, scope: !8588)
!8607 = !DILocation(line: 3078, column: 15, scope: !8588)
!8608 = !DILocation(line: 3078, column: 14, scope: !8588)
!8609 = !DILocation(line: 3079, column: 25, scope: !8588)
!8610 = !DILocation(line: 3079, column: 39, scope: !8588)
!8611 = !DILocation(line: 3079, column: 46, scope: !8588)
!8612 = !DILocation(line: 3079, column: 52, scope: !8588)
!8613 = !DILocation(line: 3079, column: 11, scope: !8588)
!8614 = !DILocation(line: 3079, column: 10, scope: !8588)
!8615 = !DILocation(line: 3080, column: 45, scope: !8588)
!8616 = !DILocation(line: 3080, column: 35, scope: !8588)
!8617 = !DILocation(line: 3080, column: 15, scope: !8588)
!8618 = !DILocation(line: 3080, column: 14, scope: !8588)
!8619 = !DILocation(line: 3081, column: 25, scope: !8588)
!8620 = !DILocation(line: 3081, column: 39, scope: !8588)
!8621 = !DILocation(line: 3081, column: 46, scope: !8588)
!8622 = !DILocation(line: 3081, column: 52, scope: !8588)
!8623 = !DILocation(line: 3081, column: 11, scope: !8588)
!8624 = !DILocation(line: 3081, column: 10, scope: !8588)
!8625 = !DILocation(line: 3082, column: 10, scope: !8588)
!8626 = !DILocation(line: 3083, column: 12, scope: !8588)
!8627 = !DILocation(line: 3083, column: 26, scope: !8588)
!8628 = !DILocation(line: 3083, column: 10, scope: !8588)
!8629 = !DILocation(line: 3084, column: 7, scope: !8588)
!8630 = !DILocation(line: 3072, column: 47, scope: !8583)
!8631 = !DILocation(line: 3072, column: 7, scope: !8583)
!8632 = distinct !{!8632, !8586, !8633}
!8633 = !DILocation(line: 3084, column: 7, scope: !8580)
!8634 = !DILocation(line: 3085, column: 7, scope: !8508)
!8635 = !DILocalVariable(name: "pixel", scope: !8636, file: !1, line: 3090, type: !5)
!8636 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 3088, column: 5)
!8637 = !DILocation(line: 3090, column: 9, scope: !8636)
!8638 = !DILocation(line: 3092, column: 11, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8636, file: !1, line: 3092, column: 11)
!8640 = !DILocation(line: 3092, column: 25, scope: !8639)
!8641 = !DILocation(line: 3092, column: 32, scope: !8639)
!8642 = !DILocation(line: 3092, column: 11, scope: !8636)
!8643 = !DILocation(line: 3094, column: 17, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !1, line: 3094, column: 11)
!8645 = distinct !DILexicalBlock(scope: !8639, file: !1, line: 3093, column: 9)
!8646 = !DILocation(line: 3094, column: 16, scope: !8644)
!8647 = !DILocation(line: 3094, column: 21, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 3094, column: 11)
!8649 = !DILocation(line: 3094, column: 35, scope: !8648)
!8650 = !DILocation(line: 3094, column: 23, scope: !8648)
!8651 = !DILocation(line: 3094, column: 11, scope: !8644)
!8652 = !DILocalVariable(name: "pixel", scope: !8653, file: !1, line: 3097, type: !502)
!8653 = distinct !DILexicalBlock(scope: !8648, file: !1, line: 3095, column: 11)
!8654 = !DILocation(line: 3097, column: 15, scope: !8653)
!8655 = !DILocation(line: 3099, column: 29, scope: !8653)
!8656 = !DILocation(line: 3099, column: 50, scope: !8653)
!8657 = !DILocation(line: 3099, column: 42, scope: !8653)
!8658 = !DILocation(line: 3099, column: 65, scope: !8653)
!8659 = !DILocation(line: 3099, column: 15, scope: !8653)
!8660 = !DILocation(line: 3099, column: 14, scope: !8653)
!8661 = !DILocation(line: 3100, column: 29, scope: !8653)
!8662 = !DILocation(line: 3100, column: 50, scope: !8653)
!8663 = !DILocation(line: 3100, column: 42, scope: !8653)
!8664 = !DILocation(line: 3100, column: 67, scope: !8653)
!8665 = !DILocation(line: 3100, column: 15, scope: !8653)
!8666 = !DILocation(line: 3100, column: 14, scope: !8653)
!8667 = !DILocation(line: 3101, column: 29, scope: !8653)
!8668 = !DILocation(line: 3101, column: 50, scope: !8653)
!8669 = !DILocation(line: 3101, column: 42, scope: !8653)
!8670 = !DILocation(line: 3101, column: 66, scope: !8653)
!8671 = !DILocation(line: 3101, column: 15, scope: !8653)
!8672 = !DILocation(line: 3101, column: 14, scope: !8653)
!8673 = !DILocation(line: 3102, column: 27, scope: !8653)
!8674 = !DILocation(line: 3102, column: 19, scope: !8653)
!8675 = !DILocation(line: 3102, column: 18, scope: !8653)
!8676 = !DILocation(line: 3103, column: 29, scope: !8653)
!8677 = !DILocation(line: 3103, column: 42, scope: !8653)
!8678 = !DILocation(line: 3103, column: 48, scope: !8653)
!8679 = !DILocation(line: 3103, column: 15, scope: !8653)
!8680 = !DILocation(line: 3103, column: 14, scope: !8653)
!8681 = !DILocation(line: 3104, column: 14, scope: !8653)
!8682 = !DILocation(line: 3105, column: 16, scope: !8653)
!8683 = !DILocation(line: 3105, column: 30, scope: !8653)
!8684 = !DILocation(line: 3105, column: 14, scope: !8653)
!8685 = !DILocation(line: 3106, column: 11, scope: !8653)
!8686 = !DILocation(line: 3094, column: 51, scope: !8648)
!8687 = !DILocation(line: 3094, column: 11, scope: !8648)
!8688 = distinct !{!8688, !8651, !8689}
!8689 = !DILocation(line: 3106, column: 11, scope: !8644)
!8690 = !DILocation(line: 3107, column: 11, scope: !8645)
!8691 = !DILocation(line: 3109, column: 13, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8636, file: !1, line: 3109, column: 7)
!8693 = !DILocation(line: 3109, column: 12, scope: !8692)
!8694 = !DILocation(line: 3109, column: 17, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !1, line: 3109, column: 7)
!8696 = !DILocation(line: 3109, column: 31, scope: !8695)
!8697 = !DILocation(line: 3109, column: 19, scope: !8695)
!8698 = !DILocation(line: 3109, column: 7, scope: !8692)
!8699 = !DILocation(line: 3111, column: 34, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !1, line: 3110, column: 7)
!8701 = !DILocation(line: 3111, column: 15, scope: !8700)
!8702 = !DILocation(line: 3111, column: 14, scope: !8700)
!8703 = !DILocation(line: 3112, column: 24, scope: !8700)
!8704 = !DILocation(line: 3112, column: 38, scope: !8700)
!8705 = !DILocation(line: 3112, column: 45, scope: !8700)
!8706 = !DILocation(line: 3112, column: 51, scope: !8700)
!8707 = !DILocation(line: 3112, column: 11, scope: !8700)
!8708 = !DILocation(line: 3112, column: 10, scope: !8700)
!8709 = !DILocation(line: 3113, column: 34, scope: !8700)
!8710 = !DILocation(line: 3113, column: 15, scope: !8700)
!8711 = !DILocation(line: 3113, column: 14, scope: !8700)
!8712 = !DILocation(line: 3114, column: 24, scope: !8700)
!8713 = !DILocation(line: 3114, column: 38, scope: !8700)
!8714 = !DILocation(line: 3114, column: 45, scope: !8700)
!8715 = !DILocation(line: 3114, column: 51, scope: !8700)
!8716 = !DILocation(line: 3114, column: 11, scope: !8700)
!8717 = !DILocation(line: 3114, column: 10, scope: !8700)
!8718 = !DILocation(line: 3115, column: 34, scope: !8700)
!8719 = !DILocation(line: 3115, column: 15, scope: !8700)
!8720 = !DILocation(line: 3115, column: 14, scope: !8700)
!8721 = !DILocation(line: 3116, column: 24, scope: !8700)
!8722 = !DILocation(line: 3116, column: 38, scope: !8700)
!8723 = !DILocation(line: 3116, column: 45, scope: !8700)
!8724 = !DILocation(line: 3116, column: 51, scope: !8700)
!8725 = !DILocation(line: 3116, column: 11, scope: !8700)
!8726 = !DILocation(line: 3116, column: 10, scope: !8700)
!8727 = !DILocation(line: 3117, column: 44, scope: !8700)
!8728 = !DILocation(line: 3117, column: 34, scope: !8700)
!8729 = !DILocation(line: 3117, column: 15, scope: !8700)
!8730 = !DILocation(line: 3117, column: 14, scope: !8700)
!8731 = !DILocation(line: 3118, column: 24, scope: !8700)
!8732 = !DILocation(line: 3118, column: 38, scope: !8700)
!8733 = !DILocation(line: 3118, column: 45, scope: !8700)
!8734 = !DILocation(line: 3118, column: 51, scope: !8700)
!8735 = !DILocation(line: 3118, column: 11, scope: !8700)
!8736 = !DILocation(line: 3118, column: 10, scope: !8700)
!8737 = !DILocation(line: 3119, column: 10, scope: !8700)
!8738 = !DILocation(line: 3120, column: 12, scope: !8700)
!8739 = !DILocation(line: 3120, column: 26, scope: !8700)
!8740 = !DILocation(line: 3120, column: 10, scope: !8700)
!8741 = !DILocation(line: 3121, column: 7, scope: !8700)
!8742 = !DILocation(line: 3109, column: 47, scope: !8695)
!8743 = !DILocation(line: 3109, column: 7, scope: !8695)
!8744 = distinct !{!8744, !8698, !8745}
!8745 = !DILocation(line: 3121, column: 7, scope: !8692)
!8746 = !DILocation(line: 3122, column: 7, scope: !8636)
!8747 = !DILocation(line: 3126, column: 11, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !1, line: 3126, column: 11)
!8749 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 3125, column: 5)
!8750 = !DILocation(line: 3126, column: 25, scope: !8748)
!8751 = !DILocation(line: 3126, column: 32, scope: !8748)
!8752 = !DILocation(line: 3126, column: 11, scope: !8749)
!8753 = !DILocalVariable(name: "pixel", scope: !8754, file: !1, line: 3129, type: !458)
!8754 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 3127, column: 9)
!8755 = !DILocation(line: 3129, column: 13, scope: !8754)
!8756 = !DILocation(line: 3131, column: 17, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8754, file: !1, line: 3131, column: 11)
!8758 = !DILocation(line: 3131, column: 16, scope: !8757)
!8759 = !DILocation(line: 3131, column: 21, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8757, file: !1, line: 3131, column: 11)
!8761 = !DILocation(line: 3131, column: 35, scope: !8760)
!8762 = !DILocation(line: 3131, column: 23, scope: !8760)
!8763 = !DILocation(line: 3131, column: 11, scope: !8757)
!8764 = !DILocation(line: 3133, column: 30, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8760, file: !1, line: 3132, column: 11)
!8766 = !DILocation(line: 3133, column: 52, scope: !8765)
!8767 = !DILocation(line: 3133, column: 43, scope: !8765)
!8768 = !DILocation(line: 3133, column: 67, scope: !8765)
!8769 = !DILocation(line: 3133, column: 15, scope: !8765)
!8770 = !DILocation(line: 3133, column: 14, scope: !8765)
!8771 = !DILocation(line: 3134, column: 30, scope: !8765)
!8772 = !DILocation(line: 3134, column: 52, scope: !8765)
!8773 = !DILocation(line: 3134, column: 43, scope: !8765)
!8774 = !DILocation(line: 3134, column: 69, scope: !8765)
!8775 = !DILocation(line: 3134, column: 15, scope: !8765)
!8776 = !DILocation(line: 3134, column: 14, scope: !8765)
!8777 = !DILocation(line: 3135, column: 30, scope: !8765)
!8778 = !DILocation(line: 3135, column: 52, scope: !8765)
!8779 = !DILocation(line: 3135, column: 43, scope: !8765)
!8780 = !DILocation(line: 3135, column: 68, scope: !8765)
!8781 = !DILocation(line: 3135, column: 15, scope: !8765)
!8782 = !DILocation(line: 3135, column: 14, scope: !8765)
!8783 = !DILocation(line: 3136, column: 28, scope: !8765)
!8784 = !DILocation(line: 3136, column: 19, scope: !8765)
!8785 = !DILocation(line: 3136, column: 18, scope: !8765)
!8786 = !DILocation(line: 3137, column: 30, scope: !8765)
!8787 = !DILocation(line: 3137, column: 43, scope: !8765)
!8788 = !DILocation(line: 3137, column: 49, scope: !8765)
!8789 = !DILocation(line: 3137, column: 15, scope: !8765)
!8790 = !DILocation(line: 3137, column: 14, scope: !8765)
!8791 = !DILocation(line: 3138, column: 14, scope: !8765)
!8792 = !DILocation(line: 3139, column: 16, scope: !8765)
!8793 = !DILocation(line: 3139, column: 30, scope: !8765)
!8794 = !DILocation(line: 3139, column: 14, scope: !8765)
!8795 = !DILocation(line: 3140, column: 11, scope: !8765)
!8796 = !DILocation(line: 3131, column: 51, scope: !8760)
!8797 = !DILocation(line: 3131, column: 11, scope: !8760)
!8798 = distinct !{!8798, !8763, !8799}
!8799 = !DILocation(line: 3140, column: 11, scope: !8757)
!8800 = !DILocation(line: 3141, column: 11, scope: !8754)
!8801 = !DILocation(line: 3143, column: 5, scope: !8749)
!8802 = !DILocation(line: 3146, column: 29, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 3145, column: 5)
!8804 = !DILocation(line: 3146, column: 43, scope: !8803)
!8805 = !DILocation(line: 3146, column: 13, scope: !8803)
!8806 = !DILocation(line: 3146, column: 12, scope: !8803)
!8807 = !DILocation(line: 3147, column: 13, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8803, file: !1, line: 3147, column: 7)
!8809 = !DILocation(line: 3147, column: 12, scope: !8808)
!8810 = !DILocation(line: 3147, column: 17, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 3147, column: 7)
!8812 = !DILocation(line: 3147, column: 31, scope: !8811)
!8813 = !DILocation(line: 3147, column: 19, scope: !8811)
!8814 = !DILocation(line: 3147, column: 7, scope: !8808)
!8815 = !DILocation(line: 3149, column: 27, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8811, file: !1, line: 3148, column: 7)
!8817 = !DILocation(line: 3149, column: 58, scope: !8816)
!8818 = !DILocation(line: 3150, column: 11, scope: !8816)
!8819 = !DILocation(line: 3149, column: 40, scope: !8816)
!8820 = !DILocation(line: 3150, column: 18, scope: !8816)
!8821 = !DILocation(line: 3149, column: 11, scope: !8816)
!8822 = !DILocation(line: 3149, column: 10, scope: !8816)
!8823 = !DILocation(line: 3151, column: 27, scope: !8816)
!8824 = !DILocation(line: 3151, column: 58, scope: !8816)
!8825 = !DILocation(line: 3152, column: 11, scope: !8816)
!8826 = !DILocation(line: 3151, column: 40, scope: !8816)
!8827 = !DILocation(line: 3152, column: 18, scope: !8816)
!8828 = !DILocation(line: 3151, column: 11, scope: !8816)
!8829 = !DILocation(line: 3151, column: 10, scope: !8816)
!8830 = !DILocation(line: 3153, column: 27, scope: !8816)
!8831 = !DILocation(line: 3153, column: 58, scope: !8816)
!8832 = !DILocation(line: 3154, column: 11, scope: !8816)
!8833 = !DILocation(line: 3153, column: 40, scope: !8816)
!8834 = !DILocation(line: 3154, column: 18, scope: !8816)
!8835 = !DILocation(line: 3153, column: 11, scope: !8816)
!8836 = !DILocation(line: 3153, column: 10, scope: !8816)
!8837 = !DILocation(line: 3155, column: 27, scope: !8816)
!8838 = !DILocation(line: 3156, column: 11, scope: !8816)
!8839 = !DILocation(line: 3155, column: 58, scope: !8816)
!8840 = !DILocation(line: 3156, column: 28, scope: !8816)
!8841 = !DILocation(line: 3155, column: 40, scope: !8816)
!8842 = !DILocation(line: 3156, column: 35, scope: !8816)
!8843 = !DILocation(line: 3155, column: 11, scope: !8816)
!8844 = !DILocation(line: 3155, column: 10, scope: !8816)
!8845 = !DILocation(line: 3157, column: 10, scope: !8816)
!8846 = !DILocation(line: 3158, column: 12, scope: !8816)
!8847 = !DILocation(line: 3158, column: 26, scope: !8816)
!8848 = !DILocation(line: 3158, column: 10, scope: !8816)
!8849 = !DILocation(line: 3159, column: 7, scope: !8816)
!8850 = !DILocation(line: 3147, column: 47, scope: !8811)
!8851 = !DILocation(line: 3147, column: 7, scope: !8811)
!8852 = distinct !{!8852, !8814, !8853}
!8853 = !DILocation(line: 3159, column: 7, scope: !8808)
!8854 = !DILocation(line: 3160, column: 7, scope: !8803)
!8855 = !DILocation(line: 3163, column: 1, scope: !8204)
!8856 = distinct !DISubprogram(name: "ScaleQuantumToChar", scope: !147, file: !147, line: 114, type: !8857, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8857 = !DISubroutineType(types: !8858)
!8858 = !{!437, !8859}
!8859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!8860 = !DILocalVariable(name: "quantum", arg: 1, scope: !8856, file: !147, line: 114, type: !8859)
!8861 = !DILocation(line: 114, column: 62, scope: !8856)
!8862 = !DILocation(line: 117, column: 29, scope: !8856)
!8863 = !DILocation(line: 117, column: 36, scope: !8856)
!8864 = !DILocation(line: 117, column: 46, scope: !8856)
!8865 = !DILocation(line: 117, column: 53, scope: !8856)
!8866 = !DILocation(line: 117, column: 61, scope: !8856)
!8867 = !DILocation(line: 117, column: 43, scope: !8856)
!8868 = !DILocation(line: 117, column: 68, scope: !8856)
!8869 = !DILocation(line: 117, column: 10, scope: !8856)
!8870 = !DILocation(line: 117, column: 3, scope: !8856)
!8871 = distinct !DISubprogram(name: "PopCharPixel", scope: !462, file: !462, line: 175, type: !8872, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8872 = !DISubroutineType(types: !8873)
!8873 = !{!436, !8874, !436}
!8874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!8875 = !DILocalVariable(name: "pixel", arg: 1, scope: !8871, file: !462, line: 175, type: !8874)
!8876 = !DILocation(line: 175, column: 63, scope: !8871)
!8877 = !DILocalVariable(name: "pixels", arg: 2, scope: !8871, file: !462, line: 176, type: !436)
!8878 = !DILocation(line: 176, column: 18, scope: !8871)
!8879 = !DILocation(line: 178, column: 13, scope: !8871)
!8880 = !DILocation(line: 178, column: 10, scope: !8871)
!8881 = !DILocation(line: 178, column: 12, scope: !8871)
!8882 = !DILocation(line: 179, column: 10, scope: !8871)
!8883 = !DILocation(line: 179, column: 3, scope: !8871)
!8884 = distinct !DISubprogram(name: "SinglePrecisionToHalf", scope: !462, file: !462, line: 560, type: !8885, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!449, !8887}
!8887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!8888 = !DILocalVariable(name: "value", arg: 1, scope: !8884, file: !462, line: 560, type: !8887)
!8889 = !DILocation(line: 560, column: 64, scope: !8884)
!8890 = !DILocalVariable(name: "exponent", scope: !8884, file: !462, line: 572, type: !503)
!8891 = !DILocation(line: 572, column: 5, scope: !8884)
!8892 = !DILocalVariable(name: "significand", scope: !8884, file: !462, line: 575, type: !5)
!8893 = !DILocation(line: 575, column: 5, scope: !8884)
!8894 = !DILocalVariable(name: "sign_bit", scope: !8884, file: !462, line: 576, type: !5)
!8895 = !DILocation(line: 576, column: 5, scope: !8884)
!8896 = !DILocalVariable(name: "map", scope: !8884, file: !462, line: 579, type: !8897)
!8897 = !DIDerivedType(tag: DW_TAG_typedef, name: "SinglePrecision", scope: !8884, file: !462, line: 569, baseType: !8898)
!8898 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_SinglePrecision", scope: !8884, file: !462, line: 562, size: 32, elements: !8899)
!8899 = !{!8900, !8901}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_point", scope: !8898, file: !462, line: 565, baseType: !5, size: 32)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "single_precision", scope: !8898, file: !462, line: 568, baseType: !502, size: 32)
!8902 = !DILocation(line: 579, column: 5, scope: !8884)
!8903 = !DILocalVariable(name: "half", scope: !8884, file: !462, line: 582, type: !449)
!8904 = !DILocation(line: 582, column: 5, scope: !8884)
!8905 = !DILocation(line: 591, column: 24, scope: !8884)
!8906 = !DILocation(line: 591, column: 7, scope: !8884)
!8907 = !DILocation(line: 591, column: 23, scope: !8884)
!8908 = !DILocation(line: 592, column: 17, scope: !8884)
!8909 = !DILocation(line: 592, column: 29, scope: !8884)
!8910 = !DILocation(line: 592, column: 36, scope: !8884)
!8911 = !DILocation(line: 592, column: 11, scope: !8884)
!8912 = !DILocation(line: 593, column: 24, scope: !8884)
!8913 = !DILocation(line: 593, column: 36, scope: !8884)
!8914 = !DILocation(line: 593, column: 54, scope: !8884)
!8915 = !DILocation(line: 593, column: 67, scope: !8884)
!8916 = !DILocation(line: 593, column: 11, scope: !8884)
!8917 = !DILocation(line: 594, column: 19, scope: !8884)
!8918 = !DILocation(line: 594, column: 31, scope: !8884)
!8919 = !DILocation(line: 594, column: 14, scope: !8884)
!8920 = !DILocation(line: 595, column: 7, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8884, file: !462, line: 595, column: 7)
!8922 = !DILocation(line: 595, column: 16, scope: !8921)
!8923 = !DILocation(line: 595, column: 7, scope: !8884)
!8924 = !DILocalVariable(name: "shift", scope: !8925, file: !462, line: 598, type: !503)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !462, line: 596, column: 5)
!8926 = !DILocation(line: 598, column: 9, scope: !8925)
!8927 = !DILocation(line: 600, column: 11, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8925, file: !462, line: 600, column: 11)
!8929 = !DILocation(line: 600, column: 20, scope: !8928)
!8930 = !DILocation(line: 600, column: 11, scope: !8925)
!8931 = !DILocation(line: 601, column: 33, scope: !8928)
!8932 = !DILocation(line: 601, column: 16, scope: !8928)
!8933 = !DILocation(line: 601, column: 9, scope: !8928)
!8934 = !DILocation(line: 602, column: 19, scope: !8925)
!8935 = !DILocation(line: 602, column: 31, scope: !8925)
!8936 = !DILocation(line: 602, column: 18, scope: !8925)
!8937 = !DILocation(line: 603, column: 23, scope: !8925)
!8938 = !DILocation(line: 603, column: 22, scope: !8925)
!8939 = !DILocation(line: 603, column: 12, scope: !8925)
!8940 = !DILocation(line: 604, column: 36, scope: !8925)
!8941 = !DILocation(line: 604, column: 56, scope: !8925)
!8942 = !DILocation(line: 604, column: 61, scope: !8925)
!8943 = !DILocation(line: 604, column: 52, scope: !8925)
!8944 = !DILocation(line: 604, column: 65, scope: !8925)
!8945 = !DILocation(line: 604, column: 47, scope: !8925)
!8946 = !DILocation(line: 605, column: 11, scope: !8925)
!8947 = !DILocation(line: 605, column: 26, scope: !8925)
!8948 = !DILocation(line: 605, column: 23, scope: !8925)
!8949 = !DILocation(line: 605, column: 33, scope: !8925)
!8950 = !DILocation(line: 604, column: 68, scope: !8925)
!8951 = !DILocation(line: 605, column: 45, scope: !8925)
!8952 = !DILocation(line: 605, column: 42, scope: !8925)
!8953 = !DILocation(line: 604, column: 18, scope: !8925)
!8954 = !DILocation(line: 606, column: 32, scope: !8925)
!8955 = !DILocation(line: 606, column: 43, scope: !8925)
!8956 = !DILocation(line: 606, column: 41, scope: !8925)
!8957 = !DILocation(line: 606, column: 14, scope: !8925)
!8958 = !DILocation(line: 606, column: 7, scope: !8925)
!8959 = !DILocation(line: 609, column: 9, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8921, file: !462, line: 609, column: 9)
!8961 = !DILocation(line: 609, column: 18, scope: !8960)
!8962 = !DILocation(line: 609, column: 9, scope: !8921)
!8963 = !DILocation(line: 611, column: 13, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !462, line: 611, column: 13)
!8965 = distinct !DILexicalBlock(scope: !8960, file: !462, line: 610, column: 7)
!8966 = !DILocation(line: 611, column: 25, scope: !8964)
!8967 = !DILocation(line: 611, column: 13, scope: !8965)
!8968 = !DILocation(line: 612, column: 36, scope: !8964)
!8969 = !DILocation(line: 612, column: 45, scope: !8964)
!8970 = !DILocation(line: 612, column: 18, scope: !8964)
!8971 = !DILocation(line: 612, column: 11, scope: !8964)
!8972 = !DILocation(line: 615, column: 24, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8964, file: !462, line: 614, column: 11)
!8974 = !DILocation(line: 616, column: 36, scope: !8973)
!8975 = !DILocation(line: 616, column: 47, scope: !8973)
!8976 = !DILocation(line: 616, column: 45, scope: !8973)
!8977 = !DILocation(line: 617, column: 16, scope: !8973)
!8978 = !DILocation(line: 617, column: 28, scope: !8973)
!8979 = !DILocation(line: 616, column: 59, scope: !8973)
!8980 = !DILocation(line: 617, column: 34, scope: !8973)
!8981 = !DILocation(line: 616, column: 18, scope: !8973)
!8982 = !DILocation(line: 616, column: 17, scope: !8973)
!8983 = !DILocation(line: 618, column: 20, scope: !8973)
!8984 = !DILocation(line: 618, column: 13, scope: !8973)
!8985 = !DILocation(line: 621, column: 15, scope: !8884)
!8986 = !DILocation(line: 621, column: 29, scope: !8884)
!8987 = !DILocation(line: 621, column: 41, scope: !8884)
!8988 = !DILocation(line: 621, column: 62, scope: !8884)
!8989 = !DILocation(line: 621, column: 26, scope: !8884)
!8990 = !DILocation(line: 621, column: 69, scope: !8884)
!8991 = !DILocation(line: 621, column: 14, scope: !8884)
!8992 = !DILocation(line: 622, column: 8, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8884, file: !462, line: 622, column: 7)
!8994 = !DILocation(line: 622, column: 20, scope: !8993)
!8995 = !DILocation(line: 622, column: 34, scope: !8993)
!8996 = !DILocation(line: 622, column: 7, scope: !8884)
!8997 = !DILocation(line: 624, column: 18, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8993, file: !462, line: 623, column: 5)
!8999 = !DILocation(line: 625, column: 15, scope: !8998)
!9000 = !DILocation(line: 626, column: 5, scope: !8998)
!9001 = !DILocation(line: 627, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8884, file: !462, line: 627, column: 7)
!9003 = !DILocation(line: 627, column: 16, scope: !9002)
!9004 = !DILocation(line: 627, column: 7, scope: !8884)
!9005 = !DILocalVariable(name: "alpha", scope: !9006, file: !462, line: 630, type: !502)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !462, line: 628, column: 5)
!9007 = !DILocation(line: 630, column: 9, scope: !9006)
!9008 = !DILocalVariable(name: "i", scope: !9006, file: !462, line: 633, type: !503)
!9009 = !DILocation(line: 633, column: 9, scope: !9006)
!9010 = !DILocation(line: 638, column: 12, scope: !9006)
!9011 = !DILocation(line: 639, column: 13, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9006, file: !462, line: 639, column: 7)
!9013 = !DILocation(line: 639, column: 12, scope: !9012)
!9014 = !DILocation(line: 639, column: 17, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9012, file: !462, line: 639, column: 7)
!9016 = !DILocation(line: 639, column: 19, scope: !9015)
!9017 = !DILocation(line: 639, column: 7, scope: !9012)
!9018 = !DILocation(line: 640, column: 16, scope: !9015)
!9019 = !DILocation(line: 640, column: 14, scope: !9015)
!9020 = !DILocation(line: 640, column: 9, scope: !9015)
!9021 = !DILocation(line: 639, column: 26, scope: !9015)
!9022 = !DILocation(line: 639, column: 7, scope: !9015)
!9023 = distinct !{!9023, !9017, !9024}
!9024 = !DILocation(line: 640, column: 16, scope: !9012)
!9025 = !DILocation(line: 641, column: 32, scope: !9006)
!9026 = !DILocation(line: 641, column: 41, scope: !9006)
!9027 = !DILocation(line: 641, column: 14, scope: !9006)
!9028 = !DILocation(line: 641, column: 7, scope: !9006)
!9029 = !DILocation(line: 643, column: 26, scope: !8884)
!9030 = !DILocation(line: 643, column: 38, scope: !8884)
!9031 = !DILocation(line: 643, column: 47, scope: !8884)
!9032 = !DILocation(line: 643, column: 35, scope: !8884)
!9033 = !DILocation(line: 644, column: 6, scope: !8884)
!9034 = !DILocation(line: 644, column: 18, scope: !8884)
!9035 = !DILocation(line: 643, column: 54, scope: !8884)
!9036 = !DILocation(line: 643, column: 8, scope: !8884)
!9037 = !DILocation(line: 643, column: 7, scope: !8884)
!9038 = !DILocation(line: 645, column: 10, scope: !8884)
!9039 = !DILocation(line: 645, column: 3, scope: !8884)
!9040 = !DILocation(line: 646, column: 1, scope: !8884)
!9041 = distinct !DISubprogram(name: "PopShortPixel", scope: !462, file: !462, line: 204, type: !9042, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!436, !9044, !9045, !436}
!9044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!9045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !449)
!9046 = !DILocalVariable(name: "endian", arg: 1, scope: !9041, file: !462, line: 204, type: !9044)
!9047 = !DILocation(line: 204, column: 61, scope: !9041)
!9048 = !DILocalVariable(name: "pixel", arg: 2, scope: !9041, file: !462, line: 205, type: !9045)
!9049 = !DILocation(line: 205, column: 24, scope: !9041)
!9050 = !DILocalVariable(name: "pixels", arg: 3, scope: !9041, file: !462, line: 205, type: !436)
!9051 = !DILocation(line: 205, column: 45, scope: !9041)
!9052 = !DILocalVariable(name: "quantum", scope: !9041, file: !462, line: 208, type: !5)
!9053 = !DILocation(line: 208, column: 5, scope: !9041)
!9054 = !DILocation(line: 210, column: 11, scope: !9041)
!9055 = !DILocation(line: 210, column: 10, scope: !9041)
!9056 = !DILocation(line: 211, column: 7, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9041, file: !462, line: 211, column: 7)
!9058 = !DILocation(line: 211, column: 14, scope: !9057)
!9059 = !DILocation(line: 211, column: 7, scope: !9041)
!9060 = !DILocation(line: 213, column: 34, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9057, file: !462, line: 212, column: 5)
!9062 = !DILocation(line: 213, column: 17, scope: !9061)
!9063 = !DILocation(line: 213, column: 14, scope: !9061)
!9064 = !DILocation(line: 213, column: 16, scope: !9061)
!9065 = !DILocation(line: 214, column: 34, scope: !9061)
!9066 = !DILocation(line: 214, column: 42, scope: !9061)
!9067 = !DILocation(line: 214, column: 17, scope: !9061)
!9068 = !DILocation(line: 214, column: 14, scope: !9061)
!9069 = !DILocation(line: 214, column: 16, scope: !9061)
!9070 = !DILocation(line: 215, column: 14, scope: !9061)
!9071 = !DILocation(line: 215, column: 7, scope: !9061)
!9072 = !DILocation(line: 217, column: 30, scope: !9041)
!9073 = !DILocation(line: 217, column: 38, scope: !9041)
!9074 = !DILocation(line: 217, column: 13, scope: !9041)
!9075 = !DILocation(line: 217, column: 10, scope: !9041)
!9076 = !DILocation(line: 217, column: 12, scope: !9041)
!9077 = !DILocation(line: 218, column: 30, scope: !9041)
!9078 = !DILocation(line: 218, column: 13, scope: !9041)
!9079 = !DILocation(line: 218, column: 10, scope: !9041)
!9080 = !DILocation(line: 218, column: 12, scope: !9041)
!9081 = !DILocation(line: 219, column: 10, scope: !9041)
!9082 = !DILocation(line: 219, column: 3, scope: !9041)
!9083 = !DILocation(line: 220, column: 1, scope: !9041)
!9084 = distinct !DISubprogram(name: "ScaleQuantumToShort", scope: !462, file: !462, line: 421, type: !9085, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!449, !8859}
!9087 = !DILocalVariable(name: "quantum", arg: 1, scope: !9084, file: !462, line: 421, type: !8859)
!9088 = !DILocation(line: 421, column: 64, scope: !9084)
!9089 = !DILocation(line: 424, column: 27, scope: !9084)
!9090 = !DILocation(line: 424, column: 3, scope: !9084)
!9091 = distinct !DISubprogram(name: "PopFloatPixel", scope: !1, file: !1, line: 149, type: !9092, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!436, !459, !8887, !717}
!9094 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !9091, file: !1, line: 149, type: !459)
!9095 = !DILocation(line: 149, column: 57, scope: !9091)
!9096 = !DILocalVariable(name: "pixel", arg: 2, scope: !9091, file: !1, line: 150, type: !8887)
!9097 = !DILocation(line: 150, column: 15, scope: !9091)
!9098 = !DILocalVariable(name: "pixels", arg: 3, scope: !9091, file: !1, line: 150, type: !717)
!9099 = !DILocation(line: 150, column: 45, scope: !9091)
!9100 = !DILocalVariable(name: "p", scope: !9091, file: !1, line: 153, type: !504)
!9101 = !DILocation(line: 153, column: 6, scope: !9091)
!9102 = !DILocalVariable(name: "quantum", scope: !9091, file: !1, line: 156, type: !9103)
!9103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 32, elements: !3373)
!9104 = !DILocation(line: 156, column: 5, scope: !9091)
!9105 = !DILocation(line: 158, column: 28, scope: !9091)
!9106 = !DILocation(line: 158, column: 10, scope: !9091)
!9107 = !DILocation(line: 159, column: 15, scope: !9091)
!9108 = !DILocation(line: 159, column: 5, scope: !9091)
!9109 = !DILocation(line: 159, column: 4, scope: !9091)
!9110 = !DILocation(line: 160, column: 24, scope: !9091)
!9111 = !DILocation(line: 160, column: 15, scope: !9091)
!9112 = !DILocation(line: 160, column: 30, scope: !9091)
!9113 = !DILocation(line: 160, column: 44, scope: !9091)
!9114 = !DILocation(line: 160, column: 50, scope: !9091)
!9115 = !DILocation(line: 160, column: 29, scope: !9091)
!9116 = !DILocation(line: 161, column: 5, scope: !9091)
!9117 = !DILocation(line: 161, column: 19, scope: !9091)
!9118 = !DILocation(line: 160, column: 63, scope: !9091)
!9119 = !DILocation(line: 160, column: 6, scope: !9091)
!9120 = !DILocation(line: 160, column: 4, scope: !9091)
!9121 = !DILocation(line: 160, column: 5, scope: !9091)
!9122 = !DILocation(line: 162, column: 7, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9091, file: !1, line: 162, column: 7)
!9124 = !DILocation(line: 162, column: 21, scope: !9123)
!9125 = !DILocation(line: 162, column: 28, scope: !9123)
!9126 = !DILocation(line: 162, column: 7, scope: !9091)
!9127 = !DILocation(line: 164, column: 17, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !1, line: 163, column: 5)
!9129 = !DILocation(line: 164, column: 14, scope: !9128)
!9130 = !DILocation(line: 164, column: 16, scope: !9128)
!9131 = !DILocation(line: 165, column: 17, scope: !9128)
!9132 = !DILocation(line: 165, column: 14, scope: !9128)
!9133 = !DILocation(line: 165, column: 16, scope: !9128)
!9134 = !DILocation(line: 166, column: 17, scope: !9128)
!9135 = !DILocation(line: 166, column: 14, scope: !9128)
!9136 = !DILocation(line: 166, column: 16, scope: !9128)
!9137 = !DILocation(line: 167, column: 17, scope: !9128)
!9138 = !DILocation(line: 167, column: 14, scope: !9128)
!9139 = !DILocation(line: 167, column: 16, scope: !9128)
!9140 = !DILocation(line: 168, column: 14, scope: !9128)
!9141 = !DILocation(line: 168, column: 7, scope: !9128)
!9142 = !DILocation(line: 170, column: 13, scope: !9091)
!9143 = !DILocation(line: 170, column: 10, scope: !9091)
!9144 = !DILocation(line: 170, column: 12, scope: !9091)
!9145 = !DILocation(line: 171, column: 13, scope: !9091)
!9146 = !DILocation(line: 171, column: 10, scope: !9091)
!9147 = !DILocation(line: 171, column: 12, scope: !9091)
!9148 = !DILocation(line: 172, column: 13, scope: !9091)
!9149 = !DILocation(line: 172, column: 10, scope: !9091)
!9150 = !DILocation(line: 172, column: 12, scope: !9091)
!9151 = !DILocation(line: 173, column: 13, scope: !9091)
!9152 = !DILocation(line: 173, column: 10, scope: !9091)
!9153 = !DILocation(line: 173, column: 12, scope: !9091)
!9154 = !DILocation(line: 174, column: 10, scope: !9091)
!9155 = !DILocation(line: 174, column: 3, scope: !9091)
!9156 = !DILocation(line: 175, column: 1, scope: !9091)
!9157 = distinct !DISubprogram(name: "ScaleQuantumToLong", scope: !462, file: !462, line: 395, type: !9158, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{!5, !8859}
!9160 = !DILocalVariable(name: "quantum", arg: 1, scope: !9157, file: !462, line: 395, type: !8859)
!9161 = !DILocation(line: 395, column: 61, scope: !9157)
!9162 = !DILocation(line: 398, column: 34, scope: !9157)
!9163 = !DILocation(line: 398, column: 33, scope: !9157)
!9164 = !DILocation(line: 398, column: 10, scope: !9157)
!9165 = !DILocation(line: 398, column: 3, scope: !9157)
!9166 = distinct !DISubprogram(name: "PopLongPixel", scope: !462, file: !462, line: 182, type: !9167, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{!436, !9044, !494, !436}
!9169 = !DILocalVariable(name: "endian", arg: 1, scope: !9166, file: !462, line: 182, type: !9044)
!9170 = !DILocation(line: 182, column: 60, scope: !9166)
!9171 = !DILocalVariable(name: "pixel", arg: 2, scope: !9166, file: !462, line: 183, type: !494)
!9172 = !DILocation(line: 183, column: 22, scope: !9166)
!9173 = !DILocalVariable(name: "pixels", arg: 3, scope: !9166, file: !462, line: 183, type: !436)
!9174 = !DILocation(line: 183, column: 43, scope: !9166)
!9175 = !DILocalVariable(name: "quantum", scope: !9166, file: !462, line: 186, type: !5)
!9176 = !DILocation(line: 186, column: 5, scope: !9166)
!9177 = !DILocation(line: 188, column: 26, scope: !9166)
!9178 = !DILocation(line: 188, column: 10, scope: !9166)
!9179 = !DILocation(line: 189, column: 7, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9166, file: !462, line: 189, column: 7)
!9181 = !DILocation(line: 189, column: 14, scope: !9180)
!9182 = !DILocation(line: 189, column: 7, scope: !9166)
!9183 = !DILocation(line: 191, column: 34, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9180, file: !462, line: 190, column: 5)
!9185 = !DILocation(line: 191, column: 17, scope: !9184)
!9186 = !DILocation(line: 191, column: 14, scope: !9184)
!9187 = !DILocation(line: 191, column: 16, scope: !9184)
!9188 = !DILocation(line: 192, column: 34, scope: !9184)
!9189 = !DILocation(line: 192, column: 42, scope: !9184)
!9190 = !DILocation(line: 192, column: 17, scope: !9184)
!9191 = !DILocation(line: 192, column: 14, scope: !9184)
!9192 = !DILocation(line: 192, column: 16, scope: !9184)
!9193 = !DILocation(line: 193, column: 34, scope: !9184)
!9194 = !DILocation(line: 193, column: 42, scope: !9184)
!9195 = !DILocation(line: 193, column: 17, scope: !9184)
!9196 = !DILocation(line: 193, column: 14, scope: !9184)
!9197 = !DILocation(line: 193, column: 16, scope: !9184)
!9198 = !DILocation(line: 194, column: 34, scope: !9184)
!9199 = !DILocation(line: 194, column: 42, scope: !9184)
!9200 = !DILocation(line: 194, column: 17, scope: !9184)
!9201 = !DILocation(line: 194, column: 14, scope: !9184)
!9202 = !DILocation(line: 194, column: 16, scope: !9184)
!9203 = !DILocation(line: 195, column: 14, scope: !9184)
!9204 = !DILocation(line: 195, column: 7, scope: !9184)
!9205 = !DILocation(line: 197, column: 30, scope: !9166)
!9206 = !DILocation(line: 197, column: 38, scope: !9166)
!9207 = !DILocation(line: 197, column: 13, scope: !9166)
!9208 = !DILocation(line: 197, column: 10, scope: !9166)
!9209 = !DILocation(line: 197, column: 12, scope: !9166)
!9210 = !DILocation(line: 198, column: 30, scope: !9166)
!9211 = !DILocation(line: 198, column: 38, scope: !9166)
!9212 = !DILocation(line: 198, column: 13, scope: !9166)
!9213 = !DILocation(line: 198, column: 10, scope: !9166)
!9214 = !DILocation(line: 198, column: 12, scope: !9166)
!9215 = !DILocation(line: 199, column: 30, scope: !9166)
!9216 = !DILocation(line: 199, column: 38, scope: !9166)
!9217 = !DILocation(line: 199, column: 13, scope: !9166)
!9218 = !DILocation(line: 199, column: 10, scope: !9166)
!9219 = !DILocation(line: 199, column: 12, scope: !9166)
!9220 = !DILocation(line: 200, column: 30, scope: !9166)
!9221 = !DILocation(line: 200, column: 13, scope: !9166)
!9222 = !DILocation(line: 200, column: 10, scope: !9166)
!9223 = !DILocation(line: 200, column: 12, scope: !9166)
!9224 = !DILocation(line: 201, column: 10, scope: !9166)
!9225 = !DILocation(line: 201, column: 3, scope: !9166)
!9226 = !DILocation(line: 202, column: 1, scope: !9166)
!9227 = distinct !DISubprogram(name: "PopDoublePixel", scope: !1, file: !1, line: 114, type: !9228, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!436, !459, !9230, !717}
!9230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!9231 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !9227, file: !1, line: 114, type: !459)
!9232 = !DILocation(line: 114, column: 58, scope: !9227)
!9233 = !DILocalVariable(name: "pixel", arg: 2, scope: !9227, file: !1, line: 115, type: !9230)
!9234 = !DILocation(line: 115, column: 16, scope: !9227)
!9235 = !DILocalVariable(name: "pixels", arg: 3, scope: !9227, file: !1, line: 115, type: !717)
!9236 = !DILocation(line: 115, column: 46, scope: !9227)
!9237 = !DILocalVariable(name: "p", scope: !9227, file: !1, line: 118, type: !505)
!9238 = !DILocation(line: 118, column: 6, scope: !9227)
!9239 = !DILocalVariable(name: "quantum", scope: !9227, file: !1, line: 121, type: !9240)
!9240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 64, elements: !9241)
!9241 = !{!9242}
!9242 = !DISubrange(count: 8)
!9243 = !DILocation(line: 121, column: 5, scope: !9227)
!9244 = !DILocation(line: 123, column: 28, scope: !9227)
!9245 = !DILocation(line: 123, column: 10, scope: !9227)
!9246 = !DILocation(line: 124, column: 16, scope: !9227)
!9247 = !DILocation(line: 124, column: 5, scope: !9227)
!9248 = !DILocation(line: 124, column: 4, scope: !9227)
!9249 = !DILocation(line: 125, column: 16, scope: !9227)
!9250 = !DILocation(line: 125, column: 22, scope: !9227)
!9251 = !DILocation(line: 125, column: 36, scope: !9227)
!9252 = !DILocation(line: 125, column: 42, scope: !9227)
!9253 = !DILocation(line: 125, column: 21, scope: !9227)
!9254 = !DILocation(line: 125, column: 56, scope: !9227)
!9255 = !DILocation(line: 125, column: 70, scope: !9227)
!9256 = !DILocation(line: 125, column: 55, scope: !9227)
!9257 = !DILocation(line: 125, column: 4, scope: !9227)
!9258 = !DILocation(line: 125, column: 5, scope: !9227)
!9259 = !DILocation(line: 126, column: 7, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9227, file: !1, line: 126, column: 7)
!9261 = !DILocation(line: 126, column: 21, scope: !9260)
!9262 = !DILocation(line: 126, column: 28, scope: !9260)
!9263 = !DILocation(line: 126, column: 7, scope: !9227)
!9264 = !DILocation(line: 128, column: 17, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9260, file: !1, line: 127, column: 5)
!9266 = !DILocation(line: 128, column: 14, scope: !9265)
!9267 = !DILocation(line: 128, column: 16, scope: !9265)
!9268 = !DILocation(line: 129, column: 17, scope: !9265)
!9269 = !DILocation(line: 129, column: 14, scope: !9265)
!9270 = !DILocation(line: 129, column: 16, scope: !9265)
!9271 = !DILocation(line: 130, column: 17, scope: !9265)
!9272 = !DILocation(line: 130, column: 14, scope: !9265)
!9273 = !DILocation(line: 130, column: 16, scope: !9265)
!9274 = !DILocation(line: 131, column: 17, scope: !9265)
!9275 = !DILocation(line: 131, column: 14, scope: !9265)
!9276 = !DILocation(line: 131, column: 16, scope: !9265)
!9277 = !DILocation(line: 132, column: 17, scope: !9265)
!9278 = !DILocation(line: 132, column: 14, scope: !9265)
!9279 = !DILocation(line: 132, column: 16, scope: !9265)
!9280 = !DILocation(line: 133, column: 17, scope: !9265)
!9281 = !DILocation(line: 133, column: 14, scope: !9265)
!9282 = !DILocation(line: 133, column: 16, scope: !9265)
!9283 = !DILocation(line: 134, column: 17, scope: !9265)
!9284 = !DILocation(line: 134, column: 14, scope: !9265)
!9285 = !DILocation(line: 134, column: 16, scope: !9265)
!9286 = !DILocation(line: 135, column: 17, scope: !9265)
!9287 = !DILocation(line: 135, column: 14, scope: !9265)
!9288 = !DILocation(line: 135, column: 16, scope: !9265)
!9289 = !DILocation(line: 136, column: 14, scope: !9265)
!9290 = !DILocation(line: 136, column: 7, scope: !9265)
!9291 = !DILocation(line: 138, column: 13, scope: !9227)
!9292 = !DILocation(line: 138, column: 10, scope: !9227)
!9293 = !DILocation(line: 138, column: 12, scope: !9227)
!9294 = !DILocation(line: 139, column: 13, scope: !9227)
!9295 = !DILocation(line: 139, column: 10, scope: !9227)
!9296 = !DILocation(line: 139, column: 12, scope: !9227)
!9297 = !DILocation(line: 140, column: 13, scope: !9227)
!9298 = !DILocation(line: 140, column: 10, scope: !9227)
!9299 = !DILocation(line: 140, column: 12, scope: !9227)
!9300 = !DILocation(line: 141, column: 13, scope: !9227)
!9301 = !DILocation(line: 141, column: 10, scope: !9227)
!9302 = !DILocation(line: 141, column: 12, scope: !9227)
!9303 = !DILocation(line: 142, column: 13, scope: !9227)
!9304 = !DILocation(line: 142, column: 10, scope: !9227)
!9305 = !DILocation(line: 142, column: 12, scope: !9227)
!9306 = !DILocation(line: 143, column: 13, scope: !9227)
!9307 = !DILocation(line: 143, column: 10, scope: !9227)
!9308 = !DILocation(line: 143, column: 12, scope: !9227)
!9309 = !DILocation(line: 144, column: 13, scope: !9227)
!9310 = !DILocation(line: 144, column: 10, scope: !9227)
!9311 = !DILocation(line: 144, column: 12, scope: !9227)
!9312 = !DILocation(line: 145, column: 13, scope: !9227)
!9313 = !DILocation(line: 145, column: 10, scope: !9227)
!9314 = !DILocation(line: 145, column: 12, scope: !9227)
!9315 = !DILocation(line: 146, column: 10, scope: !9227)
!9316 = !DILocation(line: 146, column: 3, scope: !9227)
!9317 = !DILocation(line: 147, column: 1, scope: !9227)
!9318 = distinct !DISubprogram(name: "GetQuantumRange", scope: !462, file: !462, line: 91, type: !9319, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{!506, !9321}
!9321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!9322 = !DILocalVariable(name: "depth", arg: 1, scope: !9318, file: !462, line: 91, type: !9321)
!9323 = !DILocation(line: 91, column: 59, scope: !9318)
!9324 = !DILocalVariable(name: "one", scope: !9318, file: !462, line: 94, type: !506)
!9325 = !DILocation(line: 94, column: 5, scope: !9318)
!9326 = !DILocation(line: 96, column: 6, scope: !9318)
!9327 = !DILocation(line: 97, column: 29, scope: !9318)
!9328 = !DILocation(line: 97, column: 37, scope: !9318)
!9329 = !DILocation(line: 97, column: 42, scope: !9318)
!9330 = !DILocation(line: 97, column: 33, scope: !9318)
!9331 = !DILocation(line: 97, column: 49, scope: !9318)
!9332 = !DILocation(line: 97, column: 57, scope: !9318)
!9333 = !DILocation(line: 97, column: 62, scope: !9318)
!9334 = !DILocation(line: 97, column: 53, scope: !9318)
!9335 = !DILocation(line: 97, column: 66, scope: !9318)
!9336 = !DILocation(line: 97, column: 46, scope: !9318)
!9337 = !DILocation(line: 97, column: 3, scope: !9318)
!9338 = distinct !DISubprogram(name: "PopQuantumPixel", scope: !1, file: !1, line: 177, type: !9339, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!436, !459, !9341, !717}
!9341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!9342 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !9338, file: !1, line: 177, type: !459)
!9343 = !DILocation(line: 177, column: 59, scope: !9338)
!9344 = !DILocalVariable(name: "pixel", arg: 2, scope: !9338, file: !1, line: 178, type: !9341)
!9345 = !DILocation(line: 178, column: 20, scope: !9338)
!9346 = !DILocalVariable(name: "pixels", arg: 3, scope: !9338, file: !1, line: 178, type: !717)
!9347 = !DILocation(line: 178, column: 50, scope: !9338)
!9348 = !DILocalVariable(name: "i", scope: !9338, file: !1, line: 181, type: !453)
!9349 = !DILocation(line: 181, column: 5, scope: !9338)
!9350 = !DILocalVariable(name: "quantum_bits", scope: !9338, file: !1, line: 184, type: !465)
!9351 = !DILocation(line: 184, column: 5, scope: !9338)
!9352 = !DILocation(line: 186, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9338, file: !1, line: 186, column: 7)
!9354 = !DILocation(line: 186, column: 21, scope: !9353)
!9355 = !DILocation(line: 186, column: 27, scope: !9353)
!9356 = !DILocation(line: 186, column: 32, scope: !9353)
!9357 = !DILocation(line: 186, column: 7, scope: !9338)
!9358 = !DILocation(line: 187, column: 5, scope: !9353)
!9359 = !DILocation(line: 187, column: 19, scope: !9353)
!9360 = !DILocation(line: 187, column: 25, scope: !9353)
!9361 = !DILocation(line: 187, column: 29, scope: !9353)
!9362 = !DILocation(line: 188, column: 20, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9338, file: !1, line: 188, column: 3)
!9364 = !DILocation(line: 188, column: 34, scope: !9363)
!9365 = !DILocation(line: 188, column: 9, scope: !9363)
!9366 = !DILocation(line: 188, column: 8, scope: !9363)
!9367 = !DILocation(line: 188, column: 41, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9363, file: !1, line: 188, column: 3)
!9369 = !DILocation(line: 188, column: 43, scope: !9368)
!9370 = !DILocation(line: 188, column: 3, scope: !9363)
!9371 = !DILocation(line: 190, column: 27, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9368, file: !1, line: 189, column: 3)
!9373 = !DILocation(line: 190, column: 17, scope: !9372)
!9374 = !DILocation(line: 191, column: 9, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9372, file: !1, line: 191, column: 9)
!9376 = !DILocation(line: 191, column: 24, scope: !9375)
!9377 = !DILocation(line: 191, column: 38, scope: !9375)
!9378 = !DILocation(line: 191, column: 44, scope: !9375)
!9379 = !DILocation(line: 191, column: 22, scope: !9375)
!9380 = !DILocation(line: 191, column: 9, scope: !9372)
!9381 = !DILocation(line: 192, column: 20, scope: !9375)
!9382 = !DILocation(line: 192, column: 34, scope: !9375)
!9383 = !DILocation(line: 192, column: 40, scope: !9375)
!9384 = !DILocation(line: 192, column: 19, scope: !9375)
!9385 = !DILocation(line: 192, column: 7, scope: !9375)
!9386 = !DILocation(line: 193, column: 18, scope: !9372)
!9387 = !DILocation(line: 193, column: 6, scope: !9372)
!9388 = !DILocation(line: 194, column: 9, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9372, file: !1, line: 194, column: 9)
!9390 = !DILocation(line: 194, column: 11, scope: !9389)
!9391 = !DILocation(line: 194, column: 9, scope: !9372)
!9392 = !DILocation(line: 195, column: 8, scope: !9389)
!9393 = !DILocation(line: 195, column: 7, scope: !9389)
!9394 = !DILocation(line: 196, column: 9, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9372, file: !1, line: 196, column: 9)
!9396 = !DILocation(line: 196, column: 23, scope: !9395)
!9397 = !DILocation(line: 196, column: 29, scope: !9395)
!9398 = !DILocation(line: 196, column: 34, scope: !9395)
!9399 = !DILocation(line: 196, column: 9, scope: !9372)
!9400 = !DILocation(line: 197, column: 8, scope: !9395)
!9401 = !DILocation(line: 197, column: 14, scope: !9395)
!9402 = !DILocation(line: 197, column: 7, scope: !9395)
!9403 = !DILocation(line: 198, column: 31, scope: !9372)
!9404 = !DILocation(line: 198, column: 5, scope: !9372)
!9405 = !DILocation(line: 198, column: 19, scope: !9372)
!9406 = !DILocation(line: 198, column: 25, scope: !9372)
!9407 = !DILocation(line: 198, column: 29, scope: !9372)
!9408 = !DILocation(line: 199, column: 17, scope: !9372)
!9409 = !DILocation(line: 199, column: 26, scope: !9372)
!9410 = !DILocation(line: 199, column: 23, scope: !9372)
!9411 = !DILocation(line: 199, column: 43, scope: !9372)
!9412 = !DILocation(line: 199, column: 40, scope: !9372)
!9413 = !DILocation(line: 199, column: 30, scope: !9372)
!9414 = !DILocation(line: 199, column: 29, scope: !9372)
!9415 = !DILocation(line: 200, column: 7, scope: !9372)
!9416 = !DILocation(line: 200, column: 21, scope: !9372)
!9417 = !DILocation(line: 200, column: 27, scope: !9372)
!9418 = !DILocation(line: 199, column: 58, scope: !9372)
!9419 = !DILocation(line: 199, column: 6, scope: !9372)
!9420 = !DILocation(line: 199, column: 12, scope: !9372)
!9421 = !DILocation(line: 201, column: 9, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9372, file: !1, line: 201, column: 9)
!9423 = !DILocation(line: 201, column: 23, scope: !9422)
!9424 = !DILocation(line: 201, column: 29, scope: !9422)
!9425 = !DILocation(line: 201, column: 34, scope: !9422)
!9426 = !DILocation(line: 201, column: 9, scope: !9372)
!9427 = !DILocation(line: 203, column: 15, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9422, file: !1, line: 202, column: 7)
!9429 = !DILocation(line: 204, column: 9, scope: !9428)
!9430 = !DILocation(line: 204, column: 23, scope: !9428)
!9431 = !DILocation(line: 204, column: 29, scope: !9428)
!9432 = !DILocation(line: 204, column: 33, scope: !9428)
!9433 = !DILocation(line: 205, column: 7, scope: !9428)
!9434 = !DILocation(line: 188, column: 3, scope: !9368)
!9435 = distinct !{!9435, !9370, !9436}
!9436 = !DILocation(line: 206, column: 3, scope: !9363)
!9437 = !DILocation(line: 207, column: 10, scope: !9338)
!9438 = !DILocation(line: 207, column: 3, scope: !9338)
!9439 = distinct !DISubprogram(name: "ScaleQuantumToAny", scope: !462, file: !462, line: 281, type: !9440, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{!508, !8859, !9341}
!9442 = !DILocalVariable(name: "quantum", arg: 1, scope: !9439, file: !462, line: 281, type: !8859)
!9443 = !DILocation(line: 281, column: 58, scope: !9439)
!9444 = !DILocalVariable(name: "range", arg: 2, scope: !9439, file: !462, line: 282, type: !9341)
!9445 = !DILocation(line: 282, column: 20, scope: !9439)
!9446 = !DILocation(line: 284, column: 42, scope: !9439)
!9447 = !DILocation(line: 284, column: 25, scope: !9439)
!9448 = !DILocation(line: 284, column: 48, scope: !9439)
!9449 = !DILocation(line: 284, column: 47, scope: !9439)
!9450 = !DILocation(line: 284, column: 56, scope: !9439)
!9451 = !DILocation(line: 284, column: 24, scope: !9439)
!9452 = !DILocation(line: 284, column: 69, scope: !9439)
!9453 = !DILocation(line: 284, column: 10, scope: !9439)
!9454 = !DILocation(line: 284, column: 3, scope: !9439)
!9455 = distinct !DISubprogram(name: "PopQuantumLongPixel", scope: !1, file: !1, line: 210, type: !9456, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{!436, !459, !9321, !717}
!9458 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !9455, file: !1, line: 210, type: !459)
!9459 = !DILocation(line: 210, column: 63, scope: !9455)
!9460 = !DILocalVariable(name: "pixel", arg: 2, scope: !9455, file: !1, line: 211, type: !9321)
!9461 = !DILocation(line: 211, column: 16, scope: !9455)
!9462 = !DILocalVariable(name: "pixels", arg: 3, scope: !9455, file: !1, line: 211, type: !717)
!9463 = !DILocation(line: 211, column: 46, scope: !9455)
!9464 = !DILocalVariable(name: "i", scope: !9455, file: !1, line: 214, type: !453)
!9465 = !DILocation(line: 214, column: 5, scope: !9455)
!9466 = !DILocalVariable(name: "quantum_bits", scope: !9455, file: !1, line: 217, type: !465)
!9467 = !DILocation(line: 217, column: 5, scope: !9455)
!9468 = !DILocation(line: 219, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9455, file: !1, line: 219, column: 7)
!9470 = !DILocation(line: 219, column: 21, scope: !9469)
!9471 = !DILocation(line: 219, column: 27, scope: !9469)
!9472 = !DILocation(line: 219, column: 32, scope: !9469)
!9473 = !DILocation(line: 219, column: 7, scope: !9455)
!9474 = !DILocation(line: 220, column: 5, scope: !9469)
!9475 = !DILocation(line: 220, column: 19, scope: !9469)
!9476 = !DILocation(line: 220, column: 25, scope: !9469)
!9477 = !DILocation(line: 220, column: 29, scope: !9469)
!9478 = !DILocation(line: 221, column: 20, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9455, file: !1, line: 221, column: 3)
!9480 = !DILocation(line: 221, column: 34, scope: !9479)
!9481 = !DILocation(line: 221, column: 9, scope: !9479)
!9482 = !DILocation(line: 221, column: 8, scope: !9479)
!9483 = !DILocation(line: 221, column: 41, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9479, file: !1, line: 221, column: 3)
!9485 = !DILocation(line: 221, column: 43, scope: !9484)
!9486 = !DILocation(line: 221, column: 3, scope: !9479)
!9487 = !DILocation(line: 223, column: 27, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9484, file: !1, line: 222, column: 3)
!9489 = !DILocation(line: 223, column: 17, scope: !9488)
!9490 = !DILocation(line: 224, column: 9, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9488, file: !1, line: 224, column: 9)
!9492 = !DILocation(line: 224, column: 24, scope: !9491)
!9493 = !DILocation(line: 224, column: 38, scope: !9491)
!9494 = !DILocation(line: 224, column: 44, scope: !9491)
!9495 = !DILocation(line: 224, column: 22, scope: !9491)
!9496 = !DILocation(line: 224, column: 9, scope: !9488)
!9497 = !DILocation(line: 225, column: 20, scope: !9491)
!9498 = !DILocation(line: 225, column: 34, scope: !9491)
!9499 = !DILocation(line: 225, column: 40, scope: !9491)
!9500 = !DILocation(line: 225, column: 19, scope: !9491)
!9501 = !DILocation(line: 225, column: 7, scope: !9491)
!9502 = !DILocation(line: 226, column: 35, scope: !9488)
!9503 = !DILocation(line: 226, column: 45, scope: !9488)
!9504 = !DILocation(line: 226, column: 59, scope: !9488)
!9505 = !DILocation(line: 226, column: 65, scope: !9488)
!9506 = !DILocation(line: 226, column: 64, scope: !9488)
!9507 = !DILocation(line: 226, column: 41, scope: !9488)
!9508 = !DILocation(line: 227, column: 7, scope: !9488)
!9509 = !DILocation(line: 227, column: 21, scope: !9488)
!9510 = !DILocation(line: 227, column: 27, scope: !9488)
!9511 = !DILocation(line: 227, column: 32, scope: !9488)
!9512 = !DILocation(line: 226, column: 69, scope: !9488)
!9513 = !DILocation(line: 228, column: 12, scope: !9488)
!9514 = !DILocation(line: 228, column: 26, scope: !9488)
!9515 = !DILocation(line: 228, column: 32, scope: !9488)
!9516 = !DILocation(line: 228, column: 11, scope: !9488)
!9517 = !DILocation(line: 227, column: 47, scope: !9488)
!9518 = !DILocation(line: 226, column: 5, scope: !9488)
!9519 = !DILocation(line: 226, column: 19, scope: !9488)
!9520 = !DILocation(line: 226, column: 25, scope: !9488)
!9521 = !DILocation(line: 226, column: 30, scope: !9488)
!9522 = !DILocation(line: 229, column: 18, scope: !9488)
!9523 = !DILocation(line: 229, column: 6, scope: !9488)
!9524 = !DILocation(line: 230, column: 31, scope: !9488)
!9525 = !DILocation(line: 230, column: 5, scope: !9488)
!9526 = !DILocation(line: 230, column: 19, scope: !9488)
!9527 = !DILocation(line: 230, column: 25, scope: !9488)
!9528 = !DILocation(line: 230, column: 29, scope: !9488)
!9529 = !DILocation(line: 231, column: 9, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9488, file: !1, line: 231, column: 9)
!9531 = !DILocation(line: 231, column: 23, scope: !9530)
!9532 = !DILocation(line: 231, column: 29, scope: !9530)
!9533 = !DILocation(line: 231, column: 34, scope: !9530)
!9534 = !DILocation(line: 231, column: 9, scope: !9488)
!9535 = !DILocation(line: 233, column: 29, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9530, file: !1, line: 232, column: 7)
!9537 = !DILocation(line: 233, column: 43, scope: !9536)
!9538 = !DILocation(line: 233, column: 50, scope: !9536)
!9539 = !DILocation(line: 233, column: 64, scope: !9536)
!9540 = !DILocation(line: 233, column: 70, scope: !9536)
!9541 = !DILocation(line: 234, column: 11, scope: !9536)
!9542 = !DILocation(line: 233, column: 16, scope: !9536)
!9543 = !DILocation(line: 233, column: 15, scope: !9536)
!9544 = !DILocation(line: 235, column: 9, scope: !9536)
!9545 = !DILocation(line: 235, column: 23, scope: !9536)
!9546 = !DILocation(line: 235, column: 29, scope: !9536)
!9547 = !DILocation(line: 235, column: 34, scope: !9536)
!9548 = !DILocation(line: 236, column: 9, scope: !9536)
!9549 = !DILocation(line: 236, column: 23, scope: !9536)
!9550 = !DILocation(line: 236, column: 29, scope: !9536)
!9551 = !DILocation(line: 236, column: 33, scope: !9536)
!9552 = !DILocation(line: 237, column: 7, scope: !9536)
!9553 = !DILocation(line: 221, column: 3, scope: !9484)
!9554 = distinct !{!9554, !9486, !9555}
!9555 = !DILocation(line: 238, column: 3, scope: !9479)
!9556 = !DILocation(line: 239, column: 10, scope: !9455)
!9557 = !DILocation(line: 239, column: 3, scope: !9455)
!9558 = distinct !DISubprogram(name: "GetPixelLuma", scope: !9559, file: !9559, line: 116, type: !9560, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!9559 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!501, !9562, !740}
!9562 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !519)
!9563 = !DILocalVariable(name: "image", arg: 1, scope: !9558, file: !9559, line: 116, type: !9562)
!9564 = !DILocation(line: 116, column: 65, scope: !9558)
!9565 = !DILocalVariable(name: "pixel", arg: 2, scope: !9558, file: !9559, line: 117, type: !740)
!9566 = !DILocation(line: 117, column: 31, scope: !9558)
!9567 = !DILocation(line: 119, column: 7, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9558, file: !9559, line: 119, column: 7)
!9569 = !DILocation(line: 119, column: 14, scope: !9568)
!9570 = !DILocation(line: 119, column: 25, scope: !9568)
!9571 = !DILocation(line: 119, column: 7, scope: !9558)
!9572 = !DILocation(line: 120, column: 29, scope: !9568)
!9573 = !DILocation(line: 120, column: 36, scope: !9568)
!9574 = !DILocation(line: 120, column: 12, scope: !9568)
!9575 = !DILocation(line: 120, column: 5, scope: !9568)
!9576 = !DILocation(line: 121, column: 20, scope: !9558)
!9577 = !DILocation(line: 121, column: 27, scope: !9558)
!9578 = !DILocation(line: 121, column: 19, scope: !9558)
!9579 = !DILocation(line: 121, column: 41, scope: !9558)
!9580 = !DILocation(line: 121, column: 48, scope: !9558)
!9581 = !DILocation(line: 121, column: 40, scope: !9558)
!9582 = !DILocation(line: 121, column: 30, scope: !9558)
!9583 = !DILocation(line: 121, column: 64, scope: !9558)
!9584 = !DILocation(line: 121, column: 71, scope: !9558)
!9585 = !DILocation(line: 121, column: 63, scope: !9558)
!9586 = !DILocation(line: 121, column: 53, scope: !9558)
!9587 = !DILocation(line: 121, column: 3, scope: !9558)
!9588 = !DILocation(line: 122, column: 1, scope: !9558)
